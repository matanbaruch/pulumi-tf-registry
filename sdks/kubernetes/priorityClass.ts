// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PriorityClass extends pulumi.CustomResource {
    /**
     * Get an existing PriorityClass resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PriorityClassState, opts?: pulumi.CustomResourceOptions): PriorityClass {
        return new PriorityClass(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kubernetes:index/priorityClass:PriorityClass';

    /**
     * Returns true if the given object is an instance of PriorityClass.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PriorityClass {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PriorityClass.__pulumiType;
    }

    /**
     * An arbitrary string that usually provides guidelines on when this priority class should be used.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority
     * class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with
     * their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the
     * default priority.
     */
    public readonly globalDefault!: pulumi.Output<boolean | undefined>;
    /**
     * Standard priority class's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    public readonly metadata!: pulumi.Output<outputs.PriorityClassMetadata>;
    /**
     * PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to
     * PreemptLowerPriority if unset.
     */
    public readonly preemptionPolicy!: pulumi.Output<string | undefined>;
    /**
     * The value of this priority class. This is the actual priority that pods receive when they have the name of this class in
     * their pod spec.
     */
    public readonly value!: pulumi.Output<number>;

    /**
     * Create a PriorityClass resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PriorityClassArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PriorityClassArgs | PriorityClassState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PriorityClassState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["globalDefault"] = state ? state.globalDefault : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["preemptionPolicy"] = state ? state.preemptionPolicy : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as PriorityClassArgs | undefined;
            if ((!args || args.metadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metadata'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["globalDefault"] = args ? args.globalDefault : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["preemptionPolicy"] = args ? args.preemptionPolicy : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PriorityClass.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PriorityClass resources.
 */
export interface PriorityClassState {
    /**
     * An arbitrary string that usually provides guidelines on when this priority class should be used.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority
     * class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with
     * their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the
     * default priority.
     */
    globalDefault?: pulumi.Input<boolean>;
    /**
     * Standard priority class's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata?: pulumi.Input<inputs.PriorityClassMetadata>;
    /**
     * PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to
     * PreemptLowerPriority if unset.
     */
    preemptionPolicy?: pulumi.Input<string>;
    /**
     * The value of this priority class. This is the actual priority that pods receive when they have the name of this class in
     * their pod spec.
     */
    value?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PriorityClass resource.
 */
export interface PriorityClassArgs {
    /**
     * An arbitrary string that usually provides guidelines on when this priority class should be used.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority
     * class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with
     * their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the
     * default priority.
     */
    globalDefault?: pulumi.Input<boolean>;
    /**
     * Standard priority class's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata: pulumi.Input<inputs.PriorityClassMetadata>;
    /**
     * PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to
     * PreemptLowerPriority if unset.
     */
    preemptionPolicy?: pulumi.Input<string>;
    /**
     * The value of this priority class. This is the actual priority that pods receive when they have the name of this class in
     * their pod spec.
     */
    value: pulumi.Input<number>;
}
