// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConfigMapV1(args: GetConfigMapV1Args, opts?: pulumi.InvokeOptions): Promise<GetConfigMapV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getConfigMapV1:getConfigMapV1", {
        "id": args.id,
        "immutable": args.immutable,
        "metadata": args.metadata,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigMapV1.
 */
export interface GetConfigMapV1Args {
    id?: string;
    immutable?: boolean;
    metadata: inputs.GetConfigMapV1Metadata;
}

/**
 * A collection of values returned by getConfigMapV1.
 */
export interface GetConfigMapV1Result {
    readonly binaryData: {[key: string]: string};
    readonly data: {[key: string]: string};
    readonly id: string;
    readonly immutable?: boolean;
    readonly metadata: outputs.GetConfigMapV1Metadata;
}
export function getConfigMapV1Output(args: GetConfigMapV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigMapV1Result> {
    return pulumi.output(args).apply((a: any) => getConfigMapV1(a, opts))
}

/**
 * A collection of arguments for invoking getConfigMapV1.
 */
export interface GetConfigMapV1OutputArgs {
    id?: pulumi.Input<string>;
    immutable?: pulumi.Input<boolean>;
    metadata: pulumi.Input<inputs.GetConfigMapV1MetadataArgs>;
}
