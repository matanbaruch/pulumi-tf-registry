// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceAccountV1(args: GetServiceAccountV1Args, opts?: pulumi.InvokeOptions): Promise<GetServiceAccountV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getServiceAccountV1:getServiceAccountV1", {
        "id": args.id,
        "metadata": args.metadata,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceAccountV1.
 */
export interface GetServiceAccountV1Args {
    id?: string;
    metadata: inputs.GetServiceAccountV1Metadata;
}

/**
 * A collection of values returned by getServiceAccountV1.
 */
export interface GetServiceAccountV1Result {
    readonly automountServiceAccountToken: boolean;
    /**
     * @deprecated Deprecated
     */
    readonly defaultSecretName: string;
    readonly id: string;
    readonly imagePullSecrets: outputs.GetServiceAccountV1ImagePullSecret[];
    readonly metadata: outputs.GetServiceAccountV1Metadata;
    readonly secrets: outputs.GetServiceAccountV1Secret[];
}
export function getServiceAccountV1Output(args: GetServiceAccountV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceAccountV1Result> {
    return pulumi.output(args).apply((a: any) => getServiceAccountV1(a, opts))
}

/**
 * A collection of arguments for invoking getServiceAccountV1.
 */
export interface GetServiceAccountV1OutputArgs {
    id?: pulumi.Input<string>;
    metadata: pulumi.Input<inputs.GetServiceAccountV1MetadataArgs>;
}
