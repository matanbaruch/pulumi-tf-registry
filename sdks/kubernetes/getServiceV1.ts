// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceV1(args: GetServiceV1Args, opts?: pulumi.InvokeOptions): Promise<GetServiceV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getServiceV1:getServiceV1", {
        "id": args.id,
        "metadata": args.metadata,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceV1.
 */
export interface GetServiceV1Args {
    id?: string;
    metadata: inputs.GetServiceV1Metadata;
}

/**
 * A collection of values returned by getServiceV1.
 */
export interface GetServiceV1Result {
    readonly id: string;
    readonly metadata: outputs.GetServiceV1Metadata;
    readonly specs: outputs.GetServiceV1Spec[];
    readonly statuses: outputs.GetServiceV1Status[];
}
export function getServiceV1Output(args: GetServiceV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceV1Result> {
    return pulumi.output(args).apply((a: any) => getServiceV1(a, opts))
}

/**
 * A collection of arguments for invoking getServiceV1.
 */
export interface GetServiceV1OutputArgs {
    id?: pulumi.Input<string>;
    metadata: pulumi.Input<inputs.GetServiceV1MetadataArgs>;
}
