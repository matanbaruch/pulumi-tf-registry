// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Manifest extends pulumi.CustomResource {
    /**
     * Get an existing Manifest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManifestState, opts?: pulumi.CustomResourceOptions): Manifest {
        return new Manifest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kubernetes:index/manifest:Manifest';

    /**
     * Returns true if the given object is an instance of Manifest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Manifest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Manifest.__pulumiType;
    }

    /**
     * List of manifest fields whose values can be altered by the API server during 'apply'. Defaults to:
     * ["metadata.annotations", "metadata.labels"]
     */
    public readonly computedFields!: pulumi.Output<string[] | undefined>;
    /**
     * Configure field manager options.
     */
    public readonly fieldManager!: pulumi.Output<outputs.ManifestFieldManager | undefined>;
    /**
     * A Kubernetes manifest describing the desired state of the resource in HCL format.
     */
    public readonly manifest!: pulumi.Output<any>;
    /**
     * The resulting resource state, as returned by the API server after applying the desired state from `manifest`.
     */
    public readonly object!: pulumi.Output<any>;
    public readonly timeouts!: pulumi.Output<outputs.ManifestTimeouts | undefined>;
    /**
     * Configure waiter options.
     */
    public readonly wait!: pulumi.Output<outputs.ManifestWait | undefined>;
    /**
     * A map of attribute paths and desired patterns to be matched. After each apply the provider will wait for all attributes
     * listed here to reach a value that matches the desired pattern.
     *
     * @deprecated Deprecated
     */
    public readonly waitFor!: pulumi.Output<outputs.ManifestWaitFor | undefined>;

    /**
     * Create a Manifest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManifestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManifestArgs | ManifestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManifestState | undefined;
            resourceInputs["computedFields"] = state ? state.computedFields : undefined;
            resourceInputs["fieldManager"] = state ? state.fieldManager : undefined;
            resourceInputs["manifest"] = state ? state.manifest : undefined;
            resourceInputs["object"] = state ? state.object : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["wait"] = state ? state.wait : undefined;
            resourceInputs["waitFor"] = state ? state.waitFor : undefined;
        } else {
            const args = argsOrState as ManifestArgs | undefined;
            if ((!args || args.manifest === undefined) && !opts.urn) {
                throw new Error("Missing required property 'manifest'");
            }
            resourceInputs["computedFields"] = args ? args.computedFields : undefined;
            resourceInputs["fieldManager"] = args ? args.fieldManager : undefined;
            resourceInputs["manifest"] = args ? args.manifest : undefined;
            resourceInputs["object"] = args ? args.object : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["wait"] = args ? args.wait : undefined;
            resourceInputs["waitFor"] = args ? args.waitFor : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Manifest.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Manifest resources.
 */
export interface ManifestState {
    /**
     * List of manifest fields whose values can be altered by the API server during 'apply'. Defaults to:
     * ["metadata.annotations", "metadata.labels"]
     */
    computedFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Configure field manager options.
     */
    fieldManager?: pulumi.Input<inputs.ManifestFieldManager>;
    /**
     * A Kubernetes manifest describing the desired state of the resource in HCL format.
     */
    manifest?: any;
    /**
     * The resulting resource state, as returned by the API server after applying the desired state from `manifest`.
     */
    object?: any;
    timeouts?: pulumi.Input<inputs.ManifestTimeouts>;
    /**
     * Configure waiter options.
     */
    wait?: pulumi.Input<inputs.ManifestWait>;
    /**
     * A map of attribute paths and desired patterns to be matched. After each apply the provider will wait for all attributes
     * listed here to reach a value that matches the desired pattern.
     *
     * @deprecated Deprecated
     */
    waitFor?: pulumi.Input<inputs.ManifestWaitFor>;
}

/**
 * The set of arguments for constructing a Manifest resource.
 */
export interface ManifestArgs {
    /**
     * List of manifest fields whose values can be altered by the API server during 'apply'. Defaults to:
     * ["metadata.annotations", "metadata.labels"]
     */
    computedFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Configure field manager options.
     */
    fieldManager?: pulumi.Input<inputs.ManifestFieldManager>;
    /**
     * A Kubernetes manifest describing the desired state of the resource in HCL format.
     */
    manifest: any;
    /**
     * The resulting resource state, as returned by the API server after applying the desired state from `manifest`.
     */
    object?: any;
    timeouts?: pulumi.Input<inputs.ManifestTimeouts>;
    /**
     * Configure waiter options.
     */
    wait?: pulumi.Input<inputs.ManifestWait>;
    /**
     * A map of attribute paths and desired patterns to be matched. After each apply the provider will wait for all attributes
     * listed here to reach a value that matches the desired pattern.
     *
     * @deprecated Deprecated
     */
    waitFor?: pulumi.Input<inputs.ManifestWaitFor>;
}
