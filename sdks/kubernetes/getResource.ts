// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResource(args: GetResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getResource:getResource", {
        "apiVersion": args.apiVersion,
        "kind": args.kind,
        "metadata": args.metadata,
        "object": args.object,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceArgs {
    apiVersion: string;
    kind: string;
    metadata: inputs.GetResourceMetadata;
    object?: any;
}

/**
 * A collection of values returned by getResource.
 */
export interface GetResourceResult {
    readonly apiVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kind: string;
    readonly metadata: outputs.GetResourceMetadata;
    readonly object: any;
}
export function getResourceOutput(args: GetResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceResult> {
    return pulumi.output(args).apply((a: any) => getResource(a, opts))
}

/**
 * A collection of arguments for invoking getResource.
 */
export interface GetResourceOutputArgs {
    apiVersion: pulumi.Input<string>;
    kind: pulumi.Input<string>;
    metadata: pulumi.Input<inputs.GetResourceMetadataArgs>;
    object?: any;
}
