// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPersistentVolumeClaimV1(args: GetPersistentVolumeClaimV1Args, opts?: pulumi.InvokeOptions): Promise<GetPersistentVolumeClaimV1Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getPersistentVolumeClaimV1:getPersistentVolumeClaimV1", {
        "id": args.id,
        "metadata": args.metadata,
        "specs": args.specs,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPersistentVolumeClaimV1.
 */
export interface GetPersistentVolumeClaimV1Args {
    id?: string;
    metadata: inputs.GetPersistentVolumeClaimV1Metadata;
    specs?: inputs.GetPersistentVolumeClaimV1Spec[];
}

/**
 * A collection of values returned by getPersistentVolumeClaimV1.
 */
export interface GetPersistentVolumeClaimV1Result {
    readonly id: string;
    readonly metadata: outputs.GetPersistentVolumeClaimV1Metadata;
    readonly specs?: outputs.GetPersistentVolumeClaimV1Spec[];
}
export function getPersistentVolumeClaimV1Output(args: GetPersistentVolumeClaimV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPersistentVolumeClaimV1Result> {
    return pulumi.output(args).apply((a: any) => getPersistentVolumeClaimV1(a, opts))
}

/**
 * A collection of arguments for invoking getPersistentVolumeClaimV1.
 */
export interface GetPersistentVolumeClaimV1OutputArgs {
    id?: pulumi.Input<string>;
    metadata: pulumi.Input<inputs.GetPersistentVolumeClaimV1MetadataArgs>;
    specs?: pulumi.Input<pulumi.Input<inputs.GetPersistentVolumeClaimV1SpecArgs>[]>;
}
