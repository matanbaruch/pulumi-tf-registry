// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIngress(args: GetIngressArgs, opts?: pulumi.InvokeOptions): Promise<GetIngressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getIngress:getIngress", {
        "id": args.id,
        "metadata": args.metadata,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIngress.
 */
export interface GetIngressArgs {
    id?: string;
    metadata: inputs.GetIngressMetadata;
}

/**
 * A collection of values returned by getIngress.
 */
export interface GetIngressResult {
    readonly id: string;
    readonly metadata: outputs.GetIngressMetadata;
    readonly specs: outputs.GetIngressSpec[];
    readonly statuses: outputs.GetIngressStatus[];
}
export function getIngressOutput(args: GetIngressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIngressResult> {
    return pulumi.output(args).apply((a: any) => getIngress(a, opts))
}

/**
 * A collection of arguments for invoking getIngress.
 */
export interface GetIngressOutputArgs {
    id?: pulumi.Input<string>;
    metadata: pulumi.Input<inputs.GetIngressMetadataArgs>;
}
