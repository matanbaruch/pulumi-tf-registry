// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPersistentVolumeClaim(args: GetPersistentVolumeClaimArgs, opts?: pulumi.InvokeOptions): Promise<GetPersistentVolumeClaimResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getPersistentVolumeClaim:getPersistentVolumeClaim", {
        "id": args.id,
        "metadata": args.metadata,
        "specs": args.specs,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPersistentVolumeClaim.
 */
export interface GetPersistentVolumeClaimArgs {
    id?: string;
    metadata: inputs.GetPersistentVolumeClaimMetadata;
    specs?: inputs.GetPersistentVolumeClaimSpec[];
}

/**
 * A collection of values returned by getPersistentVolumeClaim.
 */
export interface GetPersistentVolumeClaimResult {
    readonly id: string;
    readonly metadata: outputs.GetPersistentVolumeClaimMetadata;
    readonly specs?: outputs.GetPersistentVolumeClaimSpec[];
}
export function getPersistentVolumeClaimOutput(args: GetPersistentVolumeClaimOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPersistentVolumeClaimResult> {
    return pulumi.output(args).apply((a: any) => getPersistentVolumeClaim(a, opts))
}

/**
 * A collection of arguments for invoking getPersistentVolumeClaim.
 */
export interface GetPersistentVolumeClaimOutputArgs {
    id?: pulumi.Input<string>;
    metadata: pulumi.Input<inputs.GetPersistentVolumeClaimMetadataArgs>;
    specs?: pulumi.Input<pulumi.Input<inputs.GetPersistentVolumeClaimSpecArgs>[]>;
}
