// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HorizontalPodAutoscalerV2 extends pulumi.CustomResource {
    /**
     * Get an existing HorizontalPodAutoscalerV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HorizontalPodAutoscalerV2State, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscalerV2 {
        return new HorizontalPodAutoscalerV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'kubernetes:index/horizontalPodAutoscalerV2:HorizontalPodAutoscalerV2';

    /**
     * Returns true if the given object is an instance of HorizontalPodAutoscalerV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HorizontalPodAutoscalerV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HorizontalPodAutoscalerV2.__pulumiType;
    }

    /**
     * Standard horizontal pod autoscaler's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    public readonly metadata!: pulumi.Output<outputs.HorizontalPodAutoscalerV2Metadata>;
    /**
     * Behaviour of the autoscaler. More info:
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    public readonly spec!: pulumi.Output<outputs.HorizontalPodAutoscalerV2Spec>;

    /**
     * Create a HorizontalPodAutoscalerV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HorizontalPodAutoscalerV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HorizontalPodAutoscalerV2Args | HorizontalPodAutoscalerV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HorizontalPodAutoscalerV2State | undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["spec"] = state ? state.spec : undefined;
        } else {
            const args = argsOrState as HorizontalPodAutoscalerV2Args | undefined;
            if ((!args || args.metadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metadata'");
            }
            if ((!args || args.spec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spec'");
            }
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["spec"] = args ? args.spec : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HorizontalPodAutoscalerV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HorizontalPodAutoscalerV2 resources.
 */
export interface HorizontalPodAutoscalerV2State {
    /**
     * Standard horizontal pod autoscaler's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata?: pulumi.Input<inputs.HorizontalPodAutoscalerV2Metadata>;
    /**
     * Behaviour of the autoscaler. More info:
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    spec?: pulumi.Input<inputs.HorizontalPodAutoscalerV2Spec>;
}

/**
 * The set of arguments for constructing a HorizontalPodAutoscalerV2 resource.
 */
export interface HorizontalPodAutoscalerV2Args {
    /**
     * Standard horizontal pod autoscaler's metadata. More info:
     * https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
     */
    metadata: pulumi.Input<inputs.HorizontalPodAutoscalerV2Metadata>;
    /**
     * Behaviour of the autoscaler. More info:
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    spec: pulumi.Input<inputs.HorizontalPodAutoscalerV2Spec>;
}
