// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAllNamespaces(args?: GetAllNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetAllNamespacesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("kubernetes:index/getAllNamespaces:getAllNamespaces", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAllNamespaces.
 */
export interface GetAllNamespacesArgs {
    id?: string;
}

/**
 * A collection of values returned by getAllNamespaces.
 */
export interface GetAllNamespacesResult {
    readonly id: string;
    readonly namespaces: string[];
}
export function getAllNamespacesOutput(args?: GetAllNamespacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAllNamespacesResult> {
    return pulumi.output(args).apply((a: any) => getAllNamespaces(a, opts))
}

/**
 * A collection of arguments for invoking getAllNamespaces.
 */
export interface GetAllNamespacesOutputArgs {
    id?: pulumi.Input<string>;
}
