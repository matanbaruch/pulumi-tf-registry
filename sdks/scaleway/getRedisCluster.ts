// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedisCluster(args?: GetRedisClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getRedisCluster:getRedisCluster", {
        "clusterId": args.clusterId,
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedisCluster.
 */
export interface GetRedisClusterArgs {
    clusterId?: string;
    id?: string;
    name?: string;
    projectId?: string;
    zone?: string;
}

/**
 * A collection of values returned by getRedisCluster.
 */
export interface GetRedisClusterResult {
    readonly acls: outputs.GetRedisClusterAcl[];
    readonly certificate: string;
    readonly clusterId?: string;
    readonly clusterSize: number;
    readonly createdAt: string;
    readonly id: string;
    readonly name?: string;
    readonly nodeType: string;
    readonly password: string;
    readonly privateNetworks: outputs.GetRedisClusterPrivateNetwork[];
    readonly projectId?: string;
    readonly publicNetworks: outputs.GetRedisClusterPublicNetwork[];
    readonly settings: {[key: string]: string};
    readonly tags: string[];
    readonly tlsEnabled: boolean;
    readonly updatedAt: string;
    readonly userName: string;
    readonly version: string;
    readonly zone?: string;
}
export function getRedisClusterOutput(args?: GetRedisClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisClusterResult> {
    return pulumi.output(args).apply((a: any) => getRedisCluster(a, opts))
}

/**
 * A collection of arguments for invoking getRedisCluster.
 */
export interface GetRedisClusterOutputArgs {
    clusterId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
