// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getObjectBucket(args?: GetObjectBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetObjectBucketResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getObjectBucket:getObjectBucket", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getObjectBucket.
 */
export interface GetObjectBucketArgs {
    id?: string;
    name?: string;
    projectId?: string;
    region?: string;
}

/**
 * A collection of values returned by getObjectBucket.
 */
export interface GetObjectBucketResult {
    readonly acl: string;
    readonly apiEndpoint: string;
    readonly corsRules: outputs.GetObjectBucketCorsRule[];
    readonly endpoint: string;
    readonly forceDestroy: boolean;
    readonly id: string;
    readonly lifecycleRules: outputs.GetObjectBucketLifecycleRule[];
    readonly name?: string;
    readonly objectLockEnabled: boolean;
    readonly projectId?: string;
    readonly region?: string;
    readonly tags: {[key: string]: string};
    readonly versionings: outputs.GetObjectBucketVersioning[];
}
export function getObjectBucketOutput(args?: GetObjectBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetObjectBucketResult> {
    return pulumi.output(args).apply((a: any) => getObjectBucket(a, opts))
}

/**
 * A collection of arguments for invoking getObjectBucket.
 */
export interface GetObjectBucketOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
