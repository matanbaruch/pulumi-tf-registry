// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRdbPrivilege(args: GetRdbPrivilegeArgs, opts?: pulumi.InvokeOptions): Promise<GetRdbPrivilegeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getRdbPrivilege:getRdbPrivilege", {
        "databaseName": args.databaseName,
        "id": args.id,
        "instanceId": args.instanceId,
        "region": args.region,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdbPrivilege.
 */
export interface GetRdbPrivilegeArgs {
    databaseName: string;
    id?: string;
    instanceId: string;
    region?: string;
    userName: string;
}

/**
 * A collection of values returned by getRdbPrivilege.
 */
export interface GetRdbPrivilegeResult {
    readonly databaseName: string;
    readonly id: string;
    readonly instanceId: string;
    readonly permission: string;
    readonly region?: string;
    readonly userName: string;
}
export function getRdbPrivilegeOutput(args: GetRdbPrivilegeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdbPrivilegeResult> {
    return pulumi.output(args).apply((a: any) => getRdbPrivilege(a, opts))
}

/**
 * A collection of arguments for invoking getRdbPrivilege.
 */
export interface GetRdbPrivilegeOutputArgs {
    databaseName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    userName: pulumi.Input<string>;
}
