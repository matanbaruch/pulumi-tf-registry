// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamApiKey(args: GetIamApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamApiKeyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getIamApiKey:getIamApiKey", {
        "accessKey": args.accessKey,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamApiKey.
 */
export interface GetIamApiKeyArgs {
    accessKey: string;
    id?: string;
}

/**
 * A collection of values returned by getIamApiKey.
 */
export interface GetIamApiKeyResult {
    readonly accessKey: string;
    readonly applicationId: string;
    readonly createdAt: string;
    readonly creationIp: string;
    readonly defaultProjectId: string;
    readonly description: string;
    readonly editable: boolean;
    readonly expiresAt: string;
    readonly id: string;
    readonly updatedAt: string;
    readonly userId: string;
}
export function getIamApiKeyOutput(args: GetIamApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamApiKeyResult> {
    return pulumi.output(args).apply((a: any) => getIamApiKey(a, opts))
}

/**
 * A collection of arguments for invoking getIamApiKey.
 */
export interface GetIamApiKeyOutputArgs {
    accessKey: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
