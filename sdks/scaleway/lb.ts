// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Lb extends pulumi.CustomResource {
    /**
     * Get an existing Lb resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbState, opts?: pulumi.CustomResourceOptions): Lb {
        return new Lb(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/lb:Lb';

    /**
     * Returns true if the given object is an instance of Lb.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Lb {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lb.__pulumiType;
    }

    /**
     * Defines whether to automatically assign a flexible public IP to the load balancer
     */
    public readonly assignFlexibleIp!: pulumi.Output<boolean | undefined>;
    /**
     * Defines whether to automatically assign a flexible public IPv6 to the load balancer
     */
    public readonly assignFlexibleIpv6!: pulumi.Output<boolean | undefined>;
    /**
     * The description of the lb
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The load-balance public IPv4 address
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * The load-balance public IP ID
     *
     * @deprecated Deprecated
     */
    public readonly ipId!: pulumi.Output<string>;
    /**
     * List of IP IDs to attach to the Load Balancer
     */
    public readonly ipIds!: pulumi.Output<string[]>;
    /**
     * The load-balance public IPv6 address
     */
    public /*out*/ readonly ipv6Address!: pulumi.Output<string>;
    /**
     * Name of the lb
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The organization_id you want to attach the resource to
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * List of private network to connect with your load balancer
     */
    public readonly privateNetworks!: pulumi.Output<outputs.LbPrivateNetwork[] | undefined>;
    /**
     * The project_id you want to attach the resource to
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The region of the resource
     */
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * Release the IPs related to this load-balancer
     *
     * @deprecated Deprecated
     */
    public readonly releaseIp!: pulumi.Output<boolean | undefined>;
    /**
     * Enforces minimal SSL version (in SSL/TLS offloading context)
     */
    public readonly sslCompatibilityLevel!: pulumi.Output<string | undefined>;
    /**
     * Array of tags to associate with the load-balancer
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.LbTimeouts | undefined>;
    /**
     * The type of load-balancer you want to create
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The zone you want to attach the resource to
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a Lb resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbArgs | LbState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbState | undefined;
            resourceInputs["assignFlexibleIp"] = state ? state.assignFlexibleIp : undefined;
            resourceInputs["assignFlexibleIpv6"] = state ? state.assignFlexibleIpv6 : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["ipId"] = state ? state.ipId : undefined;
            resourceInputs["ipIds"] = state ? state.ipIds : undefined;
            resourceInputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["privateNetworks"] = state ? state.privateNetworks : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["releaseIp"] = state ? state.releaseIp : undefined;
            resourceInputs["sslCompatibilityLevel"] = state ? state.sslCompatibilityLevel : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as LbArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["assignFlexibleIp"] = args ? args.assignFlexibleIp : undefined;
            resourceInputs["assignFlexibleIpv6"] = args ? args.assignFlexibleIpv6 : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipId"] = args ? args.ipId : undefined;
            resourceInputs["ipIds"] = args ? args.ipIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateNetworks"] = args ? args.privateNetworks : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["releaseIp"] = args ? args.releaseIp : undefined;
            resourceInputs["sslCompatibilityLevel"] = args ? args.sslCompatibilityLevel : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["ipv6Address"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Lb.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Lb resources.
 */
export interface LbState {
    /**
     * Defines whether to automatically assign a flexible public IP to the load balancer
     */
    assignFlexibleIp?: pulumi.Input<boolean>;
    /**
     * Defines whether to automatically assign a flexible public IPv6 to the load balancer
     */
    assignFlexibleIpv6?: pulumi.Input<boolean>;
    /**
     * The description of the lb
     */
    description?: pulumi.Input<string>;
    /**
     * The load-balance public IPv4 address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The load-balance public IP ID
     *
     * @deprecated Deprecated
     */
    ipId?: pulumi.Input<string>;
    /**
     * List of IP IDs to attach to the Load Balancer
     */
    ipIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The load-balance public IPv6 address
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * Name of the lb
     */
    name?: pulumi.Input<string>;
    /**
     * The organization_id you want to attach the resource to
     */
    organizationId?: pulumi.Input<string>;
    /**
     * List of private network to connect with your load balancer
     */
    privateNetworks?: pulumi.Input<pulumi.Input<inputs.LbPrivateNetwork>[]>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region of the resource
     */
    region?: pulumi.Input<string>;
    /**
     * Release the IPs related to this load-balancer
     *
     * @deprecated Deprecated
     */
    releaseIp?: pulumi.Input<boolean>;
    /**
     * Enforces minimal SSL version (in SSL/TLS offloading context)
     */
    sslCompatibilityLevel?: pulumi.Input<string>;
    /**
     * Array of tags to associate with the load-balancer
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.LbTimeouts>;
    /**
     * The type of load-balancer you want to create
     */
    type?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Lb resource.
 */
export interface LbArgs {
    /**
     * Defines whether to automatically assign a flexible public IP to the load balancer
     */
    assignFlexibleIp?: pulumi.Input<boolean>;
    /**
     * Defines whether to automatically assign a flexible public IPv6 to the load balancer
     */
    assignFlexibleIpv6?: pulumi.Input<boolean>;
    /**
     * The description of the lb
     */
    description?: pulumi.Input<string>;
    /**
     * The load-balance public IP ID
     *
     * @deprecated Deprecated
     */
    ipId?: pulumi.Input<string>;
    /**
     * List of IP IDs to attach to the Load Balancer
     */
    ipIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the lb
     */
    name?: pulumi.Input<string>;
    /**
     * List of private network to connect with your load balancer
     */
    privateNetworks?: pulumi.Input<pulumi.Input<inputs.LbPrivateNetwork>[]>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * Release the IPs related to this load-balancer
     *
     * @deprecated Deprecated
     */
    releaseIp?: pulumi.Input<boolean>;
    /**
     * Enforces minimal SSL version (in SSL/TLS offloading context)
     */
    sslCompatibilityLevel?: pulumi.Input<string>;
    /**
     * Array of tags to associate with the load-balancer
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.LbTimeouts>;
    /**
     * The type of load-balancer you want to create
     */
    type: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}
