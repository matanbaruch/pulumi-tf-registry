// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInstanceSnapshot(args?: GetInstanceSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getInstanceSnapshot:getInstanceSnapshot", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "snapshotId": args.snapshotId,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInstanceSnapshot.
 */
export interface GetInstanceSnapshotArgs {
    id?: string;
    name?: string;
    projectId?: string;
    snapshotId?: string;
    zone?: string;
}

/**
 * A collection of values returned by getInstanceSnapshot.
 */
export interface GetInstanceSnapshotResult {
    readonly createdAt: string;
    readonly id: string;
    readonly imports: outputs.GetInstanceSnapshotImport[];
    readonly name?: string;
    readonly organizationId: string;
    readonly projectId?: string;
    readonly sizeInGb: number;
    readonly snapshotId?: string;
    readonly tags: string[];
    readonly type: string;
    readonly volumeId: string;
    readonly zone?: string;
}
export function getInstanceSnapshotOutput(args?: GetInstanceSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getInstanceSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceSnapshot.
 */
export interface GetInstanceSnapshotOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
