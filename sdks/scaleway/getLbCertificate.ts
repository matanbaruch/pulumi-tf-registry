// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbCertificate(args?: GetLbCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetLbCertificateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getLbCertificate:getLbCertificate", {
        "certificateId": args.certificateId,
        "id": args.id,
        "lbId": args.lbId,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbCertificate.
 */
export interface GetLbCertificateArgs {
    certificateId?: string;
    id?: string;
    lbId?: string;
    name?: string;
}

/**
 * A collection of values returned by getLbCertificate.
 */
export interface GetLbCertificateResult {
    readonly certificateId?: string;
    readonly commonName: string;
    readonly customCertificates: outputs.GetLbCertificateCustomCertificate[];
    readonly fingerprint: string;
    readonly id: string;
    readonly lbId?: string;
    readonly letsencrypts: outputs.GetLbCertificateLetsencrypt[];
    readonly name?: string;
    readonly notValidAfter: string;
    readonly notValidBefore: string;
    readonly status: string;
    readonly subjectAlternativeNames: string[];
}
export function getLbCertificateOutput(args?: GetLbCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbCertificateResult> {
    return pulumi.output(args).apply((a: any) => getLbCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getLbCertificate.
 */
export interface GetLbCertificateOutputArgs {
    certificateId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lbId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
