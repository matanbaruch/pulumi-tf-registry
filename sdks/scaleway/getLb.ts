// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLb(args?: GetLbArgs, opts?: pulumi.InvokeOptions): Promise<GetLbResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getLb:getLb", {
        "id": args.id,
        "lbId": args.lbId,
        "name": args.name,
        "projectId": args.projectId,
        "releaseIp": args.releaseIp,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLb.
 */
export interface GetLbArgs {
    id?: string;
    lbId?: string;
    name?: string;
    projectId?: string;
    releaseIp?: boolean;
    zone?: string;
}

/**
 * A collection of values returned by getLb.
 */
export interface GetLbResult {
    readonly assignFlexibleIp: boolean;
    readonly assignFlexibleIpv6: boolean;
    readonly description: string;
    readonly id: string;
    readonly ipAddress: string;
    readonly ipId: string;
    readonly ipIds: string[];
    readonly ipv6Address: string;
    readonly lbId?: string;
    readonly name?: string;
    readonly organizationId: string;
    readonly privateNetworks: outputs.GetLbPrivateNetwork[];
    readonly projectId?: string;
    readonly region: string;
    readonly releaseIp?: boolean;
    readonly sslCompatibilityLevel: string;
    readonly tags: string[];
    readonly type: string;
    readonly zone?: string;
}
export function getLbOutput(args?: GetLbOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbResult> {
    return pulumi.output(args).apply((a: any) => getLb(a, opts))
}

/**
 * A collection of arguments for invoking getLb.
 */
export interface GetLbOutputArgs {
    id?: pulumi.Input<string>;
    lbId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    releaseIp?: pulumi.Input<boolean>;
    zone?: pulumi.Input<string>;
}
