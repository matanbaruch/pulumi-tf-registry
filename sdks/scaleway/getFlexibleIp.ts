// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFlexibleIp(args?: GetFlexibleIpArgs, opts?: pulumi.InvokeOptions): Promise<GetFlexibleIpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getFlexibleIp:getFlexibleIp", {
        "flexibleIpId": args.flexibleIpId,
        "id": args.id,
        "ipAddress": args.ipAddress,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFlexibleIp.
 */
export interface GetFlexibleIpArgs {
    flexibleIpId?: string;
    id?: string;
    ipAddress?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getFlexibleIp.
 */
export interface GetFlexibleIpResult {
    readonly createdAt: string;
    readonly description: string;
    readonly flexibleIpId?: string;
    readonly id: string;
    readonly ipAddress?: string;
    readonly isIpv6: boolean;
    readonly organizationId: string;
    readonly projectId: string;
    readonly reverse: string;
    readonly serverId: string;
    readonly status: string;
    readonly tags: string[];
    readonly updatedAt: string;
    readonly zone: string;
}
export function getFlexibleIpOutput(args?: GetFlexibleIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlexibleIpResult> {
    return pulumi.output(args).apply((a: any) => getFlexibleIp(a, opts))
}

/**
 * A collection of arguments for invoking getFlexibleIp.
 */
export interface GetFlexibleIpOutputArgs {
    flexibleIpId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
