// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcPublicGatewayPatRule extends pulumi.CustomResource {
    /**
     * Get an existing VpcPublicGatewayPatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcPublicGatewayPatRuleState, opts?: pulumi.CustomResourceOptions): VpcPublicGatewayPatRule {
        return new VpcPublicGatewayPatRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/vpcPublicGatewayPatRule:VpcPublicGatewayPatRule';

    /**
     * Returns true if the given object is an instance of VpcPublicGatewayPatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcPublicGatewayPatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcPublicGatewayPatRule.__pulumiType;
    }

    /**
     * The date and time of the creation of the PAT rule
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the gateway this PAT rule is applied to
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * The organization_id you want to attach the resource to
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The private IP used in the PAT rule
     */
    public readonly privateIp!: pulumi.Output<string>;
    /**
     * The private port used in the PAT rule
     */
    public readonly privatePort!: pulumi.Output<number>;
    /**
     * The protocol used in the PAT rule
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * The public port used in the PAT rule
     */
    public readonly publicPort!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.VpcPublicGatewayPatRuleTimeouts | undefined>;
    /**
     * The date and time of the last update of the PAT rule
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The zone you want to attach the resource to
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a VpcPublicGatewayPatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcPublicGatewayPatRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcPublicGatewayPatRuleArgs | VpcPublicGatewayPatRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcPublicGatewayPatRuleState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["privatePort"] = state ? state.privatePort : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["publicPort"] = state ? state.publicPort : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as VpcPublicGatewayPatRuleArgs | undefined;
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.privateIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateIp'");
            }
            if ((!args || args.privatePort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privatePort'");
            }
            if ((!args || args.publicPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicPort'");
            }
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["privatePort"] = args ? args.privatePort : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["publicPort"] = args ? args.publicPort : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcPublicGatewayPatRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpcPublicGatewayPatRule resources.
 */
export interface VpcPublicGatewayPatRuleState {
    /**
     * The date and time of the creation of the PAT rule
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the gateway this PAT rule is applied to
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * The organization_id you want to attach the resource to
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The private IP used in the PAT rule
     */
    privateIp?: pulumi.Input<string>;
    /**
     * The private port used in the PAT rule
     */
    privatePort?: pulumi.Input<number>;
    /**
     * The protocol used in the PAT rule
     */
    protocol?: pulumi.Input<string>;
    /**
     * The public port used in the PAT rule
     */
    publicPort?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.VpcPublicGatewayPatRuleTimeouts>;
    /**
     * The date and time of the last update of the PAT rule
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcPublicGatewayPatRule resource.
 */
export interface VpcPublicGatewayPatRuleArgs {
    /**
     * The ID of the gateway this PAT rule is applied to
     */
    gatewayId: pulumi.Input<string>;
    /**
     * The private IP used in the PAT rule
     */
    privateIp: pulumi.Input<string>;
    /**
     * The private port used in the PAT rule
     */
    privatePort: pulumi.Input<number>;
    /**
     * The protocol used in the PAT rule
     */
    protocol?: pulumi.Input<string>;
    /**
     * The public port used in the PAT rule
     */
    publicPort: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.VpcPublicGatewayPatRuleTimeouts>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}
