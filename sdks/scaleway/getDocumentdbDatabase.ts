// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDocumentdbDatabase(args: GetDocumentdbDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDocumentdbDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getDocumentdbDatabase:getDocumentdbDatabase", {
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDocumentdbDatabase.
 */
export interface GetDocumentdbDatabaseArgs {
    id?: string;
    instanceId: string;
    name?: string;
    region?: string;
}

/**
 * A collection of values returned by getDocumentdbDatabase.
 */
export interface GetDocumentdbDatabaseResult {
    readonly id: string;
    readonly instanceId: string;
    readonly managed: boolean;
    readonly name?: string;
    readonly owner: string;
    readonly projectId: string;
    readonly region?: string;
    readonly size: string;
}
export function getDocumentdbDatabaseOutput(args: GetDocumentdbDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDocumentdbDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDocumentdbDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getDocumentdbDatabase.
 */
export interface GetDocumentdbDatabaseOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
