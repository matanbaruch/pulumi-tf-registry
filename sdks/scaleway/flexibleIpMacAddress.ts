// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FlexibleIpMacAddress extends pulumi.CustomResource {
    /**
     * Get an existing FlexibleIpMacAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlexibleIpMacAddressState, opts?: pulumi.CustomResourceOptions): FlexibleIpMacAddress {
        return new FlexibleIpMacAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress';

    /**
     * Returns true if the given object is an instance of FlexibleIpMacAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlexibleIpMacAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlexibleIpMacAddress.__pulumiType;
    }

    /**
     * Virtual MAC address
     */
    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * The date and time of the creation of the virtual MAC (Format ISO 8601)
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the flexible IP for which to generate a virtual MAC
     */
    public readonly flexibleIpId!: pulumi.Output<string>;
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC **NOTE** : The flexible IPs need to be attached to the
     * same server for the operation to work.
     */
    public readonly flexibleIpIdsToDuplicates!: pulumi.Output<string[] | undefined>;
    /**
     * Virtual MAC status
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.FlexibleIpMacAddressTimeouts | undefined>;
    /**
     * The type of the virtual MAC
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The date and time of the last update of the virtual MAC (Format ISO 8601)
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The zone you want to attach the resource to
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a FlexibleIpMacAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlexibleIpMacAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlexibleIpMacAddressArgs | FlexibleIpMacAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlexibleIpMacAddressState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["flexibleIpId"] = state ? state.flexibleIpId : undefined;
            resourceInputs["flexibleIpIdsToDuplicates"] = state ? state.flexibleIpIdsToDuplicates : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as FlexibleIpMacAddressArgs | undefined;
            if ((!args || args.flexibleIpId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flexibleIpId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["flexibleIpId"] = args ? args.flexibleIpId : undefined;
            resourceInputs["flexibleIpIdsToDuplicates"] = args ? args.flexibleIpIdsToDuplicates : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["address"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlexibleIpMacAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FlexibleIpMacAddress resources.
 */
export interface FlexibleIpMacAddressState {
    /**
     * Virtual MAC address
     */
    address?: pulumi.Input<string>;
    /**
     * The date and time of the creation of the virtual MAC (Format ISO 8601)
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the flexible IP for which to generate a virtual MAC
     */
    flexibleIpId?: pulumi.Input<string>;
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC **NOTE** : The flexible IPs need to be attached to the
     * same server for the operation to work.
     */
    flexibleIpIdsToDuplicates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Virtual MAC status
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.FlexibleIpMacAddressTimeouts>;
    /**
     * The type of the virtual MAC
     */
    type?: pulumi.Input<string>;
    /**
     * The date and time of the last update of the virtual MAC (Format ISO 8601)
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlexibleIpMacAddress resource.
 */
export interface FlexibleIpMacAddressArgs {
    /**
     * The ID of the flexible IP for which to generate a virtual MAC
     */
    flexibleIpId: pulumi.Input<string>;
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC **NOTE** : The flexible IPs need to be attached to the
     * same server for the operation to work.
     */
    flexibleIpIdsToDuplicates?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.FlexibleIpMacAddressTimeouts>;
    /**
     * The type of the virtual MAC
     */
    type: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}
