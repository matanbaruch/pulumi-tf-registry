// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLbIp(args?: GetLbIpArgs, opts?: pulumi.InvokeOptions): Promise<GetLbIpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getLbIp:getLbIp", {
        "id": args.id,
        "ipAddress": args.ipAddress,
        "ipId": args.ipId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbIp.
 */
export interface GetLbIpArgs {
    id?: string;
    ipAddress?: string;
    ipId?: string;
    projectId?: string;
}

/**
 * A collection of values returned by getLbIp.
 */
export interface GetLbIpResult {
    readonly id: string;
    readonly ipAddress?: string;
    readonly ipId?: string;
    readonly isIpv6: boolean;
    readonly lbId: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly region: string;
    readonly reverse: string;
    readonly tags: string[];
    readonly zone: string;
}
export function getLbIpOutput(args?: GetLbIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbIpResult> {
    return pulumi.output(args).apply((a: any) => getLbIp(a, opts))
}

/**
 * A collection of arguments for invoking getLbIp.
 */
export interface GetLbIpOutputArgs {
    id?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    ipId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
}
