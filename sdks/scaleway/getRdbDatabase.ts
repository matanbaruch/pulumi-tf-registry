// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRdbDatabase(args: GetRdbDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetRdbDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getRdbDatabase:getRdbDatabase", {
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdbDatabase.
 */
export interface GetRdbDatabaseArgs {
    id?: string;
    instanceId: string;
    name: string;
    region?: string;
}

/**
 * A collection of values returned by getRdbDatabase.
 */
export interface GetRdbDatabaseResult {
    readonly id: string;
    readonly instanceId: string;
    readonly managed: boolean;
    readonly name: string;
    readonly owner: string;
    readonly region?: string;
    readonly size: string;
}
export function getRdbDatabaseOutput(args: GetRdbDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdbDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getRdbDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getRdbDatabase.
 */
export interface GetRdbDatabaseOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
