// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDocumentdbLoadBalancerEndpoint(args?: GetDocumentdbLoadBalancerEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetDocumentdbLoadBalancerEndpointResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getDocumentdbLoadBalancerEndpoint:getDocumentdbLoadBalancerEndpoint", {
        "id": args.id,
        "instanceId": args.instanceId,
        "instanceName": args.instanceName,
        "projectId": args.projectId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDocumentdbLoadBalancerEndpoint.
 */
export interface GetDocumentdbLoadBalancerEndpointArgs {
    id?: string;
    instanceId?: string;
    instanceName?: string;
    projectId?: string;
    region?: string;
}

/**
 * A collection of values returned by getDocumentdbLoadBalancerEndpoint.
 */
export interface GetDocumentdbLoadBalancerEndpointResult {
    readonly hostname: string;
    readonly id: string;
    readonly instanceId: string;
    readonly instanceName: string;
    readonly ip: string;
    readonly name: string;
    readonly port: number;
    readonly projectId: string;
    readonly region: string;
}
export function getDocumentdbLoadBalancerEndpointOutput(args?: GetDocumentdbLoadBalancerEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDocumentdbLoadBalancerEndpointResult> {
    return pulumi.output(args).apply((a: any) => getDocumentdbLoadBalancerEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getDocumentdbLoadBalancerEndpoint.
 */
export interface GetDocumentdbLoadBalancerEndpointOutputArgs {
    id?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    instanceName?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
