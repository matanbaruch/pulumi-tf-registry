// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBaremetalOption(args?: GetBaremetalOptionArgs, opts?: pulumi.InvokeOptions): Promise<GetBaremetalOptionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getBaremetalOption:getBaremetalOption", {
        "id": args.id,
        "name": args.name,
        "optionId": args.optionId,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBaremetalOption.
 */
export interface GetBaremetalOptionArgs {
    id?: string;
    name?: string;
    optionId?: string;
    zone?: string;
}

/**
 * A collection of values returned by getBaremetalOption.
 */
export interface GetBaremetalOptionResult {
    readonly id: string;
    readonly manageable: boolean;
    readonly name?: string;
    readonly optionId?: string;
    readonly zone: string;
}
export function getBaremetalOptionOutput(args?: GetBaremetalOptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBaremetalOptionResult> {
    return pulumi.output(args).apply((a: any) => getBaremetalOption(a, opts))
}

/**
 * A collection of arguments for invoking getBaremetalOption.
 */
export interface GetBaremetalOptionOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    optionId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
