// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamSshKey(args?: GetIamSshKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamSshKeyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getIamSshKey:getIamSshKey", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "sshKeyId": args.sshKeyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamSshKey.
 */
export interface GetIamSshKeyArgs {
    id?: string;
    name?: string;
    projectId?: string;
    sshKeyId?: string;
}

/**
 * A collection of values returned by getIamSshKey.
 */
export interface GetIamSshKeyResult {
    readonly createdAt: string;
    readonly disabled: boolean;
    readonly fingerprint: string;
    readonly id: string;
    readonly name?: string;
    readonly organizationId: string;
    readonly projectId?: string;
    readonly publicKey: string;
    readonly sshKeyId?: string;
    readonly updatedAt: string;
}
export function getIamSshKeyOutput(args?: GetIamSshKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamSshKeyResult> {
    return pulumi.output(args).apply((a: any) => getIamSshKey(a, opts))
}

/**
 * A collection of arguments for invoking getIamSshKey.
 */
export interface GetIamSshKeyOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    sshKeyId?: pulumi.Input<string>;
}
