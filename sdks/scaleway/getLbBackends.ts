// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbBackends(args: GetLbBackendsArgs, opts?: pulumi.InvokeOptions): Promise<GetLbBackendsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getLbBackends:getLbBackends", {
        "id": args.id,
        "lbId": args.lbId,
        "name": args.name,
        "projectId": args.projectId,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbBackends.
 */
export interface GetLbBackendsArgs {
    id?: string;
    lbId: string;
    name?: string;
    projectId?: string;
    zone?: string;
}

/**
 * A collection of values returned by getLbBackends.
 */
export interface GetLbBackendsResult {
    readonly backends: outputs.GetLbBackendsBackend[];
    readonly id: string;
    readonly lbId: string;
    readonly name?: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly zone: string;
}
export function getLbBackendsOutput(args: GetLbBackendsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbBackendsResult> {
    return pulumi.output(args).apply((a: any) => getLbBackends(a, opts))
}

/**
 * A collection of arguments for invoking getLbBackends.
 */
export interface GetLbBackendsOutputArgs {
    id?: pulumi.Input<string>;
    lbId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
