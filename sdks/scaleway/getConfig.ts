// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConfig(args?: GetConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getConfig:getConfig", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigArgs {
    id?: string;
}

/**
 * A collection of values returned by getConfig.
 */
export interface GetConfigResult {
    readonly accessKey: string;
    readonly accessKeySource: string;
    readonly id: string;
    readonly projectId: string;
    readonly projectIdSource: string;
    readonly region: string;
    readonly regionSource: string;
    readonly secretKey: string;
    readonly secretKeySource: string;
    readonly zone: string;
    readonly zoneSource: string;
}
export function getConfigOutput(args?: GetConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigResult> {
    return pulumi.output(args).apply((a: any) => getConfig(a, opts))
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigOutputArgs {
    id?: pulumi.Input<string>;
}
