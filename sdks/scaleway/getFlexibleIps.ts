// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFlexibleIps(args?: GetFlexibleIpsArgs, opts?: pulumi.InvokeOptions): Promise<GetFlexibleIpsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getFlexibleIps:getFlexibleIps", {
        "id": args.id,
        "projectId": args.projectId,
        "serverIds": args.serverIds,
        "tags": args.tags,
        "zone": args.zone,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFlexibleIps.
 */
export interface GetFlexibleIpsArgs {
    id?: string;
    projectId?: string;
    serverIds?: string[];
    tags?: string[];
    zone?: string;
}

/**
 * A collection of values returned by getFlexibleIps.
 */
export interface GetFlexibleIpsResult {
    readonly id: string;
    readonly ips: outputs.GetFlexibleIpsIp[];
    readonly organizationId: string;
    readonly projectId: string;
    readonly serverIds?: string[];
    readonly tags?: string[];
    readonly zone: string;
}
export function getFlexibleIpsOutput(args?: GetFlexibleIpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlexibleIpsResult> {
    return pulumi.output(args).apply((a: any) => getFlexibleIps(a, opts))
}

/**
 * A collection of arguments for invoking getFlexibleIps.
 */
export interface GetFlexibleIpsOutputArgs {
    id?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    serverIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    zone?: pulumi.Input<string>;
}
