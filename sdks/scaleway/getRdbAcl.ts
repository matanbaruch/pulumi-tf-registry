// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdbAcl(args: GetRdbAclArgs, opts?: pulumi.InvokeOptions): Promise<GetRdbAclResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getRdbAcl:getRdbAcl", {
        "id": args.id,
        "instanceId": args.instanceId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdbAcl.
 */
export interface GetRdbAclArgs {
    id?: string;
    instanceId: string;
    region?: string;
}

/**
 * A collection of values returned by getRdbAcl.
 */
export interface GetRdbAclResult {
    readonly aclRules: outputs.GetRdbAclAclRule[];
    readonly id: string;
    readonly instanceId: string;
    readonly region?: string;
}
export function getRdbAclOutput(args: GetRdbAclOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdbAclResult> {
    return pulumi.output(args).apply((a: any) => getRdbAcl(a, opts))
}

/**
 * A collection of arguments for invoking getRdbAcl.
 */
export interface GetRdbAclOutputArgs {
    id?: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
