// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRdbInstance(args?: GetRdbInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetRdbInstanceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getRdbInstance:getRdbInstance", {
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdbInstance.
 */
export interface GetRdbInstanceArgs {
    id?: string;
    instanceId?: string;
    name?: string;
    projectId?: string;
    region?: string;
}

/**
 * A collection of values returned by getRdbInstance.
 */
export interface GetRdbInstanceResult {
    readonly backupSameRegion: boolean;
    readonly backupScheduleFrequency: number;
    readonly backupScheduleRetention: number;
    readonly certificate: string;
    readonly disableBackup: boolean;
    readonly encryptionAtRest: boolean;
    readonly endpointIp: string;
    readonly endpointPort: number;
    readonly engine: string;
    readonly id: string;
    readonly initSettings: {[key: string]: string};
    readonly instanceId?: string;
    readonly isHaCluster: boolean;
    readonly loadBalancers: outputs.GetRdbInstanceLoadBalancer[];
    readonly logsPolicies: outputs.GetRdbInstanceLogsPolicy[];
    readonly name?: string;
    readonly nodeType: string;
    readonly organizationId: string;
    readonly password: string;
    readonly privateNetworks: outputs.GetRdbInstancePrivateNetwork[];
    readonly projectId?: string;
    readonly readReplicas: outputs.GetRdbInstanceReadReplica[];
    readonly region?: string;
    readonly settings: {[key: string]: string};
    readonly tags: string[];
    readonly userName: string;
    readonly volumeSizeInGb: number;
    readonly volumeType: string;
}
export function getRdbInstanceOutput(args?: GetRdbInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdbInstanceResult> {
    return pulumi.output(args).apply((a: any) => getRdbInstance(a, opts))
}

/**
 * A collection of arguments for invoking getRdbInstance.
 */
export interface GetRdbInstanceOutputArgs {
    id?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
