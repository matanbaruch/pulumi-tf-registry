// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcGatewayNetwork(args?: GetVpcGatewayNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcGatewayNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getVpcGatewayNetwork:getVpcGatewayNetwork", {
        "dhcpId": args.dhcpId,
        "enableMasquerade": args.enableMasquerade,
        "gatewayId": args.gatewayId,
        "gatewayNetworkId": args.gatewayNetworkId,
        "id": args.id,
        "privateNetworkId": args.privateNetworkId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcGatewayNetwork.
 */
export interface GetVpcGatewayNetworkArgs {
    dhcpId?: string;
    enableMasquerade?: boolean;
    gatewayId?: string;
    gatewayNetworkId?: string;
    id?: string;
    privateNetworkId?: string;
}

/**
 * A collection of values returned by getVpcGatewayNetwork.
 */
export interface GetVpcGatewayNetworkResult {
    readonly cleanupDhcp: boolean;
    readonly createdAt: string;
    readonly dhcpId?: string;
    readonly enableDhcp: boolean;
    readonly enableMasquerade?: boolean;
    readonly gatewayId?: string;
    readonly gatewayNetworkId?: string;
    readonly id: string;
    readonly ipamConfigs: outputs.GetVpcGatewayNetworkIpamConfig[];
    readonly macAddress: string;
    readonly privateNetworkId?: string;
    readonly staticAddress: string;
    readonly status: string;
    readonly updatedAt: string;
    readonly zone: string;
}
export function getVpcGatewayNetworkOutput(args?: GetVpcGatewayNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcGatewayNetworkResult> {
    return pulumi.output(args).apply((a: any) => getVpcGatewayNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getVpcGatewayNetwork.
 */
export interface GetVpcGatewayNetworkOutputArgs {
    dhcpId?: pulumi.Input<string>;
    enableMasquerade?: pulumi.Input<boolean>;
    gatewayId?: pulumi.Input<string>;
    gatewayNetworkId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    privateNetworkId?: pulumi.Input<string>;
}
