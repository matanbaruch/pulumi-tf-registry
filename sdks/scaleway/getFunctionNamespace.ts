// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFunctionNamespace(args?: GetFunctionNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionNamespaceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getFunctionNamespace:getFunctionNamespace", {
        "id": args.id,
        "name": args.name,
        "namespaceId": args.namespaceId,
        "projectId": args.projectId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctionNamespace.
 */
export interface GetFunctionNamespaceArgs {
    id?: string;
    name?: string;
    namespaceId?: string;
    projectId?: string;
    region?: string;
}

/**
 * A collection of values returned by getFunctionNamespace.
 */
export interface GetFunctionNamespaceResult {
    readonly description: string;
    readonly environmentVariables: {[key: string]: string};
    readonly id: string;
    readonly name?: string;
    readonly namespaceId?: string;
    readonly organizationId: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly registryEndpoint: string;
    readonly registryNamespaceId: string;
    readonly secretEnvironmentVariables: {[key: string]: string};
}
export function getFunctionNamespaceOutput(args?: GetFunctionNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionNamespaceResult> {
    return pulumi.output(args).apply((a: any) => getFunctionNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionNamespace.
 */
export interface GetFunctionNamespaceOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespaceId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
