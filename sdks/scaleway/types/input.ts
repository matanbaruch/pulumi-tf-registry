// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AppleSiliconServerTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
}

export interface BaremetalServerIp {
    address: pulumi.Input<string>;
    id: pulumi.Input<string>;
    reverse: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface BaremetalServerIpv4 {
    address: pulumi.Input<string>;
    id: pulumi.Input<string>;
    reverse: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface BaremetalServerIpv6 {
    address: pulumi.Input<string>;
    id: pulumi.Input<string>;
    reverse: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface BaremetalServerOption {
    /**
     * Auto expire the option after this date
     */
    expiresAt?: pulumi.Input<string>;
    /**
     * IDs of the options
     */
    id: pulumi.Input<string>;
    /**
     * name of the option
     */
    name?: pulumi.Input<string>;
}

export interface BaremetalServerPrivateNetwork {
    /**
     * The date and time of the creation of the private network
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The private network ID
     */
    id: pulumi.Input<string>;
    /**
     * The private network status
     */
    status?: pulumi.Input<string>;
    /**
     * The date and time of the last update of the private network
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The VLAN ID associated to the private network
     */
    vlan?: pulumi.Input<number>;
}

export interface BaremetalServerTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlockSnapshotTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface BlockVolumeTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CockpitAlertManagerContactPoint {
    /**
     * Email addresses for the alert receivers
     */
    email?: pulumi.Input<string>;
}

export interface CockpitEndpoint {
    alertmanagerUrl: pulumi.Input<string>;
    grafanaUrl: pulumi.Input<string>;
    logsUrl: pulumi.Input<string>;
    metricsUrl: pulumi.Input<string>;
    tracesUrl: pulumi.Input<string>;
}

export interface CockpitGrafanaUserTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CockpitPushUrl {
    pushLogsUrl: pulumi.Input<string>;
    pushMetricsUrl: pulumi.Input<string>;
}

export interface CockpitSourceTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CockpitTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface CockpitTokenScopes {
    /**
     * Query logs
     */
    queryLogs?: pulumi.Input<boolean>;
    /**
     * Query metrics
     */
    queryMetrics?: pulumi.Input<boolean>;
    /**
     * Query traces
     */
    queryTraces?: pulumi.Input<boolean>;
    /**
     * Setup alerts
     */
    setupAlerts?: pulumi.Input<boolean>;
    /**
     * Setup logs rules
     */
    setupLogsRules?: pulumi.Input<boolean>;
    /**
     * Setup metrics rules
     */
    setupMetricsRules?: pulumi.Input<boolean>;
    /**
     * Write logs
     */
    writeLogs?: pulumi.Input<boolean>;
    /**
     * Write metrics
     */
    writeMetrics?: pulumi.Input<boolean>;
    /**
     * Write traces
     */
    writeTraces?: pulumi.Input<boolean>;
}

export interface CockpitTokenTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface ContainerCronTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerDomainTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerNamespaceTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ContainerTriggerNats {
    /**
     * ID of the mnq nats account
     */
    accountId?: pulumi.Input<string>;
    /**
     * Project ID of the project where the mnq sqs exists, defaults to provider project_id
     */
    projectId?: pulumi.Input<string>;
    /**
     * Region where the mnq sqs exists, defaults to function's region
     */
    region?: pulumi.Input<string>;
    /**
     * Subject to listen to
     */
    subject: pulumi.Input<string>;
}

export interface ContainerTriggerSqs {
    /**
     * ID of the mnq namespace
     *
     * @deprecated Deprecated
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * Project ID of the project where the mnq sqs exists, defaults to provider project_id
     */
    projectId?: pulumi.Input<string>;
    /**
     * Name of the queue
     */
    queue: pulumi.Input<string>;
    /**
     * Region where the mnq sqs exists, defaults to function's region
     */
    region?: pulumi.Input<string>;
}

export interface ContainerTriggerTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DocumentdbDatabaseTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface DocumentdbInstanceTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DocumentdbPrivateNetworkEndpointPrivateNetwork {
    /**
     * The hostname of your endpoint
     */
    hostname?: pulumi.Input<string>;
    /**
     * The private network ID
     */
    id: pulumi.Input<string>;
    /**
     * The IP of your private network service
     */
    ip?: pulumi.Input<string>;
    /**
     * The IP with the given mask within the private subnet
     */
    ipNet?: pulumi.Input<string>;
    /**
     * The name of your private service
     */
    name?: pulumi.Input<string>;
    /**
     * The port of your private service
     */
    port?: pulumi.Input<number>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

export interface DocumentdbPrivateNetworkEndpointTimeouts {
    default?: pulumi.Input<string>;
}

export interface DocumentdbPrivilegeTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DocumentdbReadReplicaDirectAccess {
    /**
     * UUID of the endpoint (UUID format).
     */
    endpointId?: pulumi.Input<string>;
    /**
     * Hostname of the endpoint. Only one of ip and hostname may be set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
     */
    ip?: pulumi.Input<string>;
    /**
     * Name of the endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * TCP port of the endpoint.
     */
    port?: pulumi.Input<number>;
}

export interface DocumentdbReadReplicaPrivateNetwork {
    /**
     * UUID of the endpoint (UUID format).
     */
    endpointId?: pulumi.Input<string>;
    /**
     * Hostname of the endpoint. Only one of ip and hostname may be set
     */
    hostname?: pulumi.Input<string>;
    /**
     * IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set
     */
    ip?: pulumi.Input<string>;
    /**
     * Name of the endpoints
     */
    name?: pulumi.Input<string>;
    /**
     * TCP port of the endpoint
     */
    port?: pulumi.Input<number>;
    /**
     * UUID of the private network to be connected to the read replica (UUID format)
     */
    privateNetworkId: pulumi.Input<string>;
    /**
     * The IP network address within the private subnet
     */
    serviceIp?: pulumi.Input<string>;
    /**
     * Private network zone
     */
    zone?: pulumi.Input<string>;
}

export interface DocumentdbReadReplicaTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DocumentdbUserTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DomainRecordGeoIp {
    /**
     * The list of matches
     */
    matches: pulumi.Input<pulumi.Input<inputs.DomainRecordGeoIpMatch>[]>;
}

export interface DomainRecordGeoIpMatch {
    /**
     * List of continents (eg: EU for Europe, NA for North America, AS for Asia...). List of all continents code: https://api.scaleway.com/domain-private/v2beta1/continents
     */
    continents?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of countries (eg: FR for France, US for the United States, GB for Great Britain...). List of all countries code: https://api.scaleway.com/domain-private/v2beta1/countries
     */
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data of the match result
     */
    data: pulumi.Input<string>;
}

export interface DomainRecordHttpService {
    /**
     * IPs to check
     */
    ips: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Text to search
     */
    mustContain: pulumi.Input<string>;
    /**
     * Strategy to return an IP from the IPs list
     */
    strategy: pulumi.Input<string>;
    /**
     * URL to match the must_contain text to validate an IP
     */
    url: pulumi.Input<string>;
    /**
     * User-agent used when checking the URL
     */
    userAgent?: pulumi.Input<string>;
}

export interface DomainRecordTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DomainRecordView {
    /**
     * The data of the view record
     */
    data: pulumi.Input<string>;
    /**
     * The subnet of the view
     */
    subnet: pulumi.Input<string>;
}

export interface DomainRecordWeighted {
    /**
     * The weighted IP
     */
    ip: pulumi.Input<string>;
    /**
     * The weight of the IP
     */
    weight: pulumi.Input<number>;
}

export interface DomainZoneTimeouts {
    default?: pulumi.Input<string>;
}

export interface FlexibleIpMacAddressTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FlexibleIpTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionCronTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionDomainTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionNamespaceTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FunctionTriggerNats {
    /**
     * ID of the mnq nats account
     */
    accountId?: pulumi.Input<string>;
    /**
     * Project ID of the project where the mnq sqs exists, defaults to provider project_id
     */
    projectId?: pulumi.Input<string>;
    /**
     * Region where the mnq sqs exists, defaults to function's region
     */
    region?: pulumi.Input<string>;
    /**
     * Subject to listen to
     */
    subject: pulumi.Input<string>;
}

export interface FunctionTriggerSqs {
    /**
     * ID of the mnq namespace
     *
     * @deprecated Deprecated
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * Project ID of the project where the mnq sqs exists, defaults to provider project_id
     */
    projectId?: pulumi.Input<string>;
    /**
     * Name of the queue
     */
    queue: pulumi.Input<string>;
    /**
     * Region where the mnq sqs exists, defaults to function's region
     */
    region?: pulumi.Input<string>;
}

export interface FunctionTriggerTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetAvailabilityZonesTimeouts {
    read?: string;
}

export interface GetAvailabilityZonesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIpamIpResource {
    /**
     * ID of the resource to filter for
     */
    id?: string;
    /**
     * Name of the resource to filter for
     */
    name?: string;
    /**
     * Type of resource to filter for
     */
    type: string;
}

export interface GetIpamIpResourceArgs {
    /**
     * ID of the resource to filter for
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource to filter for
     */
    name?: pulumi.Input<string>;
    /**
     * Type of resource to filter for
     */
    type: pulumi.Input<string>;
}

export interface GetIpamIpsResource {
    /**
     * ID of the resource to filter for
     */
    id?: string;
    /**
     * Name of the resource to filter for
     */
    name?: string;
    /**
     * Type of resource to filter for
     */
    type: string;
}

export interface GetIpamIpsResourceArgs {
    /**
     * ID of the resource to filter for
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the resource to filter for
     */
    name?: pulumi.Input<string>;
    /**
     * Type of resource to filter for
     */
    type: pulumi.Input<string>;
}

export interface IamPolicyRule {
    /**
     * ID of organization scoped to the rule. Only one of project_ids and organization_id may be set.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Names of permission sets bound to the rule.
     */
    permissionSetNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of project IDs scoped to the rule. Only one of project_ids and organization_id may be set.
     */
    projectIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InstanceImageAdditionalVolume {
    creationDate: pulumi.Input<string>;
    exportUri: pulumi.Input<string>;
    id: pulumi.Input<string>;
    modificationDate: pulumi.Input<string>;
    name: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    project: pulumi.Input<string>;
    server: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    size: pulumi.Input<number>;
    state: pulumi.Input<string>;
    tags: pulumi.Input<pulumi.Input<string>[]>;
    volumeType: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}

export interface InstanceImageTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceIpReverseDnsTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceIpTimeouts {
    default?: pulumi.Input<string>;
}

export interface InstancePlacementGroupTimeouts {
    default?: pulumi.Input<string>;
}

export interface InstancePrivateNicTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupInboundRule {
    /**
     * Action when rule match request (drop or accept)
     */
    action: pulumi.Input<string>;
    /**
     * Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided
     *
     * @deprecated Deprecated
     */
    ip?: pulumi.Input<string>;
    /**
     * Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided
     */
    ipRange?: pulumi.Input<string>;
    /**
     * Network port for this rule
     */
    port?: pulumi.Input<number>;
    /**
     * Computed port range for this rule (e.g: 1-1024, 22-22)
     */
    portRange?: pulumi.Input<string>;
    /**
     * Protocol for this rule (TCP, UDP, ICMP or ANY)
     */
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupOutboundRule {
    /**
     * Action when rule match request (drop or accept)
     */
    action: pulumi.Input<string>;
    /**
     * Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided
     *
     * @deprecated Deprecated
     */
    ip?: pulumi.Input<string>;
    /**
     * Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided
     */
    ipRange?: pulumi.Input<string>;
    /**
     * Network port for this rule
     */
    port?: pulumi.Input<number>;
    /**
     * Computed port range for this rule (e.g: 1-1024, 22-22)
     */
    portRange?: pulumi.Input<string>;
    /**
     * Protocol for this rule (TCP, UDP, ICMP or ANY)
     */
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupRulesInboundRule {
    /**
     * Action when rule match request (drop or accept)
     */
    action: pulumi.Input<string>;
    /**
     * Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided
     *
     * @deprecated Deprecated
     */
    ip?: pulumi.Input<string>;
    /**
     * Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided
     */
    ipRange?: pulumi.Input<string>;
    /**
     * Network port for this rule
     */
    port?: pulumi.Input<number>;
    /**
     * Computed port range for this rule (e.g: 1-1024, 22-22)
     */
    portRange?: pulumi.Input<string>;
    /**
     * Protocol for this rule (TCP, UDP, ICMP or ANY)
     */
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupRulesOutboundRule {
    /**
     * Action when rule match request (drop or accept)
     */
    action: pulumi.Input<string>;
    /**
     * Ip address for this rule (e.g: 1.1.1.1). Only one of ip or ip_range should be provided
     *
     * @deprecated Deprecated
     */
    ip?: pulumi.Input<string>;
    /**
     * Ip range for this rule (e.g: 192.168.1.0/24). Only one of ip or ip_range should be provided
     */
    ipRange?: pulumi.Input<string>;
    /**
     * Network port for this rule
     */
    port?: pulumi.Input<number>;
    /**
     * Computed port range for this rule (e.g: 1-1024, 22-22)
     */
    portRange?: pulumi.Input<string>;
    /**
     * Protocol for this rule (TCP, UDP, ICMP or ANY)
     */
    protocol?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupRulesTimeouts {
    default?: pulumi.Input<string>;
}

export interface InstanceSecurityGroupTimeouts {
    default?: pulumi.Input<string>;
}

export interface InstanceServerPrivateNetwork {
    /**
     * MAC address of the NIC
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The Private Network ID
     */
    pnId: pulumi.Input<string>;
    /**
     * The ID of the NIC
     */
    pnicId?: pulumi.Input<string>;
    /**
     * The private NIC state
     */
    status?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

export interface InstanceServerPublicIp {
    /**
     * IP Address
     */
    address?: pulumi.Input<string>;
    /**
     * ID of the IP
     */
    id?: pulumi.Input<string>;
}

export interface InstanceServerRootVolume {
    /**
     * Set the volume where the boot the server
     */
    boot?: pulumi.Input<boolean>;
    /**
     * Force deletion of the root volume on instanceSDK termination
     */
    deleteOnTermination?: pulumi.Input<boolean>;
    /**
     * Name of the root volume
     */
    name?: pulumi.Input<string>;
    /**
     * Size of the root volume in gigabytes
     */
    sizeInGb?: pulumi.Input<number>;
    /**
     * Volume ID of the root volume
     */
    volumeId?: pulumi.Input<string>;
    /**
     * Volume type of the root volume
     */
    volumeType?: pulumi.Input<string>;
}

export interface InstanceServerTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceSnapshotImport {
    /**
     * Bucket containing qcow
     */
    bucket: pulumi.Input<string>;
    /**
     * Key of the qcow file in the specified bucket
     */
    key: pulumi.Input<string>;
}

export interface InstanceSnapshotTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface InstanceUserDataTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceVolumeTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IotDeviceCertificate {
    /**
     * X509 PEM encoded certificate of the device
     */
    crt?: pulumi.Input<string>;
    /**
     * X509 PEM encoded key of the device
     */
    key?: pulumi.Input<string>;
}

export interface IotDeviceMessageFilters {
    /**
     * Rule to restrict topics the device can publish to
     */
    publish?: pulumi.Input<inputs.IotDeviceMessageFiltersPublish>;
    /**
     * Rule to restrict topics the device can subscribe to
     */
    subscribe?: pulumi.Input<inputs.IotDeviceMessageFiltersSubscribe>;
}

export interface IotDeviceMessageFiltersPublish {
    /**
     * Publish message filter policy
     */
    policy?: pulumi.Input<string>;
    /**
     * List of topics in the set
     */
    topics?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IotDeviceMessageFiltersSubscribe {
    /**
     * Subscribe message filter policy
     */
    policy?: pulumi.Input<string>;
    /**
     * List of topics in the set
     */
    topics?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IotHubTimeouts {
    default?: pulumi.Input<string>;
}

export interface IotNetworkTimeouts {
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface IotRouteDatabase {
    /**
     * The database name
     */
    dbname: pulumi.Input<string>;
    /**
     * The database hostname
     */
    host: pulumi.Input<string>;
    /**
     * The database password
     */
    password: pulumi.Input<string>;
    /**
     * The database port
     */
    port: pulumi.Input<number>;
    /**
     * SQL query to be executed ($TOPIC and $PAYLOAD variables are available, see documentation)
     */
    query: pulumi.Input<string>;
    /**
     * The database username
     */
    username: pulumi.Input<string>;
}

export interface IotRouteRest {
    /**
     * The HTTP call extra headers
     */
    headers: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The URI of the REST endpoint
     */
    uri: pulumi.Input<string>;
    /**
     * The HTTP Verb used to call REST URI
     */
    verb: pulumi.Input<string>;
}

export interface IotRouteS3 {
    /**
     * The name of the S3 route's destination bucket
     */
    bucketName: pulumi.Input<string>;
    /**
     * The region of the S3 route's destination bucket
     */
    bucketRegion: pulumi.Input<string>;
    /**
     * The string to prefix object names with
     */
    objectPrefix?: pulumi.Input<string>;
    /**
     * How the S3 route's objects will be created: one per topic or one per message
     */
    strategy: pulumi.Input<string>;
}

export interface IotRouteTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
}

export interface IpamIpResource {
    id: pulumi.Input<string>;
    macAddress: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface IpamIpReverse {
    address: pulumi.Input<string>;
    hostname: pulumi.Input<string>;
}

export interface IpamIpReverseDnsTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IpamIpSource {
    /**
     * Private Network the IP lives in if the IP is a private IP
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * Private Network subnet the IP lives in if the IP is a private IP in a Private Network
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Zone the IP lives in if the IP is a public zoned one
     */
    zonal?: pulumi.Input<string>;
}

export interface JobDefinitionCron {
    schedule: pulumi.Input<string>;
    timezone: pulumi.Input<string>;
}

export interface K8sClusterAutoUpgrade {
    /**
     * Enables the Kubernetes patch version auto upgrade
     */
    enable: pulumi.Input<boolean>;
    /**
     * Day of the maintenance window
     */
    maintenanceWindowDay: pulumi.Input<string>;
    /**
     * Start hour of the 2-hour maintenance window
     */
    maintenanceWindowStartHour: pulumi.Input<number>;
}

export interface K8sClusterAutoscalerConfig {
    /**
     * Detect similar node groups and balance the number of nodes between them
     */
    balanceSimilarNodeGroups?: pulumi.Input<boolean>;
    /**
     * Disable the scale down feature of the autoscaler
     */
    disableScaleDown?: pulumi.Input<boolean>;
    /**
     * Type of resource estimator to be used in scale up
     */
    estimator?: pulumi.Input<string>;
    /**
     * Type of node group expander to be used in scale up
     */
    expander?: pulumi.Input<string>;
    /**
     * Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable
     */
    expendablePodsPriorityCutoff?: pulumi.Input<number>;
    /**
     * Ignore DaemonSet pods when calculating resource utilization for scaling down
     */
    ignoreDaemonsetsUtilization?: pulumi.Input<boolean>;
    /**
     * Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
     */
    maxGracefulTerminationSec?: pulumi.Input<number>;
    /**
     * How long after scale up that scale down evaluation resumes
     */
    scaleDownDelayAfterAdd?: pulumi.Input<string>;
    /**
     * How long a node should be unneeded before it is eligible for scale down
     */
    scaleDownUnneededTime?: pulumi.Input<string>;
    /**
     * Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
     */
    scaleDownUtilizationThreshold?: pulumi.Input<number>;
}

export interface K8sClusterKubeconfig {
    clusterCaCertificate: pulumi.Input<string>;
    configFile: pulumi.Input<string>;
    host: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface K8sClusterOpenIdConnectConfig {
    /**
     * A client id that all tokens must be issued for
     */
    clientId: pulumi.Input<string>;
    /**
     * JWT claim to use as the user's group
     */
    groupsClaims?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Prefix prepended to group claims
     */
    groupsPrefix?: pulumi.Input<string>;
    /**
     * URL of the provider which allows the API server to discover public signing keys
     */
    issuerUrl: pulumi.Input<string>;
    /**
     * Multiple key=value pairs that describes a required claim in the ID Token
     */
    requiredClaims?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * JWT claim to use as the user name
     */
    usernameClaim?: pulumi.Input<string>;
    /**
     * Prefix prepended to username
     */
    usernamePrefix?: pulumi.Input<string>;
}

export interface K8sClusterTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface K8sPoolNode {
    name: pulumi.Input<string>;
    publicIp: pulumi.Input<string>;
    publicIpV6: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface K8sPoolTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface K8sPoolUpgradePolicy {
    /**
     * The maximum number of nodes to be created during the upgrade
     */
    maxSurge?: pulumi.Input<number>;
    /**
     * The maximum number of nodes that can be not ready at the same time
     */
    maxUnavailable?: pulumi.Input<number>;
}

export interface LbAclAction {
    /**
     * Redirect parameters when using an ACL with `redirect` action
     */
    redirects?: pulumi.Input<pulumi.Input<inputs.LbAclActionRedirect>[]>;
    /**
     * The action type
     */
    type: pulumi.Input<string>;
}

export interface LbAclActionRedirect {
    /**
     * The HTTP redirect code to use
     */
    code?: pulumi.Input<number>;
    /**
     * An URL can be used in case of a location redirect
     */
    target?: pulumi.Input<string>;
    /**
     * The redirect type
     */
    type?: pulumi.Input<string>;
}

export interface LbAclMatch {
    /**
     * The HTTP filter to match
     */
    httpFilter?: pulumi.Input<string>;
    /**
     * You can use this field with http_header_match acl type to set the header name to filter
     */
    httpFilterOption?: pulumi.Input<string>;
    /**
     * A list of possible values to match for the given HTTP filter
     */
    httpFilterValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set to true, the condition will be of type "unless"
     */
    invert?: pulumi.Input<boolean>;
    /**
     * A list of IPs or CIDR v4/v6 addresses of the client of the session to match
     */
    ipSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LbAclTimeouts {
    default?: pulumi.Input<string>;
}

export interface LbBackendHealthCheckHttp {
    /**
     * The expected HTTP status code
     */
    code?: pulumi.Input<number>;
    /**
     * The HTTP host header to use for HC requests
     */
    hostHeader?: pulumi.Input<string>;
    /**
     * The HTTP method to use for HC requests
     */
    method?: pulumi.Input<string>;
    /**
     * The HTTP endpoint URL to call for HC requests
     */
    uri: pulumi.Input<string>;
}

export interface LbBackendHealthCheckHttps {
    /**
     * The expected HTTP status code
     */
    code?: pulumi.Input<number>;
    /**
     * The HTTP host header to use for HC requests
     */
    hostHeader?: pulumi.Input<string>;
    /**
     * The HTTP method to use for HC requests
     */
    method?: pulumi.Input<string>;
    /**
     * The SNI to use for HC requests over SSL
     */
    sni?: pulumi.Input<string>;
    /**
     * The HTTPS endpoint URL to call for HC requests
     */
    uri: pulumi.Input<string>;
}

export interface LbBackendHealthCheckTcp {
}

export interface LbBackendTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbCertificateCustomCertificate {
    /**
     * The full PEM-formatted certificate chain
     */
    certificateChain: pulumi.Input<string>;
}

export interface LbCertificateLetsencrypt {
    /**
     * The main domain name of the certificate
     */
    commonName: pulumi.Input<string>;
    /**
     * The alternative domain names of the certificate
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LbCertificateTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbFrontendAcl {
    /**
     * Action to undertake when an ACL filter matches
     */
    action: pulumi.Input<inputs.LbFrontendAclAction>;
    /**
     * IsDate and time of ACL's creation (RFC 3339 format)
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Description of the ACL
     */
    description?: pulumi.Input<string>;
    /**
     * The ACL match rule
     */
    match: pulumi.Input<inputs.LbFrontendAclMatch>;
    /**
     * The ACL name
     */
    name?: pulumi.Input<string>;
    /**
     * IsDate and time of ACL's update (RFC 3339 format)
     */
    updatedAt?: pulumi.Input<string>;
}

export interface LbFrontendAclAction {
    /**
     * Redirect parameters when using an ACL with `redirect` action
     */
    redirects?: pulumi.Input<pulumi.Input<inputs.LbFrontendAclActionRedirect>[]>;
    /**
     * The action type
     */
    type: pulumi.Input<string>;
}

export interface LbFrontendAclActionRedirect {
    /**
     * The HTTP redirect code to use
     */
    code?: pulumi.Input<number>;
    /**
     * An URL can be used in case of a location redirect
     */
    target?: pulumi.Input<string>;
    /**
     * The redirect type
     */
    type?: pulumi.Input<string>;
}

export interface LbFrontendAclMatch {
    /**
     * The HTTP filter to match
     */
    httpFilter?: pulumi.Input<string>;
    /**
     * You can use this field with http_header_match acl type to set the header name to filter
     */
    httpFilterOption?: pulumi.Input<string>;
    /**
     * A list of possible values to match for the given HTTP filter
     */
    httpFilterValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If set to true, the condition will be of type "unless"
     */
    invert?: pulumi.Input<boolean>;
    /**
     * A list of IPs or CIDR v4/v6 addresses of the client of the session to match
     */
    ipSubnets?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LbFrontendTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbIpTimeouts {
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LbPrivateNetwork {
    /**
     * Set to true if you want to let DHCP assign IP addresses
     */
    dhcpConfig?: pulumi.Input<boolean>;
    /**
     * IPAM ID of a pre-reserved IP address to assign to the Load Balancer on this Private Network
     */
    ipamIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Private Network ID
     */
    privateNetworkId: pulumi.Input<string>;
    /**
     * Define an IP address in the subnet of your private network that will be assigned to your load balancer instance
     *
     * @deprecated Deprecated
     */
    staticConfigs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of private network connection
     */
    status?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}

export interface LbRouteTimeouts {
    default?: pulumi.Input<string>;
}

export interface LbTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface MnqSnsCredentialsPermissions {
    /**
     * Allow manage the associated resource
     */
    canManage?: pulumi.Input<boolean>;
    /**
     * Allow publish messages to the service
     */
    canPublish?: pulumi.Input<boolean>;
    /**
     * Allow receive messages from the service
     */
    canReceive?: pulumi.Input<boolean>;
}

export interface MnqSqsCredentialsPermissions {
    /**
     * Allow manage the associated resource
     */
    canManage?: pulumi.Input<boolean>;
    /**
     * Allow publish messages to the service
     */
    canPublish?: pulumi.Input<boolean>;
    /**
     * Allow receive messages from the service
     */
    canReceive?: pulumi.Input<boolean>;
}

export interface MnqSqsQueueTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ObjectBucketAclAccessControlPolicy {
    grants?: pulumi.Input<pulumi.Input<inputs.ObjectBucketAclAccessControlPolicyGrant>[]>;
    /**
     * Configuration block of the bucket project owner's display organization ID.
     */
    owner: pulumi.Input<inputs.ObjectBucketAclAccessControlPolicyOwner>;
}

export interface ObjectBucketAclAccessControlPolicyGrant {
    /**
     * Configuration block for the project being granted permissions.
     */
    grantee?: pulumi.Input<inputs.ObjectBucketAclAccessControlPolicyGrantGrantee>;
    /**
     * Logging permissions assigned to the grantee for the bucket.
     */
    permission: pulumi.Input<string>;
}

export interface ObjectBucketAclAccessControlPolicyGrantGrantee {
    displayName?: pulumi.Input<string>;
    /**
     * The project ID owner of the grantee.
     */
    id: pulumi.Input<string>;
    /**
     * Type of grantee. Valid values: `CanonicalUser`
     */
    type: pulumi.Input<string>;
}

export interface ObjectBucketAclAccessControlPolicyOwner {
    /**
     * The project ID of the grantee.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The display ID of the project.
     */
    id: pulumi.Input<string>;
}

export interface ObjectBucketCorsRule {
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeSeconds?: pulumi.Input<number>;
}

export interface ObjectBucketLifecycleRule {
    /**
     * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed
     */
    abortIncompleteMultipartUploadDays?: pulumi.Input<number>;
    /**
     * Specifies if the configuration rule is Enabled or Disabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Specifies a period in the object's expire
     */
    expiration?: pulumi.Input<inputs.ObjectBucketLifecycleRuleExpiration>;
    /**
     * Unique identifier for the rule
     */
    id?: pulumi.Input<string>;
    /**
     * The prefix identifying one or more objects to which the rule applies
     */
    prefix?: pulumi.Input<string>;
    /**
     * The tags associated with the bucket lifecycle
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Define when objects transition to another storage class
     */
    transitions?: pulumi.Input<pulumi.Input<inputs.ObjectBucketLifecycleRuleTransition>[]>;
}

export interface ObjectBucketLifecycleRuleExpiration {
    /**
     * Specifies the number of days after object creation when the specific rule action takes effect
     */
    days: pulumi.Input<number>;
}

export interface ObjectBucketLifecycleRuleTransition {
    /**
     * Specifies the number of days after object creation when the specific rule action takes effect
     */
    days?: pulumi.Input<number>;
    /**
     * Specifies the Scaleway Object Storage class to which you want the object to transition
     */
    storageClass: pulumi.Input<string>;
}

export interface ObjectBucketLockConfigurationRule {
    defaultRetention: pulumi.Input<inputs.ObjectBucketLockConfigurationRuleDefaultRetention>;
}

export interface ObjectBucketLockConfigurationRuleDefaultRetention {
    /**
     * The number of days that you want to specify for the default retention period.
     */
    days?: pulumi.Input<number>;
    /**
     * The default Object Lock retention mode you want to apply to new objects placed in the specified bucket.
     */
    mode: pulumi.Input<string>;
    /**
     * The number of years that you want to specify for the default retention period.
     */
    years?: pulumi.Input<number>;
}

export interface ObjectBucketPolicyTimeouts {
    default?: pulumi.Input<string>;
}

export interface ObjectBucketTimeouts {
    default?: pulumi.Input<string>;
}

export interface ObjectBucketVersioning {
    /**
     * Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state
     */
    enabled?: pulumi.Input<boolean>;
}

export interface ObjectBucketWebsiteConfigurationErrorDocument {
    key: pulumi.Input<string>;
}

export interface ObjectBucketWebsiteConfigurationIndexDocument {
    suffix: pulumi.Input<string>;
}

export interface ObjectTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RdbAclAclRule {
    /**
     * Description of the rule
     */
    description?: pulumi.Input<string>;
    /**
     * Target IP of the rules
     */
    ip: pulumi.Input<string>;
}

export interface RdbAclTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RdbDatabaseBackupTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RdbDatabaseTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface RdbInstanceLoadBalancer {
    /**
     * The endpoint ID
     */
    endpointId?: pulumi.Input<string>;
    /**
     * The hostname of your endpoint
     */
    hostname?: pulumi.Input<string>;
    /**
     * The IP of your load balancer service
     */
    ip?: pulumi.Input<string>;
    /**
     * The name of your load balancer service
     */
    name?: pulumi.Input<string>;
    /**
     * The port of your load balancer service
     */
    port?: pulumi.Input<number>;
}

export interface RdbInstanceLogsPolicy {
    /**
     * The max age (in days) of remote logs to keep on the Database Instance
     */
    maxAgeRetention?: pulumi.Input<number>;
    /**
     * The max disk size of remote logs to keep on the Database Instance.
     */
    totalDiskRetention?: pulumi.Input<number>;
}

export interface RdbInstancePrivateNetwork {
    /**
     * Whether or not the private network endpoint should be configured with IPAM
     */
    enableIpam?: pulumi.Input<boolean>;
    /**
     * The endpoint ID
     */
    endpointId?: pulumi.Input<string>;
    /**
     * The hostname of your endpoint
     */
    hostname?: pulumi.Input<string>;
    /**
     * The IP of your Instance within the private service
     */
    ip?: pulumi.Input<string>;
    /**
     * The IP with the given mask within the private subnet
     */
    ipNet?: pulumi.Input<string>;
    /**
     * The name of your private service
     */
    name?: pulumi.Input<string>;
    /**
     * The private network ID
     */
    pnId: pulumi.Input<string>;
    /**
     * The port of your private service
     */
    port?: pulumi.Input<number>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

export interface RdbInstanceReadReplica {
    ip: pulumi.Input<string>;
    name: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface RdbInstanceTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RdbPrivilegeTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RdbReadReplicaDirectAccess {
    /**
     * UUID of the endpoint (UUID format).
     */
    endpointId?: pulumi.Input<string>;
    /**
     * Hostname of the endpoint. Only one of ip and hostname may be set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set.
     */
    ip?: pulumi.Input<string>;
    /**
     * Name of the endpoint.
     */
    name?: pulumi.Input<string>;
    /**
     * TCP port of the endpoint.
     */
    port?: pulumi.Input<number>;
}

export interface RdbReadReplicaPrivateNetwork {
    /**
     * Whether or not the private network endpoint should be configured with IPAM
     */
    enableIpam?: pulumi.Input<boolean>;
    /**
     * UUID of the endpoint (UUID format).
     */
    endpointId?: pulumi.Input<string>;
    /**
     * Hostname of the endpoint. Only one of ip and hostname may be set
     */
    hostname?: pulumi.Input<string>;
    /**
     * IPv4 address of the endpoint (IP address). Only one of ip and hostname may be set
     */
    ip?: pulumi.Input<string>;
    /**
     * Name of the endpoints
     */
    name?: pulumi.Input<string>;
    /**
     * TCP port of the endpoint
     */
    port?: pulumi.Input<number>;
    /**
     * UUID of the private network to be connected to the read replica (UUID format)
     */
    privateNetworkId: pulumi.Input<string>;
    /**
     * The IP network address within the private subnet
     */
    serviceIp?: pulumi.Input<string>;
    /**
     * Private network zone
     */
    zone?: pulumi.Input<string>;
}

export interface RdbReadReplicaTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RdbUserTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RedisClusterAcl {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the rule (UUID format).
     */
    id?: pulumi.Input<string>;
    /**
     * IPv4 network address of the rule (IP network in a CIDR format).
     */
    ip: pulumi.Input<string>;
}

export interface RedisClusterPrivateNetwork {
    /**
     * UUID of the endpoint to be connected to the cluster
     */
    endpointId?: pulumi.Input<string>;
    /**
     * UUID of the private network to be connected to the cluster
     */
    id: pulumi.Input<string>;
    /**
     * List of IPv4 addresses of the private network with a CIDR notation
     */
    serviceIps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zone of the resource
     */
    zone?: pulumi.Input<string>;
}

export interface RedisClusterPublicNetwork {
    id?: pulumi.Input<string>;
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP port of the endpoint
     */
    port?: pulumi.Input<number>;
}

export interface RedisClusterTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RegistryNamespaceTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SdbSqlDatabaseTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecretTimeouts {
    default?: pulumi.Input<string>;
}

export interface SecretVersionTimeouts {
    default?: pulumi.Input<string>;
}

export interface TemDomainReputation {
    previousScore: pulumi.Input<number>;
    previousScoredAt: pulumi.Input<string>;
    score: pulumi.Input<number>;
    scoredAt: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface TemDomainTimeouts {
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface TemDomainValidationTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface VpcGatewayNetworkIpamConfig {
    /**
     * Use this IPAM-booked IP ID as the Gateway's IP in this Private Network
     */
    ipamIpId?: pulumi.Input<string>;
    /**
     * Defines whether the default route is enabled on that Gateway Network
     */
    pushDefaultRoute?: pulumi.Input<boolean>;
}

export interface VpcGatewayNetworkTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpcPrivateNetworkIpv4Subnet {
    /**
     * The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
     */
    address?: pulumi.Input<string>;
    /**
     * The date and time of the creation of the subnet
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The subnet ID
     */
    id?: pulumi.Input<string>;
    /**
     * The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * The subnet CIDR
     */
    subnet?: pulumi.Input<string>;
    /**
     * The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
     */
    subnetMask?: pulumi.Input<string>;
    /**
     * The date and time of the last update of the subnet
     */
    updatedAt?: pulumi.Input<string>;
}

export interface VpcPrivateNetworkIpv6Subnet {
    /**
     * The network address of the subnet in dotted decimal notation, e.g., '192.168.0.0' for a '192.168.0.0/24' subnet
     */
    address?: pulumi.Input<string>;
    /**
     * The date and time of the creation of the subnet
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The subnet ID
     */
    id?: pulumi.Input<string>;
    /**
     * The length of the network prefix, e.g., 24 for a 255.255.255.0 mask
     */
    prefixLength?: pulumi.Input<number>;
    /**
     * The subnet CIDR
     */
    subnet?: pulumi.Input<string>;
    /**
     * The subnet mask expressed in dotted decimal notation, e.g., '255.255.255.0' for a /24 subnet
     */
    subnetMask?: pulumi.Input<string>;
    /**
     * The date and time of the last update of the subnet
     */
    updatedAt?: pulumi.Input<string>;
}

export interface VpcPublicGatewayDhcpReservationTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpcPublicGatewayIpReverseDnsTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpcPublicGatewayPatRuleTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VpcPublicGatewayTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WebhostingCpanelUrl {
    dashboard: pulumi.Input<string>;
    webmail: pulumi.Input<string>;
}

export interface WebhostingOption {
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface WebhostingTimeouts {
    create?: pulumi.Input<string>;
    default?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}
