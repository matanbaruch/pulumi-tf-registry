// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLbRoute(args: GetLbRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetLbRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getLbRoute:getLbRoute", {
        "id": args.id,
        "routeId": args.routeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbRoute.
 */
export interface GetLbRouteArgs {
    id?: string;
    routeId: string;
}

/**
 * A collection of values returned by getLbRoute.
 */
export interface GetLbRouteResult {
    readonly backendId: string;
    readonly createdAt: string;
    readonly frontendId: string;
    readonly id: string;
    readonly matchHostHeader: string;
    readonly matchSni: string;
    readonly routeId: string;
    readonly updatedAt: string;
}
export function getLbRouteOutput(args: GetLbRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbRouteResult> {
    return pulumi.output(args).apply((a: any) => getLbRoute(a, opts))
}

/**
 * A collection of arguments for invoking getLbRoute.
 */
export interface GetLbRouteOutputArgs {
    id?: pulumi.Input<string>;
    routeId: pulumi.Input<string>;
}
