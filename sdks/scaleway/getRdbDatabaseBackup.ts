// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRdbDatabaseBackup(args?: GetRdbDatabaseBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetRdbDatabaseBackupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getRdbDatabaseBackup:getRdbDatabaseBackup", {
        "backupId": args.backupId,
        "id": args.id,
        "instanceId": args.instanceId,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRdbDatabaseBackup.
 */
export interface GetRdbDatabaseBackupArgs {
    backupId?: string;
    id?: string;
    instanceId?: string;
    name?: string;
    projectId?: string;
    region?: string;
}

/**
 * A collection of values returned by getRdbDatabaseBackup.
 */
export interface GetRdbDatabaseBackupResult {
    readonly backupId?: string;
    readonly createdAt: string;
    readonly databaseName: string;
    readonly expiresAt: string;
    readonly id: string;
    readonly instanceId?: string;
    readonly instanceName: string;
    readonly name?: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly size: number;
    readonly updatedAt: string;
}
export function getRdbDatabaseBackupOutput(args?: GetRdbDatabaseBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRdbDatabaseBackupResult> {
    return pulumi.output(args).apply((a: any) => getRdbDatabaseBackup(a, opts))
}

/**
 * A collection of arguments for invoking getRdbDatabaseBackup.
 */
export interface GetRdbDatabaseBackupOutputArgs {
    backupId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instanceId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
