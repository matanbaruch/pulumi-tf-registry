// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ObjectBucketAcl extends pulumi.CustomResource {
    /**
     * Get an existing ObjectBucketAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectBucketAclState, opts?: pulumi.CustomResourceOptions): ObjectBucketAcl {
        return new ObjectBucketAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/objectBucketAcl:ObjectBucketAcl';

    /**
     * Returns true if the given object is an instance of ObjectBucketAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectBucketAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectBucketAcl.__pulumiType;
    }

    /**
     * A configuration block that sets the ACL permissions for an object per grantee.
     */
    public readonly accessControlPolicy!: pulumi.Output<outputs.ObjectBucketAclAccessControlPolicy | undefined>;
    /**
     * ACL of the bucket: either 'private', 'public-read', 'public-read-write' or 'authenticated-read'.
     */
    public readonly acl!: pulumi.Output<string | undefined>;
    /**
     * The bucket's name or regional ID.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * The project ID as owner.
     */
    public readonly expectedBucketOwner!: pulumi.Output<string | undefined>;
    /**
     * The project_id you want to attach the resource to
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The region you want to attach the resource to
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a ObjectBucketAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectBucketAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectBucketAclArgs | ObjectBucketAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectBucketAclState | undefined;
            resourceInputs["accessControlPolicy"] = state ? state.accessControlPolicy : undefined;
            resourceInputs["acl"] = state ? state.acl : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["expectedBucketOwner"] = state ? state.expectedBucketOwner : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as ObjectBucketAclArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["accessControlPolicy"] = args ? args.accessControlPolicy : undefined;
            resourceInputs["acl"] = args ? args.acl : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["expectedBucketOwner"] = args ? args.expectedBucketOwner : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectBucketAcl.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ObjectBucketAcl resources.
 */
export interface ObjectBucketAclState {
    /**
     * A configuration block that sets the ACL permissions for an object per grantee.
     */
    accessControlPolicy?: pulumi.Input<inputs.ObjectBucketAclAccessControlPolicy>;
    /**
     * ACL of the bucket: either 'private', 'public-read', 'public-read-write' or 'authenticated-read'.
     */
    acl?: pulumi.Input<string>;
    /**
     * The bucket's name or regional ID.
     */
    bucket?: pulumi.Input<string>;
    /**
     * The project ID as owner.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectBucketAcl resource.
 */
export interface ObjectBucketAclArgs {
    /**
     * A configuration block that sets the ACL permissions for an object per grantee.
     */
    accessControlPolicy?: pulumi.Input<inputs.ObjectBucketAclAccessControlPolicy>;
    /**
     * ACL of the bucket: either 'private', 'public-read', 'public-read-write' or 'authenticated-read'.
     */
    acl?: pulumi.Input<string>;
    /**
     * The bucket's name or regional ID.
     */
    bucket: pulumi.Input<string>;
    /**
     * The project ID as owner.
     */
    expectedBucketOwner?: pulumi.Input<string>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
}
