// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWebhosting(args?: GetWebhostingArgs, opts?: pulumi.InvokeOptions): Promise<GetWebhostingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("scaleway:index/getWebhosting:getWebhosting", {
        "domain": args.domain,
        "id": args.id,
        "organizationId": args.organizationId,
        "projectId": args.projectId,
        "webhostingId": args.webhostingId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWebhosting.
 */
export interface GetWebhostingArgs {
    domain?: string;
    id?: string;
    organizationId?: string;
    projectId?: string;
    webhostingId?: string;
}

/**
 * A collection of values returned by getWebhosting.
 */
export interface GetWebhostingResult {
    readonly cpanelUrls: outputs.GetWebhostingCpanelUrl[];
    readonly createdAt: string;
    readonly dnsStatus: string;
    readonly domain?: string;
    readonly email: string;
    readonly id: string;
    readonly offerId: string;
    readonly offerName: string;
    readonly optionIds: string[];
    readonly options: outputs.GetWebhostingOption[];
    readonly organizationId: string;
    readonly platformHostname: string;
    readonly platformNumber: number;
    readonly projectId?: string;
    readonly region: string;
    readonly status: string;
    readonly tags: string[];
    readonly updatedAt: string;
    readonly username: string;
    readonly webhostingId?: string;
}
export function getWebhostingOutput(args?: GetWebhostingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebhostingResult> {
    return pulumi.output(args).apply((a: any) => getWebhosting(a, opts))
}

/**
 * A collection of arguments for invoking getWebhosting.
 */
export interface GetWebhostingOutputArgs {
    domain?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    organizationId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    webhostingId?: pulumi.Input<string>;
}
