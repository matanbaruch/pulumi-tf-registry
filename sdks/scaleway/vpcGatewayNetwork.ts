// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VpcGatewayNetwork extends pulumi.CustomResource {
    /**
     * Get an existing VpcGatewayNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcGatewayNetworkState, opts?: pulumi.CustomResourceOptions): VpcGatewayNetwork {
        return new VpcGatewayNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork';

    /**
     * Returns true if the given object is an instance of VpcGatewayNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcGatewayNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcGatewayNetwork.__pulumiType;
    }

    /**
     * Remove DHCP config on this network on destroy
     */
    public readonly cleanupDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * The date and time of the creation of the gateway network
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the public gateway DHCP config
     */
    public readonly dhcpId!: pulumi.Output<string | undefined>;
    /**
     * Enable DHCP config on this network
     */
    public readonly enableDhcp!: pulumi.Output<boolean | undefined>;
    /**
     * Enable masquerade on this network
     */
    public readonly enableMasquerade!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the public gateway where connect to
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * Auto-configure the Gateway Network using IPAM (IP address management service)
     */
    public readonly ipamConfigs!: pulumi.Output<outputs.VpcGatewayNetworkIpamConfig[] | undefined>;
    /**
     * The mac address on this network
     */
    public /*out*/ readonly macAddress!: pulumi.Output<string>;
    /**
     * The ID of the private network where connect to
     */
    public readonly privateNetworkId!: pulumi.Output<string>;
    /**
     * The static IP address in CIDR on this network
     */
    public readonly staticAddress!: pulumi.Output<string>;
    /**
     * The status of the Public Gateway's connection to the Private Network
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.VpcGatewayNetworkTimeouts | undefined>;
    /**
     * The date and time of the last update of the gateway network
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The zone you want to attach the resource to
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a VpcGatewayNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcGatewayNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcGatewayNetworkArgs | VpcGatewayNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcGatewayNetworkState | undefined;
            resourceInputs["cleanupDhcp"] = state ? state.cleanupDhcp : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dhcpId"] = state ? state.dhcpId : undefined;
            resourceInputs["enableDhcp"] = state ? state.enableDhcp : undefined;
            resourceInputs["enableMasquerade"] = state ? state.enableMasquerade : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["ipamConfigs"] = state ? state.ipamConfigs : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["privateNetworkId"] = state ? state.privateNetworkId : undefined;
            resourceInputs["staticAddress"] = state ? state.staticAddress : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as VpcGatewayNetworkArgs | undefined;
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.privateNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateNetworkId'");
            }
            resourceInputs["cleanupDhcp"] = args ? args.cleanupDhcp : undefined;
            resourceInputs["dhcpId"] = args ? args.dhcpId : undefined;
            resourceInputs["enableDhcp"] = args ? args.enableDhcp : undefined;
            resourceInputs["enableMasquerade"] = args ? args.enableMasquerade : undefined;
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["ipamConfigs"] = args ? args.ipamConfigs : undefined;
            resourceInputs["privateNetworkId"] = args ? args.privateNetworkId : undefined;
            resourceInputs["staticAddress"] = args ? args.staticAddress : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcGatewayNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VpcGatewayNetwork resources.
 */
export interface VpcGatewayNetworkState {
    /**
     * Remove DHCP config on this network on destroy
     */
    cleanupDhcp?: pulumi.Input<boolean>;
    /**
     * The date and time of the creation of the gateway network
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the public gateway DHCP config
     */
    dhcpId?: pulumi.Input<string>;
    /**
     * Enable DHCP config on this network
     */
    enableDhcp?: pulumi.Input<boolean>;
    /**
     * Enable masquerade on this network
     */
    enableMasquerade?: pulumi.Input<boolean>;
    /**
     * The ID of the public gateway where connect to
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Auto-configure the Gateway Network using IPAM (IP address management service)
     */
    ipamConfigs?: pulumi.Input<pulumi.Input<inputs.VpcGatewayNetworkIpamConfig>[]>;
    /**
     * The mac address on this network
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The ID of the private network where connect to
     */
    privateNetworkId?: pulumi.Input<string>;
    /**
     * The static IP address in CIDR on this network
     */
    staticAddress?: pulumi.Input<string>;
    /**
     * The status of the Public Gateway's connection to the Private Network
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VpcGatewayNetworkTimeouts>;
    /**
     * The date and time of the last update of the gateway network
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcGatewayNetwork resource.
 */
export interface VpcGatewayNetworkArgs {
    /**
     * Remove DHCP config on this network on destroy
     */
    cleanupDhcp?: pulumi.Input<boolean>;
    /**
     * The ID of the public gateway DHCP config
     */
    dhcpId?: pulumi.Input<string>;
    /**
     * Enable DHCP config on this network
     */
    enableDhcp?: pulumi.Input<boolean>;
    /**
     * Enable masquerade on this network
     */
    enableMasquerade?: pulumi.Input<boolean>;
    /**
     * The ID of the public gateway where connect to
     */
    gatewayId: pulumi.Input<string>;
    /**
     * Auto-configure the Gateway Network using IPAM (IP address management service)
     */
    ipamConfigs?: pulumi.Input<pulumi.Input<inputs.VpcGatewayNetworkIpamConfig>[]>;
    /**
     * The ID of the private network where connect to
     */
    privateNetworkId: pulumi.Input<string>;
    /**
     * The static IP address in CIDR on this network
     */
    staticAddress?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.VpcGatewayNetworkTimeouts>;
    /**
     * The zone you want to attach the resource to
     */
    zone?: pulumi.Input<string>;
}
