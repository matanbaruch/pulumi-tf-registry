// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Webhosting extends pulumi.CustomResource {
    /**
     * Get an existing Webhosting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhostingState, opts?: pulumi.CustomResourceOptions): Webhosting {
        return new Webhosting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scaleway:index/webhosting:Webhosting';

    /**
     * Returns true if the given object is an instance of Webhosting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhosting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhosting.__pulumiType;
    }

    /**
     * URL to connect to cPanel Dashboard and to Webmail interface
     */
    public /*out*/ readonly cpanelUrls!: pulumi.Output<outputs.WebhostingCpanelUrl[]>;
    /**
     * IsDate and time of hosting's creation (RFC 3339 format)
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * DNS status of the hosting
     */
    public /*out*/ readonly dnsStatus!: pulumi.Output<string>;
    /**
     * The domain name of the hosting
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Contact email of the client for the hosting
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The ID of the selected offer for the hosting
     */
    public readonly offerId!: pulumi.Output<string>;
    /**
     * Name of the active offer
     */
    public /*out*/ readonly offerName!: pulumi.Output<string>;
    /**
     * IDs of the selected options for the hosting
     */
    public readonly optionIds!: pulumi.Output<string[] | undefined>;
    /**
     * Active options of the hosting
     */
    public /*out*/ readonly options!: pulumi.Output<outputs.WebhostingOption[]>;
    /**
     * The organization_id you want to attach the resource to
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * Hostname of the host platform
     */
    public /*out*/ readonly platformHostname!: pulumi.Output<string>;
    /**
     * Number of the host platform
     */
    public /*out*/ readonly platformNumber!: pulumi.Output<number>;
    /**
     * The project_id you want to attach the resource to
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The region you want to attach the resource to
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The hosting status
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The tags of the hosting
     */
    public readonly tags!: pulumi.Output<string[]>;
    public readonly timeouts!: pulumi.Output<outputs.WebhostingTimeouts | undefined>;
    /**
     * IsDate and time of hosting's last update (RFC 3339 format)
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * Main hosting cPanel username
     */
    public /*out*/ readonly username!: pulumi.Output<string>;

    /**
     * Create a Webhosting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhostingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhostingArgs | WebhostingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhostingState | undefined;
            resourceInputs["cpanelUrls"] = state ? state.cpanelUrls : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["dnsStatus"] = state ? state.dnsStatus : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["offerId"] = state ? state.offerId : undefined;
            resourceInputs["offerName"] = state ? state.offerName : undefined;
            resourceInputs["optionIds"] = state ? state.optionIds : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["platformHostname"] = state ? state.platformHostname : undefined;
            resourceInputs["platformNumber"] = state ? state.platformNumber : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as WebhostingArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.offerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'offerId'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["offerId"] = args ? args.offerId : undefined;
            resourceInputs["optionIds"] = args ? args.optionIds : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["cpanelUrls"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dnsStatus"] = undefined /*out*/;
            resourceInputs["offerName"] = undefined /*out*/;
            resourceInputs["options"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["platformHostname"] = undefined /*out*/;
            resourceInputs["platformNumber"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["username"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Webhosting.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Webhosting resources.
 */
export interface WebhostingState {
    /**
     * URL to connect to cPanel Dashboard and to Webmail interface
     */
    cpanelUrls?: pulumi.Input<pulumi.Input<inputs.WebhostingCpanelUrl>[]>;
    /**
     * IsDate and time of hosting's creation (RFC 3339 format)
     */
    createdAt?: pulumi.Input<string>;
    /**
     * DNS status of the hosting
     */
    dnsStatus?: pulumi.Input<string>;
    /**
     * The domain name of the hosting
     */
    domain?: pulumi.Input<string>;
    /**
     * Contact email of the client for the hosting
     */
    email?: pulumi.Input<string>;
    /**
     * The ID of the selected offer for the hosting
     */
    offerId?: pulumi.Input<string>;
    /**
     * Name of the active offer
     */
    offerName?: pulumi.Input<string>;
    /**
     * IDs of the selected options for the hosting
     */
    optionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Active options of the hosting
     */
    options?: pulumi.Input<pulumi.Input<inputs.WebhostingOption>[]>;
    /**
     * The organization_id you want to attach the resource to
     */
    organizationId?: pulumi.Input<string>;
    /**
     * Hostname of the host platform
     */
    platformHostname?: pulumi.Input<string>;
    /**
     * Number of the host platform
     */
    platformNumber?: pulumi.Input<number>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
    /**
     * The hosting status
     */
    status?: pulumi.Input<string>;
    /**
     * The tags of the hosting
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.WebhostingTimeouts>;
    /**
     * IsDate and time of hosting's last update (RFC 3339 format)
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Main hosting cPanel username
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Webhosting resource.
 */
export interface WebhostingArgs {
    /**
     * The domain name of the hosting
     */
    domain: pulumi.Input<string>;
    /**
     * Contact email of the client for the hosting
     */
    email: pulumi.Input<string>;
    /**
     * The ID of the selected offer for the hosting
     */
    offerId: pulumi.Input<string>;
    /**
     * IDs of the selected options for the hosting
     */
    optionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The project_id you want to attach the resource to
     */
    projectId?: pulumi.Input<string>;
    /**
     * The region you want to attach the resource to
     */
    region?: pulumi.Input<string>;
    /**
     * The tags of the hosting
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    timeouts?: pulumi.Input<inputs.WebhostingTimeouts>;
}
