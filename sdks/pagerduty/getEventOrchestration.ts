// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventOrchestration(args: GetEventOrchestrationArgs, opts?: pulumi.InvokeOptions): Promise<GetEventOrchestrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getEventOrchestration:getEventOrchestration", {
        "id": args.id,
        "integrations": args.integrations,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventOrchestration.
 */
export interface GetEventOrchestrationArgs {
    id?: string;
    integrations?: inputs.GetEventOrchestrationIntegration[];
    name: string;
}

/**
 * A collection of values returned by getEventOrchestration.
 */
export interface GetEventOrchestrationResult {
    readonly id: string;
    readonly integrations?: outputs.GetEventOrchestrationIntegration[];
    readonly name: string;
}
export function getEventOrchestrationOutput(args: GetEventOrchestrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventOrchestrationResult> {
    return pulumi.output(args).apply((a: any) => getEventOrchestration(a, opts))
}

/**
 * A collection of arguments for invoking getEventOrchestration.
 */
export interface GetEventOrchestrationOutputArgs {
    id?: pulumi.Input<string>;
    integrations?: pulumi.Input<pulumi.Input<inputs.GetEventOrchestrationIntegrationArgs>[]>;
    name: pulumi.Input<string>;
}
