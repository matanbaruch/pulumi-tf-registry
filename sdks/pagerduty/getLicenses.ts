// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLicenses(args?: GetLicensesArgs, opts?: pulumi.InvokeOptions): Promise<GetLicensesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getLicenses:getLicenses", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicenses.
 */
export interface GetLicensesArgs {
    id?: string;
}

/**
 * A collection of values returned by getLicenses.
 */
export interface GetLicensesResult {
    readonly id?: string;
    readonly licenses: outputs.GetLicensesLicense[];
}
export function getLicensesOutput(args?: GetLicensesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicensesResult> {
    return pulumi.output(args).apply((a: any) => getLicenses(a, opts))
}

/**
 * A collection of arguments for invoking getLicenses.
 */
export interface GetLicensesOutputArgs {
    id?: pulumi.Input<string>;
}
