// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventOrchestrationIntegration(args: GetEventOrchestrationIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetEventOrchestrationIntegrationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getEventOrchestrationIntegration:getEventOrchestrationIntegration", {
        "eventOrchestration": args.eventOrchestration,
        "id": args.id,
        "label": args.label,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventOrchestrationIntegration.
 */
export interface GetEventOrchestrationIntegrationArgs {
    eventOrchestration: string;
    id?: string;
    label?: string;
}

/**
 * A collection of values returned by getEventOrchestrationIntegration.
 */
export interface GetEventOrchestrationIntegrationResult {
    readonly eventOrchestration: string;
    readonly id?: string;
    readonly label?: string;
    readonly parameters: outputs.GetEventOrchestrationIntegrationParameter[];
}
export function getEventOrchestrationIntegrationOutput(args: GetEventOrchestrationIntegrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventOrchestrationIntegrationResult> {
    return pulumi.output(args).apply((a: any) => getEventOrchestrationIntegration(a, opts))
}

/**
 * A collection of arguments for invoking getEventOrchestrationIntegration.
 */
export interface GetEventOrchestrationIntegrationOutputArgs {
    eventOrchestration: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
}
