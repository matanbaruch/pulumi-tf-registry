// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AutomationActionsAction extends pulumi.CustomResource {
    /**
     * Get an existing AutomationActionsAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutomationActionsActionState, opts?: pulumi.CustomResourceOptions): AutomationActionsAction {
        return new AutomationActionsAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pagerduty:index/automationActionsAction:AutomationActionsAction';

    /**
     * Returns true if the given object is an instance of AutomationActionsAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutomationActionsAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutomationActionsAction.__pulumiType;
    }

    public readonly actionClassification!: pulumi.Output<string | undefined>;
    public readonly actionDataReference!: pulumi.Output<outputs.AutomationActionsActionActionDataReference>;
    public readonly actionType!: pulumi.Output<string>;
    public readonly creationTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly modifyTime!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly runnerId!: pulumi.Output<string | undefined>;
    public readonly runnerType!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a AutomationActionsAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutomationActionsActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutomationActionsActionArgs | AutomationActionsActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutomationActionsActionState | undefined;
            resourceInputs["actionClassification"] = state ? state.actionClassification : undefined;
            resourceInputs["actionDataReference"] = state ? state.actionDataReference : undefined;
            resourceInputs["actionType"] = state ? state.actionType : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["modifyTime"] = state ? state.modifyTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["runnerId"] = state ? state.runnerId : undefined;
            resourceInputs["runnerType"] = state ? state.runnerType : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AutomationActionsActionArgs | undefined;
            if ((!args || args.actionDataReference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actionDataReference'");
            }
            if ((!args || args.actionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actionType'");
            }
            resourceInputs["actionClassification"] = args ? args.actionClassification : undefined;
            resourceInputs["actionDataReference"] = args ? args.actionDataReference : undefined;
            resourceInputs["actionType"] = args ? args.actionType : undefined;
            resourceInputs["creationTime"] = args ? args.creationTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["modifyTime"] = args ? args.modifyTime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["runnerId"] = args ? args.runnerId : undefined;
            resourceInputs["runnerType"] = args ? args.runnerType : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutomationActionsAction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutomationActionsAction resources.
 */
export interface AutomationActionsActionState {
    actionClassification?: pulumi.Input<string>;
    actionDataReference?: pulumi.Input<inputs.AutomationActionsActionActionDataReference>;
    actionType?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    modifyTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    runnerId?: pulumi.Input<string>;
    runnerType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutomationActionsAction resource.
 */
export interface AutomationActionsActionArgs {
    actionClassification?: pulumi.Input<string>;
    actionDataReference: pulumi.Input<inputs.AutomationActionsActionActionDataReference>;
    actionType: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    modifyTime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    runnerId?: pulumi.Input<string>;
    runnerType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
