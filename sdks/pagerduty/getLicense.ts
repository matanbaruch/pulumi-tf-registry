// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLicense(args?: GetLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetLicenseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getLicense:getLicense", {
        "description": args.description,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLicense.
 */
export interface GetLicenseArgs {
    description?: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getLicense.
 */
export interface GetLicenseResult {
    readonly allocationsAvailable: number;
    readonly currentValue: number;
    readonly description: string;
    readonly htmlUrl: string;
    readonly id: string;
    readonly name: string;
    readonly roleGroup: string;
    readonly self: string;
    readonly summary: string;
    readonly type: string;
    readonly validRoles: string[];
}
export function getLicenseOutput(args?: GetLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicenseResult> {
    return pulumi.output(args).apply((a: any) => getLicense(a, opts))
}

/**
 * A collection of arguments for invoking getLicense.
 */
export interface GetLicenseOutputArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
