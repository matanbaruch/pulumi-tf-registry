// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUserContactMethod(args: GetUserContactMethodArgs, opts?: pulumi.InvokeOptions): Promise<GetUserContactMethodResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getUserContactMethod:getUserContactMethod", {
        "id": args.id,
        "label": args.label,
        "type": args.type,
        "userId": args.userId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserContactMethod.
 */
export interface GetUserContactMethodArgs {
    id?: string;
    label: string;
    type: string;
    userId: string;
}

/**
 * A collection of values returned by getUserContactMethod.
 */
export interface GetUserContactMethodResult {
    readonly address: string;
    readonly blacklisted: boolean;
    readonly countryCode: number;
    readonly deviceType: string;
    readonly enabled: boolean;
    readonly id: string;
    readonly label: string;
    readonly sendShortEmail: boolean;
    readonly type: string;
    readonly userId: string;
}
export function getUserContactMethodOutput(args: GetUserContactMethodOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserContactMethodResult> {
    return pulumi.output(args).apply((a: any) => getUserContactMethod(a, opts))
}

/**
 * A collection of arguments for invoking getUserContactMethod.
 */
export interface GetUserContactMethodOutputArgs {
    id?: pulumi.Input<string>;
    label: pulumi.Input<string>;
    type: pulumi.Input<string>;
    userId: pulumi.Input<string>;
}
