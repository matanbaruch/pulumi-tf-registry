// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventOrchestrations(args: GetEventOrchestrationsArgs, opts?: pulumi.InvokeOptions): Promise<GetEventOrchestrationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getEventOrchestrations:getEventOrchestrations", {
        "id": args.id,
        "nameFilter": args.nameFilter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventOrchestrations.
 */
export interface GetEventOrchestrationsArgs {
    id?: string;
    nameFilter: string;
}

/**
 * A collection of values returned by getEventOrchestrations.
 */
export interface GetEventOrchestrationsResult {
    readonly eventOrchestrations: outputs.GetEventOrchestrationsEventOrchestration[];
    readonly id: string;
    readonly nameFilter: string;
}
export function getEventOrchestrationsOutput(args: GetEventOrchestrationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventOrchestrationsResult> {
    return pulumi.output(args).apply((a: any) => getEventOrchestrations(a, opts))
}

/**
 * A collection of arguments for invoking getEventOrchestrations.
 */
export interface GetEventOrchestrationsOutputArgs {
    id?: pulumi.Input<string>;
    nameFilter: pulumi.Input<string>;
}
