// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEventOrchestrationServiceCacheVariable(args: GetEventOrchestrationServiceCacheVariableArgs, opts?: pulumi.InvokeOptions): Promise<GetEventOrchestrationServiceCacheVariableResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pagerduty:index/getEventOrchestrationServiceCacheVariable:getEventOrchestrationServiceCacheVariable", {
        "id": args.id,
        "name": args.name,
        "service": args.service,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEventOrchestrationServiceCacheVariable.
 */
export interface GetEventOrchestrationServiceCacheVariableArgs {
    id?: string;
    name?: string;
    service: string;
}

/**
 * A collection of values returned by getEventOrchestrationServiceCacheVariable.
 */
export interface GetEventOrchestrationServiceCacheVariableResult {
    readonly conditions: outputs.GetEventOrchestrationServiceCacheVariableCondition[];
    readonly configurations: outputs.GetEventOrchestrationServiceCacheVariableConfiguration[];
    readonly disabled: boolean;
    readonly id?: string;
    readonly name?: string;
    readonly service: string;
}
export function getEventOrchestrationServiceCacheVariableOutput(args: GetEventOrchestrationServiceCacheVariableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventOrchestrationServiceCacheVariableResult> {
    return pulumi.output(args).apply((a: any) => getEventOrchestrationServiceCacheVariable(a, opts))
}

/**
 * A collection of arguments for invoking getEventOrchestrationServiceCacheVariable.
 */
export interface GetEventOrchestrationServiceCacheVariableOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    service: pulumi.Input<string>;
}
