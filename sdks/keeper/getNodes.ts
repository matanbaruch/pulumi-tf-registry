// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNodes(args?: GetNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetNodesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getNodes:getNodes", {
        "filter": args.filter,
        "subnodes": args.subnodes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesArgs {
    filter?: inputs.GetNodesFilter;
    subnodes?: inputs.GetNodesSubnodes;
}

/**
 * A collection of values returned by getNodes.
 */
export interface GetNodesResult {
    readonly filter?: outputs.GetNodesFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly nodes: outputs.GetNodesNode[];
    readonly subnodes?: outputs.GetNodesSubnodes;
}
export function getNodesOutput(args?: GetNodesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodesResult> {
    return pulumi.output(args).apply((a: any) => getNodes(a, opts))
}

/**
 * A collection of arguments for invoking getNodes.
 */
export interface GetNodesOutputArgs {
    filter?: pulumi.Input<inputs.GetNodesFilterArgs>;
    subnodes?: pulumi.Input<inputs.GetNodesSubnodesArgs>;
}
