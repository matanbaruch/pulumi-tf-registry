// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnforcementsVault(args?: GetEnforcementsVaultArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcementsVaultResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getEnforcementsVault:getEnforcementsVault", {
        "daysBeforeDeletedRecordsAutoCleared": args.daysBeforeDeletedRecordsAutoCleared,
        "daysBeforeDeletedRecordsClearedPerm": args.daysBeforeDeletedRecordsClearedPerm,
        "generatedPasswordComplexity": args.generatedPasswordComplexity,
        "generatedSecurityQuestionComplexity": args.generatedSecurityQuestionComplexity,
        "maskCustomFields": args.maskCustomFields,
        "maskNotes": args.maskNotes,
        "maskPasswordsWhileEditing": args.maskPasswordsWhileEditing,
        "restrictBreachWatch": args.restrictBreachWatch,
        "restrictCreateFolder": args.restrictCreateFolder,
        "restrictCreateFolderToOnlySharedFolders": args.restrictCreateFolderToOnlySharedFolders,
        "restrictCreateIdentityPaymentRecords": args.restrictCreateIdentityPaymentRecords,
        "restrictCreateRecord": args.restrictCreateRecord,
        "restrictCreateRecordToSharedFolders": args.restrictCreateRecordToSharedFolders,
        "sendBreachWatchEvents": args.sendBreachWatchEvents,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnforcementsVault.
 */
export interface GetEnforcementsVaultArgs {
    daysBeforeDeletedRecordsAutoCleared?: number;
    daysBeforeDeletedRecordsClearedPerm?: number;
    generatedPasswordComplexity?: string;
    generatedSecurityQuestionComplexity?: string;
    maskCustomFields?: boolean;
    maskNotes?: boolean;
    maskPasswordsWhileEditing?: boolean;
    restrictBreachWatch?: boolean;
    restrictCreateFolder?: boolean;
    restrictCreateFolderToOnlySharedFolders?: boolean;
    restrictCreateIdentityPaymentRecords?: boolean;
    restrictCreateRecord?: boolean;
    restrictCreateRecordToSharedFolders?: boolean;
    sendBreachWatchEvents?: boolean;
}

/**
 * A collection of values returned by getEnforcementsVault.
 */
export interface GetEnforcementsVaultResult {
    readonly daysBeforeDeletedRecordsAutoCleared?: number;
    readonly daysBeforeDeletedRecordsClearedPerm?: number;
    readonly generatedPasswordComplexity?: string;
    readonly generatedSecurityQuestionComplexity?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maskCustomFields?: boolean;
    readonly maskNotes?: boolean;
    readonly maskPasswordsWhileEditing?: boolean;
    readonly restrictBreachWatch?: boolean;
    readonly restrictCreateFolder?: boolean;
    readonly restrictCreateFolderToOnlySharedFolders?: boolean;
    readonly restrictCreateIdentityPaymentRecords?: boolean;
    readonly restrictCreateRecord?: boolean;
    readonly restrictCreateRecordToSharedFolders?: boolean;
    readonly sendBreachWatchEvents?: boolean;
}
export function getEnforcementsVaultOutput(args?: GetEnforcementsVaultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcementsVaultResult> {
    return pulumi.output(args).apply((a: any) => getEnforcementsVault(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcementsVault.
 */
export interface GetEnforcementsVaultOutputArgs {
    daysBeforeDeletedRecordsAutoCleared?: pulumi.Input<number>;
    daysBeforeDeletedRecordsClearedPerm?: pulumi.Input<number>;
    generatedPasswordComplexity?: pulumi.Input<string>;
    generatedSecurityQuestionComplexity?: pulumi.Input<string>;
    maskCustomFields?: pulumi.Input<boolean>;
    maskNotes?: pulumi.Input<boolean>;
    maskPasswordsWhileEditing?: pulumi.Input<boolean>;
    restrictBreachWatch?: pulumi.Input<boolean>;
    restrictCreateFolder?: pulumi.Input<boolean>;
    restrictCreateFolderToOnlySharedFolders?: pulumi.Input<boolean>;
    restrictCreateIdentityPaymentRecords?: pulumi.Input<boolean>;
    restrictCreateRecord?: pulumi.Input<boolean>;
    restrictCreateRecordToSharedFolders?: pulumi.Input<boolean>;
    sendBreachWatchEvents?: pulumi.Input<boolean>;
}
