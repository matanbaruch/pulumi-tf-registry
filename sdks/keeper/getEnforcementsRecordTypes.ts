// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnforcementsRecordTypes(args?: GetEnforcementsRecordTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcementsRecordTypesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getEnforcementsRecordTypes:getEnforcementsRecordTypes", {
        "restrictRecordTypes": args.restrictRecordTypes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnforcementsRecordTypes.
 */
export interface GetEnforcementsRecordTypesArgs {
    restrictRecordTypes?: string[];
}

/**
 * A collection of values returned by getEnforcementsRecordTypes.
 */
export interface GetEnforcementsRecordTypesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly restrictRecordTypes?: string[];
}
export function getEnforcementsRecordTypesOutput(args?: GetEnforcementsRecordTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcementsRecordTypesResult> {
    return pulumi.output(args).apply((a: any) => getEnforcementsRecordTypes(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcementsRecordTypes.
 */
export interface GetEnforcementsRecordTypesOutputArgs {
    restrictRecordTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
