// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrivileges(args?: GetPrivilegesArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivilegesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getPrivileges:getPrivileges", {
        "deviceApproval": args.deviceApproval,
        "manageCompanies": args.manageCompanies,
        "manageNodes": args.manageNodes,
        "manageRecordTypes": args.manageRecordTypes,
        "manageReports": args.manageReports,
        "manageRoles": args.manageRoles,
        "manageSso": args.manageSso,
        "manageTeams": args.manageTeams,
        "manageUsers": args.manageUsers,
        "runComplianceReports": args.runComplianceReports,
        "shareAdmin": args.shareAdmin,
        "transferAccount": args.transferAccount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivileges.
 */
export interface GetPrivilegesArgs {
    deviceApproval?: boolean;
    manageCompanies?: boolean;
    manageNodes?: boolean;
    manageRecordTypes?: boolean;
    manageReports?: boolean;
    manageRoles?: boolean;
    manageSso?: boolean;
    manageTeams?: boolean;
    manageUsers?: boolean;
    runComplianceReports?: boolean;
    shareAdmin?: boolean;
    transferAccount?: boolean;
}

/**
 * A collection of values returned by getPrivileges.
 */
export interface GetPrivilegesResult {
    readonly deviceApproval: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly manageCompanies: boolean;
    readonly manageNodes: boolean;
    readonly manageRecordTypes: boolean;
    readonly manageReports: boolean;
    readonly manageRoles: boolean;
    readonly manageSso: boolean;
    readonly manageTeams: boolean;
    readonly manageUsers: boolean;
    readonly runComplianceReports: boolean;
    readonly shareAdmin: boolean;
    readonly transferAccount: boolean;
}
export function getPrivilegesOutput(args?: GetPrivilegesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivilegesResult> {
    return pulumi.output(args).apply((a: any) => getPrivileges(a, opts))
}

/**
 * A collection of arguments for invoking getPrivileges.
 */
export interface GetPrivilegesOutputArgs {
    deviceApproval?: pulumi.Input<boolean>;
    manageCompanies?: pulumi.Input<boolean>;
    manageNodes?: pulumi.Input<boolean>;
    manageRecordTypes?: pulumi.Input<boolean>;
    manageReports?: pulumi.Input<boolean>;
    manageRoles?: pulumi.Input<boolean>;
    manageSso?: pulumi.Input<boolean>;
    manageTeams?: pulumi.Input<boolean>;
    manageUsers?: pulumi.Input<boolean>;
    runComplianceReports?: pulumi.Input<boolean>;
    shareAdmin?: pulumi.Input<boolean>;
    transferAccount?: pulumi.Input<boolean>;
}
