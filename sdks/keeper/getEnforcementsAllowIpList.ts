// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnforcementsAllowIpList(args?: GetEnforcementsAllowIpListArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcementsAllowIpListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getEnforcementsAllowIpList:getEnforcementsAllowIpList", {
        "restrictIpAddresses": args.restrictIpAddresses,
        "restrictVaultIpAddresses": args.restrictVaultIpAddresses,
        "tipZoneRestrictAllowedIpRanges": args.tipZoneRestrictAllowedIpRanges,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnforcementsAllowIpList.
 */
export interface GetEnforcementsAllowIpListArgs {
    restrictIpAddresses?: string[];
    restrictVaultIpAddresses?: string[];
    tipZoneRestrictAllowedIpRanges?: string[];
}

/**
 * A collection of values returned by getEnforcementsAllowIpList.
 */
export interface GetEnforcementsAllowIpListResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly restrictIpAddresses?: string[];
    readonly restrictVaultIpAddresses?: string[];
    readonly tipZoneRestrictAllowedIpRanges?: string[];
}
export function getEnforcementsAllowIpListOutput(args?: GetEnforcementsAllowIpListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcementsAllowIpListResult> {
    return pulumi.output(args).apply((a: any) => getEnforcementsAllowIpList(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcementsAllowIpList.
 */
export interface GetEnforcementsAllowIpListOutputArgs {
    restrictIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    restrictVaultIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    tipZoneRestrictAllowedIpRanges?: pulumi.Input<pulumi.Input<string>[]>;
}
