// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnforcementsAccount(args?: GetEnforcementsAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcementsAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getEnforcementsAccount:getEnforcementsAccount", {
        "allowPamDiscovery": args.allowPamDiscovery,
        "allowPamRotation": args.allowPamRotation,
        "allowSecretsManager": args.allowSecretsManager,
        "disableOnboarding": args.disableOnboarding,
        "disableSetupTour": args.disableSetupTour,
        "disallowV2Clients": args.disallowV2Clients,
        "logoutTimerDesktop": args.logoutTimerDesktop,
        "logoutTimerMobile": args.logoutTimerMobile,
        "logoutTimerWeb": args.logoutTimerWeb,
        "maxSessionLoginTime": args.maxSessionLoginTime,
        "maximumRecordSize": args.maximumRecordSize,
        "minimumPbkdf2Iterations": args.minimumPbkdf2Iterations,
        "requireAccountRecoveryApproval": args.requireAccountRecoveryApproval,
        "requireDeviceApproval": args.requireDeviceApproval,
        "requireSecurityKeyPin": args.requireSecurityKeyPin,
        "requireSelfDestruct": args.requireSelfDestruct,
        "resendEnterpriseInviteInXDays": args.resendEnterpriseInviteInXDays,
        "restrictAccountRecovery": args.restrictAccountRecovery,
        "restrictEmailChange": args.restrictEmailChange,
        "restrictImportSharedFolders": args.restrictImportSharedFolders,
        "restrictIpAutoapproval": args.restrictIpAutoapproval,
        "restrictOfflineAccess": args.restrictOfflineAccess,
        "restrictPersistentLogin": args.restrictPersistentLogin,
        "restrictPersonalLicense": args.restrictPersonalLicense,
        "sendInviteAtRegistration": args.sendInviteAtRegistration,
        "stayLoggedInDefault": args.stayLoggedInDefault,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnforcementsAccount.
 */
export interface GetEnforcementsAccountArgs {
    allowPamDiscovery?: boolean;
    allowPamRotation?: boolean;
    allowSecretsManager?: boolean;
    disableOnboarding?: boolean;
    disableSetupTour?: boolean;
    disallowV2Clients?: boolean;
    logoutTimerDesktop?: number;
    logoutTimerMobile?: number;
    logoutTimerWeb?: number;
    maxSessionLoginTime?: number;
    maximumRecordSize?: number;
    minimumPbkdf2Iterations?: number;
    requireAccountRecoveryApproval?: boolean;
    requireDeviceApproval?: boolean;
    requireSecurityKeyPin?: boolean;
    requireSelfDestruct?: boolean;
    resendEnterpriseInviteInXDays?: number;
    restrictAccountRecovery?: boolean;
    restrictEmailChange?: boolean;
    restrictImportSharedFolders?: boolean;
    restrictIpAutoapproval?: boolean;
    restrictOfflineAccess?: boolean;
    restrictPersistentLogin?: boolean;
    restrictPersonalLicense?: boolean;
    sendInviteAtRegistration?: boolean;
    stayLoggedInDefault?: boolean;
}

/**
 * A collection of values returned by getEnforcementsAccount.
 */
export interface GetEnforcementsAccountResult {
    readonly allowPamDiscovery?: boolean;
    readonly allowPamRotation?: boolean;
    readonly allowSecretsManager?: boolean;
    readonly disableOnboarding?: boolean;
    readonly disableSetupTour?: boolean;
    readonly disallowV2Clients?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logoutTimerDesktop?: number;
    readonly logoutTimerMobile?: number;
    readonly logoutTimerWeb?: number;
    readonly maxSessionLoginTime?: number;
    readonly maximumRecordSize?: number;
    readonly minimumPbkdf2Iterations?: number;
    readonly requireAccountRecoveryApproval?: boolean;
    readonly requireDeviceApproval?: boolean;
    readonly requireSecurityKeyPin?: boolean;
    readonly requireSelfDestruct?: boolean;
    readonly resendEnterpriseInviteInXDays?: number;
    readonly restrictAccountRecovery?: boolean;
    readonly restrictEmailChange?: boolean;
    readonly restrictImportSharedFolders?: boolean;
    readonly restrictIpAutoapproval?: boolean;
    readonly restrictOfflineAccess?: boolean;
    readonly restrictPersistentLogin?: boolean;
    readonly restrictPersonalLicense?: boolean;
    readonly sendInviteAtRegistration?: boolean;
    readonly stayLoggedInDefault?: boolean;
}
export function getEnforcementsAccountOutput(args?: GetEnforcementsAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcementsAccountResult> {
    return pulumi.output(args).apply((a: any) => getEnforcementsAccount(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcementsAccount.
 */
export interface GetEnforcementsAccountOutputArgs {
    allowPamDiscovery?: pulumi.Input<boolean>;
    allowPamRotation?: pulumi.Input<boolean>;
    allowSecretsManager?: pulumi.Input<boolean>;
    disableOnboarding?: pulumi.Input<boolean>;
    disableSetupTour?: pulumi.Input<boolean>;
    disallowV2Clients?: pulumi.Input<boolean>;
    logoutTimerDesktop?: pulumi.Input<number>;
    logoutTimerMobile?: pulumi.Input<number>;
    logoutTimerWeb?: pulumi.Input<number>;
    maxSessionLoginTime?: pulumi.Input<number>;
    maximumRecordSize?: pulumi.Input<number>;
    minimumPbkdf2Iterations?: pulumi.Input<number>;
    requireAccountRecoveryApproval?: pulumi.Input<boolean>;
    requireDeviceApproval?: pulumi.Input<boolean>;
    requireSecurityKeyPin?: pulumi.Input<boolean>;
    requireSelfDestruct?: pulumi.Input<boolean>;
    resendEnterpriseInviteInXDays?: pulumi.Input<number>;
    restrictAccountRecovery?: pulumi.Input<boolean>;
    restrictEmailChange?: pulumi.Input<boolean>;
    restrictImportSharedFolders?: pulumi.Input<boolean>;
    restrictIpAutoapproval?: pulumi.Input<boolean>;
    restrictOfflineAccess?: pulumi.Input<boolean>;
    restrictPersistentLogin?: pulumi.Input<boolean>;
    restrictPersonalLicense?: pulumi.Input<boolean>;
    sendInviteAtRegistration?: pulumi.Input<boolean>;
    stayLoggedInDefault?: pulumi.Input<boolean>;
}
