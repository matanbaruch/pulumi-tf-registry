// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTeam(args?: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getTeam:getTeam", {
        "includeMembers": args.includeMembers,
        "name": args.name,
        "teamUid": args.teamUid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    includeMembers?: boolean;
    name?: string;
    teamUid?: string;
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeMembers?: boolean;
    readonly name: string;
    readonly nodeId: number;
    readonly restrictEdit: boolean;
    readonly restrictShare: boolean;
    readonly restrictView: boolean;
    readonly roles: outputs.GetTeamRole[];
    readonly teamUid: string;
    readonly users: outputs.GetTeamUser[];
}
export function getTeamOutput(args?: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply((a: any) => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    includeMembers?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    teamUid?: pulumi.Input<string>;
}
