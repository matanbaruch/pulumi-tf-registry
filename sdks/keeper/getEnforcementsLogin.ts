// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEnforcementsLogin(args?: GetEnforcementsLoginArgs, opts?: pulumi.InvokeOptions): Promise<GetEnforcementsLoginResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keeper:index/getEnforcementsLogin:getEnforcementsLogin", {
        "allowAlternatePasswords": args.allowAlternatePasswords,
        "masterPasswordExpiredAsOf": args.masterPasswordExpiredAsOf,
        "masterPasswordMaximumDaysBeforeChange": args.masterPasswordMaximumDaysBeforeChange,
        "masterPasswordMinimumDigits": args.masterPasswordMinimumDigits,
        "masterPasswordMinimumLength": args.masterPasswordMinimumLength,
        "masterPasswordMinimumLower": args.masterPasswordMinimumLower,
        "masterPasswordMinimumSpecial": args.masterPasswordMinimumSpecial,
        "masterPasswordMinimumUpper": args.masterPasswordMinimumUpper,
        "masterPasswordRestrictDaysBeforeReuse": args.masterPasswordRestrictDaysBeforeReuse,
        "restrictAndroidFingerprint": args.restrictAndroidFingerprint,
        "restrictIosFingerprint": args.restrictIosFingerprint,
        "restrictMacFingerprint": args.restrictMacFingerprint,
        "restrictWindowsFingerprint": args.restrictWindowsFingerprint,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEnforcementsLogin.
 */
export interface GetEnforcementsLoginArgs {
    allowAlternatePasswords?: boolean;
    masterPasswordExpiredAsOf?: number;
    masterPasswordMaximumDaysBeforeChange?: number;
    masterPasswordMinimumDigits?: number;
    masterPasswordMinimumLength?: number;
    masterPasswordMinimumLower?: number;
    masterPasswordMinimumSpecial?: number;
    masterPasswordMinimumUpper?: number;
    masterPasswordRestrictDaysBeforeReuse?: number;
    restrictAndroidFingerprint?: boolean;
    restrictIosFingerprint?: boolean;
    restrictMacFingerprint?: boolean;
    restrictWindowsFingerprint?: boolean;
}

/**
 * A collection of values returned by getEnforcementsLogin.
 */
export interface GetEnforcementsLoginResult {
    readonly allowAlternatePasswords?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly masterPasswordExpiredAsOf?: number;
    readonly masterPasswordMaximumDaysBeforeChange?: number;
    readonly masterPasswordMinimumDigits?: number;
    readonly masterPasswordMinimumLength?: number;
    readonly masterPasswordMinimumLower?: number;
    readonly masterPasswordMinimumSpecial?: number;
    readonly masterPasswordMinimumUpper?: number;
    readonly masterPasswordRestrictDaysBeforeReuse?: number;
    readonly restrictAndroidFingerprint?: boolean;
    readonly restrictIosFingerprint?: boolean;
    readonly restrictMacFingerprint?: boolean;
    readonly restrictWindowsFingerprint?: boolean;
}
export function getEnforcementsLoginOutput(args?: GetEnforcementsLoginOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnforcementsLoginResult> {
    return pulumi.output(args).apply((a: any) => getEnforcementsLogin(a, opts))
}

/**
 * A collection of arguments for invoking getEnforcementsLogin.
 */
export interface GetEnforcementsLoginOutputArgs {
    allowAlternatePasswords?: pulumi.Input<boolean>;
    masterPasswordExpiredAsOf?: pulumi.Input<number>;
    masterPasswordMaximumDaysBeforeChange?: pulumi.Input<number>;
    masterPasswordMinimumDigits?: pulumi.Input<number>;
    masterPasswordMinimumLength?: pulumi.Input<number>;
    masterPasswordMinimumLower?: pulumi.Input<number>;
    masterPasswordMinimumSpecial?: pulumi.Input<number>;
    masterPasswordMinimumUpper?: pulumi.Input<number>;
    masterPasswordRestrictDaysBeforeReuse?: pulumi.Input<number>;
    restrictAndroidFingerprint?: pulumi.Input<boolean>;
    restrictIosFingerprint?: pulumi.Input<boolean>;
    restrictMacFingerprint?: pulumi.Input<boolean>;
    restrictWindowsFingerprint?: pulumi.Input<boolean>;
}
