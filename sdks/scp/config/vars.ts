// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("scp");

/**
 * Authentication tokens, also known as JSON Web Tokens (JWT), are a method for authenticating Splunk platform users into
 * the Splunk platform. May also be provided via STACK_TOKEN environment variable.
 */
export declare const authToken: string | undefined;
Object.defineProperty(exports, "authToken", {
    get() {
        return __config.get("authToken");
    },
    enumerable: true,
});

/**
 * Splunk Cloud Platform deployment password. May also be provided via STACK_PASSWORD environment variable.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * ACS API base URL. May also be provided via ACS_SERVER environment variable.
 */
export declare const server: string | undefined;
Object.defineProperty(exports, "server", {
    get() {
        return __config.get("server");
    },
    enumerable: true,
});

/**
 * Stack to perform ACS operations. May also be provided via SPLUNK_STACK environment variable.
 */
export declare const stack: string | undefined;
Object.defineProperty(exports, "stack", {
    get() {
        return __config.get("stack");
    },
    enumerable: true,
});

/**
 * Splunk Cloud Platform deployment username. May also be provided via STACK_USERNAME environment variable.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

