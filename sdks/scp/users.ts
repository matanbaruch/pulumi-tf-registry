// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Users extends pulumi.CustomResource {
    /**
     * Get an existing Users resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UsersState, opts?: pulumi.CustomResourceOptions): Users {
        return new Users(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scp:index/users:Users';

    /**
     * Returns true if the given object is an instance of Users.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Users {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Users.__pulumiType;
    }

    /**
     * Set the default app for this user. Setting this here overrides the default app inherited from the user's role(s).
     */
    public readonly defaultApp!: pulumi.Output<string>;
    /**
     * Default app source of the user.
     */
    public /*out*/ readonly defaultAppSource!: pulumi.Output<string>;
    /**
     * The email of the user to create.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * If any role contains the 'fsh_manage' capability you must set this attribute to a value of "Y". This header acknowledges
     * that a role with the fsh_manage capability can send search results outside the compliant environment.
     */
    public readonly federatedSearchManageAck!: pulumi.Output<string | undefined>;
    /**
     * To force a change of password on the user's first login, set forceChangePass to "true".
     */
    public readonly forceChangePass!: pulumi.Output<boolean | undefined>;
    /**
     * The full name of the user to create.
     */
    public readonly fullName!: pulumi.Output<string>;
    /**
     * (Read-only) Last successful login timestamp of the user.
     */
    public /*out*/ readonly lastSuccessfulLogin!: pulumi.Output<string>;
    /**
     * (Read-only) Whether the user account has been locked out.
     */
    public /*out*/ readonly lockedOut!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly oldPassword!: pulumi.Output<string | undefined>;
    public readonly password!: pulumi.Output<string>;
    /**
     * Assign one of more roles to this user. The user will inherit all the settings and capabilities from those roles.
     */
    public readonly roles!: pulumi.Output<string[]>;

    /**
     * Create a Users resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UsersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UsersArgs | UsersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UsersState | undefined;
            resourceInputs["defaultApp"] = state ? state.defaultApp : undefined;
            resourceInputs["defaultAppSource"] = state ? state.defaultAppSource : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["federatedSearchManageAck"] = state ? state.federatedSearchManageAck : undefined;
            resourceInputs["forceChangePass"] = state ? state.forceChangePass : undefined;
            resourceInputs["fullName"] = state ? state.fullName : undefined;
            resourceInputs["lastSuccessfulLogin"] = state ? state.lastSuccessfulLogin : undefined;
            resourceInputs["lockedOut"] = state ? state.lockedOut : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oldPassword"] = state ? state.oldPassword : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
        } else {
            const args = argsOrState as UsersArgs | undefined;
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            resourceInputs["defaultApp"] = args ? args.defaultApp : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["federatedSearchManageAck"] = args ? args.federatedSearchManageAck : undefined;
            resourceInputs["forceChangePass"] = args ? args.forceChangePass : undefined;
            resourceInputs["fullName"] = args ? args.fullName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oldPassword"] = args ? args.oldPassword : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["defaultAppSource"] = undefined /*out*/;
            resourceInputs["lastSuccessfulLogin"] = undefined /*out*/;
            resourceInputs["lockedOut"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Users.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Users resources.
 */
export interface UsersState {
    /**
     * Set the default app for this user. Setting this here overrides the default app inherited from the user's role(s).
     */
    defaultApp?: pulumi.Input<string>;
    /**
     * Default app source of the user.
     */
    defaultAppSource?: pulumi.Input<string>;
    /**
     * The email of the user to create.
     */
    email?: pulumi.Input<string>;
    /**
     * If any role contains the 'fsh_manage' capability you must set this attribute to a value of "Y". This header acknowledges
     * that a role with the fsh_manage capability can send search results outside the compliant environment.
     */
    federatedSearchManageAck?: pulumi.Input<string>;
    /**
     * To force a change of password on the user's first login, set forceChangePass to "true".
     */
    forceChangePass?: pulumi.Input<boolean>;
    /**
     * The full name of the user to create.
     */
    fullName?: pulumi.Input<string>;
    /**
     * (Read-only) Last successful login timestamp of the user.
     */
    lastSuccessfulLogin?: pulumi.Input<string>;
    /**
     * (Read-only) Whether the user account has been locked out.
     */
    lockedOut?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    oldPassword?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * Assign one of more roles to this user. The user will inherit all the settings and capabilities from those roles.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Users resource.
 */
export interface UsersArgs {
    /**
     * Set the default app for this user. Setting this here overrides the default app inherited from the user's role(s).
     */
    defaultApp?: pulumi.Input<string>;
    /**
     * The email of the user to create.
     */
    email?: pulumi.Input<string>;
    /**
     * If any role contains the 'fsh_manage' capability you must set this attribute to a value of "Y". This header acknowledges
     * that a role with the fsh_manage capability can send search results outside the compliant environment.
     */
    federatedSearchManageAck?: pulumi.Input<string>;
    /**
     * To force a change of password on the user's first login, set forceChangePass to "true".
     */
    forceChangePass?: pulumi.Input<boolean>;
    /**
     * The full name of the user to create.
     */
    fullName?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    oldPassword?: pulumi.Input<string>;
    password: pulumi.Input<string>;
    /**
     * Assign one of more roles to this user. The user will inherit all the settings and capabilities from those roles.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}
