// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Indexes extends pulumi.CustomResource {
    /**
     * Get an existing Indexes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IndexesState, opts?: pulumi.CustomResourceOptions): Indexes {
        return new Indexes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'scp:index/indexes:Indexes';

    /**
     * Returns true if the given object is an instance of Indexes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Indexes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Indexes.__pulumiType;
    }

    public readonly datatype!: pulumi.Output<string>;
    /**
     * The maximum size in MB for a hot DB to reach before a roll to warm is triggered. Defaults to 0 (unlimited).
     */
    public readonly maxDataSizeMb!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Number of days after which indexed data rolls to frozen. Defaults to 90 days.
     */
    public readonly searchableDays!: pulumi.Output<number>;
    /**
     * To create an index with DDSS enabled, you must specify the selfStorageBucketPath value in the following format:
     * "s3://selfStorageBucket/selfStorageBucketFolder", where SelfStorageBucketFolder is optional, as you can store data
     * buckets at root. Before you can create an index with DDSS enabled, you must configure a self-storage location for your
     * deployment (see https://docs.splunk.com/Documentation/SplunkCloud/latest/Config/ManageDDSSlocations). Can not be set
     * with splunk_archival_retention_days.
     */
    public readonly selfStorageBucketPath!: pulumi.Output<string>;
    /**
     * To create an index with DDAA enabled, you must specify the splunkArchivalRetentionDays value which must be The value of
     * splunkArchivalRetentionDays must be positive and greater than the SearchableDays value. Can not be set with
     * self_storage_bucket_path.
     */
    public readonly splunkArchivalRetentionDays!: pulumi.Output<number>;

    /**
     * Create a Indexes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IndexesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IndexesArgs | IndexesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IndexesState | undefined;
            resourceInputs["datatype"] = state ? state.datatype : undefined;
            resourceInputs["maxDataSizeMb"] = state ? state.maxDataSizeMb : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["searchableDays"] = state ? state.searchableDays : undefined;
            resourceInputs["selfStorageBucketPath"] = state ? state.selfStorageBucketPath : undefined;
            resourceInputs["splunkArchivalRetentionDays"] = state ? state.splunkArchivalRetentionDays : undefined;
        } else {
            const args = argsOrState as IndexesArgs | undefined;
            resourceInputs["datatype"] = args ? args.datatype : undefined;
            resourceInputs["maxDataSizeMb"] = args ? args.maxDataSizeMb : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["searchableDays"] = args ? args.searchableDays : undefined;
            resourceInputs["selfStorageBucketPath"] = args ? args.selfStorageBucketPath : undefined;
            resourceInputs["splunkArchivalRetentionDays"] = args ? args.splunkArchivalRetentionDays : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Indexes.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Indexes resources.
 */
export interface IndexesState {
    datatype?: pulumi.Input<string>;
    /**
     * The maximum size in MB for a hot DB to reach before a roll to warm is triggered. Defaults to 0 (unlimited).
     */
    maxDataSizeMb?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * Number of days after which indexed data rolls to frozen. Defaults to 90 days.
     */
    searchableDays?: pulumi.Input<number>;
    /**
     * To create an index with DDSS enabled, you must specify the selfStorageBucketPath value in the following format:
     * "s3://selfStorageBucket/selfStorageBucketFolder", where SelfStorageBucketFolder is optional, as you can store data
     * buckets at root. Before you can create an index with DDSS enabled, you must configure a self-storage location for your
     * deployment (see https://docs.splunk.com/Documentation/SplunkCloud/latest/Config/ManageDDSSlocations). Can not be set
     * with splunk_archival_retention_days.
     */
    selfStorageBucketPath?: pulumi.Input<string>;
    /**
     * To create an index with DDAA enabled, you must specify the splunkArchivalRetentionDays value which must be The value of
     * splunkArchivalRetentionDays must be positive and greater than the SearchableDays value. Can not be set with
     * self_storage_bucket_path.
     */
    splunkArchivalRetentionDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Indexes resource.
 */
export interface IndexesArgs {
    datatype?: pulumi.Input<string>;
    /**
     * The maximum size in MB for a hot DB to reach before a roll to warm is triggered. Defaults to 0 (unlimited).
     */
    maxDataSizeMb?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    /**
     * Number of days after which indexed data rolls to frozen. Defaults to 90 days.
     */
    searchableDays?: pulumi.Input<number>;
    /**
     * To create an index with DDSS enabled, you must specify the selfStorageBucketPath value in the following format:
     * "s3://selfStorageBucket/selfStorageBucketFolder", where SelfStorageBucketFolder is optional, as you can store data
     * buckets at root. Before you can create an index with DDSS enabled, you must configure a self-storage location for your
     * deployment (see https://docs.splunk.com/Documentation/SplunkCloud/latest/Config/ManageDDSSlocations). Can not be set
     * with splunk_archival_retention_days.
     */
    selfStorageBucketPath?: pulumi.Input<string>;
    /**
     * To create an index with DDAA enabled, you must specify the splunkArchivalRetentionDays value which must be The value of
     * splunkArchivalRetentionDays must be positive and greater than the SearchableDays value. Can not be set with
     * self_storage_bucket_path.
     */
    splunkArchivalRetentionDays?: pulumi.Input<number>;
}
