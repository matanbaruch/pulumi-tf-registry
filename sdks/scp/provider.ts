// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the scp package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'scp';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * Authentication tokens, also known as JSON Web Tokens (JWT), are a method for authenticating Splunk platform users into
     * the Splunk platform. May also be provided via STACK_TOKEN environment variable.
     */
    public readonly authToken!: pulumi.Output<string | undefined>;
    /**
     * Splunk Cloud Platform deployment password. May also be provided via STACK_PASSWORD environment variable.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * ACS API base URL. May also be provided via ACS_SERVER environment variable.
     */
    public readonly server!: pulumi.Output<string | undefined>;
    /**
     * Stack to perform ACS operations. May also be provided via SPLUNK_STACK environment variable.
     */
    public readonly stack!: pulumi.Output<string | undefined>;
    /**
     * Splunk Cloud Platform deployment username. May also be provided via STACK_USERNAME environment variable.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["authToken"] = args?.authToken ? pulumi.secret(args.authToken) : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["stack"] = args ? args.stack : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authToken", "password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Authentication tokens, also known as JSON Web Tokens (JWT), are a method for authenticating Splunk platform users into
     * the Splunk platform. May also be provided via STACK_TOKEN environment variable.
     */
    authToken?: pulumi.Input<string>;
    /**
     * Splunk Cloud Platform deployment password. May also be provided via STACK_PASSWORD environment variable.
     */
    password?: pulumi.Input<string>;
    /**
     * ACS API base URL. May also be provided via ACS_SERVER environment variable.
     */
    server?: pulumi.Input<string>;
    /**
     * Stack to perform ACS operations. May also be provided via SPLUNK_STACK environment variable.
     */
    stack?: pulumi.Input<string>;
    /**
     * Splunk Cloud Platform deployment username. May also be provided via STACK_USERNAME environment variable.
     */
    username?: pulumi.Input<string>;
}
