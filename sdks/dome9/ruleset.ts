// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Ruleset extends pulumi.CustomResource {
    /**
     * Get an existing Ruleset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RulesetState, opts?: pulumi.CustomResourceOptions): Ruleset {
        return new Ruleset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/ruleset:Ruleset';

    /**
     * Returns true if the given object is an instance of Ruleset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ruleset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ruleset.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<string>;
    public readonly cloudVendor!: pulumi.Output<string>;
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly hideInCompliance!: pulumi.Output<boolean>;
    public /*out*/ readonly isTemplate!: pulumi.Output<boolean>;
    public readonly language!: pulumi.Output<string>;
    public /*out*/ readonly minFeatureTier!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly rules!: pulumi.Output<outputs.RulesetRule[] | undefined>;
    public /*out*/ readonly rulesCount!: pulumi.Output<number>;
    public /*out*/ readonly systemBundle!: pulumi.Output<boolean>;
    public /*out*/ readonly updatedTime!: pulumi.Output<string>;

    /**
     * Create a Ruleset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RulesetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RulesetArgs | RulesetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RulesetState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["cloudVendor"] = state ? state.cloudVendor : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hideInCompliance"] = state ? state.hideInCompliance : undefined;
            resourceInputs["isTemplate"] = state ? state.isTemplate : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["minFeatureTier"] = state ? state.minFeatureTier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["rulesCount"] = state ? state.rulesCount : undefined;
            resourceInputs["systemBundle"] = state ? state.systemBundle : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
        } else {
            const args = argsOrState as RulesetArgs | undefined;
            if ((!args || args.cloudVendor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudVendor'");
            }
            if ((!args || args.hideInCompliance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hideInCompliance'");
            }
            if ((!args || args.language === undefined) && !opts.urn) {
                throw new Error("Missing required property 'language'");
            }
            resourceInputs["cloudVendor"] = args ? args.cloudVendor : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hideInCompliance"] = args ? args.hideInCompliance : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["isTemplate"] = undefined /*out*/;
            resourceInputs["minFeatureTier"] = undefined /*out*/;
            resourceInputs["rulesCount"] = undefined /*out*/;
            resourceInputs["systemBundle"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ruleset.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ruleset resources.
 */
export interface RulesetState {
    accountId?: pulumi.Input<string>;
    cloudVendor?: pulumi.Input<string>;
    createdTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    hideInCompliance?: pulumi.Input<boolean>;
    isTemplate?: pulumi.Input<boolean>;
    language?: pulumi.Input<string>;
    minFeatureTier?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.RulesetRule>[]>;
    rulesCount?: pulumi.Input<number>;
    systemBundle?: pulumi.Input<boolean>;
    updatedTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ruleset resource.
 */
export interface RulesetArgs {
    cloudVendor: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    hideInCompliance: pulumi.Input<boolean>;
    language: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.RulesetRule>[]>;
}
