// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IamSafeEntity extends pulumi.CustomResource {
    /**
     * Get an existing IamSafeEntity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamSafeEntityState, opts?: pulumi.CustomResourceOptions): IamSafeEntity {
        return new IamSafeEntity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/iamSafeEntity:IamSafeEntity';

    /**
     * Returns true if the given object is an instance of IamSafeEntity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamSafeEntity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamSafeEntity.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly attachedDome9Users!: pulumi.Output<string[]>;
    public readonly awsCloudAccountId!: pulumi.Output<string>;
    public readonly dome9UsersIdToProtects!: pulumi.Output<string[] | undefined>;
    public readonly entityName!: pulumi.Output<string>;
    public readonly entityType!: pulumi.Output<string>;
    public /*out*/ readonly existsInAws!: pulumi.Output<boolean>;
    public readonly protectionMode!: pulumi.Output<string>;
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a IamSafeEntity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamSafeEntityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamSafeEntityArgs | IamSafeEntityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamSafeEntityState | undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["attachedDome9Users"] = state ? state.attachedDome9Users : undefined;
            resourceInputs["awsCloudAccountId"] = state ? state.awsCloudAccountId : undefined;
            resourceInputs["dome9UsersIdToProtects"] = state ? state.dome9UsersIdToProtects : undefined;
            resourceInputs["entityName"] = state ? state.entityName : undefined;
            resourceInputs["entityType"] = state ? state.entityType : undefined;
            resourceInputs["existsInAws"] = state ? state.existsInAws : undefined;
            resourceInputs["protectionMode"] = state ? state.protectionMode : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as IamSafeEntityArgs | undefined;
            if ((!args || args.awsCloudAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awsCloudAccountId'");
            }
            if ((!args || args.entityName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityName'");
            }
            if ((!args || args.entityType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityType'");
            }
            if ((!args || args.protectionMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectionMode'");
            }
            resourceInputs["awsCloudAccountId"] = args ? args.awsCloudAccountId : undefined;
            resourceInputs["dome9UsersIdToProtects"] = args ? args.dome9UsersIdToProtects : undefined;
            resourceInputs["entityName"] = args ? args.entityName : undefined;
            resourceInputs["entityType"] = args ? args.entityType : undefined;
            resourceInputs["protectionMode"] = args ? args.protectionMode : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["attachedDome9Users"] = undefined /*out*/;
            resourceInputs["existsInAws"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamSafeEntity.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamSafeEntity resources.
 */
export interface IamSafeEntityState {
    arn?: pulumi.Input<string>;
    attachedDome9Users?: pulumi.Input<pulumi.Input<string>[]>;
    awsCloudAccountId?: pulumi.Input<string>;
    dome9UsersIdToProtects?: pulumi.Input<pulumi.Input<string>[]>;
    entityName?: pulumi.Input<string>;
    entityType?: pulumi.Input<string>;
    existsInAws?: pulumi.Input<boolean>;
    protectionMode?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamSafeEntity resource.
 */
export interface IamSafeEntityArgs {
    awsCloudAccountId: pulumi.Input<string>;
    dome9UsersIdToProtects?: pulumi.Input<pulumi.Input<string>[]>;
    entityName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    protectionMode: pulumi.Input<string>;
}
