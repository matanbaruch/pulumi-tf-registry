// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudaccountAzure extends pulumi.CustomResource {
    /**
     * Get an existing CloudaccountAzure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudaccountAzureState, opts?: pulumi.CustomResourceOptions): CloudaccountAzure {
        return new CloudaccountAzure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/cloudaccountAzure:CloudaccountAzure';

    /**
     * Returns true if the given object is an instance of CloudaccountAzure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudaccountAzure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudaccountAzure.__pulumiType;
    }

    public readonly clientId!: pulumi.Output<string>;
    public readonly clientPassword!: pulumi.Output<string>;
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly operationMode!: pulumi.Output<string>;
    public readonly organizationalUnitId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly organizationalUnitName!: pulumi.Output<string>;
    public /*out*/ readonly organizationalUnitPath!: pulumi.Output<string>;
    public readonly subscriptionId!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public readonly vendor!: pulumi.Output<string | undefined>;

    /**
     * Create a CloudaccountAzure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudaccountAzureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudaccountAzureArgs | CloudaccountAzureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudaccountAzureState | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientPassword"] = state ? state.clientPassword : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operationMode"] = state ? state.operationMode : undefined;
            resourceInputs["organizationalUnitId"] = state ? state.organizationalUnitId : undefined;
            resourceInputs["organizationalUnitName"] = state ? state.organizationalUnitName : undefined;
            resourceInputs["organizationalUnitPath"] = state ? state.organizationalUnitPath : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as CloudaccountAzureArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientPassword'");
            }
            if ((!args || args.operationMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operationMode'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientPassword"] = args?.clientPassword ? pulumi.secret(args.clientPassword) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["operationMode"] = args ? args.operationMode : undefined;
            resourceInputs["organizationalUnitId"] = args ? args.organizationalUnitId : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["organizationalUnitName"] = undefined /*out*/;
            resourceInputs["organizationalUnitPath"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CloudaccountAzure.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudaccountAzure resources.
 */
export interface CloudaccountAzureState {
    clientId?: pulumi.Input<string>;
    clientPassword?: pulumi.Input<string>;
    creationDate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operationMode?: pulumi.Input<string>;
    organizationalUnitId?: pulumi.Input<string>;
    organizationalUnitName?: pulumi.Input<string>;
    organizationalUnitPath?: pulumi.Input<string>;
    subscriptionId?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudaccountAzure resource.
 */
export interface CloudaccountAzureArgs {
    clientId: pulumi.Input<string>;
    clientPassword: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    operationMode: pulumi.Input<string>;
    organizationalUnitId?: pulumi.Input<string>;
    subscriptionId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}
