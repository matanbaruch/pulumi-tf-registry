// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContinuousCompliancePolicy(args: GetContinuousCompliancePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetContinuousCompliancePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dome9:index/getContinuousCompliancePolicy:getContinuousCompliancePolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContinuousCompliancePolicy.
 */
export interface GetContinuousCompliancePolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getContinuousCompliancePolicy.
 */
export interface GetContinuousCompliancePolicyResult {
    readonly id: string;
    readonly notificationIds: string[];
    readonly rulesetId: number;
    readonly targetExternalId: string;
    readonly targetInternalId: string;
    readonly targetType: string;
}
export function getContinuousCompliancePolicyOutput(args: GetContinuousCompliancePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContinuousCompliancePolicyResult> {
    return pulumi.output(args).apply((a: any) => getContinuousCompliancePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getContinuousCompliancePolicy.
 */
export interface GetContinuousCompliancePolicyOutputArgs {
    id: pulumi.Input<string>;
}
