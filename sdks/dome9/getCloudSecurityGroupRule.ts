// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudSecurityGroupRule(args: GetCloudSecurityGroupRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudSecurityGroupRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dome9:index/getCloudSecurityGroupRule:getCloudSecurityGroupRule", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudSecurityGroupRule.
 */
export interface GetCloudSecurityGroupRuleArgs {
    id: string;
}

/**
 * A collection of values returned by getCloudSecurityGroupRule.
 */
export interface GetCloudSecurityGroupRuleResult {
    readonly id: string;
    readonly services: outputs.GetCloudSecurityGroupRuleService[];
}
export function getCloudSecurityGroupRuleOutput(args: GetCloudSecurityGroupRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudSecurityGroupRuleResult> {
    return pulumi.output(args).apply((a: any) => getCloudSecurityGroupRule(a, opts))
}

/**
 * A collection of arguments for invoking getCloudSecurityGroupRule.
 */
export interface GetCloudSecurityGroupRuleOutputArgs {
    id: pulumi.Input<string>;
}
