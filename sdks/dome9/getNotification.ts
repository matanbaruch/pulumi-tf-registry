// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNotification(args: GetNotificationArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dome9:index/getNotification:getNotification", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationArgs {
    id: string;
}

/**
 * A collection of values returned by getNotification.
 */
export interface GetNotificationResult {
    readonly alertsConsole: boolean;
    readonly description: string;
    readonly id: string;
    readonly integrationSettings: outputs.GetNotificationIntegrationSetting[];
    readonly name: string;
    readonly origin: string;
    readonly sendOnEachOccurrence: boolean;
}
export function getNotificationOutput(args: GetNotificationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationResult> {
    return pulumi.output(args).apply((a: any) => getNotification(a, opts))
}

/**
 * A collection of arguments for invoking getNotification.
 */
export interface GetNotificationOutputArgs {
    id: pulumi.Input<string>;
}
