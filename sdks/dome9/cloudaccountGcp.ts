// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudaccountGcp extends pulumi.CustomResource {
    /**
     * Get an existing CloudaccountGcp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudaccountGcpState, opts?: pulumi.CustomResourceOptions): CloudaccountGcp {
        return new CloudaccountGcp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/cloudaccountGcp:CloudaccountGcp';

    /**
     * Returns true if the given object is an instance of CloudaccountGcp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudaccountGcp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudaccountGcp.__pulumiType;
    }

    public readonly clientEmail!: pulumi.Output<string>;
    public readonly clientId!: pulumi.Output<string>;
    public readonly clientX509CertUrl!: pulumi.Output<string>;
    public readonly domainName!: pulumi.Output<string | undefined>;
    public readonly gsuiteUser!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly organizationalUnitId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly organizationalUnitName!: pulumi.Output<string>;
    public /*out*/ readonly organizationalUnitPath!: pulumi.Output<string>;
    public readonly privateKey!: pulumi.Output<string>;
    public readonly privateKeyId!: pulumi.Output<string>;
    public readonly projectId!: pulumi.Output<string>;
    public /*out*/ readonly vendor!: pulumi.Output<string>;

    /**
     * Create a CloudaccountGcp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudaccountGcpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudaccountGcpArgs | CloudaccountGcpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudaccountGcpState | undefined;
            resourceInputs["clientEmail"] = state ? state.clientEmail : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientX509CertUrl"] = state ? state.clientX509CertUrl : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["gsuiteUser"] = state ? state.gsuiteUser : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationalUnitId"] = state ? state.organizationalUnitId : undefined;
            resourceInputs["organizationalUnitName"] = state ? state.organizationalUnitName : undefined;
            resourceInputs["organizationalUnitPath"] = state ? state.organizationalUnitPath : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["privateKeyId"] = state ? state.privateKeyId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as CloudaccountGcpArgs | undefined;
            if ((!args || args.clientEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientEmail'");
            }
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientX509CertUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientX509CertUrl'");
            }
            if ((!args || args.privateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            if ((!args || args.privateKeyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKeyId'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["clientEmail"] = args ? args.clientEmail : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientX509CertUrl"] = args ? args.clientX509CertUrl : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["gsuiteUser"] = args ? args.gsuiteUser : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationalUnitId"] = args ? args.organizationalUnitId : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["privateKeyId"] = args?.privateKeyId ? pulumi.secret(args.privateKeyId) : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["organizationalUnitName"] = undefined /*out*/;
            resourceInputs["organizationalUnitPath"] = undefined /*out*/;
            resourceInputs["vendor"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey", "privateKeyId"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CloudaccountGcp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudaccountGcp resources.
 */
export interface CloudaccountGcpState {
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    gsuiteUser?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    organizationalUnitId?: pulumi.Input<string>;
    organizationalUnitName?: pulumi.Input<string>;
    organizationalUnitPath?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudaccountGcp resource.
 */
export interface CloudaccountGcpArgs {
    clientEmail: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientX509CertUrl: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    gsuiteUser?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    organizationalUnitId?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
