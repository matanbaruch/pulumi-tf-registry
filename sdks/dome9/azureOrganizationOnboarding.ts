// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AzureOrganizationOnboarding extends pulumi.CustomResource {
    /**
     * Get an existing AzureOrganizationOnboarding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureOrganizationOnboardingState, opts?: pulumi.CustomResourceOptions): AzureOrganizationOnboarding {
        return new AzureOrganizationOnboarding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/azureOrganizationOnboarding:AzureOrganizationOnboarding';

    /**
     * Returns true if the given object is an instance of AzureOrganizationOnboarding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureOrganizationOnboarding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureOrganizationOnboarding.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<number>;
    public readonly activeBlades!: pulumi.Output<outputs.AzureOrganizationOnboardingActiveBlades>;
    public readonly appRegistrationName!: pulumi.Output<string>;
    public readonly clientId!: pulumi.Output<string | undefined>;
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly isAutoOnboarding!: pulumi.Output<boolean | undefined>;
    public readonly managementGroupId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly onboardingConfiguration!: pulumi.Output<{[key: string]: string}>;
    public readonly organizationName!: pulumi.Output<string>;
    public readonly tenantId!: pulumi.Output<string>;
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    public readonly useCloudGuardManagedApp!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly userId!: pulumi.Output<number>;
    public readonly vendor!: pulumi.Output<string>;
    public readonly workflowId!: pulumi.Output<string | undefined>;

    /**
     * Create a AzureOrganizationOnboarding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureOrganizationOnboardingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureOrganizationOnboardingArgs | AzureOrganizationOnboardingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureOrganizationOnboardingState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["activeBlades"] = state ? state.activeBlades : undefined;
            resourceInputs["appRegistrationName"] = state ? state.appRegistrationName : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["isAutoOnboarding"] = state ? state.isAutoOnboarding : undefined;
            resourceInputs["managementGroupId"] = state ? state.managementGroupId : undefined;
            resourceInputs["onboardingConfiguration"] = state ? state.onboardingConfiguration : undefined;
            resourceInputs["organizationName"] = state ? state.organizationName : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["useCloudGuardManagedApp"] = state ? state.useCloudGuardManagedApp : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
            resourceInputs["workflowId"] = state ? state.workflowId : undefined;
        } else {
            const args = argsOrState as AzureOrganizationOnboardingArgs | undefined;
            if ((!args || args.activeBlades === undefined) && !opts.urn) {
                throw new Error("Missing required property 'activeBlades'");
            }
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if ((!args || args.vendor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vendor'");
            }
            resourceInputs["activeBlades"] = args ? args.activeBlades : undefined;
            resourceInputs["appRegistrationName"] = args ? args.appRegistrationName : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["isAutoOnboarding"] = args ? args.isAutoOnboarding : undefined;
            resourceInputs["managementGroupId"] = args ? args.managementGroupId : undefined;
            resourceInputs["organizationName"] = args ? args.organizationName : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
            resourceInputs["useCloudGuardManagedApp"] = args ? args.useCloudGuardManagedApp : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
            resourceInputs["workflowId"] = args ? args.workflowId : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["onboardingConfiguration"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureOrganizationOnboarding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AzureOrganizationOnboarding resources.
 */
export interface AzureOrganizationOnboardingState {
    accountId?: pulumi.Input<number>;
    activeBlades?: pulumi.Input<inputs.AzureOrganizationOnboardingActiveBlades>;
    appRegistrationName?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    isAutoOnboarding?: pulumi.Input<boolean>;
    managementGroupId?: pulumi.Input<string>;
    onboardingConfiguration?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    organizationName?: pulumi.Input<string>;
    tenantId?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    useCloudGuardManagedApp?: pulumi.Input<boolean>;
    userId?: pulumi.Input<number>;
    vendor?: pulumi.Input<string>;
    workflowId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureOrganizationOnboarding resource.
 */
export interface AzureOrganizationOnboardingArgs {
    activeBlades: pulumi.Input<inputs.AzureOrganizationOnboardingActiveBlades>;
    appRegistrationName?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    isAutoOnboarding?: pulumi.Input<boolean>;
    managementGroupId?: pulumi.Input<string>;
    organizationName?: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
    useCloudGuardManagedApp?: pulumi.Input<boolean>;
    vendor: pulumi.Input<string>;
    workflowId?: pulumi.Input<string>;
}
