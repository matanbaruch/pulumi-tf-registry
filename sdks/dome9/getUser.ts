// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dome9:index/getUser:getUser", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    id: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly accesses: outputs.GetUserAccess[];
    readonly canSwitchRole: boolean;
    readonly creates: string[];
    readonly crossAccountAccesses: string[];
    readonly email: string;
    readonly hasApiKey: boolean;
    readonly hasApiKeyV1: boolean;
    readonly hasApiKeyV2: boolean;
    readonly iamSaves: outputs.GetUserIamSafe[];
    readonly id: string;
    readonly isAuditor: boolean;
    readonly isLocked: boolean;
    readonly isMfaEnabled: boolean;
    readonly isMobileDevicePaired: boolean;
    readonly isOwner: boolean;
    readonly isSsoEnabled: boolean;
    readonly isSuperUser: boolean;
    readonly isSuspended: boolean;
    readonly lastLogin: string;
    readonly manages: outputs.GetUserManage[];
    readonly permitAlertActions: boolean;
    readonly permitNotifications: boolean;
    readonly permitOnBoarding: boolean;
    readonly permitPolicies: boolean;
    readonly permitRulesets: boolean;
    readonly roleIds: number[];
    readonly views: outputs.GetUserView[];
}
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    id: pulumi.Input<string>;
}
