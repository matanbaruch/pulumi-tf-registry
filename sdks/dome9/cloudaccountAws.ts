// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudaccountAws extends pulumi.CustomResource {
    /**
     * Get an existing CloudaccountAws resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudaccountAwsState, opts?: pulumi.CustomResourceOptions): CloudaccountAws {
        return new CloudaccountAws(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/cloudaccountAws:CloudaccountAws';

    /**
     * Returns true if the given object is an instance of CloudaccountAws.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudaccountAws {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudaccountAws.__pulumiType;
    }

    public /*out*/ readonly allowReadOnly!: pulumi.Output<boolean>;
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    public readonly credentials!: pulumi.Output<outputs.CloudaccountAwsCredentials>;
    public /*out*/ readonly externalAccountNumber!: pulumi.Output<string>;
    public /*out*/ readonly fullProtection!: pulumi.Output<boolean>;
    public /*out*/ readonly iamSaves!: pulumi.Output<outputs.CloudaccountAwsIamSafe[]>;
    public /*out*/ readonly isFetchingSuspended!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly netSec!: pulumi.Output<outputs.CloudaccountAwsNetSec | undefined>;
    public readonly organizationalUnitId!: pulumi.Output<string | undefined>;
    public readonly vendor!: pulumi.Output<string | undefined>;

    /**
     * Create a CloudaccountAws resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudaccountAwsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudaccountAwsArgs | CloudaccountAwsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudaccountAwsState | undefined;
            resourceInputs["allowReadOnly"] = state ? state.allowReadOnly : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["externalAccountNumber"] = state ? state.externalAccountNumber : undefined;
            resourceInputs["fullProtection"] = state ? state.fullProtection : undefined;
            resourceInputs["iamSaves"] = state ? state.iamSaves : undefined;
            resourceInputs["isFetchingSuspended"] = state ? state.isFetchingSuspended : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netSec"] = state ? state.netSec : undefined;
            resourceInputs["organizationalUnitId"] = state ? state.organizationalUnitId : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
        } else {
            const args = argsOrState as CloudaccountAwsArgs | undefined;
            if ((!args || args.credentials === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credentials'");
            }
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netSec"] = args ? args.netSec : undefined;
            resourceInputs["organizationalUnitId"] = args ? args.organizationalUnitId : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
            resourceInputs["allowReadOnly"] = undefined /*out*/;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["externalAccountNumber"] = undefined /*out*/;
            resourceInputs["fullProtection"] = undefined /*out*/;
            resourceInputs["iamSaves"] = undefined /*out*/;
            resourceInputs["isFetchingSuspended"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudaccountAws.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudaccountAws resources.
 */
export interface CloudaccountAwsState {
    allowReadOnly?: pulumi.Input<boolean>;
    creationDate?: pulumi.Input<string>;
    credentials?: pulumi.Input<inputs.CloudaccountAwsCredentials>;
    externalAccountNumber?: pulumi.Input<string>;
    fullProtection?: pulumi.Input<boolean>;
    iamSaves?: pulumi.Input<pulumi.Input<inputs.CloudaccountAwsIamSafe>[]>;
    isFetchingSuspended?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    netSec?: pulumi.Input<inputs.CloudaccountAwsNetSec>;
    organizationalUnitId?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudaccountAws resource.
 */
export interface CloudaccountAwsArgs {
    credentials: pulumi.Input<inputs.CloudaccountAwsCredentials>;
    name?: pulumi.Input<string>;
    netSec?: pulumi.Input<inputs.CloudaccountAwsNetSec>;
    organizationalUnitId?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
}
