// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsOrganizationOnboarding extends pulumi.CustomResource {
    /**
     * Get an existing AwsOrganizationOnboarding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsOrganizationOnboardingState, opts?: pulumi.CustomResourceOptions): AwsOrganizationOnboarding {
        return new AwsOrganizationOnboarding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/awsOrganizationOnboarding:AwsOrganizationOnboarding';

    /**
     * Returns true if the given object is an instance of AwsOrganizationOnboarding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsOrganizationOnboarding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsOrganizationOnboarding.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<number>;
    public readonly apiKey!: pulumi.Output<string | undefined>;
    public readonly awsOrganizationName!: pulumi.Output<string | undefined>;
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly enableStackModify!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly externalManagementAccountId!: pulumi.Output<string>;
    public /*out*/ readonly externalOrganizationId!: pulumi.Output<string>;
    public /*out*/ readonly managementAccountStackId!: pulumi.Output<string>;
    public /*out*/ readonly managementAccountStackRegion!: pulumi.Output<string>;
    public /*out*/ readonly onboardingConfiguration!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly organizationName!: pulumi.Output<string>;
    public readonly roleArn!: pulumi.Output<string>;
    public readonly secret!: pulumi.Output<string>;
    public readonly stackSetArn!: pulumi.Output<string>;
    public /*out*/ readonly stackSetOrganizationalUnitIds!: pulumi.Output<string[]>;
    public /*out*/ readonly stackSetRegions!: pulumi.Output<string[]>;
    public readonly type!: pulumi.Output<string | undefined>;
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    public /*out*/ readonly userId!: pulumi.Output<number>;

    /**
     * Create a AwsOrganizationOnboarding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsOrganizationOnboardingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsOrganizationOnboardingArgs | AwsOrganizationOnboardingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsOrganizationOnboardingState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["awsOrganizationName"] = state ? state.awsOrganizationName : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["enableStackModify"] = state ? state.enableStackModify : undefined;
            resourceInputs["externalManagementAccountId"] = state ? state.externalManagementAccountId : undefined;
            resourceInputs["externalOrganizationId"] = state ? state.externalOrganizationId : undefined;
            resourceInputs["managementAccountStackId"] = state ? state.managementAccountStackId : undefined;
            resourceInputs["managementAccountStackRegion"] = state ? state.managementAccountStackRegion : undefined;
            resourceInputs["onboardingConfiguration"] = state ? state.onboardingConfiguration : undefined;
            resourceInputs["organizationName"] = state ? state.organizationName : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["stackSetArn"] = state ? state.stackSetArn : undefined;
            resourceInputs["stackSetOrganizationalUnitIds"] = state ? state.stackSetOrganizationalUnitIds : undefined;
            resourceInputs["stackSetRegions"] = state ? state.stackSetRegions : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as AwsOrganizationOnboardingArgs | undefined;
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            if ((!args || args.secret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secret'");
            }
            if ((!args || args.stackSetArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackSetArn'");
            }
            resourceInputs["apiKey"] = args ? args.apiKey : undefined;
            resourceInputs["awsOrganizationName"] = args ? args.awsOrganizationName : undefined;
            resourceInputs["enableStackModify"] = args ? args.enableStackModify : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["stackSetArn"] = args ? args.stackSetArn : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["externalManagementAccountId"] = undefined /*out*/;
            resourceInputs["externalOrganizationId"] = undefined /*out*/;
            resourceInputs["managementAccountStackId"] = undefined /*out*/;
            resourceInputs["managementAccountStackRegion"] = undefined /*out*/;
            resourceInputs["onboardingConfiguration"] = undefined /*out*/;
            resourceInputs["organizationName"] = undefined /*out*/;
            resourceInputs["stackSetOrganizationalUnitIds"] = undefined /*out*/;
            resourceInputs["stackSetRegions"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsOrganizationOnboarding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsOrganizationOnboarding resources.
 */
export interface AwsOrganizationOnboardingState {
    accountId?: pulumi.Input<number>;
    apiKey?: pulumi.Input<string>;
    awsOrganizationName?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    enableStackModify?: pulumi.Input<boolean>;
    externalManagementAccountId?: pulumi.Input<string>;
    externalOrganizationId?: pulumi.Input<string>;
    managementAccountStackId?: pulumi.Input<string>;
    managementAccountStackRegion?: pulumi.Input<string>;
    onboardingConfiguration?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    organizationName?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secret?: pulumi.Input<string>;
    stackSetArn?: pulumi.Input<string>;
    stackSetOrganizationalUnitIds?: pulumi.Input<pulumi.Input<string>[]>;
    stackSetRegions?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
    updateTime?: pulumi.Input<string>;
    userId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AwsOrganizationOnboarding resource.
 */
export interface AwsOrganizationOnboardingArgs {
    apiKey?: pulumi.Input<string>;
    awsOrganizationName?: pulumi.Input<string>;
    enableStackModify?: pulumi.Input<boolean>;
    roleArn: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    stackSetArn: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
