// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrganizationalUnit extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationalUnit resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationalUnitState, opts?: pulumi.CustomResourceOptions): OrganizationalUnit {
        return new OrganizationalUnit(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dome9:index/organizationalUnit:OrganizationalUnit';

    /**
     * Returns true if the given object is an instance of OrganizationalUnit.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationalUnit {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationalUnit.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<string>;
    public /*out*/ readonly awsAggregateCloudAccountsCount!: pulumi.Output<number>;
    public /*out*/ readonly awsCloudAccountsCount!: pulumi.Output<number>;
    public /*out*/ readonly azureAggregateCloudAccountsCount!: pulumi.Output<number>;
    public /*out*/ readonly azureCloudAccountsCount!: pulumi.Output<number>;
    public /*out*/ readonly created!: pulumi.Output<string>;
    public /*out*/ readonly googleAggregateCloudAccountsCount!: pulumi.Output<number>;
    public /*out*/ readonly googleCloudAccountsCount!: pulumi.Output<number>;
    public /*out*/ readonly isParentRoot!: pulumi.Output<boolean>;
    public /*out*/ readonly isRoot!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly parentId!: pulumi.Output<string | undefined>;
    public /*out*/ readonly path!: pulumi.Output<string>;
    public /*out*/ readonly pathStr!: pulumi.Output<string>;
    public /*out*/ readonly subOrganizationalUnitsCount!: pulumi.Output<number>;
    public /*out*/ readonly updated!: pulumi.Output<string>;

    /**
     * Create a OrganizationalUnit resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationalUnitArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationalUnitArgs | OrganizationalUnitState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationalUnitState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["awsAggregateCloudAccountsCount"] = state ? state.awsAggregateCloudAccountsCount : undefined;
            resourceInputs["awsCloudAccountsCount"] = state ? state.awsCloudAccountsCount : undefined;
            resourceInputs["azureAggregateCloudAccountsCount"] = state ? state.azureAggregateCloudAccountsCount : undefined;
            resourceInputs["azureCloudAccountsCount"] = state ? state.azureCloudAccountsCount : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["googleAggregateCloudAccountsCount"] = state ? state.googleAggregateCloudAccountsCount : undefined;
            resourceInputs["googleCloudAccountsCount"] = state ? state.googleCloudAccountsCount : undefined;
            resourceInputs["isParentRoot"] = state ? state.isParentRoot : undefined;
            resourceInputs["isRoot"] = state ? state.isRoot : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["pathStr"] = state ? state.pathStr : undefined;
            resourceInputs["subOrganizationalUnitsCount"] = state ? state.subOrganizationalUnitsCount : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
        } else {
            const args = argsOrState as OrganizationalUnitArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["awsAggregateCloudAccountsCount"] = undefined /*out*/;
            resourceInputs["awsCloudAccountsCount"] = undefined /*out*/;
            resourceInputs["azureAggregateCloudAccountsCount"] = undefined /*out*/;
            resourceInputs["azureCloudAccountsCount"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["googleAggregateCloudAccountsCount"] = undefined /*out*/;
            resourceInputs["googleCloudAccountsCount"] = undefined /*out*/;
            resourceInputs["isParentRoot"] = undefined /*out*/;
            resourceInputs["isRoot"] = undefined /*out*/;
            resourceInputs["path"] = undefined /*out*/;
            resourceInputs["pathStr"] = undefined /*out*/;
            resourceInputs["subOrganizationalUnitsCount"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationalUnit.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationalUnit resources.
 */
export interface OrganizationalUnitState {
    accountId?: pulumi.Input<string>;
    awsAggregateCloudAccountsCount?: pulumi.Input<number>;
    awsCloudAccountsCount?: pulumi.Input<number>;
    azureAggregateCloudAccountsCount?: pulumi.Input<number>;
    azureCloudAccountsCount?: pulumi.Input<number>;
    created?: pulumi.Input<string>;
    googleAggregateCloudAccountsCount?: pulumi.Input<number>;
    googleCloudAccountsCount?: pulumi.Input<number>;
    isParentRoot?: pulumi.Input<boolean>;
    isRoot?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    pathStr?: pulumi.Input<string>;
    subOrganizationalUnitsCount?: pulumi.Input<number>;
    updated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationalUnit resource.
 */
export interface OrganizationalUnitArgs {
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
}
