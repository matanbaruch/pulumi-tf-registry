// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { AdmissionControlPolicyArgs, AdmissionControlPolicyState } from "./admissionControlPolicy";
export type AdmissionControlPolicy = import("./admissionControlPolicy").AdmissionControlPolicy;
export const AdmissionControlPolicy: typeof import("./admissionControlPolicy").AdmissionControlPolicy = null as any;
utilities.lazyLoad(exports, ["AdmissionControlPolicy"], () => require("./admissionControlPolicy"));

export { AssessmentArgs, AssessmentState } from "./assessment";
export type Assessment = import("./assessment").Assessment;
export const Assessment: typeof import("./assessment").Assessment = null as any;
utilities.lazyLoad(exports, ["Assessment"], () => require("./assessment"));

export { AttachIamSafeArgs, AttachIamSafeState } from "./attachIamSafe";
export type AttachIamSafe = import("./attachIamSafe").AttachIamSafe;
export const AttachIamSafe: typeof import("./attachIamSafe").AttachIamSafe = null as any;
utilities.lazyLoad(exports, ["AttachIamSafe"], () => require("./attachIamSafe"));

export { AwpAwsOnboardingArgs, AwpAwsOnboardingState } from "./awpAwsOnboarding";
export type AwpAwsOnboarding = import("./awpAwsOnboarding").AwpAwsOnboarding;
export const AwpAwsOnboarding: typeof import("./awpAwsOnboarding").AwpAwsOnboarding = null as any;
utilities.lazyLoad(exports, ["AwpAwsOnboarding"], () => require("./awpAwsOnboarding"));

export { AwpAzureOnboardingArgs, AwpAzureOnboardingState } from "./awpAzureOnboarding";
export type AwpAzureOnboarding = import("./awpAzureOnboarding").AwpAzureOnboarding;
export const AwpAzureOnboarding: typeof import("./awpAzureOnboarding").AwpAzureOnboarding = null as any;
utilities.lazyLoad(exports, ["AwpAzureOnboarding"], () => require("./awpAzureOnboarding"));

export { AwsOrganizationOnboardingArgs, AwsOrganizationOnboardingState } from "./awsOrganizationOnboarding";
export type AwsOrganizationOnboarding = import("./awsOrganizationOnboarding").AwsOrganizationOnboarding;
export const AwsOrganizationOnboarding: typeof import("./awsOrganizationOnboarding").AwsOrganizationOnboarding = null as any;
utilities.lazyLoad(exports, ["AwsOrganizationOnboarding"], () => require("./awsOrganizationOnboarding"));

export { AwsSecurityGroupArgs, AwsSecurityGroupState } from "./awsSecurityGroup";
export type AwsSecurityGroup = import("./awsSecurityGroup").AwsSecurityGroup;
export const AwsSecurityGroup: typeof import("./awsSecurityGroup").AwsSecurityGroup = null as any;
utilities.lazyLoad(exports, ["AwsSecurityGroup"], () => require("./awsSecurityGroup"));

export { AwsUnifiedOnboardingArgs, AwsUnifiedOnboardingState } from "./awsUnifiedOnboarding";
export type AwsUnifiedOnboarding = import("./awsUnifiedOnboarding").AwsUnifiedOnboarding;
export const AwsUnifiedOnboarding: typeof import("./awsUnifiedOnboarding").AwsUnifiedOnboarding = null as any;
utilities.lazyLoad(exports, ["AwsUnifiedOnboarding"], () => require("./awsUnifiedOnboarding"));

export { AzureOrganizationOnboardingArgs, AzureOrganizationOnboardingState } from "./azureOrganizationOnboarding";
export type AzureOrganizationOnboarding = import("./azureOrganizationOnboarding").AzureOrganizationOnboarding;
export const AzureOrganizationOnboarding: typeof import("./azureOrganizationOnboarding").AzureOrganizationOnboarding = null as any;
utilities.lazyLoad(exports, ["AzureOrganizationOnboarding"], () => require("./azureOrganizationOnboarding"));

export { AzureSecurityGroupArgs, AzureSecurityGroupState } from "./azureSecurityGroup";
export type AzureSecurityGroup = import("./azureSecurityGroup").AzureSecurityGroup;
export const AzureSecurityGroup: typeof import("./azureSecurityGroup").AzureSecurityGroup = null as any;
utilities.lazyLoad(exports, ["AzureSecurityGroup"], () => require("./azureSecurityGroup"));

export { CloudSecurityGroupRuleArgs, CloudSecurityGroupRuleState } from "./cloudSecurityGroupRule";
export type CloudSecurityGroupRule = import("./cloudSecurityGroupRule").CloudSecurityGroupRule;
export const CloudSecurityGroupRule: typeof import("./cloudSecurityGroupRule").CloudSecurityGroupRule = null as any;
utilities.lazyLoad(exports, ["CloudSecurityGroupRule"], () => require("./cloudSecurityGroupRule"));

export { CloudaccountAlibabaArgs, CloudaccountAlibabaState } from "./cloudaccountAlibaba";
export type CloudaccountAlibaba = import("./cloudaccountAlibaba").CloudaccountAlibaba;
export const CloudaccountAlibaba: typeof import("./cloudaccountAlibaba").CloudaccountAlibaba = null as any;
utilities.lazyLoad(exports, ["CloudaccountAlibaba"], () => require("./cloudaccountAlibaba"));

export { CloudaccountAwsArgs, CloudaccountAwsState } from "./cloudaccountAws";
export type CloudaccountAws = import("./cloudaccountAws").CloudaccountAws;
export const CloudaccountAws: typeof import("./cloudaccountAws").CloudaccountAws = null as any;
utilities.lazyLoad(exports, ["CloudaccountAws"], () => require("./cloudaccountAws"));

export { CloudaccountAzureArgs, CloudaccountAzureState } from "./cloudaccountAzure";
export type CloudaccountAzure = import("./cloudaccountAzure").CloudaccountAzure;
export const CloudaccountAzure: typeof import("./cloudaccountAzure").CloudaccountAzure = null as any;
utilities.lazyLoad(exports, ["CloudaccountAzure"], () => require("./cloudaccountAzure"));

export { CloudaccountGcpArgs, CloudaccountGcpState } from "./cloudaccountGcp";
export type CloudaccountGcp = import("./cloudaccountGcp").CloudaccountGcp;
export const CloudaccountGcp: typeof import("./cloudaccountGcp").CloudaccountGcp = null as any;
utilities.lazyLoad(exports, ["CloudaccountGcp"], () => require("./cloudaccountGcp"));

export { CloudaccountKubernetesArgs, CloudaccountKubernetesState } from "./cloudaccountKubernetes";
export type CloudaccountKubernetes = import("./cloudaccountKubernetes").CloudaccountKubernetes;
export const CloudaccountKubernetes: typeof import("./cloudaccountKubernetes").CloudaccountKubernetes = null as any;
utilities.lazyLoad(exports, ["CloudaccountKubernetes"], () => require("./cloudaccountKubernetes"));

export { CloudaccountOciArgs, CloudaccountOciState } from "./cloudaccountOci";
export type CloudaccountOci = import("./cloudaccountOci").CloudaccountOci;
export const CloudaccountOci: typeof import("./cloudaccountOci").CloudaccountOci = null as any;
utilities.lazyLoad(exports, ["CloudaccountOci"], () => require("./cloudaccountOci"));

export { CloudaccountOciTempDataArgs, CloudaccountOciTempDataState } from "./cloudaccountOciTempData";
export type CloudaccountOciTempData = import("./cloudaccountOciTempData").CloudaccountOciTempData;
export const CloudaccountOciTempData: typeof import("./cloudaccountOciTempData").CloudaccountOciTempData = null as any;
utilities.lazyLoad(exports, ["CloudaccountOciTempData"], () => require("./cloudaccountOciTempData"));

export { ContinuousComplianceNotificationArgs, ContinuousComplianceNotificationState } from "./continuousComplianceNotification";
export type ContinuousComplianceNotification = import("./continuousComplianceNotification").ContinuousComplianceNotification;
export const ContinuousComplianceNotification: typeof import("./continuousComplianceNotification").ContinuousComplianceNotification = null as any;
utilities.lazyLoad(exports, ["ContinuousComplianceNotification"], () => require("./continuousComplianceNotification"));

export { ContinuousCompliancePolicyArgs, ContinuousCompliancePolicyState } from "./continuousCompliancePolicy";
export type ContinuousCompliancePolicy = import("./continuousCompliancePolicy").ContinuousCompliancePolicy;
export const ContinuousCompliancePolicy: typeof import("./continuousCompliancePolicy").ContinuousCompliancePolicy = null as any;
utilities.lazyLoad(exports, ["ContinuousCompliancePolicy"], () => require("./continuousCompliancePolicy"));

export { GetAdmissionControlPolicyArgs, GetAdmissionControlPolicyResult, GetAdmissionControlPolicyOutputArgs } from "./getAdmissionControlPolicy";
export const getAdmissionControlPolicy: typeof import("./getAdmissionControlPolicy").getAdmissionControlPolicy = null as any;
export const getAdmissionControlPolicyOutput: typeof import("./getAdmissionControlPolicy").getAdmissionControlPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getAdmissionControlPolicy","getAdmissionControlPolicyOutput"], () => require("./getAdmissionControlPolicy"));

export { GetAssessmentArgs, GetAssessmentResult, GetAssessmentOutputArgs } from "./getAssessment";
export const getAssessment: typeof import("./getAssessment").getAssessment = null as any;
export const getAssessmentOutput: typeof import("./getAssessment").getAssessmentOutput = null as any;
utilities.lazyLoad(exports, ["getAssessment","getAssessmentOutput"], () => require("./getAssessment"));

export { GetAwpAwsOnboardingArgs, GetAwpAwsOnboardingResult, GetAwpAwsOnboardingOutputArgs } from "./getAwpAwsOnboarding";
export const getAwpAwsOnboarding: typeof import("./getAwpAwsOnboarding").getAwpAwsOnboarding = null as any;
export const getAwpAwsOnboardingOutput: typeof import("./getAwpAwsOnboarding").getAwpAwsOnboardingOutput = null as any;
utilities.lazyLoad(exports, ["getAwpAwsOnboarding","getAwpAwsOnboardingOutput"], () => require("./getAwpAwsOnboarding"));

export { GetAwpAwsOnboardingDataArgs, GetAwpAwsOnboardingDataResult, GetAwpAwsOnboardingDataOutputArgs } from "./getAwpAwsOnboardingData";
export const getAwpAwsOnboardingData: typeof import("./getAwpAwsOnboardingData").getAwpAwsOnboardingData = null as any;
export const getAwpAwsOnboardingDataOutput: typeof import("./getAwpAwsOnboardingData").getAwpAwsOnboardingDataOutput = null as any;
utilities.lazyLoad(exports, ["getAwpAwsOnboardingData","getAwpAwsOnboardingDataOutput"], () => require("./getAwpAwsOnboardingData"));

export { GetAwpAzureOnboardingArgs, GetAwpAzureOnboardingResult, GetAwpAzureOnboardingOutputArgs } from "./getAwpAzureOnboarding";
export const getAwpAzureOnboarding: typeof import("./getAwpAzureOnboarding").getAwpAzureOnboarding = null as any;
export const getAwpAzureOnboardingOutput: typeof import("./getAwpAzureOnboarding").getAwpAzureOnboardingOutput = null as any;
utilities.lazyLoad(exports, ["getAwpAzureOnboarding","getAwpAzureOnboardingOutput"], () => require("./getAwpAzureOnboarding"));

export { GetAwpAzureOnboardingDataArgs, GetAwpAzureOnboardingDataResult, GetAwpAzureOnboardingDataOutputArgs } from "./getAwpAzureOnboardingData";
export const getAwpAzureOnboardingData: typeof import("./getAwpAzureOnboardingData").getAwpAzureOnboardingData = null as any;
export const getAwpAzureOnboardingDataOutput: typeof import("./getAwpAzureOnboardingData").getAwpAzureOnboardingDataOutput = null as any;
utilities.lazyLoad(exports, ["getAwpAzureOnboardingData","getAwpAzureOnboardingDataOutput"], () => require("./getAwpAzureOnboardingData"));

export { GetAwsOrganizationOnboardingArgs, GetAwsOrganizationOnboardingResult, GetAwsOrganizationOnboardingOutputArgs } from "./getAwsOrganizationOnboarding";
export const getAwsOrganizationOnboarding: typeof import("./getAwsOrganizationOnboarding").getAwsOrganizationOnboarding = null as any;
export const getAwsOrganizationOnboardingOutput: typeof import("./getAwsOrganizationOnboarding").getAwsOrganizationOnboardingOutput = null as any;
utilities.lazyLoad(exports, ["getAwsOrganizationOnboarding","getAwsOrganizationOnboardingOutput"], () => require("./getAwsOrganizationOnboarding"));

export { GetAwsOrganizationOnboardingManagementStackArgs, GetAwsOrganizationOnboardingManagementStackResult, GetAwsOrganizationOnboardingManagementStackOutputArgs } from "./getAwsOrganizationOnboardingManagementStack";
export const getAwsOrganizationOnboardingManagementStack: typeof import("./getAwsOrganizationOnboardingManagementStack").getAwsOrganizationOnboardingManagementStack = null as any;
export const getAwsOrganizationOnboardingManagementStackOutput: typeof import("./getAwsOrganizationOnboardingManagementStack").getAwsOrganizationOnboardingManagementStackOutput = null as any;
utilities.lazyLoad(exports, ["getAwsOrganizationOnboardingManagementStack","getAwsOrganizationOnboardingManagementStackOutput"], () => require("./getAwsOrganizationOnboardingManagementStack"));

export { GetAwsOrganizationOnboardingMemberAccountConfigurationArgs, GetAwsOrganizationOnboardingMemberAccountConfigurationResult, GetAwsOrganizationOnboardingMemberAccountConfigurationOutputArgs } from "./getAwsOrganizationOnboardingMemberAccountConfiguration";
export const getAwsOrganizationOnboardingMemberAccountConfiguration: typeof import("./getAwsOrganizationOnboardingMemberAccountConfiguration").getAwsOrganizationOnboardingMemberAccountConfiguration = null as any;
export const getAwsOrganizationOnboardingMemberAccountConfigurationOutput: typeof import("./getAwsOrganizationOnboardingMemberAccountConfiguration").getAwsOrganizationOnboardingMemberAccountConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getAwsOrganizationOnboardingMemberAccountConfiguration","getAwsOrganizationOnboardingMemberAccountConfigurationOutput"], () => require("./getAwsOrganizationOnboardingMemberAccountConfiguration"));

export { GetAwsSecurityGroupArgs, GetAwsSecurityGroupResult, GetAwsSecurityGroupOutputArgs } from "./getAwsSecurityGroup";
export const getAwsSecurityGroup: typeof import("./getAwsSecurityGroup").getAwsSecurityGroup = null as any;
export const getAwsSecurityGroupOutput: typeof import("./getAwsSecurityGroup").getAwsSecurityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getAwsSecurityGroup","getAwsSecurityGroupOutput"], () => require("./getAwsSecurityGroup"));

export { GetAwsUnifiedOnboardingArgs, GetAwsUnifiedOnboardingResult, GetAwsUnifiedOnboardingOutputArgs } from "./getAwsUnifiedOnboarding";
export const getAwsUnifiedOnboarding: typeof import("./getAwsUnifiedOnboarding").getAwsUnifiedOnboarding = null as any;
export const getAwsUnifiedOnboardingOutput: typeof import("./getAwsUnifiedOnboarding").getAwsUnifiedOnboardingOutput = null as any;
utilities.lazyLoad(exports, ["getAwsUnifiedOnboarding","getAwsUnifiedOnboardingOutput"], () => require("./getAwsUnifiedOnboarding"));

export { GetAwsUnifiedOnboardingUpdateVersionStackConfigArgs, GetAwsUnifiedOnboardingUpdateVersionStackConfigResult, GetAwsUnifiedOnboardingUpdateVersionStackConfigOutputArgs } from "./getAwsUnifiedOnboardingUpdateVersionStackConfig";
export const getAwsUnifiedOnboardingUpdateVersionStackConfig: typeof import("./getAwsUnifiedOnboardingUpdateVersionStackConfig").getAwsUnifiedOnboardingUpdateVersionStackConfig = null as any;
export const getAwsUnifiedOnboardingUpdateVersionStackConfigOutput: typeof import("./getAwsUnifiedOnboardingUpdateVersionStackConfig").getAwsUnifiedOnboardingUpdateVersionStackConfigOutput = null as any;
utilities.lazyLoad(exports, ["getAwsUnifiedOnboardingUpdateVersionStackConfig","getAwsUnifiedOnboardingUpdateVersionStackConfigOutput"], () => require("./getAwsUnifiedOnboardingUpdateVersionStackConfig"));

export { GetAzureOrganizationOnboardingArgs, GetAzureOrganizationOnboardingResult, GetAzureOrganizationOnboardingOutputArgs } from "./getAzureOrganizationOnboarding";
export const getAzureOrganizationOnboarding: typeof import("./getAzureOrganizationOnboarding").getAzureOrganizationOnboarding = null as any;
export const getAzureOrganizationOnboardingOutput: typeof import("./getAzureOrganizationOnboarding").getAzureOrganizationOnboardingOutput = null as any;
utilities.lazyLoad(exports, ["getAzureOrganizationOnboarding","getAzureOrganizationOnboardingOutput"], () => require("./getAzureOrganizationOnboarding"));

export { GetAzureSecurityGroupArgs, GetAzureSecurityGroupResult, GetAzureSecurityGroupOutputArgs } from "./getAzureSecurityGroup";
export const getAzureSecurityGroup: typeof import("./getAzureSecurityGroup").getAzureSecurityGroup = null as any;
export const getAzureSecurityGroupOutput: typeof import("./getAzureSecurityGroup").getAzureSecurityGroupOutput = null as any;
utilities.lazyLoad(exports, ["getAzureSecurityGroup","getAzureSecurityGroupOutput"], () => require("./getAzureSecurityGroup"));

export { GetCloudSecurityGroupRuleArgs, GetCloudSecurityGroupRuleResult, GetCloudSecurityGroupRuleOutputArgs } from "./getCloudSecurityGroupRule";
export const getCloudSecurityGroupRule: typeof import("./getCloudSecurityGroupRule").getCloudSecurityGroupRule = null as any;
export const getCloudSecurityGroupRuleOutput: typeof import("./getCloudSecurityGroupRule").getCloudSecurityGroupRuleOutput = null as any;
utilities.lazyLoad(exports, ["getCloudSecurityGroupRule","getCloudSecurityGroupRuleOutput"], () => require("./getCloudSecurityGroupRule"));

export { GetCloudaccountAlibabaArgs, GetCloudaccountAlibabaResult, GetCloudaccountAlibabaOutputArgs } from "./getCloudaccountAlibaba";
export const getCloudaccountAlibaba: typeof import("./getCloudaccountAlibaba").getCloudaccountAlibaba = null as any;
export const getCloudaccountAlibabaOutput: typeof import("./getCloudaccountAlibaba").getCloudaccountAlibabaOutput = null as any;
utilities.lazyLoad(exports, ["getCloudaccountAlibaba","getCloudaccountAlibabaOutput"], () => require("./getCloudaccountAlibaba"));

export { GetCloudaccountAwsArgs, GetCloudaccountAwsResult, GetCloudaccountAwsOutputArgs } from "./getCloudaccountAws";
export const getCloudaccountAws: typeof import("./getCloudaccountAws").getCloudaccountAws = null as any;
export const getCloudaccountAwsOutput: typeof import("./getCloudaccountAws").getCloudaccountAwsOutput = null as any;
utilities.lazyLoad(exports, ["getCloudaccountAws","getCloudaccountAwsOutput"], () => require("./getCloudaccountAws"));

export { GetCloudaccountAzureArgs, GetCloudaccountAzureResult, GetCloudaccountAzureOutputArgs } from "./getCloudaccountAzure";
export const getCloudaccountAzure: typeof import("./getCloudaccountAzure").getCloudaccountAzure = null as any;
export const getCloudaccountAzureOutput: typeof import("./getCloudaccountAzure").getCloudaccountAzureOutput = null as any;
utilities.lazyLoad(exports, ["getCloudaccountAzure","getCloudaccountAzureOutput"], () => require("./getCloudaccountAzure"));

export { GetCloudaccountGcpArgs, GetCloudaccountGcpResult, GetCloudaccountGcpOutputArgs } from "./getCloudaccountGcp";
export const getCloudaccountGcp: typeof import("./getCloudaccountGcp").getCloudaccountGcp = null as any;
export const getCloudaccountGcpOutput: typeof import("./getCloudaccountGcp").getCloudaccountGcpOutput = null as any;
utilities.lazyLoad(exports, ["getCloudaccountGcp","getCloudaccountGcpOutput"], () => require("./getCloudaccountGcp"));

export { GetCloudaccountKubernetesArgs, GetCloudaccountKubernetesResult, GetCloudaccountKubernetesOutputArgs } from "./getCloudaccountKubernetes";
export const getCloudaccountKubernetes: typeof import("./getCloudaccountKubernetes").getCloudaccountKubernetes = null as any;
export const getCloudaccountKubernetesOutput: typeof import("./getCloudaccountKubernetes").getCloudaccountKubernetesOutput = null as any;
utilities.lazyLoad(exports, ["getCloudaccountKubernetes","getCloudaccountKubernetesOutput"], () => require("./getCloudaccountKubernetes"));

export { GetCloudaccountOciArgs, GetCloudaccountOciResult, GetCloudaccountOciOutputArgs } from "./getCloudaccountOci";
export const getCloudaccountOci: typeof import("./getCloudaccountOci").getCloudaccountOci = null as any;
export const getCloudaccountOciOutput: typeof import("./getCloudaccountOci").getCloudaccountOciOutput = null as any;
utilities.lazyLoad(exports, ["getCloudaccountOci","getCloudaccountOciOutput"], () => require("./getCloudaccountOci"));

export { GetContinuousComplianceNotificationArgs, GetContinuousComplianceNotificationResult, GetContinuousComplianceNotificationOutputArgs } from "./getContinuousComplianceNotification";
export const getContinuousComplianceNotification: typeof import("./getContinuousComplianceNotification").getContinuousComplianceNotification = null as any;
export const getContinuousComplianceNotificationOutput: typeof import("./getContinuousComplianceNotification").getContinuousComplianceNotificationOutput = null as any;
utilities.lazyLoad(exports, ["getContinuousComplianceNotification","getContinuousComplianceNotificationOutput"], () => require("./getContinuousComplianceNotification"));

export { GetContinuousCompliancePolicyArgs, GetContinuousCompliancePolicyResult, GetContinuousCompliancePolicyOutputArgs } from "./getContinuousCompliancePolicy";
export const getContinuousCompliancePolicy: typeof import("./getContinuousCompliancePolicy").getContinuousCompliancePolicy = null as any;
export const getContinuousCompliancePolicyOutput: typeof import("./getContinuousCompliancePolicy").getContinuousCompliancePolicyOutput = null as any;
utilities.lazyLoad(exports, ["getContinuousCompliancePolicy","getContinuousCompliancePolicyOutput"], () => require("./getContinuousCompliancePolicy"));

export { GetImageAssurancePolicyArgs, GetImageAssurancePolicyResult, GetImageAssurancePolicyOutputArgs } from "./getImageAssurancePolicy";
export const getImageAssurancePolicy: typeof import("./getImageAssurancePolicy").getImageAssurancePolicy = null as any;
export const getImageAssurancePolicyOutput: typeof import("./getImageAssurancePolicy").getImageAssurancePolicyOutput = null as any;
utilities.lazyLoad(exports, ["getImageAssurancePolicy","getImageAssurancePolicyOutput"], () => require("./getImageAssurancePolicy"));

export { GetIntegrationArgs, GetIntegrationResult, GetIntegrationOutputArgs } from "./getIntegration";
export const getIntegration: typeof import("./getIntegration").getIntegration = null as any;
export const getIntegrationOutput: typeof import("./getIntegration").getIntegrationOutput = null as any;
utilities.lazyLoad(exports, ["getIntegration","getIntegrationOutput"], () => require("./getIntegration"));

export { GetIplistArgs, GetIplistResult, GetIplistOutputArgs } from "./getIplist";
export const getIplist: typeof import("./getIplist").getIplist = null as any;
export const getIplistOutput: typeof import("./getIplist").getIplistOutput = null as any;
utilities.lazyLoad(exports, ["getIplist","getIplistOutput"], () => require("./getIplist"));

export { GetNotificationArgs, GetNotificationResult, GetNotificationOutputArgs } from "./getNotification";
export const getNotification: typeof import("./getNotification").getNotification = null as any;
export const getNotificationOutput: typeof import("./getNotification").getNotificationOutput = null as any;
utilities.lazyLoad(exports, ["getNotification","getNotificationOutput"], () => require("./getNotification"));

export { GetOrganizationalUnitArgs, GetOrganizationalUnitResult, GetOrganizationalUnitOutputArgs } from "./getOrganizationalUnit";
export const getOrganizationalUnit: typeof import("./getOrganizationalUnit").getOrganizationalUnit = null as any;
export const getOrganizationalUnitOutput: typeof import("./getOrganizationalUnit").getOrganizationalUnitOutput = null as any;
utilities.lazyLoad(exports, ["getOrganizationalUnit","getOrganizationalUnitOutput"], () => require("./getOrganizationalUnit"));

export { GetRoleArgs, GetRoleResult, GetRoleOutputArgs } from "./getRole";
export const getRole: typeof import("./getRole").getRole = null as any;
export const getRoleOutput: typeof import("./getRole").getRoleOutput = null as any;
utilities.lazyLoad(exports, ["getRole","getRoleOutput"], () => require("./getRole"));

export { GetRulesetArgs, GetRulesetResult, GetRulesetOutputArgs } from "./getRuleset";
export const getRuleset: typeof import("./getRuleset").getRuleset = null as any;
export const getRulesetOutput: typeof import("./getRuleset").getRulesetOutput = null as any;
utilities.lazyLoad(exports, ["getRuleset","getRulesetOutput"], () => require("./getRuleset"));

export { GetServiceAccountArgs, GetServiceAccountResult, GetServiceAccountOutputArgs } from "./getServiceAccount";
export const getServiceAccount: typeof import("./getServiceAccount").getServiceAccount = null as any;
export const getServiceAccountOutput: typeof import("./getServiceAccount").getServiceAccountOutput = null as any;
utilities.lazyLoad(exports, ["getServiceAccount","getServiceAccountOutput"], () => require("./getServiceAccount"));

export { GetUserArgs, GetUserResult, GetUserOutputArgs } from "./getUser";
export const getUser: typeof import("./getUser").getUser = null as any;
export const getUserOutput: typeof import("./getUser").getUserOutput = null as any;
utilities.lazyLoad(exports, ["getUser","getUserOutput"], () => require("./getUser"));

export { GetVulnerabilityPolicyArgs, GetVulnerabilityPolicyResult, GetVulnerabilityPolicyOutputArgs } from "./getVulnerabilityPolicy";
export const getVulnerabilityPolicy: typeof import("./getVulnerabilityPolicy").getVulnerabilityPolicy = null as any;
export const getVulnerabilityPolicyOutput: typeof import("./getVulnerabilityPolicy").getVulnerabilityPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityPolicy","getVulnerabilityPolicyOutput"], () => require("./getVulnerabilityPolicy"));

export { IamSafeEntityArgs, IamSafeEntityState } from "./iamSafeEntity";
export type IamSafeEntity = import("./iamSafeEntity").IamSafeEntity;
export const IamSafeEntity: typeof import("./iamSafeEntity").IamSafeEntity = null as any;
utilities.lazyLoad(exports, ["IamSafeEntity"], () => require("./iamSafeEntity"));

export { ImageAssurancePolicyArgs, ImageAssurancePolicyState } from "./imageAssurancePolicy";
export type ImageAssurancePolicy = import("./imageAssurancePolicy").ImageAssurancePolicy;
export const ImageAssurancePolicy: typeof import("./imageAssurancePolicy").ImageAssurancePolicy = null as any;
utilities.lazyLoad(exports, ["ImageAssurancePolicy"], () => require("./imageAssurancePolicy"));

export { IntegrationArgs, IntegrationState } from "./integration";
export type Integration = import("./integration").Integration;
export const Integration: typeof import("./integration").Integration = null as any;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));

export { IplistArgs, IplistState } from "./iplist";
export type Iplist = import("./iplist").Iplist;
export const Iplist: typeof import("./iplist").Iplist = null as any;
utilities.lazyLoad(exports, ["Iplist"], () => require("./iplist"));

export { NotificationArgs, NotificationState } from "./notification";
export type Notification = import("./notification").Notification;
export const Notification: typeof import("./notification").Notification = null as any;
utilities.lazyLoad(exports, ["Notification"], () => require("./notification"));

export { OrganizationalUnitArgs, OrganizationalUnitState } from "./organizationalUnit";
export type OrganizationalUnit = import("./organizationalUnit").OrganizationalUnit;
export const OrganizationalUnit: typeof import("./organizationalUnit").OrganizationalUnit = null as any;
utilities.lazyLoad(exports, ["OrganizationalUnit"], () => require("./organizationalUnit"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { RoleArgs, RoleState } from "./role";
export type Role = import("./role").Role;
export const Role: typeof import("./role").Role = null as any;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));

export { RulesetArgs, RulesetState } from "./ruleset";
export type Ruleset = import("./ruleset").Ruleset;
export const Ruleset: typeof import("./ruleset").Ruleset = null as any;
utilities.lazyLoad(exports, ["Ruleset"], () => require("./ruleset"));

export { ServiceAccountArgs, ServiceAccountState } from "./serviceAccount";
export type ServiceAccount = import("./serviceAccount").ServiceAccount;
export const ServiceAccount: typeof import("./serviceAccount").ServiceAccount = null as any;
utilities.lazyLoad(exports, ["ServiceAccount"], () => require("./serviceAccount"));

export { UserArgs, UserState } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));

export { VulnerabilityPolicyArgs, VulnerabilityPolicyState } from "./vulnerabilityPolicy";
export type VulnerabilityPolicy = import("./vulnerabilityPolicy").VulnerabilityPolicy;
export const VulnerabilityPolicy: typeof import("./vulnerabilityPolicy").VulnerabilityPolicy = null as any;
utilities.lazyLoad(exports, ["VulnerabilityPolicy"], () => require("./vulnerabilityPolicy"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "dome9:index/admissionControlPolicy:AdmissionControlPolicy":
                return new AdmissionControlPolicy(name, <any>undefined, { urn })
            case "dome9:index/assessment:Assessment":
                return new Assessment(name, <any>undefined, { urn })
            case "dome9:index/attachIamSafe:AttachIamSafe":
                return new AttachIamSafe(name, <any>undefined, { urn })
            case "dome9:index/awpAwsOnboarding:AwpAwsOnboarding":
                return new AwpAwsOnboarding(name, <any>undefined, { urn })
            case "dome9:index/awpAzureOnboarding:AwpAzureOnboarding":
                return new AwpAzureOnboarding(name, <any>undefined, { urn })
            case "dome9:index/awsOrganizationOnboarding:AwsOrganizationOnboarding":
                return new AwsOrganizationOnboarding(name, <any>undefined, { urn })
            case "dome9:index/awsSecurityGroup:AwsSecurityGroup":
                return new AwsSecurityGroup(name, <any>undefined, { urn })
            case "dome9:index/awsUnifiedOnboarding:AwsUnifiedOnboarding":
                return new AwsUnifiedOnboarding(name, <any>undefined, { urn })
            case "dome9:index/azureOrganizationOnboarding:AzureOrganizationOnboarding":
                return new AzureOrganizationOnboarding(name, <any>undefined, { urn })
            case "dome9:index/azureSecurityGroup:AzureSecurityGroup":
                return new AzureSecurityGroup(name, <any>undefined, { urn })
            case "dome9:index/cloudSecurityGroupRule:CloudSecurityGroupRule":
                return new CloudSecurityGroupRule(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountAlibaba:CloudaccountAlibaba":
                return new CloudaccountAlibaba(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountAws:CloudaccountAws":
                return new CloudaccountAws(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountAzure:CloudaccountAzure":
                return new CloudaccountAzure(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountGcp:CloudaccountGcp":
                return new CloudaccountGcp(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountKubernetes:CloudaccountKubernetes":
                return new CloudaccountKubernetes(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountOci:CloudaccountOci":
                return new CloudaccountOci(name, <any>undefined, { urn })
            case "dome9:index/cloudaccountOciTempData:CloudaccountOciTempData":
                return new CloudaccountOciTempData(name, <any>undefined, { urn })
            case "dome9:index/continuousComplianceNotification:ContinuousComplianceNotification":
                return new ContinuousComplianceNotification(name, <any>undefined, { urn })
            case "dome9:index/continuousCompliancePolicy:ContinuousCompliancePolicy":
                return new ContinuousCompliancePolicy(name, <any>undefined, { urn })
            case "dome9:index/iamSafeEntity:IamSafeEntity":
                return new IamSafeEntity(name, <any>undefined, { urn })
            case "dome9:index/imageAssurancePolicy:ImageAssurancePolicy":
                return new ImageAssurancePolicy(name, <any>undefined, { urn })
            case "dome9:index/integration:Integration":
                return new Integration(name, <any>undefined, { urn })
            case "dome9:index/iplist:Iplist":
                return new Iplist(name, <any>undefined, { urn })
            case "dome9:index/notification:Notification":
                return new Notification(name, <any>undefined, { urn })
            case "dome9:index/organizationalUnit:OrganizationalUnit":
                return new OrganizationalUnit(name, <any>undefined, { urn })
            case "dome9:index/role:Role":
                return new Role(name, <any>undefined, { urn })
            case "dome9:index/ruleset:Ruleset":
                return new Ruleset(name, <any>undefined, { urn })
            case "dome9:index/serviceAccount:ServiceAccount":
                return new ServiceAccount(name, <any>undefined, { urn })
            case "dome9:index/user:User":
                return new User(name, <any>undefined, { urn })
            case "dome9:index/vulnerabilityPolicy:VulnerabilityPolicy":
                return new VulnerabilityPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("dome9", "index/admissionControlPolicy", _module)
pulumi.runtime.registerResourceModule("dome9", "index/assessment", _module)
pulumi.runtime.registerResourceModule("dome9", "index/attachIamSafe", _module)
pulumi.runtime.registerResourceModule("dome9", "index/awpAwsOnboarding", _module)
pulumi.runtime.registerResourceModule("dome9", "index/awpAzureOnboarding", _module)
pulumi.runtime.registerResourceModule("dome9", "index/awsOrganizationOnboarding", _module)
pulumi.runtime.registerResourceModule("dome9", "index/awsSecurityGroup", _module)
pulumi.runtime.registerResourceModule("dome9", "index/awsUnifiedOnboarding", _module)
pulumi.runtime.registerResourceModule("dome9", "index/azureOrganizationOnboarding", _module)
pulumi.runtime.registerResourceModule("dome9", "index/azureSecurityGroup", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudSecurityGroupRule", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountAlibaba", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountAws", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountAzure", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountGcp", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountKubernetes", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountOci", _module)
pulumi.runtime.registerResourceModule("dome9", "index/cloudaccountOciTempData", _module)
pulumi.runtime.registerResourceModule("dome9", "index/continuousComplianceNotification", _module)
pulumi.runtime.registerResourceModule("dome9", "index/continuousCompliancePolicy", _module)
pulumi.runtime.registerResourceModule("dome9", "index/iamSafeEntity", _module)
pulumi.runtime.registerResourceModule("dome9", "index/imageAssurancePolicy", _module)
pulumi.runtime.registerResourceModule("dome9", "index/integration", _module)
pulumi.runtime.registerResourceModule("dome9", "index/iplist", _module)
pulumi.runtime.registerResourceModule("dome9", "index/notification", _module)
pulumi.runtime.registerResourceModule("dome9", "index/organizationalUnit", _module)
pulumi.runtime.registerResourceModule("dome9", "index/role", _module)
pulumi.runtime.registerResourceModule("dome9", "index/ruleset", _module)
pulumi.runtime.registerResourceModule("dome9", "index/serviceAccount", _module)
pulumi.runtime.registerResourceModule("dome9", "index/user", _module)
pulumi.runtime.registerResourceModule("dome9", "index/vulnerabilityPolicy", _module)
pulumi.runtime.registerResourcePackage("dome9", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:dome9") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
