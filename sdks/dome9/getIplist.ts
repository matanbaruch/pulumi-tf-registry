// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIplist(args: GetIplistArgs, opts?: pulumi.InvokeOptions): Promise<GetIplistResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dome9:index/getIplist:getIplist", {
        "id": args.id,
        "items": args.items,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIplist.
 */
export interface GetIplistArgs {
    id: string;
    items?: inputs.GetIplistItem[];
}

/**
 * A collection of values returned by getIplist.
 */
export interface GetIplistResult {
    readonly description: string;
    readonly id: string;
    readonly items?: outputs.GetIplistItem[];
    readonly name: string;
}
export function getIplistOutput(args: GetIplistOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIplistResult> {
    return pulumi.output(args).apply((a: any) => getIplist(a, opts))
}

/**
 * A collection of arguments for invoking getIplist.
 */
export interface GetIplistOutputArgs {
    id: pulumi.Input<string>;
    items?: pulumi.Input<pulumi.Input<inputs.GetIplistItemArgs>[]>;
}
