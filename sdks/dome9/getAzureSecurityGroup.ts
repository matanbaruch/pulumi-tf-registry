// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAzureSecurityGroup(args: GetAzureSecurityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureSecurityGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dome9:index/getAzureSecurityGroup:getAzureSecurityGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAzureSecurityGroup.
 */
export interface GetAzureSecurityGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getAzureSecurityGroup.
 */
export interface GetAzureSecurityGroupResult {
    readonly cloudAccountName: string;
    readonly description: string;
    readonly dome9CloudAccountId: string;
    readonly dome9SecurityGroupName: string;
    readonly externalSecurityGroupId: string;
    readonly id: string;
    readonly inbounds: outputs.GetAzureSecurityGroupInbound[];
    readonly isTamperProtected: boolean;
    readonly lastUpdatedByDome9: string;
    readonly outbounds: outputs.GetAzureSecurityGroupOutbound[];
    readonly region: string;
    readonly resourceGroup: string;
    readonly tags: outputs.GetAzureSecurityGroupTag[];
}
export function getAzureSecurityGroupOutput(args: GetAzureSecurityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureSecurityGroupResult> {
    return pulumi.output(args).apply((a: any) => getAzureSecurityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAzureSecurityGroup.
 */
export interface GetAzureSecurityGroupOutputArgs {
    id: pulumi.Input<string>;
}
