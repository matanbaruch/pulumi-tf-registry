// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getColumns(args: GetColumnsArgs, opts?: pulumi.InvokeOptions): Promise<GetColumnsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("honeycombio:index/getColumns:getColumns", {
        "dataset": args.dataset,
        "id": args.id,
        "startsWith": args.startsWith,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getColumns.
 */
export interface GetColumnsArgs {
    dataset: string;
    id?: string;
    startsWith?: string;
}

/**
 * A collection of values returned by getColumns.
 */
export interface GetColumnsResult {
    readonly dataset: string;
    readonly id: string;
    readonly names: string[];
    readonly startsWith?: string;
}
export function getColumnsOutput(args: GetColumnsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetColumnsResult> {
    return pulumi.output(args).apply((a: any) => getColumns(a, opts))
}

/**
 * A collection of arguments for invoking getColumns.
 */
export interface GetColumnsOutputArgs {
    dataset: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    startsWith?: pulumi.Input<string>;
}
