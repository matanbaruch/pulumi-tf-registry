// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getColumn(args: GetColumnArgs, opts?: pulumi.InvokeOptions): Promise<GetColumnResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("honeycombio:index/getColumn:getColumn", {
        "dataset": args.dataset,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getColumn.
 */
export interface GetColumnArgs {
    dataset: string;
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getColumn.
 */
export interface GetColumnResult {
    readonly createdAt: string;
    readonly dataset: string;
    readonly description: string;
    readonly hidden: boolean;
    readonly id: string;
    readonly lastWrittenAt: string;
    readonly name: string;
    readonly type: string;
    readonly updatedAt: string;
}
export function getColumnOutput(args: GetColumnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetColumnResult> {
    return pulumi.output(args).apply((a: any) => getColumn(a, opts))
}

/**
 * A collection of arguments for invoking getColumn.
 */
export interface GetColumnOutputArgs {
    dataset: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
