// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PagerdutyRecipient extends pulumi.CustomResource {
    /**
     * Get an existing PagerdutyRecipient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PagerdutyRecipientState, opts?: pulumi.CustomResourceOptions): PagerdutyRecipient {
        return new PagerdutyRecipient(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'honeycombio:index/pagerdutyRecipient:PagerdutyRecipient';

    /**
     * Returns true if the given object is an instance of PagerdutyRecipient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PagerdutyRecipient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PagerdutyRecipient.__pulumiType;
    }

    /**
     * The key of the PagerDuty Integration to send the notification to
     */
    public readonly integrationKey!: pulumi.Output<string>;
    /**
     * The name of the PagerDuty Integration to send the notification to
     */
    public readonly integrationName!: pulumi.Output<string>;

    /**
     * Create a PagerdutyRecipient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PagerdutyRecipientArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PagerdutyRecipientArgs | PagerdutyRecipientState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PagerdutyRecipientState | undefined;
            resourceInputs["integrationKey"] = state ? state.integrationKey : undefined;
            resourceInputs["integrationName"] = state ? state.integrationName : undefined;
        } else {
            const args = argsOrState as PagerdutyRecipientArgs | undefined;
            if ((!args || args.integrationKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationKey'");
            }
            if ((!args || args.integrationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationName'");
            }
            resourceInputs["integrationKey"] = args?.integrationKey ? pulumi.secret(args.integrationKey) : undefined;
            resourceInputs["integrationName"] = args ? args.integrationName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["integrationKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PagerdutyRecipient.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PagerdutyRecipient resources.
 */
export interface PagerdutyRecipientState {
    /**
     * The key of the PagerDuty Integration to send the notification to
     */
    integrationKey?: pulumi.Input<string>;
    /**
     * The name of the PagerDuty Integration to send the notification to
     */
    integrationName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PagerdutyRecipient resource.
 */
export interface PagerdutyRecipientArgs {
    /**
     * The key of the PagerDuty Integration to send the notification to
     */
    integrationKey: pulumi.Input<string>;
    /**
     * The name of the PagerDuty Integration to send the notification to
     */
    integrationName: pulumi.Input<string>;
}
