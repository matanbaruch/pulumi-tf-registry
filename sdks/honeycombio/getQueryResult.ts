// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getQueryResult(args: GetQueryResultArgs, opts?: pulumi.InvokeOptions): Promise<GetQueryResultResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("honeycombio:index/getQueryResult:getQueryResult", {
        "dataset": args.dataset,
        "id": args.id,
        "queryJson": args.queryJson,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQueryResult.
 */
export interface GetQueryResultArgs {
    dataset: string;
    id?: string;
    queryJson: string;
}

/**
 * A collection of values returned by getQueryResult.
 */
export interface GetQueryResultResult {
    readonly dataset: string;
    readonly graphImageUrl: string;
    readonly id: string;
    readonly queryId: string;
    readonly queryJson: string;
    readonly queryUrl: string;
    readonly results: {[key: string]: string}[];
}
export function getQueryResultOutput(args: GetQueryResultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueryResultResult> {
    return pulumi.output(args).apply((a: any) => getQueryResult(a, opts))
}

/**
 * A collection of arguments for invoking getQueryResult.
 */
export interface GetQueryResultOutputArgs {
    dataset: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    queryJson: pulumi.Input<string>;
}
