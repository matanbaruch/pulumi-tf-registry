// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUserLicense(args: GetUserLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetUserLicenseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("salesforce:index/getUserLicense:getUserLicense", {
        "licenseDefinitionKey": args.licenseDefinitionKey,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUserLicense.
 */
export interface GetUserLicenseArgs {
    licenseDefinitionKey: string;
}

/**
 * A collection of values returned by getUserLicense.
 */
export interface GetUserLicenseResult {
    readonly id: string;
    readonly licenseDefinitionKey: string;
}
export function getUserLicenseOutput(args: GetUserLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserLicenseResult> {
    return pulumi.output(args).apply((a: any) => getUserLicense(a, opts))
}

/**
 * A collection of arguments for invoking getUserLicense.
 */
export interface GetUserLicenseOutputArgs {
    licenseDefinitionKey: pulumi.Input<string>;
}
