// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the salesforce package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'salesforce';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * API version of the salesforce org in the format in the format: MAJOR.MINOR (please omit any leading 'v'). The provider
     * requires at least version 53.0. Can be specified with the environment variable SALESFORCE_API_VERSION.
     */
    public readonly apiVersion!: pulumi.Output<string | undefined>;
    /**
     * Client ID of the connected app. Corresponds to Consumer Key in the user interface. Can be specified with the environment
     * variable SALESFORCE_CLIENT_ID.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * Directs the authentication request, defaults to the production endpoint https://login.salesforce.com, should be set to
     * https://test.salesforce.com for sandbox organizations. Can be specified with the environment variable
     * SALESFORCE_LOGIN_URL.
     */
    public readonly loginUrl!: pulumi.Output<string | undefined>;
    /**
     * Private Key associated to the public certificate that was uploaded to the connected app. This may point to a file
     * location or be set directly. This should not be confused with the Consumer Secret in the user interface. Can be
     * specified with the environment variable SALESFORCE_PRIVATE_KEY.
     */
    public readonly privateKey!: pulumi.Output<string | undefined>;
    /**
     * Salesforce Username of a System Administrator like user for the provider to authenticate as. Can be specified with the
     * environment variable SALESFORCE_USERNAME.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["apiVersion"] = args ? args.apiVersion : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["loginUrl"] = args ? args.loginUrl : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * API version of the salesforce org in the format in the format: MAJOR.MINOR (please omit any leading 'v'). The provider
     * requires at least version 53.0. Can be specified with the environment variable SALESFORCE_API_VERSION.
     */
    apiVersion?: pulumi.Input<string>;
    /**
     * Client ID of the connected app. Corresponds to Consumer Key in the user interface. Can be specified with the environment
     * variable SALESFORCE_CLIENT_ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Directs the authentication request, defaults to the production endpoint https://login.salesforce.com, should be set to
     * https://test.salesforce.com for sandbox organizations. Can be specified with the environment variable
     * SALESFORCE_LOGIN_URL.
     */
    loginUrl?: pulumi.Input<string>;
    /**
     * Private Key associated to the public certificate that was uploaded to the connected app. This may point to a file
     * location or be set directly. This should not be confused with the Consumer Secret in the user interface. Can be
     * specified with the environment variable SALESFORCE_PRIVATE_KEY.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Salesforce Username of a System Administrator like user for the provider to authenticate as. Can be specified with the
     * environment variable SALESFORCE_USERNAME.
     */
    username?: pulumi.Input<string>;
}
