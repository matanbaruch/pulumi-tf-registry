// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getJob(args: GetJobArgs, opts?: pulumi.InvokeOptions): Promise<GetJobResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nomad:index/getJob:getJob", {
        "id": args.id,
        "jobId": args.jobId,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJob.
 */
export interface GetJobArgs {
    id?: string;
    jobId: string;
    namespace?: string;
}

/**
 * A collection of values returned by getJob.
 */
export interface GetJobResult {
    readonly allAtOnce: boolean;
    readonly constraints: outputs.GetJobConstraint[];
    readonly createIndex: number;
    readonly datacenters: string[];
    readonly id: string;
    readonly jobId: string;
    readonly jobModifyIndex: number;
    readonly modifyIndex: number;
    readonly name: string;
    readonly namespace?: string;
    readonly parentId: string;
    readonly periodicConfigs: outputs.GetJobPeriodicConfig[];
    readonly priority: number;
    readonly region: string;
    readonly stable: boolean;
    readonly status: string;
    readonly statusDescription: string;
    readonly stop: boolean;
    readonly submitTime: number;
    readonly taskGroups: outputs.GetJobTaskGroup[];
    readonly type: string;
    readonly version: number;
}
export function getJobOutput(args: GetJobOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobResult> {
    return pulumi.output(args).apply((a: any) => getJob(a, opts))
}

/**
 * A collection of arguments for invoking getJob.
 */
export interface GetJobOutputArgs {
    id?: pulumi.Input<string>;
    jobId: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
