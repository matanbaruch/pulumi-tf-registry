// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPlugins(args?: GetPluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetPluginsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nomad:index/getPlugins:getPlugins", {
        "id": args.id,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPlugins.
 */
export interface GetPluginsArgs {
    id?: string;
    type?: string;
}

/**
 * A collection of values returned by getPlugins.
 */
export interface GetPluginsResult {
    readonly id: string;
    readonly plugins: {[key: string]: string}[];
    readonly type?: string;
}
export function getPluginsOutput(args?: GetPluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPluginsResult> {
    return pulumi.output(args).apply((a: any) => getPlugins(a, opts))
}

/**
 * A collection of arguments for invoking getPlugins.
 */
export interface GetPluginsOutputArgs {
    id?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
