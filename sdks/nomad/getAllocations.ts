// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAllocations(args?: GetAllocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetAllocationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nomad:index/getAllocations:getAllocations", {
        "filter": args.filter,
        "id": args.id,
        "namespace": args.namespace,
        "prefix": args.prefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAllocations.
 */
export interface GetAllocationsArgs {
    filter?: string;
    id?: string;
    namespace?: string;
    prefix?: string;
}

/**
 * A collection of values returned by getAllocations.
 */
export interface GetAllocationsResult {
    readonly allocations: outputs.GetAllocationsAllocation[];
    readonly filter?: string;
    readonly id: string;
    readonly namespace?: string;
    readonly prefix?: string;
}
export function getAllocationsOutput(args?: GetAllocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAllocationsResult> {
    return pulumi.output(args).apply((a: any) => getAllocations(a, opts))
}

/**
 * A collection of arguments for invoking getAllocations.
 */
export interface GetAllocationsOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
}
