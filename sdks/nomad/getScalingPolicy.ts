// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getScalingPolicy(args: GetScalingPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetScalingPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nomad:index/getScalingPolicy:getScalingPolicy", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScalingPolicy.
 */
export interface GetScalingPolicyArgs {
    id: string;
}

/**
 * A collection of values returned by getScalingPolicy.
 */
export interface GetScalingPolicyResult {
    readonly enabled: boolean;
    readonly id: string;
    readonly max: number;
    readonly min: number;
    readonly policy: string;
    readonly target: {[key: string]: string};
    readonly type: string;
}
export function getScalingPolicyOutput(args: GetScalingPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScalingPolicyResult> {
    return pulumi.output(args).apply((a: any) => getScalingPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getScalingPolicy.
 */
export interface GetScalingPolicyOutputArgs {
    id: pulumi.Input<string>;
}
