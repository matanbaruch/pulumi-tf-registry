// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpacePeeringInfo(args: GetSpacePeeringInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetSpacePeeringInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("heroku:index/getSpacePeeringInfo:getSpacePeeringInfo", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpacePeeringInfo.
 */
export interface GetSpacePeeringInfoArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSpacePeeringInfo.
 */
export interface GetSpacePeeringInfoResult {
    readonly awsAccountId: string;
    readonly awsRegion: string;
    readonly dynoCidrBlocks: string[];
    readonly id: string;
    readonly name: string;
    readonly unavailableCidrBlocks: string[];
    readonly vpcCidr: string;
    readonly vpcId: string;
}
export function getSpacePeeringInfoOutput(args: GetSpacePeeringInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpacePeeringInfoResult> {
    return pulumi.output(args).apply((a: any) => getSpacePeeringInfo(a, opts))
}

/**
 * A collection of arguments for invoking getSpacePeeringInfo.
 */
export interface GetSpacePeeringInfoOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
