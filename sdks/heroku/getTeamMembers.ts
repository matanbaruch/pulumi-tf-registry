// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTeamMembers(args: GetTeamMembersArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamMembersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("heroku:index/getTeamMembers:getTeamMembers", {
        "id": args.id,
        "roles": args.roles,
        "team": args.team,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTeamMembers.
 */
export interface GetTeamMembersArgs {
    id?: string;
    roles: string[];
    team: string;
}

/**
 * A collection of values returned by getTeamMembers.
 */
export interface GetTeamMembersResult {
    readonly id: string;
    readonly members: outputs.GetTeamMembersMember[];
    readonly roles: string[];
    readonly team: string;
}
export function getTeamMembersOutput(args: GetTeamMembersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamMembersResult> {
    return pulumi.output(args).apply((a: any) => getTeamMembers(a, opts))
}

/**
 * A collection of arguments for invoking getTeamMembers.
 */
export interface GetTeamMembersOutputArgs {
    id?: pulumi.Input<string>;
    roles: pulumi.Input<pulumi.Input<string>[]>;
    team: pulumi.Input<string>;
}
