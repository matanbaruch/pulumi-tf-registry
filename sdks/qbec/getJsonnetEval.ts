// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getJsonnetEval(args?: GetJsonnetEvalArgs, opts?: pulumi.InvokeOptions): Promise<GetJsonnetEvalResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("qbec:index/getJsonnetEval:getJsonnetEval", {
        "code": args.code,
        "dataSources": args.dataSources,
        "extCodeVars": args.extCodeVars,
        "extStrVars": args.extStrVars,
        "file": args.file,
        "id": args.id,
        "libPaths": args.libPaths,
        "tlaCodeVars": args.tlaCodeVars,
        "tlaStrVars": args.tlaStrVars,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJsonnetEval.
 */
export interface GetJsonnetEvalArgs {
    code?: string;
    dataSources?: string[];
    extCodeVars?: {[key: string]: string};
    extStrVars?: {[key: string]: string};
    file?: string;
    id?: string;
    libPaths?: string[];
    tlaCodeVars?: {[key: string]: string};
    tlaStrVars?: {[key: string]: string};
}

/**
 * A collection of values returned by getJsonnetEval.
 */
export interface GetJsonnetEvalResult {
    readonly code?: string;
    readonly dataSources?: string[];
    readonly extCodeVars?: {[key: string]: string};
    readonly extStrVars?: {[key: string]: string};
    readonly file?: string;
    readonly id: string;
    readonly libPaths?: string[];
    readonly rendered: string;
    readonly tlaCodeVars?: {[key: string]: string};
    readonly tlaStrVars?: {[key: string]: string};
}
export function getJsonnetEvalOutput(args?: GetJsonnetEvalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJsonnetEvalResult> {
    return pulumi.output(args).apply((a: any) => getJsonnetEval(a, opts))
}

/**
 * A collection of arguments for invoking getJsonnetEval.
 */
export interface GetJsonnetEvalOutputArgs {
    code?: pulumi.Input<string>;
    dataSources?: pulumi.Input<pulumi.Input<string>[]>;
    extCodeVars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    extStrVars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    file?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    libPaths?: pulumi.Input<pulumi.Input<string>[]>;
    tlaCodeVars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tlaStrVars?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
