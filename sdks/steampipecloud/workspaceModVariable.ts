// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WorkspaceModVariable extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceModVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceModVariableState, opts?: pulumi.CustomResourceOptions): WorkspaceModVariable {
        return new WorkspaceModVariable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'steampipecloud:index/workspaceModVariable:WorkspaceModVariable';

    /**
     * Returns true if the given object is an instance of WorkspaceModVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceModVariable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceModVariable.__pulumiType;
    }

    public readonly createdAt!: pulumi.Output<string>;
    public readonly createdBy!: pulumi.Output<string>;
    public readonly defaultValue!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly modAlias!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly organization!: pulumi.Output<string>;
    public readonly settingValue!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly updatedAt!: pulumi.Output<string>;
    public readonly updatedBy!: pulumi.Output<string>;
    public readonly value!: pulumi.Output<string>;
    public readonly versionId!: pulumi.Output<number>;
    public readonly workspaceHandle!: pulumi.Output<string>;
    public /*out*/ readonly workspaceModVariableId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceModVariable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceModVariableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceModVariableArgs | WorkspaceModVariableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceModVariableState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["defaultValue"] = state ? state.defaultValue : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["modAlias"] = state ? state.modAlias : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["settingValue"] = state ? state.settingValue : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["workspaceHandle"] = state ? state.workspaceHandle : undefined;
            resourceInputs["workspaceModVariableId"] = state ? state.workspaceModVariableId : undefined;
        } else {
            const args = argsOrState as WorkspaceModVariableArgs | undefined;
            if ((!args || args.modAlias === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modAlias'");
            }
            if ((!args || args.workspaceHandle === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceHandle'");
            }
            resourceInputs["createdAt"] = args ? args.createdAt : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["defaultValue"] = args ? args.defaultValue : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["modAlias"] = args ? args.modAlias : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["settingValue"] = args ? args.settingValue : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updatedAt"] = args ? args.updatedAt : undefined;
            resourceInputs["updatedBy"] = args ? args.updatedBy : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["versionId"] = args ? args.versionId : undefined;
            resourceInputs["workspaceHandle"] = args ? args.workspaceHandle : undefined;
            resourceInputs["workspaceModVariableId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceModVariable.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceModVariable resources.
 */
export interface WorkspaceModVariableState {
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    modAlias?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    settingValue?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    versionId?: pulumi.Input<number>;
    workspaceHandle?: pulumi.Input<string>;
    workspaceModVariableId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceModVariable resource.
 */
export interface WorkspaceModVariableArgs {
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    modAlias: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    settingValue?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    versionId?: pulumi.Input<number>;
    workspaceHandle: pulumi.Input<string>;
}
