// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OrganizationMember extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationMember resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationMemberState, opts?: pulumi.CustomResourceOptions): OrganizationMember {
        return new OrganizationMember(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'steampipecloud:index/organizationMember:OrganizationMember';

    /**
     * Returns true if the given object is an instance of OrganizationMember.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationMember {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationMember.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly createdBy!: pulumi.Output<string>;
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    public readonly email!: pulumi.Output<string>;
    public readonly organization!: pulumi.Output<string>;
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    public /*out*/ readonly organizationMemberId!: pulumi.Output<string>;
    public readonly role!: pulumi.Output<string>;
    public /*out*/ readonly scope!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    public readonly updatedBy!: pulumi.Output<string>;
    public readonly userHandle!: pulumi.Output<string>;
    public /*out*/ readonly userId!: pulumi.Output<string>;
    public /*out*/ readonly versionId!: pulumi.Output<number>;

    /**
     * Create a OrganizationMember resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationMemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationMemberArgs | OrganizationMemberState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationMemberState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["organizationMemberId"] = state ? state.organizationMemberId : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["userHandle"] = state ? state.userHandle : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as OrganizationMemberArgs | undefined;
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["updatedBy"] = args ? args.updatedBy : undefined;
            resourceInputs["userHandle"] = args ? args.userHandle : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["organizationMemberId"] = undefined /*out*/;
            resourceInputs["scope"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationMember.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OrganizationMember resources.
 */
export interface OrganizationMemberState {
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    organization?: pulumi.Input<string>;
    organizationId?: pulumi.Input<string>;
    organizationMemberId?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    userHandle?: pulumi.Input<string>;
    userId?: pulumi.Input<string>;
    versionId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a OrganizationMember resource.
 */
export interface OrganizationMemberArgs {
    createdBy?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    role: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    userHandle?: pulumi.Input<string>;
}
