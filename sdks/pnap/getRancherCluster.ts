// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRancherCluster(args?: GetRancherClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetRancherClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pnap:index/getRancherCluster:getRancherCluster", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRancherCluster.
 */
export interface GetRancherClusterArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getRancherCluster.
 */
export interface GetRancherClusterResult {
    readonly description: string;
    readonly id: string;
    readonly initialClusterVersion: string;
    readonly location: string;
    readonly metadatas: outputs.GetRancherClusterMetadata[];
    readonly name: string;
    readonly nodePools: outputs.GetRancherClusterNodePool[];
    readonly statusDescription: string;
}
export function getRancherClusterOutput(args?: GetRancherClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRancherClusterResult> {
    return pulumi.output(args).apply((a: any) => getRancherCluster(a, opts))
}

/**
 * A collection of arguments for invoking getRancherCluster.
 */
export interface GetRancherClusterOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
