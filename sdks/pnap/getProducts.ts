// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProducts(args?: GetProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetProductsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pnap:index/getProducts:getProducts", {
        "id": args.id,
        "location": args.location,
        "productCategory": args.productCategory,
        "productCode": args.productCode,
        "skuCode": args.skuCode,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProducts.
 */
export interface GetProductsArgs {
    id?: string;
    location?: string;
    productCategory?: string;
    productCode?: string;
    skuCode?: string;
}

/**
 * A collection of values returned by getProducts.
 */
export interface GetProductsResult {
    readonly id: string;
    readonly location?: string;
    readonly productCategory?: string;
    readonly productCode?: string;
    readonly products: outputs.GetProductsProduct[];
    readonly skuCode?: string;
}
export function getProductsOutput(args?: GetProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductsResult> {
    return pulumi.output(args).apply((a: any) => getProducts(a, opts))
}

/**
 * A collection of arguments for invoking getProducts.
 */
export interface GetProductsOutputArgs {
    id?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    productCategory?: pulumi.Input<string>;
    productCode?: pulumi.Input<string>;
    skuCode?: pulumi.Input<string>;
}
