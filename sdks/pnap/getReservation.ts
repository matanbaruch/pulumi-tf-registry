// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getReservation(args?: GetReservationArgs, opts?: pulumi.InvokeOptions): Promise<GetReservationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pnap:index/getReservation:getReservation", {
        "id": args.id,
        "sku": args.sku,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReservation.
 */
export interface GetReservationArgs {
    id?: string;
    sku?: string;
}

/**
 * A collection of values returned by getReservation.
 */
export interface GetReservationResult {
    readonly assignedResourceId: string;
    readonly autoRenew: boolean;
    readonly endDateTime: string;
    readonly id: string;
    readonly initialInvoiceModel: string;
    readonly lastRenewalDateTime: string;
    readonly location: string;
    readonly nextBillingDate: string;
    readonly nextRenewalDateTime: string;
    readonly price: number;
    readonly priceUnit: string;
    readonly productCategory: string;
    readonly productCode: string;
    readonly reservationModel: string;
    readonly sku: string;
    readonly startDateTime: string;
}
export function getReservationOutput(args?: GetReservationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservationResult> {
    return pulumi.output(args).apply((a: any) => getReservation(a, opts))
}

/**
 * A collection of arguments for invoking getReservation.
 */
export interface GetReservationOutputArgs {
    id?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
}
