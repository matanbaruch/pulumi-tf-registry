// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class PrivateNetwork extends pulumi.CustomResource {
    /**
     * Get an existing PrivateNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateNetworkState, opts?: pulumi.CustomResourceOptions): PrivateNetwork {
        return new PrivateNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pnap:index/privateNetwork:PrivateNetwork';

    /**
     * Returns true if the given object is an instance of PrivateNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateNetwork.__pulumiType;
    }

    public readonly cidr!: pulumi.Output<string>;
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly force!: pulumi.Output<boolean | undefined>;
    public readonly location!: pulumi.Output<string>;
    public readonly locationDefault!: pulumi.Output<boolean>;
    public /*out*/ readonly memberships!: pulumi.Output<outputs.PrivateNetworkMembership[]>;
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly servers!: pulumi.Output<outputs.PrivateNetworkServer[]>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.PrivateNetworkTimeouts | undefined>;
    public /*out*/ readonly type!: pulumi.Output<string>;
    public readonly vlanId!: pulumi.Output<number>;

    /**
     * Create a PrivateNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateNetworkArgs | PrivateNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateNetworkState | undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["force"] = state ? state.force : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["locationDefault"] = state ? state.locationDefault : undefined;
            resourceInputs["memberships"] = state ? state.memberships : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as PrivateNetworkArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["force"] = args ? args.force : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["locationDefault"] = args ? args.locationDefault : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["memberships"] = undefined /*out*/;
            resourceInputs["servers"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivateNetwork resources.
 */
export interface PrivateNetworkState {
    cidr?: pulumi.Input<string>;
    createdOn?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    force?: pulumi.Input<boolean>;
    location?: pulumi.Input<string>;
    locationDefault?: pulumi.Input<boolean>;
    memberships?: pulumi.Input<pulumi.Input<inputs.PrivateNetworkMembership>[]>;
    name?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.PrivateNetworkServer>[]>;
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PrivateNetworkTimeouts>;
    type?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PrivateNetwork resource.
 */
export interface PrivateNetworkArgs {
    cidr?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    force?: pulumi.Input<boolean>;
    location: pulumi.Input<string>;
    locationDefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.PrivateNetworkTimeouts>;
    vlanId?: pulumi.Input<number>;
}
