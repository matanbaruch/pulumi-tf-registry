// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContactGroup(args: GetContactGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetContactGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("statuscake:index/getContactGroup:getContactGroup", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContactGroup.
 */
export interface GetContactGroupArgs {
    id: string;
}

/**
 * A collection of values returned by getContactGroup.
 */
export interface GetContactGroupResult {
    readonly emailAddresses: string[];
    readonly id: string;
    readonly integrations: string[];
    readonly mobileNumbers: string[];
    readonly name: string;
    readonly pingUrl: string;
}
export function getContactGroupOutput(args: GetContactGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContactGroupResult> {
    return pulumi.output(args).apply((a: any) => getContactGroup(a, opts))
}

/**
 * A collection of arguments for invoking getContactGroup.
 */
export interface GetContactGroupOutputArgs {
    id: pulumi.Input<string>;
}
