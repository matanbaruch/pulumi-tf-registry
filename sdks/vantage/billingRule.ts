// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BillingRule extends pulumi.CustomResource {
    /**
     * Get an existing BillingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BillingRuleState, opts?: pulumi.CustomResourceOptions): BillingRule {
        return new BillingRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vantage:index/billingRule:BillingRule';

    /**
     * Returns true if the given object is an instance of BillingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BillingRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BillingRule.__pulumiType;
    }

    /**
     * The credit amount for the Billing Rule. Example value: 300
     */
    public readonly amount!: pulumi.Output<number | undefined>;
    /**
     * The category of the Billing Rule.
     */
    public readonly category!: pulumi.Output<string | undefined>;
    /**
     * The charge type of the Billing Rule.
     */
    public readonly chargeType!: pulumi.Output<string | undefined>;
    /**
     * The date and time, in UTC, the Billing Rule was created. ISO 8601 Formatted.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The token of the User who created the Billing Rule.
     */
    public /*out*/ readonly createdByToken!: pulumi.Output<string>;
    /**
     * The percentage of the cost shown. Example value: 75.0
     */
    public readonly percentage!: pulumi.Output<number | undefined>;
    /**
     * The service of the Billing Rule.
     */
    public readonly service!: pulumi.Output<string | undefined>;
    /**
     * The start period of the Billing Rule.
     */
    public readonly startPeriod!: pulumi.Output<string | undefined>;
    /**
     * The subcategory of the Billing Rule.
     */
    public readonly subCategory!: pulumi.Output<string | undefined>;
    /**
     * The title of the Billing Rule.
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * The token of the billing rule
     */
    public /*out*/ readonly token!: pulumi.Output<string>;
    /**
     * The type of the Billing Rule. Note: the values are case insensitive.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a BillingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BillingRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BillingRuleArgs | BillingRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BillingRuleState | undefined;
            resourceInputs["amount"] = state ? state.amount : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdByToken"] = state ? state.createdByToken : undefined;
            resourceInputs["percentage"] = state ? state.percentage : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["startPeriod"] = state ? state.startPeriod : undefined;
            resourceInputs["subCategory"] = state ? state.subCategory : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as BillingRuleArgs | undefined;
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["amount"] = args ? args.amount : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["percentage"] = args ? args.percentage : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["startPeriod"] = args ? args.startPeriod : undefined;
            resourceInputs["subCategory"] = args ? args.subCategory : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdByToken"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BillingRule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BillingRule resources.
 */
export interface BillingRuleState {
    /**
     * The credit amount for the Billing Rule. Example value: 300
     */
    amount?: pulumi.Input<number>;
    /**
     * The category of the Billing Rule.
     */
    category?: pulumi.Input<string>;
    /**
     * The charge type of the Billing Rule.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The date and time, in UTC, the Billing Rule was created. ISO 8601 Formatted.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The token of the User who created the Billing Rule.
     */
    createdByToken?: pulumi.Input<string>;
    /**
     * The percentage of the cost shown. Example value: 75.0
     */
    percentage?: pulumi.Input<number>;
    /**
     * The service of the Billing Rule.
     */
    service?: pulumi.Input<string>;
    /**
     * The start period of the Billing Rule.
     */
    startPeriod?: pulumi.Input<string>;
    /**
     * The subcategory of the Billing Rule.
     */
    subCategory?: pulumi.Input<string>;
    /**
     * The title of the Billing Rule.
     */
    title?: pulumi.Input<string>;
    /**
     * The token of the billing rule
     */
    token?: pulumi.Input<string>;
    /**
     * The type of the Billing Rule. Note: the values are case insensitive.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BillingRule resource.
 */
export interface BillingRuleArgs {
    /**
     * The credit amount for the Billing Rule. Example value: 300
     */
    amount?: pulumi.Input<number>;
    /**
     * The category of the Billing Rule.
     */
    category?: pulumi.Input<string>;
    /**
     * The charge type of the Billing Rule.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * The percentage of the cost shown. Example value: 75.0
     */
    percentage?: pulumi.Input<number>;
    /**
     * The service of the Billing Rule.
     */
    service?: pulumi.Input<string>;
    /**
     * The start period of the Billing Rule.
     */
    startPeriod?: pulumi.Input<string>;
    /**
     * The subcategory of the Billing Rule.
     */
    subCategory?: pulumi.Input<string>;
    /**
     * The title of the Billing Rule.
     */
    title: pulumi.Input<string>;
    /**
     * The type of the Billing Rule. Note: the values are case insensitive.
     */
    type: pulumi.Input<string>;
}
