// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Budget extends pulumi.CustomResource {
    /**
     * Get an existing Budget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BudgetState, opts?: pulumi.CustomResourceOptions): Budget {
        return new Budget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vantage:index/budget:Budget';

    /**
     * Returns true if the given object is an instance of Budget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Budget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Budget.__pulumiType;
    }

    /**
     * The tokens of the BudgetAlerts associated with the Budget.
     */
    public /*out*/ readonly budgetAlertTokens!: pulumi.Output<string[]>;
    /**
     * The CostReport token.
     */
    public readonly costReportToken!: pulumi.Output<string>;
    /**
     * The date and time, in UTC, the Budget was created. ISO 8601 Formatted.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The name of the Budget.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The historical performance of the Budget.
     */
    public /*out*/ readonly performances!: pulumi.Output<outputs.BudgetPerformance[]>;
    /**
     * The periods for the Budget. The start_at and end_at must be iso8601 formatted e.g. YYYY-MM-DD.
     */
    public readonly periods!: pulumi.Output<outputs.BudgetPeriod[]>;
    /**
     * The token of the budget
     */
    public /*out*/ readonly token!: pulumi.Output<string>;
    /**
     * The token for the User who created this Budget.
     */
    public /*out*/ readonly userToken!: pulumi.Output<string>;
    /**
     * The token of the Workspace to add the Budget to.
     */
    public readonly workspaceToken!: pulumi.Output<string>;

    /**
     * Create a Budget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BudgetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BudgetArgs | BudgetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BudgetState | undefined;
            resourceInputs["budgetAlertTokens"] = state ? state.budgetAlertTokens : undefined;
            resourceInputs["costReportToken"] = state ? state.costReportToken : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["performances"] = state ? state.performances : undefined;
            resourceInputs["periods"] = state ? state.periods : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["userToken"] = state ? state.userToken : undefined;
            resourceInputs["workspaceToken"] = state ? state.workspaceToken : undefined;
        } else {
            const args = argsOrState as BudgetArgs | undefined;
            resourceInputs["costReportToken"] = args ? args.costReportToken : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["periods"] = args ? args.periods : undefined;
            resourceInputs["workspaceToken"] = args ? args.workspaceToken : undefined;
            resourceInputs["budgetAlertTokens"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["performances"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
            resourceInputs["userToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Budget.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Budget resources.
 */
export interface BudgetState {
    /**
     * The tokens of the BudgetAlerts associated with the Budget.
     */
    budgetAlertTokens?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The CostReport token.
     */
    costReportToken?: pulumi.Input<string>;
    /**
     * The date and time, in UTC, the Budget was created. ISO 8601 Formatted.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The name of the Budget.
     */
    name?: pulumi.Input<string>;
    /**
     * The historical performance of the Budget.
     */
    performances?: pulumi.Input<pulumi.Input<inputs.BudgetPerformance>[]>;
    /**
     * The periods for the Budget. The start_at and end_at must be iso8601 formatted e.g. YYYY-MM-DD.
     */
    periods?: pulumi.Input<pulumi.Input<inputs.BudgetPeriod>[]>;
    /**
     * The token of the budget
     */
    token?: pulumi.Input<string>;
    /**
     * The token for the User who created this Budget.
     */
    userToken?: pulumi.Input<string>;
    /**
     * The token of the Workspace to add the Budget to.
     */
    workspaceToken?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Budget resource.
 */
export interface BudgetArgs {
    /**
     * The CostReport token.
     */
    costReportToken?: pulumi.Input<string>;
    /**
     * The name of the Budget.
     */
    name?: pulumi.Input<string>;
    /**
     * The periods for the Budget. The start_at and end_at must be iso8601 formatted e.g. YYYY-MM-DD.
     */
    periods?: pulumi.Input<pulumi.Input<inputs.BudgetPeriod>[]>;
    /**
     * The token of the Workspace to add the Budget to.
     */
    workspaceToken?: pulumi.Input<string>;
}
