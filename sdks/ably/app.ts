// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppState, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ably:index/app:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    /**
     * The ID of your Ably account.
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * The Apple Push Notification service certificate.
     */
    public readonly apnsCertificate!: pulumi.Output<string | undefined>;
    /**
     * The Apple Push Notification service private key.
     */
    public readonly apnsPrivateKey!: pulumi.Output<string | undefined>;
    /**
     * Use the Apple Push Notification service sandbox endpoint.
     */
    public readonly apnsUseSandboxEndpoint!: pulumi.Output<boolean>;
    /**
     * The Firebase Cloud Messaging key.
     */
    public readonly fcmKey!: pulumi.Output<string | undefined>;
    /**
     * The application name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The application status. Disabled applications will not accept new connections and will return an error to all clients.
     * When creating a new application, ensure that its status is set to enabled.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Enforce TLS for all connections. This setting overrides any channel setting.
     */
    public readonly tlsOnly!: pulumi.Output<boolean | undefined>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppArgs | AppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["apnsCertificate"] = state ? state.apnsCertificate : undefined;
            resourceInputs["apnsPrivateKey"] = state ? state.apnsPrivateKey : undefined;
            resourceInputs["apnsUseSandboxEndpoint"] = state ? state.apnsUseSandboxEndpoint : undefined;
            resourceInputs["fcmKey"] = state ? state.fcmKey : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tlsOnly"] = state ? state.tlsOnly : undefined;
        } else {
            const args = argsOrState as AppArgs | undefined;
            resourceInputs["apnsCertificate"] = args?.apnsCertificate ? pulumi.secret(args.apnsCertificate) : undefined;
            resourceInputs["apnsPrivateKey"] = args?.apnsPrivateKey ? pulumi.secret(args.apnsPrivateKey) : undefined;
            resourceInputs["apnsUseSandboxEndpoint"] = args ? args.apnsUseSandboxEndpoint : undefined;
            resourceInputs["fcmKey"] = args?.fcmKey ? pulumi.secret(args.fcmKey) : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tlsOnly"] = args ? args.tlsOnly : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apnsCertificate", "apnsPrivateKey", "fcmKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(App.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering App resources.
 */
export interface AppState {
    /**
     * The ID of your Ably account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The Apple Push Notification service certificate.
     */
    apnsCertificate?: pulumi.Input<string>;
    /**
     * The Apple Push Notification service private key.
     */
    apnsPrivateKey?: pulumi.Input<string>;
    /**
     * Use the Apple Push Notification service sandbox endpoint.
     */
    apnsUseSandboxEndpoint?: pulumi.Input<boolean>;
    /**
     * The Firebase Cloud Messaging key.
     */
    fcmKey?: pulumi.Input<string>;
    /**
     * The application name.
     */
    name?: pulumi.Input<string>;
    /**
     * The application status. Disabled applications will not accept new connections and will return an error to all clients.
     * When creating a new application, ensure that its status is set to enabled.
     */
    status?: pulumi.Input<string>;
    /**
     * Enforce TLS for all connections. This setting overrides any channel setting.
     */
    tlsOnly?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    /**
     * The Apple Push Notification service certificate.
     */
    apnsCertificate?: pulumi.Input<string>;
    /**
     * The Apple Push Notification service private key.
     */
    apnsPrivateKey?: pulumi.Input<string>;
    /**
     * Use the Apple Push Notification service sandbox endpoint.
     */
    apnsUseSandboxEndpoint?: pulumi.Input<boolean>;
    /**
     * The Firebase Cloud Messaging key.
     */
    fcmKey?: pulumi.Input<string>;
    /**
     * The application name.
     */
    name?: pulumi.Input<string>;
    /**
     * The application status. Disabled applications will not accept new connections and will return an error to all clients.
     * When creating a new application, ensure that its status is set to enabled.
     */
    status?: pulumi.Input<string>;
    /**
     * Enforce TLS for all connections. This setting overrides any channel setting.
     */
    tlsOnly?: pulumi.Input<boolean>;
}
