// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ApiKey extends pulumi.CustomResource {
    /**
     * Get an existing ApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiKeyState, opts?: pulumi.CustomResourceOptions): ApiKey {
        return new ApiKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ably:index/apiKey:ApiKey';

    /**
     * Returns true if the given object is an instance of ApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiKey.__pulumiType;
    }

    /**
     * The Ably application ID which this key is associated with.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The capabilities that this key has. More information on capabilities can be found in the [Ably
     * documentation](https://ably.com/docs/core-features/authentication#capabilities-explained)
     */
    public readonly capabilities!: pulumi.Output<{[key: string]: string[]}>;
    /**
     * Enforce TLS for all connections. This setting overrides any channel setting.
     */
    public /*out*/ readonly created!: pulumi.Output<number>;
    /**
     * The complete API key including API secret.
     */
    public /*out*/ readonly key!: pulumi.Output<string>;
    /**
     * Unix timestamp representing the date and time of the last modification of the key.
     */
    public /*out*/ readonly modified!: pulumi.Output<number>;
    /**
     * The name for your API key. This is a friendly name for your reference.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Allow tokens issued by this key to be revoked. More information on Token Revocation can be found in the [Ably
     * documentation](https://ably.com/docs/auth/revocation)
     */
    public readonly revocableTokens!: pulumi.Output<boolean>;
    /**
     * The status of the key. 0 is enabled, 1 is revoked.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;

    /**
     * Create a ApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiKeyArgs | ApiKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiKeyState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["capabilities"] = state ? state.capabilities : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["modified"] = state ? state.modified : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["revocableTokens"] = state ? state.revocableTokens : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ApiKeyArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.capabilities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capabilities'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["capabilities"] = args ? args.capabilities : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["revocableTokens"] = args ? args.revocableTokens : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["modified"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApiKey resources.
 */
export interface ApiKeyState {
    /**
     * The Ably application ID which this key is associated with.
     */
    appId?: pulumi.Input<string>;
    /**
     * The capabilities that this key has. More information on capabilities can be found in the [Ably
     * documentation](https://ably.com/docs/core-features/authentication#capabilities-explained)
     */
    capabilities?: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
    /**
     * Enforce TLS for all connections. This setting overrides any channel setting.
     */
    created?: pulumi.Input<number>;
    /**
     * The complete API key including API secret.
     */
    key?: pulumi.Input<string>;
    /**
     * Unix timestamp representing the date and time of the last modification of the key.
     */
    modified?: pulumi.Input<number>;
    /**
     * The name for your API key. This is a friendly name for your reference.
     */
    name?: pulumi.Input<string>;
    /**
     * Allow tokens issued by this key to be revoked. More information on Token Revocation can be found in the [Ably
     * documentation](https://ably.com/docs/auth/revocation)
     */
    revocableTokens?: pulumi.Input<boolean>;
    /**
     * The status of the key. 0 is enabled, 1 is revoked.
     */
    status?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ApiKey resource.
 */
export interface ApiKeyArgs {
    /**
     * The Ably application ID which this key is associated with.
     */
    appId: pulumi.Input<string>;
    /**
     * The capabilities that this key has. More information on capabilities can be found in the [Ably
     * documentation](https://ably.com/docs/core-features/authentication#capabilities-explained)
     */
    capabilities: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
    /**
     * The name for your API key. This is a friendly name for your reference.
     */
    name?: pulumi.Input<string>;
    /**
     * Allow tokens issued by this key to be revoked. More information on Token Revocation can be found in the [Ably
     * documentation](https://ably.com/docs/auth/revocation)
     */
    revocableTokens?: pulumi.Input<boolean>;
}
