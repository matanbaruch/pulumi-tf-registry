// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKibanaSecurityRole(args: GetKibanaSecurityRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetKibanaSecurityRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getKibanaSecurityRole:getKibanaSecurityRole", {
        "id": args.id,
        "metadata": args.metadata,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKibanaSecurityRole.
 */
export interface GetKibanaSecurityRoleArgs {
    id?: string;
    metadata?: string;
    name: string;
}

/**
 * A collection of values returned by getKibanaSecurityRole.
 */
export interface GetKibanaSecurityRoleResult {
    readonly elasticsearches: outputs.GetKibanaSecurityRoleElasticsearch[];
    readonly id: string;
    readonly kibanas: outputs.GetKibanaSecurityRoleKibana[];
    readonly metadata: string;
    readonly name: string;
}
export function getKibanaSecurityRoleOutput(args: GetKibanaSecurityRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKibanaSecurityRoleResult> {
    return pulumi.output(args).apply((a: any) => getKibanaSecurityRole(a, opts))
}

/**
 * A collection of arguments for invoking getKibanaSecurityRole.
 */
export interface GetKibanaSecurityRoleOutputArgs {
    id?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
