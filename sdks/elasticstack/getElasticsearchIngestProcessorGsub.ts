// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getElasticsearchIngestProcessorGsub(args: GetElasticsearchIngestProcessorGsubArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticsearchIngestProcessorGsubResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getElasticsearchIngestProcessorGsub:getElasticsearchIngestProcessorGsub", {
        "description": args.description,
        "field": args.field,
        "if": args.if,
        "ignoreFailure": args.ignoreFailure,
        "ignoreMissing": args.ignoreMissing,
        "onFailures": args.onFailures,
        "pattern": args.pattern,
        "replacement": args.replacement,
        "tag": args.tag,
        "targetField": args.targetField,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticsearchIngestProcessorGsub.
 */
export interface GetElasticsearchIngestProcessorGsubArgs {
    description?: string;
    field: string;
    if?: string;
    ignoreFailure?: boolean;
    ignoreMissing?: boolean;
    onFailures?: string[];
    pattern: string;
    replacement: string;
    tag?: string;
    targetField?: string;
}

/**
 * A collection of values returned by getElasticsearchIngestProcessorGsub.
 */
export interface GetElasticsearchIngestProcessorGsubResult {
    readonly description?: string;
    readonly field: string;
    readonly id: string;
    readonly if?: string;
    readonly ignoreFailure?: boolean;
    readonly ignoreMissing?: boolean;
    readonly json: string;
    readonly onFailures?: string[];
    readonly pattern: string;
    readonly replacement: string;
    readonly tag?: string;
    readonly targetField?: string;
}
export function getElasticsearchIngestProcessorGsubOutput(args: GetElasticsearchIngestProcessorGsubOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticsearchIngestProcessorGsubResult> {
    return pulumi.output(args).apply((a: any) => getElasticsearchIngestProcessorGsub(a, opts))
}

/**
 * A collection of arguments for invoking getElasticsearchIngestProcessorGsub.
 */
export interface GetElasticsearchIngestProcessorGsubOutputArgs {
    description?: pulumi.Input<string>;
    field: pulumi.Input<string>;
    if?: pulumi.Input<string>;
    ignoreFailure?: pulumi.Input<boolean>;
    ignoreMissing?: pulumi.Input<boolean>;
    onFailures?: pulumi.Input<pulumi.Input<string>[]>;
    pattern: pulumi.Input<string>;
    replacement: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    targetField?: pulumi.Input<string>;
}
