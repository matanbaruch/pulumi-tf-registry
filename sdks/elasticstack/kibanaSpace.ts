// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class KibanaSpace extends pulumi.CustomResource {
    /**
     * Get an existing KibanaSpace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KibanaSpaceState, opts?: pulumi.CustomResourceOptions): KibanaSpace {
        return new KibanaSpace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'elasticstack:index/kibanaSpace:KibanaSpace';

    /**
     * Returns true if the given object is an instance of KibanaSpace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KibanaSpace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KibanaSpace.__pulumiType;
    }

    /**
     * The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space
     * name.
     */
    public readonly color!: pulumi.Output<string>;
    /**
     * The description for the space.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The list of disabled features for the space. To get a list of available feature IDs, use the Features API
     * (https://www.elastic.co/guide/en/kibana/master/features-api-get.html).
     */
    public readonly disabledFeatures!: pulumi.Output<string[] | undefined>;
    /**
     * The data-URL encoded image to display in the space avatar.
     */
    public readonly imageUrl!: pulumi.Output<string | undefined>;
    /**
     * The initials shown in the space avatar. By default, the initials are automatically generated from the space name.
     * Initials must be 1 or 2 characters.
     */
    public readonly initials!: pulumi.Output<string>;
    /**
     * The display name for the space.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The space ID that is part of the Kibana URL when inside the space.
     */
    public readonly spaceId!: pulumi.Output<string>;

    /**
     * Create a KibanaSpace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KibanaSpaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KibanaSpaceArgs | KibanaSpaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KibanaSpaceState | undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disabledFeatures"] = state ? state.disabledFeatures : undefined;
            resourceInputs["imageUrl"] = state ? state.imageUrl : undefined;
            resourceInputs["initials"] = state ? state.initials : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
        } else {
            const args = argsOrState as KibanaSpaceArgs | undefined;
            if ((!args || args.spaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceId'");
            }
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disabledFeatures"] = args ? args.disabledFeatures : undefined;
            resourceInputs["imageUrl"] = args ? args.imageUrl : undefined;
            resourceInputs["initials"] = args ? args.initials : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KibanaSpace.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KibanaSpace resources.
 */
export interface KibanaSpaceState {
    /**
     * The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space
     * name.
     */
    color?: pulumi.Input<string>;
    /**
     * The description for the space.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of disabled features for the space. To get a list of available feature IDs, use the Features API
     * (https://www.elastic.co/guide/en/kibana/master/features-api-get.html).
     */
    disabledFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data-URL encoded image to display in the space avatar.
     */
    imageUrl?: pulumi.Input<string>;
    /**
     * The initials shown in the space avatar. By default, the initials are automatically generated from the space name.
     * Initials must be 1 or 2 characters.
     */
    initials?: pulumi.Input<string>;
    /**
     * The display name for the space.
     */
    name?: pulumi.Input<string>;
    /**
     * The space ID that is part of the Kibana URL when inside the space.
     */
    spaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KibanaSpace resource.
 */
export interface KibanaSpaceArgs {
    /**
     * The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space
     * name.
     */
    color?: pulumi.Input<string>;
    /**
     * The description for the space.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of disabled features for the space. To get a list of available feature IDs, use the Features API
     * (https://www.elastic.co/guide/en/kibana/master/features-api-get.html).
     */
    disabledFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The data-URL encoded image to display in the space avatar.
     */
    imageUrl?: pulumi.Input<string>;
    /**
     * The initials shown in the space avatar. By default, the initials are automatically generated from the space name.
     * Initials must be 1 or 2 characters.
     */
    initials?: pulumi.Input<string>;
    /**
     * The display name for the space.
     */
    name?: pulumi.Input<string>;
    /**
     * The space ID that is part of the Kibana URL when inside the space.
     */
    spaceId: pulumi.Input<string>;
}
