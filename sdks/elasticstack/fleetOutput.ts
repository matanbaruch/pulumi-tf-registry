// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FleetOutput extends pulumi.CustomResource {
    /**
     * Get an existing FleetOutput resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetOutputState, opts?: pulumi.CustomResourceOptions): FleetOutput {
        return new FleetOutput(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'elasticstack:index/fleetOutput:FleetOutput';

    /**
     * Returns true if the given object is an instance of FleetOutput.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FleetOutput {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetOutput.__pulumiType;
    }

    /**
     * Fingerprint of the Elasticsearch CA certificate.
     */
    public readonly caSha256!: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of trusted CA.
     */
    public readonly caTrustedFingerprint!: pulumi.Output<string | undefined>;
    /**
     * Advanced YAML configuration. YAML settings here will be added to the output section of each agent policy.
     */
    public readonly configYaml!: pulumi.Output<string | undefined>;
    /**
     * Make this output the default for agent integrations.
     */
    public readonly defaultIntegrations!: pulumi.Output<boolean | undefined>;
    /**
     * Make this output the default for agent monitoring.
     */
    public readonly defaultMonitoring!: pulumi.Output<boolean | undefined>;
    /**
     * A list of hosts.
     */
    public readonly hosts!: pulumi.Output<string[] | undefined>;
    /**
     * The name of the output.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Unique identifier of the output.
     */
    public readonly outputId!: pulumi.Output<string>;
    /**
     * SSL configuration.
     */
    public readonly ssl!: pulumi.Output<outputs.FleetOutputSsl | undefined>;
    /**
     * The output type.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a FleetOutput resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetOutputArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetOutputArgs | FleetOutputState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetOutputState | undefined;
            resourceInputs["caSha256"] = state ? state.caSha256 : undefined;
            resourceInputs["caTrustedFingerprint"] = state ? state.caTrustedFingerprint : undefined;
            resourceInputs["configYaml"] = state ? state.configYaml : undefined;
            resourceInputs["defaultIntegrations"] = state ? state.defaultIntegrations : undefined;
            resourceInputs["defaultMonitoring"] = state ? state.defaultMonitoring : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputId"] = state ? state.outputId : undefined;
            resourceInputs["ssl"] = state ? state.ssl : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as FleetOutputArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["caSha256"] = args ? args.caSha256 : undefined;
            resourceInputs["caTrustedFingerprint"] = args ? args.caTrustedFingerprint : undefined;
            resourceInputs["configYaml"] = args?.configYaml ? pulumi.secret(args.configYaml) : undefined;
            resourceInputs["defaultIntegrations"] = args ? args.defaultIntegrations : undefined;
            resourceInputs["defaultMonitoring"] = args ? args.defaultMonitoring : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outputId"] = args ? args.outputId : undefined;
            resourceInputs["ssl"] = args ? args.ssl : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["configYaml"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FleetOutput.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FleetOutput resources.
 */
export interface FleetOutputState {
    /**
     * Fingerprint of the Elasticsearch CA certificate.
     */
    caSha256?: pulumi.Input<string>;
    /**
     * Fingerprint of trusted CA.
     */
    caTrustedFingerprint?: pulumi.Input<string>;
    /**
     * Advanced YAML configuration. YAML settings here will be added to the output section of each agent policy.
     */
    configYaml?: pulumi.Input<string>;
    /**
     * Make this output the default for agent integrations.
     */
    defaultIntegrations?: pulumi.Input<boolean>;
    /**
     * Make this output the default for agent monitoring.
     */
    defaultMonitoring?: pulumi.Input<boolean>;
    /**
     * A list of hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the output.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the output.
     */
    outputId?: pulumi.Input<string>;
    /**
     * SSL configuration.
     */
    ssl?: pulumi.Input<inputs.FleetOutputSsl>;
    /**
     * The output type.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FleetOutput resource.
 */
export interface FleetOutputArgs {
    /**
     * Fingerprint of the Elasticsearch CA certificate.
     */
    caSha256?: pulumi.Input<string>;
    /**
     * Fingerprint of trusted CA.
     */
    caTrustedFingerprint?: pulumi.Input<string>;
    /**
     * Advanced YAML configuration. YAML settings here will be added to the output section of each agent policy.
     */
    configYaml?: pulumi.Input<string>;
    /**
     * Make this output the default for agent integrations.
     */
    defaultIntegrations?: pulumi.Input<boolean>;
    /**
     * Make this output the default for agent monitoring.
     */
    defaultMonitoring?: pulumi.Input<boolean>;
    /**
     * A list of hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the output.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the output.
     */
    outputId?: pulumi.Input<string>;
    /**
     * SSL configuration.
     */
    ssl?: pulumi.Input<inputs.FleetOutputSsl>;
    /**
     * The output type.
     */
    type: pulumi.Input<string>;
}
