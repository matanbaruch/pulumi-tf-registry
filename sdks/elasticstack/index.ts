// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { ElasticsearchClusterSettingsArgs, ElasticsearchClusterSettingsState } from "./elasticsearchClusterSettings";
export type ElasticsearchClusterSettings = import("./elasticsearchClusterSettings").ElasticsearchClusterSettings;
export const ElasticsearchClusterSettings: typeof import("./elasticsearchClusterSettings").ElasticsearchClusterSettings = null as any;
utilities.lazyLoad(exports, ["ElasticsearchClusterSettings"], () => require("./elasticsearchClusterSettings"));

export { ElasticsearchComponentTemplateArgs, ElasticsearchComponentTemplateState } from "./elasticsearchComponentTemplate";
export type ElasticsearchComponentTemplate = import("./elasticsearchComponentTemplate").ElasticsearchComponentTemplate;
export const ElasticsearchComponentTemplate: typeof import("./elasticsearchComponentTemplate").ElasticsearchComponentTemplate = null as any;
utilities.lazyLoad(exports, ["ElasticsearchComponentTemplate"], () => require("./elasticsearchComponentTemplate"));

export { ElasticsearchDataStreamArgs, ElasticsearchDataStreamState } from "./elasticsearchDataStream";
export type ElasticsearchDataStream = import("./elasticsearchDataStream").ElasticsearchDataStream;
export const ElasticsearchDataStream: typeof import("./elasticsearchDataStream").ElasticsearchDataStream = null as any;
utilities.lazyLoad(exports, ["ElasticsearchDataStream"], () => require("./elasticsearchDataStream"));

export { ElasticsearchEnrichPolicyArgs, ElasticsearchEnrichPolicyState } from "./elasticsearchEnrichPolicy";
export type ElasticsearchEnrichPolicy = import("./elasticsearchEnrichPolicy").ElasticsearchEnrichPolicy;
export const ElasticsearchEnrichPolicy: typeof import("./elasticsearchEnrichPolicy").ElasticsearchEnrichPolicy = null as any;
utilities.lazyLoad(exports, ["ElasticsearchEnrichPolicy"], () => require("./elasticsearchEnrichPolicy"));

export { ElasticsearchIndexArgs, ElasticsearchIndexState } from "./elasticsearchIndex";
export type ElasticsearchIndex = import("./elasticsearchIndex").ElasticsearchIndex;
export const ElasticsearchIndex: typeof import("./elasticsearchIndex").ElasticsearchIndex = null as any;
utilities.lazyLoad(exports, ["ElasticsearchIndex"], () => require("./elasticsearchIndex"));

export { ElasticsearchIndexLifecycleArgs, ElasticsearchIndexLifecycleState } from "./elasticsearchIndexLifecycle";
export type ElasticsearchIndexLifecycle = import("./elasticsearchIndexLifecycle").ElasticsearchIndexLifecycle;
export const ElasticsearchIndexLifecycle: typeof import("./elasticsearchIndexLifecycle").ElasticsearchIndexLifecycle = null as any;
utilities.lazyLoad(exports, ["ElasticsearchIndexLifecycle"], () => require("./elasticsearchIndexLifecycle"));

export { ElasticsearchIndexTemplateArgs, ElasticsearchIndexTemplateState } from "./elasticsearchIndexTemplate";
export type ElasticsearchIndexTemplate = import("./elasticsearchIndexTemplate").ElasticsearchIndexTemplate;
export const ElasticsearchIndexTemplate: typeof import("./elasticsearchIndexTemplate").ElasticsearchIndexTemplate = null as any;
utilities.lazyLoad(exports, ["ElasticsearchIndexTemplate"], () => require("./elasticsearchIndexTemplate"));

export { ElasticsearchIngestPipelineArgs, ElasticsearchIngestPipelineState } from "./elasticsearchIngestPipeline";
export type ElasticsearchIngestPipeline = import("./elasticsearchIngestPipeline").ElasticsearchIngestPipeline;
export const ElasticsearchIngestPipeline: typeof import("./elasticsearchIngestPipeline").ElasticsearchIngestPipeline = null as any;
utilities.lazyLoad(exports, ["ElasticsearchIngestPipeline"], () => require("./elasticsearchIngestPipeline"));

export { ElasticsearchLogstashPipelineArgs, ElasticsearchLogstashPipelineState } from "./elasticsearchLogstashPipeline";
export type ElasticsearchLogstashPipeline = import("./elasticsearchLogstashPipeline").ElasticsearchLogstashPipeline;
export const ElasticsearchLogstashPipeline: typeof import("./elasticsearchLogstashPipeline").ElasticsearchLogstashPipeline = null as any;
utilities.lazyLoad(exports, ["ElasticsearchLogstashPipeline"], () => require("./elasticsearchLogstashPipeline"));

export { ElasticsearchScriptArgs, ElasticsearchScriptState } from "./elasticsearchScript";
export type ElasticsearchScript = import("./elasticsearchScript").ElasticsearchScript;
export const ElasticsearchScript: typeof import("./elasticsearchScript").ElasticsearchScript = null as any;
utilities.lazyLoad(exports, ["ElasticsearchScript"], () => require("./elasticsearchScript"));

export { ElasticsearchSecurityApiKeyArgs, ElasticsearchSecurityApiKeyState } from "./elasticsearchSecurityApiKey";
export type ElasticsearchSecurityApiKey = import("./elasticsearchSecurityApiKey").ElasticsearchSecurityApiKey;
export const ElasticsearchSecurityApiKey: typeof import("./elasticsearchSecurityApiKey").ElasticsearchSecurityApiKey = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSecurityApiKey"], () => require("./elasticsearchSecurityApiKey"));

export { ElasticsearchSecurityRoleArgs, ElasticsearchSecurityRoleState } from "./elasticsearchSecurityRole";
export type ElasticsearchSecurityRole = import("./elasticsearchSecurityRole").ElasticsearchSecurityRole;
export const ElasticsearchSecurityRole: typeof import("./elasticsearchSecurityRole").ElasticsearchSecurityRole = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSecurityRole"], () => require("./elasticsearchSecurityRole"));

export { ElasticsearchSecurityRoleMappingArgs, ElasticsearchSecurityRoleMappingState } from "./elasticsearchSecurityRoleMapping";
export type ElasticsearchSecurityRoleMapping = import("./elasticsearchSecurityRoleMapping").ElasticsearchSecurityRoleMapping;
export const ElasticsearchSecurityRoleMapping: typeof import("./elasticsearchSecurityRoleMapping").ElasticsearchSecurityRoleMapping = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSecurityRoleMapping"], () => require("./elasticsearchSecurityRoleMapping"));

export { ElasticsearchSecuritySystemUserArgs, ElasticsearchSecuritySystemUserState } from "./elasticsearchSecuritySystemUser";
export type ElasticsearchSecuritySystemUser = import("./elasticsearchSecuritySystemUser").ElasticsearchSecuritySystemUser;
export const ElasticsearchSecuritySystemUser: typeof import("./elasticsearchSecuritySystemUser").ElasticsearchSecuritySystemUser = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSecuritySystemUser"], () => require("./elasticsearchSecuritySystemUser"));

export { ElasticsearchSecurityUserArgs, ElasticsearchSecurityUserState } from "./elasticsearchSecurityUser";
export type ElasticsearchSecurityUser = import("./elasticsearchSecurityUser").ElasticsearchSecurityUser;
export const ElasticsearchSecurityUser: typeof import("./elasticsearchSecurityUser").ElasticsearchSecurityUser = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSecurityUser"], () => require("./elasticsearchSecurityUser"));

export { ElasticsearchSnapshotLifecycleArgs, ElasticsearchSnapshotLifecycleState } from "./elasticsearchSnapshotLifecycle";
export type ElasticsearchSnapshotLifecycle = import("./elasticsearchSnapshotLifecycle").ElasticsearchSnapshotLifecycle;
export const ElasticsearchSnapshotLifecycle: typeof import("./elasticsearchSnapshotLifecycle").ElasticsearchSnapshotLifecycle = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSnapshotLifecycle"], () => require("./elasticsearchSnapshotLifecycle"));

export { ElasticsearchSnapshotRepositoryArgs, ElasticsearchSnapshotRepositoryState } from "./elasticsearchSnapshotRepository";
export type ElasticsearchSnapshotRepository = import("./elasticsearchSnapshotRepository").ElasticsearchSnapshotRepository;
export const ElasticsearchSnapshotRepository: typeof import("./elasticsearchSnapshotRepository").ElasticsearchSnapshotRepository = null as any;
utilities.lazyLoad(exports, ["ElasticsearchSnapshotRepository"], () => require("./elasticsearchSnapshotRepository"));

export { ElasticsearchTransformArgs, ElasticsearchTransformState } from "./elasticsearchTransform";
export type ElasticsearchTransform = import("./elasticsearchTransform").ElasticsearchTransform;
export const ElasticsearchTransform: typeof import("./elasticsearchTransform").ElasticsearchTransform = null as any;
utilities.lazyLoad(exports, ["ElasticsearchTransform"], () => require("./elasticsearchTransform"));

export { ElasticsearchWatchArgs, ElasticsearchWatchState } from "./elasticsearchWatch";
export type ElasticsearchWatch = import("./elasticsearchWatch").ElasticsearchWatch;
export const ElasticsearchWatch: typeof import("./elasticsearchWatch").ElasticsearchWatch = null as any;
utilities.lazyLoad(exports, ["ElasticsearchWatch"], () => require("./elasticsearchWatch"));

export { FleetAgentPolicyArgs, FleetAgentPolicyState } from "./fleetAgentPolicy";
export type FleetAgentPolicy = import("./fleetAgentPolicy").FleetAgentPolicy;
export const FleetAgentPolicy: typeof import("./fleetAgentPolicy").FleetAgentPolicy = null as any;
utilities.lazyLoad(exports, ["FleetAgentPolicy"], () => require("./fleetAgentPolicy"));

export { FleetIntegrationArgs, FleetIntegrationState } from "./fleetIntegration";
export type FleetIntegration = import("./fleetIntegration").FleetIntegration;
export const FleetIntegration: typeof import("./fleetIntegration").FleetIntegration = null as any;
utilities.lazyLoad(exports, ["FleetIntegration"], () => require("./fleetIntegration"));

export { FleetIntegrationPolicyArgs, FleetIntegrationPolicyState } from "./fleetIntegrationPolicy";
export type FleetIntegrationPolicy = import("./fleetIntegrationPolicy").FleetIntegrationPolicy;
export const FleetIntegrationPolicy: typeof import("./fleetIntegrationPolicy").FleetIntegrationPolicy = null as any;
utilities.lazyLoad(exports, ["FleetIntegrationPolicy"], () => require("./fleetIntegrationPolicy"));

export { FleetOutputArgs, FleetOutputState } from "./fleetOutput";
export type FleetOutput = import("./fleetOutput").FleetOutput;
export const FleetOutput: typeof import("./fleetOutput").FleetOutput = null as any;
utilities.lazyLoad(exports, ["FleetOutput"], () => require("./fleetOutput"));

export { FleetServerHostArgs, FleetServerHostState } from "./fleetServerHost";
export type FleetServerHost = import("./fleetServerHost").FleetServerHost;
export const FleetServerHost: typeof import("./fleetServerHost").FleetServerHost = null as any;
utilities.lazyLoad(exports, ["FleetServerHost"], () => require("./fleetServerHost"));

export { GetElasticsearchEnrichPolicyArgs, GetElasticsearchEnrichPolicyResult, GetElasticsearchEnrichPolicyOutputArgs } from "./getElasticsearchEnrichPolicy";
export const getElasticsearchEnrichPolicy: typeof import("./getElasticsearchEnrichPolicy").getElasticsearchEnrichPolicy = null as any;
export const getElasticsearchEnrichPolicyOutput: typeof import("./getElasticsearchEnrichPolicy").getElasticsearchEnrichPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchEnrichPolicy","getElasticsearchEnrichPolicyOutput"], () => require("./getElasticsearchEnrichPolicy"));

export { GetElasticsearchInfoArgs, GetElasticsearchInfoResult, GetElasticsearchInfoOutputArgs } from "./getElasticsearchInfo";
export const getElasticsearchInfo: typeof import("./getElasticsearchInfo").getElasticsearchInfo = null as any;
export const getElasticsearchInfoOutput: typeof import("./getElasticsearchInfo").getElasticsearchInfoOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchInfo","getElasticsearchInfoOutput"], () => require("./getElasticsearchInfo"));

export { GetElasticsearchIngestProcessorAppendArgs, GetElasticsearchIngestProcessorAppendResult, GetElasticsearchIngestProcessorAppendOutputArgs } from "./getElasticsearchIngestProcessorAppend";
export const getElasticsearchIngestProcessorAppend: typeof import("./getElasticsearchIngestProcessorAppend").getElasticsearchIngestProcessorAppend = null as any;
export const getElasticsearchIngestProcessorAppendOutput: typeof import("./getElasticsearchIngestProcessorAppend").getElasticsearchIngestProcessorAppendOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorAppend","getElasticsearchIngestProcessorAppendOutput"], () => require("./getElasticsearchIngestProcessorAppend"));

export { GetElasticsearchIngestProcessorBytesArgs, GetElasticsearchIngestProcessorBytesResult, GetElasticsearchIngestProcessorBytesOutputArgs } from "./getElasticsearchIngestProcessorBytes";
export const getElasticsearchIngestProcessorBytes: typeof import("./getElasticsearchIngestProcessorBytes").getElasticsearchIngestProcessorBytes = null as any;
export const getElasticsearchIngestProcessorBytesOutput: typeof import("./getElasticsearchIngestProcessorBytes").getElasticsearchIngestProcessorBytesOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorBytes","getElasticsearchIngestProcessorBytesOutput"], () => require("./getElasticsearchIngestProcessorBytes"));

export { GetElasticsearchIngestProcessorCircleArgs, GetElasticsearchIngestProcessorCircleResult, GetElasticsearchIngestProcessorCircleOutputArgs } from "./getElasticsearchIngestProcessorCircle";
export const getElasticsearchIngestProcessorCircle: typeof import("./getElasticsearchIngestProcessorCircle").getElasticsearchIngestProcessorCircle = null as any;
export const getElasticsearchIngestProcessorCircleOutput: typeof import("./getElasticsearchIngestProcessorCircle").getElasticsearchIngestProcessorCircleOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorCircle","getElasticsearchIngestProcessorCircleOutput"], () => require("./getElasticsearchIngestProcessorCircle"));

export { GetElasticsearchIngestProcessorCommunityIdArgs, GetElasticsearchIngestProcessorCommunityIdResult, GetElasticsearchIngestProcessorCommunityIdOutputArgs } from "./getElasticsearchIngestProcessorCommunityId";
export const getElasticsearchIngestProcessorCommunityId: typeof import("./getElasticsearchIngestProcessorCommunityId").getElasticsearchIngestProcessorCommunityId = null as any;
export const getElasticsearchIngestProcessorCommunityIdOutput: typeof import("./getElasticsearchIngestProcessorCommunityId").getElasticsearchIngestProcessorCommunityIdOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorCommunityId","getElasticsearchIngestProcessorCommunityIdOutput"], () => require("./getElasticsearchIngestProcessorCommunityId"));

export { GetElasticsearchIngestProcessorConvertArgs, GetElasticsearchIngestProcessorConvertResult, GetElasticsearchIngestProcessorConvertOutputArgs } from "./getElasticsearchIngestProcessorConvert";
export const getElasticsearchIngestProcessorConvert: typeof import("./getElasticsearchIngestProcessorConvert").getElasticsearchIngestProcessorConvert = null as any;
export const getElasticsearchIngestProcessorConvertOutput: typeof import("./getElasticsearchIngestProcessorConvert").getElasticsearchIngestProcessorConvertOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorConvert","getElasticsearchIngestProcessorConvertOutput"], () => require("./getElasticsearchIngestProcessorConvert"));

export { GetElasticsearchIngestProcessorCsvArgs, GetElasticsearchIngestProcessorCsvResult, GetElasticsearchIngestProcessorCsvOutputArgs } from "./getElasticsearchIngestProcessorCsv";
export const getElasticsearchIngestProcessorCsv: typeof import("./getElasticsearchIngestProcessorCsv").getElasticsearchIngestProcessorCsv = null as any;
export const getElasticsearchIngestProcessorCsvOutput: typeof import("./getElasticsearchIngestProcessorCsv").getElasticsearchIngestProcessorCsvOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorCsv","getElasticsearchIngestProcessorCsvOutput"], () => require("./getElasticsearchIngestProcessorCsv"));

export { GetElasticsearchIngestProcessorDateArgs, GetElasticsearchIngestProcessorDateResult, GetElasticsearchIngestProcessorDateOutputArgs } from "./getElasticsearchIngestProcessorDate";
export const getElasticsearchIngestProcessorDate: typeof import("./getElasticsearchIngestProcessorDate").getElasticsearchIngestProcessorDate = null as any;
export const getElasticsearchIngestProcessorDateOutput: typeof import("./getElasticsearchIngestProcessorDate").getElasticsearchIngestProcessorDateOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorDate","getElasticsearchIngestProcessorDateOutput"], () => require("./getElasticsearchIngestProcessorDate"));

export { GetElasticsearchIngestProcessorDateIndexNameArgs, GetElasticsearchIngestProcessorDateIndexNameResult, GetElasticsearchIngestProcessorDateIndexNameOutputArgs } from "./getElasticsearchIngestProcessorDateIndexName";
export const getElasticsearchIngestProcessorDateIndexName: typeof import("./getElasticsearchIngestProcessorDateIndexName").getElasticsearchIngestProcessorDateIndexName = null as any;
export const getElasticsearchIngestProcessorDateIndexNameOutput: typeof import("./getElasticsearchIngestProcessorDateIndexName").getElasticsearchIngestProcessorDateIndexNameOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorDateIndexName","getElasticsearchIngestProcessorDateIndexNameOutput"], () => require("./getElasticsearchIngestProcessorDateIndexName"));

export { GetElasticsearchIngestProcessorDissectArgs, GetElasticsearchIngestProcessorDissectResult, GetElasticsearchIngestProcessorDissectOutputArgs } from "./getElasticsearchIngestProcessorDissect";
export const getElasticsearchIngestProcessorDissect: typeof import("./getElasticsearchIngestProcessorDissect").getElasticsearchIngestProcessorDissect = null as any;
export const getElasticsearchIngestProcessorDissectOutput: typeof import("./getElasticsearchIngestProcessorDissect").getElasticsearchIngestProcessorDissectOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorDissect","getElasticsearchIngestProcessorDissectOutput"], () => require("./getElasticsearchIngestProcessorDissect"));

export { GetElasticsearchIngestProcessorDotExpanderArgs, GetElasticsearchIngestProcessorDotExpanderResult, GetElasticsearchIngestProcessorDotExpanderOutputArgs } from "./getElasticsearchIngestProcessorDotExpander";
export const getElasticsearchIngestProcessorDotExpander: typeof import("./getElasticsearchIngestProcessorDotExpander").getElasticsearchIngestProcessorDotExpander = null as any;
export const getElasticsearchIngestProcessorDotExpanderOutput: typeof import("./getElasticsearchIngestProcessorDotExpander").getElasticsearchIngestProcessorDotExpanderOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorDotExpander","getElasticsearchIngestProcessorDotExpanderOutput"], () => require("./getElasticsearchIngestProcessorDotExpander"));

export { GetElasticsearchIngestProcessorDropArgs, GetElasticsearchIngestProcessorDropResult, GetElasticsearchIngestProcessorDropOutputArgs } from "./getElasticsearchIngestProcessorDrop";
export const getElasticsearchIngestProcessorDrop: typeof import("./getElasticsearchIngestProcessorDrop").getElasticsearchIngestProcessorDrop = null as any;
export const getElasticsearchIngestProcessorDropOutput: typeof import("./getElasticsearchIngestProcessorDrop").getElasticsearchIngestProcessorDropOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorDrop","getElasticsearchIngestProcessorDropOutput"], () => require("./getElasticsearchIngestProcessorDrop"));

export { GetElasticsearchIngestProcessorEnrichArgs, GetElasticsearchIngestProcessorEnrichResult, GetElasticsearchIngestProcessorEnrichOutputArgs } from "./getElasticsearchIngestProcessorEnrich";
export const getElasticsearchIngestProcessorEnrich: typeof import("./getElasticsearchIngestProcessorEnrich").getElasticsearchIngestProcessorEnrich = null as any;
export const getElasticsearchIngestProcessorEnrichOutput: typeof import("./getElasticsearchIngestProcessorEnrich").getElasticsearchIngestProcessorEnrichOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorEnrich","getElasticsearchIngestProcessorEnrichOutput"], () => require("./getElasticsearchIngestProcessorEnrich"));

export { GetElasticsearchIngestProcessorFailArgs, GetElasticsearchIngestProcessorFailResult, GetElasticsearchIngestProcessorFailOutputArgs } from "./getElasticsearchIngestProcessorFail";
export const getElasticsearchIngestProcessorFail: typeof import("./getElasticsearchIngestProcessorFail").getElasticsearchIngestProcessorFail = null as any;
export const getElasticsearchIngestProcessorFailOutput: typeof import("./getElasticsearchIngestProcessorFail").getElasticsearchIngestProcessorFailOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorFail","getElasticsearchIngestProcessorFailOutput"], () => require("./getElasticsearchIngestProcessorFail"));

export { GetElasticsearchIngestProcessorFingerprintArgs, GetElasticsearchIngestProcessorFingerprintResult, GetElasticsearchIngestProcessorFingerprintOutputArgs } from "./getElasticsearchIngestProcessorFingerprint";
export const getElasticsearchIngestProcessorFingerprint: typeof import("./getElasticsearchIngestProcessorFingerprint").getElasticsearchIngestProcessorFingerprint = null as any;
export const getElasticsearchIngestProcessorFingerprintOutput: typeof import("./getElasticsearchIngestProcessorFingerprint").getElasticsearchIngestProcessorFingerprintOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorFingerprint","getElasticsearchIngestProcessorFingerprintOutput"], () => require("./getElasticsearchIngestProcessorFingerprint"));

export { GetElasticsearchIngestProcessorForeachArgs, GetElasticsearchIngestProcessorForeachResult, GetElasticsearchIngestProcessorForeachOutputArgs } from "./getElasticsearchIngestProcessorForeach";
export const getElasticsearchIngestProcessorForeach: typeof import("./getElasticsearchIngestProcessorForeach").getElasticsearchIngestProcessorForeach = null as any;
export const getElasticsearchIngestProcessorForeachOutput: typeof import("./getElasticsearchIngestProcessorForeach").getElasticsearchIngestProcessorForeachOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorForeach","getElasticsearchIngestProcessorForeachOutput"], () => require("./getElasticsearchIngestProcessorForeach"));

export { GetElasticsearchIngestProcessorGeoipArgs, GetElasticsearchIngestProcessorGeoipResult, GetElasticsearchIngestProcessorGeoipOutputArgs } from "./getElasticsearchIngestProcessorGeoip";
export const getElasticsearchIngestProcessorGeoip: typeof import("./getElasticsearchIngestProcessorGeoip").getElasticsearchIngestProcessorGeoip = null as any;
export const getElasticsearchIngestProcessorGeoipOutput: typeof import("./getElasticsearchIngestProcessorGeoip").getElasticsearchIngestProcessorGeoipOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorGeoip","getElasticsearchIngestProcessorGeoipOutput"], () => require("./getElasticsearchIngestProcessorGeoip"));

export { GetElasticsearchIngestProcessorGrokArgs, GetElasticsearchIngestProcessorGrokResult, GetElasticsearchIngestProcessorGrokOutputArgs } from "./getElasticsearchIngestProcessorGrok";
export const getElasticsearchIngestProcessorGrok: typeof import("./getElasticsearchIngestProcessorGrok").getElasticsearchIngestProcessorGrok = null as any;
export const getElasticsearchIngestProcessorGrokOutput: typeof import("./getElasticsearchIngestProcessorGrok").getElasticsearchIngestProcessorGrokOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorGrok","getElasticsearchIngestProcessorGrokOutput"], () => require("./getElasticsearchIngestProcessorGrok"));

export { GetElasticsearchIngestProcessorGsubArgs, GetElasticsearchIngestProcessorGsubResult, GetElasticsearchIngestProcessorGsubOutputArgs } from "./getElasticsearchIngestProcessorGsub";
export const getElasticsearchIngestProcessorGsub: typeof import("./getElasticsearchIngestProcessorGsub").getElasticsearchIngestProcessorGsub = null as any;
export const getElasticsearchIngestProcessorGsubOutput: typeof import("./getElasticsearchIngestProcessorGsub").getElasticsearchIngestProcessorGsubOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorGsub","getElasticsearchIngestProcessorGsubOutput"], () => require("./getElasticsearchIngestProcessorGsub"));

export { GetElasticsearchIngestProcessorHtmlStripArgs, GetElasticsearchIngestProcessorHtmlStripResult, GetElasticsearchIngestProcessorHtmlStripOutputArgs } from "./getElasticsearchIngestProcessorHtmlStrip";
export const getElasticsearchIngestProcessorHtmlStrip: typeof import("./getElasticsearchIngestProcessorHtmlStrip").getElasticsearchIngestProcessorHtmlStrip = null as any;
export const getElasticsearchIngestProcessorHtmlStripOutput: typeof import("./getElasticsearchIngestProcessorHtmlStrip").getElasticsearchIngestProcessorHtmlStripOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorHtmlStrip","getElasticsearchIngestProcessorHtmlStripOutput"], () => require("./getElasticsearchIngestProcessorHtmlStrip"));

export { GetElasticsearchIngestProcessorJoinArgs, GetElasticsearchIngestProcessorJoinResult, GetElasticsearchIngestProcessorJoinOutputArgs } from "./getElasticsearchIngestProcessorJoin";
export const getElasticsearchIngestProcessorJoin: typeof import("./getElasticsearchIngestProcessorJoin").getElasticsearchIngestProcessorJoin = null as any;
export const getElasticsearchIngestProcessorJoinOutput: typeof import("./getElasticsearchIngestProcessorJoin").getElasticsearchIngestProcessorJoinOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorJoin","getElasticsearchIngestProcessorJoinOutput"], () => require("./getElasticsearchIngestProcessorJoin"));

export { GetElasticsearchIngestProcessorJsonArgs, GetElasticsearchIngestProcessorJsonResult, GetElasticsearchIngestProcessorJsonOutputArgs } from "./getElasticsearchIngestProcessorJson";
export const getElasticsearchIngestProcessorJson: typeof import("./getElasticsearchIngestProcessorJson").getElasticsearchIngestProcessorJson = null as any;
export const getElasticsearchIngestProcessorJsonOutput: typeof import("./getElasticsearchIngestProcessorJson").getElasticsearchIngestProcessorJsonOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorJson","getElasticsearchIngestProcessorJsonOutput"], () => require("./getElasticsearchIngestProcessorJson"));

export { GetElasticsearchIngestProcessorKvArgs, GetElasticsearchIngestProcessorKvResult, GetElasticsearchIngestProcessorKvOutputArgs } from "./getElasticsearchIngestProcessorKv";
export const getElasticsearchIngestProcessorKv: typeof import("./getElasticsearchIngestProcessorKv").getElasticsearchIngestProcessorKv = null as any;
export const getElasticsearchIngestProcessorKvOutput: typeof import("./getElasticsearchIngestProcessorKv").getElasticsearchIngestProcessorKvOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorKv","getElasticsearchIngestProcessorKvOutput"], () => require("./getElasticsearchIngestProcessorKv"));

export { GetElasticsearchIngestProcessorLowercaseArgs, GetElasticsearchIngestProcessorLowercaseResult, GetElasticsearchIngestProcessorLowercaseOutputArgs } from "./getElasticsearchIngestProcessorLowercase";
export const getElasticsearchIngestProcessorLowercase: typeof import("./getElasticsearchIngestProcessorLowercase").getElasticsearchIngestProcessorLowercase = null as any;
export const getElasticsearchIngestProcessorLowercaseOutput: typeof import("./getElasticsearchIngestProcessorLowercase").getElasticsearchIngestProcessorLowercaseOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorLowercase","getElasticsearchIngestProcessorLowercaseOutput"], () => require("./getElasticsearchIngestProcessorLowercase"));

export { GetElasticsearchIngestProcessorNetworkDirectionArgs, GetElasticsearchIngestProcessorNetworkDirectionResult, GetElasticsearchIngestProcessorNetworkDirectionOutputArgs } from "./getElasticsearchIngestProcessorNetworkDirection";
export const getElasticsearchIngestProcessorNetworkDirection: typeof import("./getElasticsearchIngestProcessorNetworkDirection").getElasticsearchIngestProcessorNetworkDirection = null as any;
export const getElasticsearchIngestProcessorNetworkDirectionOutput: typeof import("./getElasticsearchIngestProcessorNetworkDirection").getElasticsearchIngestProcessorNetworkDirectionOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorNetworkDirection","getElasticsearchIngestProcessorNetworkDirectionOutput"], () => require("./getElasticsearchIngestProcessorNetworkDirection"));

export { GetElasticsearchIngestProcessorPipelineArgs, GetElasticsearchIngestProcessorPipelineResult, GetElasticsearchIngestProcessorPipelineOutputArgs } from "./getElasticsearchIngestProcessorPipeline";
export const getElasticsearchIngestProcessorPipeline: typeof import("./getElasticsearchIngestProcessorPipeline").getElasticsearchIngestProcessorPipeline = null as any;
export const getElasticsearchIngestProcessorPipelineOutput: typeof import("./getElasticsearchIngestProcessorPipeline").getElasticsearchIngestProcessorPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorPipeline","getElasticsearchIngestProcessorPipelineOutput"], () => require("./getElasticsearchIngestProcessorPipeline"));

export { GetElasticsearchIngestProcessorRegisteredDomainArgs, GetElasticsearchIngestProcessorRegisteredDomainResult, GetElasticsearchIngestProcessorRegisteredDomainOutputArgs } from "./getElasticsearchIngestProcessorRegisteredDomain";
export const getElasticsearchIngestProcessorRegisteredDomain: typeof import("./getElasticsearchIngestProcessorRegisteredDomain").getElasticsearchIngestProcessorRegisteredDomain = null as any;
export const getElasticsearchIngestProcessorRegisteredDomainOutput: typeof import("./getElasticsearchIngestProcessorRegisteredDomain").getElasticsearchIngestProcessorRegisteredDomainOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorRegisteredDomain","getElasticsearchIngestProcessorRegisteredDomainOutput"], () => require("./getElasticsearchIngestProcessorRegisteredDomain"));

export { GetElasticsearchIngestProcessorRemoveArgs, GetElasticsearchIngestProcessorRemoveResult, GetElasticsearchIngestProcessorRemoveOutputArgs } from "./getElasticsearchIngestProcessorRemove";
export const getElasticsearchIngestProcessorRemove: typeof import("./getElasticsearchIngestProcessorRemove").getElasticsearchIngestProcessorRemove = null as any;
export const getElasticsearchIngestProcessorRemoveOutput: typeof import("./getElasticsearchIngestProcessorRemove").getElasticsearchIngestProcessorRemoveOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorRemove","getElasticsearchIngestProcessorRemoveOutput"], () => require("./getElasticsearchIngestProcessorRemove"));

export { GetElasticsearchIngestProcessorRenameArgs, GetElasticsearchIngestProcessorRenameResult, GetElasticsearchIngestProcessorRenameOutputArgs } from "./getElasticsearchIngestProcessorRename";
export const getElasticsearchIngestProcessorRename: typeof import("./getElasticsearchIngestProcessorRename").getElasticsearchIngestProcessorRename = null as any;
export const getElasticsearchIngestProcessorRenameOutput: typeof import("./getElasticsearchIngestProcessorRename").getElasticsearchIngestProcessorRenameOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorRename","getElasticsearchIngestProcessorRenameOutput"], () => require("./getElasticsearchIngestProcessorRename"));

export { GetElasticsearchIngestProcessorScriptArgs, GetElasticsearchIngestProcessorScriptResult, GetElasticsearchIngestProcessorScriptOutputArgs } from "./getElasticsearchIngestProcessorScript";
export const getElasticsearchIngestProcessorScript: typeof import("./getElasticsearchIngestProcessorScript").getElasticsearchIngestProcessorScript = null as any;
export const getElasticsearchIngestProcessorScriptOutput: typeof import("./getElasticsearchIngestProcessorScript").getElasticsearchIngestProcessorScriptOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorScript","getElasticsearchIngestProcessorScriptOutput"], () => require("./getElasticsearchIngestProcessorScript"));

export { GetElasticsearchIngestProcessorSetArgs, GetElasticsearchIngestProcessorSetResult, GetElasticsearchIngestProcessorSetOutputArgs } from "./getElasticsearchIngestProcessorSet";
export const getElasticsearchIngestProcessorSet: typeof import("./getElasticsearchIngestProcessorSet").getElasticsearchIngestProcessorSet = null as any;
export const getElasticsearchIngestProcessorSetOutput: typeof import("./getElasticsearchIngestProcessorSet").getElasticsearchIngestProcessorSetOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorSet","getElasticsearchIngestProcessorSetOutput"], () => require("./getElasticsearchIngestProcessorSet"));

export { GetElasticsearchIngestProcessorSetSecurityUserArgs, GetElasticsearchIngestProcessorSetSecurityUserResult, GetElasticsearchIngestProcessorSetSecurityUserOutputArgs } from "./getElasticsearchIngestProcessorSetSecurityUser";
export const getElasticsearchIngestProcessorSetSecurityUser: typeof import("./getElasticsearchIngestProcessorSetSecurityUser").getElasticsearchIngestProcessorSetSecurityUser = null as any;
export const getElasticsearchIngestProcessorSetSecurityUserOutput: typeof import("./getElasticsearchIngestProcessorSetSecurityUser").getElasticsearchIngestProcessorSetSecurityUserOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorSetSecurityUser","getElasticsearchIngestProcessorSetSecurityUserOutput"], () => require("./getElasticsearchIngestProcessorSetSecurityUser"));

export { GetElasticsearchIngestProcessorSortArgs, GetElasticsearchIngestProcessorSortResult, GetElasticsearchIngestProcessorSortOutputArgs } from "./getElasticsearchIngestProcessorSort";
export const getElasticsearchIngestProcessorSort: typeof import("./getElasticsearchIngestProcessorSort").getElasticsearchIngestProcessorSort = null as any;
export const getElasticsearchIngestProcessorSortOutput: typeof import("./getElasticsearchIngestProcessorSort").getElasticsearchIngestProcessorSortOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorSort","getElasticsearchIngestProcessorSortOutput"], () => require("./getElasticsearchIngestProcessorSort"));

export { GetElasticsearchIngestProcessorSplitArgs, GetElasticsearchIngestProcessorSplitResult, GetElasticsearchIngestProcessorSplitOutputArgs } from "./getElasticsearchIngestProcessorSplit";
export const getElasticsearchIngestProcessorSplit: typeof import("./getElasticsearchIngestProcessorSplit").getElasticsearchIngestProcessorSplit = null as any;
export const getElasticsearchIngestProcessorSplitOutput: typeof import("./getElasticsearchIngestProcessorSplit").getElasticsearchIngestProcessorSplitOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorSplit","getElasticsearchIngestProcessorSplitOutput"], () => require("./getElasticsearchIngestProcessorSplit"));

export { GetElasticsearchIngestProcessorTrimArgs, GetElasticsearchIngestProcessorTrimResult, GetElasticsearchIngestProcessorTrimOutputArgs } from "./getElasticsearchIngestProcessorTrim";
export const getElasticsearchIngestProcessorTrim: typeof import("./getElasticsearchIngestProcessorTrim").getElasticsearchIngestProcessorTrim = null as any;
export const getElasticsearchIngestProcessorTrimOutput: typeof import("./getElasticsearchIngestProcessorTrim").getElasticsearchIngestProcessorTrimOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorTrim","getElasticsearchIngestProcessorTrimOutput"], () => require("./getElasticsearchIngestProcessorTrim"));

export { GetElasticsearchIngestProcessorUppercaseArgs, GetElasticsearchIngestProcessorUppercaseResult, GetElasticsearchIngestProcessorUppercaseOutputArgs } from "./getElasticsearchIngestProcessorUppercase";
export const getElasticsearchIngestProcessorUppercase: typeof import("./getElasticsearchIngestProcessorUppercase").getElasticsearchIngestProcessorUppercase = null as any;
export const getElasticsearchIngestProcessorUppercaseOutput: typeof import("./getElasticsearchIngestProcessorUppercase").getElasticsearchIngestProcessorUppercaseOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorUppercase","getElasticsearchIngestProcessorUppercaseOutput"], () => require("./getElasticsearchIngestProcessorUppercase"));

export { GetElasticsearchIngestProcessorUriPartsArgs, GetElasticsearchIngestProcessorUriPartsResult, GetElasticsearchIngestProcessorUriPartsOutputArgs } from "./getElasticsearchIngestProcessorUriParts";
export const getElasticsearchIngestProcessorUriParts: typeof import("./getElasticsearchIngestProcessorUriParts").getElasticsearchIngestProcessorUriParts = null as any;
export const getElasticsearchIngestProcessorUriPartsOutput: typeof import("./getElasticsearchIngestProcessorUriParts").getElasticsearchIngestProcessorUriPartsOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorUriParts","getElasticsearchIngestProcessorUriPartsOutput"], () => require("./getElasticsearchIngestProcessorUriParts"));

export { GetElasticsearchIngestProcessorUrldecodeArgs, GetElasticsearchIngestProcessorUrldecodeResult, GetElasticsearchIngestProcessorUrldecodeOutputArgs } from "./getElasticsearchIngestProcessorUrldecode";
export const getElasticsearchIngestProcessorUrldecode: typeof import("./getElasticsearchIngestProcessorUrldecode").getElasticsearchIngestProcessorUrldecode = null as any;
export const getElasticsearchIngestProcessorUrldecodeOutput: typeof import("./getElasticsearchIngestProcessorUrldecode").getElasticsearchIngestProcessorUrldecodeOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorUrldecode","getElasticsearchIngestProcessorUrldecodeOutput"], () => require("./getElasticsearchIngestProcessorUrldecode"));

export { GetElasticsearchIngestProcessorUserAgentArgs, GetElasticsearchIngestProcessorUserAgentResult, GetElasticsearchIngestProcessorUserAgentOutputArgs } from "./getElasticsearchIngestProcessorUserAgent";
export const getElasticsearchIngestProcessorUserAgent: typeof import("./getElasticsearchIngestProcessorUserAgent").getElasticsearchIngestProcessorUserAgent = null as any;
export const getElasticsearchIngestProcessorUserAgentOutput: typeof import("./getElasticsearchIngestProcessorUserAgent").getElasticsearchIngestProcessorUserAgentOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchIngestProcessorUserAgent","getElasticsearchIngestProcessorUserAgentOutput"], () => require("./getElasticsearchIngestProcessorUserAgent"));

export { GetElasticsearchSecurityRoleArgs, GetElasticsearchSecurityRoleResult, GetElasticsearchSecurityRoleOutputArgs } from "./getElasticsearchSecurityRole";
export const getElasticsearchSecurityRole: typeof import("./getElasticsearchSecurityRole").getElasticsearchSecurityRole = null as any;
export const getElasticsearchSecurityRoleOutput: typeof import("./getElasticsearchSecurityRole").getElasticsearchSecurityRoleOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchSecurityRole","getElasticsearchSecurityRoleOutput"], () => require("./getElasticsearchSecurityRole"));

export { GetElasticsearchSecurityRoleMappingArgs, GetElasticsearchSecurityRoleMappingResult, GetElasticsearchSecurityRoleMappingOutputArgs } from "./getElasticsearchSecurityRoleMapping";
export const getElasticsearchSecurityRoleMapping: typeof import("./getElasticsearchSecurityRoleMapping").getElasticsearchSecurityRoleMapping = null as any;
export const getElasticsearchSecurityRoleMappingOutput: typeof import("./getElasticsearchSecurityRoleMapping").getElasticsearchSecurityRoleMappingOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchSecurityRoleMapping","getElasticsearchSecurityRoleMappingOutput"], () => require("./getElasticsearchSecurityRoleMapping"));

export { GetElasticsearchSecurityUserArgs, GetElasticsearchSecurityUserResult, GetElasticsearchSecurityUserOutputArgs } from "./getElasticsearchSecurityUser";
export const getElasticsearchSecurityUser: typeof import("./getElasticsearchSecurityUser").getElasticsearchSecurityUser = null as any;
export const getElasticsearchSecurityUserOutput: typeof import("./getElasticsearchSecurityUser").getElasticsearchSecurityUserOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchSecurityUser","getElasticsearchSecurityUserOutput"], () => require("./getElasticsearchSecurityUser"));

export { GetElasticsearchSnapshotRepositoryArgs, GetElasticsearchSnapshotRepositoryResult, GetElasticsearchSnapshotRepositoryOutputArgs } from "./getElasticsearchSnapshotRepository";
export const getElasticsearchSnapshotRepository: typeof import("./getElasticsearchSnapshotRepository").getElasticsearchSnapshotRepository = null as any;
export const getElasticsearchSnapshotRepositoryOutput: typeof import("./getElasticsearchSnapshotRepository").getElasticsearchSnapshotRepositoryOutput = null as any;
utilities.lazyLoad(exports, ["getElasticsearchSnapshotRepository","getElasticsearchSnapshotRepositoryOutput"], () => require("./getElasticsearchSnapshotRepository"));

export { GetFleetEnrollmentTokensArgs, GetFleetEnrollmentTokensResult, GetFleetEnrollmentTokensOutputArgs } from "./getFleetEnrollmentTokens";
export const getFleetEnrollmentTokens: typeof import("./getFleetEnrollmentTokens").getFleetEnrollmentTokens = null as any;
export const getFleetEnrollmentTokensOutput: typeof import("./getFleetEnrollmentTokens").getFleetEnrollmentTokensOutput = null as any;
utilities.lazyLoad(exports, ["getFleetEnrollmentTokens","getFleetEnrollmentTokensOutput"], () => require("./getFleetEnrollmentTokens"));

export { GetFleetIntegrationArgs, GetFleetIntegrationResult, GetFleetIntegrationOutputArgs } from "./getFleetIntegration";
export const getFleetIntegration: typeof import("./getFleetIntegration").getFleetIntegration = null as any;
export const getFleetIntegrationOutput: typeof import("./getFleetIntegration").getFleetIntegrationOutput = null as any;
utilities.lazyLoad(exports, ["getFleetIntegration","getFleetIntegrationOutput"], () => require("./getFleetIntegration"));

export { GetKibanaActionConnectorArgs, GetKibanaActionConnectorResult, GetKibanaActionConnectorOutputArgs } from "./getKibanaActionConnector";
export const getKibanaActionConnector: typeof import("./getKibanaActionConnector").getKibanaActionConnector = null as any;
export const getKibanaActionConnectorOutput: typeof import("./getKibanaActionConnector").getKibanaActionConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getKibanaActionConnector","getKibanaActionConnectorOutput"], () => require("./getKibanaActionConnector"));

export { GetKibanaSecurityRoleArgs, GetKibanaSecurityRoleResult, GetKibanaSecurityRoleOutputArgs } from "./getKibanaSecurityRole";
export const getKibanaSecurityRole: typeof import("./getKibanaSecurityRole").getKibanaSecurityRole = null as any;
export const getKibanaSecurityRoleOutput: typeof import("./getKibanaSecurityRole").getKibanaSecurityRoleOutput = null as any;
utilities.lazyLoad(exports, ["getKibanaSecurityRole","getKibanaSecurityRoleOutput"], () => require("./getKibanaSecurityRole"));

export { GetKibanaSpacesResult } from "./getKibanaSpaces";
export const getKibanaSpaces: typeof import("./getKibanaSpaces").getKibanaSpaces = null as any;
export const getKibanaSpacesOutput: typeof import("./getKibanaSpaces").getKibanaSpacesOutput = null as any;
utilities.lazyLoad(exports, ["getKibanaSpaces","getKibanaSpacesOutput"], () => require("./getKibanaSpaces"));

export { KibanaActionConnectorArgs, KibanaActionConnectorState } from "./kibanaActionConnector";
export type KibanaActionConnector = import("./kibanaActionConnector").KibanaActionConnector;
export const KibanaActionConnector: typeof import("./kibanaActionConnector").KibanaActionConnector = null as any;
utilities.lazyLoad(exports, ["KibanaActionConnector"], () => require("./kibanaActionConnector"));

export { KibanaAlertingRuleArgs, KibanaAlertingRuleState } from "./kibanaAlertingRule";
export type KibanaAlertingRule = import("./kibanaAlertingRule").KibanaAlertingRule;
export const KibanaAlertingRule: typeof import("./kibanaAlertingRule").KibanaAlertingRule = null as any;
utilities.lazyLoad(exports, ["KibanaAlertingRule"], () => require("./kibanaAlertingRule"));

export { KibanaDataViewArgs, KibanaDataViewState } from "./kibanaDataView";
export type KibanaDataView = import("./kibanaDataView").KibanaDataView;
export const KibanaDataView: typeof import("./kibanaDataView").KibanaDataView = null as any;
utilities.lazyLoad(exports, ["KibanaDataView"], () => require("./kibanaDataView"));

export { KibanaImportSavedObjectsArgs, KibanaImportSavedObjectsState } from "./kibanaImportSavedObjects";
export type KibanaImportSavedObjects = import("./kibanaImportSavedObjects").KibanaImportSavedObjects;
export const KibanaImportSavedObjects: typeof import("./kibanaImportSavedObjects").KibanaImportSavedObjects = null as any;
utilities.lazyLoad(exports, ["KibanaImportSavedObjects"], () => require("./kibanaImportSavedObjects"));

export { KibanaSecurityRoleArgs, KibanaSecurityRoleState } from "./kibanaSecurityRole";
export type KibanaSecurityRole = import("./kibanaSecurityRole").KibanaSecurityRole;
export const KibanaSecurityRole: typeof import("./kibanaSecurityRole").KibanaSecurityRole = null as any;
utilities.lazyLoad(exports, ["KibanaSecurityRole"], () => require("./kibanaSecurityRole"));

export { KibanaSloArgs, KibanaSloState } from "./kibanaSlo";
export type KibanaSlo = import("./kibanaSlo").KibanaSlo;
export const KibanaSlo: typeof import("./kibanaSlo").KibanaSlo = null as any;
utilities.lazyLoad(exports, ["KibanaSlo"], () => require("./kibanaSlo"));

export { KibanaSpaceArgs, KibanaSpaceState } from "./kibanaSpace";
export type KibanaSpace = import("./kibanaSpace").KibanaSpace;
export const KibanaSpace: typeof import("./kibanaSpace").KibanaSpace = null as any;
utilities.lazyLoad(exports, ["KibanaSpace"], () => require("./kibanaSpace"));

export { KibanaSyntheticsMonitorArgs, KibanaSyntheticsMonitorState } from "./kibanaSyntheticsMonitor";
export type KibanaSyntheticsMonitor = import("./kibanaSyntheticsMonitor").KibanaSyntheticsMonitor;
export const KibanaSyntheticsMonitor: typeof import("./kibanaSyntheticsMonitor").KibanaSyntheticsMonitor = null as any;
utilities.lazyLoad(exports, ["KibanaSyntheticsMonitor"], () => require("./kibanaSyntheticsMonitor"));

export { KibanaSyntheticsPrivateLocationArgs, KibanaSyntheticsPrivateLocationState } from "./kibanaSyntheticsPrivateLocation";
export type KibanaSyntheticsPrivateLocation = import("./kibanaSyntheticsPrivateLocation").KibanaSyntheticsPrivateLocation;
export const KibanaSyntheticsPrivateLocation: typeof import("./kibanaSyntheticsPrivateLocation").KibanaSyntheticsPrivateLocation = null as any;
utilities.lazyLoad(exports, ["KibanaSyntheticsPrivateLocation"], () => require("./kibanaSyntheticsPrivateLocation"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "elasticstack:index/elasticsearchClusterSettings:ElasticsearchClusterSettings":
                return new ElasticsearchClusterSettings(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchComponentTemplate:ElasticsearchComponentTemplate":
                return new ElasticsearchComponentTemplate(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchDataStream:ElasticsearchDataStream":
                return new ElasticsearchDataStream(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchEnrichPolicy:ElasticsearchEnrichPolicy":
                return new ElasticsearchEnrichPolicy(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchIndex:ElasticsearchIndex":
                return new ElasticsearchIndex(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchIndexLifecycle:ElasticsearchIndexLifecycle":
                return new ElasticsearchIndexLifecycle(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchIndexTemplate:ElasticsearchIndexTemplate":
                return new ElasticsearchIndexTemplate(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchIngestPipeline:ElasticsearchIngestPipeline":
                return new ElasticsearchIngestPipeline(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchLogstashPipeline:ElasticsearchLogstashPipeline":
                return new ElasticsearchLogstashPipeline(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchScript:ElasticsearchScript":
                return new ElasticsearchScript(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSecurityApiKey:ElasticsearchSecurityApiKey":
                return new ElasticsearchSecurityApiKey(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSecurityRole:ElasticsearchSecurityRole":
                return new ElasticsearchSecurityRole(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSecurityRoleMapping:ElasticsearchSecurityRoleMapping":
                return new ElasticsearchSecurityRoleMapping(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSecuritySystemUser:ElasticsearchSecuritySystemUser":
                return new ElasticsearchSecuritySystemUser(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSecurityUser:ElasticsearchSecurityUser":
                return new ElasticsearchSecurityUser(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSnapshotLifecycle:ElasticsearchSnapshotLifecycle":
                return new ElasticsearchSnapshotLifecycle(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchSnapshotRepository:ElasticsearchSnapshotRepository":
                return new ElasticsearchSnapshotRepository(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchTransform:ElasticsearchTransform":
                return new ElasticsearchTransform(name, <any>undefined, { urn })
            case "elasticstack:index/elasticsearchWatch:ElasticsearchWatch":
                return new ElasticsearchWatch(name, <any>undefined, { urn })
            case "elasticstack:index/fleetAgentPolicy:FleetAgentPolicy":
                return new FleetAgentPolicy(name, <any>undefined, { urn })
            case "elasticstack:index/fleetIntegration:FleetIntegration":
                return new FleetIntegration(name, <any>undefined, { urn })
            case "elasticstack:index/fleetIntegrationPolicy:FleetIntegrationPolicy":
                return new FleetIntegrationPolicy(name, <any>undefined, { urn })
            case "elasticstack:index/fleetOutput:FleetOutput":
                return new FleetOutput(name, <any>undefined, { urn })
            case "elasticstack:index/fleetServerHost:FleetServerHost":
                return new FleetServerHost(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaActionConnector:KibanaActionConnector":
                return new KibanaActionConnector(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaAlertingRule:KibanaAlertingRule":
                return new KibanaAlertingRule(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaDataView:KibanaDataView":
                return new KibanaDataView(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaImportSavedObjects:KibanaImportSavedObjects":
                return new KibanaImportSavedObjects(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaSecurityRole:KibanaSecurityRole":
                return new KibanaSecurityRole(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaSlo:KibanaSlo":
                return new KibanaSlo(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaSpace:KibanaSpace":
                return new KibanaSpace(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaSyntheticsMonitor:KibanaSyntheticsMonitor":
                return new KibanaSyntheticsMonitor(name, <any>undefined, { urn })
            case "elasticstack:index/kibanaSyntheticsPrivateLocation:KibanaSyntheticsPrivateLocation":
                return new KibanaSyntheticsPrivateLocation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchClusterSettings", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchComponentTemplate", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchDataStream", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchEnrichPolicy", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchIndex", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchIndexLifecycle", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchIndexTemplate", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchIngestPipeline", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchLogstashPipeline", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchScript", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSecurityApiKey", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSecurityRole", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSecurityRoleMapping", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSecuritySystemUser", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSecurityUser", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSnapshotLifecycle", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchSnapshotRepository", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchTransform", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/elasticsearchWatch", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/fleetAgentPolicy", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/fleetIntegration", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/fleetIntegrationPolicy", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/fleetOutput", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/fleetServerHost", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaActionConnector", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaAlertingRule", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaDataView", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaImportSavedObjects", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaSecurityRole", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaSlo", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaSpace", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaSyntheticsMonitor", _module)
pulumi.runtime.registerResourceModule("elasticstack", "index/kibanaSyntheticsPrivateLocation", _module)
pulumi.runtime.registerResourcePackage("elasticstack", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:elasticstack") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
