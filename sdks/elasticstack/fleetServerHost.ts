// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FleetServerHost extends pulumi.CustomResource {
    /**
     * Get an existing FleetServerHost resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetServerHostState, opts?: pulumi.CustomResourceOptions): FleetServerHost {
        return new FleetServerHost(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'elasticstack:index/fleetServerHost:FleetServerHost';

    /**
     * Returns true if the given object is an instance of FleetServerHost.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FleetServerHost {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetServerHost.__pulumiType;
    }

    /**
     * Set as default.
     */
    public readonly default!: pulumi.Output<boolean | undefined>;
    /**
     * Unique identifier of the Fleet server host.
     */
    public readonly hostId!: pulumi.Output<string>;
    /**
     * A list of hosts.
     */
    public readonly hosts!: pulumi.Output<string[]>;
    /**
     * The name of the Fleet server host.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a FleetServerHost resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetServerHostArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetServerHostArgs | FleetServerHostState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetServerHostState | undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["hostId"] = state ? state.hostId : undefined;
            resourceInputs["hosts"] = state ? state.hosts : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as FleetServerHostArgs | undefined;
            if ((!args || args.hosts === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["hostId"] = args ? args.hostId : undefined;
            resourceInputs["hosts"] = args ? args.hosts : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FleetServerHost.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FleetServerHost resources.
 */
export interface FleetServerHostState {
    /**
     * Set as default.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Unique identifier of the Fleet server host.
     */
    hostId?: pulumi.Input<string>;
    /**
     * A list of hosts.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Fleet server host.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FleetServerHost resource.
 */
export interface FleetServerHostArgs {
    /**
     * Set as default.
     */
    default?: pulumi.Input<boolean>;
    /**
     * Unique identifier of the Fleet server host.
     */
    hostId?: pulumi.Input<string>;
    /**
     * A list of hosts.
     */
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Fleet server host.
     */
    name?: pulumi.Input<string>;
}
