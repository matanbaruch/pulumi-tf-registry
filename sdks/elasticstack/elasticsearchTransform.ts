// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ElasticsearchTransform extends pulumi.CustomResource {
    /**
     * Get an existing ElasticsearchTransform resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticsearchTransformState, opts?: pulumi.CustomResourceOptions): ElasticsearchTransform {
        return new ElasticsearchTransform(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'elasticstack:index/elasticsearchTransform:ElasticsearchTransform';

    /**
     * Returns true if the given object is an instance of ElasticsearchTransform.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticsearchTransform {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticsearchTransform.__pulumiType;
    }

    /**
     * Specifies whether the transform checkpoint ranges should be optimized for performance.
     */
    public readonly alignCheckpoints!: pulumi.Output<boolean | undefined>;
    /**
     * Defines if dates in the output should be written as ISO formatted string (default) or as millis since epoch.
     */
    public readonly datesAsEpochMillis!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the transform should deduce the destination index mappings from the transform config.
     */
    public readonly deduceMappings!: pulumi.Output<boolean | undefined>;
    /**
     * When true, deferrable validations are not run upon creation, but rather when the transform is started. This behavior may
     * be desired if the source index does not exist until after the transform is created. Default is `false`
     */
    public readonly deferValidation!: pulumi.Output<boolean | undefined>;
    /**
     * Free text description of the transform.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The destination for the transform.
     */
    public readonly destination!: pulumi.Output<outputs.ElasticsearchTransformDestination>;
    /**
     * Specifies a limit on the number of input documents per second. Default (unset) value disables throttling.
     */
    public readonly docsPerSecond!: pulumi.Output<number | undefined>;
    /**
     * Controls wether the transform should be started or stopped. Default is `false` (stopped).
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The interval between checks for changes in the source indices when the transform is running continuously. Defaults to
     * `1m`.
     */
    public readonly frequency!: pulumi.Output<string | undefined>;
    /**
     * The latest method transforms the data by finding the latest document for each unique key. JSON definition expected.
     * Either 'pivot' or 'latest' must be present.
     */
    public readonly latest!: pulumi.Output<string | undefined>;
    /**
     * Defines the initial page size to use for the composite aggregation for each checkpoint. Default is 500.
     */
    public readonly maxPageSearchSize!: pulumi.Output<number | undefined>;
    /**
     * Defines optional transform metadata.
     */
    public readonly metadata!: pulumi.Output<string | undefined>;
    /**
     * Name of the transform you wish to create.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Defines the number of retries on a recoverable failure before the transform task is marked as failed. The default value
     * is the cluster-level setting num_transform_failure_retries.
     */
    public readonly numFailureRetries!: pulumi.Output<number | undefined>;
    /**
     * The pivot method transforms the data by aggregating and grouping it. JSON definition expected. Either 'pivot' or
     * 'latest' must be present.
     */
    public readonly pivot!: pulumi.Output<string | undefined>;
    /**
     * Defines a retention policy for the transform.
     */
    public readonly retentionPolicy!: pulumi.Output<outputs.ElasticsearchTransformRetentionPolicy | undefined>;
    /**
     * The source of the data for the transform.
     */
    public readonly source!: pulumi.Output<outputs.ElasticsearchTransformSource>;
    /**
     * Defines the properties transforms require to run continuously.
     */
    public readonly sync!: pulumi.Output<outputs.ElasticsearchTransformSync | undefined>;
    /**
     * Period to wait for a response from Elastisearch when performing any management operation. If no response is received
     * before the timeout expires, the operation fails and returns an error. Defaults to `30s`.
     */
    public readonly timeout!: pulumi.Output<string | undefined>;
    /**
     * In unattended mode, the transform retries indefinitely in case of an error which means the transform never fails.
     */
    public readonly unattended!: pulumi.Output<boolean | undefined>;

    /**
     * Create a ElasticsearchTransform resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElasticsearchTransformArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticsearchTransformArgs | ElasticsearchTransformState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticsearchTransformState | undefined;
            resourceInputs["alignCheckpoints"] = state ? state.alignCheckpoints : undefined;
            resourceInputs["datesAsEpochMillis"] = state ? state.datesAsEpochMillis : undefined;
            resourceInputs["deduceMappings"] = state ? state.deduceMappings : undefined;
            resourceInputs["deferValidation"] = state ? state.deferValidation : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destination"] = state ? state.destination : undefined;
            resourceInputs["docsPerSecond"] = state ? state.docsPerSecond : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["latest"] = state ? state.latest : undefined;
            resourceInputs["maxPageSearchSize"] = state ? state.maxPageSearchSize : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numFailureRetries"] = state ? state.numFailureRetries : undefined;
            resourceInputs["pivot"] = state ? state.pivot : undefined;
            resourceInputs["retentionPolicy"] = state ? state.retentionPolicy : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["sync"] = state ? state.sync : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["unattended"] = state ? state.unattended : undefined;
        } else {
            const args = argsOrState as ElasticsearchTransformArgs | undefined;
            if ((!args || args.destination === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["alignCheckpoints"] = args ? args.alignCheckpoints : undefined;
            resourceInputs["datesAsEpochMillis"] = args ? args.datesAsEpochMillis : undefined;
            resourceInputs["deduceMappings"] = args ? args.deduceMappings : undefined;
            resourceInputs["deferValidation"] = args ? args.deferValidation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destination"] = args ? args.destination : undefined;
            resourceInputs["docsPerSecond"] = args ? args.docsPerSecond : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["latest"] = args ? args.latest : undefined;
            resourceInputs["maxPageSearchSize"] = args ? args.maxPageSearchSize : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numFailureRetries"] = args ? args.numFailureRetries : undefined;
            resourceInputs["pivot"] = args ? args.pivot : undefined;
            resourceInputs["retentionPolicy"] = args ? args.retentionPolicy : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["sync"] = args ? args.sync : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["unattended"] = args ? args.unattended : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticsearchTransform.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ElasticsearchTransform resources.
 */
export interface ElasticsearchTransformState {
    /**
     * Specifies whether the transform checkpoint ranges should be optimized for performance.
     */
    alignCheckpoints?: pulumi.Input<boolean>;
    /**
     * Defines if dates in the output should be written as ISO formatted string (default) or as millis since epoch.
     */
    datesAsEpochMillis?: pulumi.Input<boolean>;
    /**
     * Specifies whether the transform should deduce the destination index mappings from the transform config.
     */
    deduceMappings?: pulumi.Input<boolean>;
    /**
     * When true, deferrable validations are not run upon creation, but rather when the transform is started. This behavior may
     * be desired if the source index does not exist until after the transform is created. Default is `false`
     */
    deferValidation?: pulumi.Input<boolean>;
    /**
     * Free text description of the transform.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination for the transform.
     */
    destination?: pulumi.Input<inputs.ElasticsearchTransformDestination>;
    /**
     * Specifies a limit on the number of input documents per second. Default (unset) value disables throttling.
     */
    docsPerSecond?: pulumi.Input<number>;
    /**
     * Controls wether the transform should be started or stopped. Default is `false` (stopped).
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The interval between checks for changes in the source indices when the transform is running continuously. Defaults to
     * `1m`.
     */
    frequency?: pulumi.Input<string>;
    /**
     * The latest method transforms the data by finding the latest document for each unique key. JSON definition expected.
     * Either 'pivot' or 'latest' must be present.
     */
    latest?: pulumi.Input<string>;
    /**
     * Defines the initial page size to use for the composite aggregation for each checkpoint. Default is 500.
     */
    maxPageSearchSize?: pulumi.Input<number>;
    /**
     * Defines optional transform metadata.
     */
    metadata?: pulumi.Input<string>;
    /**
     * Name of the transform you wish to create.
     */
    name?: pulumi.Input<string>;
    /**
     * Defines the number of retries on a recoverable failure before the transform task is marked as failed. The default value
     * is the cluster-level setting num_transform_failure_retries.
     */
    numFailureRetries?: pulumi.Input<number>;
    /**
     * The pivot method transforms the data by aggregating and grouping it. JSON definition expected. Either 'pivot' or
     * 'latest' must be present.
     */
    pivot?: pulumi.Input<string>;
    /**
     * Defines a retention policy for the transform.
     */
    retentionPolicy?: pulumi.Input<inputs.ElasticsearchTransformRetentionPolicy>;
    /**
     * The source of the data for the transform.
     */
    source?: pulumi.Input<inputs.ElasticsearchTransformSource>;
    /**
     * Defines the properties transforms require to run continuously.
     */
    sync?: pulumi.Input<inputs.ElasticsearchTransformSync>;
    /**
     * Period to wait for a response from Elastisearch when performing any management operation. If no response is received
     * before the timeout expires, the operation fails and returns an error. Defaults to `30s`.
     */
    timeout?: pulumi.Input<string>;
    /**
     * In unattended mode, the transform retries indefinitely in case of an error which means the transform never fails.
     */
    unattended?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ElasticsearchTransform resource.
 */
export interface ElasticsearchTransformArgs {
    /**
     * Specifies whether the transform checkpoint ranges should be optimized for performance.
     */
    alignCheckpoints?: pulumi.Input<boolean>;
    /**
     * Defines if dates in the output should be written as ISO formatted string (default) or as millis since epoch.
     */
    datesAsEpochMillis?: pulumi.Input<boolean>;
    /**
     * Specifies whether the transform should deduce the destination index mappings from the transform config.
     */
    deduceMappings?: pulumi.Input<boolean>;
    /**
     * When true, deferrable validations are not run upon creation, but rather when the transform is started. This behavior may
     * be desired if the source index does not exist until after the transform is created. Default is `false`
     */
    deferValidation?: pulumi.Input<boolean>;
    /**
     * Free text description of the transform.
     */
    description?: pulumi.Input<string>;
    /**
     * The destination for the transform.
     */
    destination: pulumi.Input<inputs.ElasticsearchTransformDestination>;
    /**
     * Specifies a limit on the number of input documents per second. Default (unset) value disables throttling.
     */
    docsPerSecond?: pulumi.Input<number>;
    /**
     * Controls wether the transform should be started or stopped. Default is `false` (stopped).
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The interval between checks for changes in the source indices when the transform is running continuously. Defaults to
     * `1m`.
     */
    frequency?: pulumi.Input<string>;
    /**
     * The latest method transforms the data by finding the latest document for each unique key. JSON definition expected.
     * Either 'pivot' or 'latest' must be present.
     */
    latest?: pulumi.Input<string>;
    /**
     * Defines the initial page size to use for the composite aggregation for each checkpoint. Default is 500.
     */
    maxPageSearchSize?: pulumi.Input<number>;
    /**
     * Defines optional transform metadata.
     */
    metadata?: pulumi.Input<string>;
    /**
     * Name of the transform you wish to create.
     */
    name?: pulumi.Input<string>;
    /**
     * Defines the number of retries on a recoverable failure before the transform task is marked as failed. The default value
     * is the cluster-level setting num_transform_failure_retries.
     */
    numFailureRetries?: pulumi.Input<number>;
    /**
     * The pivot method transforms the data by aggregating and grouping it. JSON definition expected. Either 'pivot' or
     * 'latest' must be present.
     */
    pivot?: pulumi.Input<string>;
    /**
     * Defines a retention policy for the transform.
     */
    retentionPolicy?: pulumi.Input<inputs.ElasticsearchTransformRetentionPolicy>;
    /**
     * The source of the data for the transform.
     */
    source: pulumi.Input<inputs.ElasticsearchTransformSource>;
    /**
     * Defines the properties transforms require to run continuously.
     */
    sync?: pulumi.Input<inputs.ElasticsearchTransformSync>;
    /**
     * Period to wait for a response from Elastisearch when performing any management operation. If no response is received
     * before the timeout expires, the operation fails and returns an error. Defaults to `30s`.
     */
    timeout?: pulumi.Input<string>;
    /**
     * In unattended mode, the transform retries indefinitely in case of an error which means the transform never fails.
     */
    unattended?: pulumi.Input<boolean>;
}
