// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getElasticsearchIngestProcessorAppend(args: GetElasticsearchIngestProcessorAppendArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticsearchIngestProcessorAppendResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/getElasticsearchIngestProcessorAppend:getElasticsearchIngestProcessorAppend", {
        "allowDuplicates": args.allowDuplicates,
        "description": args.description,
        "field": args.field,
        "if": args.if,
        "ignoreFailure": args.ignoreFailure,
        "mediaType": args.mediaType,
        "onFailures": args.onFailures,
        "tag": args.tag,
        "values": args.values,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getElasticsearchIngestProcessorAppend.
 */
export interface GetElasticsearchIngestProcessorAppendArgs {
    allowDuplicates?: boolean;
    description?: string;
    field: string;
    if?: string;
    ignoreFailure?: boolean;
    mediaType?: string;
    onFailures?: string[];
    tag?: string;
    values: string[];
}

/**
 * A collection of values returned by getElasticsearchIngestProcessorAppend.
 */
export interface GetElasticsearchIngestProcessorAppendResult {
    readonly allowDuplicates?: boolean;
    readonly description?: string;
    readonly field: string;
    readonly id: string;
    readonly if?: string;
    readonly ignoreFailure?: boolean;
    readonly json: string;
    readonly mediaType?: string;
    readonly onFailures?: string[];
    readonly tag?: string;
    readonly values: string[];
}
export function getElasticsearchIngestProcessorAppendOutput(args: GetElasticsearchIngestProcessorAppendOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetElasticsearchIngestProcessorAppendResult> {
    return pulumi.output(args).apply((a: any) => getElasticsearchIngestProcessorAppend(a, opts))
}

/**
 * A collection of arguments for invoking getElasticsearchIngestProcessorAppend.
 */
export interface GetElasticsearchIngestProcessorAppendOutputArgs {
    allowDuplicates?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    field: pulumi.Input<string>;
    if?: pulumi.Input<string>;
    ignoreFailure?: pulumi.Input<boolean>;
    mediaType?: pulumi.Input<string>;
    onFailures?: pulumi.Input<pulumi.Input<string>[]>;
    tag?: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}
