// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplications(args: GetApplicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("davinci:index/getApplications:getApplications", {
        "environmentId": args.environmentId,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplications.
 */
export interface GetApplicationsArgs {
    environmentId: string;
    id?: string;
    timeouts?: inputs.GetApplicationsTimeouts;
}

/**
 * A collection of values returned by getApplications.
 */
export interface GetApplicationsResult {
    readonly applications: outputs.GetApplicationsApplication[];
    readonly environmentId: string;
    readonly id: string;
    readonly timeouts?: outputs.GetApplicationsTimeouts;
}
export function getApplicationsOutput(args: GetApplicationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationsResult> {
    return pulumi.output(args).apply((a: any) => getApplications(a, opts))
}

/**
 * A collection of arguments for invoking getApplications.
 */
export interface GetApplicationsOutputArgs {
    environmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetApplicationsTimeoutsArgs>;
}
