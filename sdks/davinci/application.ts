// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'davinci:index/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * A boolean that specifies whether the API key is enabled for the application. Defaults to `true`.
     */
    public readonly apiKeyEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A map of strings that represents the application's API Key.
     */
    public /*out*/ readonly apiKeys!: pulumi.Output<{[key: string]: string}>;
    /**
     * Resource creation date as epoch.
     */
    public /*out*/ readonly createdDate!: pulumi.Output<number>;
    /**
     * An ID that represents the customer tenant.
     */
    public /*out*/ readonly customerId!: pulumi.Output<string>;
    /**
     * The ID of the PingOne environment to create the DaVinci application. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    public readonly environmentId!: pulumi.Output<string>;
    /**
     * Application Metadata.
     */
    public /*out*/ readonly metadata!: pulumi.Output<{[key: string]: string}>;
    /**
     * The application name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A single list item specifying OIDC/OAuth 2.0 configuration.
     */
    public readonly oauth!: pulumi.Output<outputs.ApplicationOauth | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly policies!: pulumi.Output<outputs.ApplicationPolicy[] | undefined>;
    /**
     * **Deprecation notice**: SAML configuration is now deprecated in the service and will be removed in the next major
     * release. A single list item that specifies SAML configuration.
     *
     * @deprecated Deprecated
     */
    public readonly saml!: pulumi.Output<outputs.ApplicationSaml | undefined>;
    /**
     * Application User Pools.
     */
    public /*out*/ readonly userPools!: pulumi.Output<{[key: string]: string}>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major
     * release. A single object that describes user portal settings.
     *
     * @deprecated Deprecated
     */
    public readonly userPortal!: pulumi.Output<outputs.ApplicationUserPortal | undefined>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["apiKeyEnabled"] = state ? state.apiKeyEnabled : undefined;
            resourceInputs["apiKeys"] = state ? state.apiKeys : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["customerId"] = state ? state.customerId : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oauth"] = state ? state.oauth : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["saml"] = state ? state.saml : undefined;
            resourceInputs["userPools"] = state ? state.userPools : undefined;
            resourceInputs["userPortal"] = state ? state.userPortal : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            if ((!args || args.environmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            resourceInputs["apiKeyEnabled"] = args ? args.apiKeyEnabled : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oauth"] = args ? args.oauth : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["saml"] = args ? args.saml : undefined;
            resourceInputs["userPortal"] = args ? args.userPortal : undefined;
            resourceInputs["apiKeys"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["customerId"] = undefined /*out*/;
            resourceInputs["metadata"] = undefined /*out*/;
            resourceInputs["userPools"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Application.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * A boolean that specifies whether the API key is enabled for the application. Defaults to `true`.
     */
    apiKeyEnabled?: pulumi.Input<boolean>;
    /**
     * A map of strings that represents the application's API Key.
     */
    apiKeys?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource creation date as epoch.
     */
    createdDate?: pulumi.Input<number>;
    /**
     * An ID that represents the customer tenant.
     */
    customerId?: pulumi.Input<string>;
    /**
     * The ID of the PingOne environment to create the DaVinci application. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Application Metadata.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The application name.
     */
    name?: pulumi.Input<string>;
    /**
     * A single list item specifying OIDC/OAuth 2.0 configuration.
     */
    oauth?: pulumi.Input<inputs.ApplicationOauth>;
    /**
     * @deprecated Deprecated
     */
    policies?: pulumi.Input<pulumi.Input<inputs.ApplicationPolicy>[]>;
    /**
     * **Deprecation notice**: SAML configuration is now deprecated in the service and will be removed in the next major
     * release. A single list item that specifies SAML configuration.
     *
     * @deprecated Deprecated
     */
    saml?: pulumi.Input<inputs.ApplicationSaml>;
    /**
     * Application User Pools.
     */
    userPools?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major
     * release. A single object that describes user portal settings.
     *
     * @deprecated Deprecated
     */
    userPortal?: pulumi.Input<inputs.ApplicationUserPortal>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * A boolean that specifies whether the API key is enabled for the application. Defaults to `true`.
     */
    apiKeyEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the PingOne environment to create the DaVinci application. Must be a valid PingOne resource ID. This field is
     * immutable and will trigger a replace plan if changed.
     */
    environmentId: pulumi.Input<string>;
    /**
     * The application name.
     */
    name?: pulumi.Input<string>;
    /**
     * A single list item specifying OIDC/OAuth 2.0 configuration.
     */
    oauth?: pulumi.Input<inputs.ApplicationOauth>;
    /**
     * @deprecated Deprecated
     */
    policies?: pulumi.Input<pulumi.Input<inputs.ApplicationPolicy>[]>;
    /**
     * **Deprecation notice**: SAML configuration is now deprecated in the service and will be removed in the next major
     * release. A single list item that specifies SAML configuration.
     *
     * @deprecated Deprecated
     */
    saml?: pulumi.Input<inputs.ApplicationSaml>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major
     * release. A single object that describes user portal settings.
     *
     * @deprecated Deprecated
     */
    userPortal?: pulumi.Input<inputs.ApplicationUserPortal>;
}
