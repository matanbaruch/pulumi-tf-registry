// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("davinci:index/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "environmentId": args.environmentId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    applicationId?: string;
    environmentId: string;
    id?: string;
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    readonly apiKeyEnabled: boolean;
    readonly apiKeys: {[key: string]: string};
    readonly applicationId: string;
    readonly createdDate: number;
    readonly customerId: string;
    readonly environmentId: string;
    readonly id: string;
    readonly metadata: {[key: string]: string};
    readonly name: string;
    readonly oauths: outputs.GetApplicationOauth[];
    readonly policies: outputs.GetApplicationPolicy[];
    /**
     * @deprecated Deprecated
     */
    readonly samls: outputs.GetApplicationSaml[];
    readonly userPools: {[key: string]: string};
    /**
     * @deprecated Deprecated
     */
    readonly userPortals: outputs.GetApplicationUserPortal[];
}
export function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationResult> {
    return pulumi.output(args).apply((a: any) => getApplication(a, opts))
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    applicationId?: pulumi.Input<string>;
    environmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
