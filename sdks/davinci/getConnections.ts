// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnections(args: GetConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("davinci:index/getConnections:getConnections", {
        "connectorIds": args.connectorIds,
        "environmentId": args.environmentId,
        "id": args.id,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsArgs {
    connectorIds?: string[];
    environmentId: string;
    id?: string;
    timeouts?: inputs.GetConnectionsTimeouts;
}

/**
 * A collection of values returned by getConnections.
 */
export interface GetConnectionsResult {
    readonly connections: outputs.GetConnectionsConnection[];
    readonly connectorIds?: string[];
    readonly environmentId: string;
    readonly id: string;
    readonly timeouts?: outputs.GetConnectionsTimeouts;
}
export function getConnectionsOutput(args: GetConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getConnections(a, opts))
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsOutputArgs {
    connectorIds?: pulumi.Input<pulumi.Input<string>[]>;
    environmentId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetConnectionsTimeoutsArgs>;
}
