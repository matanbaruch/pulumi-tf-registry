// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ApplicationFlowPolicyPolicyFlow {
    /**
     * A list of IP CIDR entries that are allowed use of the application policy flow.
     */
    allowedIpLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the flow that this policy will use.
     */
    flowId: pulumi.Input<string>;
    /**
     * A list of node ids used by analytics for tracking user interaction.
     */
    successNodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Version of the flow that this policy will use. Use `-1` for the latest version.
     */
    versionId: pulumi.Input<number>;
    /**
     * If multiple flows are specified, the weight determines the probability of the flow being used. The weights across all policy flows must add up to `100`.
     */
    weight?: pulumi.Input<number>;
}

export interface ApplicationOauth {
    /**
     * A boolean that specifies whether OIDC/OAuth 2.0 settings are enabled for the application. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A single list item specifying OIDC/OAuth 2.0 configuration values.
     */
    values?: pulumi.Input<inputs.ApplicationOauthValues>;
}

export interface ApplicationOauthValues {
    /**
     * Allowed grants for the application. Available grants are `authorizationCode`, `clientCredentials`, `implicit`.
     */
    allowedGrants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allowed scopes for the application. Available scopes are `openid`, `profile`, `flow_analytics`.
     */
    allowedScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The client secret for the OIDC application.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * A boolean that enables/disables the OAuth 2.0 configuration for the application. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A boolean that specifies whether to enforce receiving signed requests.
     */
    enforceSignedRequestOpenid?: pulumi.Input<boolean>;
    /**
     * Logout URLs for the application.
     */
    logoutUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Redirect URLs for the application.
     */
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A string that specifies service provider (SP) JWKS keys to verify the authorization request signature.
     */
    spJwksOpenid?: pulumi.Input<string>;
    /**
     * A string that specifies a service provider (SP) JWKS URL.
     */
    spJwksUrl?: pulumi.Input<string>;
}

export interface ApplicationPolicy {
    /**
     * Creation epoch of policy.
     */
    createdDate?: pulumi.Input<number>;
    /**
     * Policy friendly name
     */
    name?: pulumi.Input<string>;
    /**
     * Set of weighted flows that this application will use
     */
    policyFlows?: pulumi.Input<pulumi.Input<inputs.ApplicationPolicyPolicyFlow>[]>;
    /**
     * Generated identifier of a created policy.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Policy status. Valid values are: enabled, disabled Defaults to `enabled`.
     */
    status?: pulumi.Input<string>;
}

export interface ApplicationPolicyPolicyFlow {
    /**
     * Identifier of the flow that this policy will use.
     */
    flowId?: pulumi.Input<string>;
    /**
     * List of node ids used by analytics for tracking user interaction.
     */
    successNodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Version of the flow that this policy will use. Use -1 for latest
     */
    versionId?: pulumi.Input<number>;
    /**
     * If multiple flows are specified, the weight determines the probability of the flow being used. This must add up to 100
     */
    weight?: pulumi.Input<number>;
}

export interface ApplicationSaml {
    /**
     * SAML configuration
     */
    values?: pulumi.Input<inputs.ApplicationSamlValues>;
}

export interface ApplicationSamlValues {
    /**
     * Field: 'Audience' in UI. This is now deprecated in the service and will be removed from the provider in the next major release.
     */
    audience?: pulumi.Input<string>;
    /**
     * Set to true if using saml block. This is now deprecated in the service and will be removed from the provider in the next major release.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Field: 'Enforce Receiving Signed Requests' in UI. This is now deprecated in the service and will be removed from the provider in the next major release.
     */
    enforceSignedRequest?: pulumi.Input<boolean>;
    /**
     * The redirect URI for the SAML application. This is now deprecated in the service and will be removed from the provider in the next major release.
     */
    redirectUri?: pulumi.Input<string>;
    /**
     * This is now deprecated in the service and will be removed from the provider in the next major release.
     */
    spCert?: pulumi.Input<string>;
}

export interface ApplicationUserPortal {
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    addAuthMethodTitle?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    credPageSubtitle?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    credPageTitle?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    flowTimeoutSeconds?: pulumi.Input<number>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    nameAuthMethodTitle?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    nameConfirmBtnText?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    removeAuthMethodTitle?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    removeBodyMessage?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    removeCancelBtnText?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    removeConfirmBtnText?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    removeMessage?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release. Defaults to `false`.
     *
     * @deprecated Deprecated
     */
    showLogoutButton?: pulumi.Input<boolean>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release. Defaults to `false`.
     *
     * @deprecated Deprecated
     */
    showMfaButton?: pulumi.Input<boolean>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release. Defaults to `false`.
     *
     * @deprecated Deprecated
     */
    showUserInfo?: pulumi.Input<boolean>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release. Defaults to `false`.
     *
     * @deprecated Deprecated
     */
    showVariables?: pulumi.Input<boolean>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    upTitle?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    updateBodyMessage?: pulumi.Input<string>;
    /**
     * **Deprecation notice** This is now deprecated in the service and will be removed from the provider in the next major release.
     *
     * @deprecated Deprecated
     */
    updateMessage?: pulumi.Input<string>;
}

export interface ConnectionProperty {
    /**
     * The name of the property.
     */
    name: pulumi.Input<string>;
    /**
     * Type of the property. This is used to cast the value to the correct type. Must be: `string`, `number`, `boolean` or `json`. Defaults to `string`.
     */
    type?: pulumi.Input<string>;
    /**
     * The value of the property as string.  Use in conjunction with `type` to cast the value to the correct type.  For example, a number value should be entered as a string and `type` set to `number`.  JSON in string form should be used for complex types.
     */
    value: pulumi.Input<string>;
}

export interface FlowConnectionLink {
    /**
     * A string that specifies the connector ID that will be applied when flow is imported.
     */
    id: pulumi.Input<string>;
    /**
     * The connector name.  If `replace_import_connection_id` is also specified, this value is used when the flow is imported.  If `replace_import_connection_id` is not specified, the name must match that of the connector in the import file, so the connector ID in the `id` parameter can be updated.
     */
    name: pulumi.Input<string>;
    /**
     * Connection ID of the connector in the import to replace with the connector described in `id` and `name` parameters.  This can be found in the source system in the "Connectors" menu, but is also at the following path in the JSON file: `[enabledGraphData|graphData].elements.nodes.data.connectionId`.
     */
    replaceImportConnectionId?: pulumi.Input<string>;
}

export interface FlowFlowVariable {
    /**
     * The variable context.  Should always return `flow`.
     */
    context?: pulumi.Input<string>;
    /**
     * The flow ID that the variable belongs to, which should match the ID of this resource.
     */
    flowId?: pulumi.Input<string>;
    /**
     * The DaVinci internal ID of the variable.
     */
    id?: pulumi.Input<string>;
    /**
     * The user friendly name of the variable in the UI.
     */
    name?: pulumi.Input<string>;
    /**
     * The variable's data type.  Expected to be one of `string`, `number`, `boolean`, `object`.
     */
    type?: pulumi.Input<string>;
}

export interface FlowSubflowLink {
    /**
     * A string that specifies the subflow ID that will be applied when flow is imported.
     */
    id: pulumi.Input<string>;
    /**
     * The subflow name.  If `replace_import_subflow_id` is also specified, this value is used when the flow is imported.  If `replace_import_subflow_id` is not specified, the name must match that of the connector in the import file, so the connector ID in the `id` parameter can be updated.
     */
    name: pulumi.Input<string>;
    /**
     * Subflow ID of the subflow in the import to replace with the subflow described in `id` and `name` parameters.  This can be found in the source system in the "Connectors" menu, but is also at the following path in the JSON file: `[enabledGraphData|graphData].elements.nodes.data.connectionId`.
     */
    replaceImportSubflowId?: pulumi.Input<string>;
}

export interface GetApplicationsTimeouts {
    read?: string;
}

export interface GetApplicationsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetConnectionTimeouts {
    read?: string;
}

export interface GetConnectionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetConnectionsTimeouts {
    read?: string;
}

export interface GetConnectionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}
