// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NetworkingPortSecgroupAssociateV2 extends pulumi.CustomResource {
    /**
     * Get an existing NetworkingPortSecgroupAssociateV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkingPortSecgroupAssociateV2State, opts?: pulumi.CustomResourceOptions): NetworkingPortSecgroupAssociateV2 {
        return new NetworkingPortSecgroupAssociateV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nhncloud:index/networkingPortSecgroupAssociateV2:NetworkingPortSecgroupAssociateV2';

    /**
     * Returns true if the given object is an instance of NetworkingPortSecgroupAssociateV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkingPortSecgroupAssociateV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkingPortSecgroupAssociateV2.__pulumiType;
    }

    public /*out*/ readonly allSecurityGroupIds!: pulumi.Output<string[]>;
    public readonly enforce!: pulumi.Output<boolean | undefined>;
    public readonly portId!: pulumi.Output<string>;
    public readonly region!: pulumi.Output<string>;
    public readonly securityGroupIds!: pulumi.Output<string[]>;

    /**
     * Create a NetworkingPortSecgroupAssociateV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkingPortSecgroupAssociateV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkingPortSecgroupAssociateV2Args | NetworkingPortSecgroupAssociateV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkingPortSecgroupAssociateV2State | undefined;
            resourceInputs["allSecurityGroupIds"] = state ? state.allSecurityGroupIds : undefined;
            resourceInputs["enforce"] = state ? state.enforce : undefined;
            resourceInputs["portId"] = state ? state.portId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
        } else {
            const args = argsOrState as NetworkingPortSecgroupAssociateV2Args | undefined;
            if ((!args || args.portId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'portId'");
            }
            if ((!args || args.securityGroupIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupIds'");
            }
            resourceInputs["enforce"] = args ? args.enforce : undefined;
            resourceInputs["portId"] = args ? args.portId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["allSecurityGroupIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkingPortSecgroupAssociateV2.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkingPortSecgroupAssociateV2 resources.
 */
export interface NetworkingPortSecgroupAssociateV2State {
    allSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    enforce?: pulumi.Input<boolean>;
    portId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a NetworkingPortSecgroupAssociateV2 resource.
 */
export interface NetworkingPortSecgroupAssociateV2Args {
    enforce?: pulumi.Input<boolean>;
    portId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
}
