// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkingSubnetpoolV2(args?: GetNetworkingSubnetpoolV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkingSubnetpoolV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getNetworkingSubnetpoolV2:getNetworkingSubnetpoolV2", {
        "addressScopeId": args.addressScopeId,
        "defaultPrefixlen": args.defaultPrefixlen,
        "defaultQuota": args.defaultQuota,
        "description": args.description,
        "id": args.id,
        "ipVersion": args.ipVersion,
        "isDefault": args.isDefault,
        "maxPrefixlen": args.maxPrefixlen,
        "minPrefixlen": args.minPrefixlen,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
        "shared": args.shared,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingSubnetpoolV2.
 */
export interface GetNetworkingSubnetpoolV2Args {
    addressScopeId?: string;
    defaultPrefixlen?: number;
    defaultQuota?: number;
    description?: string;
    id?: string;
    ipVersion?: number;
    isDefault?: boolean;
    maxPrefixlen?: number;
    minPrefixlen?: number;
    name?: string;
    projectId?: string;
    region?: string;
    shared?: boolean;
    tags?: string[];
}

/**
 * A collection of values returned by getNetworkingSubnetpoolV2.
 */
export interface GetNetworkingSubnetpoolV2Result {
    readonly addressScopeId: string;
    readonly allTags: string[];
    readonly createdAt: string;
    readonly defaultPrefixlen: number;
    readonly defaultQuota: number;
    readonly description: string;
    readonly id: string;
    readonly ipVersion: number;
    readonly isDefault: boolean;
    readonly maxPrefixlen: number;
    readonly minPrefixlen: number;
    readonly name: string;
    readonly prefixes: string[];
    readonly projectId: string;
    readonly region: string;
    readonly revisionNumber: number;
    readonly shared: boolean;
    readonly tags?: string[];
    readonly updatedAt: string;
}
export function getNetworkingSubnetpoolV2Output(args?: GetNetworkingSubnetpoolV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingSubnetpoolV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkingSubnetpoolV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingSubnetpoolV2.
 */
export interface GetNetworkingSubnetpoolV2OutputArgs {
    addressScopeId?: pulumi.Input<string>;
    defaultPrefixlen?: pulumi.Input<number>;
    defaultQuota?: pulumi.Input<number>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipVersion?: pulumi.Input<number>;
    isDefault?: pulumi.Input<boolean>;
    maxPrefixlen?: pulumi.Input<number>;
    minPrefixlen?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    shared?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
