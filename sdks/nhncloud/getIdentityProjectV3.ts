// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityProjectV3(args?: GetIdentityProjectV3Args, opts?: pulumi.InvokeOptions): Promise<GetIdentityProjectV3Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getIdentityProjectV3:getIdentityProjectV3", {
        "domainId": args.domainId,
        "enabled": args.enabled,
        "id": args.id,
        "isDomain": args.isDomain,
        "name": args.name,
        "parentId": args.parentId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityProjectV3.
 */
export interface GetIdentityProjectV3Args {
    domainId?: string;
    enabled?: boolean;
    id?: string;
    isDomain?: boolean;
    name?: string;
    parentId?: string;
    region?: string;
}

/**
 * A collection of values returned by getIdentityProjectV3.
 */
export interface GetIdentityProjectV3Result {
    readonly description: string;
    readonly domainId: string;
    readonly enabled?: boolean;
    readonly id: string;
    readonly isDomain?: boolean;
    readonly name?: string;
    readonly parentId?: string;
    readonly region: string;
    readonly tags: string[];
}
export function getIdentityProjectV3Output(args?: GetIdentityProjectV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityProjectV3Result> {
    return pulumi.output(args).apply((a: any) => getIdentityProjectV3(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityProjectV3.
 */
export interface GetIdentityProjectV3OutputArgs {
    domainId?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    isDomain?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
