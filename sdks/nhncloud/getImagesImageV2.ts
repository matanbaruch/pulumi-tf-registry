// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getImagesImageV2(args?: GetImagesImageV2Args, opts?: pulumi.InvokeOptions): Promise<GetImagesImageV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getImagesImageV2:getImagesImageV2", {
        "hidden": args.hidden,
        "id": args.id,
        "memberStatus": args.memberStatus,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "nameRegex": args.nameRegex,
        "owner": args.owner,
        "properties": args.properties,
        "region": args.region,
        "sizeMax": args.sizeMax,
        "sizeMin": args.sizeMin,
        "sortDirection": args.sortDirection,
        "sortKey": args.sortKey,
        "tag": args.tag,
        "tags": args.tags,
        "visibility": args.visibility,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImagesImageV2.
 */
export interface GetImagesImageV2Args {
    hidden?: boolean;
    id?: string;
    memberStatus?: string;
    mostRecent?: boolean;
    name?: string;
    nameRegex?: string;
    owner?: string;
    properties?: {[key: string]: string};
    region?: string;
    sizeMax?: number;
    sizeMin?: number;
    sortDirection?: string;
    sortKey?: string;
    tag?: string;
    tags?: string[];
    visibility?: string;
}

/**
 * A collection of values returned by getImagesImageV2.
 */
export interface GetImagesImageV2Result {
    readonly checksum: string;
    readonly containerFormat: string;
    readonly createdAt: string;
    readonly diskFormat: string;
    readonly file: string;
    readonly hidden?: boolean;
    readonly id: string;
    readonly memberStatus?: string;
    readonly metadata: {[key: string]: string};
    readonly minDiskGb: number;
    readonly minRamMb: number;
    readonly mostRecent?: boolean;
    readonly name?: string;
    readonly nameRegex?: string;
    readonly owner?: string;
    readonly properties?: {[key: string]: string};
    readonly protected: boolean;
    readonly region: string;
    readonly schema: string;
    readonly sizeBytes: number;
    readonly sizeMax?: number;
    readonly sizeMin?: number;
    readonly sortDirection?: string;
    readonly sortKey?: string;
    readonly tag?: string;
    readonly tags: string[];
    readonly updatedAt: string;
    readonly visibility?: string;
}
export function getImagesImageV2Output(args?: GetImagesImageV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesImageV2Result> {
    return pulumi.output(args).apply((a: any) => getImagesImageV2(a, opts))
}

/**
 * A collection of arguments for invoking getImagesImageV2.
 */
export interface GetImagesImageV2OutputArgs {
    hidden?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    memberStatus?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    nameRegex?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    region?: pulumi.Input<string>;
    sizeMax?: pulumi.Input<number>;
    sizeMin?: pulumi.Input<number>;
    sortDirection?: pulumi.Input<string>;
    sortKey?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    visibility?: pulumi.Input<string>;
}
