// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlockstorageQuotasetV3(args: GetBlockstorageQuotasetV3Args, opts?: pulumi.InvokeOptions): Promise<GetBlockstorageQuotasetV3Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getBlockstorageQuotasetV3:getBlockstorageQuotasetV3", {
        "id": args.id,
        "projectId": args.projectId,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockstorageQuotasetV3.
 */
export interface GetBlockstorageQuotasetV3Args {
    id?: string;
    projectId: string;
    region?: string;
}

/**
 * A collection of values returned by getBlockstorageQuotasetV3.
 */
export interface GetBlockstorageQuotasetV3Result {
    readonly backupGigabytes: number;
    readonly backups: number;
    readonly gigabytes: number;
    readonly groups: number;
    readonly id: string;
    readonly perVolumeGigabytes: number;
    readonly projectId: string;
    readonly region: string;
    readonly snapshots: number;
    readonly volumeTypeQuota: {[key: string]: string};
    readonly volumes: number;
}
export function getBlockstorageQuotasetV3Output(args: GetBlockstorageQuotasetV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockstorageQuotasetV3Result> {
    return pulumi.output(args).apply((a: any) => getBlockstorageQuotasetV3(a, opts))
}

/**
 * A collection of arguments for invoking getBlockstorageQuotasetV3.
 */
export interface GetBlockstorageQuotasetV3OutputArgs {
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
