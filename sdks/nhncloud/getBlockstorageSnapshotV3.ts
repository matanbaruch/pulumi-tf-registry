// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlockstorageSnapshotV3(args?: GetBlockstorageSnapshotV3Args, opts?: pulumi.InvokeOptions): Promise<GetBlockstorageSnapshotV3Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getBlockstorageSnapshotV3:getBlockstorageSnapshotV3", {
        "id": args.id,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "region": args.region,
        "status": args.status,
        "volumeId": args.volumeId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockstorageSnapshotV3.
 */
export interface GetBlockstorageSnapshotV3Args {
    id?: string;
    mostRecent?: boolean;
    name?: string;
    region?: string;
    status?: string;
    volumeId?: string;
}

/**
 * A collection of values returned by getBlockstorageSnapshotV3.
 */
export interface GetBlockstorageSnapshotV3Result {
    readonly description: string;
    readonly id: string;
    readonly metadata: {[key: string]: string};
    readonly mostRecent?: boolean;
    readonly name: string;
    readonly region: string;
    readonly size: number;
    readonly status: string;
    readonly volumeId: string;
}
export function getBlockstorageSnapshotV3Output(args?: GetBlockstorageSnapshotV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockstorageSnapshotV3Result> {
    return pulumi.output(args).apply((a: any) => getBlockstorageSnapshotV3(a, opts))
}

/**
 * A collection of arguments for invoking getBlockstorageSnapshotV3.
 */
export interface GetBlockstorageSnapshotV3OutputArgs {
    id?: pulumi.Input<string>;
    mostRecent?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    volumeId?: pulumi.Input<string>;
}
