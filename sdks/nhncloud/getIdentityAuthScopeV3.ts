// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityAuthScopeV3(args: GetIdentityAuthScopeV3Args, opts?: pulumi.InvokeOptions): Promise<GetIdentityAuthScopeV3Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getIdentityAuthScopeV3:getIdentityAuthScopeV3", {
        "id": args.id,
        "name": args.name,
        "region": args.region,
        "setTokenId": args.setTokenId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityAuthScopeV3.
 */
export interface GetIdentityAuthScopeV3Args {
    id?: string;
    name: string;
    region?: string;
    setTokenId?: boolean;
}

/**
 * A collection of values returned by getIdentityAuthScopeV3.
 */
export interface GetIdentityAuthScopeV3Result {
    readonly domainId: string;
    readonly domainName: string;
    readonly id: string;
    readonly name: string;
    readonly projectDomainId: string;
    readonly projectDomainName: string;
    readonly projectId: string;
    readonly projectName: string;
    readonly region: string;
    readonly roles: outputs.GetIdentityAuthScopeV3Role[];
    readonly serviceCatalogs: outputs.GetIdentityAuthScopeV3ServiceCatalog[];
    readonly setTokenId?: boolean;
    readonly tokenId: string;
    readonly userDomainId: string;
    readonly userDomainName: string;
    readonly userId: string;
    readonly userName: string;
}
export function getIdentityAuthScopeV3Output(args: GetIdentityAuthScopeV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityAuthScopeV3Result> {
    return pulumi.output(args).apply((a: any) => getIdentityAuthScopeV3(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityAuthScopeV3.
 */
export interface GetIdentityAuthScopeV3OutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    setTokenId?: pulumi.Input<boolean>;
}
