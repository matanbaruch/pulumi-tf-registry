// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkingNetworkV2(args?: GetNetworkingNetworkV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkingNetworkV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getNetworkingNetworkV2:getNetworkingNetworkV2", {
        "description": args.description,
        "external": args.external,
        "id": args.id,
        "matchingSubnetCidr": args.matchingSubnetCidr,
        "mtu": args.mtu,
        "name": args.name,
        "networkId": args.networkId,
        "region": args.region,
        "status": args.status,
        "tags": args.tags,
        "tenantId": args.tenantId,
        "transparentVlan": args.transparentVlan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingNetworkV2.
 */
export interface GetNetworkingNetworkV2Args {
    description?: string;
    external?: boolean;
    id?: string;
    matchingSubnetCidr?: string;
    mtu?: number;
    name?: string;
    networkId?: string;
    region?: string;
    status?: string;
    tags?: string[];
    tenantId?: string;
    transparentVlan?: boolean;
}

/**
 * A collection of values returned by getNetworkingNetworkV2.
 */
export interface GetNetworkingNetworkV2Result {
    readonly adminStateUp: string;
    readonly allTags: string[];
    readonly availabilityZoneHints: string[];
    readonly description?: string;
    readonly dnsDomain: string;
    readonly external?: boolean;
    readonly id: string;
    readonly matchingSubnetCidr?: string;
    readonly mtu?: number;
    readonly name?: string;
    readonly networkId?: string;
    readonly region: string;
    readonly segments: outputs.GetNetworkingNetworkV2Segment[];
    readonly shared: string;
    readonly status?: string;
    readonly subnets: string[];
    readonly tags?: string[];
    readonly tenantId?: string;
    readonly transparentVlan?: boolean;
}
export function getNetworkingNetworkV2Output(args?: GetNetworkingNetworkV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingNetworkV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkingNetworkV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingNetworkV2.
 */
export interface GetNetworkingNetworkV2OutputArgs {
    description?: pulumi.Input<string>;
    external?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    matchingSubnetCidr?: pulumi.Input<string>;
    mtu?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    networkId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    tenantId?: pulumi.Input<string>;
    transparentVlan?: pulumi.Input<boolean>;
}
