// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSharedfilesystemShareV2(args?: GetSharedfilesystemShareV2Args, opts?: pulumi.InvokeOptions): Promise<GetSharedfilesystemShareV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getSharedfilesystemShareV2:getSharedfilesystemShareV2", {
        "description": args.description,
        "exportLocationPath": args.exportLocationPath,
        "id": args.id,
        "isPublic": args.isPublic,
        "metadata": args.metadata,
        "name": args.name,
        "region": args.region,
        "shareNetworkId": args.shareNetworkId,
        "snapshotId": args.snapshotId,
        "status": args.status,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSharedfilesystemShareV2.
 */
export interface GetSharedfilesystemShareV2Args {
    description?: string;
    exportLocationPath?: string;
    id?: string;
    isPublic?: boolean;
    metadata?: {[key: string]: string};
    name?: string;
    region?: string;
    shareNetworkId?: string;
    snapshotId?: string;
    status?: string;
}

/**
 * A collection of values returned by getSharedfilesystemShareV2.
 */
export interface GetSharedfilesystemShareV2Result {
    readonly availabilityZone: string;
    readonly description: string;
    readonly exportLocationPath?: string;
    readonly exportLocations: outputs.GetSharedfilesystemShareV2ExportLocation[];
    readonly id: string;
    readonly isPublic: boolean;
    readonly metadata: {[key: string]: string};
    readonly name: string;
    readonly projectId: string;
    readonly region: string;
    readonly shareNetworkId: string;
    readonly shareProto: string;
    readonly size: number;
    readonly snapshotId: string;
    readonly status: string;
}
export function getSharedfilesystemShareV2Output(args?: GetSharedfilesystemShareV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSharedfilesystemShareV2Result> {
    return pulumi.output(args).apply((a: any) => getSharedfilesystemShareV2(a, opts))
}

/**
 * A collection of arguments for invoking getSharedfilesystemShareV2.
 */
export interface GetSharedfilesystemShareV2OutputArgs {
    description?: pulumi.Input<string>;
    exportLocationPath?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isPublic?: pulumi.Input<boolean>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    shareNetworkId?: pulumi.Input<string>;
    snapshotId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
}
