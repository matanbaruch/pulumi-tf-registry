// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeymanagerContainerV1(args?: GetKeymanagerContainerV1Args, opts?: pulumi.InvokeOptions): Promise<GetKeymanagerContainerV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getKeymanagerContainerV1:getKeymanagerContainerV1", {
        "id": args.id,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeymanagerContainerV1.
 */
export interface GetKeymanagerContainerV1Args {
    id?: string;
    name?: string;
    region?: string;
}

/**
 * A collection of values returned by getKeymanagerContainerV1.
 */
export interface GetKeymanagerContainerV1Result {
    readonly acls: outputs.GetKeymanagerContainerV1Acl[];
    readonly consumers: outputs.GetKeymanagerContainerV1Consumer[];
    readonly containerRef: string;
    readonly createdAt: string;
    readonly creatorId: string;
    readonly id: string;
    readonly name?: string;
    readonly region?: string;
    readonly secretRefs: outputs.GetKeymanagerContainerV1SecretRef[];
    readonly status: string;
    readonly type: string;
    readonly updatedAt: string;
}
export function getKeymanagerContainerV1Output(args?: GetKeymanagerContainerV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeymanagerContainerV1Result> {
    return pulumi.output(args).apply((a: any) => getKeymanagerContainerV1(a, opts))
}

/**
 * A collection of arguments for invoking getKeymanagerContainerV1.
 */
export interface GetKeymanagerContainerV1OutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
