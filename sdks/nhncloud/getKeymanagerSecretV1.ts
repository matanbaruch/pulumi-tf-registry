// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeymanagerSecretV1(args?: GetKeymanagerSecretV1Args, opts?: pulumi.InvokeOptions): Promise<GetKeymanagerSecretV1Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getKeymanagerSecretV1:getKeymanagerSecretV1", {
        "aclOnly": args.aclOnly,
        "algorithm": args.algorithm,
        "bitLength": args.bitLength,
        "createdAtFilter": args.createdAtFilter,
        "expirationFilter": args.expirationFilter,
        "id": args.id,
        "mode": args.mode,
        "name": args.name,
        "region": args.region,
        "secretType": args.secretType,
        "updatedAtFilter": args.updatedAtFilter,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeymanagerSecretV1.
 */
export interface GetKeymanagerSecretV1Args {
    aclOnly?: boolean;
    algorithm?: string;
    bitLength?: number;
    createdAtFilter?: string;
    expirationFilter?: string;
    id?: string;
    mode?: string;
    name?: string;
    region?: string;
    secretType?: string;
    updatedAtFilter?: string;
}

/**
 * A collection of values returned by getKeymanagerSecretV1.
 */
export interface GetKeymanagerSecretV1Result {
    readonly aclOnly?: boolean;
    readonly acls: outputs.GetKeymanagerSecretV1Acl[];
    readonly algorithm?: string;
    readonly bitLength?: number;
    readonly contentTypes: {[key: string]: string};
    readonly createdAt: string;
    readonly createdAtFilter?: string;
    readonly creatorId: string;
    readonly expiration: string;
    readonly expirationFilter?: string;
    readonly id: string;
    readonly metadata: {[key: string]: string};
    readonly mode?: string;
    readonly name?: string;
    readonly payload: string;
    readonly payloadContentEncoding: string;
    readonly payloadContentType: string;
    readonly region?: string;
    readonly secretRef: string;
    readonly secretType?: string;
    readonly status: string;
    readonly updatedAt: string;
    readonly updatedAtFilter?: string;
}
export function getKeymanagerSecretV1Output(args?: GetKeymanagerSecretV1OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeymanagerSecretV1Result> {
    return pulumi.output(args).apply((a: any) => getKeymanagerSecretV1(a, opts))
}

/**
 * A collection of arguments for invoking getKeymanagerSecretV1.
 */
export interface GetKeymanagerSecretV1OutputArgs {
    aclOnly?: pulumi.Input<boolean>;
    algorithm?: pulumi.Input<string>;
    bitLength?: pulumi.Input<number>;
    createdAtFilter?: pulumi.Input<string>;
    expirationFilter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    secretType?: pulumi.Input<string>;
    updatedAtFilter?: pulumi.Input<string>;
}
