// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNetworkingFloatingipV2(args?: GetNetworkingFloatingipV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkingFloatingipV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getNetworkingFloatingipV2:getNetworkingFloatingipV2", {
        "address": args.address,
        "description": args.description,
        "fixedIp": args.fixedIp,
        "id": args.id,
        "pool": args.pool,
        "portId": args.portId,
        "region": args.region,
        "status": args.status,
        "tags": args.tags,
        "tenantId": args.tenantId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingFloatingipV2.
 */
export interface GetNetworkingFloatingipV2Args {
    address?: string;
    description?: string;
    fixedIp?: string;
    id?: string;
    pool?: string;
    portId?: string;
    region?: string;
    status?: string;
    tags?: string[];
    tenantId?: string;
}

/**
 * A collection of values returned by getNetworkingFloatingipV2.
 */
export interface GetNetworkingFloatingipV2Result {
    readonly address?: string;
    readonly allTags: string[];
    readonly description?: string;
    readonly dnsDomain: string;
    readonly dnsName: string;
    readonly fixedIp?: string;
    readonly id: string;
    readonly pool?: string;
    readonly portId?: string;
    readonly region?: string;
    readonly status?: string;
    readonly tags?: string[];
    readonly tenantId?: string;
}
export function getNetworkingFloatingipV2Output(args?: GetNetworkingFloatingipV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingFloatingipV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkingFloatingipV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingFloatingipV2.
 */
export interface GetNetworkingFloatingipV2OutputArgs {
    address?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    fixedIp?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    pool?: pulumi.Input<string>;
    portId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    tenantId?: pulumi.Input<string>;
}
