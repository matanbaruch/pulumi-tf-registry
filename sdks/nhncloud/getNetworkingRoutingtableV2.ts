// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkingRoutingtableV2(args?: GetNetworkingRoutingtableV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkingRoutingtableV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getNetworkingRoutingtableV2:getNetworkingRoutingtableV2", {
        "createTime": args.createTime,
        "defaultTable": args.defaultTable,
        "distributed": args.distributed,
        "gatewayId": args.gatewayId,
        "id": args.id,
        "name": args.name,
        "routes": args.routes,
        "state": args.state,
        "subnets": args.subnets,
        "tenantId": args.tenantId,
        "vpcs": args.vpcs,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingRoutingtableV2.
 */
export interface GetNetworkingRoutingtableV2Args {
    createTime?: string;
    defaultTable?: boolean;
    distributed?: boolean;
    gatewayId?: string;
    id?: string;
    name?: string;
    routes?: inputs.GetNetworkingRoutingtableV2Route[];
    state?: string;
    subnets?: string[];
    tenantId?: string;
    vpcs?: string[];
}

/**
 * A collection of values returned by getNetworkingRoutingtableV2.
 */
export interface GetNetworkingRoutingtableV2Result {
    readonly createTime?: string;
    readonly defaultTable?: boolean;
    readonly distributed?: boolean;
    readonly gatewayId?: string;
    readonly id?: string;
    readonly name?: string;
    readonly routes?: outputs.GetNetworkingRoutingtableV2Route[];
    readonly state?: string;
    readonly subnets?: string[];
    readonly tenantId?: string;
    readonly vpcs?: string[];
}
export function getNetworkingRoutingtableV2Output(args?: GetNetworkingRoutingtableV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingRoutingtableV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkingRoutingtableV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingRoutingtableV2.
 */
export interface GetNetworkingRoutingtableV2OutputArgs {
    createTime?: pulumi.Input<string>;
    defaultTable?: pulumi.Input<boolean>;
    distributed?: pulumi.Input<boolean>;
    gatewayId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    routes?: pulumi.Input<pulumi.Input<inputs.GetNetworkingRoutingtableV2RouteArgs>[]>;
    state?: pulumi.Input<string>;
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    tenantId?: pulumi.Input<string>;
    vpcs?: pulumi.Input<pulumi.Input<string>[]>;
}
