// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityUserV3(args?: GetIdentityUserV3Args, opts?: pulumi.InvokeOptions): Promise<GetIdentityUserV3Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getIdentityUserV3:getIdentityUserV3", {
        "domainId": args.domainId,
        "enabled": args.enabled,
        "id": args.id,
        "idpId": args.idpId,
        "name": args.name,
        "passwordExpiresAt": args.passwordExpiresAt,
        "protocolId": args.protocolId,
        "region": args.region,
        "uniqueId": args.uniqueId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityUserV3.
 */
export interface GetIdentityUserV3Args {
    domainId?: string;
    enabled?: boolean;
    id?: string;
    idpId?: string;
    name?: string;
    passwordExpiresAt?: string;
    protocolId?: string;
    region?: string;
    uniqueId?: string;
}

/**
 * A collection of values returned by getIdentityUserV3.
 */
export interface GetIdentityUserV3Result {
    readonly defaultProjectId: string;
    readonly description: string;
    readonly domainId: string;
    readonly enabled?: boolean;
    readonly id: string;
    readonly idpId?: string;
    readonly name?: string;
    readonly passwordExpiresAt?: string;
    readonly protocolId?: string;
    readonly region: string;
    readonly uniqueId?: string;
}
export function getIdentityUserV3Output(args?: GetIdentityUserV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityUserV3Result> {
    return pulumi.output(args).apply((a: any) => getIdentityUserV3(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityUserV3.
 */
export interface GetIdentityUserV3OutputArgs {
    domainId?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    idpId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwordExpiresAt?: pulumi.Input<string>;
    protocolId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    uniqueId?: pulumi.Input<string>;
}
