// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentityGroupV3(args: GetIdentityGroupV3Args, opts?: pulumi.InvokeOptions): Promise<GetIdentityGroupV3Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getIdentityGroupV3:getIdentityGroupV3", {
        "domainId": args.domainId,
        "id": args.id,
        "name": args.name,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityGroupV3.
 */
export interface GetIdentityGroupV3Args {
    domainId?: string;
    id?: string;
    name: string;
    region?: string;
}

/**
 * A collection of values returned by getIdentityGroupV3.
 */
export interface GetIdentityGroupV3Result {
    readonly description: string;
    readonly domainId: string;
    readonly id: string;
    readonly name: string;
    readonly region: string;
}
export function getIdentityGroupV3Output(args: GetIdentityGroupV3OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityGroupV3Result> {
    return pulumi.output(args).apply((a: any) => getIdentityGroupV3(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityGroupV3.
 */
export interface GetIdentityGroupV3OutputArgs {
    domainId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
