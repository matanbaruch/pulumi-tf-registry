// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkingVpcV2(args?: GetNetworkingVpcV2Args, opts?: pulumi.InvokeOptions): Promise<GetNetworkingVpcV2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nhncloud:index/getNetworkingVpcV2:getNetworkingVpcV2", {
        "external": args.external,
        "id": args.id,
        "name": args.name,
        "region": args.region,
        "shared": args.shared,
        "tenantId": args.tenantId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkingVpcV2.
 */
export interface GetNetworkingVpcV2Args {
    external?: boolean;
    id?: string;
    name?: string;
    region?: string;
    shared?: boolean;
    tenantId?: string;
}

/**
 * A collection of values returned by getNetworkingVpcV2.
 */
export interface GetNetworkingVpcV2Result {
    readonly cidrv4: string;
    readonly createTime: string;
    readonly external: boolean;
    readonly id: string;
    readonly name: string;
    readonly region: string;
    readonly routingtables: outputs.GetNetworkingVpcV2Routingtable[];
    readonly shared: boolean;
    readonly state: string;
    readonly subnets: outputs.GetNetworkingVpcV2Subnet[];
    readonly tenantId: string;
}
export function getNetworkingVpcV2Output(args?: GetNetworkingVpcV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkingVpcV2Result> {
    return pulumi.output(args).apply((a: any) => getNetworkingVpcV2(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkingVpcV2.
 */
export interface GetNetworkingVpcV2OutputArgs {
    external?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    shared?: pulumi.Input<boolean>;
    tenantId?: pulumi.Input<string>;
}
