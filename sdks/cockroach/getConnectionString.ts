// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConnectionString(args: GetConnectionStringArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionStringResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cockroach:index/getConnectionString:getConnectionString", {
        "database": args.database,
        "id": args.id,
        "os": args.os,
        "password": args.password,
        "sqlUser": args.sqlUser,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConnectionString.
 */
export interface GetConnectionStringArgs {
    database?: string;
    id: string;
    os?: string;
    password?: string;
    sqlUser?: string;
}

/**
 * A collection of values returned by getConnectionString.
 */
export interface GetConnectionStringResult {
    readonly connectionParams: outputs.GetConnectionStringConnectionParams;
    readonly connectionString: string;
    readonly database: string;
    readonly id: string;
    readonly os: string;
    readonly password?: string;
    readonly sqlUser?: string;
}
export function getConnectionStringOutput(args: GetConnectionStringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectionStringResult> {
    return pulumi.output(args).apply((a: any) => getConnectionString(a, opts))
}

/**
 * A collection of arguments for invoking getConnectionString.
 */
export interface GetConnectionStringOutputArgs {
    database?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    sqlUser?: pulumi.Input<string>;
}
