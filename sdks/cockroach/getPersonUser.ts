// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPersonUser(args: GetPersonUserArgs, opts?: pulumi.InvokeOptions): Promise<GetPersonUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cockroach:index/getPersonUser:getPersonUser", {
        "email": args.email,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPersonUser.
 */
export interface GetPersonUserArgs {
    email: string;
}

/**
 * A collection of values returned by getPersonUser.
 */
export interface GetPersonUserResult {
    readonly email: string;
    readonly id: string;
}
export function getPersonUserOutput(args: GetPersonUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPersonUserResult> {
    return pulumi.output(args).apply((a: any) => getPersonUser(a, opts))
}

/**
 * A collection of arguments for invoking getPersonUser.
 */
export interface GetPersonUserOutputArgs {
    email: pulumi.Input<string>;
}
