// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getClusterCert(args: GetClusterCertArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterCertResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cockroach:index/getClusterCert:getClusterCert", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterCert.
 */
export interface GetClusterCertArgs {
    id: string;
}

/**
 * A collection of values returned by getClusterCert.
 */
export interface GetClusterCertResult {
    readonly cert: string;
    readonly id: string;
}
export function getClusterCertOutput(args: GetClusterCertOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterCertResult> {
    return pulumi.output(args).apply((a: any) => getClusterCert(a, opts))
}

/**
 * A collection of arguments for invoking getClusterCert.
 */
export interface GetClusterCertOutputArgs {
    id: pulumi.Input<string>;
}
