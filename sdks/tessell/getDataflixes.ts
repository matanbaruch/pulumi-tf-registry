// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataflixes(args?: GetDataflixesArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflixesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tessell:index/getDataflixes:getDataflixes", {
        "id": args.id,
        "loadAcls": args.loadAcls,
        "name": args.name,
        "owners": args.owners,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataflixes.
 */
export interface GetDataflixesArgs {
    id?: string;
    loadAcls?: boolean;
    name?: string;
    owners?: string[];
}

/**
 * A collection of values returned by getDataflixes.
 */
export interface GetDataflixesResult {
    readonly dataflixes: outputs.GetDataflixesDataflix[];
    readonly id: string;
    readonly loadAcls?: boolean;
    readonly name?: string;
    readonly owners?: string[];
}
export function getDataflixesOutput(args?: GetDataflixesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataflixesResult> {
    return pulumi.output(args).apply((a: any) => getDataflixes(a, opts))
}

/**
 * A collection of arguments for invoking getDataflixes.
 */
export interface GetDataflixesOutputArgs {
    id?: pulumi.Input<string>;
    loadAcls?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
}
