// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDbSnapshot(args: GetDbSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetDbSnapshotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tessell:index/getDbSnapshot:getDbSnapshot", {
        "availabilityMachineId": args.availabilityMachineId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbSnapshot.
 */
export interface GetDbSnapshotArgs {
    availabilityMachineId: string;
    id: string;
}

/**
 * A collection of values returned by getDbSnapshot.
 */
export interface GetDbSnapshotResult {
    readonly availabilityConfigs: outputs.GetDbSnapshotAvailabilityConfig[];
    readonly availabilityMachineId: string;
    readonly backupStatus: string;
    readonly cloudAvailabilities: outputs.GetDbSnapshotCloudAvailability[];
    readonly databases: outputs.GetDbSnapshotDatabase[];
    readonly description: string;
    readonly id: string;
    readonly manual: boolean;
    readonly name: string;
    readonly sharedWiths: outputs.GetDbSnapshotSharedWith[];
    readonly size: number;
    readonly snapshotTime: string;
    readonly status: string;
}
export function getDbSnapshotOutput(args: GetDbSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getDbSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getDbSnapshot.
 */
export interface GetDbSnapshotOutputArgs {
    availabilityMachineId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
