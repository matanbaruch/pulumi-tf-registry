// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDbServices(args?: GetDbServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetDbServicesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tessell:index/getDbServices:getDbServices", {
        "clonedFromAvailabilityMachineId": args.clonedFromAvailabilityMachineId,
        "clonedFromServiceId": args.clonedFromServiceId,
        "engineTypes": args.engineTypes,
        "id": args.id,
        "loadAcls": args.loadAcls,
        "loadDatabases": args.loadDatabases,
        "loadInstances": args.loadInstances,
        "name": args.name,
        "owners": args.owners,
        "statuses": args.statuses,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDbServices.
 */
export interface GetDbServicesArgs {
    clonedFromAvailabilityMachineId?: string;
    clonedFromServiceId?: string;
    engineTypes?: string[];
    id?: string;
    loadAcls?: boolean;
    loadDatabases?: boolean;
    loadInstances?: boolean;
    name?: string;
    owners?: string[];
    statuses?: string[];
}

/**
 * A collection of values returned by getDbServices.
 */
export interface GetDbServicesResult {
    readonly clonedFromAvailabilityMachineId?: string;
    readonly clonedFromServiceId?: string;
    readonly dbServices: outputs.GetDbServicesDbService[];
    readonly engineTypes?: string[];
    readonly id: string;
    readonly loadAcls?: boolean;
    readonly loadDatabases?: boolean;
    readonly loadInstances?: boolean;
    readonly name?: string;
    readonly owners?: string[];
    readonly statuses?: string[];
}
export function getDbServicesOutput(args?: GetDbServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbServicesResult> {
    return pulumi.output(args).apply((a: any) => getDbServices(a, opts))
}

/**
 * A collection of arguments for invoking getDbServices.
 */
export interface GetDbServicesOutputArgs {
    clonedFromAvailabilityMachineId?: pulumi.Input<string>;
    clonedFromServiceId?: pulumi.Input<string>;
    engineTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    loadAcls?: pulumi.Input<boolean>;
    loadDatabases?: pulumi.Input<boolean>;
    loadInstances?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
