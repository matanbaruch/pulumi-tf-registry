// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DbServiceStartStopSchedule extends pulumi.CustomResource {
    /**
     * Get an existing DbServiceStartStopSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbServiceStartStopScheduleState, opts?: pulumi.CustomResourceOptions): DbServiceStartStopSchedule {
        return new DbServiceStartStopSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tessell:index/dbServiceStartStopSchedule:DbServiceStartStopSchedule';

    /**
     * Returns true if the given object is an instance of DbServiceStartStopSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbServiceStartStopSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbServiceStartStopSchedule.__pulumiType;
    }

    /**
     * Timestamp when the schedule was created
     */
    public /*out*/ readonly dateCreated!: pulumi.Output<string>;
    /**
     * Timestamp when the schedule was last modified
     */
    public /*out*/ readonly dateModified!: pulumi.Output<string>;
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * The date-time at which this schedule was last executed
     */
    public /*out*/ readonly lastRun!: pulumi.Output<string>;
    public /*out*/ readonly metadatas!: pulumi.Output<outputs.DbServiceStartStopScheduleMetadata[]>;
    /**
     * Name of the schedule
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Describes the start/stop schedule of tessell service
     */
    public readonly scheduleInfo!: pulumi.Output<outputs.DbServiceStartStopScheduleScheduleInfo>;
    /**
     * The ID of the DB Service
     */
    public readonly serviceId!: pulumi.Output<string>;
    /**
     * StartStopScheduleStatus
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a DbServiceStartStopSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbServiceStartStopScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbServiceStartStopScheduleArgs | DbServiceStartStopScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbServiceStartStopScheduleState | undefined;
            resourceInputs["dateCreated"] = state ? state.dateCreated : undefined;
            resourceInputs["dateModified"] = state ? state.dateModified : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["lastRun"] = state ? state.lastRun : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scheduleInfo"] = state ? state.scheduleInfo : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as DbServiceStartStopScheduleArgs | undefined;
            if ((!args || args.scheduleInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleInfo'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["scheduleInfo"] = args ? args.scheduleInfo : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["dateModified"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["lastRun"] = undefined /*out*/;
            resourceInputs["metadatas"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DbServiceStartStopSchedule.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DbServiceStartStopSchedule resources.
 */
export interface DbServiceStartStopScheduleState {
    /**
     * Timestamp when the schedule was created
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * Timestamp when the schedule was last modified
     */
    dateModified?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * The date-time at which this schedule was last executed
     */
    lastRun?: pulumi.Input<string>;
    metadatas?: pulumi.Input<pulumi.Input<inputs.DbServiceStartStopScheduleMetadata>[]>;
    /**
     * Name of the schedule
     */
    name?: pulumi.Input<string>;
    /**
     * Describes the start/stop schedule of tessell service
     */
    scheduleInfo?: pulumi.Input<inputs.DbServiceStartStopScheduleScheduleInfo>;
    /**
     * The ID of the DB Service
     */
    serviceId?: pulumi.Input<string>;
    /**
     * StartStopScheduleStatus
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DbServiceStartStopSchedule resource.
 */
export interface DbServiceStartStopScheduleArgs {
    /**
     * Describes the start/stop schedule of tessell service
     */
    scheduleInfo: pulumi.Input<inputs.DbServiceStartStopScheduleScheduleInfo>;
    /**
     * The ID of the DB Service
     */
    serviceId: pulumi.Input<string>;
}
