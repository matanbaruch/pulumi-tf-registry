// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDataflixCatalog(args: GetDataflixCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetDataflixCatalogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tessell:index/getDataflixCatalog:getDataflixCatalog", {
        "availabilityMachineId": args.availabilityMachineId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDataflixCatalog.
 */
export interface GetDataflixCatalogArgs {
    availabilityMachineId: string;
    id?: string;
}

/**
 * A collection of values returned by getDataflixCatalog.
 */
export interface GetDataflixCatalogResult {
    readonly availabilityMachineId: string;
    readonly engineType: string;
    readonly id: string;
    readonly owner: string;
    readonly pitrCatalogs: outputs.GetDataflixCatalogPitrCatalog[];
    readonly serviceName: string;
    readonly snapshotCatalogs: outputs.GetDataflixCatalogSnapshotCatalog[];
    readonly tessellServiceId: string;
    readonly timeZone: string;
}
export function getDataflixCatalogOutput(args: GetDataflixCatalogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataflixCatalogResult> {
    return pulumi.output(args).apply((a: any) => getDataflixCatalog(a, opts))
}

/**
 * A collection of arguments for invoking getDataflixCatalog.
 */
export interface GetDataflixCatalogOutputArgs {
    availabilityMachineId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
