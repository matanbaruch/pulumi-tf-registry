// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocalDebianRepository(args: GetLocalDebianRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetLocalDebianRepositoryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("artifactory:index/getLocalDebianRepository:getLocalDebianRepository", {
        "archiveBrowsingEnabled": args.archiveBrowsingEnabled,
        "blackedOut": args.blackedOut,
        "cdnRedirect": args.cdnRedirect,
        "description": args.description,
        "downloadDirect": args.downloadDirect,
        "excludesPattern": args.excludesPattern,
        "id": args.id,
        "includesPattern": args.includesPattern,
        "indexCompressionFormats": args.indexCompressionFormats,
        "key": args.key,
        "notes": args.notes,
        "primaryKeypairRef": args.primaryKeypairRef,
        "priorityResolution": args.priorityResolution,
        "projectEnvironments": args.projectEnvironments,
        "projectKey": args.projectKey,
        "propertySets": args.propertySets,
        "repoLayoutRef": args.repoLayoutRef,
        "secondaryKeypairRef": args.secondaryKeypairRef,
        "trivialLayout": args.trivialLayout,
        "xrayIndex": args.xrayIndex,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocalDebianRepository.
 */
export interface GetLocalDebianRepositoryArgs {
    archiveBrowsingEnabled?: boolean;
    blackedOut?: boolean;
    cdnRedirect?: boolean;
    description?: string;
    downloadDirect?: boolean;
    excludesPattern?: string;
    id?: string;
    includesPattern?: string;
    indexCompressionFormats?: string[];
    key: string;
    notes?: string;
    primaryKeypairRef?: string;
    priorityResolution?: boolean;
    projectEnvironments?: string[];
    projectKey?: string;
    propertySets?: string[];
    repoLayoutRef?: string;
    secondaryKeypairRef?: string;
    /**
     * @deprecated Deprecated
     */
    trivialLayout?: boolean;
    xrayIndex?: boolean;
}

/**
 * A collection of values returned by getLocalDebianRepository.
 */
export interface GetLocalDebianRepositoryResult {
    readonly archiveBrowsingEnabled?: boolean;
    readonly blackedOut?: boolean;
    readonly cdnRedirect?: boolean;
    readonly description?: string;
    readonly downloadDirect?: boolean;
    readonly excludesPattern?: string;
    readonly id: string;
    readonly includesPattern?: string;
    readonly indexCompressionFormats?: string[];
    readonly key: string;
    readonly notes?: string;
    readonly packageType: string;
    readonly primaryKeypairRef?: string;
    readonly priorityResolution?: boolean;
    readonly projectEnvironments: string[];
    readonly projectKey?: string;
    readonly propertySets?: string[];
    readonly repoLayoutRef?: string;
    readonly secondaryKeypairRef?: string;
    /**
     * @deprecated Deprecated
     */
    readonly trivialLayout?: boolean;
    readonly xrayIndex?: boolean;
}
export function getLocalDebianRepositoryOutput(args: GetLocalDebianRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocalDebianRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getLocalDebianRepository(a, opts))
}

/**
 * A collection of arguments for invoking getLocalDebianRepository.
 */
export interface GetLocalDebianRepositoryOutputArgs {
    archiveBrowsingEnabled?: pulumi.Input<boolean>;
    blackedOut?: pulumi.Input<boolean>;
    cdnRedirect?: pulumi.Input<boolean>;
    description?: pulumi.Input<string>;
    downloadDirect?: pulumi.Input<boolean>;
    excludesPattern?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includesPattern?: pulumi.Input<string>;
    indexCompressionFormats?: pulumi.Input<pulumi.Input<string>[]>;
    key: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    primaryKeypairRef?: pulumi.Input<string>;
    priorityResolution?: pulumi.Input<boolean>;
    projectEnvironments?: pulumi.Input<pulumi.Input<string>[]>;
    projectKey?: pulumi.Input<string>;
    propertySets?: pulumi.Input<pulumi.Input<string>[]>;
    repoLayoutRef?: pulumi.Input<string>;
    secondaryKeypairRef?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    trivialLayout?: pulumi.Input<boolean>;
    xrayIndex?: pulumi.Input<boolean>;
}
