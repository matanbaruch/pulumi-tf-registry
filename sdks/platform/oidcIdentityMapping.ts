// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OidcIdentityMapping extends pulumi.CustomResource {
    /**
     * Get an existing OidcIdentityMapping resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OidcIdentityMappingState, opts?: pulumi.CustomResourceOptions): OidcIdentityMapping {
        return new OidcIdentityMapping(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'platform:index/oidcIdentityMapping:OidcIdentityMapping';

    /**
     * Returns true if the given object is an instance of OidcIdentityMapping.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OidcIdentityMapping {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OidcIdentityMapping.__pulumiType;
    }

    public readonly claimsJson!: pulumi.Output<string>;
    /**
     * Description of the OIDC mapping
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of the OIDC identity mapping
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If
     * you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest
     * priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and
     * effective access control setup.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * Name of the OIDC configuration
     */
    public readonly providerName!: pulumi.Output<string>;
    /**
     * Specifications of the token. In case of success, a token with the following details will be generated and passed to OIDC
     * Provider.
     */
    public readonly tokenSpec!: pulumi.Output<outputs.OidcIdentityMappingTokenSpec>;

    /**
     * Create a OidcIdentityMapping resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OidcIdentityMappingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OidcIdentityMappingArgs | OidcIdentityMappingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OidcIdentityMappingState | undefined;
            resourceInputs["claimsJson"] = state ? state.claimsJson : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["providerName"] = state ? state.providerName : undefined;
            resourceInputs["tokenSpec"] = state ? state.tokenSpec : undefined;
        } else {
            const args = argsOrState as OidcIdentityMappingArgs | undefined;
            if ((!args || args.claimsJson === undefined) && !opts.urn) {
                throw new Error("Missing required property 'claimsJson'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.providerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerName'");
            }
            if ((!args || args.tokenSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tokenSpec'");
            }
            resourceInputs["claimsJson"] = args ? args.claimsJson : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["providerName"] = args ? args.providerName : undefined;
            resourceInputs["tokenSpec"] = args ? args.tokenSpec : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OidcIdentityMapping.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OidcIdentityMapping resources.
 */
export interface OidcIdentityMappingState {
    claimsJson?: pulumi.Input<string>;
    /**
     * Description of the OIDC mapping
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the OIDC identity mapping
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If
     * you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest
     * priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and
     * effective access control setup.
     */
    priority?: pulumi.Input<number>;
    /**
     * Name of the OIDC configuration
     */
    providerName?: pulumi.Input<string>;
    /**
     * Specifications of the token. In case of success, a token with the following details will be generated and passed to OIDC
     * Provider.
     */
    tokenSpec?: pulumi.Input<inputs.OidcIdentityMappingTokenSpec>;
}

/**
 * The set of arguments for constructing a OidcIdentityMapping resource.
 */
export interface OidcIdentityMappingArgs {
    claimsJson: pulumi.Input<string>;
    /**
     * Description of the OIDC mapping
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the OIDC identity mapping
     */
    name?: pulumi.Input<string>;
    /**
     * Priority of the identity mapping. The priority should be a number. The higher priority is set for the lower number. If
     * you do not enter a value, the identity mapping is assigned the lowest priority. We recommend that you assign the highest
     * priority (1) to the strongest permission gate. Set the lowest priority to the weakest permission for a logical and
     * effective access control setup.
     */
    priority: pulumi.Input<number>;
    /**
     * Name of the OIDC configuration
     */
    providerName: pulumi.Input<string>;
    /**
     * Specifications of the token. In case of success, a token with the following details will be generated and passed to OIDC
     * Provider.
     */
    tokenSpec: pulumi.Input<inputs.OidcIdentityMappingTokenSpec>;
}
