// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MyjfrogIpAllowlist extends pulumi.CustomResource {
    /**
     * Get an existing MyjfrogIpAllowlist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MyjfrogIpAllowlistState, opts?: pulumi.CustomResourceOptions): MyjfrogIpAllowlist {
        return new MyjfrogIpAllowlist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'platform:index/myjfrogIpAllowlist:MyjfrogIpAllowlist';

    /**
     * Returns true if the given object is an instance of MyjfrogIpAllowlist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MyjfrogIpAllowlist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MyjfrogIpAllowlist.__pulumiType;
    }

    /**
     * List of IPs for the JPD allowlist
     */
    public readonly ips!: pulumi.Output<string[]>;
    /**
     * Name of the server. If your JFrog URL is `myserver.jfrog.io`, the `server_name` is `myserver`.
     */
    public readonly serverName!: pulumi.Output<string>;

    /**
     * Create a MyjfrogIpAllowlist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MyjfrogIpAllowlistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MyjfrogIpAllowlistArgs | MyjfrogIpAllowlistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MyjfrogIpAllowlistState | undefined;
            resourceInputs["ips"] = state ? state.ips : undefined;
            resourceInputs["serverName"] = state ? state.serverName : undefined;
        } else {
            const args = argsOrState as MyjfrogIpAllowlistArgs | undefined;
            if ((!args || args.ips === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ips'");
            }
            if ((!args || args.serverName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverName'");
            }
            resourceInputs["ips"] = args ? args.ips : undefined;
            resourceInputs["serverName"] = args ? args.serverName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MyjfrogIpAllowlist.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MyjfrogIpAllowlist resources.
 */
export interface MyjfrogIpAllowlistState {
    /**
     * List of IPs for the JPD allowlist
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the server. If your JFrog URL is `myserver.jfrog.io`, the `server_name` is `myserver`.
     */
    serverName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MyjfrogIpAllowlist resource.
 */
export interface MyjfrogIpAllowlistArgs {
    /**
     * List of IPs for the JPD allowlist
     */
    ips: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the server. If your JFrog URL is `myserver.jfrog.io`, the `server_name` is `myserver`.
     */
    serverName: pulumi.Input<string>;
}
