// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("platform");

/**
 * This is a access token that can be given to you by your admin under `Platform Configuration > User Management > Access
 * Tokens`. This can also be sourced from the `JFROG_ACCESS_TOKEN` environment variable.
 */
export declare const accessToken: string | undefined;
Object.defineProperty(exports, "accessToken", {
    get() {
        return __config.get("accessToken");
    },
    enumerable: true,
});

/**
 * Toggle for pre-flight checking of Artifactory Pro and Enterprise license. Default to `true`.
 */
export declare const checkLicense: boolean | undefined;
Object.defineProperty(exports, "checkLicense", {
    get() {
        return __config.getObject<boolean>("checkLicense");
    },
    enumerable: true,
});

/**
 * MyJFrog API token that allows you to make changes to your JFrog account. See [Generate a Token in
 * MyJFrog](https://jfrog.com/help/r/jfrog-hosting-models-documentation/generate-a-token-in-myjfrog) for more details. This
 * can also be sourced from the `JFROG_MYJFROG_API_TOKEN` environment variable.
 */
export declare const myjfrogApiToken: string | undefined;
Object.defineProperty(exports, "myjfrogApiToken", {
    get() {
        return __config.get("myjfrogApiToken");
    },
    enumerable: true,
});

/**
 * OIDC provider name. See [Configure an OIDC
 * Integration](https://jfrog.com/help/r/jfrog-platform-administration-documentation/configure-an-oidc-integration) for
 * more details.
 */
export declare const oidcProviderName: string | undefined;
Object.defineProperty(exports, "oidcProviderName", {
    get() {
        return __config.get("oidcProviderName");
    },
    enumerable: true,
});

/**
 * JFrog Platform URL. This can also be sourced from the `JFROG_URL` environment variable.
 */
export declare const url: string | undefined;
Object.defineProperty(exports, "url", {
    get() {
        return __config.get("url");
    },
    enumerable: true,
});

