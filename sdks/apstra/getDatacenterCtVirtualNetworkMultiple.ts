// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterCtVirtualNetworkMultiple(args?: GetDatacenterCtVirtualNetworkMultipleArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterCtVirtualNetworkMultipleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterCtVirtualNetworkMultiple:getDatacenterCtVirtualNetworkMultiple", {
        "name": args.name,
        "taggedVnIds": args.taggedVnIds,
        "untaggedVnId": args.untaggedVnId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterCtVirtualNetworkMultiple.
 */
export interface GetDatacenterCtVirtualNetworkMultipleArgs {
    name?: string;
    taggedVnIds?: string[];
    untaggedVnId?: string;
}

/**
 * A collection of values returned by getDatacenterCtVirtualNetworkMultiple.
 */
export interface GetDatacenterCtVirtualNetworkMultipleResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly primitive: string;
    readonly taggedVnIds?: string[];
    readonly untaggedVnId?: string;
}
export function getDatacenterCtVirtualNetworkMultipleOutput(args?: GetDatacenterCtVirtualNetworkMultipleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterCtVirtualNetworkMultipleResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterCtVirtualNetworkMultiple(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterCtVirtualNetworkMultiple.
 */
export interface GetDatacenterCtVirtualNetworkMultipleOutputArgs {
    name?: pulumi.Input<string>;
    taggedVnIds?: pulumi.Input<pulumi.Input<string>[]>;
    untaggedVnId?: pulumi.Input<string>;
}
