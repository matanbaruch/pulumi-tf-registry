// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInterfaceMaps(args?: GetInterfaceMapsArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceMapsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getInterfaceMaps:getInterfaceMaps", {
        "deviceProfileId": args.deviceProfileId,
        "logicalDeviceId": args.logicalDeviceId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceMaps.
 */
export interface GetInterfaceMapsArgs {
    deviceProfileId?: string;
    logicalDeviceId?: string;
}

/**
 * A collection of values returned by getInterfaceMaps.
 */
export interface GetInterfaceMapsResult {
    readonly deviceProfileId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly logicalDeviceId?: string;
}
export function getInterfaceMapsOutput(args?: GetInterfaceMapsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceMapsResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceMaps(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceMaps.
 */
export interface GetInterfaceMapsOutputArgs {
    deviceProfileId?: pulumi.Input<string>;
    logicalDeviceId?: pulumi.Input<string>;
}
