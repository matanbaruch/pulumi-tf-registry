// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterConfiglets(args: GetDatacenterConfigletsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterConfigletsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterConfiglets:getDatacenterConfiglets", {
        "blueprintId": args.blueprintId,
        "supportedPlatforms": args.supportedPlatforms,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterConfiglets.
 */
export interface GetDatacenterConfigletsArgs {
    blueprintId: string;
    supportedPlatforms?: string[];
}

/**
 * A collection of values returned by getDatacenterConfiglets.
 */
export interface GetDatacenterConfigletsResult {
    readonly blueprintId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly supportedPlatforms?: string[];
}
export function getDatacenterConfigletsOutput(args: GetDatacenterConfigletsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterConfigletsResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterConfiglets(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterConfiglets.
 */
export interface GetDatacenterConfigletsOutputArgs {
    blueprintId: pulumi.Input<string>;
    supportedPlatforms?: pulumi.Input<pulumi.Input<string>[]>;
}
