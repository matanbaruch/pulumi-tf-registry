// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatacenterSvisMap(args: GetDatacenterSvisMapArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterSvisMapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterSvisMap:getDatacenterSvisMap", {
        "blueprintId": args.blueprintId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterSvisMap.
 */
export interface GetDatacenterSvisMapArgs {
    blueprintId: string;
}

/**
 * A collection of values returned by getDatacenterSvisMap.
 */
export interface GetDatacenterSvisMapResult {
    readonly blueprintId: string;
    readonly byId: {[key: string]: outputs.GetDatacenterSvisMapById};
    readonly bySystem: {[key: string]: outputs.GetDatacenterSvisMapBySystem[]};
    readonly byVirtualNetwork: {[key: string]: outputs.GetDatacenterSvisMapByVirtualNetwork[]};
    readonly graphQuery: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
export function getDatacenterSvisMapOutput(args: GetDatacenterSvisMapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterSvisMapResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterSvisMap(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterSvisMap.
 */
export interface GetDatacenterSvisMapOutputArgs {
    blueprintId: pulumi.Input<string>;
}
