// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatacenterBlueprint(args?: GetDatacenterBlueprintArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterBlueprintResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterBlueprint:getDatacenterBlueprint", {
        "id": args.id,
        "maxMlagRoutesCount": args.maxMlagRoutesCount,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterBlueprint.
 */
export interface GetDatacenterBlueprintArgs {
    id?: string;
    maxMlagRoutesCount?: number;
    name?: string;
}

/**
 * A collection of values returned by getDatacenterBlueprint.
 */
export interface GetDatacenterBlueprintResult {
    readonly accessSwitchCount: number;
    readonly antiAffinityMode: string;
    readonly antiAffinityPolicy: outputs.GetDatacenterBlueprintAntiAffinityPolicy;
    readonly buildErrorsCount: number;
    readonly buildWarningsCount: number;
    readonly defaultIpLinksToGenericMtu: number;
    readonly defaultSviL3Mtu: number;
    readonly esiMacMsb: number;
    readonly evpnType5Routes: boolean;
    readonly externalRouterCount: number;
    readonly fabricAddressing: string;
    readonly fabricMtu: number;
    readonly genericSystemCount: number;
    readonly hasUncommittedChanges: boolean;
    readonly id: string;
    readonly ipv6Applications: boolean;
    readonly junosEvpnMaxNexthopAndInterfaceNumber: boolean;
    readonly junosEvpnRoutingInstanceModeMacVrf: boolean;
    readonly junosExOverlayEcmp: boolean;
    readonly junosGracefulRestart: boolean;
    readonly leafSwitchCount: number;
    readonly maxEvpnRoutesCount: number;
    readonly maxExternalRoutesCount: number;
    readonly maxFabricRoutesCount: number;
    readonly maxMlagRoutesCount: number;
    readonly name: string;
    readonly optimizeRoutingZoneFootprint: boolean;
    readonly spineSwitchCount: number;
    readonly status: string;
    readonly superspineSwitchCount: number;
    readonly templateId: string;
    readonly version: number;
}
export function getDatacenterBlueprintOutput(args?: GetDatacenterBlueprintOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterBlueprintResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterBlueprint(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterBlueprint.
 */
export interface GetDatacenterBlueprintOutputArgs {
    id?: pulumi.Input<string>;
    maxMlagRoutesCount?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
