// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterInterfacesByLinkTag(args: GetDatacenterInterfacesByLinkTagArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterInterfacesByLinkTagResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterInterfacesByLinkTag:getDatacenterInterfacesByLinkTag", {
        "blueprintId": args.blueprintId,
        "systemRole": args.systemRole,
        "systemType": args.systemType,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterInterfacesByLinkTag.
 */
export interface GetDatacenterInterfacesByLinkTagArgs {
    blueprintId: string;
    systemRole?: string;
    systemType?: string;
    tags: string[];
}

/**
 * A collection of values returned by getDatacenterInterfacesByLinkTag.
 */
export interface GetDatacenterInterfacesByLinkTagResult {
    readonly blueprintId: string;
    readonly graphQuery: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly systemRole?: string;
    readonly systemType?: string;
    readonly tags: string[];
}
export function getDatacenterInterfacesByLinkTagOutput(args: GetDatacenterInterfacesByLinkTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterInterfacesByLinkTagResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterInterfacesByLinkTag(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterInterfacesByLinkTag.
 */
export interface GetDatacenterInterfacesByLinkTagOutputArgs {
    blueprintId: pulumi.Input<string>;
    systemRole?: pulumi.Input<string>;
    systemType?: pulumi.Input<string>;
    tags: pulumi.Input<pulumi.Input<string>[]>;
}
