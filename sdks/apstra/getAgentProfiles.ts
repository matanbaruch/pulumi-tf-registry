// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAgentProfiles(args?: GetAgentProfilesArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentProfilesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getAgentProfiles:getAgentProfiles", {
        "hasCredentials": args.hasCredentials,
        "platform": args.platform,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgentProfiles.
 */
export interface GetAgentProfilesArgs {
    hasCredentials?: boolean;
    platform?: string;
}

/**
 * A collection of values returned by getAgentProfiles.
 */
export interface GetAgentProfilesResult {
    readonly hasCredentials?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly platform?: string;
}
export function getAgentProfilesOutput(args?: GetAgentProfilesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentProfilesResult> {
    return pulumi.output(args).apply((a: any) => getAgentProfiles(a, opts))
}

/**
 * A collection of arguments for invoking getAgentProfiles.
 */
export interface GetAgentProfilesOutputArgs {
    hasCredentials?: pulumi.Input<boolean>;
    platform?: pulumi.Input<string>;
}
