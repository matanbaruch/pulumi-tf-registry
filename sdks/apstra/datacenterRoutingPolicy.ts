// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class DatacenterRoutingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing DatacenterRoutingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatacenterRoutingPolicyState, opts?: pulumi.CustomResourceOptions): DatacenterRoutingPolicy {
        return new DatacenterRoutingPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'apstra:index/datacenterRoutingPolicy:DatacenterRoutingPolicy';

    /**
     * Returns true if the given object is an instance of DatacenterRoutingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatacenterRoutingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatacenterRoutingPolicy.__pulumiType;
    }

    /**
     * BGP Aggregate routes to be imported into a routing zone (VRF) on all border switches. This option can only be set on
     * routing policies associated with routing zones, and cannot be set on per-connectivity point policies. The aggregated
     * routes are sent to all external router peers in a SZ (VRF).
     */
    public readonly aggregatePrefixes!: pulumi.Output<string[] | undefined>;
    /**
     * Apstra Blueprint ID.
     */
    public readonly blueprintId!: pulumi.Output<string>;
    /**
     * Web UI 'description' field.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Default IPv4 route is expected to be imported via protocol session using this policy. Used for rendering route
     * expectations.
     */
    public readonly expectDefaultIpv4!: pulumi.Output<boolean>;
    /**
     * Default IPv6 route is expected to be imported via protocol session using this policy. Used for rendering route
     * expectations.
     */
    public readonly expectDefaultIpv6!: pulumi.Output<boolean>;
    /**
     * The export policy controls export of various types of fabric prefixes.
     */
    public readonly exportPolicy!: pulumi.Output<outputs.DatacenterRoutingPolicyExportPolicy>;
    /**
     * User defined export routes will be used in addition to any other routes specified in export policies. These policies are
     * additive. To advertise only extra routes, disable all export types within 'export_policy', and only the extra prefixes
     * specified here will be advertised.
     */
    public readonly extraExports!: pulumi.Output<outputs.DatacenterRoutingPolicyExtraExport[] | undefined>;
    /**
     * User defined import routes will be used in addition to any routes generated by the import policies. Prefixes specified
     * here are additive to the import policy, unless 'import_policy' is set to "extra_only", in which only these routes will
     * be imported.
     */
    public readonly extraImports!: pulumi.Output<outputs.DatacenterRoutingPolicyExtraImport[] | undefined>;
    /**
     * One of '', 'default_only', 'all', 'extra_only'
     */
    public readonly importPolicy!: pulumi.Output<string>;
    /**
     * Web UI 'name' field.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a DatacenterRoutingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatacenterRoutingPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatacenterRoutingPolicyArgs | DatacenterRoutingPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatacenterRoutingPolicyState | undefined;
            resourceInputs["aggregatePrefixes"] = state ? state.aggregatePrefixes : undefined;
            resourceInputs["blueprintId"] = state ? state.blueprintId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expectDefaultIpv4"] = state ? state.expectDefaultIpv4 : undefined;
            resourceInputs["expectDefaultIpv6"] = state ? state.expectDefaultIpv6 : undefined;
            resourceInputs["exportPolicy"] = state ? state.exportPolicy : undefined;
            resourceInputs["extraExports"] = state ? state.extraExports : undefined;
            resourceInputs["extraImports"] = state ? state.extraImports : undefined;
            resourceInputs["importPolicy"] = state ? state.importPolicy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as DatacenterRoutingPolicyArgs | undefined;
            if ((!args || args.blueprintId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blueprintId'");
            }
            resourceInputs["aggregatePrefixes"] = args ? args.aggregatePrefixes : undefined;
            resourceInputs["blueprintId"] = args ? args.blueprintId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expectDefaultIpv4"] = args ? args.expectDefaultIpv4 : undefined;
            resourceInputs["expectDefaultIpv6"] = args ? args.expectDefaultIpv6 : undefined;
            resourceInputs["exportPolicy"] = args ? args.exportPolicy : undefined;
            resourceInputs["extraExports"] = args ? args.extraExports : undefined;
            resourceInputs["extraImports"] = args ? args.extraImports : undefined;
            resourceInputs["importPolicy"] = args ? args.importPolicy : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatacenterRoutingPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatacenterRoutingPolicy resources.
 */
export interface DatacenterRoutingPolicyState {
    /**
     * BGP Aggregate routes to be imported into a routing zone (VRF) on all border switches. This option can only be set on
     * routing policies associated with routing zones, and cannot be set on per-connectivity point policies. The aggregated
     * routes are sent to all external router peers in a SZ (VRF).
     */
    aggregatePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apstra Blueprint ID.
     */
    blueprintId?: pulumi.Input<string>;
    /**
     * Web UI 'description' field.
     */
    description?: pulumi.Input<string>;
    /**
     * Default IPv4 route is expected to be imported via protocol session using this policy. Used for rendering route
     * expectations.
     */
    expectDefaultIpv4?: pulumi.Input<boolean>;
    /**
     * Default IPv6 route is expected to be imported via protocol session using this policy. Used for rendering route
     * expectations.
     */
    expectDefaultIpv6?: pulumi.Input<boolean>;
    /**
     * The export policy controls export of various types of fabric prefixes.
     */
    exportPolicy?: pulumi.Input<inputs.DatacenterRoutingPolicyExportPolicy>;
    /**
     * User defined export routes will be used in addition to any other routes specified in export policies. These policies are
     * additive. To advertise only extra routes, disable all export types within 'export_policy', and only the extra prefixes
     * specified here will be advertised.
     */
    extraExports?: pulumi.Input<pulumi.Input<inputs.DatacenterRoutingPolicyExtraExport>[]>;
    /**
     * User defined import routes will be used in addition to any routes generated by the import policies. Prefixes specified
     * here are additive to the import policy, unless 'import_policy' is set to "extra_only", in which only these routes will
     * be imported.
     */
    extraImports?: pulumi.Input<pulumi.Input<inputs.DatacenterRoutingPolicyExtraImport>[]>;
    /**
     * One of '', 'default_only', 'all', 'extra_only'
     */
    importPolicy?: pulumi.Input<string>;
    /**
     * Web UI 'name' field.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatacenterRoutingPolicy resource.
 */
export interface DatacenterRoutingPolicyArgs {
    /**
     * BGP Aggregate routes to be imported into a routing zone (VRF) on all border switches. This option can only be set on
     * routing policies associated with routing zones, and cannot be set on per-connectivity point policies. The aggregated
     * routes are sent to all external router peers in a SZ (VRF).
     */
    aggregatePrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apstra Blueprint ID.
     */
    blueprintId: pulumi.Input<string>;
    /**
     * Web UI 'description' field.
     */
    description?: pulumi.Input<string>;
    /**
     * Default IPv4 route is expected to be imported via protocol session using this policy. Used for rendering route
     * expectations.
     */
    expectDefaultIpv4?: pulumi.Input<boolean>;
    /**
     * Default IPv6 route is expected to be imported via protocol session using this policy. Used for rendering route
     * expectations.
     */
    expectDefaultIpv6?: pulumi.Input<boolean>;
    /**
     * The export policy controls export of various types of fabric prefixes.
     */
    exportPolicy?: pulumi.Input<inputs.DatacenterRoutingPolicyExportPolicy>;
    /**
     * User defined export routes will be used in addition to any other routes specified in export policies. These policies are
     * additive. To advertise only extra routes, disable all export types within 'export_policy', and only the extra prefixes
     * specified here will be advertised.
     */
    extraExports?: pulumi.Input<pulumi.Input<inputs.DatacenterRoutingPolicyExtraExport>[]>;
    /**
     * User defined import routes will be used in addition to any routes generated by the import policies. Prefixes specified
     * here are additive to the import policy, unless 'import_policy' is set to "extra_only", in which only these routes will
     * be imported.
     */
    extraImports?: pulumi.Input<pulumi.Input<inputs.DatacenterRoutingPolicyExtraImport>[]>;
    /**
     * One of '', 'default_only', 'all', 'extra_only'
     */
    importPolicy?: pulumi.Input<string>;
    /**
     * Web UI 'name' field.
     */
    name?: pulumi.Input<string>;
}
