// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlueprints(args?: GetBlueprintsArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getBlueprints:getBlueprints", {
        "referenceDesign": args.referenceDesign,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlueprints.
 */
export interface GetBlueprintsArgs {
    referenceDesign?: string;
}

/**
 * A collection of values returned by getBlueprints.
 */
export interface GetBlueprintsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly referenceDesign?: string;
}
export function getBlueprintsOutput(args?: GetBlueprintsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintsResult> {
    return pulumi.output(args).apply((a: any) => getBlueprints(a, opts))
}

/**
 * A collection of arguments for invoking getBlueprints.
 */
export interface GetBlueprintsOutputArgs {
    referenceDesign?: pulumi.Input<string>;
}
