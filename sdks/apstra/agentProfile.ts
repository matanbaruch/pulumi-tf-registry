// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AgentProfile extends pulumi.CustomResource {
    /**
     * Get an existing AgentProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentProfileState, opts?: pulumi.CustomResourceOptions): AgentProfile {
        return new AgentProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'apstra:index/agentProfile:AgentProfile';

    /**
     * Returns true if the given object is an instance of AgentProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentProfile.__pulumiType;
    }

    /**
     * Indicates whether a password has been set.
     */
    public /*out*/ readonly hasPassword!: pulumi.Output<boolean>;
    /**
     * Indicates whether a username has been set.
     */
    public /*out*/ readonly hasUsername!: pulumi.Output<boolean>;
    /**
     * Apstra name of the Agent Profile.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Passes configured parameters to offbox agents. For example, to use HTTPS as the API connection from offbox agents to
     * devices, use the key-value pair: proto-https - port-443.
     */
    public readonly openOptions!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of
     * [packages](https://www.juniper.net/documentation/us/en/software/apstra4.1/apstra-user-guide/topics/topic-map/packages.html)
     * to be included with agents deployed using this profile.
     */
    public readonly packages!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the platform supported by the Agent Profile.
     */
    public readonly platform!: pulumi.Output<string | undefined>;

    /**
     * Create a AgentProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AgentProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentProfileArgs | AgentProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentProfileState | undefined;
            resourceInputs["hasPassword"] = state ? state.hasPassword : undefined;
            resourceInputs["hasUsername"] = state ? state.hasUsername : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["openOptions"] = state ? state.openOptions : undefined;
            resourceInputs["packages"] = state ? state.packages : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
        } else {
            const args = argsOrState as AgentProfileArgs | undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openOptions"] = args ? args.openOptions : undefined;
            resourceInputs["packages"] = args ? args.packages : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["hasPassword"] = undefined /*out*/;
            resourceInputs["hasUsername"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AgentProfile resources.
 */
export interface AgentProfileState {
    /**
     * Indicates whether a password has been set.
     */
    hasPassword?: pulumi.Input<boolean>;
    /**
     * Indicates whether a username has been set.
     */
    hasUsername?: pulumi.Input<boolean>;
    /**
     * Apstra name of the Agent Profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Passes configured parameters to offbox agents. For example, to use HTTPS as the API connection from offbox agents to
     * devices, use the key-value pair: proto-https - port-443.
     */
    openOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of
     * [packages](https://www.juniper.net/documentation/us/en/software/apstra4.1/apstra-user-guide/topics/topic-map/packages.html)
     * to be included with agents deployed using this profile.
     */
    packages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the platform supported by the Agent Profile.
     */
    platform?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AgentProfile resource.
 */
export interface AgentProfileArgs {
    /**
     * Apstra name of the Agent Profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Passes configured parameters to offbox agents. For example, to use HTTPS as the API connection from offbox agents to
     * devices, use the key-value pair: proto-https - port-443.
     */
    openOptions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of
     * [packages](https://www.juniper.net/documentation/us/en/software/apstra4.1/apstra-user-guide/topics/topic-map/packages.html)
     * to be included with agents deployed using this profile.
     */
    packages?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the platform supported by the Agent Profile.
     */
    platform?: pulumi.Input<string>;
}
