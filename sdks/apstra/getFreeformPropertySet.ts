// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFreeformPropertySet(args: GetFreeformPropertySetArgs, opts?: pulumi.InvokeOptions): Promise<GetFreeformPropertySetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getFreeformPropertySet:getFreeformPropertySet", {
        "blueprintId": args.blueprintId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFreeformPropertySet.
 */
export interface GetFreeformPropertySetArgs {
    blueprintId: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getFreeformPropertySet.
 */
export interface GetFreeformPropertySetResult {
    readonly blueprintId: string;
    readonly id: string;
    readonly name: string;
    readonly systemId: string;
    readonly values: string;
}
export function getFreeformPropertySetOutput(args: GetFreeformPropertySetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFreeformPropertySetResult> {
    return pulumi.output(args).apply((a: any) => getFreeformPropertySet(a, opts))
}

/**
 * A collection of arguments for invoking getFreeformPropertySet.
 */
export interface GetFreeformPropertySetOutputArgs {
    blueprintId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
