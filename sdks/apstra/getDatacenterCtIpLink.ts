// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterCtIpLink(args: GetDatacenterCtIpLinkArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterCtIpLinkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterCtIpLink:getDatacenterCtIpLink", {
        "childPrimitives": args.childPrimitives,
        "ipv4AddressingType": args.ipv4AddressingType,
        "ipv6AddressingType": args.ipv6AddressingType,
        "l3Mtu": args.l3Mtu,
        "name": args.name,
        "routingZoneId": args.routingZoneId,
        "vlanId": args.vlanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterCtIpLink.
 */
export interface GetDatacenterCtIpLinkArgs {
    childPrimitives?: string[];
    ipv4AddressingType?: string;
    ipv6AddressingType?: string;
    l3Mtu?: number;
    name?: string;
    routingZoneId: string;
    vlanId?: number;
}

/**
 * A collection of values returned by getDatacenterCtIpLink.
 */
export interface GetDatacenterCtIpLinkResult {
    readonly childPrimitives?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipv4AddressingType?: string;
    readonly ipv6AddressingType?: string;
    readonly l3Mtu?: number;
    readonly name?: string;
    readonly primitive: string;
    readonly routingZoneId: string;
    readonly vlanId?: number;
}
export function getDatacenterCtIpLinkOutput(args: GetDatacenterCtIpLinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterCtIpLinkResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterCtIpLink(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterCtIpLink.
 */
export interface GetDatacenterCtIpLinkOutputArgs {
    childPrimitives?: pulumi.Input<pulumi.Input<string>[]>;
    ipv4AddressingType?: pulumi.Input<string>;
    ipv6AddressingType?: pulumi.Input<string>;
    l3Mtu?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    routingZoneId: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}
