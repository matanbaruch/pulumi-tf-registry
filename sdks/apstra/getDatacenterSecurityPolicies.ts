// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatacenterSecurityPolicies(args: GetDatacenterSecurityPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterSecurityPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterSecurityPolicies:getDatacenterSecurityPolicies", {
        "blueprintId": args.blueprintId,
        "filters": args.filters,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterSecurityPolicies.
 */
export interface GetDatacenterSecurityPoliciesArgs {
    blueprintId: string;
    filters?: inputs.GetDatacenterSecurityPoliciesFilter[];
}

/**
 * A collection of values returned by getDatacenterSecurityPolicies.
 */
export interface GetDatacenterSecurityPoliciesResult {
    readonly blueprintId: string;
    readonly filters?: outputs.GetDatacenterSecurityPoliciesFilter[];
    readonly graphQueries: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
}
export function getDatacenterSecurityPoliciesOutput(args: GetDatacenterSecurityPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterSecurityPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterSecurityPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterSecurityPolicies.
 */
export interface GetDatacenterSecurityPoliciesOutputArgs {
    blueprintId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetDatacenterSecurityPoliciesFilterArgs>[]>;
}
