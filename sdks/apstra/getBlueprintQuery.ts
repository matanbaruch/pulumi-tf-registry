// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlueprintQuery(args: GetBlueprintQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getBlueprintQuery:getBlueprintQuery", {
        "blueprintId": args.blueprintId,
        "query": args.query,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlueprintQuery.
 */
export interface GetBlueprintQueryArgs {
    blueprintId: string;
    query: string;
}

/**
 * A collection of values returned by getBlueprintQuery.
 */
export interface GetBlueprintQueryResult {
    readonly blueprintId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly query: string;
    readonly result: string;
}
export function getBlueprintQueryOutput(args: GetBlueprintQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintQueryResult> {
    return pulumi.output(args).apply((a: any) => getBlueprintQuery(a, opts))
}

/**
 * A collection of arguments for invoking getBlueprintQuery.
 */
export interface GetBlueprintQueryOutputArgs {
    blueprintId: pulumi.Input<string>;
    query: pulumi.Input<string>;
}
