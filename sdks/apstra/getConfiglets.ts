// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConfiglets(args?: GetConfigletsArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigletsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getConfiglets:getConfiglets", {
        "supportedPlatforms": args.supportedPlatforms,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfiglets.
 */
export interface GetConfigletsArgs {
    supportedPlatforms?: string[];
}

/**
 * A collection of values returned by getConfiglets.
 */
export interface GetConfigletsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly supportedPlatforms?: string[];
}
export function getConfigletsOutput(args?: GetConfigletsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigletsResult> {
    return pulumi.output(args).apply((a: any) => getConfiglets(a, opts))
}

/**
 * A collection of arguments for invoking getConfiglets.
 */
export interface GetConfigletsOutputArgs {
    supportedPlatforms?: pulumi.Input<pulumi.Input<string>[]>;
}
