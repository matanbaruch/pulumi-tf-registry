// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTelemetryServiceRegistryEntry(args: GetTelemetryServiceRegistryEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetTelemetryServiceRegistryEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getTelemetryServiceRegistryEntry:getTelemetryServiceRegistryEntry", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTelemetryServiceRegistryEntry.
 */
export interface GetTelemetryServiceRegistryEntryArgs {
    name: string;
}

/**
 * A collection of values returned by getTelemetryServiceRegistryEntry.
 */
export interface GetTelemetryServiceRegistryEntryResult {
    readonly applicationSchema: string;
    readonly builtIn: boolean;
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly storageSchemaPath: string;
    readonly version: string;
}
export function getTelemetryServiceRegistryEntryOutput(args: GetTelemetryServiceRegistryEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTelemetryServiceRegistryEntryResult> {
    return pulumi.output(args).apply((a: any) => getTelemetryServiceRegistryEntry(a, opts))
}

/**
 * A collection of arguments for invoking getTelemetryServiceRegistryEntry.
 */
export interface GetTelemetryServiceRegistryEntryOutputArgs {
    name: pulumi.Input<string>;
}
