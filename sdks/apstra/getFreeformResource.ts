// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFreeformResource(args: GetFreeformResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetFreeformResourceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getFreeformResource:getFreeformResource", {
        "blueprintId": args.blueprintId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFreeformResource.
 */
export interface GetFreeformResourceArgs {
    blueprintId: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getFreeformResource.
 */
export interface GetFreeformResourceResult {
    readonly allocatedFrom: string;
    readonly assignedTos: string[];
    readonly blueprintId: string;
    readonly generatorId: string;
    readonly groupId: string;
    readonly id: string;
    readonly integerValue: number;
    readonly ipv4Value: string;
    readonly ipv6Value: string;
    readonly name: string;
    readonly type: string;
}
export function getFreeformResourceOutput(args: GetFreeformResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFreeformResourceResult> {
    return pulumi.output(args).apply((a: any) => getFreeformResource(a, opts))
}

/**
 * A collection of arguments for invoking getFreeformResource.
 */
export interface GetFreeformResourceOutputArgs {
    blueprintId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
