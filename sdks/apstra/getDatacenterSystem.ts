// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDatacenterSystem(args: GetDatacenterSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterSystemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterSystem:getDatacenterSystem", {
        "blueprintId": args.blueprintId,
        "id": args.id,
        "name": args.name,
        "nullWhenNotFound": args.nullWhenNotFound,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterSystem.
 */
export interface GetDatacenterSystemArgs {
    blueprintId: string;
    id?: string;
    name?: string;
    nullWhenNotFound?: boolean;
}

/**
 * A collection of values returned by getDatacenterSystem.
 */
export interface GetDatacenterSystemResult {
    readonly attributes: outputs.GetDatacenterSystemAttributes;
    readonly blueprintId: string;
    readonly id?: string;
    readonly name?: string;
    readonly nullWhenNotFound?: boolean;
}
export function getDatacenterSystemOutput(args: GetDatacenterSystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterSystemResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterSystem(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterSystem.
 */
export interface GetDatacenterSystemOutputArgs {
    blueprintId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nullWhenNotFound?: pulumi.Input<boolean>;
}
