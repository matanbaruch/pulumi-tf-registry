// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTemplateRackBased(args?: GetTemplateRackBasedArgs, opts?: pulumi.InvokeOptions): Promise<GetTemplateRackBasedResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getTemplateRackBased:getTemplateRackBased", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTemplateRackBased.
 */
export interface GetTemplateRackBasedArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getTemplateRackBased.
 */
export interface GetTemplateRackBasedResult {
    readonly asnAllocationScheme: string;
    readonly fabricLinkAddressing: string;
    readonly id: string;
    readonly name: string;
    readonly overlayControlProtocol: string;
    readonly rackInfos: {[key: string]: outputs.GetTemplateRackBasedRackInfos};
    readonly spine: outputs.GetTemplateRackBasedSpine;
}
export function getTemplateRackBasedOutput(args?: GetTemplateRackBasedOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTemplateRackBasedResult> {
    return pulumi.output(args).apply((a: any) => getTemplateRackBased(a, opts))
}

/**
 * A collection of arguments for invoking getTemplateRackBased.
 */
export interface GetTemplateRackBasedOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
