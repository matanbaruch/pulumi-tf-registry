// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterCtCustomStaticRoute(args: GetDatacenterCtCustomStaticRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterCtCustomStaticRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterCtCustomStaticRoute:getDatacenterCtCustomStaticRoute", {
        "name": args.name,
        "network": args.network,
        "nextHop": args.nextHop,
        "routingZoneId": args.routingZoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterCtCustomStaticRoute.
 */
export interface GetDatacenterCtCustomStaticRouteArgs {
    name?: string;
    network: string;
    nextHop: string;
    routingZoneId: string;
}

/**
 * A collection of values returned by getDatacenterCtCustomStaticRoute.
 */
export interface GetDatacenterCtCustomStaticRouteResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly network: string;
    readonly nextHop: string;
    readonly primitive: string;
    readonly routingZoneId: string;
}
export function getDatacenterCtCustomStaticRouteOutput(args: GetDatacenterCtCustomStaticRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterCtCustomStaticRouteResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterCtCustomStaticRoute(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterCtCustomStaticRoute.
 */
export interface GetDatacenterCtCustomStaticRouteOutputArgs {
    name?: pulumi.Input<string>;
    network: pulumi.Input<string>;
    nextHop: pulumi.Input<string>;
    routingZoneId: pulumi.Input<string>;
}
