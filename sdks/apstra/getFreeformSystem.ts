// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFreeformSystem(args: GetFreeformSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetFreeformSystemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getFreeformSystem:getFreeformSystem", {
        "blueprintId": args.blueprintId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFreeformSystem.
 */
export interface GetFreeformSystemArgs {
    blueprintId: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getFreeformSystem.
 */
export interface GetFreeformSystemResult {
    readonly blueprintId: string;
    readonly deployMode: string;
    readonly deviceProfileId: string;
    readonly hostname: string;
    readonly id: string;
    readonly name: string;
    readonly systemId: string;
    readonly tags: string[];
    readonly type: string;
}
export function getFreeformSystemOutput(args: GetFreeformSystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFreeformSystemResult> {
    return pulumi.output(args).apply((a: any) => getFreeformSystem(a, opts))
}

/**
 * A collection of arguments for invoking getFreeformSystem.
 */
export interface GetFreeformSystemOutputArgs {
    blueprintId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
