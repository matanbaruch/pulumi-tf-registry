// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterPropertySets(args: GetDatacenterPropertySetsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterPropertySetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterPropertySets:getDatacenterPropertySets", {
        "blueprintId": args.blueprintId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterPropertySets.
 */
export interface GetDatacenterPropertySetsArgs {
    blueprintId: string;
}

/**
 * A collection of values returned by getDatacenterPropertySets.
 */
export interface GetDatacenterPropertySetsResult {
    readonly blueprintId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
}
export function getDatacenterPropertySetsOutput(args: GetDatacenterPropertySetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterPropertySetsResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterPropertySets(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterPropertySets.
 */
export interface GetDatacenterPropertySetsOutputArgs {
    blueprintId: pulumi.Input<string>;
}
