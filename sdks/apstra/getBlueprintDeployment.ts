// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlueprintDeployment(args: GetBlueprintDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getBlueprintDeployment:getBlueprintDeployment", {
        "blueprintId": args.blueprintId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlueprintDeployment.
 */
export interface GetBlueprintDeploymentArgs {
    blueprintId: string;
}

/**
 * A collection of values returned by getBlueprintDeployment.
 */
export interface GetBlueprintDeploymentResult {
    readonly blueprintId: string;
    readonly comment: string;
    readonly hasUncommittedChanges: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly revisionActive: number;
    readonly revisionStaged: number;
}
export function getBlueprintDeploymentOutput(args: GetBlueprintDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getBlueprintDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getBlueprintDeployment.
 */
export interface GetBlueprintDeploymentOutputArgs {
    blueprintId: pulumi.Input<string>;
}
