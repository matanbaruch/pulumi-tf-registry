// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterExternalGateway(args: GetDatacenterExternalGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterExternalGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterExternalGateway:getDatacenterExternalGateway", {
        "blueprintId": args.blueprintId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterExternalGateway.
 */
export interface GetDatacenterExternalGatewayArgs {
    blueprintId: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getDatacenterExternalGateway.
 */
export interface GetDatacenterExternalGatewayResult {
    readonly asn: number;
    readonly blueprintId: string;
    readonly evpnRouteTypes: string;
    readonly holdTime: number;
    readonly id?: string;
    readonly ipAddress: string;
    readonly keepaliveTime: number;
    readonly localGatewayNodes: string[];
    readonly name?: string;
    readonly password: string;
    readonly ttl: number;
}
export function getDatacenterExternalGatewayOutput(args: GetDatacenterExternalGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterExternalGatewayResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterExternalGateway(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterExternalGateway.
 */
export interface GetDatacenterExternalGatewayOutputArgs {
    blueprintId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
