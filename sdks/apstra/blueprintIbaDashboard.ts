// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BlueprintIbaDashboard extends pulumi.CustomResource {
    /**
     * Get an existing BlueprintIbaDashboard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BlueprintIbaDashboardState, opts?: pulumi.CustomResourceOptions): BlueprintIbaDashboard {
        return new BlueprintIbaDashboard(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'apstra:index/blueprintIbaDashboard:BlueprintIbaDashboard';

    /**
     * Returns true if the given object is an instance of BlueprintIbaDashboard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BlueprintIbaDashboard {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BlueprintIbaDashboard.__pulumiType;
    }

    /**
     * Apstra Blueprint ID. Used to identify the Blueprint that the IBA Widget belongs to.
     */
    public readonly blueprintId!: pulumi.Output<string>;
    /**
     * True if Default IBA Dashboard
     */
    public readonly default!: pulumi.Output<boolean | undefined>;
    /**
     * Description of the IBA Dashboard
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * IBA Dashboard Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Id of predefined IBA Dashboard if any
     */
    public /*out*/ readonly predefinedDashboard!: pulumi.Output<string>;
    /**
     * The user who updated the IBA Dashboard last
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;
    /**
     * Grid of Widgets to be displayed in the IBA Dashboard
     */
    public readonly widgetGrids!: pulumi.Output<string[][]>;

    /**
     * Create a BlueprintIbaDashboard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BlueprintIbaDashboardArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BlueprintIbaDashboardArgs | BlueprintIbaDashboardState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BlueprintIbaDashboardState | undefined;
            resourceInputs["blueprintId"] = state ? state.blueprintId : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["predefinedDashboard"] = state ? state.predefinedDashboard : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
            resourceInputs["widgetGrids"] = state ? state.widgetGrids : undefined;
        } else {
            const args = argsOrState as BlueprintIbaDashboardArgs | undefined;
            if ((!args || args.blueprintId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blueprintId'");
            }
            if ((!args || args.widgetGrids === undefined) && !opts.urn) {
                throw new Error("Missing required property 'widgetGrids'");
            }
            resourceInputs["blueprintId"] = args ? args.blueprintId : undefined;
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["widgetGrids"] = args ? args.widgetGrids : undefined;
            resourceInputs["predefinedDashboard"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BlueprintIbaDashboard.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BlueprintIbaDashboard resources.
 */
export interface BlueprintIbaDashboardState {
    /**
     * Apstra Blueprint ID. Used to identify the Blueprint that the IBA Widget belongs to.
     */
    blueprintId?: pulumi.Input<string>;
    /**
     * True if Default IBA Dashboard
     */
    default?: pulumi.Input<boolean>;
    /**
     * Description of the IBA Dashboard
     */
    description?: pulumi.Input<string>;
    /**
     * IBA Dashboard Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Id of predefined IBA Dashboard if any
     */
    predefinedDashboard?: pulumi.Input<string>;
    /**
     * The user who updated the IBA Dashboard last
     */
    updatedBy?: pulumi.Input<string>;
    /**
     * Grid of Widgets to be displayed in the IBA Dashboard
     */
    widgetGrids?: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
}

/**
 * The set of arguments for constructing a BlueprintIbaDashboard resource.
 */
export interface BlueprintIbaDashboardArgs {
    /**
     * Apstra Blueprint ID. Used to identify the Blueprint that the IBA Widget belongs to.
     */
    blueprintId: pulumi.Input<string>;
    /**
     * True if Default IBA Dashboard
     */
    default?: pulumi.Input<boolean>;
    /**
     * Description of the IBA Dashboard
     */
    description?: pulumi.Input<string>;
    /**
     * IBA Dashboard Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Grid of Widgets to be displayed in the IBA Dashboard
     */
    widgetGrids: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
}
