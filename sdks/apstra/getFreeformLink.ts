// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFreeformLink(args: GetFreeformLinkArgs, opts?: pulumi.InvokeOptions): Promise<GetFreeformLinkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getFreeformLink:getFreeformLink", {
        "blueprintId": args.blueprintId,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFreeformLink.
 */
export interface GetFreeformLinkArgs {
    blueprintId: string;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getFreeformLink.
 */
export interface GetFreeformLinkResult {
    readonly aggregateLinkId: string;
    readonly blueprintId: string;
    readonly endpoints: {[key: string]: outputs.GetFreeformLinkEndpoints};
    readonly id: string;
    readonly name: string;
    readonly speed: string;
    readonly tags: string[];
    readonly type: string;
}
export function getFreeformLinkOutput(args: GetFreeformLinkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFreeformLinkResult> {
    return pulumi.output(args).apply((a: any) => getFreeformLink(a, opts))
}

/**
 * A collection of arguments for invoking getFreeformLink.
 */
export interface GetFreeformLinkOutputArgs {
    blueprintId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
