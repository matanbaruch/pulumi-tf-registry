// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterCtRoutingPolicy(args: GetDatacenterCtRoutingPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterCtRoutingPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterCtRoutingPolicy:getDatacenterCtRoutingPolicy", {
        "name": args.name,
        "routingPolicyId": args.routingPolicyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterCtRoutingPolicy.
 */
export interface GetDatacenterCtRoutingPolicyArgs {
    name?: string;
    routingPolicyId: string;
}

/**
 * A collection of values returned by getDatacenterCtRoutingPolicy.
 */
export interface GetDatacenterCtRoutingPolicyResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly primitive: string;
    readonly routingPolicyId: string;
}
export function getDatacenterCtRoutingPolicyOutput(args: GetDatacenterCtRoutingPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterCtRoutingPolicyResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterCtRoutingPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterCtRoutingPolicy.
 */
export interface GetDatacenterCtRoutingPolicyOutputArgs {
    name?: pulumi.Input<string>;
    routingPolicyId: pulumi.Input<string>;
}
