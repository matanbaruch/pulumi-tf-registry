// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class DatacenterExternalGateway extends pulumi.CustomResource {
    /**
     * Get an existing DatacenterExternalGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatacenterExternalGatewayState, opts?: pulumi.CustomResourceOptions): DatacenterExternalGateway {
        return new DatacenterExternalGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'apstra:index/datacenterExternalGateway:DatacenterExternalGateway';

    /**
     * Returns true if the given object is an instance of DatacenterExternalGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatacenterExternalGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatacenterExternalGateway.__pulumiType;
    }

    /**
     * External Gateway AS Number
     */
    public readonly asn!: pulumi.Output<number>;
    /**
     * Apstra ID of the Blueprint in which the External Gateway should be created.
     */
    public readonly blueprintId!: pulumi.Output<string>;
    /**
     * EVPN route types. Valid values are: ["all", "type5_only"]. Default: "all"
     */
    public readonly evpnRouteTypes!: pulumi.Output<string>;
    /**
     * BGP hold time (seconds).
     */
    public readonly holdTime!: pulumi.Output<number>;
    /**
     * External Gateway IP address
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * BGP keepalive time (seconds).
     */
    public readonly keepaliveTime!: pulumi.Output<number>;
    /**
     * Set of IDs of switch nodes which will be configured to peer with the External Gateway
     */
    public readonly localGatewayNodes!: pulumi.Output<string[]>;
    /**
     * External Gateway name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * BGP TCP authentication password
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * BGP Time To Live. Omit to use device defaults.
     */
    public readonly ttl!: pulumi.Output<number>;

    /**
     * Create a DatacenterExternalGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatacenterExternalGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatacenterExternalGatewayArgs | DatacenterExternalGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatacenterExternalGatewayState | undefined;
            resourceInputs["asn"] = state ? state.asn : undefined;
            resourceInputs["blueprintId"] = state ? state.blueprintId : undefined;
            resourceInputs["evpnRouteTypes"] = state ? state.evpnRouteTypes : undefined;
            resourceInputs["holdTime"] = state ? state.holdTime : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["keepaliveTime"] = state ? state.keepaliveTime : undefined;
            resourceInputs["localGatewayNodes"] = state ? state.localGatewayNodes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as DatacenterExternalGatewayArgs | undefined;
            if ((!args || args.asn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asn'");
            }
            if ((!args || args.blueprintId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blueprintId'");
            }
            if ((!args || args.ipAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddress'");
            }
            if ((!args || args.localGatewayNodes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localGatewayNodes'");
            }
            resourceInputs["asn"] = args ? args.asn : undefined;
            resourceInputs["blueprintId"] = args ? args.blueprintId : undefined;
            resourceInputs["evpnRouteTypes"] = args ? args.evpnRouteTypes : undefined;
            resourceInputs["holdTime"] = args ? args.holdTime : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["keepaliveTime"] = args ? args.keepaliveTime : undefined;
            resourceInputs["localGatewayNodes"] = args ? args.localGatewayNodes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DatacenterExternalGateway.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering DatacenterExternalGateway resources.
 */
export interface DatacenterExternalGatewayState {
    /**
     * External Gateway AS Number
     */
    asn?: pulumi.Input<number>;
    /**
     * Apstra ID of the Blueprint in which the External Gateway should be created.
     */
    blueprintId?: pulumi.Input<string>;
    /**
     * EVPN route types. Valid values are: ["all", "type5_only"]. Default: "all"
     */
    evpnRouteTypes?: pulumi.Input<string>;
    /**
     * BGP hold time (seconds).
     */
    holdTime?: pulumi.Input<number>;
    /**
     * External Gateway IP address
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * BGP keepalive time (seconds).
     */
    keepaliveTime?: pulumi.Input<number>;
    /**
     * Set of IDs of switch nodes which will be configured to peer with the External Gateway
     */
    localGatewayNodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * External Gateway name
     */
    name?: pulumi.Input<string>;
    /**
     * BGP TCP authentication password
     */
    password?: pulumi.Input<string>;
    /**
     * BGP Time To Live. Omit to use device defaults.
     */
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DatacenterExternalGateway resource.
 */
export interface DatacenterExternalGatewayArgs {
    /**
     * External Gateway AS Number
     */
    asn: pulumi.Input<number>;
    /**
     * Apstra ID of the Blueprint in which the External Gateway should be created.
     */
    blueprintId: pulumi.Input<string>;
    /**
     * EVPN route types. Valid values are: ["all", "type5_only"]. Default: "all"
     */
    evpnRouteTypes?: pulumi.Input<string>;
    /**
     * BGP hold time (seconds).
     */
    holdTime?: pulumi.Input<number>;
    /**
     * External Gateway IP address
     */
    ipAddress: pulumi.Input<string>;
    /**
     * BGP keepalive time (seconds).
     */
    keepaliveTime?: pulumi.Input<number>;
    /**
     * Set of IDs of switch nodes which will be configured to peer with the External Gateway
     */
    localGatewayNodes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * External Gateway name
     */
    name?: pulumi.Input<string>;
    /**
     * BGP TCP authentication password
     */
    password?: pulumi.Input<string>;
    /**
     * BGP Time To Live. Omit to use device defaults.
     */
    ttl?: pulumi.Input<number>;
}
