// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDeviceConfig(args: GetDeviceConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDeviceConfig:getDeviceConfig", {
        "systemId": args.systemId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceConfig.
 */
export interface GetDeviceConfigArgs {
    systemId: string;
}

/**
 * A collection of values returned by getDeviceConfig.
 */
export interface GetDeviceConfigResult {
    readonly aosConfigVersion: number;
    readonly configActual: string;
    readonly configExpected: string;
    readonly contiguousFailures: number;
    readonly deviated: boolean;
    readonly errorMessage: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lastBootTime: string;
    readonly systemId: string;
    readonly userFullConfigDeployVersion: number;
    readonly userGoldenConfigUpdateVersion: number;
}
export function getDeviceConfigOutput(args: GetDeviceConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceConfigResult> {
    return pulumi.output(args).apply((a: any) => getDeviceConfig(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceConfig.
 */
export interface GetDeviceConfigOutputArgs {
    systemId: pulumi.Input<string>;
}
