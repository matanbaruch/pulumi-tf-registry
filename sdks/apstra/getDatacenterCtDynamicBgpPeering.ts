// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatacenterCtDynamicBgpPeering(args?: GetDatacenterCtDynamicBgpPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetDatacenterCtDynamicBgpPeeringResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getDatacenterCtDynamicBgpPeering:getDatacenterCtDynamicBgpPeering", {
        "bfdEnabled": args.bfdEnabled,
        "childPrimitives": args.childPrimitives,
        "holdTime": args.holdTime,
        "ipv4Enabled": args.ipv4Enabled,
        "ipv4PeerPrefix": args.ipv4PeerPrefix,
        "ipv6Enabled": args.ipv6Enabled,
        "ipv6PeerPrefix": args.ipv6PeerPrefix,
        "keepaliveTime": args.keepaliveTime,
        "localAsn": args.localAsn,
        "name": args.name,
        "password": args.password,
        "ttl": args.ttl,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDatacenterCtDynamicBgpPeering.
 */
export interface GetDatacenterCtDynamicBgpPeeringArgs {
    bfdEnabled?: boolean;
    childPrimitives?: string[];
    holdTime?: number;
    ipv4Enabled?: boolean;
    ipv4PeerPrefix?: string;
    ipv6Enabled?: boolean;
    ipv6PeerPrefix?: string;
    keepaliveTime?: number;
    localAsn?: number;
    name?: string;
    password?: string;
    ttl?: number;
}

/**
 * A collection of values returned by getDatacenterCtDynamicBgpPeering.
 */
export interface GetDatacenterCtDynamicBgpPeeringResult {
    readonly bfdEnabled?: boolean;
    readonly childPrimitives?: string[];
    readonly holdTime?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipv4Enabled?: boolean;
    readonly ipv4PeerPrefix?: string;
    readonly ipv6Enabled?: boolean;
    readonly ipv6PeerPrefix?: string;
    readonly keepaliveTime?: number;
    readonly localAsn?: number;
    readonly name?: string;
    readonly password?: string;
    readonly primitive: string;
    readonly ttl?: number;
}
export function getDatacenterCtDynamicBgpPeeringOutput(args?: GetDatacenterCtDynamicBgpPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatacenterCtDynamicBgpPeeringResult> {
    return pulumi.output(args).apply((a: any) => getDatacenterCtDynamicBgpPeering(a, opts))
}

/**
 * A collection of arguments for invoking getDatacenterCtDynamicBgpPeering.
 */
export interface GetDatacenterCtDynamicBgpPeeringOutputArgs {
    bfdEnabled?: pulumi.Input<boolean>;
    childPrimitives?: pulumi.Input<pulumi.Input<string>[]>;
    holdTime?: pulumi.Input<number>;
    ipv4Enabled?: pulumi.Input<boolean>;
    ipv4PeerPrefix?: pulumi.Input<string>;
    ipv6Enabled?: pulumi.Input<boolean>;
    ipv6PeerPrefix?: pulumi.Input<string>;
    keepaliveTime?: pulumi.Input<number>;
    localAsn?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    ttl?: pulumi.Input<number>;
}
