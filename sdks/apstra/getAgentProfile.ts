// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAgentProfile(args?: GetAgentProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("apstra:index/getAgentProfile:getAgentProfile", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgentProfile.
 */
export interface GetAgentProfileArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getAgentProfile.
 */
export interface GetAgentProfileResult {
    readonly hasPassword: boolean;
    readonly hasUsername: boolean;
    readonly id: string;
    readonly name: string;
    readonly openOptions: {[key: string]: string};
    readonly packages: {[key: string]: string};
    readonly platform: string;
}
export function getAgentProfileOutput(args?: GetAgentProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentProfileResult> {
    return pulumi.output(args).apply((a: any) => getAgentProfile(a, opts))
}

/**
 * A collection of arguments for invoking getAgentProfile.
 */
export interface GetAgentProfileOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
