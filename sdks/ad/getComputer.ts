// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputer(args?: GetComputerArgs, opts?: pulumi.InvokeOptions): Promise<GetComputerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ad:index/getComputer:getComputer", {
        "computerId": args.computerId,
        "dn": args.dn,
        "guid": args.guid,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getComputer.
 */
export interface GetComputerArgs {
    computerId?: string;
    /**
     * @deprecated Deprecated
     */
    dn?: string;
    /**
     * @deprecated Deprecated
     */
    guid?: string;
    id?: string;
}

/**
 * A collection of values returned by getComputer.
 */
export interface GetComputerResult {
    readonly computerId?: string;
    /**
     * @deprecated Deprecated
     */
    readonly dn?: string;
    /**
     * @deprecated Deprecated
     */
    readonly guid?: string;
    readonly id: string;
    readonly name: string;
    readonly sid: string;
}
export function getComputerOutput(args?: GetComputerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputerResult> {
    return pulumi.output(args).apply((a: any) => getComputer(a, opts))
}

/**
 * A collection of arguments for invoking getComputer.
 */
export interface GetComputerOutputArgs {
    computerId?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    dn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    guid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
