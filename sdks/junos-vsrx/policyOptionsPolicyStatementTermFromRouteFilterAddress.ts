// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PolicyOptionsPolicyStatementTermFromRouteFilterAddress extends pulumi.CustomResource {
    /**
     * Get an existing PolicyOptionsPolicyStatementTermFromRouteFilterAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyOptionsPolicyStatementTermFromRouteFilterAddressState, opts?: pulumi.CustomResourceOptions): PolicyOptionsPolicyStatementTermFromRouteFilterAddress {
        return new PolicyOptionsPolicyStatementTermFromRouteFilterAddress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'junos-vsrx:index/policyOptionsPolicyStatementTermFromRouteFilterAddress:PolicyOptionsPolicyStatementTermFromRouteFilterAddress';

    /**
     * Returns true if the given object is an instance of PolicyOptionsPolicyStatementTermFromRouteFilterAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyOptionsPolicyStatementTermFromRouteFilterAddress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyOptionsPolicyStatementTermFromRouteFilterAddress.__pulumiType;
    }

    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly acceptReject!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly addPath!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter. IP address or hostname
     */
    public readonly address!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly addressMask!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly aggregateBandwidth!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly aigpAdjust!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly aigpOriginate!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly analyze!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly applyAdvanced!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly asPathExpand!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly asPathPrepend!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly bgpOutputQueuePriority!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly class!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly color!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly color2!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly community!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly cosNextHopMap!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly damping!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly defaultAction!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly destinationClass!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly dynamicTunnelAttributes!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly exact!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly external!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly forwardingClass!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly getRouteRange!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly installNexthop!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly installToFib!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly label!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly labelAllocation!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly labelAllocationFallbackReject!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly limitBandwidth!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly loadBalance!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly localPreference!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly longer!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly mapToInterface!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly metric!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly metric2!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly metric3!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly metric4!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly mhopBfdPort!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly multipathResolve!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term
     */
    public readonly name1!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly next!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly nextHop!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly noBackup!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly noEntropyLabelCapability!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly noRouteLocalize!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly origin!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly orlonger!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly p2mpLspRoot!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly preference!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly preference2!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly prefixLengthRange!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly prefixSegment!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly priority!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly resolutionMap!: pulumi.Output<string | undefined>;
    public readonly resourceName!: pulumi.Output<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly selectedMldpEgress!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly sourceClass!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly srTeTemplate!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly ssmSource!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly tag!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly tag2!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly through!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly trace!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly tunnelAttribute!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly tunnelEndPointAddress!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly upto!: pulumi.Output<string | undefined>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    public readonly validationState!: pulumi.Output<string | undefined>;

    /**
     * Create a PolicyOptionsPolicyStatementTermFromRouteFilterAddress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyOptionsPolicyStatementTermFromRouteFilterAddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyOptionsPolicyStatementTermFromRouteFilterAddressArgs | PolicyOptionsPolicyStatementTermFromRouteFilterAddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyOptionsPolicyStatementTermFromRouteFilterAddressState | undefined;
            resourceInputs["acceptReject"] = state ? state.acceptReject : undefined;
            resourceInputs["addPath"] = state ? state.addPath : undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["addressMask"] = state ? state.addressMask : undefined;
            resourceInputs["aggregateBandwidth"] = state ? state.aggregateBandwidth : undefined;
            resourceInputs["aigpAdjust"] = state ? state.aigpAdjust : undefined;
            resourceInputs["aigpOriginate"] = state ? state.aigpOriginate : undefined;
            resourceInputs["analyze"] = state ? state.analyze : undefined;
            resourceInputs["applyAdvanced"] = state ? state.applyAdvanced : undefined;
            resourceInputs["asPathExpand"] = state ? state.asPathExpand : undefined;
            resourceInputs["asPathPrepend"] = state ? state.asPathPrepend : undefined;
            resourceInputs["bgpOutputQueuePriority"] = state ? state.bgpOutputQueuePriority : undefined;
            resourceInputs["class"] = state ? state.class : undefined;
            resourceInputs["color"] = state ? state.color : undefined;
            resourceInputs["color2"] = state ? state.color2 : undefined;
            resourceInputs["community"] = state ? state.community : undefined;
            resourceInputs["cosNextHopMap"] = state ? state.cosNextHopMap : undefined;
            resourceInputs["damping"] = state ? state.damping : undefined;
            resourceInputs["defaultAction"] = state ? state.defaultAction : undefined;
            resourceInputs["destinationClass"] = state ? state.destinationClass : undefined;
            resourceInputs["dynamicTunnelAttributes"] = state ? state.dynamicTunnelAttributes : undefined;
            resourceInputs["exact"] = state ? state.exact : undefined;
            resourceInputs["external"] = state ? state.external : undefined;
            resourceInputs["forwardingClass"] = state ? state.forwardingClass : undefined;
            resourceInputs["getRouteRange"] = state ? state.getRouteRange : undefined;
            resourceInputs["installNexthop"] = state ? state.installNexthop : undefined;
            resourceInputs["installToFib"] = state ? state.installToFib : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["labelAllocation"] = state ? state.labelAllocation : undefined;
            resourceInputs["labelAllocationFallbackReject"] = state ? state.labelAllocationFallbackReject : undefined;
            resourceInputs["limitBandwidth"] = state ? state.limitBandwidth : undefined;
            resourceInputs["loadBalance"] = state ? state.loadBalance : undefined;
            resourceInputs["localPreference"] = state ? state.localPreference : undefined;
            resourceInputs["longer"] = state ? state.longer : undefined;
            resourceInputs["mapToInterface"] = state ? state.mapToInterface : undefined;
            resourceInputs["metric"] = state ? state.metric : undefined;
            resourceInputs["metric2"] = state ? state.metric2 : undefined;
            resourceInputs["metric3"] = state ? state.metric3 : undefined;
            resourceInputs["metric4"] = state ? state.metric4 : undefined;
            resourceInputs["mhopBfdPort"] = state ? state.mhopBfdPort : undefined;
            resourceInputs["multipathResolve"] = state ? state.multipathResolve : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["name1"] = state ? state.name1 : undefined;
            resourceInputs["next"] = state ? state.next : undefined;
            resourceInputs["nextHop"] = state ? state.nextHop : undefined;
            resourceInputs["noBackup"] = state ? state.noBackup : undefined;
            resourceInputs["noEntropyLabelCapability"] = state ? state.noEntropyLabelCapability : undefined;
            resourceInputs["noRouteLocalize"] = state ? state.noRouteLocalize : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["orlonger"] = state ? state.orlonger : undefined;
            resourceInputs["p2mpLspRoot"] = state ? state.p2mpLspRoot : undefined;
            resourceInputs["preference"] = state ? state.preference : undefined;
            resourceInputs["preference2"] = state ? state.preference2 : undefined;
            resourceInputs["prefixLengthRange"] = state ? state.prefixLengthRange : undefined;
            resourceInputs["prefixSegment"] = state ? state.prefixSegment : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["resolutionMap"] = state ? state.resolutionMap : undefined;
            resourceInputs["resourceName"] = state ? state.resourceName : undefined;
            resourceInputs["selectedMldpEgress"] = state ? state.selectedMldpEgress : undefined;
            resourceInputs["sourceClass"] = state ? state.sourceClass : undefined;
            resourceInputs["srTeTemplate"] = state ? state.srTeTemplate : undefined;
            resourceInputs["ssmSource"] = state ? state.ssmSource : undefined;
            resourceInputs["tag"] = state ? state.tag : undefined;
            resourceInputs["tag2"] = state ? state.tag2 : undefined;
            resourceInputs["through"] = state ? state.through : undefined;
            resourceInputs["trace"] = state ? state.trace : undefined;
            resourceInputs["tunnelAttribute"] = state ? state.tunnelAttribute : undefined;
            resourceInputs["tunnelEndPointAddress"] = state ? state.tunnelEndPointAddress : undefined;
            resourceInputs["upto"] = state ? state.upto : undefined;
            resourceInputs["validationState"] = state ? state.validationState : undefined;
        } else {
            const args = argsOrState as PolicyOptionsPolicyStatementTermFromRouteFilterAddressArgs | undefined;
            if ((!args || args.resourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceName'");
            }
            resourceInputs["acceptReject"] = args ? args.acceptReject : undefined;
            resourceInputs["addPath"] = args ? args.addPath : undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["addressMask"] = args ? args.addressMask : undefined;
            resourceInputs["aggregateBandwidth"] = args ? args.aggregateBandwidth : undefined;
            resourceInputs["aigpAdjust"] = args ? args.aigpAdjust : undefined;
            resourceInputs["aigpOriginate"] = args ? args.aigpOriginate : undefined;
            resourceInputs["analyze"] = args ? args.analyze : undefined;
            resourceInputs["applyAdvanced"] = args ? args.applyAdvanced : undefined;
            resourceInputs["asPathExpand"] = args ? args.asPathExpand : undefined;
            resourceInputs["asPathPrepend"] = args ? args.asPathPrepend : undefined;
            resourceInputs["bgpOutputQueuePriority"] = args ? args.bgpOutputQueuePriority : undefined;
            resourceInputs["class"] = args ? args.class : undefined;
            resourceInputs["color"] = args ? args.color : undefined;
            resourceInputs["color2"] = args ? args.color2 : undefined;
            resourceInputs["community"] = args ? args.community : undefined;
            resourceInputs["cosNextHopMap"] = args ? args.cosNextHopMap : undefined;
            resourceInputs["damping"] = args ? args.damping : undefined;
            resourceInputs["defaultAction"] = args ? args.defaultAction : undefined;
            resourceInputs["destinationClass"] = args ? args.destinationClass : undefined;
            resourceInputs["dynamicTunnelAttributes"] = args ? args.dynamicTunnelAttributes : undefined;
            resourceInputs["exact"] = args ? args.exact : undefined;
            resourceInputs["external"] = args ? args.external : undefined;
            resourceInputs["forwardingClass"] = args ? args.forwardingClass : undefined;
            resourceInputs["getRouteRange"] = args ? args.getRouteRange : undefined;
            resourceInputs["installNexthop"] = args ? args.installNexthop : undefined;
            resourceInputs["installToFib"] = args ? args.installToFib : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["labelAllocation"] = args ? args.labelAllocation : undefined;
            resourceInputs["labelAllocationFallbackReject"] = args ? args.labelAllocationFallbackReject : undefined;
            resourceInputs["limitBandwidth"] = args ? args.limitBandwidth : undefined;
            resourceInputs["loadBalance"] = args ? args.loadBalance : undefined;
            resourceInputs["localPreference"] = args ? args.localPreference : undefined;
            resourceInputs["longer"] = args ? args.longer : undefined;
            resourceInputs["mapToInterface"] = args ? args.mapToInterface : undefined;
            resourceInputs["metric"] = args ? args.metric : undefined;
            resourceInputs["metric2"] = args ? args.metric2 : undefined;
            resourceInputs["metric3"] = args ? args.metric3 : undefined;
            resourceInputs["metric4"] = args ? args.metric4 : undefined;
            resourceInputs["mhopBfdPort"] = args ? args.mhopBfdPort : undefined;
            resourceInputs["multipathResolve"] = args ? args.multipathResolve : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["name1"] = args ? args.name1 : undefined;
            resourceInputs["next"] = args ? args.next : undefined;
            resourceInputs["nextHop"] = args ? args.nextHop : undefined;
            resourceInputs["noBackup"] = args ? args.noBackup : undefined;
            resourceInputs["noEntropyLabelCapability"] = args ? args.noEntropyLabelCapability : undefined;
            resourceInputs["noRouteLocalize"] = args ? args.noRouteLocalize : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["orlonger"] = args ? args.orlonger : undefined;
            resourceInputs["p2mpLspRoot"] = args ? args.p2mpLspRoot : undefined;
            resourceInputs["preference"] = args ? args.preference : undefined;
            resourceInputs["preference2"] = args ? args.preference2 : undefined;
            resourceInputs["prefixLengthRange"] = args ? args.prefixLengthRange : undefined;
            resourceInputs["prefixSegment"] = args ? args.prefixSegment : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["resolutionMap"] = args ? args.resolutionMap : undefined;
            resourceInputs["resourceName"] = args ? args.resourceName : undefined;
            resourceInputs["selectedMldpEgress"] = args ? args.selectedMldpEgress : undefined;
            resourceInputs["sourceClass"] = args ? args.sourceClass : undefined;
            resourceInputs["srTeTemplate"] = args ? args.srTeTemplate : undefined;
            resourceInputs["ssmSource"] = args ? args.ssmSource : undefined;
            resourceInputs["tag"] = args ? args.tag : undefined;
            resourceInputs["tag2"] = args ? args.tag2 : undefined;
            resourceInputs["through"] = args ? args.through : undefined;
            resourceInputs["trace"] = args ? args.trace : undefined;
            resourceInputs["tunnelAttribute"] = args ? args.tunnelAttribute : undefined;
            resourceInputs["tunnelEndPointAddress"] = args ? args.tunnelEndPointAddress : undefined;
            resourceInputs["upto"] = args ? args.upto : undefined;
            resourceInputs["validationState"] = args ? args.validationState : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyOptionsPolicyStatementTermFromRouteFilterAddress.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PolicyOptionsPolicyStatementTermFromRouteFilterAddress resources.
 */
export interface PolicyOptionsPolicyStatementTermFromRouteFilterAddressState {
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    acceptReject?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    addPath?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter. IP address or hostname
     */
    address?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    addressMask?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    aggregateBandwidth?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    aigpAdjust?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    aigpOriginate?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    analyze?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    applyAdvanced?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    asPathExpand?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    asPathPrepend?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    bgpOutputQueuePriority?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    class?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    color?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    color2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    community?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    cosNextHopMap?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    damping?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    destinationClass?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    dynamicTunnelAttributes?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    exact?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    external?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    forwardingClass?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    getRouteRange?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    installNexthop?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    installToFib?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    label?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    labelAllocation?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    labelAllocationFallbackReject?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    limitBandwidth?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    loadBalance?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    localPreference?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    longer?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    mapToInterface?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric3?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric4?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    mhopBfdPort?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    multipathResolve?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement
     */
    name?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term
     */
    name1?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    next?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    nextHop?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    noBackup?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    noEntropyLabelCapability?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    noRouteLocalize?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    origin?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    orlonger?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    p2mpLspRoot?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    preference?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    preference2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    prefixLengthRange?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    prefixSegment?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    priority?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    resolutionMap?: pulumi.Input<string>;
    resourceName?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    selectedMldpEgress?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    sourceClass?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    srTeTemplate?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    ssmSource?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tag?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tag2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    through?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    trace?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tunnelAttribute?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tunnelEndPointAddress?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    upto?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    validationState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyOptionsPolicyStatementTermFromRouteFilterAddress resource.
 */
export interface PolicyOptionsPolicyStatementTermFromRouteFilterAddressArgs {
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    acceptReject?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    addPath?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter. IP address or hostname
     */
    address?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    addressMask?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    aggregateBandwidth?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    aigpAdjust?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    aigpOriginate?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    analyze?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    applyAdvanced?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    asPathExpand?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    asPathPrepend?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    bgpOutputQueuePriority?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    class?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    color?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    color2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    community?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    cosNextHopMap?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    damping?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    destinationClass?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    dynamicTunnelAttributes?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    exact?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    external?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    forwardingClass?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    getRouteRange?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    installNexthop?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    installToFib?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    label?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    labelAllocation?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    labelAllocationFallbackReject?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    limitBandwidth?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    loadBalance?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    localPreference?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    longer?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    mapToInterface?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric3?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    metric4?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    mhopBfdPort?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    multipathResolve?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement
     */
    name?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term
     */
    name1?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    next?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    nextHop?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    noBackup?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    noEntropyLabelCapability?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    noRouteLocalize?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    origin?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    orlonger?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    p2mpLspRoot?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    preference?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    preference2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    prefixLengthRange?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    prefixSegment?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    priority?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    resolutionMap?: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    selectedMldpEgress?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    sourceClass?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    srTeTemplate?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    ssmSource?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tag?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tag2?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    through?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    trace?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tunnelAttribute?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    tunnelEndPointAddress?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    upto?: pulumi.Input<string>;
    /**
     * xpath is: config.Groups.V_policy__statement.V_term.V_route__filter
     */
    validationState?: pulumi.Input<string>;
}
