// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessPointAwsEgressPrivateLinkEndpoint {
    /**
     * Defaults to `false`.
     */
    enableHighAvailability?: pulumi.Input<boolean>;
    vpcEndpointDnsName?: pulumi.Input<string>;
    vpcEndpointId?: pulumi.Input<string>;
    vpcEndpointServiceName: pulumi.Input<string>;
}

export interface AccessPointAzureEgressPrivateLinkEndpoint {
    privateEndpointCustomDnsConfigDomains?: pulumi.Input<pulumi.Input<string>[]>;
    privateEndpointDomain?: pulumi.Input<string>;
    privateEndpointIpAddress?: pulumi.Input<string>;
    privateEndpointResourceId?: pulumi.Input<string>;
    privateLinkServiceResourceId: pulumi.Input<string>;
    privateLinkSubresourceName?: pulumi.Input<string>;
}

export interface AccessPointEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface AccessPointGateway {
    /**
     * The unique identifier for the gateway.
     */
    id: pulumi.Input<string>;
}

export interface ApiKeyManagedResource {
    /**
     * The API version of the referred owner.
     */
    apiVersion: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.ApiKeyManagedResourceEnvironment>;
    /**
     * The unique identifier for the referred resource.
     */
    id: pulumi.Input<string>;
    /**
     * The kind of the referred resource.
     */
    kind: pulumi.Input<string>;
}

export interface ApiKeyManagedResourceEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface ApiKeyOwner {
    /**
     * The API version of the referred owner.
     */
    apiVersion: pulumi.Input<string>;
    /**
     * The unique identifier for the referred owner.
     */
    id: pulumi.Input<string>;
    /**
     * The kind of the referred owner.
     */
    kind: pulumi.Input<string>;
}

export interface BusinessMetadataAttributeDefinition {
    defaultValue?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isOptional?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
}

export interface BusinessMetadataBindingCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface BusinessMetadataBindingSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface BusinessMetadataCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface BusinessMetadataSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface ByokKeyAws {
    keyArn: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ByokKeyAzure {
    applicationId?: pulumi.Input<string>;
    keyIdentifier: pulumi.Input<string>;
    keyVaultId: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface ByokKeyGcp {
    keyId: pulumi.Input<string>;
    securityGroup?: pulumi.Input<string>;
}

export interface CatalogEntityAttributesCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface CatalogEntityAttributesSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface ClusterLinkDestinationKafkaCluster {
    /**
     * The bootstrap endpoint used by Kafka clients to connect to the Kafka cluster. (e.g., `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkDestinationKafkaClusterCredentials>;
    /**
     * The unique identifier for the referred Kafka cluster.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkDestinationKafkaClusterCredentials {
    /**
     * The Kafka API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface ClusterLinkLocalKafkaCluster {
    /**
     * The bootstrap endpoint used by Kafka clients to connect to the Kafka cluster. (e.g., `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkLocalKafkaClusterCredentials>;
    /**
     * The unique identifier for the referred Kafka cluster.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkLocalKafkaClusterCredentials {
    /**
     * The Kafka API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface ClusterLinkRemoteKafkaCluster {
    /**
     * The bootstrap endpoint used by Kafka clients to connect to the Kafka cluster. (e.g., `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkRemoteKafkaClusterCredentials>;
    /**
     * The unique identifier for the referred Kafka cluster.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkRemoteKafkaClusterCredentials {
    /**
     * The Kafka API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface ClusterLinkSourceKafkaCluster {
    /**
     * The bootstrap endpoint used by Kafka clients to connect to the Kafka cluster. (e.g., `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkSourceKafkaClusterCredentials>;
    /**
     * The unique identifier for the referred Kafka cluster.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkSourceKafkaClusterCredentials {
    /**
     * The Kafka API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface ConnectorEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface ConnectorKafkaCluster {
    /**
     * The Kafka cluster ID (e.g., `lkc-12345`).
     */
    id: pulumi.Input<string>;
}

export interface ConnectorTimeouts {
    create?: pulumi.Input<string>;
}

export interface DnsForwarderEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface DnsForwarderForwardViaIp {
    dnsServerIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DnsForwarderGateway {
    /**
     * The unique identifier for the gateway.
     */
    id: pulumi.Input<string>;
}

export interface DnsRecordEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface DnsRecordGateway {
    /**
     * The unique identifier for the gateway.
     */
    id: pulumi.Input<string>;
}

export interface DnsRecordPrivateLinkAccessPoint {
    id: pulumi.Input<string>;
}

export interface EnvironmentStreamGovernance {
    /**
     * Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
     */
    package: pulumi.Input<string>;
}

export interface FlinkComputePoolEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface FlinkComputePoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface FlinkStatementComputePool {
    id: pulumi.Input<string>;
}

export interface FlinkStatementCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface FlinkStatementEnvironment {
    id: pulumi.Input<string>;
}

export interface FlinkStatementOrganization {
    id: pulumi.Input<string>;
}

export interface FlinkStatementPrincipal {
    id: pulumi.Input<string>;
}

export interface FlinkStatementTimeouts {
    create?: pulumi.Input<string>;
}

export interface GetAccessPointEnvironment {
    id: string;
}

export interface GetAccessPointEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetBusinessMetadataBindingCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetBusinessMetadataBindingCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetBusinessMetadataBindingSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetBusinessMetadataBindingSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetBusinessMetadataCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetBusinessMetadataCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetBusinessMetadataSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetBusinessMetadataSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetDnsRecordEnvironment {
    id: string;
}

export interface GetDnsRecordEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetEnvironmentStreamGovernance {
    /**
     * Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
     */
    package: string;
}

export interface GetEnvironmentStreamGovernanceArgs {
    /**
     * Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
     */
    package: pulumi.Input<string>;
}

export interface GetFlinkComputePoolEnvironment {
    id: string;
}

export interface GetFlinkComputePoolEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetGatewayEnvironment {
    id: string;
}

export interface GetGatewayEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetIdentityPoolIdentityProvider {
    id: string;
}

export interface GetIdentityPoolIdentityProviderArgs {
    id: pulumi.Input<string>;
}

export interface GetIpAddressesFilter {
    /**
     * Filter the results by exact match for address_type. Pass multiple times to see results matching any of the values.
     */
    addressTypes?: string[];
    /**
     * Filter the results by exact match for cloud. Pass multiple times to see results matching any of the values.
     */
    clouds?: string[];
    /**
     * Filter the results by exact match for region. Pass multiple times to see results matching any of the values.
     */
    regions?: string[];
    /**
     * Filter the results by exact match for services. Pass multiple times to see results matching any of the values.
     */
    services?: string[];
}

export interface GetIpAddressesFilterArgs {
    /**
     * Filter the results by exact match for address_type. Pass multiple times to see results matching any of the values.
     */
    addressTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter the results by exact match for cloud. Pass multiple times to see results matching any of the values.
     */
    clouds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter the results by exact match for region. Pass multiple times to see results matching any of the values.
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter the results by exact match for services. Pass multiple times to see results matching any of the values.
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKafkaClusterBasic {
}

export interface GetKafkaClusterBasicArgs {
}

export interface GetKafkaClusterDedicated {
    /**
     * The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. MULTI_ZONE dedicated clusters must have at least two CKUs.
     */
    cku?: number;
    /**
     * The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
     */
    encryptionKey?: string;
    /**
     * The list of zones the cluster is in.
     */
    zones?: string[];
}

export interface GetKafkaClusterDedicatedArgs {
    /**
     * The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. MULTI_ZONE dedicated clusters must have at least two CKUs.
     */
    cku?: pulumi.Input<number>;
    /**
     * The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The list of zones the cluster is in.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKafkaClusterEnterprise {
}

export interface GetKafkaClusterEnterpriseArgs {
}

export interface GetKafkaClusterEnvironment {
    id: string;
}

export interface GetKafkaClusterEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetKafkaClusterFreight {
    /**
     * The list of zones the cluster is in.
     */
    zones?: string[];
}

export interface GetKafkaClusterFreightArgs {
    /**
     * The list of zones the cluster is in.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKafkaClusterStandard {
}

export interface GetKafkaClusterStandardArgs {
}

export interface GetKafkaTopicCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetKafkaTopicCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetKafkaTopicKafkaCluster {
    id: string;
}

export interface GetKafkaTopicKafkaClusterArgs {
    id: pulumi.Input<string>;
}

export interface GetKsqlClusterEnvironment {
    id: string;
}

export interface GetKsqlClusterEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetNetworkAw {
    /**
     * The AWS account ID associated with the Confluent Cloud VPC.
     */
    account?: string;
    /**
     * The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
     */
    privateLinkEndpointService?: string;
    /**
     * The Confluent Cloud VPC ID.
     */
    vpc?: string;
}

export interface GetNetworkAwArgs {
    /**
     * The AWS account ID associated with the Confluent Cloud VPC.
     */
    account?: pulumi.Input<string>;
    /**
     * The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
     */
    privateLinkEndpointService?: pulumi.Input<string>;
    /**
     * The Confluent Cloud VPC ID.
     */
    vpc?: pulumi.Input<string>;
}

export interface GetNetworkAzure {
    privateLinkServiceAliases?: {[key: string]: string};
}

export interface GetNetworkAzureArgs {
    privateLinkServiceAliases?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetNetworkDnsConfig {
    /**
     * Network DNS resolution.
     */
    resolution?: string;
}

export interface GetNetworkDnsConfigArgs {
    /**
     * Network DNS resolution.
     */
    resolution?: pulumi.Input<string>;
}

export interface GetNetworkEnvironment {
    id: string;
}

export interface GetNetworkEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetNetworkGcp {
    /**
     * The mapping of zones to Private Service Connect service attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     */
    privateServiceConnectServiceAttachments?: {[key: string]: string};
    /**
     * The GCP project.
     */
    project?: string;
    /**
     * The GCP VPC network name.
     */
    vpcNetwork?: string;
}

export interface GetNetworkGcpArgs {
    /**
     * The mapping of zones to Private Service Connect service attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     */
    privateServiceConnectServiceAttachments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GCP project.
     */
    project?: pulumi.Input<string>;
    /**
     * The GCP VPC network name.
     */
    vpcNetwork?: pulumi.Input<string>;
}

export interface GetNetworkLinkEndpointEnvironment {
    id: string;
}

export interface GetNetworkLinkEndpointEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetNetworkLinkServiceAccept {
    environments?: string[];
    networks?: string[];
}

export interface GetNetworkLinkServiceAcceptArgs {
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    networks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLinkServiceEnvironment {
    id: string;
}

export interface GetNetworkLinkServiceEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetPeeringEnvironment {
    id: string;
}

export interface GetPeeringEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetPrivateLinkAccessEnvironment {
    id: string;
}

export interface GetPrivateLinkAccessEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetPrivateLinkAttachmentConnectionEnvironment {
    id: string;
}

export interface GetPrivateLinkAttachmentConnectionEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetPrivateLinkAttachmentEnvironment {
    id: string;
}

export interface GetPrivateLinkAttachmentEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetSchemaCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSchemaCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaMetadata {
    properties?: {[key: string]: string};
    sensitives?: string[];
    tags?: inputs.GetSchemaMetadataTag[];
}

export interface GetSchemaMetadataArgs {
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sensitives?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSchemaMetadataTagArgs>[]>;
}

export interface GetSchemaMetadataTag {
    key?: string;
    values?: string[];
}

export interface GetSchemaMetadataTagArgs {
    key?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSchemaRegistryClusterConfigCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSchemaRegistryClusterConfigCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterConfigSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterEnvironment {
    id: string;
}

export interface GetSchemaRegistryClusterEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterModeCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSchemaRegistryClusterModeCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterModeSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSchemaRegistryClusterModeSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryClustersEnvironment {
    id: string;
}

export interface GetSchemaRegistryClustersEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryDekCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSchemaRegistryDekCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryDekSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSchemaRegistryDekSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryKekCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSchemaRegistryKekCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryKekSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSchemaRegistryKekSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRuleset {
    domainRules?: inputs.GetSchemaRulesetDomainRule[];
    migrationRules?: inputs.GetSchemaRulesetMigrationRule[];
}

export interface GetSchemaRulesetArgs {
    domainRules?: pulumi.Input<pulumi.Input<inputs.GetSchemaRulesetDomainRuleArgs>[]>;
    migrationRules?: pulumi.Input<pulumi.Input<inputs.GetSchemaRulesetMigrationRuleArgs>[]>;
}

export interface GetSchemaRulesetDomainRule {
    doc?: string;
    expr?: string;
    kind?: string;
    mode?: string;
    name?: string;
    onFailure?: string;
    onSuccess?: string;
    params?: {[key: string]: string};
    tags?: string[];
    type?: string;
}

export interface GetSchemaRulesetDomainRuleArgs {
    doc?: pulumi.Input<string>;
    expr?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    onFailure?: pulumi.Input<string>;
    onSuccess?: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface GetSchemaRulesetMigrationRule {
    doc?: string;
    expr?: string;
    kind?: string;
    mode?: string;
    name?: string;
    onFailure?: string;
    onSuccess?: string;
    params?: {[key: string]: string};
    tags?: string[];
    type?: string;
}

export interface GetSchemaRulesetMigrationRuleArgs {
    doc?: pulumi.Input<string>;
    expr?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    onFailure?: pulumi.Input<string>;
    onSuccess?: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface GetSchemaSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSchemaSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSchemasCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSchemasCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemasFilter {
    /**
     * Whether to return latest schema versions only for each matching subject. Defaults to `false`.
     */
    deleted?: boolean;
    /**
     * Whether to return soft deleted schemas. Defaults to `false`.
     */
    latestOnly?: boolean;
    /**
     * The prefix of the Schema Registry Subject.
     */
    subjectPrefix?: string;
}

export interface GetSchemasFilterArgs {
    /**
     * Whether to return latest schema versions only for each matching subject. Defaults to `false`.
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * Whether to return soft deleted schemas. Defaults to `false`.
     */
    latestOnly?: pulumi.Input<boolean>;
    /**
     * The prefix of the Schema Registry Subject.
     */
    subjectPrefix?: pulumi.Input<string>;
}

export interface GetSchemasSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSchemasSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSubjectConfigCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSubjectConfigCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSubjectConfigSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSubjectConfigSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetSubjectModeCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetSubjectModeCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSubjectModeSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetSubjectModeSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetTagBindingCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetTagBindingCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetTagBindingSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetTagBindingSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetTagCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetTagCredentialsArgs {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetTagSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: string;
}

export interface GetTagSchemaRegistryClusterArgs {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface GetTransitGatewayAttachmentEnvironment {
    id: string;
}

export interface GetTransitGatewayAttachmentEnvironmentArgs {
    id: pulumi.Input<string>;
}

export interface IdentityPoolIdentityProvider {
    /**
     * The unique identifier for the Identity Provider.
     */
    id: pulumi.Input<string>;
}

export interface InvitationCreator {
    id: pulumi.Input<string>;
}

export interface InvitationUser {
    id: pulumi.Input<string>;
}

export interface KafkaAclCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaAclKafkaCluster {
    /**
     * The Kafka cluster ID (e.g., `lkc-12345`).
     */
    id: pulumi.Input<string>;
}

export interface KafkaClientQuotaEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClientQuotaKafkaCluster {
    /**
     * The Kafka cluster ID (e.g., `lkc-12345`).
     */
    id: pulumi.Input<string>;
}

export interface KafkaClientQuotaThroughput {
    /**
     * The egress throughput limit in bytes per second.
     */
    egressByteRate: pulumi.Input<string>;
    /**
     * The ingress throughput limit in bytes per second.
     */
    ingressByteRate: pulumi.Input<string>;
}

export interface KafkaClusterBasic {
}

export interface KafkaClusterByokKey {
    /**
     * The ID of the Confluent key that is used to encrypt the data in the Kafka cluster.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterConfigCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaClusterConfigKafkaCluster {
    /**
     * The Kafka cluster ID (e.g., `lkc-12345`).
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterDedicated {
    /**
     * The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. MULTI_ZONE dedicated clusters must have at least two CKUs.
     */
    cku: pulumi.Input<number>;
    /**
     * The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The list of zones the cluster is in.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KafkaClusterEnterprise {
}

export interface KafkaClusterEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterFreight {
    /**
     * The list of zones the cluster is in.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KafkaClusterNetwork {
    /**
     * The unique identifier for the network.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterStandard {
}

export interface KafkaClusterTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KafkaMirrorTopicClusterLink {
    /**
     * The name of the Cluster Link.
     */
    linkName: pulumi.Input<string>;
}

export interface KafkaMirrorTopicKafkaCluster {
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.KafkaMirrorTopicKafkaClusterCredentials>;
    /**
     * The unique identifier for the referred Kafka cluster.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the Kafka cluster (e.g., `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface KafkaMirrorTopicKafkaClusterCredentials {
    /**
     * The Kafka API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaMirrorTopicSourceKafkaTopic {
    /**
     * The name of the Source Kafka topic.
     */
    topicName: pulumi.Input<string>;
}

export interface KafkaTopicCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaTopicKafkaCluster {
    /**
     * The Kafka cluster ID (e.g., `lkc-12345`).
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterCredentialIdentity {
    /**
     * The credential_identity to which this belongs. The credential_identity can be one of iam.v2.User, iam.v2.ServiceAccount.
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterKafkaCluster {
    /**
     * The Kafka cluster ID (e.g., `lkc-12345`).
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterTimeouts {
    create?: pulumi.Input<string>;
}

export interface NetworkAw {
    /**
     * The AWS account ID associated with the Confluent Cloud VPC.
     */
    account?: pulumi.Input<string>;
    /**
     * The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
     */
    privateLinkEndpointService?: pulumi.Input<string>;
    /**
     * The Confluent Cloud VPC ID.
     */
    vpc?: pulumi.Input<string>;
}

export interface NetworkAzure {
    privateLinkServiceAliases?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NetworkDnsConfig {
    /**
     * Network DNS resolution.
     */
    resolution: pulumi.Input<string>;
}

export interface NetworkEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface NetworkGateway {
    id: pulumi.Input<string>;
}

export interface NetworkGcp {
    /**
     * The mapping of zones to Private Service Connect service attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     */
    privateServiceConnectServiceAttachments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GCP project.
     */
    project?: pulumi.Input<string>;
    /**
     * The GCP VPC network name.
     */
    vpcNetwork?: pulumi.Input<string>;
}

export interface NetworkLinkEndpointEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkEndpointNetwork {
    /**
     * The unique identifier for the network.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkEndpointNetworkLinkService {
    /**
     * The unique identifier for the Network Link Endpoint.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkServiceAccept {
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    networks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkLinkServiceEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkServiceNetwork {
    /**
     * The unique identifier for the network.
     */
    id: pulumi.Input<string>;
}

export interface NetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface NetworkZoneInfo {
    cidr?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

export interface PeeringAws {
    /**
     * AWS account for VPC to peer with the network.
     */
    account: pulumi.Input<string>;
    /**
     * Region of customer VPC.
     */
    customerRegion: pulumi.Input<string>;
    /**
     * List of routes for the peering.
     */
    routes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the AWS VPC to peer with.
     */
    vpc: pulumi.Input<string>;
}

export interface PeeringAzure {
    /**
     * Region of customer VNet.
     */
    customerRegion: pulumi.Input<string>;
    /**
     * Customer Azure tenant.
     */
    tenant: pulumi.Input<string>;
    /**
     * Customer VNet to peer with.
     */
    vnet: pulumi.Input<string>;
}

export interface PeeringEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface PeeringGcp {
    /**
     * Enable customer route import. Defaults to `false`.
     */
    importCustomRoutes?: pulumi.Input<boolean>;
    /**
     * The name of the GCP project.
     */
    project: pulumi.Input<string>;
    /**
     * The name of the GCP VPC network to peer with.
     */
    vpcNetwork: pulumi.Input<string>;
}

export interface PeeringNetwork {
    /**
     * The unique identifier for the network.
     */
    id: pulumi.Input<string>;
}

export interface PeeringTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface PrivateLinkAccessAws {
    /**
     * AWS Account ID to allow for PrivateLink access. Find here (https://console.aws.amazon.com/billing/home?#/account) under My Account in your AWS Management Console.
     */
    account: pulumi.Input<string>;
}

export interface PrivateLinkAccessAzure {
    /**
     * Azure subscription to allow for PrivateLink access.
     */
    subscription: pulumi.Input<string>;
}

export interface PrivateLinkAccessEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAccessGcp {
    /**
     * The GCP project ID to allow for Private Service Connect access.
     */
    project: pulumi.Input<string>;
}

export interface PrivateLinkAccessNetwork {
    /**
     * The unique identifier for the network.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAccessTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentAw {
    vpcEndpointServiceName: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentAzure {
    privateLinkServiceAlias: pulumi.Input<string>;
    privateLinkServiceResourceId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionAws {
    /**
     * Id of a VPC Endpoint that is connected to the VPC Endpoint service.
     */
    vpcEndpointId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionAzure {
    /**
     * Resource Id of the PrivateEndpoint that is connected to the PrivateLink service.
     */
    privateEndpointResourceId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionGcp {
    /**
     * Id of the Private Service connection.
     */
    privateServiceConnectConnectionId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionPrivateLinkAttachment {
    /**
     * The unique identifier for the private link attachment.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentGcp {
    privateServiceConnectServiceAttachment: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}

export interface SchemaCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaExporterCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaExporterDestinationSchemaRegistryCluster {
    credentials: pulumi.Input<inputs.SchemaExporterDestinationSchemaRegistryClusterCredentials>;
    restEndpoint: pulumi.Input<string>;
}

export interface SchemaExporterDestinationSchemaRegistryClusterCredentials {
    key: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface SchemaExporterSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SchemaMetadata {
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    sensitives?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.SchemaMetadataTag>[]>;
}

export interface SchemaMetadataTag {
    key?: pulumi.Input<string>;
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SchemaRegistryClusterConfigCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryClusterConfigSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SchemaRegistryClusterModeCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryClusterModeSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SchemaRegistryDekCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryDekSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SchemaRegistryKekCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryKekSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SchemaRuleset {
    domainRules?: pulumi.Input<pulumi.Input<inputs.SchemaRulesetDomainRule>[]>;
    migrationRules?: pulumi.Input<pulumi.Input<inputs.SchemaRulesetMigrationRule>[]>;
}

export interface SchemaRulesetDomainRule {
    doc?: pulumi.Input<string>;
    expr?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    onFailure?: pulumi.Input<string>;
    onSuccess?: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface SchemaRulesetMigrationRule {
    doc?: pulumi.Input<string>;
    expr?: pulumi.Input<string>;
    kind?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    onFailure?: pulumi.Input<string>;
    onSuccess?: pulumi.Input<string>;
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    type?: pulumi.Input<string>;
}

export interface SchemaSchemaReference {
    /**
     * The name of the Schema references (for example, "io.confluent.kafka.example.User"). For Avro, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf, it is the name of another Protobuf file.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the referenced Schema Registry Subject (for example, "User").
     */
    subjectName: pulumi.Input<string>;
    /**
     * The version of the referenced Schema.
     */
    version: pulumi.Input<number>;
}

export interface SchemaSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SubjectConfigCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SubjectConfigSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface SubjectModeCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SubjectModeSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface TagBindingCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface TagBindingSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface TagCredentials {
    /**
     * The Cluster API Key for your Confluent Cloud cluster.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface TagSchemaRegistryCluster {
    /**
     * The Schema Registry cluster ID (e.g., `lsrc-abc123`).
     */
    id: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentAws {
    /**
     * The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
     */
    ramResourceShareArn: pulumi.Input<string>;
    /**
     * List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
     */
    routes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
     */
    transitGatewayAttachmentId?: pulumi.Input<string>;
    /**
     * The ID of the AWS Transit Gateway that your Confluent Cloud network attaches to.
     */
    transitGatewayId: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentEnvironment {
    /**
     * The unique identifier for the environment.
     */
    id: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentNetwork {
    /**
     * The unique identifier for the network.
     */
    id: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
}
