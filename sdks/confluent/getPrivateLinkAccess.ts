// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPrivateLinkAccess(args: GetPrivateLinkAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateLinkAccessResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getPrivateLinkAccess:getPrivateLinkAccess", {
        "displayName": args.displayName,
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivateLinkAccess.
 */
export interface GetPrivateLinkAccessArgs {
    displayName?: string;
    environment: inputs.GetPrivateLinkAccessEnvironment;
    id?: string;
}

/**
 * A collection of values returned by getPrivateLinkAccess.
 */
export interface GetPrivateLinkAccessResult {
    readonly aws: outputs.GetPrivateLinkAccessAw[];
    readonly azures: outputs.GetPrivateLinkAccessAzure[];
    readonly displayName: string;
    readonly environment: outputs.GetPrivateLinkAccessEnvironment;
    readonly gcps: outputs.GetPrivateLinkAccessGcp[];
    readonly id: string;
    readonly networks: outputs.GetPrivateLinkAccessNetwork[];
}
export function getPrivateLinkAccessOutput(args: GetPrivateLinkAccessOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateLinkAccessResult> {
    return pulumi.output(args).apply((a: any) => getPrivateLinkAccess(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateLinkAccess.
 */
export interface GetPrivateLinkAccessOutputArgs {
    displayName?: pulumi.Input<string>;
    environment: pulumi.Input<inputs.GetPrivateLinkAccessEnvironmentArgs>;
    id?: pulumi.Input<string>;
}
