// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSchemaRegistryClusterMode(args?: GetSchemaRegistryClusterModeArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaRegistryClusterModeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getSchemaRegistryClusterMode:getSchemaRegistryClusterMode", {
        "credentials": args.credentials,
        "id": args.id,
        "restEndpoint": args.restEndpoint,
        "schemaRegistryCluster": args.schemaRegistryCluster,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaRegistryClusterMode.
 */
export interface GetSchemaRegistryClusterModeArgs {
    credentials?: inputs.GetSchemaRegistryClusterModeCredentials;
    id?: string;
    restEndpoint?: string;
    schemaRegistryCluster?: inputs.GetSchemaRegistryClusterModeSchemaRegistryCluster;
}

/**
 * A collection of values returned by getSchemaRegistryClusterMode.
 */
export interface GetSchemaRegistryClusterModeResult {
    readonly credentials?: outputs.GetSchemaRegistryClusterModeCredentials;
    readonly id: string;
    readonly mode: string;
    readonly restEndpoint?: string;
    readonly schemaRegistryCluster?: outputs.GetSchemaRegistryClusterModeSchemaRegistryCluster;
}
export function getSchemaRegistryClusterModeOutput(args?: GetSchemaRegistryClusterModeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaRegistryClusterModeResult> {
    return pulumi.output(args).apply((a: any) => getSchemaRegistryClusterMode(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaRegistryClusterMode.
 */
export interface GetSchemaRegistryClusterModeOutputArgs {
    credentials?: pulumi.Input<inputs.GetSchemaRegistryClusterModeCredentialsArgs>;
    id?: pulumi.Input<string>;
    restEndpoint?: pulumi.Input<string>;
    schemaRegistryCluster?: pulumi.Input<inputs.GetSchemaRegistryClusterModeSchemaRegistryClusterArgs>;
}
