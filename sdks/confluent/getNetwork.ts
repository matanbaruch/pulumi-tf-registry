// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetwork(args: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getNetwork:getNetwork", {
        "aws": args.aws,
        "azures": args.azures,
        "displayName": args.displayName,
        "dnsConfigs": args.dnsConfigs,
        "environment": args.environment,
        "gcps": args.gcps,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    aws?: inputs.GetNetworkAw[];
    azures?: inputs.GetNetworkAzure[];
    displayName?: string;
    dnsConfigs?: inputs.GetNetworkDnsConfig[];
    environment: inputs.GetNetworkEnvironment;
    gcps?: inputs.GetNetworkGcp[];
    id?: string;
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly aws?: outputs.GetNetworkAw[];
    readonly azures?: outputs.GetNetworkAzure[];
    readonly cidr: string;
    readonly cloud: string;
    readonly connectionTypes: string[];
    readonly displayName: string;
    readonly dnsConfigs?: outputs.GetNetworkDnsConfig[];
    readonly dnsDomain: string;
    readonly environment: outputs.GetNetworkEnvironment;
    readonly gateways: outputs.GetNetworkGateway[];
    readonly gcps?: outputs.GetNetworkGcp[];
    readonly id: string;
    readonly region: string;
    readonly reservedCidr: string;
    readonly resourceName: string;
    readonly zonalSubdomains: {[key: string]: string};
    readonly zoneInfos: outputs.GetNetworkZoneInfo[];
    readonly zones: string[];
}
export function getNetworkOutput(args: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    aws?: pulumi.Input<pulumi.Input<inputs.GetNetworkAwArgs>[]>;
    azures?: pulumi.Input<pulumi.Input<inputs.GetNetworkAzureArgs>[]>;
    displayName?: pulumi.Input<string>;
    dnsConfigs?: pulumi.Input<pulumi.Input<inputs.GetNetworkDnsConfigArgs>[]>;
    environment: pulumi.Input<inputs.GetNetworkEnvironmentArgs>;
    gcps?: pulumi.Input<pulumi.Input<inputs.GetNetworkGcpArgs>[]>;
    id?: pulumi.Input<string>;
}
