// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubjectConfig(args: GetSubjectConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetSubjectConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getSubjectConfig:getSubjectConfig", {
        "credentials": args.credentials,
        "id": args.id,
        "restEndpoint": args.restEndpoint,
        "schemaRegistryCluster": args.schemaRegistryCluster,
        "subjectName": args.subjectName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubjectConfig.
 */
export interface GetSubjectConfigArgs {
    credentials?: inputs.GetSubjectConfigCredentials;
    id?: string;
    restEndpoint?: string;
    schemaRegistryCluster?: inputs.GetSubjectConfigSchemaRegistryCluster;
    subjectName: string;
}

/**
 * A collection of values returned by getSubjectConfig.
 */
export interface GetSubjectConfigResult {
    readonly compatibilityLevel: string;
    readonly credentials?: outputs.GetSubjectConfigCredentials;
    readonly id: string;
    readonly restEndpoint?: string;
    readonly schemaRegistryCluster?: outputs.GetSubjectConfigSchemaRegistryCluster;
    readonly subjectName: string;
}
export function getSubjectConfigOutput(args: GetSubjectConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubjectConfigResult> {
    return pulumi.output(args).apply((a: any) => getSubjectConfig(a, opts))
}

/**
 * A collection of arguments for invoking getSubjectConfig.
 */
export interface GetSubjectConfigOutputArgs {
    credentials?: pulumi.Input<inputs.GetSubjectConfigCredentialsArgs>;
    id?: pulumi.Input<string>;
    restEndpoint?: pulumi.Input<string>;
    schemaRegistryCluster?: pulumi.Input<inputs.GetSubjectConfigSchemaRegistryClusterArgs>;
    subjectName: pulumi.Input<string>;
}
