// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDnsRecord(args: GetDnsRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRecordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getDnsRecord:getDnsRecord", {
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordArgs {
    environment: inputs.GetDnsRecordEnvironment;
    id: string;
}

/**
 * A collection of values returned by getDnsRecord.
 */
export interface GetDnsRecordResult {
    readonly displayName: string;
    readonly domain: string;
    readonly environment: outputs.GetDnsRecordEnvironment;
    readonly gateways: outputs.GetDnsRecordGateway[];
    readonly id: string;
    readonly privateLinkAccessPoints: outputs.GetDnsRecordPrivateLinkAccessPoint[];
}
export function getDnsRecordOutput(args: GetDnsRecordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDnsRecordResult> {
    return pulumi.output(args).apply((a: any) => getDnsRecord(a, opts))
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordOutputArgs {
    environment: pulumi.Input<inputs.GetDnsRecordEnvironmentArgs>;
    id: pulumi.Input<string>;
}
