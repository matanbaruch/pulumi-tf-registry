// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkLinkService(args: GetNetworkLinkServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkLinkServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getNetworkLinkService:getNetworkLinkService", {
        "accept": args.accept,
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkLinkService.
 */
export interface GetNetworkLinkServiceArgs {
    accept?: inputs.GetNetworkLinkServiceAccept;
    environment: inputs.GetNetworkLinkServiceEnvironment;
    id: string;
}

/**
 * A collection of values returned by getNetworkLinkService.
 */
export interface GetNetworkLinkServiceResult {
    readonly accept?: outputs.GetNetworkLinkServiceAccept;
    readonly description: string;
    readonly displayName: string;
    readonly environment: outputs.GetNetworkLinkServiceEnvironment;
    readonly id: string;
    readonly networks: outputs.GetNetworkLinkServiceNetwork[];
    readonly resourceName: string;
}
export function getNetworkLinkServiceOutput(args: GetNetworkLinkServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkLinkServiceResult> {
    return pulumi.output(args).apply((a: any) => getNetworkLinkService(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkLinkService.
 */
export interface GetNetworkLinkServiceOutputArgs {
    accept?: pulumi.Input<inputs.GetNetworkLinkServiceAcceptArgs>;
    environment: pulumi.Input<inputs.GetNetworkLinkServiceEnvironmentArgs>;
    id: pulumi.Input<string>;
}
