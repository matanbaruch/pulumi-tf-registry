// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessPoint(args: GetAccessPointArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getAccessPoint:getAccessPoint", {
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessPoint.
 */
export interface GetAccessPointArgs {
    environment: inputs.GetAccessPointEnvironment;
    id: string;
}

/**
 * A collection of values returned by getAccessPoint.
 */
export interface GetAccessPointResult {
    readonly awsEgressPrivateLinkEndpoints: outputs.GetAccessPointAwsEgressPrivateLinkEndpoint[];
    readonly azureEgressPrivateLinkEndpoints: outputs.GetAccessPointAzureEgressPrivateLinkEndpoint[];
    readonly displayName: string;
    readonly environment: outputs.GetAccessPointEnvironment;
    readonly gateways: outputs.GetAccessPointGateway[];
    readonly id: string;
}
export function getAccessPointOutput(args: GetAccessPointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPointResult> {
    return pulumi.output(args).apply((a: any) => getAccessPoint(a, opts))
}

/**
 * A collection of arguments for invoking getAccessPoint.
 */
export interface GetAccessPointOutputArgs {
    environment: pulumi.Input<inputs.GetAccessPointEnvironmentArgs>;
    id: pulumi.Input<string>;
}
