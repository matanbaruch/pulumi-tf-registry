// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRoleBinding(args: GetRoleBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleBindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getRoleBinding:getRoleBinding", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRoleBinding.
 */
export interface GetRoleBindingArgs {
    id: string;
}

/**
 * A collection of values returned by getRoleBinding.
 */
export interface GetRoleBindingResult {
    readonly crnPattern: string;
    readonly id: string;
    readonly principal: string;
    readonly roleName: string;
}
export function getRoleBindingOutput(args: GetRoleBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleBindingResult> {
    return pulumi.output(args).apply((a: any) => getRoleBinding(a, opts))
}

/**
 * A collection of arguments for invoking getRoleBinding.
 */
export interface GetRoleBindingOutputArgs {
    id: pulumi.Input<string>;
}
