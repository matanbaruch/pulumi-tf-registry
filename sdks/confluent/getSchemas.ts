// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSchemas(args?: GetSchemasArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemasResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getSchemas:getSchemas", {
        "credentials": args.credentials,
        "filter": args.filter,
        "id": args.id,
        "restEndpoint": args.restEndpoint,
        "schemaRegistryCluster": args.schemaRegistryCluster,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemas.
 */
export interface GetSchemasArgs {
    credentials?: inputs.GetSchemasCredentials;
    filter?: inputs.GetSchemasFilter;
    id?: string;
    restEndpoint?: string;
    schemaRegistryCluster?: inputs.GetSchemasSchemaRegistryCluster;
}

/**
 * A collection of values returned by getSchemas.
 */
export interface GetSchemasResult {
    readonly credentials?: outputs.GetSchemasCredentials;
    readonly filter?: outputs.GetSchemasFilter;
    readonly id: string;
    readonly restEndpoint?: string;
    readonly schemaRegistryCluster?: outputs.GetSchemasSchemaRegistryCluster;
    readonly schemas: outputs.GetSchemasSchema[];
}
export function getSchemasOutput(args?: GetSchemasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemasResult> {
    return pulumi.output(args).apply((a: any) => getSchemas(a, opts))
}

/**
 * A collection of arguments for invoking getSchemas.
 */
export interface GetSchemasOutputArgs {
    credentials?: pulumi.Input<inputs.GetSchemasCredentialsArgs>;
    filter?: pulumi.Input<inputs.GetSchemasFilterArgs>;
    id?: pulumi.Input<string>;
    restEndpoint?: pulumi.Input<string>;
    schemaRegistryCluster?: pulumi.Input<inputs.GetSchemasSchemaRegistryClusterArgs>;
}
