// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPeering(args: GetPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetPeeringResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getPeering:getPeering", {
        "displayName": args.displayName,
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPeering.
 */
export interface GetPeeringArgs {
    displayName?: string;
    environment: inputs.GetPeeringEnvironment;
    id?: string;
}

/**
 * A collection of values returned by getPeering.
 */
export interface GetPeeringResult {
    readonly aws: outputs.GetPeeringAw[];
    readonly azures: outputs.GetPeeringAzure[];
    readonly displayName: string;
    readonly environment: outputs.GetPeeringEnvironment;
    readonly gcps: outputs.GetPeeringGcp[];
    readonly id: string;
    readonly networks: outputs.GetPeeringNetwork[];
}
export function getPeeringOutput(args: GetPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPeeringResult> {
    return pulumi.output(args).apply((a: any) => getPeering(a, opts))
}

/**
 * A collection of arguments for invoking getPeering.
 */
export interface GetPeeringOutputArgs {
    displayName?: pulumi.Input<string>;
    environment: pulumi.Input<inputs.GetPeeringEnvironmentArgs>;
    id?: pulumi.Input<string>;
}
