// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKafkaClientQuota(args: GetKafkaClientQuotaArgs, opts?: pulumi.InvokeOptions): Promise<GetKafkaClientQuotaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getKafkaClientQuota:getKafkaClientQuota", {
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKafkaClientQuota.
 */
export interface GetKafkaClientQuotaArgs {
    id: string;
}

/**
 * A collection of values returned by getKafkaClientQuota.
 */
export interface GetKafkaClientQuotaResult {
    readonly description: string;
    readonly displayName: string;
    readonly environments: outputs.GetKafkaClientQuotaEnvironment[];
    readonly id: string;
    readonly kafkaClusters: outputs.GetKafkaClientQuotaKafkaCluster[];
    readonly principals: string[];
    readonly throughputs: outputs.GetKafkaClientQuotaThroughput[];
}
export function getKafkaClientQuotaOutput(args: GetKafkaClientQuotaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKafkaClientQuotaResult> {
    return pulumi.output(args).apply((a: any) => getKafkaClientQuota(a, opts))
}

/**
 * A collection of arguments for invoking getKafkaClientQuota.
 */
export interface GetKafkaClientQuotaOutputArgs {
    id: pulumi.Input<string>;
}
