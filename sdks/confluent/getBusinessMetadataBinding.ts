// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBusinessMetadataBinding(args: GetBusinessMetadataBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetBusinessMetadataBindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getBusinessMetadataBinding:getBusinessMetadataBinding", {
        "businessMetadataName": args.businessMetadataName,
        "credentials": args.credentials,
        "entityName": args.entityName,
        "entityType": args.entityType,
        "restEndpoint": args.restEndpoint,
        "schemaRegistryCluster": args.schemaRegistryCluster,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBusinessMetadataBinding.
 */
export interface GetBusinessMetadataBindingArgs {
    businessMetadataName: string;
    credentials?: inputs.GetBusinessMetadataBindingCredentials;
    entityName: string;
    entityType: string;
    restEndpoint?: string;
    schemaRegistryCluster?: inputs.GetBusinessMetadataBindingSchemaRegistryCluster;
}

/**
 * A collection of values returned by getBusinessMetadataBinding.
 */
export interface GetBusinessMetadataBindingResult {
    readonly attributes: {[key: string]: string};
    readonly businessMetadataName: string;
    readonly credentials?: outputs.GetBusinessMetadataBindingCredentials;
    readonly entityName: string;
    readonly entityType: string;
    readonly id: string;
    readonly restEndpoint?: string;
    readonly schemaRegistryCluster?: outputs.GetBusinessMetadataBindingSchemaRegistryCluster;
}
export function getBusinessMetadataBindingOutput(args: GetBusinessMetadataBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBusinessMetadataBindingResult> {
    return pulumi.output(args).apply((a: any) => getBusinessMetadataBinding(a, opts))
}

/**
 * A collection of arguments for invoking getBusinessMetadataBinding.
 */
export interface GetBusinessMetadataBindingOutputArgs {
    businessMetadataName: pulumi.Input<string>;
    credentials?: pulumi.Input<inputs.GetBusinessMetadataBindingCredentialsArgs>;
    entityName: pulumi.Input<string>;
    entityType: pulumi.Input<string>;
    restEndpoint?: pulumi.Input<string>;
    schemaRegistryCluster?: pulumi.Input<inputs.GetBusinessMetadataBindingSchemaRegistryClusterArgs>;
}
