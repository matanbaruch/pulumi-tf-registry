// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSchemaRegistryClusters(args?: GetSchemaRegistryClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaRegistryClustersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getSchemaRegistryClusters:getSchemaRegistryClusters", {
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchemaRegistryClusters.
 */
export interface GetSchemaRegistryClustersArgs {
    environment?: inputs.GetSchemaRegistryClustersEnvironment;
    id?: string;
}

/**
 * A collection of values returned by getSchemaRegistryClusters.
 */
export interface GetSchemaRegistryClustersResult {
    readonly clusters: outputs.GetSchemaRegistryClustersCluster[];
    readonly environment?: outputs.GetSchemaRegistryClustersEnvironment;
    readonly id: string;
}
export function getSchemaRegistryClustersOutput(args?: GetSchemaRegistryClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchemaRegistryClustersResult> {
    return pulumi.output(args).apply((a: any) => getSchemaRegistryClusters(a, opts))
}

/**
 * A collection of arguments for invoking getSchemaRegistryClusters.
 */
export interface GetSchemaRegistryClustersOutputArgs {
    environment?: pulumi.Input<inputs.GetSchemaRegistryClustersEnvironmentArgs>;
    id?: pulumi.Input<string>;
}
