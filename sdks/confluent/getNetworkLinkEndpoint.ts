// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetworkLinkEndpoint(args: GetNetworkLinkEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkLinkEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluent:index/getNetworkLinkEndpoint:getNetworkLinkEndpoint", {
        "environment": args.environment,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetworkLinkEndpoint.
 */
export interface GetNetworkLinkEndpointArgs {
    environment: inputs.GetNetworkLinkEndpointEnvironment;
    id: string;
}

/**
 * A collection of values returned by getNetworkLinkEndpoint.
 */
export interface GetNetworkLinkEndpointResult {
    readonly description: string;
    readonly displayName: string;
    readonly environment: outputs.GetNetworkLinkEndpointEnvironment;
    readonly id: string;
    readonly networkLinkServices: outputs.GetNetworkLinkEndpointNetworkLinkService[];
    readonly networks: outputs.GetNetworkLinkEndpointNetwork[];
    readonly resourceName: string;
}
export function getNetworkLinkEndpointOutput(args: GetNetworkLinkEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkLinkEndpointResult> {
    return pulumi.output(args).apply((a: any) => getNetworkLinkEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkLinkEndpoint.
 */
export interface GetNetworkLinkEndpointOutputArgs {
    environment: pulumi.Input<inputs.GetNetworkLinkEndpointEnvironmentArgs>;
    id: pulumi.Input<string>;
}
