// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { AutomationArgs, AutomationState } from "./automation";
export type Automation = import("./automation").Automation;
export const Automation: typeof import("./automation").Automation = null as any;
utilities.lazyLoad(exports, ["Automation"], () => require("./automation"));

export { CustomAlertArgs, CustomAlertState } from "./customAlert";
export type CustomAlert = import("./customAlert").CustomAlert;
export const CustomAlert: typeof import("./customAlert").CustomAlert = null as any;
utilities.lazyLoad(exports, ["CustomAlert"], () => require("./customAlert"));

export { GetDiscoveryResultsArgs, GetDiscoveryResultsResult, GetDiscoveryResultsOutputArgs } from "./getDiscoveryResults";
export const getDiscoveryResults: typeof import("./getDiscoveryResults").getDiscoveryResults = null as any;
export const getDiscoveryResultsOutput: typeof import("./getDiscoveryResults").getDiscoveryResultsOutput = null as any;
utilities.lazyLoad(exports, ["getDiscoveryResults","getDiscoveryResultsOutput"], () => require("./getDiscoveryResults"));

export { GetJiraTemplateArgs, GetJiraTemplateResult, GetJiraTemplateOutputArgs } from "./getJiraTemplate";
export const getJiraTemplate: typeof import("./getJiraTemplate").getJiraTemplate = null as any;
export const getJiraTemplateOutput: typeof import("./getJiraTemplate").getJiraTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getJiraTemplate","getJiraTemplateOutput"], () => require("./getJiraTemplate"));

export { GetOrganizationResult } from "./getOrganization";
export const getOrganization: typeof import("./getOrganization").getOrganization = null as any;
export const getOrganizationOutput: typeof import("./getOrganization").getOrganizationOutput = null as any;
utilities.lazyLoad(exports, ["getOrganization","getOrganizationOutput"], () => require("./getOrganization"));

export { GetWebhookArgs, GetWebhookResult, GetWebhookOutputArgs } from "./getWebhook";
export const getWebhook: typeof import("./getWebhook").getWebhook = null as any;
export const getWebhookOutput: typeof import("./getWebhook").getWebhookOutput = null as any;
utilities.lazyLoad(exports, ["getWebhook","getWebhookOutput"], () => require("./getWebhook"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "orcasecurity:index/automation:Automation":
                return new Automation(name, <any>undefined, { urn })
            case "orcasecurity:index/customAlert:CustomAlert":
                return new CustomAlert(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("orcasecurity", "index/automation", _module)
pulumi.runtime.registerResourceModule("orcasecurity", "index/customAlert", _module)
pulumi.runtime.registerResourcePackage("orcasecurity", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:orcasecurity") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
