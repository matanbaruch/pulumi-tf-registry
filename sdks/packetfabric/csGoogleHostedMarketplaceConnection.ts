// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CsGoogleHostedMarketplaceConnection extends pulumi.CustomResource {
    /**
     * Get an existing CsGoogleHostedMarketplaceConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CsGoogleHostedMarketplaceConnectionState, opts?: pulumi.CustomResourceOptions): CsGoogleHostedMarketplaceConnection {
        return new CsGoogleHostedMarketplaceConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'packetfabric:index/csGoogleHostedMarketplaceConnection:CsGoogleHostedMarketplaceConnection';

    /**
     * Returns true if the given object is an instance of CsGoogleHostedMarketplaceConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CsGoogleHostedMarketplaceConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CsGoogleHostedMarketplaceConnection.__pulumiType;
    }

    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    public readonly accountUuid!: pulumi.Output<string>;
    /**
     * A brief description of this connection.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The Google pairing key to use for this connection. This is provided when you create the VLAN attachment from the Google
     * Cloud console.
     */
    public readonly googlePairingKey!: pulumi.Output<string>;
    /**
     * The name you used for your VLAN attachment in Google.
     */
    public readonly googleVlanAttachmentName!: pulumi.Output<string>;
    /**
     * The market code (e.g. "ATL" or "DAL") in which you would like the marketplace provider to provision their side of the
     * connection. If the marketplace provider has services published in the marketplace, you can use the PacketFabric portal
     * to see which POPs they are in. Simply remove the number from the POP to get the market code (e.g. if they offer services
     * in "DAL5", enter "DAL" for the market).
     */
    public readonly market!: pulumi.Output<string>;
    /**
     * The POP in which the hosted connection should be provisioned (the cloud on-ramp).
     */
    public readonly pop!: pulumi.Output<string>;
    /**
     * The routing ID of the marketplace provider that will be receiving this request. Example: TR-1RI-OQ85
     */
    public readonly routingId!: pulumi.Output<string>;
    /**
     * The speed of the new connection. Enum: ["50Mbps", "100Mbps", "200Mbps", "300Mbps", "400Mbps", "500Mbps", "1Gbps",
     * "2Gbps", "5Gbps", "10Gbps"]
     */
    public readonly speed!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.CsGoogleHostedMarketplaceConnectionTimeouts | undefined>;

    /**
     * Create a CsGoogleHostedMarketplaceConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CsGoogleHostedMarketplaceConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CsGoogleHostedMarketplaceConnectionArgs | CsGoogleHostedMarketplaceConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CsGoogleHostedMarketplaceConnectionState | undefined;
            resourceInputs["accountUuid"] = state ? state.accountUuid : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["googlePairingKey"] = state ? state.googlePairingKey : undefined;
            resourceInputs["googleVlanAttachmentName"] = state ? state.googleVlanAttachmentName : undefined;
            resourceInputs["market"] = state ? state.market : undefined;
            resourceInputs["pop"] = state ? state.pop : undefined;
            resourceInputs["routingId"] = state ? state.routingId : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as CsGoogleHostedMarketplaceConnectionArgs | undefined;
            if ((!args || args.accountUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountUuid'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.googlePairingKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'googlePairingKey'");
            }
            if ((!args || args.googleVlanAttachmentName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'googleVlanAttachmentName'");
            }
            if ((!args || args.market === undefined) && !opts.urn) {
                throw new Error("Missing required property 'market'");
            }
            if ((!args || args.pop === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pop'");
            }
            if ((!args || args.routingId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routingId'");
            }
            if ((!args || args.speed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'speed'");
            }
            resourceInputs["accountUuid"] = args ? args.accountUuid : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["googlePairingKey"] = args ? args.googlePairingKey : undefined;
            resourceInputs["googleVlanAttachmentName"] = args ? args.googleVlanAttachmentName : undefined;
            resourceInputs["market"] = args ? args.market : undefined;
            resourceInputs["pop"] = args ? args.pop : undefined;
            resourceInputs["routingId"] = args ? args.routingId : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CsGoogleHostedMarketplaceConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CsGoogleHostedMarketplaceConnection resources.
 */
export interface CsGoogleHostedMarketplaceConnectionState {
    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    accountUuid?: pulumi.Input<string>;
    /**
     * A brief description of this connection.
     */
    description?: pulumi.Input<string>;
    /**
     * The Google pairing key to use for this connection. This is provided when you create the VLAN attachment from the Google
     * Cloud console.
     */
    googlePairingKey?: pulumi.Input<string>;
    /**
     * The name you used for your VLAN attachment in Google.
     */
    googleVlanAttachmentName?: pulumi.Input<string>;
    /**
     * The market code (e.g. "ATL" or "DAL") in which you would like the marketplace provider to provision their side of the
     * connection. If the marketplace provider has services published in the marketplace, you can use the PacketFabric portal
     * to see which POPs they are in. Simply remove the number from the POP to get the market code (e.g. if they offer services
     * in "DAL5", enter "DAL" for the market).
     */
    market?: pulumi.Input<string>;
    /**
     * The POP in which the hosted connection should be provisioned (the cloud on-ramp).
     */
    pop?: pulumi.Input<string>;
    /**
     * The routing ID of the marketplace provider that will be receiving this request. Example: TR-1RI-OQ85
     */
    routingId?: pulumi.Input<string>;
    /**
     * The speed of the new connection. Enum: ["50Mbps", "100Mbps", "200Mbps", "300Mbps", "400Mbps", "500Mbps", "1Gbps",
     * "2Gbps", "5Gbps", "10Gbps"]
     */
    speed?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CsGoogleHostedMarketplaceConnectionTimeouts>;
}

/**
 * The set of arguments for constructing a CsGoogleHostedMarketplaceConnection resource.
 */
export interface CsGoogleHostedMarketplaceConnectionArgs {
    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    accountUuid: pulumi.Input<string>;
    /**
     * A brief description of this connection.
     */
    description: pulumi.Input<string>;
    /**
     * The Google pairing key to use for this connection. This is provided when you create the VLAN attachment from the Google
     * Cloud console.
     */
    googlePairingKey: pulumi.Input<string>;
    /**
     * The name you used for your VLAN attachment in Google.
     */
    googleVlanAttachmentName: pulumi.Input<string>;
    /**
     * The market code (e.g. "ATL" or "DAL") in which you would like the marketplace provider to provision their side of the
     * connection. If the marketplace provider has services published in the marketplace, you can use the PacketFabric portal
     * to see which POPs they are in. Simply remove the number from the POP to get the market code (e.g. if they offer services
     * in "DAL5", enter "DAL" for the market).
     */
    market: pulumi.Input<string>;
    /**
     * The POP in which the hosted connection should be provisioned (the cloud on-ramp).
     */
    pop: pulumi.Input<string>;
    /**
     * The routing ID of the marketplace provider that will be receiving this request. Example: TR-1RI-OQ85
     */
    routingId: pulumi.Input<string>;
    /**
     * The speed of the new connection. Enum: ["50Mbps", "100Mbps", "200Mbps", "300Mbps", "400Mbps", "500Mbps", "1Gbps",
     * "2Gbps", "5Gbps", "10Gbps"]
     */
    speed: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.CsGoogleHostedMarketplaceConnectionTimeouts>;
}
