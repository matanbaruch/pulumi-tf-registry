// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBilling(args: GetBillingArgs, opts?: pulumi.InvokeOptions): Promise<GetBillingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getBilling:getBilling", {
        "circuitId": args.circuitId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBilling.
 */
export interface GetBillingArgs {
    circuitId: string;
    id?: string;
}

/**
 * A collection of values returned by getBilling.
 */
export interface GetBillingResult {
    readonly billings: outputs.GetBillingBilling[];
    readonly circuitId: string;
    readonly id: string;
}
export function getBillingOutput(args: GetBillingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBillingResult> {
    return pulumi.output(args).apply((a: any) => getBilling(a, opts))
}

/**
 * A collection of arguments for invoking getBilling.
 */
export interface GetBillingOutputArgs {
    circuitId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
