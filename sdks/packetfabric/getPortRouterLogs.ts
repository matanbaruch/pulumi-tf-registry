// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPortRouterLogs(args: GetPortRouterLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetPortRouterLogsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getPortRouterLogs:getPortRouterLogs", {
        "id": args.id,
        "portCircuitId": args.portCircuitId,
        "timeFrom": args.timeFrom,
        "timeTo": args.timeTo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPortRouterLogs.
 */
export interface GetPortRouterLogsArgs {
    id?: string;
    portCircuitId: string;
    timeFrom: string;
    timeTo: string;
}

/**
 * A collection of values returned by getPortRouterLogs.
 */
export interface GetPortRouterLogsResult {
    readonly id: string;
    readonly portCircuitId: string;
    readonly portRouterLogs: outputs.GetPortRouterLogsPortRouterLog[];
    readonly timeFrom: string;
    readonly timeTo: string;
}
export function getPortRouterLogsOutput(args: GetPortRouterLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPortRouterLogsResult> {
    return pulumi.output(args).apply((a: any) => getPortRouterLogs(a, opts))
}

/**
 * A collection of arguments for invoking getPortRouterLogs.
 */
export interface GetPortRouterLogsOutputArgs {
    id?: pulumi.Input<string>;
    portCircuitId: pulumi.Input<string>;
    timeFrom: pulumi.Input<string>;
    timeTo: pulumi.Input<string>;
}
