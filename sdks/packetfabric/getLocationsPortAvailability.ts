// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLocationsPortAvailability(args: GetLocationsPortAvailabilityArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationsPortAvailabilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getLocationsPortAvailability:getLocationsPortAvailability", {
        "id": args.id,
        "pop": args.pop,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationsPortAvailability.
 */
export interface GetLocationsPortAvailabilityArgs {
    id?: string;
    pop: string;
}

/**
 * A collection of values returned by getLocationsPortAvailability.
 */
export interface GetLocationsPortAvailabilityResult {
    readonly id: string;
    readonly pop: string;
    readonly portsAvailables: outputs.GetLocationsPortAvailabilityPortsAvailable[];
}
export function getLocationsPortAvailabilityOutput(args: GetLocationsPortAvailabilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationsPortAvailabilityResult> {
    return pulumi.output(args).apply((a: any) => getLocationsPortAvailability(a, opts))
}

/**
 * A collection of arguments for invoking getLocationsPortAvailability.
 */
export interface GetLocationsPortAvailabilityOutputArgs {
    id?: pulumi.Input<string>;
    pop: pulumi.Input<string>;
}
