// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocationsPopZones(args: GetLocationsPopZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationsPopZonesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getLocationsPopZones:getLocationsPopZones", {
        "id": args.id,
        "pop": args.pop,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationsPopZones.
 */
export interface GetLocationsPopZonesArgs {
    id?: string;
    pop: string;
}

/**
 * A collection of values returned by getLocationsPopZones.
 */
export interface GetLocationsPopZonesResult {
    readonly id: string;
    readonly locationsZones: string[];
    readonly pop: string;
}
export function getLocationsPopZonesOutput(args: GetLocationsPopZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationsPopZonesResult> {
    return pulumi.output(args).apply((a: any) => getLocationsPopZones(a, opts))
}

/**
 * A collection of arguments for invoking getLocationsPopZones.
 */
export interface GetLocationsPopZonesOutputArgs {
    id?: pulumi.Input<string>;
    pop: pulumi.Input<string>;
}
