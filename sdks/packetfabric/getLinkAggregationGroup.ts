// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLinkAggregationGroup(args: GetLinkAggregationGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLinkAggregationGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getLinkAggregationGroup:getLinkAggregationGroup", {
        "id": args.id,
        "lagCircuitId": args.lagCircuitId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLinkAggregationGroup.
 */
export interface GetLinkAggregationGroupArgs {
    id?: string;
    lagCircuitId: string;
}

/**
 * A collection of values returned by getLinkAggregationGroup.
 */
export interface GetLinkAggregationGroupResult {
    readonly id: string;
    readonly interfaces: outputs.GetLinkAggregationGroupInterface[];
    readonly lagCircuitId: string;
}
export function getLinkAggregationGroupOutput(args: GetLinkAggregationGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLinkAggregationGroupResult> {
    return pulumi.output(args).apply((a: any) => getLinkAggregationGroup(a, opts))
}

/**
 * A collection of arguments for invoking getLinkAggregationGroup.
 */
export interface GetLinkAggregationGroupOutputArgs {
    id?: pulumi.Input<string>;
    lagCircuitId: pulumi.Input<string>;
}
