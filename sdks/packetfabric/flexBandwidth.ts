// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FlexBandwidth extends pulumi.CustomResource {
    /**
     * Get an existing FlexBandwidth resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlexBandwidthState, opts?: pulumi.CustomResourceOptions): FlexBandwidth {
        return new FlexBandwidth(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'packetfabric:index/flexBandwidth:FlexBandwidth';

    /**
     * Returns true if the given object is an instance of FlexBandwidth.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlexBandwidth {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlexBandwidth.__pulumiType;
    }

    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    public readonly accountUuid!: pulumi.Output<string>;
    /**
     * Available capacity in Mbps of the flex bandwidth container.
     */
    public /*out*/ readonly availableCapacityMbps!: pulumi.Output<number>;
    /**
     * Capacity of the flex bandwidth container. Must be in the format XXGbps. Enum: ["100Gbps" "150Gbps" "200Gbps" "250Gbps"
     * "300Gbps" "350Gbps" "400Gbps" "450Gbps" "500Gbps"]
     */
    public readonly capacity!: pulumi.Output<string>;
    /**
     * Description of the flex bandwidth container.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Purchase order number or identifier of a service.
     */
    public readonly poNumber!: pulumi.Output<string | undefined>;
    /**
     * The billing term, in months, of the flex bandwidth container. Enum: ["1", "12", "24", "36"]
     */
    public readonly subscriptionTerm!: pulumi.Output<number>;
    public readonly timeouts!: pulumi.Output<outputs.FlexBandwidthTimeouts | undefined>;
    /**
     * Used capacity in Mbps of the flex bandwidth container.
     */
    public /*out*/ readonly usedCapacityMbps!: pulumi.Output<number>;

    /**
     * Create a FlexBandwidth resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlexBandwidthArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlexBandwidthArgs | FlexBandwidthState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlexBandwidthState | undefined;
            resourceInputs["accountUuid"] = state ? state.accountUuid : undefined;
            resourceInputs["availableCapacityMbps"] = state ? state.availableCapacityMbps : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["poNumber"] = state ? state.poNumber : undefined;
            resourceInputs["subscriptionTerm"] = state ? state.subscriptionTerm : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["usedCapacityMbps"] = state ? state.usedCapacityMbps : undefined;
        } else {
            const args = argsOrState as FlexBandwidthArgs | undefined;
            if ((!args || args.accountUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountUuid'");
            }
            if ((!args || args.capacity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacity'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.subscriptionTerm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionTerm'");
            }
            resourceInputs["accountUuid"] = args ? args.accountUuid : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["poNumber"] = args ? args.poNumber : undefined;
            resourceInputs["subscriptionTerm"] = args ? args.subscriptionTerm : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["availableCapacityMbps"] = undefined /*out*/;
            resourceInputs["usedCapacityMbps"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlexBandwidth.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FlexBandwidth resources.
 */
export interface FlexBandwidthState {
    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    accountUuid?: pulumi.Input<string>;
    /**
     * Available capacity in Mbps of the flex bandwidth container.
     */
    availableCapacityMbps?: pulumi.Input<number>;
    /**
     * Capacity of the flex bandwidth container. Must be in the format XXGbps. Enum: ["100Gbps" "150Gbps" "200Gbps" "250Gbps"
     * "300Gbps" "350Gbps" "400Gbps" "450Gbps" "500Gbps"]
     */
    capacity?: pulumi.Input<string>;
    /**
     * Description of the flex bandwidth container.
     */
    description?: pulumi.Input<string>;
    /**
     * Purchase order number or identifier of a service.
     */
    poNumber?: pulumi.Input<string>;
    /**
     * The billing term, in months, of the flex bandwidth container. Enum: ["1", "12", "24", "36"]
     */
    subscriptionTerm?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.FlexBandwidthTimeouts>;
    /**
     * Used capacity in Mbps of the flex bandwidth container.
     */
    usedCapacityMbps?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a FlexBandwidth resource.
 */
export interface FlexBandwidthArgs {
    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    accountUuid: pulumi.Input<string>;
    /**
     * Capacity of the flex bandwidth container. Must be in the format XXGbps. Enum: ["100Gbps" "150Gbps" "200Gbps" "250Gbps"
     * "300Gbps" "350Gbps" "400Gbps" "450Gbps" "500Gbps"]
     */
    capacity: pulumi.Input<string>;
    /**
     * Description of the flex bandwidth container.
     */
    description: pulumi.Input<string>;
    /**
     * Purchase order number or identifier of a service.
     */
    poNumber?: pulumi.Input<string>;
    /**
     * The billing term, in months, of the flex bandwidth container. Enum: ["1", "12", "24", "36"]
     */
    subscriptionTerm: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.FlexBandwidthTimeouts>;
}
