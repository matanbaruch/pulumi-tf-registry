// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudRouterConnectionIbm extends pulumi.CustomResource {
    /**
     * Get an existing CloudRouterConnectionIbm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudRouterConnectionIbmState, opts?: pulumi.CustomResourceOptions): CloudRouterConnectionIbm {
        return new CloudRouterConnectionIbm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'packetfabric:index/cloudRouterConnectionIbm:CloudRouterConnectionIbm';

    /**
     * Returns true if the given object is an instance of CloudRouterConnectionIbm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudRouterConnectionIbm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudRouterConnectionIbm.__pulumiType;
    }

    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    public readonly accountUuid!: pulumi.Output<string>;
    /**
     * Circuit ID of the target cloud router. This starts with "PF-L3-CUST-".
     */
    public readonly circuitId!: pulumi.Output<string>;
    /**
     * The description of this connection. This will appear as the connection name from the IBM side.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Early Termination Liability (ETL) fees apply when terminating a service before its term ends. ETL is prorated to the
     * remaining contract days.
     */
    public /*out*/ readonly etl!: pulumi.Output<number>;
    /**
     * The IBM Gateway ID.
     */
    public /*out*/ readonly gatewayId!: pulumi.Output<string>;
    /**
     * Your IBM account ID. Can also be set with the PF_IBM_ACCOUNT_ID environment variable.
     */
    public readonly ibmAccountId!: pulumi.Output<string>;
    /**
     * Enter an ASN to use with your BGP session. This should be the same ASN you used for your Cloud Router.
     */
    public readonly ibmBgpAsn!: pulumi.Output<number>;
    /**
     * The IP address in CIDR format for the PacketFabric-side router in the BGP session. If you do not specify an address, IBM
     * will assign one on your behalf.
     */
    public readonly ibmBgpCerCidr!: pulumi.Output<string | undefined>;
    /**
     * The IP address in CIDR format for the IBM-side router in the BGP session. If you do not specify an address, IBM will
     * assign one on your behalf. See the documentation for information on which IP ranges are allowed.
     */
    public readonly ibmBgpIbmCidr!: pulumi.Output<string | undefined>;
    /**
     * Label value linked to an object.
     */
    public readonly labels!: pulumi.Output<string[] | undefined>;
    /**
     * Set this to true if you intend to use DNAT on this connection. Defaults: false
     */
    public readonly maybeDnat!: pulumi.Output<boolean | undefined>;
    /**
     * Set this to true if you intend to use NAT on this connection. Defaults: false
     */
    public readonly maybeNat!: pulumi.Output<boolean | undefined>;
    /**
     * Purchase order number or identifier of a service.
     */
    public readonly poNumber!: pulumi.Output<string | undefined>;
    /**
     * The POP in which you want to provision the connection (the on-ramp).
     */
    public readonly pop!: pulumi.Output<string>;
    /**
     * UUID of the published quote line with which this connection should be associated.
     */
    public readonly publishedQuoteLineUuid!: pulumi.Output<string | undefined>;
    /**
     * The speed of the new connection. Enum: ["50Mbps" "100Mbps" "200Mbps" "300Mbps" "400Mbps" "500Mbps" "1Gbps" "2Gbps"
     * "5Gbps" "10Gbps"]
     */
    public readonly speed!: pulumi.Output<string>;
    /**
     * Subscription term of the Cloud Router Connection Enum: ["1", "12", "24", "36"] Defaults: 1
     */
    public readonly subscriptionTerm!: pulumi.Output<number | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.CloudRouterConnectionIbmTimeouts | undefined>;
    /**
     * The desired availability zone of the connection. Example: "A"
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a CloudRouterConnectionIbm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudRouterConnectionIbmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudRouterConnectionIbmArgs | CloudRouterConnectionIbmState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudRouterConnectionIbmState | undefined;
            resourceInputs["accountUuid"] = state ? state.accountUuid : undefined;
            resourceInputs["circuitId"] = state ? state.circuitId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["etl"] = state ? state.etl : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["ibmAccountId"] = state ? state.ibmAccountId : undefined;
            resourceInputs["ibmBgpAsn"] = state ? state.ibmBgpAsn : undefined;
            resourceInputs["ibmBgpCerCidr"] = state ? state.ibmBgpCerCidr : undefined;
            resourceInputs["ibmBgpIbmCidr"] = state ? state.ibmBgpIbmCidr : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maybeDnat"] = state ? state.maybeDnat : undefined;
            resourceInputs["maybeNat"] = state ? state.maybeNat : undefined;
            resourceInputs["poNumber"] = state ? state.poNumber : undefined;
            resourceInputs["pop"] = state ? state.pop : undefined;
            resourceInputs["publishedQuoteLineUuid"] = state ? state.publishedQuoteLineUuid : undefined;
            resourceInputs["speed"] = state ? state.speed : undefined;
            resourceInputs["subscriptionTerm"] = state ? state.subscriptionTerm : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as CloudRouterConnectionIbmArgs | undefined;
            if ((!args || args.accountUuid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountUuid'");
            }
            if ((!args || args.circuitId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'circuitId'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.ibmAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ibmAccountId'");
            }
            if ((!args || args.ibmBgpAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ibmBgpAsn'");
            }
            if ((!args || args.pop === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pop'");
            }
            if ((!args || args.speed === undefined) && !opts.urn) {
                throw new Error("Missing required property 'speed'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["accountUuid"] = args ? args.accountUuid : undefined;
            resourceInputs["circuitId"] = args ? args.circuitId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ibmAccountId"] = args ? args.ibmAccountId : undefined;
            resourceInputs["ibmBgpAsn"] = args ? args.ibmBgpAsn : undefined;
            resourceInputs["ibmBgpCerCidr"] = args ? args.ibmBgpCerCidr : undefined;
            resourceInputs["ibmBgpIbmCidr"] = args ? args.ibmBgpIbmCidr : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maybeDnat"] = args ? args.maybeDnat : undefined;
            resourceInputs["maybeNat"] = args ? args.maybeNat : undefined;
            resourceInputs["poNumber"] = args ? args.poNumber : undefined;
            resourceInputs["pop"] = args ? args.pop : undefined;
            resourceInputs["publishedQuoteLineUuid"] = args ? args.publishedQuoteLineUuid : undefined;
            resourceInputs["speed"] = args ? args.speed : undefined;
            resourceInputs["subscriptionTerm"] = args ? args.subscriptionTerm : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["etl"] = undefined /*out*/;
            resourceInputs["gatewayId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudRouterConnectionIbm.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudRouterConnectionIbm resources.
 */
export interface CloudRouterConnectionIbmState {
    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    accountUuid?: pulumi.Input<string>;
    /**
     * Circuit ID of the target cloud router. This starts with "PF-L3-CUST-".
     */
    circuitId?: pulumi.Input<string>;
    /**
     * The description of this connection. This will appear as the connection name from the IBM side.
     */
    description?: pulumi.Input<string>;
    /**
     * Early Termination Liability (ETL) fees apply when terminating a service before its term ends. ETL is prorated to the
     * remaining contract days.
     */
    etl?: pulumi.Input<number>;
    /**
     * The IBM Gateway ID.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Your IBM account ID. Can also be set with the PF_IBM_ACCOUNT_ID environment variable.
     */
    ibmAccountId?: pulumi.Input<string>;
    /**
     * Enter an ASN to use with your BGP session. This should be the same ASN you used for your Cloud Router.
     */
    ibmBgpAsn?: pulumi.Input<number>;
    /**
     * The IP address in CIDR format for the PacketFabric-side router in the BGP session. If you do not specify an address, IBM
     * will assign one on your behalf.
     */
    ibmBgpCerCidr?: pulumi.Input<string>;
    /**
     * The IP address in CIDR format for the IBM-side router in the BGP session. If you do not specify an address, IBM will
     * assign one on your behalf. See the documentation for information on which IP ranges are allowed.
     */
    ibmBgpIbmCidr?: pulumi.Input<string>;
    /**
     * Label value linked to an object.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set this to true if you intend to use DNAT on this connection. Defaults: false
     */
    maybeDnat?: pulumi.Input<boolean>;
    /**
     * Set this to true if you intend to use NAT on this connection. Defaults: false
     */
    maybeNat?: pulumi.Input<boolean>;
    /**
     * Purchase order number or identifier of a service.
     */
    poNumber?: pulumi.Input<string>;
    /**
     * The POP in which you want to provision the connection (the on-ramp).
     */
    pop?: pulumi.Input<string>;
    /**
     * UUID of the published quote line with which this connection should be associated.
     */
    publishedQuoteLineUuid?: pulumi.Input<string>;
    /**
     * The speed of the new connection. Enum: ["50Mbps" "100Mbps" "200Mbps" "300Mbps" "400Mbps" "500Mbps" "1Gbps" "2Gbps"
     * "5Gbps" "10Gbps"]
     */
    speed?: pulumi.Input<string>;
    /**
     * Subscription term of the Cloud Router Connection Enum: ["1", "12", "24", "36"] Defaults: 1
     */
    subscriptionTerm?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CloudRouterConnectionIbmTimeouts>;
    /**
     * The desired availability zone of the connection. Example: "A"
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudRouterConnectionIbm resource.
 */
export interface CloudRouterConnectionIbmArgs {
    /**
     * The UUID for the billing account that should be billed. Can also be set with the PF_ACCOUNT_ID environment variable.
     */
    accountUuid: pulumi.Input<string>;
    /**
     * Circuit ID of the target cloud router. This starts with "PF-L3-CUST-".
     */
    circuitId: pulumi.Input<string>;
    /**
     * The description of this connection. This will appear as the connection name from the IBM side.
     */
    description: pulumi.Input<string>;
    /**
     * Your IBM account ID. Can also be set with the PF_IBM_ACCOUNT_ID environment variable.
     */
    ibmAccountId: pulumi.Input<string>;
    /**
     * Enter an ASN to use with your BGP session. This should be the same ASN you used for your Cloud Router.
     */
    ibmBgpAsn: pulumi.Input<number>;
    /**
     * The IP address in CIDR format for the PacketFabric-side router in the BGP session. If you do not specify an address, IBM
     * will assign one on your behalf.
     */
    ibmBgpCerCidr?: pulumi.Input<string>;
    /**
     * The IP address in CIDR format for the IBM-side router in the BGP session. If you do not specify an address, IBM will
     * assign one on your behalf. See the documentation for information on which IP ranges are allowed.
     */
    ibmBgpIbmCidr?: pulumi.Input<string>;
    /**
     * Label value linked to an object.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set this to true if you intend to use DNAT on this connection. Defaults: false
     */
    maybeDnat?: pulumi.Input<boolean>;
    /**
     * Set this to true if you intend to use NAT on this connection. Defaults: false
     */
    maybeNat?: pulumi.Input<boolean>;
    /**
     * Purchase order number or identifier of a service.
     */
    poNumber?: pulumi.Input<string>;
    /**
     * The POP in which you want to provision the connection (the on-ramp).
     */
    pop: pulumi.Input<string>;
    /**
     * UUID of the published quote line with which this connection should be associated.
     */
    publishedQuoteLineUuid?: pulumi.Input<string>;
    /**
     * The speed of the new connection. Enum: ["50Mbps" "100Mbps" "200Mbps" "300Mbps" "400Mbps" "500Mbps" "1Gbps" "2Gbps"
     * "5Gbps" "10Gbps"]
     */
    speed: pulumi.Input<string>;
    /**
     * Subscription term of the Cloud Router Connection Enum: ["1", "12", "24", "36"] Defaults: 1
     */
    subscriptionTerm?: pulumi.Input<number>;
    timeouts?: pulumi.Input<inputs.CloudRouterConnectionIbmTimeouts>;
    /**
     * The desired availability zone of the connection. Example: "A"
     */
    zone: pulumi.Input<string>;
}
