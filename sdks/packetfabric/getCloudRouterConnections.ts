// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudRouterConnections(args: GetCloudRouterConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudRouterConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getCloudRouterConnections:getCloudRouterConnections", {
        "circuitId": args.circuitId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudRouterConnections.
 */
export interface GetCloudRouterConnectionsArgs {
    circuitId: string;
    id?: string;
}

/**
 * A collection of values returned by getCloudRouterConnections.
 */
export interface GetCloudRouterConnectionsResult {
    readonly circuitId: string;
    readonly cloudConnections: outputs.GetCloudRouterConnectionsCloudConnection[];
    readonly id: string;
}
export function getCloudRouterConnectionsOutput(args: GetCloudRouterConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudRouterConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getCloudRouterConnections(a, opts))
}

/**
 * A collection of arguments for invoking getCloudRouterConnections.
 */
export interface GetCloudRouterConnectionsOutputArgs {
    circuitId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
