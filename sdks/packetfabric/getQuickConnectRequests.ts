// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getQuickConnectRequests(args: GetQuickConnectRequestsArgs, opts?: pulumi.InvokeOptions): Promise<GetQuickConnectRequestsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getQuickConnectRequests:getQuickConnectRequests", {
        "id": args.id,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getQuickConnectRequests.
 */
export interface GetQuickConnectRequestsArgs {
    id?: string;
    type: string;
}

/**
 * A collection of values returned by getQuickConnectRequests.
 */
export interface GetQuickConnectRequestsResult {
    readonly id: string;
    readonly quickConnectRequests: outputs.GetQuickConnectRequestsQuickConnectRequest[];
    readonly type: string;
}
export function getQuickConnectRequestsOutput(args: GetQuickConnectRequestsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuickConnectRequestsResult> {
    return pulumi.output(args).apply((a: any) => getQuickConnectRequests(a, opts))
}

/**
 * A collection of arguments for invoking getQuickConnectRequests.
 */
export interface GetQuickConnectRequestsOutputArgs {
    id?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
