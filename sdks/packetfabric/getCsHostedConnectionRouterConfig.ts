// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCsHostedConnectionRouterConfig(args: GetCsHostedConnectionRouterConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetCsHostedConnectionRouterConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("packetfabric:index/getCsHostedConnectionRouterConfig:getCsHostedConnectionRouterConfig", {
        "cloudCircuitId": args.cloudCircuitId,
        "id": args.id,
        "routerType": args.routerType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCsHostedConnectionRouterConfig.
 */
export interface GetCsHostedConnectionRouterConfigArgs {
    cloudCircuitId: string;
    id?: string;
    routerType: string;
}

/**
 * A collection of values returned by getCsHostedConnectionRouterConfig.
 */
export interface GetCsHostedConnectionRouterConfigResult {
    readonly cloudCircuitId: string;
    readonly id: string;
    readonly routerConfig: string;
    readonly routerType: string;
}
export function getCsHostedConnectionRouterConfigOutput(args: GetCsHostedConnectionRouterConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCsHostedConnectionRouterConfigResult> {
    return pulumi.output(args).apply((a: any) => getCsHostedConnectionRouterConfig(a, opts))
}

/**
 * A collection of arguments for invoking getCsHostedConnectionRouterConfig.
 */
export interface GetCsHostedConnectionRouterConfigOutputArgs {
    cloudCircuitId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    routerType: pulumi.Input<string>;
}
