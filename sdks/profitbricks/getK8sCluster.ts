// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getK8sCluster(args?: GetK8sClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetK8sClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("profitbricks:index/getK8sCluster:getK8sCluster", {
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getK8sCluster.
 */
export interface GetK8sClusterArgs {
    id?: string;
    name?: string;
    timeouts?: inputs.GetK8sClusterTimeouts;
}

/**
 * A collection of values returned by getK8sCluster.
 */
export interface GetK8sClusterResult {
    readonly id?: string;
    readonly k8sVersion: string;
    readonly kubeConfig: string;
    readonly name?: string;
    readonly nodePools: string[];
    readonly state: string;
    readonly timeouts?: outputs.GetK8sClusterTimeouts;
}
export function getK8sClusterOutput(args?: GetK8sClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetK8sClusterResult> {
    return pulumi.output(args).apply((a: any) => getK8sCluster(a, opts))
}

/**
 * A collection of arguments for invoking getK8sCluster.
 */
export interface GetK8sClusterOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetK8sClusterTimeoutsArgs>;
}
