// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLan(args: GetLanArgs, opts?: pulumi.InvokeOptions): Promise<GetLanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("profitbricks:index/getLan:getLan", {
        "datacenterId": args.datacenterId,
        "id": args.id,
        "name": args.name,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLan.
 */
export interface GetLanArgs {
    datacenterId: string;
    id?: string;
    name?: string;
    timeouts?: inputs.GetLanTimeouts;
}

/**
 * A collection of values returned by getLan.
 */
export interface GetLanResult {
    readonly datacenterId: string;
    readonly id?: string;
    readonly ipFailovers: outputs.GetLanIpFailover[];
    readonly name?: string;
    readonly pcc: string;
    readonly public: boolean;
    readonly timeouts?: outputs.GetLanTimeouts;
}
export function getLanOutput(args: GetLanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLanResult> {
    return pulumi.output(args).apply((a: any) => getLan(a, opts))
}

/**
 * A collection of arguments for invoking getLan.
 */
export interface GetLanOutputArgs {
    datacenterId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetLanTimeoutsArgs>;
}
