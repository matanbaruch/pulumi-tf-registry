// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAgent(args: GetAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thousandeyes:index/getAgent:getAgent", {
        "agentName": args.agentName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgent.
 */
export interface GetAgentArgs {
    agentName: string;
    id?: string;
}

/**
 * A collection of values returned by getAgent.
 */
export interface GetAgentResult {
    readonly agentId: number;
    readonly agentName: string;
    readonly id: string;
    readonly ipAddresses: string[];
}
export function getAgentOutput(args: GetAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentResult> {
    return pulumi.output(args).apply((a: any) => getAgent(a, opts))
}

/**
 * A collection of arguments for invoking getAgent.
 */
export interface GetAgentOutputArgs {
    agentName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
