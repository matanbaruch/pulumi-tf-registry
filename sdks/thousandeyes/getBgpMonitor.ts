// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBgpMonitor(args?: GetBgpMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpMonitorResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("thousandeyes:index/getBgpMonitor:getBgpMonitor", {
        "id": args.id,
        "monitorId": args.monitorId,
        "monitorName": args.monitorName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBgpMonitor.
 */
export interface GetBgpMonitorArgs {
    id?: string;
    monitorId?: number;
    monitorName?: string;
}

/**
 * A collection of values returned by getBgpMonitor.
 */
export interface GetBgpMonitorResult {
    readonly id: string;
    readonly ipAddress: string;
    readonly monitorId?: number;
    readonly monitorName?: string;
    readonly monitorType: string;
    readonly network: string;
}
export function getBgpMonitorOutput(args?: GetBgpMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpMonitorResult> {
    return pulumi.output(args).apply((a: any) => getBgpMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getBgpMonitor.
 */
export interface GetBgpMonitorOutputArgs {
    id?: pulumi.Input<string>;
    monitorId?: pulumi.Input<number>;
    monitorName?: pulumi.Input<string>;
}
