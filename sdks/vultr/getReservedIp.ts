// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getReservedIp(args?: GetReservedIpArgs, opts?: pulumi.InvokeOptions): Promise<GetReservedIpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getReservedIp:getReservedIp", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getReservedIp.
 */
export interface GetReservedIpArgs {
    filters?: inputs.GetReservedIpFilter[];
    id?: string;
}

/**
 * A collection of values returned by getReservedIp.
 */
export interface GetReservedIpResult {
    readonly filters?: outputs.GetReservedIpFilter[];
    readonly id: string;
    readonly instanceId: string;
    readonly ipType: string;
    readonly label: string;
    readonly region: string;
    readonly subnet: string;
    readonly subnetSize: number;
}
export function getReservedIpOutput(args?: GetReservedIpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReservedIpResult> {
    return pulumi.output(args).apply((a: any) => getReservedIp(a, opts))
}

/**
 * A collection of arguments for invoking getReservedIp.
 */
export interface GetReservedIpOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetReservedIpFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
