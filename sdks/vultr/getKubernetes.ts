// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetes(args?: GetKubernetesArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getKubernetes:getKubernetes", {
        "filters": args.filters,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetes.
 */
export interface GetKubernetesArgs {
    filters?: inputs.GetKubernetesFilter[];
}

/**
 * A collection of values returned by getKubernetes.
 */
export interface GetKubernetesResult {
    readonly clientCertificate: string;
    readonly clientKey: string;
    readonly clusterCaCertificate: string;
    readonly clusterSubnet: string;
    readonly dateCreated: string;
    readonly endpoint: string;
    readonly filters?: outputs.GetKubernetesFilter[];
    readonly firewallGroupId: string;
    readonly haControlplanes: boolean;
    readonly id: string;
    readonly ip: string;
    readonly kubeConfig: string;
    readonly label: string;
    readonly nodePools: outputs.GetKubernetesNodePool[];
    readonly region: string;
    readonly serviceSubnet: string;
    readonly status: string;
    readonly version: string;
}
export function getKubernetesOutput(args?: GetKubernetesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesResult> {
    return pulumi.output(args).apply((a: any) => getKubernetes(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetes.
 */
export interface GetKubernetesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetKubernetesFilterArgs>[]>;
}
