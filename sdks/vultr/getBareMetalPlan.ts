// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBareMetalPlan(args?: GetBareMetalPlanArgs, opts?: pulumi.InvokeOptions): Promise<GetBareMetalPlanResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getBareMetalPlan:getBareMetalPlan", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBareMetalPlan.
 */
export interface GetBareMetalPlanArgs {
    filters?: inputs.GetBareMetalPlanFilter[];
    id?: string;
}

/**
 * A collection of values returned by getBareMetalPlan.
 */
export interface GetBareMetalPlanResult {
    readonly bandwidth: number;
    readonly cpuCount: number;
    readonly cpuModel: string;
    readonly cpuThreads: number;
    readonly disk: number;
    readonly diskCount: number;
    readonly filters?: outputs.GetBareMetalPlanFilter[];
    readonly id: string;
    readonly locations: string[];
    readonly monthlyCost: number;
    readonly ram: number;
    readonly type: string;
}
export function getBareMetalPlanOutput(args?: GetBareMetalPlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBareMetalPlanResult> {
    return pulumi.output(args).apply((a: any) => getBareMetalPlan(a, opts))
}

/**
 * A collection of arguments for invoking getBareMetalPlan.
 */
export interface GetBareMetalPlanOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetBareMetalPlanFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
