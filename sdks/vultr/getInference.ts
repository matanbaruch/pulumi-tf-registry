// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInference(args?: GetInferenceArgs, opts?: pulumi.InvokeOptions): Promise<GetInferenceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getInference:getInference", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInference.
 */
export interface GetInferenceArgs {
    filters?: inputs.GetInferenceFilter[];
    id?: string;
}

/**
 * A collection of values returned by getInference.
 */
export interface GetInferenceResult {
    readonly apiKey: string;
    readonly dateCreated: string;
    readonly filters?: outputs.GetInferenceFilter[];
    readonly id: string;
    readonly label: string;
    readonly usage: {[key: string]: number};
}
export function getInferenceOutput(args?: GetInferenceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInferenceResult> {
    return pulumi.output(args).apply((a: any) => getInference(a, opts))
}

/**
 * A collection of arguments for invoking getInference.
 */
export interface GetInferenceOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetInferenceFilterArgs>[]>;
    id?: pulumi.Input<string>;
}
