// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInstanceIpv4(args?: GetInstanceIpv4Args, opts?: pulumi.InvokeOptions): Promise<GetInstanceIpv4Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getInstanceIpv4:getInstanceIpv4", {
        "filters": args.filters,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInstanceIpv4.
 */
export interface GetInstanceIpv4Args {
    filters?: inputs.GetInstanceIpv4Filter[];
    id?: string;
}

/**
 * A collection of values returned by getInstanceIpv4.
 */
export interface GetInstanceIpv4Result {
    readonly filters?: outputs.GetInstanceIpv4Filter[];
    readonly gateway: string;
    readonly id: string;
    readonly instanceId: string;
    readonly ip: string;
    readonly netmask: string;
    readonly reverse: string;
}
export function getInstanceIpv4Output(args?: GetInstanceIpv4OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceIpv4Result> {
    return pulumi.output(args).apply((a: any) => getInstanceIpv4(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceIpv4.
 */
export interface GetInstanceIpv4OutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetInstanceIpv4FilterArgs>[]>;
    id?: pulumi.Input<string>;
}
