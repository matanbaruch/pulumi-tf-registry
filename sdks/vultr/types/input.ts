// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BareMetalServerTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseReadReplica {
    clusterTimeZone?: pulumi.Input<string>;
    databaseEngine?: pulumi.Input<string>;
    databaseEngineVersion?: pulumi.Input<string>;
    dateCreated?: pulumi.Input<string>;
    dbname?: pulumi.Input<string>;
    ferretdbCredentials?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    host?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    label: pulumi.Input<string>;
    latestBackup?: pulumi.Input<string>;
    maintenanceDow?: pulumi.Input<string>;
    maintenanceTime?: pulumi.Input<string>;
    mysqlLongQueryTime?: pulumi.Input<number>;
    mysqlRequirePrimaryKey?: pulumi.Input<boolean>;
    mysqlSlowQueryLog?: pulumi.Input<boolean>;
    mysqlSqlModes?: pulumi.Input<pulumi.Input<string>[]>;
    password?: pulumi.Input<string>;
    plan?: pulumi.Input<string>;
    planDisk?: pulumi.Input<number>;
    planRam?: pulumi.Input<number>;
    planReplicas?: pulumi.Input<number>;
    planVcpus?: pulumi.Input<number>;
    port?: pulumi.Input<string>;
    publicHost?: pulumi.Input<string>;
    redisEvictionPolicy?: pulumi.Input<string>;
    region: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
    trustedIps?: pulumi.Input<pulumi.Input<string>[]>;
    user?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}

export interface DatabaseReplicaTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface DatabaseUserAccessControl {
    redisAclCategories: pulumi.Input<pulumi.Input<string>[]>;
    redisAclChannels: pulumi.Input<pulumi.Input<string>[]>;
    redisAclCommands: pulumi.Input<pulumi.Input<string>[]>;
    redisAclKeys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetApplicationFilter {
    name: string;
    values: string[];
}

export interface GetApplicationFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBackupFilter {
    name: string;
    values: string[];
}

export interface GetBackupFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBareMetalPlanFilter {
    name: string;
    values: string[];
}

export interface GetBareMetalPlanFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBareMetalServerFilter {
    name: string;
    values: string[];
}

export interface GetBareMetalServerFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetBlockStorageFilter {
    name: string;
    values: string[];
}

export interface GetBlockStorageFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetContainerRegistryFilter {
    name: string;
    values: string[];
}

export interface GetContainerRegistryFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetDatabaseFilter {
    name: string;
    values: string[];
}

export interface GetDatabaseFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetFirewallGroupFilter {
    name: string;
    values: string[];
}

export interface GetFirewallGroupFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInferenceFilter {
    name: string;
    values: string[];
}

export interface GetInferenceFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInstanceFilter {
    name: string;
    values: string[];
}

export interface GetInstanceFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInstanceIpv4Filter {
    name: string;
    values: string[];
}

export interface GetInstanceIpv4FilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetInstancesFilter {
    name: string;
    values: string[];
}

export interface GetInstancesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIsoPrivateFilter {
    name: string;
    values: string[];
}

export interface GetIsoPrivateFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetIsoPublicFilter {
    name: string;
    values: string[];
}

export interface GetIsoPublicFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKubernetesFilter {
    name: string;
    values: string[];
}

export interface GetKubernetesFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetLoadBalancerFilter {
    name: string;
    values: string[];
}

export interface GetLoadBalancerFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectStorageClusterFilter {
    name: string;
    values: string[];
}

export interface GetObjectStorageClusterFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetObjectStorageFilter {
    name: string;
    values: string[];
}

export interface GetObjectStorageFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetOsFilter {
    name: string;
    values: string[];
}

export interface GetOsFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetPlanFilter {
    name: string;
    values: string[];
}

export interface GetPlanFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetRegionFilter {
    name: string;
    values: string[];
}

export interface GetRegionFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetReservedIpFilter {
    name: string;
    values: string[];
}

export interface GetReservedIpFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetReverseIpv4Filter {
    name: string;
    values: string[];
}

export interface GetReverseIpv4FilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetReverseIpv6Filter {
    name: string;
    values: string[];
}

export interface GetReverseIpv6FilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSnapshotFilter {
    name: string;
    values: string[];
}

export interface GetSnapshotFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSshKeyFilter {
    name: string;
    values: string[];
}

export interface GetSshKeyFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetStartupScriptFilter {
    name: string;
    values: string[];
}

export interface GetStartupScriptFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetUserFilter {
    name: string;
    values: string[];
}

export interface GetUserFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpc2Filter {
    name: string;
    values: string[];
}

export interface GetVpc2FilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetVpcFilter {
    name: string;
    values: string[];
}

export interface GetVpcFilterArgs {
    name: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface InferenceTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface InstanceBackupsSchedule {
    dom?: pulumi.Input<number>;
    dow?: pulumi.Input<number>;
    hour?: pulumi.Input<number>;
    type: pulumi.Input<string>;
}

export interface InstanceTimeouts {
    create?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface KubernetesNodePools {
    autoScaler?: pulumi.Input<boolean>;
    dateCreated?: pulumi.Input<string>;
    dateUpdated?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    label: pulumi.Input<string>;
    maxNodes?: pulumi.Input<number>;
    minNodes?: pulumi.Input<number>;
    nodeQuantity: pulumi.Input<number>;
    nodes?: pulumi.Input<pulumi.Input<inputs.KubernetesNodePoolsNode>[]>;
    plan: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface KubernetesNodePoolsNode {
    dateCreated: pulumi.Input<string>;
    id: pulumi.Input<string>;
    label: pulumi.Input<string>;
    status: pulumi.Input<string>;
}

export interface LoadBalancerFirewallRule {
    id?: pulumi.Input<string>;
    ipType: pulumi.Input<string>;
    port: pulumi.Input<number>;
    source: pulumi.Input<string>;
}

export interface LoadBalancerForwardingRule {
    backendPort: pulumi.Input<number>;
    backendProtocol: pulumi.Input<string>;
    frontendPort: pulumi.Input<number>;
    frontendProtocol: pulumi.Input<string>;
    ruleId?: pulumi.Input<string>;
}

export interface LoadBalancerHealthCheck {
    checkInterval?: pulumi.Input<number>;
    healthyThreshold?: pulumi.Input<number>;
    path?: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    responseTimeout?: pulumi.Input<number>;
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface LoadBalancerSsl {
    certificate: pulumi.Input<string>;
    chain?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
}
