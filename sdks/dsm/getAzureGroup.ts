// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAzureGroup(args: GetAzureGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAzureGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dsm:index/getAzureGroup:getAzureGroup", {
        "id": args.id,
        "name": args.name,
        "scan": args.scan,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAzureGroup.
 */
export interface GetAzureGroupArgs {
    id?: string;
    name: string;
    scan?: boolean;
}

/**
 * A collection of values returned by getAzureGroup.
 */
export interface GetAzureGroupResult {
    readonly acctId: string;
    readonly clientId: string;
    readonly creator: {[key: string]: string};
    readonly description: string;
    readonly groupId: string;
    readonly id: string;
    readonly keyVaultType: string;
    readonly name: string;
    readonly scan?: boolean;
    readonly secretKey: string;
    readonly subscriptionId: string;
    readonly tenantId: string;
    readonly url: string;
}
export function getAzureGroupOutput(args: GetAzureGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAzureGroupResult> {
    return pulumi.output(args).apply((a: any) => getAzureGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAzureGroup.
 */
export interface GetAzureGroupOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scan?: pulumi.Input<boolean>;
}
