// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GroupUserRole extends pulumi.CustomResource {
    /**
     * Get an existing GroupUserRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupUserRoleState, opts?: pulumi.CustomResourceOptions): GroupUserRole {
        return new GroupUserRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dsm:index/groupUserRole:GroupUserRole';

    /**
     * Returns true if the given object is an instance of GroupUserRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupUserRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupUserRole.__pulumiType;
    }

    /**
     * Group object ID from Fortanix DSM.
     */
    public /*out*/ readonly groupId!: pulumi.Output<string>;
    /**
     * The Fortanix DSM group object name.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * Group object name from Fortanix DSM (matches the group_name provided during creation).
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Role object ID from Fortanix DSM.
     */
    public /*out*/ readonly roleId!: pulumi.Output<string>;
    /**
     * The Fortanix DSM role object name. * The legacy group user role values can be GROUPAUDITOR or GROUPADMINISTRATOR. * For
     * custom group roles, the value should be the role ID.
     */
    public readonly roleName!: pulumi.Output<string>;
    /**
     * The Fortanix DSM user object email.
     */
    public readonly userEmail!: pulumi.Output<string>;
    /**
     * User object ID from Fortanix DSM.
     */
    public /*out*/ readonly userId!: pulumi.Output<string>;

    /**
     * Create a GroupUserRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupUserRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupUserRoleArgs | GroupUserRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupUserRoleState | undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["userEmail"] = state ? state.userEmail : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as GroupUserRoleArgs | undefined;
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            if ((!args || args.userEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userEmail'");
            }
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["groupId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["roleId"] = undefined /*out*/;
            resourceInputs["userId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupUserRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GroupUserRole resources.
 */
export interface GroupUserRoleState {
    /**
     * Group object ID from Fortanix DSM.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The Fortanix DSM group object name.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Group object name from Fortanix DSM (matches the group_name provided during creation).
     */
    name?: pulumi.Input<string>;
    /**
     * Role object ID from Fortanix DSM.
     */
    roleId?: pulumi.Input<string>;
    /**
     * The Fortanix DSM role object name. * The legacy group user role values can be GROUPAUDITOR or GROUPADMINISTRATOR. * For
     * custom group roles, the value should be the role ID.
     */
    roleName?: pulumi.Input<string>;
    /**
     * The Fortanix DSM user object email.
     */
    userEmail?: pulumi.Input<string>;
    /**
     * User object ID from Fortanix DSM.
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GroupUserRole resource.
 */
export interface GroupUserRoleArgs {
    /**
     * The Fortanix DSM group object name.
     */
    groupName: pulumi.Input<string>;
    /**
     * The Fortanix DSM role object name. * The legacy group user role values can be GROUPAUDITOR or GROUPADMINISTRATOR. * For
     * custom group roles, the value should be the role ID.
     */
    roleName: pulumi.Input<string>;
    /**
     * The Fortanix DSM user object email.
     */
    userEmail: pulumi.Input<string>;
}
