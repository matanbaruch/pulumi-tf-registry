// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GcpEkmSa extends pulumi.CustomResource {
    /**
     * Get an existing GcpEkmSa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpEkmSaState, opts?: pulumi.CustomResourceOptions): GcpEkmSa {
        return new GcpEkmSa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dsm:index/gcpEkmSa:GcpEkmSa';

    /**
     * Returns true if the given object is an instance of GcpEkmSa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpEkmSa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpEkmSa.__pulumiType;
    }

    /**
     * The account ID from Fortanix DSM.
     */
    public /*out*/ readonly acctId!: pulumi.Output<string>;
    public /*out*/ readonly appId!: pulumi.Output<string>;
    /**
     * The creator of the security object from Fortanix DSM. * `user`: If the security object was created by a user, the
     * computed value will be the matching user ID. * `app`: If the security object was created by an app, the computed value
     * will be the matching app ID.
     */
    public /*out*/ readonly creator!: pulumi.Output<{[key: string]: string}>;
    /**
     * The Fortanix DSM group ID to be mapped to the app by default.
     */
    public readonly defaultGroup!: pulumi.Output<string>;
    /**
     * The description of the app.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * To modify the permissions of any existing group.
     */
    public readonly modGroupPermissions!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Google service account name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * If you want to change the default permissions of a new group.
     */
    public readonly otherGroupPermissions!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Fortanix DSM group object ID the app needs to be assigned to. If you want to delete the existing groups from an app,
     * remove the IDs during update.
     */
    public readonly otherGroups!: pulumi.Output<string[] | undefined>;

    /**
     * Create a GcpEkmSa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpEkmSaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpEkmSaArgs | GcpEkmSaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpEkmSaState | undefined;
            resourceInputs["acctId"] = state ? state.acctId : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["defaultGroup"] = state ? state.defaultGroup : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["modGroupPermissions"] = state ? state.modGroupPermissions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["otherGroupPermissions"] = state ? state.otherGroupPermissions : undefined;
            resourceInputs["otherGroups"] = state ? state.otherGroups : undefined;
        } else {
            const args = argsOrState as GcpEkmSaArgs | undefined;
            if ((!args || args.defaultGroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultGroup'");
            }
            resourceInputs["defaultGroup"] = args ? args.defaultGroup : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["modGroupPermissions"] = args ? args.modGroupPermissions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["otherGroupPermissions"] = args ? args.otherGroupPermissions : undefined;
            resourceInputs["otherGroups"] = args ? args.otherGroups : undefined;
            resourceInputs["acctId"] = undefined /*out*/;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpEkmSa.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GcpEkmSa resources.
 */
export interface GcpEkmSaState {
    /**
     * The account ID from Fortanix DSM.
     */
    acctId?: pulumi.Input<string>;
    appId?: pulumi.Input<string>;
    /**
     * The creator of the security object from Fortanix DSM. * `user`: If the security object was created by a user, the
     * computed value will be the matching user ID. * `app`: If the security object was created by an app, the computed value
     * will be the matching app ID.
     */
    creator?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Fortanix DSM group ID to be mapped to the app by default.
     */
    defaultGroup?: pulumi.Input<string>;
    /**
     * The description of the app.
     */
    description?: pulumi.Input<string>;
    /**
     * To modify the permissions of any existing group.
     */
    modGroupPermissions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google service account name.
     */
    name?: pulumi.Input<string>;
    /**
     * If you want to change the default permissions of a new group.
     */
    otherGroupPermissions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Fortanix DSM group object ID the app needs to be assigned to. If you want to delete the existing groups from an app,
     * remove the IDs during update.
     */
    otherGroups?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a GcpEkmSa resource.
 */
export interface GcpEkmSaArgs {
    /**
     * The Fortanix DSM group ID to be mapped to the app by default.
     */
    defaultGroup: pulumi.Input<string>;
    /**
     * The description of the app.
     */
    description?: pulumi.Input<string>;
    /**
     * To modify the permissions of any existing group.
     */
    modGroupPermissions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google service account name.
     */
    name?: pulumi.Input<string>;
    /**
     * If you want to change the default permissions of a new group.
     */
    otherGroupPermissions?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Fortanix DSM group object ID the app needs to be assigned to. If you want to delete the existing groups from an app,
     * remove the IDs during update.
     */
    otherGroups?: pulumi.Input<pulumi.Input<string>[]>;
}
