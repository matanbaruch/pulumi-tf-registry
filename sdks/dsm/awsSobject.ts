// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsSobject extends pulumi.CustomResource {
    /**
     * Get an existing AwsSobject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsSobjectState, opts?: pulumi.CustomResourceOptions): AwsSobject {
        return new AwsSobject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dsm:index/awsSobject:AwsSobject';

    /**
     * Returns true if the given object is an instance of AwsSobject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsSobject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsSobject.__pulumiType;
    }

    /**
     * The account ID from Fortanix DSM.
     */
    public /*out*/ readonly acctId!: pulumi.Output<string>;
    /**
     * Any other user-defined AWS metadata information. * e.g. test-key = test-value * The above key value pair will be added
     * as `aws-tag-test-key = test-value`
     */
    public readonly awsTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Security object that is copied from another security object.
     */
    public /*out*/ readonly copiedFrom!: pulumi.Output<string>;
    /**
     * List of security objects copied by the current security object.
     */
    public /*out*/ readonly copiedTos!: pulumi.Output<string[]>;
    /**
     * The creator of the group from Fortanix DSM. * `user`: If the group was created by a user, the computed value will be the
     * matching user id. * `app`: If the group was created by a app, the computed value will be the matching app id.
     */
    public /*out*/ readonly creator!: pulumi.Output<{[key: string]: string}>;
    /**
     * AWS KMS key level metadata information. *`aws-aliases`: Key name within AWS KMS. *`aws-policy`: JSON format of AWS
     * policy that should be enforced for the key.
     */
    public readonly customMetadata!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The security object description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The security object name from Fortanix DSM (matches the name provided during creation).
     */
    public /*out*/ readonly dsmName!: pulumi.Output<string>;
    /**
     * Whether the security object will be enabled or disabled. The values are true/false.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The security object expiry date in RFC format.
     */
    public readonly expiryDate!: pulumi.Output<string | undefined>;
    /**
     * AWS CMK level metadata: * `Key_arn` * `Key_id` * `Key_state` * `Key_aliases` * `Key_deletion_date`
     */
    public /*out*/ readonly external!: pulumi.Output<{[key: string]: string}>;
    /**
     * The security object group assignment.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * A local security object created/imported to Fortanix DSM(BYOK) and copied to AWS KMS.
     */
    public readonly key!: pulumi.Output<{[key: string]: string}>;
    /**
     * The security object operations permitted. | obj_type | key_size/curve | key_ops | | -------- | -------- |-------- | |
     * `AES` | 256 | ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, DERIVEKEY, MACGENERATE, MACVERIFY, APPMANAGEABLE, EXPORT | | `RSA` |
     * 2048, 3072, 4096 | APPMANAGEABLE, SIGN, VERIFY, ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, EXPORT | | `EC` | NistP256,
     * NistP384, NistP521,SecP256K1 | APPMANAGEABLE, SIGN, VERIFY, AGREEKEY, EXPORT
     */
    public readonly keyOps!: pulumi.Output<string[] | undefined>;
    /**
     * The size of the security object.
     */
    public readonly keySize!: pulumi.Output<number | undefined>;
    /**
     * The security object ID from Fortanix DSM.
     */
    public /*out*/ readonly kid!: pulumi.Output<string>;
    /**
     * The security object name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of security object.
     */
    public readonly objType!: pulumi.Output<string | undefined>;
    /**
     * input the value for “days” after which the AWS key will be deleted. * The default value is 7 days. * The minimum
     * value is 7 days.
     */
    public readonly pendingWindowInDays!: pulumi.Output<number | undefined>;
    /**
     * Replaced by a security object.
     */
    public /*out*/ readonly replaced!: pulumi.Output<string>;
    /**
     * Replacement of a security object that was rotated.
     */
    public /*out*/ readonly replacement!: pulumi.Output<string>;
    /**
     * The security object rotation. Specify the method to use for key rotation: * `DSM`: To rotate from a DSM local key. The
     * key material of new key will be stored in DSM. * `AWS`: To rotate from a AWS key. The key material of new key will be
     * stored in AWS.
     */
    public readonly rotate!: pulumi.Output<string | undefined>;
    /**
     * Name of the security object to be rotated.
     */
    public readonly rotateFrom!: pulumi.Output<string | undefined>;
    /**
     * Policy to rotate a Security Object, configure the below parameters. * `interval_days`: Rotate the key for every given
     * number of days. * `interval_months`: Rotate the key for every given number of months. * `effective_at`: Start of the
     * rotation policy time. * **Note:** Either interval_days or interval_months should be given, but not both.
     */
    public readonly rotationPolicy!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The key states of the AWS key. The values are PendingDeletion, Enabled, Disabled and PendingImport.
     */
    public readonly state!: pulumi.Output<string | undefined>;

    /**
     * Create a AwsSobject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsSobjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsSobjectArgs | AwsSobjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsSobjectState | undefined;
            resourceInputs["acctId"] = state ? state.acctId : undefined;
            resourceInputs["awsTags"] = state ? state.awsTags : undefined;
            resourceInputs["copiedFrom"] = state ? state.copiedFrom : undefined;
            resourceInputs["copiedTos"] = state ? state.copiedTos : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["customMetadata"] = state ? state.customMetadata : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dsmName"] = state ? state.dsmName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["expiryDate"] = state ? state.expiryDate : undefined;
            resourceInputs["external"] = state ? state.external : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyOps"] = state ? state.keyOps : undefined;
            resourceInputs["keySize"] = state ? state.keySize : undefined;
            resourceInputs["kid"] = state ? state.kid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objType"] = state ? state.objType : undefined;
            resourceInputs["pendingWindowInDays"] = state ? state.pendingWindowInDays : undefined;
            resourceInputs["replaced"] = state ? state.replaced : undefined;
            resourceInputs["replacement"] = state ? state.replacement : undefined;
            resourceInputs["rotate"] = state ? state.rotate : undefined;
            resourceInputs["rotateFrom"] = state ? state.rotateFrom : undefined;
            resourceInputs["rotationPolicy"] = state ? state.rotationPolicy : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as AwsSobjectArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["awsTags"] = args ? args.awsTags : undefined;
            resourceInputs["customMetadata"] = args ? args.customMetadata : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["expiryDate"] = args ? args.expiryDate : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["keyOps"] = args ? args.keyOps : undefined;
            resourceInputs["keySize"] = args ? args.keySize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objType"] = args ? args.objType : undefined;
            resourceInputs["pendingWindowInDays"] = args ? args.pendingWindowInDays : undefined;
            resourceInputs["rotate"] = args ? args.rotate : undefined;
            resourceInputs["rotateFrom"] = args ? args.rotateFrom : undefined;
            resourceInputs["rotationPolicy"] = args ? args.rotationPolicy : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["acctId"] = undefined /*out*/;
            resourceInputs["copiedFrom"] = undefined /*out*/;
            resourceInputs["copiedTos"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["dsmName"] = undefined /*out*/;
            resourceInputs["external"] = undefined /*out*/;
            resourceInputs["kid"] = undefined /*out*/;
            resourceInputs["replaced"] = undefined /*out*/;
            resourceInputs["replacement"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsSobject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsSobject resources.
 */
export interface AwsSobjectState {
    /**
     * The account ID from Fortanix DSM.
     */
    acctId?: pulumi.Input<string>;
    /**
     * Any other user-defined AWS metadata information. * e.g. test-key = test-value * The above key value pair will be added
     * as `aws-tag-test-key = test-value`
     */
    awsTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Security object that is copied from another security object.
     */
    copiedFrom?: pulumi.Input<string>;
    /**
     * List of security objects copied by the current security object.
     */
    copiedTos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The creator of the group from Fortanix DSM. * `user`: If the group was created by a user, the computed value will be the
     * matching user id. * `app`: If the group was created by a app, the computed value will be the matching app id.
     */
    creator?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * AWS KMS key level metadata information. *`aws-aliases`: Key name within AWS KMS. *`aws-policy`: JSON format of AWS
     * policy that should be enforced for the key.
     */
    customMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object description.
     */
    description?: pulumi.Input<string>;
    /**
     * The security object name from Fortanix DSM (matches the name provided during creation).
     */
    dsmName?: pulumi.Input<string>;
    /**
     * Whether the security object will be enabled or disabled. The values are true/false.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The security object expiry date in RFC format.
     */
    expiryDate?: pulumi.Input<string>;
    /**
     * AWS CMK level metadata: * `Key_arn` * `Key_id` * `Key_state` * `Key_aliases` * `Key_deletion_date`
     */
    external?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object group assignment.
     */
    groupId?: pulumi.Input<string>;
    /**
     * A local security object created/imported to Fortanix DSM(BYOK) and copied to AWS KMS.
     */
    key?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object operations permitted. | obj_type | key_size/curve | key_ops | | -------- | -------- |-------- | |
     * `AES` | 256 | ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, DERIVEKEY, MACGENERATE, MACVERIFY, APPMANAGEABLE, EXPORT | | `RSA` |
     * 2048, 3072, 4096 | APPMANAGEABLE, SIGN, VERIFY, ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, EXPORT | | `EC` | NistP256,
     * NistP384, NistP521,SecP256K1 | APPMANAGEABLE, SIGN, VERIFY, AGREEKEY, EXPORT
     */
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The size of the security object.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The security object ID from Fortanix DSM.
     */
    kid?: pulumi.Input<string>;
    /**
     * The security object name.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of security object.
     */
    objType?: pulumi.Input<string>;
    /**
     * input the value for “days” after which the AWS key will be deleted. * The default value is 7 days. * The minimum
     * value is 7 days.
     */
    pendingWindowInDays?: pulumi.Input<number>;
    /**
     * Replaced by a security object.
     */
    replaced?: pulumi.Input<string>;
    /**
     * Replacement of a security object that was rotated.
     */
    replacement?: pulumi.Input<string>;
    /**
     * The security object rotation. Specify the method to use for key rotation: * `DSM`: To rotate from a DSM local key. The
     * key material of new key will be stored in DSM. * `AWS`: To rotate from a AWS key. The key material of new key will be
     * stored in AWS.
     */
    rotate?: pulumi.Input<string>;
    /**
     * Name of the security object to be rotated.
     */
    rotateFrom?: pulumi.Input<string>;
    /**
     * Policy to rotate a Security Object, configure the below parameters. * `interval_days`: Rotate the key for every given
     * number of days. * `interval_months`: Rotate the key for every given number of months. * `effective_at`: Start of the
     * rotation policy time. * **Note:** Either interval_days or interval_months should be given, but not both.
     */
    rotationPolicy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The key states of the AWS key. The values are PendingDeletion, Enabled, Disabled and PendingImport.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsSobject resource.
 */
export interface AwsSobjectArgs {
    /**
     * Any other user-defined AWS metadata information. * e.g. test-key = test-value * The above key value pair will be added
     * as `aws-tag-test-key = test-value`
     */
    awsTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * AWS KMS key level metadata information. *`aws-aliases`: Key name within AWS KMS. *`aws-policy`: JSON format of AWS
     * policy that should be enforced for the key.
     */
    customMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object description.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the security object will be enabled or disabled. The values are true/false.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The security object expiry date in RFC format.
     */
    expiryDate?: pulumi.Input<string>;
    /**
     * The security object group assignment.
     */
    groupId: pulumi.Input<string>;
    /**
     * A local security object created/imported to Fortanix DSM(BYOK) and copied to AWS KMS.
     */
    key: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object operations permitted. | obj_type | key_size/curve | key_ops | | -------- | -------- |-------- | |
     * `AES` | 256 | ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, DERIVEKEY, MACGENERATE, MACVERIFY, APPMANAGEABLE, EXPORT | | `RSA` |
     * 2048, 3072, 4096 | APPMANAGEABLE, SIGN, VERIFY, ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, EXPORT | | `EC` | NistP256,
     * NistP384, NistP521,SecP256K1 | APPMANAGEABLE, SIGN, VERIFY, AGREEKEY, EXPORT
     */
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The size of the security object.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The security object name.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of security object.
     */
    objType?: pulumi.Input<string>;
    /**
     * input the value for “days” after which the AWS key will be deleted. * The default value is 7 days. * The minimum
     * value is 7 days.
     */
    pendingWindowInDays?: pulumi.Input<number>;
    /**
     * The security object rotation. Specify the method to use for key rotation: * `DSM`: To rotate from a DSM local key. The
     * key material of new key will be stored in DSM. * `AWS`: To rotate from a AWS key. The key material of new key will be
     * stored in AWS.
     */
    rotate?: pulumi.Input<string>;
    /**
     * Name of the security object to be rotated.
     */
    rotateFrom?: pulumi.Input<string>;
    /**
     * Policy to rotate a Security Object, configure the below parameters. * `interval_days`: Rotate the key for every given
     * number of days. * `interval_months`: Rotate the key for every given number of months. * `effective_at`: Start of the
     * rotation policy time. * **Note:** Either interval_days or interval_months should be given, but not both.
     */
    rotationPolicy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The key states of the AWS key. The values are PendingDeletion, Enabled, Disabled and PendingImport.
     */
    state?: pulumi.Input<string>;
}
