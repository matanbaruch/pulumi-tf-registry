// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GcpSobject extends pulumi.CustomResource {
    /**
     * Get an existing GcpSobject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpSobjectState, opts?: pulumi.CustomResourceOptions): GcpSobject {
        return new GcpSobject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dsm:index/gcpSobject:GcpSobject';

    /**
     * Returns true if the given object is an instance of GcpSobject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpSobject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpSobject.__pulumiType;
    }

    /**
     * The account ID from Fortanix DSM.
     */
    public /*out*/ readonly acctId!: pulumi.Output<string>;
    /**
     * The creator of the security object from Fortanix DSM. * `user`: If the security object was created by a user, the
     * computed value will be the matching user ID. * `app`: If the security object was created by an app, the computed value
     * will be the matching app ID.
     */
    public /*out*/ readonly creator!: pulumi.Output<{[key: string]: string}>;
    /**
     * GCP KMS key metadata information: * `gcp-key-id`: Key name within GCP KMS.
     */
    public readonly customMetadata!: pulumi.Output<{[key: string]: string}>;
    /**
     * The description of the security object.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the security object is enabled or disabled. Values are true/false.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The expiry date of the security object in RFC format.
     */
    public readonly expiryDate!: pulumi.Output<string | undefined>;
    /**
     * External metadata.
     */
    public /*out*/ readonly external!: pulumi.Output<{[key: string]: string}>;
    /**
     * The GCP group ID in Fortanix DSM where the key will be generated.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * A local security object imported to Fortanix DSM (BYOK) and copied to GCP KMS.
     */
    public readonly key!: pulumi.Output<{[key: string]: string}>;
    /**
     * The security object operations permitted. | obj_type | key_size/curve | key_ops | | -------- | -------- |-------- | |
     * `AES` | 256 | ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, DERIVEKEY, MACGENERATE, MACVERIFY, APPMANAGEABLE, EXPORT
     */
    public readonly keyOps!: pulumi.Output<string[] | undefined>;
    /**
     * The size of the security object.
     */
    public readonly keySize!: pulumi.Output<number | undefined>;
    /**
     * The security object ID from Fortanix DSM.
     */
    public /*out*/ readonly kid!: pulumi.Output<string>;
    /**
     * Link between the local security object and the GCP KMS security object.
     */
    public /*out*/ readonly links!: pulumi.Output<{[key: string]: string}>;
    /**
     * The security object name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of security object.
     */
    public readonly objType!: pulumi.Output<string | undefined>;
    /**
     * Policy to rotate a security object. Configure the parameters below: * `interval_days`: Rotate the key every given number
     * of days. * `interval_months`: Rotate the key every given number of months. * `effective_at`: Start time of the rotation
     * policy. * `rotate_copied_keys`: Enable key rotation for copied keys. * **Note:** Either `interval_days` or
     * `interval_months` should be given, but not both.
     */
    public readonly rotationPolicy!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The state of the GCP KMS key. Values are Created, Deleted, Purged.
     */
    public readonly state!: pulumi.Output<string | undefined>;

    /**
     * Create a GcpSobject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpSobjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpSobjectArgs | GcpSobjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpSobjectState | undefined;
            resourceInputs["acctId"] = state ? state.acctId : undefined;
            resourceInputs["creator"] = state ? state.creator : undefined;
            resourceInputs["customMetadata"] = state ? state.customMetadata : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["expiryDate"] = state ? state.expiryDate : undefined;
            resourceInputs["external"] = state ? state.external : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyOps"] = state ? state.keyOps : undefined;
            resourceInputs["keySize"] = state ? state.keySize : undefined;
            resourceInputs["kid"] = state ? state.kid : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objType"] = state ? state.objType : undefined;
            resourceInputs["rotationPolicy"] = state ? state.rotationPolicy : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as GcpSobjectArgs | undefined;
            if ((!args || args.customMetadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customMetadata'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["customMetadata"] = args ? args.customMetadata : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["expiryDate"] = args ? args.expiryDate : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["keyOps"] = args ? args.keyOps : undefined;
            resourceInputs["keySize"] = args ? args.keySize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objType"] = args ? args.objType : undefined;
            resourceInputs["rotationPolicy"] = args ? args.rotationPolicy : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["acctId"] = undefined /*out*/;
            resourceInputs["creator"] = undefined /*out*/;
            resourceInputs["external"] = undefined /*out*/;
            resourceInputs["kid"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpSobject.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GcpSobject resources.
 */
export interface GcpSobjectState {
    /**
     * The account ID from Fortanix DSM.
     */
    acctId?: pulumi.Input<string>;
    /**
     * The creator of the security object from Fortanix DSM. * `user`: If the security object was created by a user, the
     * computed value will be the matching user ID. * `app`: If the security object was created by an app, the computed value
     * will be the matching app ID.
     */
    creator?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * GCP KMS key metadata information: * `gcp-key-id`: Key name within GCP KMS.
     */
    customMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The description of the security object.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the security object is enabled or disabled. Values are true/false.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The expiry date of the security object in RFC format.
     */
    expiryDate?: pulumi.Input<string>;
    /**
     * External metadata.
     */
    external?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The GCP group ID in Fortanix DSM where the key will be generated.
     */
    groupId?: pulumi.Input<string>;
    /**
     * A local security object imported to Fortanix DSM (BYOK) and copied to GCP KMS.
     */
    key?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object operations permitted. | obj_type | key_size/curve | key_ops | | -------- | -------- |-------- | |
     * `AES` | 256 | ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, DERIVEKEY, MACGENERATE, MACVERIFY, APPMANAGEABLE, EXPORT
     */
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The size of the security object.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The security object ID from Fortanix DSM.
     */
    kid?: pulumi.Input<string>;
    /**
     * Link between the local security object and the GCP KMS security object.
     */
    links?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object name.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of security object.
     */
    objType?: pulumi.Input<string>;
    /**
     * Policy to rotate a security object. Configure the parameters below: * `interval_days`: Rotate the key every given number
     * of days. * `interval_months`: Rotate the key every given number of months. * `effective_at`: Start time of the rotation
     * policy. * `rotate_copied_keys`: Enable key rotation for copied keys. * **Note:** Either `interval_days` or
     * `interval_months` should be given, but not both.
     */
    rotationPolicy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The state of the GCP KMS key. Values are Created, Deleted, Purged.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpSobject resource.
 */
export interface GcpSobjectArgs {
    /**
     * GCP KMS key metadata information: * `gcp-key-id`: Key name within GCP KMS.
     */
    customMetadata: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The description of the security object.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the security object is enabled or disabled. Values are true/false.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The expiry date of the security object in RFC format.
     */
    expiryDate?: pulumi.Input<string>;
    /**
     * The GCP group ID in Fortanix DSM where the key will be generated.
     */
    groupId: pulumi.Input<string>;
    /**
     * A local security object imported to Fortanix DSM (BYOK) and copied to GCP KMS.
     */
    key: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The security object operations permitted. | obj_type | key_size/curve | key_ops | | -------- | -------- |-------- | |
     * `AES` | 256 | ENCRYPT, DECRYPT, WRAPKEY, UNWRAPKEY, DERIVEKEY, MACGENERATE, MACVERIFY, APPMANAGEABLE, EXPORT
     */
    keyOps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The size of the security object.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The security object name.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of security object.
     */
    objType?: pulumi.Input<string>;
    /**
     * Policy to rotate a security object. Configure the parameters below: * `interval_days`: Rotate the key every given number
     * of days. * `interval_months`: Rotate the key every given number of months. * `effective_at`: Start time of the rotation
     * policy. * `rotate_copied_keys`: Enable key rotation for copied keys. * **Note:** Either `interval_days` or
     * `interval_months` should be given, but not both.
     */
    rotationPolicy?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The state of the GCP KMS key. Values are Created, Deleted, Purged.
     */
    state?: pulumi.Input<string>;
}
