// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AccCryptoPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AccCryptoPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccCryptoPolicyState, opts?: pulumi.CustomResourceOptions): AccCryptoPolicy {
        return new AccCryptoPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dsm:index/accCryptoPolicy:AccCryptoPolicy';

    /**
     * Returns true if the given object is an instance of AccCryptoPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccCryptoPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccCryptoPolicy.__pulumiType;
    }

    /**
     * The Fortanix DSM account object id.
     */
    public readonly acctId!: pulumi.Output<string>;
    /**
     * The Fortanix DSM account object quorum approval policy definition as a JSON string.
     */
    public /*out*/ readonly approvalPolicy!: pulumi.Output<string>;
    /**
     * The Fortanix DSM account object cryptographic policy definition as a JSON string.
     */
    public readonly cryptographicPolicy!: pulumi.Output<string>;

    /**
     * Create a AccCryptoPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccCryptoPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccCryptoPolicyArgs | AccCryptoPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccCryptoPolicyState | undefined;
            resourceInputs["acctId"] = state ? state.acctId : undefined;
            resourceInputs["approvalPolicy"] = state ? state.approvalPolicy : undefined;
            resourceInputs["cryptographicPolicy"] = state ? state.cryptographicPolicy : undefined;
        } else {
            const args = argsOrState as AccCryptoPolicyArgs | undefined;
            if ((!args || args.acctId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'acctId'");
            }
            if ((!args || args.cryptographicPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cryptographicPolicy'");
            }
            resourceInputs["acctId"] = args ? args.acctId : undefined;
            resourceInputs["cryptographicPolicy"] = args ? args.cryptographicPolicy : undefined;
            resourceInputs["approvalPolicy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccCryptoPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccCryptoPolicy resources.
 */
export interface AccCryptoPolicyState {
    /**
     * The Fortanix DSM account object id.
     */
    acctId?: pulumi.Input<string>;
    /**
     * The Fortanix DSM account object quorum approval policy definition as a JSON string.
     */
    approvalPolicy?: pulumi.Input<string>;
    /**
     * The Fortanix DSM account object cryptographic policy definition as a JSON string.
     */
    cryptographicPolicy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccCryptoPolicy resource.
 */
export interface AccCryptoPolicyArgs {
    /**
     * The Fortanix DSM account object id.
     */
    acctId: pulumi.Input<string>;
    /**
     * The Fortanix DSM account object cryptographic policy definition as a JSON string.
     */
    cryptographicPolicy: pulumi.Input<string>;
}
