// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Csr extends pulumi.CustomResource {
    /**
     * Get an existing Csr resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CsrState, opts?: pulumi.CustomResourceOptions): Csr {
        return new Csr(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dsm:index/csr:Csr';

    /**
     * Returns true if the given object is an instance of Csr.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Csr {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Csr.__pulumiType;
    }

    /**
     * The security object CSR Country.
     */
    public readonly c!: pulumi.Output<string | undefined>;
    /**
     * The security object CSR Common Name.
     */
    public readonly cn!: pulumi.Output<string>;
    /**
     * The security object CSR DNS Names.
     */
    public readonly dnsnames!: pulumi.Output<string[] | undefined>;
    /**
     * The security object CSR Email.
     */
    public readonly e!: pulumi.Output<string | undefined>;
    /**
     * Email value for CSR in Subject Alternative names.
     */
    public readonly emails!: pulumi.Output<string[] | undefined>;
    /**
     * The security object CSR IPs.
     */
    public readonly ips!: pulumi.Output<string[] | undefined>;
    /**
     * The security object kid.
     */
    public readonly kid!: pulumi.Output<string>;
    /**
     * The security object CSR Location.
     */
    public readonly l!: pulumi.Output<string | undefined>;
    /**
     * The security object CSR Organisation.
     */
    public readonly o!: pulumi.Output<string | undefined>;
    /**
     * The security object CSR Organisational Unit.
     */
    public readonly ou!: pulumi.Output<string | undefined>;
    /**
     * The security object CSR State.
     */
    public readonly st!: pulumi.Output<string | undefined>;
    /**
     * The security object value of Generated CSR.
     */
    public /*out*/ readonly value!: pulumi.Output<string>;

    /**
     * Create a Csr resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CsrArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CsrArgs | CsrState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CsrState | undefined;
            resourceInputs["c"] = state ? state.c : undefined;
            resourceInputs["cn"] = state ? state.cn : undefined;
            resourceInputs["dnsnames"] = state ? state.dnsnames : undefined;
            resourceInputs["e"] = state ? state.e : undefined;
            resourceInputs["emails"] = state ? state.emails : undefined;
            resourceInputs["ips"] = state ? state.ips : undefined;
            resourceInputs["kid"] = state ? state.kid : undefined;
            resourceInputs["l"] = state ? state.l : undefined;
            resourceInputs["o"] = state ? state.o : undefined;
            resourceInputs["ou"] = state ? state.ou : undefined;
            resourceInputs["st"] = state ? state.st : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as CsrArgs | undefined;
            if ((!args || args.cn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cn'");
            }
            if ((!args || args.kid === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kid'");
            }
            resourceInputs["c"] = args ? args.c : undefined;
            resourceInputs["cn"] = args ? args.cn : undefined;
            resourceInputs["dnsnames"] = args ? args.dnsnames : undefined;
            resourceInputs["e"] = args ? args.e : undefined;
            resourceInputs["emails"] = args ? args.emails : undefined;
            resourceInputs["ips"] = args ? args.ips : undefined;
            resourceInputs["kid"] = args ? args.kid : undefined;
            resourceInputs["l"] = args ? args.l : undefined;
            resourceInputs["o"] = args ? args.o : undefined;
            resourceInputs["ou"] = args ? args.ou : undefined;
            resourceInputs["st"] = args ? args.st : undefined;
            resourceInputs["value"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Csr.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Csr resources.
 */
export interface CsrState {
    /**
     * The security object CSR Country.
     */
    c?: pulumi.Input<string>;
    /**
     * The security object CSR Common Name.
     */
    cn?: pulumi.Input<string>;
    /**
     * The security object CSR DNS Names.
     */
    dnsnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The security object CSR Email.
     */
    e?: pulumi.Input<string>;
    /**
     * Email value for CSR in Subject Alternative names.
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The security object CSR IPs.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The security object kid.
     */
    kid?: pulumi.Input<string>;
    /**
     * The security object CSR Location.
     */
    l?: pulumi.Input<string>;
    /**
     * The security object CSR Organisation.
     */
    o?: pulumi.Input<string>;
    /**
     * The security object CSR Organisational Unit.
     */
    ou?: pulumi.Input<string>;
    /**
     * The security object CSR State.
     */
    st?: pulumi.Input<string>;
    /**
     * The security object value of Generated CSR.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Csr resource.
 */
export interface CsrArgs {
    /**
     * The security object CSR Country.
     */
    c?: pulumi.Input<string>;
    /**
     * The security object CSR Common Name.
     */
    cn: pulumi.Input<string>;
    /**
     * The security object CSR DNS Names.
     */
    dnsnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The security object CSR Email.
     */
    e?: pulumi.Input<string>;
    /**
     * Email value for CSR in Subject Alternative names.
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The security object CSR IPs.
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The security object kid.
     */
    kid: pulumi.Input<string>;
    /**
     * The security object CSR Location.
     */
    l?: pulumi.Input<string>;
    /**
     * The security object CSR Organisation.
     */
    o?: pulumi.Input<string>;
    /**
     * The security object CSR Organisational Unit.
     */
    ou?: pulumi.Input<string>;
    /**
     * The security object CSR State.
     */
    st?: pulumi.Input<string>;
}
