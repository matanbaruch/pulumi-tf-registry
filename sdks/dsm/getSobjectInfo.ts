// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSobjectInfo(args: GetSobjectInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetSobjectInfoResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dsm:index/getSobjectInfo:getSobjectInfo", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSobjectInfo.
 */
export interface GetSobjectInfoArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getSobjectInfo.
 */
export interface GetSobjectInfoResult {
    readonly acctId: string;
    readonly creator: {[key: string]: string};
    readonly description: string;
    readonly enabled: boolean;
    readonly export: boolean;
    readonly id: string;
    readonly keyOps: string[];
    readonly keySize: number;
    readonly kid: string;
    readonly name: string;
    readonly objType: string;
    readonly pubKey: string;
    readonly value: string;
}
export function getSobjectInfoOutput(args: GetSobjectInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSobjectInfoResult> {
    return pulumi.output(args).apply((a: any) => getSobjectInfo(a, opts))
}

/**
 * A collection of arguments for invoking getSobjectInfo.
 */
export interface GetSobjectInfoOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
