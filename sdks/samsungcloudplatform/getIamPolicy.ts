// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamPolicy(args: GetIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamPolicy:getIamPolicy", {
        "id": args.id,
        "policyId": args.policyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyArgs {
    id?: string;
    policyId: string;
}

/**
 * A collection of values returned by getIamPolicy.
 */
export interface GetIamPolicyResult {
    readonly createdBy: string;
    readonly createdByEmail: string;
    readonly createdByName: string;
    readonly createdDt: string;
    readonly description: string;
    readonly id: string;
    readonly modifiedBy: string;
    readonly modifiedByEmail: string;
    readonly modifiedByName: string;
    readonly modifiedDt: string;
    readonly policyId: string;
    readonly policyJson: string;
    readonly policyName: string;
    readonly policyPrincipalCount: number;
    readonly policySrn: string;
    readonly policyType: string;
    readonly policyVersion: string;
    readonly projectId: string;
    readonly tags: outputs.GetIamPolicyTag[];
}
export function getIamPolicyOutput(args: GetIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyOutputArgs {
    id?: pulumi.Input<string>;
    policyId: pulumi.Input<string>;
}
