// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEndpoints(args?: GetEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getEndpoints:getEndpoints", {
        "contents": args.contents,
        "createdBy": args.createdBy,
        "endpointId": args.endpointId,
        "endpointIpAddress": args.endpointIpAddress,
        "endpointName": args.endpointName,
        "endpointStates": args.endpointStates,
        "endpointType": args.endpointType,
        "id": args.id,
        "objectId": args.objectId,
        "page": args.page,
        "serviceZoneId": args.serviceZoneId,
        "size": args.size,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEndpoints.
 */
export interface GetEndpointsArgs {
    contents?: inputs.GetEndpointsContent[];
    createdBy?: string;
    endpointId?: string;
    endpointIpAddress?: string;
    endpointName?: string;
    endpointStates?: string;
    endpointType?: string;
    id?: string;
    objectId?: string;
    page?: number;
    serviceZoneId?: string;
    size?: number;
    vpcId?: string;
}

/**
 * A collection of values returned by getEndpoints.
 */
export interface GetEndpointsResult {
    readonly contents?: outputs.GetEndpointsContent[];
    readonly createdBy?: string;
    readonly endpointId?: string;
    readonly endpointIpAddress?: string;
    readonly endpointName?: string;
    readonly endpointStates?: string;
    readonly endpointType?: string;
    readonly id: string;
    readonly objectId?: string;
    readonly page?: number;
    readonly serviceZoneId?: string;
    readonly size?: number;
    readonly totalCount: number;
    readonly vpcId?: string;
}
export function getEndpointsOutput(args?: GetEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointsResult> {
    return pulumi.output(args).apply((a: any) => getEndpoints(a, opts))
}

/**
 * A collection of arguments for invoking getEndpoints.
 */
export interface GetEndpointsOutputArgs {
    contents?: pulumi.Input<pulumi.Input<inputs.GetEndpointsContentArgs>[]>;
    createdBy?: pulumi.Input<string>;
    endpointId?: pulumi.Input<string>;
    endpointIpAddress?: pulumi.Input<string>;
    endpointName?: pulumi.Input<string>;
    endpointStates?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    objectId?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    serviceZoneId?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    vpcId?: pulumi.Input<string>;
}
