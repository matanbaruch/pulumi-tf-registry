// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTransitGatewayRoutingRoutes(args?: GetTransitGatewayRoutingRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayRoutingRoutesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getTransitGatewayRoutingRoutes:getTransitGatewayRoutingRoutes", {
        "contents": args.contents,
        "id": args.id,
        "routingTableId": args.routingTableId,
        "totalCounts": args.totalCounts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransitGatewayRoutingRoutes.
 */
export interface GetTransitGatewayRoutingRoutesArgs {
    contents?: inputs.GetTransitGatewayRoutingRoutesContent[];
    id?: string;
    routingTableId?: string;
    totalCounts?: number;
}

/**
 * A collection of values returned by getTransitGatewayRoutingRoutes.
 */
export interface GetTransitGatewayRoutingRoutesResult {
    readonly contents?: outputs.GetTransitGatewayRoutingRoutesContent[];
    readonly id: string;
    readonly routingTableId?: string;
    readonly totalCounts?: number;
}
export function getTransitGatewayRoutingRoutesOutput(args?: GetTransitGatewayRoutingRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitGatewayRoutingRoutesResult> {
    return pulumi.output(args).apply((a: any) => getTransitGatewayRoutingRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getTransitGatewayRoutingRoutes.
 */
export interface GetTransitGatewayRoutingRoutesOutputArgs {
    contents?: pulumi.Input<pulumi.Input<inputs.GetTransitGatewayRoutingRoutesContentArgs>[]>;
    id?: pulumi.Input<string>;
    routingTableId?: pulumi.Input<string>;
    totalCounts?: pulumi.Input<number>;
}
