// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCustomImage(args: GetCustomImageArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getCustomImage:getCustomImage", {
        "id": args.id,
        "imageId": args.imageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomImage.
 */
export interface GetCustomImageArgs {
    id?: string;
    imageId: string;
}

/**
 * A collection of values returned by getCustomImage.
 */
export interface GetCustomImageResult {
    readonly availabilityZoneName: string;
    readonly baseImage: string;
    readonly blockId: string;
    readonly category: string;
    readonly createdBy: string;
    readonly createdDt: string;
    readonly defaultDiskSize: number;
    readonly diskSize: number;
    readonly disks: outputs.GetCustomImageDisk[];
    readonly icon: {[key: string]: string};
    readonly id: string;
    readonly imageDescription: string;
    readonly imageId: string;
    readonly imageName: string;
    readonly imageState: string;
    readonly imageType: string;
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly originImageId: string;
    readonly originImageName: string;
    readonly originVirtualServerId: string;
    readonly osType: string;
    readonly productGroupId: string;
    readonly products: outputs.GetCustomImageProduct[];
    readonly projectId: string;
    readonly properties: {[key: string]: string};
    readonly serviceZoneId: string;
}
export function getCustomImageOutput(args: GetCustomImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomImageResult> {
    return pulumi.output(args).apply((a: any) => getCustomImage(a, opts))
}

/**
 * A collection of arguments for invoking getCustomImage.
 */
export interface GetCustomImageOutputArgs {
    id?: pulumi.Input<string>;
    imageId: pulumi.Input<string>;
}
