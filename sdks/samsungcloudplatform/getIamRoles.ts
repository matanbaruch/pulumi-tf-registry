// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamRoles(args?: GetIamRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetIamRolesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamRoles:getIamRoles", {
        "filters": args.filters,
        "id": args.id,
        "modifierEmail": args.modifierEmail,
        "roleName": args.roleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamRoles.
 */
export interface GetIamRolesArgs {
    filters?: inputs.GetIamRolesFilter[];
    id?: string;
    modifierEmail?: string;
    roleName?: string;
}

/**
 * A collection of values returned by getIamRoles.
 */
export interface GetIamRolesResult {
    readonly contents: outputs.GetIamRolesContent[];
    readonly filters?: outputs.GetIamRolesFilter[];
    readonly id: string;
    readonly modifierEmail?: string;
    readonly roleName?: string;
    readonly totalCount: number;
}
export function getIamRolesOutput(args?: GetIamRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamRolesResult> {
    return pulumi.output(args).apply((a: any) => getIamRoles(a, opts))
}

/**
 * A collection of arguments for invoking getIamRoles.
 */
export interface GetIamRolesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIamRolesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    modifierEmail?: pulumi.Input<string>;
    roleName?: pulumi.Input<string>;
}
