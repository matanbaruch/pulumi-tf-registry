// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKubernetesSubnet(args: GetKubernetesSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getKubernetesSubnet:getKubernetesSubnet", {
        "id": args.id,
        "subnetId": args.subnetId,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesSubnet.
 */
export interface GetKubernetesSubnetArgs {
    id?: string;
    subnetId: string;
    vpcId: string;
}

/**
 * A collection of values returned by getKubernetesSubnet.
 */
export interface GetKubernetesSubnetResult {
    readonly id: string;
    readonly result: boolean;
    readonly subnetId: string;
    readonly vpcId: string;
}
export function getKubernetesSubnetOutput(args: GetKubernetesSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesSubnetResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesSubnet.
 */
export interface GetKubernetesSubnetOutputArgs {
    id?: pulumi.Input<string>;
    subnetId: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
