// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMysql(args: GetMysqlArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getMysql:getMysql", {
        "id": args.id,
        "mysqlClusterId": args.mysqlClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMysql.
 */
export interface GetMysqlArgs {
    id?: string;
    mysqlClusterId: string;
}

/**
 * A collection of values returned by getMysql.
 */
export interface GetMysqlResult {
    readonly backupConfigs: outputs.GetMysqlBackupConfig[];
    readonly blockId: string;
    readonly contracts: outputs.GetMysqlContract[];
    readonly createdBy: string;
    readonly createdDt: string;
    readonly databaseVersion: string;
    readonly id: string;
    readonly imageId: string;
    readonly maintenances: outputs.GetMysqlMaintenance[];
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly mysqlClusterId: string;
    readonly mysqlClusterName: string;
    readonly mysqlClusterState: string;
    readonly mysqlInitialConfigs: outputs.GetMysqlMysqlInitialConfig[];
    readonly mysqlMasterClusterId: string;
    readonly mysqlReplicaClusterIds: string[];
    readonly mysqlServerGroups: outputs.GetMysqlMysqlServerGroup[];
    readonly natIpAddress: string;
    readonly projectId: string;
    readonly securityGroupIds: string[];
    readonly serviceZoneId: string;
    readonly subnetId: string;
    readonly timezone: string;
    readonly vpcId: string;
}
export function getMysqlOutput(args: GetMysqlOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlResult> {
    return pulumi.output(args).apply((a: any) => getMysql(a, opts))
}

/**
 * A collection of arguments for invoking getMysql.
 */
export interface GetMysqlOutputArgs {
    id?: pulumi.Input<string>;
    mysqlClusterId: pulumi.Input<string>;
}
