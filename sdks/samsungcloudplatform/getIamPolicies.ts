// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamPolicies(args?: GetIamPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPoliciesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamPolicies:getIamPolicies", {
        "filters": args.filters,
        "id": args.id,
        "modifiedByEmail": args.modifiedByEmail,
        "policyName": args.policyName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPolicies.
 */
export interface GetIamPoliciesArgs {
    filters?: inputs.GetIamPoliciesFilter[];
    id?: string;
    modifiedByEmail?: string;
    policyName?: string;
}

/**
 * A collection of values returned by getIamPolicies.
 */
export interface GetIamPoliciesResult {
    readonly contents: outputs.GetIamPoliciesContent[];
    readonly filters?: outputs.GetIamPoliciesFilter[];
    readonly id: string;
    readonly modifiedByEmail?: string;
    readonly policyName?: string;
    readonly totalCount: number;
}
export function getIamPoliciesOutput(args?: GetIamPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicies.
 */
export interface GetIamPoliciesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIamPoliciesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    modifiedByEmail?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
}
