// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProduct(args: GetProductArgs, opts?: pulumi.InvokeOptions): Promise<GetProductResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getProduct:getProduct", {
        "itemState": args.itemState,
        "productId": args.productId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProduct.
 */
export interface GetProductArgs {
    itemState?: string;
    productId: string;
}

/**
 * A collection of values returned by getProduct.
 */
export interface GetProductResult {
    readonly createdBy: string;
    readonly createdDt: string;
    readonly description: string;
    readonly id: string;
    readonly itemState?: string;
    readonly items: outputs.GetProductItem[];
    readonly itemsMaps: {[key: string]: string}[];
    readonly itemsString: string;
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly name: string;
    readonly productId: string;
    readonly properties: {[key: string]: string};
    readonly rateId: string;
    readonly seq: string;
    readonly state: string;
    readonly type: string;
}
export function getProductOutput(args: GetProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductResult> {
    return pulumi.output(args).apply((a: any) => getProduct(a, opts))
}

/**
 * A collection of arguments for invoking getProduct.
 */
export interface GetProductOutputArgs {
    itemState?: pulumi.Input<string>;
    productId: pulumi.Input<string>;
}
