// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcRoutingRoutes(args: GetVpcRoutingRoutesArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcRoutingRoutesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getVpcRoutingRoutes:getVpcRoutingRoutes", {
        "contents": args.contents,
        "id": args.id,
        "routingTableId": args.routingTableId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVpcRoutingRoutes.
 */
export interface GetVpcRoutingRoutesArgs {
    contents?: inputs.GetVpcRoutingRoutesContent[];
    id?: string;
    routingTableId: string;
}

/**
 * A collection of values returned by getVpcRoutingRoutes.
 */
export interface GetVpcRoutingRoutesResult {
    readonly contents?: outputs.GetVpcRoutingRoutesContent[];
    readonly id: string;
    readonly routingTableId: string;
    readonly totalCount: number;
}
export function getVpcRoutingRoutesOutput(args: GetVpcRoutingRoutesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcRoutingRoutesResult> {
    return pulumi.output(args).apply((a: any) => getVpcRoutingRoutes(a, opts))
}

/**
 * A collection of arguments for invoking getVpcRoutingRoutes.
 */
export interface GetVpcRoutingRoutesOutputArgs {
    contents?: pulumi.Input<pulumi.Input<inputs.GetVpcRoutingRoutesContentArgs>[]>;
    id?: pulumi.Input<string>;
    routingTableId: pulumi.Input<string>;
}
