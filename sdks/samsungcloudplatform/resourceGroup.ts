// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ResourceGroup extends pulumi.CustomResource {
    /**
     * Get an existing ResourceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceGroupState, opts?: pulumi.CustomResourceOptions): ResourceGroup {
        return new ResourceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'samsungcloudplatform:index/resourceGroup:ResourceGroup';

    /**
     * Returns true if the given object is an instance of ResourceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceGroup.__pulumiType;
    }

    /**
     * The user email which created the resource group
     */
    public /*out*/ readonly createdByEmail!: pulumi.Output<string>;
    /**
     * The user id which created the resource group
     */
    public readonly createdById!: pulumi.Output<string | undefined>;
    /**
     * The user name which created the resource group
     */
    public readonly createdByName!: pulumi.Output<string | undefined>;
    /**
     * The created date of the resource group
     */
    public /*out*/ readonly createdDt!: pulumi.Output<string>;
    /**
     * The user email which modified the resource group
     */
    public /*out*/ readonly modifiedByEmail!: pulumi.Output<string>;
    /**
     * The user id which modified the resource group
     */
    public readonly modifiedById!: pulumi.Output<string | undefined>;
    /**
     * The user name which modified the resource group
     */
    public readonly modifiedByName!: pulumi.Output<string | undefined>;
    /**
     * The modified date of the resource group
     */
    public /*out*/ readonly modifiedDt!: pulumi.Output<string>;
    /**
     * Resource group name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Resource group description
     */
    public readonly resourceGroupDescription!: pulumi.Output<string>;
    /**
     * Resource group name
     */
    public /*out*/ readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Tag list
     */
    public /*out*/ readonly targetResourceTag!: pulumi.Output<outputs.ResourceGroupTargetResourceTag[]>;
    public readonly targetResourceTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource group types
     */
    public readonly targetResourceTypes!: pulumi.Output<string[]>;

    /**
     * Create a ResourceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceGroupArgs | ResourceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceGroupState | undefined;
            resourceInputs["createdByEmail"] = state ? state.createdByEmail : undefined;
            resourceInputs["createdById"] = state ? state.createdById : undefined;
            resourceInputs["createdByName"] = state ? state.createdByName : undefined;
            resourceInputs["createdDt"] = state ? state.createdDt : undefined;
            resourceInputs["modifiedByEmail"] = state ? state.modifiedByEmail : undefined;
            resourceInputs["modifiedById"] = state ? state.modifiedById : undefined;
            resourceInputs["modifiedByName"] = state ? state.modifiedByName : undefined;
            resourceInputs["modifiedDt"] = state ? state.modifiedDt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupDescription"] = state ? state.resourceGroupDescription : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["targetResourceTag"] = state ? state.targetResourceTag : undefined;
            resourceInputs["targetResourceTags"] = state ? state.targetResourceTags : undefined;
            resourceInputs["targetResourceTypes"] = state ? state.targetResourceTypes : undefined;
        } else {
            const args = argsOrState as ResourceGroupArgs | undefined;
            resourceInputs["createdById"] = args ? args.createdById : undefined;
            resourceInputs["createdByName"] = args ? args.createdByName : undefined;
            resourceInputs["modifiedById"] = args ? args.modifiedById : undefined;
            resourceInputs["modifiedByName"] = args ? args.modifiedByName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupDescription"] = args ? args.resourceGroupDescription : undefined;
            resourceInputs["targetResourceTags"] = args ? args.targetResourceTags : undefined;
            resourceInputs["targetResourceTypes"] = args ? args.targetResourceTypes : undefined;
            resourceInputs["createdByEmail"] = undefined /*out*/;
            resourceInputs["createdDt"] = undefined /*out*/;
            resourceInputs["modifiedByEmail"] = undefined /*out*/;
            resourceInputs["modifiedDt"] = undefined /*out*/;
            resourceInputs["resourceGroupName"] = undefined /*out*/;
            resourceInputs["targetResourceTag"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ResourceGroup resources.
 */
export interface ResourceGroupState {
    /**
     * The user email which created the resource group
     */
    createdByEmail?: pulumi.Input<string>;
    /**
     * The user id which created the resource group
     */
    createdById?: pulumi.Input<string>;
    /**
     * The user name which created the resource group
     */
    createdByName?: pulumi.Input<string>;
    /**
     * The created date of the resource group
     */
    createdDt?: pulumi.Input<string>;
    /**
     * The user email which modified the resource group
     */
    modifiedByEmail?: pulumi.Input<string>;
    /**
     * The user id which modified the resource group
     */
    modifiedById?: pulumi.Input<string>;
    /**
     * The user name which modified the resource group
     */
    modifiedByName?: pulumi.Input<string>;
    /**
     * The modified date of the resource group
     */
    modifiedDt?: pulumi.Input<string>;
    /**
     * Resource group name
     */
    name?: pulumi.Input<string>;
    /**
     * Resource group description
     */
    resourceGroupDescription?: pulumi.Input<string>;
    /**
     * Resource group name
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Tag list
     */
    targetResourceTag?: pulumi.Input<pulumi.Input<inputs.ResourceGroupTargetResourceTag>[]>;
    targetResourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource group types
     */
    targetResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ResourceGroup resource.
 */
export interface ResourceGroupArgs {
    /**
     * The user id which created the resource group
     */
    createdById?: pulumi.Input<string>;
    /**
     * The user name which created the resource group
     */
    createdByName?: pulumi.Input<string>;
    /**
     * The user id which modified the resource group
     */
    modifiedById?: pulumi.Input<string>;
    /**
     * The user name which modified the resource group
     */
    modifiedByName?: pulumi.Input<string>;
    /**
     * Resource group name
     */
    name?: pulumi.Input<string>;
    /**
     * Resource group description
     */
    resourceGroupDescription?: pulumi.Input<string>;
    targetResourceTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource group types
     */
    targetResourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
