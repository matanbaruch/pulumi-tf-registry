// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoScalingGroups(args?: GetAutoScalingGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoScalingGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getAutoScalingGroups:getAutoScalingGroups", {
        "asgName": args.asgName,
        "asgState": args.asgState,
        "createdBy": args.createdBy,
        "filters": args.filters,
        "id": args.id,
        "lcName": args.lcName,
        "localSubnetId": args.localSubnetId,
        "page": args.page,
        "securityGroupId": args.securityGroupId,
        "serviceId": args.serviceId,
        "serviceZoneId": args.serviceZoneId,
        "size": args.size,
        "sort": args.sort,
        "subnetId": args.subnetId,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoScalingGroups.
 */
export interface GetAutoScalingGroupsArgs {
    asgName?: string;
    asgState?: string;
    createdBy?: string;
    filters?: inputs.GetAutoScalingGroupsFilter[];
    id?: string;
    lcName?: string;
    localSubnetId?: string;
    page?: number;
    securityGroupId?: string;
    serviceId?: string;
    serviceZoneId?: string;
    size?: number;
    sort?: string;
    subnetId?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getAutoScalingGroups.
 */
export interface GetAutoScalingGroupsResult {
    readonly asgName?: string;
    readonly asgState?: string;
    readonly contents: outputs.GetAutoScalingGroupsContent[];
    readonly createdBy?: string;
    readonly filters?: outputs.GetAutoScalingGroupsFilter[];
    readonly id: string;
    readonly lcName?: string;
    readonly localSubnetId?: string;
    readonly page?: number;
    readonly securityGroupId?: string;
    readonly serviceId?: string;
    readonly serviceZoneId?: string;
    readonly size?: number;
    readonly sort?: string;
    readonly subnetId?: string;
    readonly totalCount: number;
    readonly vpcId?: string;
}
export function getAutoScalingGroupsOutput(args?: GetAutoScalingGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoScalingGroupsResult> {
    return pulumi.output(args).apply((a: any) => getAutoScalingGroups(a, opts))
}

/**
 * A collection of arguments for invoking getAutoScalingGroups.
 */
export interface GetAutoScalingGroupsOutputArgs {
    asgName?: pulumi.Input<string>;
    asgState?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetAutoScalingGroupsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    lcName?: pulumi.Input<string>;
    localSubnetId?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    securityGroupId?: pulumi.Input<string>;
    serviceId?: pulumi.Input<string>;
    serviceZoneId?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    sort?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
