// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResources(args?: GetResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getResources:getResources", {
        "createdById": args.createdById,
        "displayServiceNames": args.displayServiceNames,
        "filters": args.filters,
        "id": args.id,
        "includeDeleted": args.includeDeleted,
        "location": args.location,
        "modifiedById": args.modifiedById,
        "myCreate": args.myCreate,
        "partitions": args.partitions,
        "regions": args.regions,
        "resourceId": args.resourceId,
        "resourceName": args.resourceName,
        "resourceTypes": args.resourceTypes,
        "serviceTypes": args.serviceTypes,
        "serviceZones": args.serviceZones,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResources.
 */
export interface GetResourcesArgs {
    createdById?: string;
    displayServiceNames?: string[];
    filters?: inputs.GetResourcesFilter[];
    id?: string;
    includeDeleted?: string;
    location?: string;
    modifiedById?: string;
    myCreate?: string;
    partitions?: string[];
    regions?: string[];
    resourceId?: string;
    resourceName?: string;
    resourceTypes?: string[];
    serviceTypes?: string[];
    serviceZones?: string[];
    tags?: inputs.GetResourcesTag[];
}

/**
 * A collection of values returned by getResources.
 */
export interface GetResourcesResult {
    readonly contents: outputs.GetResourcesContent[];
    readonly createdById?: string;
    readonly displayServiceNames?: string[];
    readonly filters?: outputs.GetResourcesFilter[];
    readonly id: string;
    readonly includeDeleted: string;
    readonly location: string;
    readonly modifiedById?: string;
    readonly myCreate?: string;
    readonly partitions?: string[];
    readonly regions?: string[];
    readonly resourceId?: string;
    readonly resourceName?: string;
    readonly resourceTypes?: string[];
    readonly serviceTypes?: string[];
    readonly serviceZones?: string[];
    readonly tags?: outputs.GetResourcesTag[];
    readonly totalCount: number;
}
export function getResourcesOutput(args?: GetResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcesResult> {
    return pulumi.output(args).apply((a: any) => getResources(a, opts))
}

/**
 * A collection of arguments for invoking getResources.
 */
export interface GetResourcesOutputArgs {
    createdById?: pulumi.Input<string>;
    displayServiceNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetResourcesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    includeDeleted?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    modifiedById?: pulumi.Input<string>;
    myCreate?: pulumi.Input<string>;
    partitions?: pulumi.Input<pulumi.Input<string>[]>;
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    resourceId?: pulumi.Input<string>;
    resourceName?: pulumi.Input<string>;
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceZones?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetResourcesTagArgs>[]>;
}
