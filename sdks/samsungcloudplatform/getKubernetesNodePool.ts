// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKubernetesNodePool(args: GetKubernetesNodePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesNodePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getKubernetesNodePool:getKubernetesNodePool", {
        "id": args.id,
        "kubernetesEngineId": args.kubernetesEngineId,
        "nodePoolId": args.nodePoolId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesNodePool.
 */
export interface GetKubernetesNodePoolArgs {
    id?: string;
    kubernetesEngineId: string;
    nodePoolId: string;
}

/**
 * A collection of values returned by getKubernetesNodePool.
 */
export interface GetKubernetesNodePoolResult {
    readonly autoRecovery: boolean;
    readonly autoScale: boolean;
    readonly contractId: string;
    readonly createdBy: string;
    readonly createdDt: string;
    readonly currentNodeCount: number;
    readonly desiredNodeCount: number;
    readonly encryptEnabled: boolean;
    readonly id: string;
    readonly imageId: string;
    readonly k8sVersion: string;
    readonly kubernetesEngineId: string;
    readonly maxNodeCount: number;
    readonly minNodeCount: number;
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly nodePoolId: string;
    readonly nodePoolName: string;
    readonly nodePoolStatus: string;
    readonly productGroupId: string;
    readonly projectId: string;
    readonly scaleId: string;
    readonly serviceLevelId: string;
    readonly storageId: string;
    readonly storageSize: string;
    readonly upgradable: boolean;
}
export function getKubernetesNodePoolOutput(args: GetKubernetesNodePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesNodePoolResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesNodePool(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesNodePool.
 */
export interface GetKubernetesNodePoolOutputArgs {
    id?: pulumi.Input<string>;
    kubernetesEngineId: pulumi.Input<string>;
    nodePoolId: pulumi.Input<string>;
}
