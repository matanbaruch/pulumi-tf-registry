// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoScalingGroup(args: GetAutoScalingGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoScalingGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getAutoScalingGroup:getAutoScalingGroup", {
        "asgId": args.asgId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoScalingGroup.
 */
export interface GetAutoScalingGroupArgs {
    asgId: string;
    id?: string;
}

/**
 * A collection of values returned by getAutoScalingGroup.
 */
export interface GetAutoScalingGroupResult {
    readonly asgId: string;
    readonly asgName: string;
    readonly asgState: string;
    readonly availabilityZoneName: string;
    readonly blockId: string;
    readonly createdBy: string;
    readonly createdDt: string;
    readonly desiredServerCount: number;
    readonly desiredServerCountEditable: boolean;
    readonly dnsEnabled: boolean;
    readonly fileStorageId: string;
    readonly id: string;
    readonly isTerminating: boolean;
    readonly lcId: string;
    readonly lcName: string;
    readonly maxServerCount: number;
    readonly minServerCount: number;
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly multiAvailabilityZoneEnabled: boolean;
    readonly projectId: string;
    readonly securityGroupIds: string[];
    readonly serverNamePrefix: string;
    readonly serviceId: string;
    readonly serviceZoneId: string;
    readonly vpcInfos: outputs.GetAutoScalingGroupVpcInfo[];
}
export function getAutoScalingGroupOutput(args: GetAutoScalingGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoScalingGroupResult> {
    return pulumi.output(args).apply((a: any) => getAutoScalingGroup(a, opts))
}

/**
 * A collection of arguments for invoking getAutoScalingGroup.
 */
export interface GetAutoScalingGroupOutputArgs {
    asgId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
