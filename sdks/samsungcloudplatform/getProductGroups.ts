// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProductGroups(args?: GetProductGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetProductGroupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getProductGroups:getProductGroups", {
        "id": args.id,
        "targetProduct": args.targetProduct,
        "targetProductGroup": args.targetProductGroup,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProductGroups.
 */
export interface GetProductGroupsArgs {
    id?: string;
    targetProduct?: string;
    targetProductGroup?: string;
}

/**
 * A collection of values returned by getProductGroups.
 */
export interface GetProductGroupsResult {
    readonly contents: outputs.GetProductGroupsContent[];
    readonly id: string;
    readonly targetProduct?: string;
    readonly targetProductGroup?: string;
    readonly totalCount: number;
}
export function getProductGroupsOutput(args?: GetProductGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductGroupsResult> {
    return pulumi.output(args).apply((a: any) => getProductGroups(a, opts))
}

/**
 * A collection of arguments for invoking getProductGroups.
 */
export interface GetProductGroupsOutputArgs {
    id?: pulumi.Input<string>;
    targetProduct?: pulumi.Input<string>;
    targetProductGroup?: pulumi.Input<string>;
}
