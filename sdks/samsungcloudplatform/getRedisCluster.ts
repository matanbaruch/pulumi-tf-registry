// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRedisCluster(args: GetRedisClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetRedisClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getRedisCluster:getRedisCluster", {
        "id": args.id,
        "redisClusterId": args.redisClusterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRedisCluster.
 */
export interface GetRedisClusterArgs {
    id?: string;
    redisClusterId: string;
}

/**
 * A collection of values returned by getRedisCluster.
 */
export interface GetRedisClusterResult {
    readonly backupConfigs: outputs.GetRedisClusterBackupConfig[];
    readonly blockId: string;
    readonly contracts: outputs.GetRedisClusterContract[];
    readonly createdBy: string;
    readonly createdDt: string;
    readonly id: string;
    readonly imageId: string;
    readonly maintenances: outputs.GetRedisClusterMaintenance[];
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly projectId: string;
    readonly redisClusterId: string;
    readonly redisInitialConfigs: outputs.GetRedisClusterRedisInitialConfig[];
    readonly redisName: string;
    readonly redisServerGroups: outputs.GetRedisClusterRedisServerGroup[];
    readonly redisState: string;
    readonly securityGroupIds: string[];
    readonly serviceZoneId: string;
    readonly subnetId: string;
    readonly timezone: string;
    readonly vpcId: string;
}
export function getRedisClusterOutput(args: GetRedisClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRedisClusterResult> {
    return pulumi.output(args).apply((a: any) => getRedisCluster(a, opts))
}

/**
 * A collection of arguments for invoking getRedisCluster.
 */
export interface GetRedisClusterOutputArgs {
    id?: pulumi.Input<string>;
    redisClusterId: pulumi.Input<string>;
}
