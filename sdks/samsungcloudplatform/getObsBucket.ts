// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getObsBucket(args: GetObsBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetObsBucketResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getObsBucket:getObsBucket", {
        "id": args.id,
        "objectStorageBucketId": args.objectStorageBucketId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getObsBucket.
 */
export interface GetObsBucketArgs {
    id?: string;
    objectStorageBucketId: string;
}

/**
 * A collection of values returned by getObsBucket.
 */
export interface GetObsBucketResult {
    readonly createdBy: string;
    readonly createdDt: string;
    readonly id: string;
    readonly isMultiAvailabilityZone: boolean;
    readonly isSyncInProgress: boolean;
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly objectStorageBucketAccessControlEnabled: boolean;
    readonly objectStorageBucketAccessControlRules: outputs.GetObsBucketObjectStorageBucketAccessControlRule[];
    readonly objectStorageBucketDrEnabled: boolean;
    readonly objectStorageBucketDrType: string;
    readonly objectStorageBucketFileEncryptionAlgorithm: string;
    readonly objectStorageBucketFileEncryptionEnabled: boolean;
    readonly objectStorageBucketFileEncryptionType: string;
    readonly objectStorageBucketId: string;
    readonly objectStorageBucketName: string;
    readonly objectStorageBucketObjectUploadEnabled: boolean;
    readonly objectStorageBucketPrivateEndpointUrl: string;
    readonly objectStorageBucketPublicEndpointUrl: string;
    readonly objectStorageBucketPurpose: string;
    readonly objectStorageBucketState: string;
    readonly objectStorageBucketUsage: string;
    readonly objectStorageBucketUserPurpose: string;
    readonly objectStorageBucketVersionEnabled: boolean;
    readonly objectStorageDeviceUserId: string;
    readonly objectStorageId: string;
    readonly objectStorageName: string;
    readonly objectStorageQuotaId: string;
    readonly objectStorageQuotaName: string;
    readonly objectStorageSystemBucketEnabled: boolean;
    readonly objectStorageTenantName: string;
    readonly projectId: string;
    readonly serviceZoneId: string;
    readonly syncObjectStorageBucketId: string;
    readonly syncObjectStorageBucketName: string;
    readonly syncObjectStorageBucketServiceZoneId: string;
}
export function getObsBucketOutput(args: GetObsBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetObsBucketResult> {
    return pulumi.output(args).apply((a: any) => getObsBucket(a, opts))
}

/**
 * A collection of arguments for invoking getObsBucket.
 */
export interface GetObsBucketOutputArgs {
    id?: pulumi.Input<string>;
    objectStorageBucketId: pulumi.Input<string>;
}
