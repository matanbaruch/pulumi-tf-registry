// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLaunchConfigurations(args?: GetLaunchConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetLaunchConfigurationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getLaunchConfigurations:getLaunchConfigurations", {
        "createdBy": args.createdBy,
        "filters": args.filters,
        "id": args.id,
        "imageId": args.imageId,
        "lcName": args.lcName,
        "page": args.page,
        "serviceZoneId": args.serviceZoneId,
        "size": args.size,
        "sort": args.sort,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLaunchConfigurations.
 */
export interface GetLaunchConfigurationsArgs {
    createdBy?: string;
    filters?: inputs.GetLaunchConfigurationsFilter[];
    id?: string;
    imageId?: string;
    lcName?: string;
    page?: number;
    serviceZoneId?: string;
    size?: number;
    sort?: string;
}

/**
 * A collection of values returned by getLaunchConfigurations.
 */
export interface GetLaunchConfigurationsResult {
    readonly contents: outputs.GetLaunchConfigurationsContent[];
    readonly createdBy?: string;
    readonly filters?: outputs.GetLaunchConfigurationsFilter[];
    readonly id: string;
    readonly imageId?: string;
    readonly lcName?: string;
    readonly page?: number;
    readonly serviceZoneId?: string;
    readonly size?: number;
    readonly sort?: string;
    readonly totalCount: number;
}
export function getLaunchConfigurationsOutput(args?: GetLaunchConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLaunchConfigurationsResult> {
    return pulumi.output(args).apply((a: any) => getLaunchConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getLaunchConfigurations.
 */
export interface GetLaunchConfigurationsOutputArgs {
    createdBy?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetLaunchConfigurationsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    imageId?: pulumi.Input<string>;
    lcName?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    serviceZoneId?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    sort?: pulumi.Input<string>;
}
