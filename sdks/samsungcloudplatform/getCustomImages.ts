// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCustomImages(args: GetCustomImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomImagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getCustomImages:getCustomImages", {
        "contents": args.contents,
        "createdBy": args.createdBy,
        "id": args.id,
        "imageName": args.imageName,
        "imageState": args.imageState,
        "originImageName": args.originImageName,
        "page": args.page,
        "region": args.region,
        "service": args.service,
        "serviceGroup": args.serviceGroup,
        "size": args.size,
        "sort": args.sort,
        "totalCount": args.totalCount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomImages.
 */
export interface GetCustomImagesArgs {
    contents?: inputs.GetCustomImagesContent[];
    createdBy?: string;
    id?: string;
    imageName?: string;
    imageState?: string;
    originImageName?: string;
    page?: number;
    region: string;
    service: string;
    serviceGroup: string;
    size?: number;
    sort?: string;
    totalCount?: number;
}

/**
 * A collection of values returned by getCustomImages.
 */
export interface GetCustomImagesResult {
    readonly contents?: outputs.GetCustomImagesContent[];
    readonly createdBy?: string;
    readonly id: string;
    readonly imageName?: string;
    readonly imageState?: string;
    readonly originImageName?: string;
    readonly page?: number;
    readonly region: string;
    readonly service: string;
    readonly serviceGroup: string;
    readonly size?: number;
    readonly sort?: string;
    readonly totalCount?: number;
}
export function getCustomImagesOutput(args: GetCustomImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomImagesResult> {
    return pulumi.output(args).apply((a: any) => getCustomImages(a, opts))
}

/**
 * A collection of arguments for invoking getCustomImages.
 */
export interface GetCustomImagesOutputArgs {
    contents?: pulumi.Input<pulumi.Input<inputs.GetCustomImagesContentArgs>[]>;
    createdBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    imageName?: pulumi.Input<string>;
    imageState?: pulumi.Input<string>;
    originImageName?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    region: pulumi.Input<string>;
    service: pulumi.Input<string>;
    serviceGroup: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    sort?: pulumi.Input<string>;
    totalCount?: pulumi.Input<number>;
}
