// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAutoScalingGroupPolicies(args: GetAutoScalingGroupPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetAutoScalingGroupPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getAutoScalingGroupPolicies:getAutoScalingGroupPolicies", {
        "asgId": args.asgId,
        "filters": args.filters,
        "id": args.id,
        "metricMethod": args.metricMethod,
        "metricType": args.metricType,
        "page": args.page,
        "policyName": args.policyName,
        "scaleType": args.scaleType,
        "size": args.size,
        "sort": args.sort,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAutoScalingGroupPolicies.
 */
export interface GetAutoScalingGroupPoliciesArgs {
    asgId: string;
    filters?: inputs.GetAutoScalingGroupPoliciesFilter[];
    id?: string;
    metricMethod?: string;
    metricType?: string;
    page?: number;
    policyName?: string;
    scaleType?: string;
    size?: number;
    sort?: string;
}

/**
 * A collection of values returned by getAutoScalingGroupPolicies.
 */
export interface GetAutoScalingGroupPoliciesResult {
    readonly asgId: string;
    readonly contents: outputs.GetAutoScalingGroupPoliciesContent[];
    readonly filters?: outputs.GetAutoScalingGroupPoliciesFilter[];
    readonly id: string;
    readonly metricMethod?: string;
    readonly metricType?: string;
    readonly page?: number;
    readonly policyName?: string;
    readonly scaleType?: string;
    readonly size?: number;
    readonly sort?: string;
    readonly totalCount: number;
}
export function getAutoScalingGroupPoliciesOutput(args: GetAutoScalingGroupPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutoScalingGroupPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getAutoScalingGroupPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getAutoScalingGroupPolicies.
 */
export interface GetAutoScalingGroupPoliciesOutputArgs {
    asgId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GetAutoScalingGroupPoliciesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    metricMethod?: pulumi.Input<string>;
    metricType?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    policyName?: pulumi.Input<string>;
    scaleType?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    sort?: pulumi.Input<string>;
}
