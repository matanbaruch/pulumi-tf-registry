// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Backup extends pulumi.CustomResource {
    /**
     * Get an existing Backup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupState, opts?: pulumi.CustomResourceOptions): Backup {
        return new Backup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'samsungcloudplatform:index/backup:Backup';

    /**
     * Returns true if the given object is an instance of Backup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Backup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Backup.__pulumiType;
    }

    /**
     * Multi AZ Code
     */
    public readonly azCode!: pulumi.Output<string | undefined>;
    /**
     * Backup DR ID
     */
    public /*out*/ readonly backupDrId!: pulumi.Output<string>;
    /**
     * Backup(DR) Service Zone Id
     */
    public readonly backupDrZoneId!: pulumi.Output<string | undefined>;
    /**
     * Backup Name
     */
    public readonly backupName!: pulumi.Output<string>;
    /**
     * Backup Policy Type Category (VM, FILESYSTEM)
     */
    public readonly backupPolicyTypeCategory!: pulumi.Output<string>;
    /**
     * Backup Repository (SD_STORAGE)
     */
    public readonly backupRepository!: pulumi.Output<string>;
    /**
     * Multi AZ(DR) Code
     */
    public readonly drAzCode!: pulumi.Output<string | undefined>;
    /**
     * Incremental Backup Retention Period
     */
    public readonly incrementalRetentionPeriod!: pulumi.Output<string | undefined>;
    /**
     * Is Backup DR Deleted.
     */
    public /*out*/ readonly isBackupDrDeleted!: pulumi.Output<string>;
    /**
     * IF 'Y', Destroy DR replica together.
     */
    public readonly isBackupDrDestroyEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Backup(DR) Activation (If 'Y', Backup(DR) will be activated)
     */
    public readonly isBackupDrEnabled!: pulumi.Output<string | undefined>;
    /**
     * Backup Object ID
     */
    public readonly objectId!: pulumi.Output<string>;
    /**
     * Backup Object Type
     */
    public readonly objectType!: pulumi.Output<string>;
    /**
     * Backup Policy Type
     */
    public readonly policyType!: pulumi.Output<string>;
    /**
     * Product Names
     */
    public readonly productNames!: pulumi.Output<string[]>;
    /**
     * Full Backup Retention Period
     */
    public readonly retentionPeriod!: pulumi.Output<string | undefined>;
    /**
     * Backup Schedules
     */
    public readonly schedules!: pulumi.Output<outputs.BackupSchedule[]>;
    /**
     * Service Zone ID
     */
    public readonly serviceZoneId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Backup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupArgs | BackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupState | undefined;
            resourceInputs["azCode"] = state ? state.azCode : undefined;
            resourceInputs["backupDrId"] = state ? state.backupDrId : undefined;
            resourceInputs["backupDrZoneId"] = state ? state.backupDrZoneId : undefined;
            resourceInputs["backupName"] = state ? state.backupName : undefined;
            resourceInputs["backupPolicyTypeCategory"] = state ? state.backupPolicyTypeCategory : undefined;
            resourceInputs["backupRepository"] = state ? state.backupRepository : undefined;
            resourceInputs["drAzCode"] = state ? state.drAzCode : undefined;
            resourceInputs["incrementalRetentionPeriod"] = state ? state.incrementalRetentionPeriod : undefined;
            resourceInputs["isBackupDrDeleted"] = state ? state.isBackupDrDeleted : undefined;
            resourceInputs["isBackupDrDestroyEnabled"] = state ? state.isBackupDrDestroyEnabled : undefined;
            resourceInputs["isBackupDrEnabled"] = state ? state.isBackupDrEnabled : undefined;
            resourceInputs["objectId"] = state ? state.objectId : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["policyType"] = state ? state.policyType : undefined;
            resourceInputs["productNames"] = state ? state.productNames : undefined;
            resourceInputs["retentionPeriod"] = state ? state.retentionPeriod : undefined;
            resourceInputs["schedules"] = state ? state.schedules : undefined;
            resourceInputs["serviceZoneId"] = state ? state.serviceZoneId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as BackupArgs | undefined;
            if ((!args || args.backupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupName'");
            }
            if ((!args || args.backupPolicyTypeCategory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPolicyTypeCategory'");
            }
            if ((!args || args.backupRepository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupRepository'");
            }
            if ((!args || args.objectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectId'");
            }
            if ((!args || args.objectType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'objectType'");
            }
            if ((!args || args.policyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyType'");
            }
            if ((!args || args.productNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productNames'");
            }
            if ((!args || args.schedules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedules'");
            }
            if ((!args || args.serviceZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceZoneId'");
            }
            resourceInputs["azCode"] = args ? args.azCode : undefined;
            resourceInputs["backupDrZoneId"] = args ? args.backupDrZoneId : undefined;
            resourceInputs["backupName"] = args ? args.backupName : undefined;
            resourceInputs["backupPolicyTypeCategory"] = args ? args.backupPolicyTypeCategory : undefined;
            resourceInputs["backupRepository"] = args ? args.backupRepository : undefined;
            resourceInputs["drAzCode"] = args ? args.drAzCode : undefined;
            resourceInputs["incrementalRetentionPeriod"] = args ? args.incrementalRetentionPeriod : undefined;
            resourceInputs["isBackupDrDestroyEnabled"] = args ? args.isBackupDrDestroyEnabled : undefined;
            resourceInputs["isBackupDrEnabled"] = args ? args.isBackupDrEnabled : undefined;
            resourceInputs["objectId"] = args ? args.objectId : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["policyType"] = args ? args.policyType : undefined;
            resourceInputs["productNames"] = args ? args.productNames : undefined;
            resourceInputs["retentionPeriod"] = args ? args.retentionPeriod : undefined;
            resourceInputs["schedules"] = args ? args.schedules : undefined;
            resourceInputs["serviceZoneId"] = args ? args.serviceZoneId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["backupDrId"] = undefined /*out*/;
            resourceInputs["isBackupDrDeleted"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Backup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Backup resources.
 */
export interface BackupState {
    /**
     * Multi AZ Code
     */
    azCode?: pulumi.Input<string>;
    /**
     * Backup DR ID
     */
    backupDrId?: pulumi.Input<string>;
    /**
     * Backup(DR) Service Zone Id
     */
    backupDrZoneId?: pulumi.Input<string>;
    /**
     * Backup Name
     */
    backupName?: pulumi.Input<string>;
    /**
     * Backup Policy Type Category (VM, FILESYSTEM)
     */
    backupPolicyTypeCategory?: pulumi.Input<string>;
    /**
     * Backup Repository (SD_STORAGE)
     */
    backupRepository?: pulumi.Input<string>;
    /**
     * Multi AZ(DR) Code
     */
    drAzCode?: pulumi.Input<string>;
    /**
     * Incremental Backup Retention Period
     */
    incrementalRetentionPeriod?: pulumi.Input<string>;
    /**
     * Is Backup DR Deleted.
     */
    isBackupDrDeleted?: pulumi.Input<string>;
    /**
     * IF 'Y', Destroy DR replica together.
     */
    isBackupDrDestroyEnabled?: pulumi.Input<boolean>;
    /**
     * Backup(DR) Activation (If 'Y', Backup(DR) will be activated)
     */
    isBackupDrEnabled?: pulumi.Input<string>;
    /**
     * Backup Object ID
     */
    objectId?: pulumi.Input<string>;
    /**
     * Backup Object Type
     */
    objectType?: pulumi.Input<string>;
    /**
     * Backup Policy Type
     */
    policyType?: pulumi.Input<string>;
    /**
     * Product Names
     */
    productNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Full Backup Retention Period
     */
    retentionPeriod?: pulumi.Input<string>;
    /**
     * Backup Schedules
     */
    schedules?: pulumi.Input<pulumi.Input<inputs.BackupSchedule>[]>;
    /**
     * Service Zone ID
     */
    serviceZoneId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Backup resource.
 */
export interface BackupArgs {
    /**
     * Multi AZ Code
     */
    azCode?: pulumi.Input<string>;
    /**
     * Backup(DR) Service Zone Id
     */
    backupDrZoneId?: pulumi.Input<string>;
    /**
     * Backup Name
     */
    backupName: pulumi.Input<string>;
    /**
     * Backup Policy Type Category (VM, FILESYSTEM)
     */
    backupPolicyTypeCategory: pulumi.Input<string>;
    /**
     * Backup Repository (SD_STORAGE)
     */
    backupRepository: pulumi.Input<string>;
    /**
     * Multi AZ(DR) Code
     */
    drAzCode?: pulumi.Input<string>;
    /**
     * Incremental Backup Retention Period
     */
    incrementalRetentionPeriod?: pulumi.Input<string>;
    /**
     * IF 'Y', Destroy DR replica together.
     */
    isBackupDrDestroyEnabled?: pulumi.Input<boolean>;
    /**
     * Backup(DR) Activation (If 'Y', Backup(DR) will be activated)
     */
    isBackupDrEnabled?: pulumi.Input<string>;
    /**
     * Backup Object ID
     */
    objectId: pulumi.Input<string>;
    /**
     * Backup Object Type
     */
    objectType: pulumi.Input<string>;
    /**
     * Backup Policy Type
     */
    policyType: pulumi.Input<string>;
    /**
     * Product Names
     */
    productNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Full Backup Retention Period
     */
    retentionPeriod?: pulumi.Input<string>;
    /**
     * Backup Schedules
     */
    schedules: pulumi.Input<pulumi.Input<inputs.BackupSchedule>[]>;
    /**
     * Service Zone ID
     */
    serviceZoneId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
