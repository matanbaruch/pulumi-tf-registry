// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbServicesConnectableToAsg(args: GetLbServicesConnectableToAsgArgs, opts?: pulumi.InvokeOptions): Promise<GetLbServicesConnectableToAsgResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getLbServicesConnectableToAsg:getLbServicesConnectableToAsg", {
        "id": args.id,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbServicesConnectableToAsg.
 */
export interface GetLbServicesConnectableToAsgArgs {
    id?: string;
    vpcId: string;
}

/**
 * A collection of values returned by getLbServicesConnectableToAsg.
 */
export interface GetLbServicesConnectableToAsgResult {
    readonly contents: outputs.GetLbServicesConnectableToAsgContent[];
    readonly id: string;
    readonly totalCount: number;
    readonly vpcId: string;
}
export function getLbServicesConnectableToAsgOutput(args: GetLbServicesConnectableToAsgOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbServicesConnectableToAsgResult> {
    return pulumi.output(args).apply((a: any) => getLbServicesConnectableToAsg(a, opts))
}

/**
 * A collection of arguments for invoking getLbServicesConnectableToAsg.
 */
export interface GetLbServicesConnectableToAsgOutputArgs {
    id?: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
