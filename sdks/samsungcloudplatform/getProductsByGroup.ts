// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProductsByGroup(args: GetProductsByGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetProductsByGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getProductsByGroup:getProductsByGroup", {
        "id": args.id,
        "productGroupId": args.productGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProductsByGroup.
 */
export interface GetProductsByGroupArgs {
    id?: string;
    productGroupId: string;
}

/**
 * A collection of values returned by getProductsByGroup.
 */
export interface GetProductsByGroupResult {
    readonly id: string;
    readonly productGroupId: string;
    readonly products: outputs.GetProductsByGroupProduct[];
}
export function getProductsByGroupOutput(args: GetProductsByGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductsByGroupResult> {
    return pulumi.output(args).apply((a: any) => getProductsByGroup(a, opts))
}

/**
 * A collection of arguments for invoking getProductsByGroup.
 */
export interface GetProductsByGroupOutputArgs {
    id?: pulumi.Input<string>;
    productGroupId: pulumi.Input<string>;
}
