// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBackups(args?: GetBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getBackups:getBackups", {
        "backupName": args.backupName,
        "backupPolicyTypeCategory": args.backupPolicyTypeCategory,
        "createdBy": args.createdBy,
        "id": args.id,
        "page": args.page,
        "size": args.size,
        "sorts": args.sorts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBackups.
 */
export interface GetBackupsArgs {
    backupName?: string;
    backupPolicyTypeCategory?: string;
    createdBy?: string;
    id?: string;
    page?: number;
    size?: number;
    sorts?: string[];
}

/**
 * A collection of values returned by getBackups.
 */
export interface GetBackupsResult {
    readonly backupName?: string;
    readonly backupPolicyTypeCategory?: string;
    readonly contents: outputs.GetBackupsContent[];
    readonly createdBy?: string;
    readonly id: string;
    readonly page?: number;
    readonly size?: number;
    readonly sorts?: string[];
    readonly totalCount: number;
}
export function getBackupsOutput(args?: GetBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupsResult> {
    return pulumi.output(args).apply((a: any) => getBackups(a, opts))
}

/**
 * A collection of arguments for invoking getBackups.
 */
export interface GetBackupsOutputArgs {
    backupName?: pulumi.Input<string>;
    backupPolicyTypeCategory?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    size?: pulumi.Input<number>;
    sorts?: pulumi.Input<pulumi.Input<string>[]>;
}
