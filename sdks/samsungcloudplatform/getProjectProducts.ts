// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProjectProducts(args: GetProjectProductsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectProductsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getProjectProducts:getProjectProducts", {
        "filters": args.filters,
        "id": args.id,
        "languageCode": args.languageCode,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProjectProducts.
 */
export interface GetProjectProductsArgs {
    filters?: inputs.GetProjectProductsFilter[];
    id?: string;
    languageCode?: string;
    projectId: string;
}

/**
 * A collection of values returned by getProjectProducts.
 */
export interface GetProjectProductsResult {
    readonly contents: outputs.GetProjectProductsContent[];
    readonly filters?: outputs.GetProjectProductsFilter[];
    readonly id: string;
    readonly languageCode?: string;
    readonly projectId: string;
    readonly totalCount: number;
}
export function getProjectProductsOutput(args: GetProjectProductsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectProductsResult> {
    return pulumi.output(args).apply((a: any) => getProjectProducts(a, opts))
}

/**
 * A collection of arguments for invoking getProjectProducts.
 */
export interface GetProjectProductsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetProjectProductsFilterArgs>[]>;
    id?: pulumi.Input<string>;
    languageCode?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
