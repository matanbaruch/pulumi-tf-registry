// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamMemberGroups(args: GetIamMemberGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetIamMemberGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamMemberGroups:getIamMemberGroups", {
        "filters": args.filters,
        "groupName": args.groupName,
        "id": args.id,
        "memberId": args.memberId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamMemberGroups.
 */
export interface GetIamMemberGroupsArgs {
    filters?: inputs.GetIamMemberGroupsFilter[];
    groupName?: string;
    id?: string;
    memberId: string;
}

/**
 * A collection of values returned by getIamMemberGroups.
 */
export interface GetIamMemberGroupsResult {
    readonly contents: outputs.GetIamMemberGroupsContent[];
    readonly filters?: outputs.GetIamMemberGroupsFilter[];
    readonly groupName?: string;
    readonly id: string;
    readonly memberId: string;
    readonly totalCount: number;
}
export function getIamMemberGroupsOutput(args: GetIamMemberGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamMemberGroupsResult> {
    return pulumi.output(args).apply((a: any) => getIamMemberGroups(a, opts))
}

/**
 * A collection of arguments for invoking getIamMemberGroups.
 */
export interface GetIamMemberGroupsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIamMemberGroupsFilterArgs>[]>;
    groupName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    memberId: pulumi.Input<string>;
}
