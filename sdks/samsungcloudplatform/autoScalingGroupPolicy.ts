// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AutoScalingGroupPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AutoScalingGroupPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoScalingGroupPolicyState, opts?: pulumi.CustomResourceOptions): AutoScalingGroupPolicy {
        return new AutoScalingGroupPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'samsungcloudplatform:index/autoScalingGroupPolicy:AutoScalingGroupPolicy';

    /**
     * Returns true if the given object is an instance of AutoScalingGroupPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoScalingGroupPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoScalingGroupPolicy.__pulumiType;
    }

    /**
     * Auto-Scaling Group ID
     */
    public readonly asgId!: pulumi.Output<string>;
    /**
     * Block ID
     */
    public /*out*/ readonly blockId!: pulumi.Output<string>;
    /**
     * Comparison operator
     */
    public readonly comparisonOperator!: pulumi.Output<string>;
    /**
     * Cooldown seconds
     */
    public readonly cooldownSeconds!: pulumi.Output<number>;
    /**
     * The person who created the resource
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Creation date
     */
    public /*out*/ readonly createdDt!: pulumi.Output<string>;
    /**
     * Evaluation minutes
     */
    public readonly evaluationMinutes!: pulumi.Output<number>;
    /**
     * Metric method
     */
    public readonly metricMethod!: pulumi.Output<string>;
    /**
     * Metric type
     */
    public readonly metricType!: pulumi.Output<string>;
    /**
     * The person who modified the resource
     */
    public /*out*/ readonly modifiedBy!: pulumi.Output<string>;
    /**
     * Modification date
     */
    public /*out*/ readonly modifiedDt!: pulumi.Output<string>;
    /**
     * Policy ID
     */
    public /*out*/ readonly policyId!: pulumi.Output<string>;
    /**
     * Policy name
     */
    public readonly policyName!: pulumi.Output<string>;
    /**
     * Policy state
     */
    public /*out*/ readonly policyState!: pulumi.Output<string>;
    /**
     * Project ID
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * Scale method
     */
    public readonly scaleMethod!: pulumi.Output<string>;
    /**
     * Scale type
     */
    public readonly scaleType!: pulumi.Output<string>;
    /**
     * Scale value
     */
    public readonly scaleValue!: pulumi.Output<number>;
    /**
     * Service ID
     */
    public /*out*/ readonly serviceId!: pulumi.Output<string>;
    /**
     * Service zone ID
     */
    public /*out*/ readonly serviceZoneId!: pulumi.Output<string>;
    /**
     * Threshold
     */
    public readonly threshold!: pulumi.Output<string>;

    /**
     * Create a AutoScalingGroupPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoScalingGroupPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoScalingGroupPolicyArgs | AutoScalingGroupPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutoScalingGroupPolicyState | undefined;
            resourceInputs["asgId"] = state ? state.asgId : undefined;
            resourceInputs["blockId"] = state ? state.blockId : undefined;
            resourceInputs["comparisonOperator"] = state ? state.comparisonOperator : undefined;
            resourceInputs["cooldownSeconds"] = state ? state.cooldownSeconds : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdDt"] = state ? state.createdDt : undefined;
            resourceInputs["evaluationMinutes"] = state ? state.evaluationMinutes : undefined;
            resourceInputs["metricMethod"] = state ? state.metricMethod : undefined;
            resourceInputs["metricType"] = state ? state.metricType : undefined;
            resourceInputs["modifiedBy"] = state ? state.modifiedBy : undefined;
            resourceInputs["modifiedDt"] = state ? state.modifiedDt : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["policyName"] = state ? state.policyName : undefined;
            resourceInputs["policyState"] = state ? state.policyState : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["scaleMethod"] = state ? state.scaleMethod : undefined;
            resourceInputs["scaleType"] = state ? state.scaleType : undefined;
            resourceInputs["scaleValue"] = state ? state.scaleValue : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["serviceZoneId"] = state ? state.serviceZoneId : undefined;
            resourceInputs["threshold"] = state ? state.threshold : undefined;
        } else {
            const args = argsOrState as AutoScalingGroupPolicyArgs | undefined;
            if ((!args || args.asgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asgId'");
            }
            if ((!args || args.comparisonOperator === undefined) && !opts.urn) {
                throw new Error("Missing required property 'comparisonOperator'");
            }
            if ((!args || args.cooldownSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cooldownSeconds'");
            }
            if ((!args || args.evaluationMinutes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'evaluationMinutes'");
            }
            if ((!args || args.metricMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricMethod'");
            }
            if ((!args || args.metricType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricType'");
            }
            if ((!args || args.policyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyName'");
            }
            if ((!args || args.scaleMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scaleMethod'");
            }
            if ((!args || args.scaleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scaleType'");
            }
            if ((!args || args.scaleValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scaleValue'");
            }
            if ((!args || args.threshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'threshold'");
            }
            resourceInputs["asgId"] = args ? args.asgId : undefined;
            resourceInputs["comparisonOperator"] = args ? args.comparisonOperator : undefined;
            resourceInputs["cooldownSeconds"] = args ? args.cooldownSeconds : undefined;
            resourceInputs["evaluationMinutes"] = args ? args.evaluationMinutes : undefined;
            resourceInputs["metricMethod"] = args ? args.metricMethod : undefined;
            resourceInputs["metricType"] = args ? args.metricType : undefined;
            resourceInputs["policyName"] = args ? args.policyName : undefined;
            resourceInputs["scaleMethod"] = args ? args.scaleMethod : undefined;
            resourceInputs["scaleType"] = args ? args.scaleType : undefined;
            resourceInputs["scaleValue"] = args ? args.scaleValue : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["blockId"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdDt"] = undefined /*out*/;
            resourceInputs["modifiedBy"] = undefined /*out*/;
            resourceInputs["modifiedDt"] = undefined /*out*/;
            resourceInputs["policyId"] = undefined /*out*/;
            resourceInputs["policyState"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
            resourceInputs["serviceZoneId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutoScalingGroupPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AutoScalingGroupPolicy resources.
 */
export interface AutoScalingGroupPolicyState {
    /**
     * Auto-Scaling Group ID
     */
    asgId?: pulumi.Input<string>;
    /**
     * Block ID
     */
    blockId?: pulumi.Input<string>;
    /**
     * Comparison operator
     */
    comparisonOperator?: pulumi.Input<string>;
    /**
     * Cooldown seconds
     */
    cooldownSeconds?: pulumi.Input<number>;
    /**
     * The person who created the resource
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Creation date
     */
    createdDt?: pulumi.Input<string>;
    /**
     * Evaluation minutes
     */
    evaluationMinutes?: pulumi.Input<number>;
    /**
     * Metric method
     */
    metricMethod?: pulumi.Input<string>;
    /**
     * Metric type
     */
    metricType?: pulumi.Input<string>;
    /**
     * The person who modified the resource
     */
    modifiedBy?: pulumi.Input<string>;
    /**
     * Modification date
     */
    modifiedDt?: pulumi.Input<string>;
    /**
     * Policy ID
     */
    policyId?: pulumi.Input<string>;
    /**
     * Policy name
     */
    policyName?: pulumi.Input<string>;
    /**
     * Policy state
     */
    policyState?: pulumi.Input<string>;
    /**
     * Project ID
     */
    projectId?: pulumi.Input<string>;
    /**
     * Scale method
     */
    scaleMethod?: pulumi.Input<string>;
    /**
     * Scale type
     */
    scaleType?: pulumi.Input<string>;
    /**
     * Scale value
     */
    scaleValue?: pulumi.Input<number>;
    /**
     * Service ID
     */
    serviceId?: pulumi.Input<string>;
    /**
     * Service zone ID
     */
    serviceZoneId?: pulumi.Input<string>;
    /**
     * Threshold
     */
    threshold?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutoScalingGroupPolicy resource.
 */
export interface AutoScalingGroupPolicyArgs {
    /**
     * Auto-Scaling Group ID
     */
    asgId: pulumi.Input<string>;
    /**
     * Comparison operator
     */
    comparisonOperator: pulumi.Input<string>;
    /**
     * Cooldown seconds
     */
    cooldownSeconds: pulumi.Input<number>;
    /**
     * Evaluation minutes
     */
    evaluationMinutes: pulumi.Input<number>;
    /**
     * Metric method
     */
    metricMethod: pulumi.Input<string>;
    /**
     * Metric type
     */
    metricType: pulumi.Input<string>;
    /**
     * Policy name
     */
    policyName: pulumi.Input<string>;
    /**
     * Scale method
     */
    scaleMethod: pulumi.Input<string>;
    /**
     * Scale type
     */
    scaleType: pulumi.Input<string>;
    /**
     * Scale value
     */
    scaleValue: pulumi.Input<number>;
    /**
     * Threshold
     */
    threshold: pulumi.Input<string>;
}
