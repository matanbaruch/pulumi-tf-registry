// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIamGroup(args?: GetIamGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetIamGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamGroup:getIamGroup", {
        "groupId": args.groupId,
        "groupName": args.groupName,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamGroup.
 */
export interface GetIamGroupArgs {
    groupId?: string;
    groupName?: string;
    id?: string;
}

/**
 * A collection of values returned by getIamGroup.
 */
export interface GetIamGroupResult {
    readonly createdBy: string;
    readonly createdByEmail: string;
    readonly createdByName: string;
    readonly createdDt: string;
    readonly description: string;
    readonly groupId?: string;
    readonly groupName?: string;
    readonly groupPolicyCount: number;
    readonly groupSrn: string;
    readonly groupType: string;
    readonly groupUserCount: number;
    readonly id: string;
    readonly modifiedBy: string;
    readonly modifiedByEmail: string;
    readonly modifiedByName: string;
    readonly modifiedDt: string;
    readonly projectId: string;
}
export function getIamGroupOutput(args?: GetIamGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamGroupResult> {
    return pulumi.output(args).apply((a: any) => getIamGroup(a, opts))
}

/**
 * A collection of arguments for invoking getIamGroup.
 */
export interface GetIamGroupOutputArgs {
    groupId?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
