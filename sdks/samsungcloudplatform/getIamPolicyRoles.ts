// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamPolicyRoles(args: GetIamPolicyRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyRolesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamPolicyRoles:getIamPolicyRoles", {
        "filters": args.filters,
        "id": args.id,
        "policyId": args.policyId,
        "roleName": args.roleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPolicyRoles.
 */
export interface GetIamPolicyRolesArgs {
    filters?: inputs.GetIamPolicyRolesFilter[];
    id?: string;
    policyId: string;
    roleName?: string;
}

/**
 * A collection of values returned by getIamPolicyRoles.
 */
export interface GetIamPolicyRolesResult {
    readonly contents: outputs.GetIamPolicyRolesContent[];
    readonly filters?: outputs.GetIamPolicyRolesFilter[];
    readonly id: string;
    readonly policyId: string;
    readonly roleName?: string;
    readonly totalCount: number;
}
export function getIamPolicyRolesOutput(args: GetIamPolicyRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPolicyRolesResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicyRoles(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicyRoles.
 */
export interface GetIamPolicyRolesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIamPolicyRolesFilterArgs>[]>;
    id?: pulumi.Input<string>;
    policyId: pulumi.Input<string>;
    roleName?: pulumi.Input<string>;
}
