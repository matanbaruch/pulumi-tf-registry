// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInternetGateways(args?: GetInternetGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetInternetGatewaysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getInternetGateways:getInternetGateways", {
        "contents": args.contents,
        "createdBy": args.createdBy,
        "id": args.id,
        "internetGatewayDescription": args.internetGatewayDescription,
        "internetGatewayId": args.internetGatewayId,
        "internetGatewayName": args.internetGatewayName,
        "internetGatewayState": args.internetGatewayState,
        "page": args.page,
        "serviceZoneId": args.serviceZoneId,
        "size": args.size,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInternetGateways.
 */
export interface GetInternetGatewaysArgs {
    contents?: inputs.GetInternetGatewaysContent[];
    createdBy?: string;
    id?: string;
    internetGatewayDescription?: string;
    internetGatewayId?: string;
    internetGatewayName?: string;
    internetGatewayState?: number;
    page?: number;
    serviceZoneId?: string;
    size?: number;
    vpcId?: string;
}

/**
 * A collection of values returned by getInternetGateways.
 */
export interface GetInternetGatewaysResult {
    readonly contents?: outputs.GetInternetGatewaysContent[];
    readonly createdBy?: string;
    readonly id: string;
    readonly internetGatewayDescription?: string;
    readonly internetGatewayId?: string;
    readonly internetGatewayName?: string;
    readonly internetGatewayState?: number;
    readonly page?: number;
    readonly serviceZoneId?: string;
    readonly size?: number;
    readonly totalCount: number;
    readonly vpcId?: string;
}
export function getInternetGatewaysOutput(args?: GetInternetGatewaysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInternetGatewaysResult> {
    return pulumi.output(args).apply((a: any) => getInternetGateways(a, opts))
}

/**
 * A collection of arguments for invoking getInternetGateways.
 */
export interface GetInternetGatewaysOutputArgs {
    contents?: pulumi.Input<pulumi.Input<inputs.GetInternetGatewaysContentArgs>[]>;
    createdBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    internetGatewayDescription?: pulumi.Input<string>;
    internetGatewayId?: pulumi.Input<string>;
    internetGatewayName?: pulumi.Input<string>;
    internetGatewayState?: pulumi.Input<number>;
    page?: pulumi.Input<number>;
    serviceZoneId?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    vpcId?: pulumi.Input<string>;
}
