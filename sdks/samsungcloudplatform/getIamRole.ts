// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamRole(args: GetIamRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetIamRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamRole:getIamRole", {
        "id": args.id,
        "roleId": args.roleId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleArgs {
    id?: string;
    roleId: string;
}

/**
 * A collection of values returned by getIamRole.
 */
export interface GetIamRoleResult {
    readonly createdBy: string;
    readonly createdByEmail: string;
    readonly createdByName: string;
    readonly createdDt: string;
    readonly description: string;
    readonly id: string;
    readonly modifiedBy: string;
    readonly modifiedByEmail: string;
    readonly modifiedByName: string;
    readonly modifiedDt: string;
    readonly projectId: string;
    readonly roleId: string;
    readonly roleName: string;
    readonly rolePolicyCount: number;
    readonly roleSrn: string;
    readonly sessionTime: number;
    readonly tags: outputs.GetIamRoleTag[];
    readonly trustPrincipals: outputs.GetIamRoleTrustPrincipal[];
}
export function getIamRoleOutput(args: GetIamRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamRoleResult> {
    return pulumi.output(args).apply((a: any) => getIamRole(a, opts))
}

/**
 * A collection of arguments for invoking getIamRole.
 */
export interface GetIamRoleOutputArgs {
    id?: pulumi.Input<string>;
    roleId: pulumi.Input<string>;
}
