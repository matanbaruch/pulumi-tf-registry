// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecurityGroup(args: GetSecurityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getSecurityGroup:getSecurityGroup", {
        "id": args.id,
        "securityGroupId": args.securityGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityGroup.
 */
export interface GetSecurityGroupArgs {
    id?: string;
    securityGroupId: string;
}

/**
 * A collection of values returned by getSecurityGroup.
 */
export interface GetSecurityGroupResult {
    readonly createdBy: string;
    readonly createdDt: string;
    readonly id: string;
    readonly isLoggable: boolean;
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly projectId: string;
    readonly ruleCount: number;
    readonly scope: string;
    readonly securityGroupDescription: string;
    readonly securityGroupId: string;
    readonly securityGroupName: string;
    readonly securityGroupState: string;
    readonly vendorObjectId: string;
    readonly vpcId: string;
    readonly zoneId: string;
}
export function getSecurityGroupOutput(args: GetSecurityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityGroupResult> {
    return pulumi.output(args).apply((a: any) => getSecurityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityGroup.
 */
export interface GetSecurityGroupOutputArgs {
    id?: pulumi.Input<string>;
    securityGroupId: pulumi.Input<string>;
}
