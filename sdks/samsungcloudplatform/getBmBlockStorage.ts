// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBmBlockStorage(args: GetBmBlockStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetBmBlockStorageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getBmBlockStorage:getBmBlockStorage", {
        "id": args.id,
        "storageId": args.storageId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBmBlockStorage.
 */
export interface GetBmBlockStorageArgs {
    id?: string;
    storageId: string;
}

/**
 * A collection of values returned by getBmBlockStorage.
 */
export interface GetBmBlockStorageResult {
    readonly backupBareMetalBlockStorageId: string;
    readonly bareMetalBlockStorageName: string;
    readonly bareMetalBlockStoragePurpose: string;
    readonly bareMetalBlockStorageSize: number;
    readonly bareMetalBlockStorageState: string;
    readonly blockId: string;
    readonly createdBy: string;
    readonly createdDt: string;
    readonly drBareMetalBlockStorageId: string;
    readonly encryptionEnabled: boolean;
    readonly errorCheck: boolean;
    readonly id: string;
    readonly iscsiTargetIps: string[];
    readonly modifiedBy: string;
    readonly modifiedDt: string;
    readonly originBareMetalBlockStorages: outputs.GetBmBlockStorageOriginBareMetalBlockStorage[];
    readonly productId: string;
    readonly projectId: string;
    readonly servers: outputs.GetBmBlockStorageServer[];
    readonly serviceZoneId: string;
    readonly storageId: string;
}
export function getBmBlockStorageOutput(args: GetBmBlockStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBmBlockStorageResult> {
    return pulumi.output(args).apply((a: any) => getBmBlockStorage(a, opts))
}

/**
 * A collection of arguments for invoking getBmBlockStorage.
 */
export interface GetBmBlockStorageOutputArgs {
    id?: pulumi.Input<string>;
    storageId: pulumi.Input<string>;
}
