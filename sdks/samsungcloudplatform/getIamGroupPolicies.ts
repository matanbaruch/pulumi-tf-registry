// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamGroupPolicies(args: GetIamGroupPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetIamGroupPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getIamGroupPolicies:getIamGroupPolicies", {
        "filters": args.filters,
        "groupId": args.groupId,
        "id": args.id,
        "policyName": args.policyName,
        "policyType": args.policyType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamGroupPolicies.
 */
export interface GetIamGroupPoliciesArgs {
    filters?: inputs.GetIamGroupPoliciesFilter[];
    groupId: string;
    id?: string;
    policyName?: string;
    policyType?: string;
}

/**
 * A collection of values returned by getIamGroupPolicies.
 */
export interface GetIamGroupPoliciesResult {
    readonly contents: outputs.GetIamGroupPoliciesContent[];
    readonly filters?: outputs.GetIamGroupPoliciesFilter[];
    readonly groupId: string;
    readonly id: string;
    readonly policyName?: string;
    readonly policyType?: string;
    readonly totalCount: number;
}
export function getIamGroupPoliciesOutput(args: GetIamGroupPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamGroupPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getIamGroupPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getIamGroupPolicies.
 */
export interface GetIamGroupPoliciesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetIamGroupPoliciesFilterArgs>[]>;
    groupId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    policyName?: pulumi.Input<string>;
    policyType?: pulumi.Input<string>;
}
