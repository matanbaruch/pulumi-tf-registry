// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKubernetesKubeconfig(args: GetKubernetesKubeconfigArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesKubeconfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getKubernetesKubeconfig:getKubernetesKubeconfig", {
        "id": args.id,
        "kubeconfigType": args.kubeconfigType,
        "kubernetesEngineId": args.kubernetesEngineId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesKubeconfig.
 */
export interface GetKubernetesKubeconfigArgs {
    id?: string;
    kubeconfigType: string;
    kubernetesEngineId: string;
}

/**
 * A collection of values returned by getKubernetesKubeconfig.
 */
export interface GetKubernetesKubeconfigResult {
    readonly id: string;
    readonly kubeConfig: string;
    readonly kubeconfigType: string;
    readonly kubernetesEngineId: string;
}
export function getKubernetesKubeconfigOutput(args: GetKubernetesKubeconfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesKubeconfigResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesKubeconfig(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesKubeconfig.
 */
export interface GetKubernetesKubeconfigOutputArgs {
    id?: pulumi.Input<string>;
    kubeconfigType: pulumi.Input<string>;
    kubernetesEngineId: pulumi.Input<string>;
}
