// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IamAccessKey extends pulumi.CustomResource {
    /**
     * Get an existing IamAccessKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamAccessKeyState, opts?: pulumi.CustomResourceOptions): IamAccessKey {
        return new IamAccessKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'samsungcloudplatform:index/iamAccessKey:IamAccessKey';

    /**
     * Returns true if the given object is an instance of IamAccessKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamAccessKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamAccessKey.__pulumiType;
    }

    /**
     * Access key
     */
    public /*out*/ readonly accessKey!: pulumi.Output<string>;
    /**
     * Access key activation
     */
    public readonly accessKeyActivated!: pulumi.Output<boolean>;
    /**
     * Access key ID
     */
    public /*out*/ readonly accessKeyId!: pulumi.Output<string>;
    /**
     * Access key state
     */
    public /*out*/ readonly accessKeyState!: pulumi.Output<string>;
    /**
     * Access secret key
     */
    public /*out*/ readonly accessSecretKey!: pulumi.Output<string>;
    /**
     * Expiration time (days), set to zero to get permanent key
     */
    public readonly durationDays!: pulumi.Output<number>;
    /**
     * Expired date
     */
    public /*out*/ readonly expiredDt!: pulumi.Output<string>;
    /**
     * Project ID
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Project name
     */
    public /*out*/ readonly projectName!: pulumi.Output<string>;

    /**
     * Create a IamAccessKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamAccessKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamAccessKeyArgs | IamAccessKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamAccessKeyState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["accessKeyActivated"] = state ? state.accessKeyActivated : undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["accessKeyState"] = state ? state.accessKeyState : undefined;
            resourceInputs["accessSecretKey"] = state ? state.accessSecretKey : undefined;
            resourceInputs["durationDays"] = state ? state.durationDays : undefined;
            resourceInputs["expiredDt"] = state ? state.expiredDt : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
        } else {
            const args = argsOrState as IamAccessKeyArgs | undefined;
            if ((!args || args.durationDays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'durationDays'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["accessKeyActivated"] = args ? args.accessKeyActivated : undefined;
            resourceInputs["durationDays"] = args ? args.durationDays : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["accessKey"] = undefined /*out*/;
            resourceInputs["accessKeyId"] = undefined /*out*/;
            resourceInputs["accessKeyState"] = undefined /*out*/;
            resourceInputs["accessSecretKey"] = undefined /*out*/;
            resourceInputs["expiredDt"] = undefined /*out*/;
            resourceInputs["projectName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamAccessKey.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamAccessKey resources.
 */
export interface IamAccessKeyState {
    /**
     * Access key
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Access key activation
     */
    accessKeyActivated?: pulumi.Input<boolean>;
    /**
     * Access key ID
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * Access key state
     */
    accessKeyState?: pulumi.Input<string>;
    /**
     * Access secret key
     */
    accessSecretKey?: pulumi.Input<string>;
    /**
     * Expiration time (days), set to zero to get permanent key
     */
    durationDays?: pulumi.Input<number>;
    /**
     * Expired date
     */
    expiredDt?: pulumi.Input<string>;
    /**
     * Project ID
     */
    projectId?: pulumi.Input<string>;
    /**
     * Project name
     */
    projectName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamAccessKey resource.
 */
export interface IamAccessKeyArgs {
    /**
     * Access key activation
     */
    accessKeyActivated?: pulumi.Input<boolean>;
    /**
     * Expiration time (days), set to zero to get permanent key
     */
    durationDays: pulumi.Input<number>;
    /**
     * Project ID
     */
    projectId: pulumi.Input<string>;
}
