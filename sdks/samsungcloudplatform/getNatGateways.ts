// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNatGateways(args?: GetNatGatewaysArgs, opts?: pulumi.InvokeOptions): Promise<GetNatGatewaysResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getNatGateways:getNatGateways", {
        "contents": args.contents,
        "createdBy": args.createdBy,
        "id": args.id,
        "natGatewayId": args.natGatewayId,
        "natGatewayName": args.natGatewayName,
        "natGatewayState": args.natGatewayState,
        "page": args.page,
        "serviceZoneId": args.serviceZoneId,
        "size": args.size,
        "subnetId": args.subnetId,
        "vpcId": args.vpcId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNatGateways.
 */
export interface GetNatGatewaysArgs {
    contents?: inputs.GetNatGatewaysContent[];
    createdBy?: string;
    id?: string;
    natGatewayId?: string;
    natGatewayName?: string;
    natGatewayState?: string;
    page?: number;
    serviceZoneId?: string;
    size?: number;
    subnetId?: string;
    vpcId?: string;
}

/**
 * A collection of values returned by getNatGateways.
 */
export interface GetNatGatewaysResult {
    readonly contents?: outputs.GetNatGatewaysContent[];
    readonly createdBy?: string;
    readonly id: string;
    readonly natGatewayId?: string;
    readonly natGatewayName?: string;
    readonly natGatewayState?: string;
    readonly page?: number;
    readonly serviceZoneId?: string;
    readonly size?: number;
    readonly subnetId?: string;
    readonly totalCount: number;
    readonly vpcId?: string;
}
export function getNatGatewaysOutput(args?: GetNatGatewaysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNatGatewaysResult> {
    return pulumi.output(args).apply((a: any) => getNatGateways(a, opts))
}

/**
 * A collection of arguments for invoking getNatGateways.
 */
export interface GetNatGatewaysOutputArgs {
    contents?: pulumi.Input<pulumi.Input<inputs.GetNatGatewaysContentArgs>[]>;
    createdBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    natGatewayId?: pulumi.Input<string>;
    natGatewayName?: pulumi.Input<string>;
    natGatewayState?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    serviceZoneId?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    subnetId?: pulumi.Input<string>;
    vpcId?: pulumi.Input<string>;
}
