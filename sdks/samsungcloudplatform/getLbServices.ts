// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbServices(args: GetLbServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetLbServicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getLbServices:getLbServices", {
        "createdBy": args.createdBy,
        "id": args.id,
        "layerType": args.layerType,
        "lbServiceName": args.lbServiceName,
        "loadBalancerId": args.loadBalancerId,
        "loadBalancerName": args.loadBalancerName,
        "page": args.page,
        "protocol": args.protocol,
        "serviceIpAddress": args.serviceIpAddress,
        "size": args.size,
        "sort": args.sort,
        "statusCheck": args.statusCheck,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbServices.
 */
export interface GetLbServicesArgs {
    createdBy?: string;
    id?: string;
    layerType?: string;
    lbServiceName?: string;
    loadBalancerId: string;
    loadBalancerName?: string;
    page?: number;
    protocol?: string;
    serviceIpAddress?: string;
    size?: number;
    sort?: string;
    statusCheck?: boolean;
}

/**
 * A collection of values returned by getLbServices.
 */
export interface GetLbServicesResult {
    readonly contents: outputs.GetLbServicesContent[];
    readonly createdBy?: string;
    readonly id: string;
    readonly layerType?: string;
    readonly lbServiceName?: string;
    readonly loadBalancerId: string;
    readonly loadBalancerName?: string;
    readonly page?: number;
    readonly protocol?: string;
    readonly serviceIpAddress?: string;
    readonly size?: number;
    readonly sort?: string;
    readonly statusCheck?: boolean;
    readonly totalCount: number;
}
export function getLbServicesOutput(args: GetLbServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbServicesResult> {
    return pulumi.output(args).apply((a: any) => getLbServices(a, opts))
}

/**
 * A collection of arguments for invoking getLbServices.
 */
export interface GetLbServicesOutputArgs {
    createdBy?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    layerType?: pulumi.Input<string>;
    lbServiceName?: pulumi.Input<string>;
    loadBalancerId: pulumi.Input<string>;
    loadBalancerName?: pulumi.Input<string>;
    page?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    serviceIpAddress?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    sort?: pulumi.Input<string>;
    statusCheck?: pulumi.Input<boolean>;
}
