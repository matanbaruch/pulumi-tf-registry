// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLbServicesConnectedToAsg(args: GetLbServicesConnectedToAsgArgs, opts?: pulumi.InvokeOptions): Promise<GetLbServicesConnectedToAsgResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getLbServicesConnectedToAsg:getLbServicesConnectedToAsg", {
        "autoScalingGroupId": args.autoScalingGroupId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLbServicesConnectedToAsg.
 */
export interface GetLbServicesConnectedToAsgArgs {
    autoScalingGroupId: string;
    id?: string;
}

/**
 * A collection of values returned by getLbServicesConnectedToAsg.
 */
export interface GetLbServicesConnectedToAsgResult {
    readonly autoScalingGroupId: string;
    readonly contents: outputs.GetLbServicesConnectedToAsgContent[];
    readonly id: string;
    readonly totalCount: number;
}
export function getLbServicesConnectedToAsgOutput(args: GetLbServicesConnectedToAsgOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLbServicesConnectedToAsgResult> {
    return pulumi.output(args).apply((a: any) => getLbServicesConnectedToAsg(a, opts))
}

/**
 * A collection of arguments for invoking getLbServicesConnectedToAsg.
 */
export interface GetLbServicesConnectedToAsgOutputArgs {
    autoScalingGroupId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
