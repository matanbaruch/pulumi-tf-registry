// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TransitGatewayConnection extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitGatewayConnectionState, opts?: pulumi.CustomResourceOptions): TransitGatewayConnection {
        return new TransitGatewayConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'samsungcloudplatform:index/transitGatewayConnection:TransitGatewayConnection';

    /**
     * Returns true if the given object is an instance of TransitGatewayConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayConnection.__pulumiType;
    }

    /**
     * Approver VPC ID
     */
    public readonly approverVpcId!: pulumi.Output<string>;
    /**
     * Activate Firewall or not
     */
    public readonly firewallEnable!: pulumi.Output<boolean>;
    /**
     * Activate Firewall Logging or not
     */
    public readonly firewallLoggable!: pulumi.Output<boolean | undefined>;
    /**
     * Requester TGW ID
     */
    public readonly requesterTransitGatewayId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * TGW - VPC Connection description
     */
    public readonly transitGatewayConnectionDescription!: pulumi.Output<string | undefined>;
    /**
     * Transit Gateway Connection State
     */
    public /*out*/ readonly transitGatewayConnectionState!: pulumi.Output<string>;

    /**
     * Create a TransitGatewayConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitGatewayConnectionArgs | TransitGatewayConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitGatewayConnectionState | undefined;
            resourceInputs["approverVpcId"] = state ? state.approverVpcId : undefined;
            resourceInputs["firewallEnable"] = state ? state.firewallEnable : undefined;
            resourceInputs["firewallLoggable"] = state ? state.firewallLoggable : undefined;
            resourceInputs["requesterTransitGatewayId"] = state ? state.requesterTransitGatewayId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transitGatewayConnectionDescription"] = state ? state.transitGatewayConnectionDescription : undefined;
            resourceInputs["transitGatewayConnectionState"] = state ? state.transitGatewayConnectionState : undefined;
        } else {
            const args = argsOrState as TransitGatewayConnectionArgs | undefined;
            if ((!args || args.approverVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'approverVpcId'");
            }
            if ((!args || args.firewallEnable === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallEnable'");
            }
            if ((!args || args.requesterTransitGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requesterTransitGatewayId'");
            }
            resourceInputs["approverVpcId"] = args ? args.approverVpcId : undefined;
            resourceInputs["firewallEnable"] = args ? args.firewallEnable : undefined;
            resourceInputs["firewallLoggable"] = args ? args.firewallLoggable : undefined;
            resourceInputs["requesterTransitGatewayId"] = args ? args.requesterTransitGatewayId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitGatewayConnectionDescription"] = args ? args.transitGatewayConnectionDescription : undefined;
            resourceInputs["transitGatewayConnectionState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TransitGatewayConnection resources.
 */
export interface TransitGatewayConnectionState {
    /**
     * Approver VPC ID
     */
    approverVpcId?: pulumi.Input<string>;
    /**
     * Activate Firewall or not
     */
    firewallEnable?: pulumi.Input<boolean>;
    /**
     * Activate Firewall Logging or not
     */
    firewallLoggable?: pulumi.Input<boolean>;
    /**
     * Requester TGW ID
     */
    requesterTransitGatewayId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * TGW - VPC Connection description
     */
    transitGatewayConnectionDescription?: pulumi.Input<string>;
    /**
     * Transit Gateway Connection State
     */
    transitGatewayConnectionState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransitGatewayConnection resource.
 */
export interface TransitGatewayConnectionArgs {
    /**
     * Approver VPC ID
     */
    approverVpcId: pulumi.Input<string>;
    /**
     * Activate Firewall or not
     */
    firewallEnable: pulumi.Input<boolean>;
    /**
     * Activate Firewall Logging or not
     */
    firewallLoggable?: pulumi.Input<boolean>;
    /**
     * Requester TGW ID
     */
    requesterTransitGatewayId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * TGW - VPC Connection description
     */
    transitGatewayConnectionDescription?: pulumi.Input<string>;
}
