// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecurityGroupRule(args: GetSecurityGroupRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityGroupRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getSecurityGroupRule:getSecurityGroupRule", {
        "id": args.id,
        "ruleId": args.ruleId,
        "securityGroupId": args.securityGroupId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityGroupRule.
 */
export interface GetSecurityGroupRuleArgs {
    id?: string;
    ruleId: string;
    securityGroupId: string;
}

/**
 * A collection of values returned by getSecurityGroupRule.
 */
export interface GetSecurityGroupRuleResult {
    readonly icmpServices: string[];
    readonly id: string;
    readonly isAllService: boolean;
    readonly ruleAction: string;
    readonly ruleDescription: string;
    readonly ruleDirection: string;
    readonly ruleId: string;
    readonly ruleOwnerId: string;
    readonly ruleOwnerType: string;
    readonly ruleState: string;
    readonly securityGroupId: string;
    readonly targetNetworks: string[];
    readonly tcpServices: string[];
    readonly udpServices: string[];
    readonly vendorObjectId: string;
    readonly vendorRuleId: number;
}
export function getSecurityGroupRuleOutput(args: GetSecurityGroupRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityGroupRuleResult> {
    return pulumi.output(args).apply((a: any) => getSecurityGroupRule(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityGroupRule.
 */
export interface GetSecurityGroupRuleOutputArgs {
    id?: pulumi.Input<string>;
    ruleId: pulumi.Input<string>;
    securityGroupId: pulumi.Input<string>;
}
