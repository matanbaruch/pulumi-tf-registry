// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FileStorage extends pulumi.CustomResource {
    /**
     * Get an existing FileStorage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileStorageState, opts?: pulumi.CustomResourceOptions): FileStorage {
        return new FileStorage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'samsungcloudplatform:index/fileStorage:FileStorage';

    /**
     * Returns true if the given object is an instance of FileStorage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileStorage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileStorage.__pulumiType;
    }

    /**
     * CIFS ID
     */
    public /*out*/ readonly cifsId!: pulumi.Output<string>;
    /**
     * CIFS Password is only available for CIFS Protocol. (6 to 20 alphabet and numeric characters without following special
     * characters ($, %, {, }, [, ], ", \)
     */
    public readonly cifsPassword!: pulumi.Output<string | undefined>;
    /**
     * Snapshot schedule dayOfWeek must be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT"
     */
    public readonly dayOfWeek!: pulumi.Output<string | undefined>;
    /**
     * File Storage Disk Type (HDD, SSD, HP_SSD)
     */
    public readonly diskType!: pulumi.Output<string>;
    /**
     * File Storage Name (3 to 21 lower alphabet and numeric characters with '_' symbol are available, but it must be started
     * with lower alphabet)
     */
    public readonly fileStorageName!: pulumi.Output<string>;
    /**
     * File Storage Name with UUID (10 to 28 lower alphabet and numeric characters with '_' symbol are available, but it must
     * be started with lower alphabet)
     */
    public /*out*/ readonly fileStorageNameUuid!: pulumi.Output<string>;
    /**
     * File Storage Protocol (NFS, CIFS)
     */
    public readonly fileStorageProtocol!: pulumi.Output<string>;
    /**
     * File Unit Recovery
     */
    public readonly fileUnitRecoveryEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Snapshot schedule frequency must be one of "DAILY" or "WEEKLY"
     */
    public readonly frequency!: pulumi.Output<string | undefined>;
    /**
     * Snapshot schedule hour (0 to 23)
     */
    public readonly hour!: pulumi.Output<number | undefined>;
    /**
     * Link Objects
     */
    public readonly linkObjects!: pulumi.Output<outputs.FileStorageLinkObject[] | undefined>;
    /**
     * Multi AZ (If null, default value is false)
     */
    public readonly multiAvailabilityZone!: pulumi.Output<boolean | undefined>;
    /**
     * Product Names
     */
    public readonly productNames!: pulumi.Output<string[]>;
    /**
     * Service Zone ID
     */
    public readonly serviceZoneId!: pulumi.Output<string>;
    /**
     * Snapshot retention count
     */
    public readonly snapshotRetentionCount!: pulumi.Output<number | undefined>;
    /**
     * Snapshot schedule
     */
    public readonly snapshotSchedule!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Unlink Objects
     */
    public readonly unlinkObjects!: pulumi.Output<outputs.FileStorageUnlinkObject[] | undefined>;

    /**
     * Create a FileStorage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileStorageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileStorageArgs | FileStorageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileStorageState | undefined;
            resourceInputs["cifsId"] = state ? state.cifsId : undefined;
            resourceInputs["cifsPassword"] = state ? state.cifsPassword : undefined;
            resourceInputs["dayOfWeek"] = state ? state.dayOfWeek : undefined;
            resourceInputs["diskType"] = state ? state.diskType : undefined;
            resourceInputs["fileStorageName"] = state ? state.fileStorageName : undefined;
            resourceInputs["fileStorageNameUuid"] = state ? state.fileStorageNameUuid : undefined;
            resourceInputs["fileStorageProtocol"] = state ? state.fileStorageProtocol : undefined;
            resourceInputs["fileUnitRecoveryEnabled"] = state ? state.fileUnitRecoveryEnabled : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["hour"] = state ? state.hour : undefined;
            resourceInputs["linkObjects"] = state ? state.linkObjects : undefined;
            resourceInputs["multiAvailabilityZone"] = state ? state.multiAvailabilityZone : undefined;
            resourceInputs["productNames"] = state ? state.productNames : undefined;
            resourceInputs["serviceZoneId"] = state ? state.serviceZoneId : undefined;
            resourceInputs["snapshotRetentionCount"] = state ? state.snapshotRetentionCount : undefined;
            resourceInputs["snapshotSchedule"] = state ? state.snapshotSchedule : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["unlinkObjects"] = state ? state.unlinkObjects : undefined;
        } else {
            const args = argsOrState as FileStorageArgs | undefined;
            if ((!args || args.diskType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskType'");
            }
            if ((!args || args.fileStorageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileStorageName'");
            }
            if ((!args || args.fileStorageProtocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileStorageProtocol'");
            }
            if ((!args || args.productNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productNames'");
            }
            if ((!args || args.serviceZoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceZoneId'");
            }
            resourceInputs["cifsPassword"] = args ? args.cifsPassword : undefined;
            resourceInputs["dayOfWeek"] = args ? args.dayOfWeek : undefined;
            resourceInputs["diskType"] = args ? args.diskType : undefined;
            resourceInputs["fileStorageName"] = args ? args.fileStorageName : undefined;
            resourceInputs["fileStorageProtocol"] = args ? args.fileStorageProtocol : undefined;
            resourceInputs["fileUnitRecoveryEnabled"] = args ? args.fileUnitRecoveryEnabled : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["hour"] = args ? args.hour : undefined;
            resourceInputs["linkObjects"] = args ? args.linkObjects : undefined;
            resourceInputs["multiAvailabilityZone"] = args ? args.multiAvailabilityZone : undefined;
            resourceInputs["productNames"] = args ? args.productNames : undefined;
            resourceInputs["serviceZoneId"] = args ? args.serviceZoneId : undefined;
            resourceInputs["snapshotRetentionCount"] = args ? args.snapshotRetentionCount : undefined;
            resourceInputs["snapshotSchedule"] = args ? args.snapshotSchedule : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["unlinkObjects"] = args ? args.unlinkObjects : undefined;
            resourceInputs["cifsId"] = undefined /*out*/;
            resourceInputs["fileStorageNameUuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileStorage.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FileStorage resources.
 */
export interface FileStorageState {
    /**
     * CIFS ID
     */
    cifsId?: pulumi.Input<string>;
    /**
     * CIFS Password is only available for CIFS Protocol. (6 to 20 alphabet and numeric characters without following special
     * characters ($, %, {, }, [, ], ", \)
     */
    cifsPassword?: pulumi.Input<string>;
    /**
     * Snapshot schedule dayOfWeek must be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT"
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * File Storage Disk Type (HDD, SSD, HP_SSD)
     */
    diskType?: pulumi.Input<string>;
    /**
     * File Storage Name (3 to 21 lower alphabet and numeric characters with '_' symbol are available, but it must be started
     * with lower alphabet)
     */
    fileStorageName?: pulumi.Input<string>;
    /**
     * File Storage Name with UUID (10 to 28 lower alphabet and numeric characters with '_' symbol are available, but it must
     * be started with lower alphabet)
     */
    fileStorageNameUuid?: pulumi.Input<string>;
    /**
     * File Storage Protocol (NFS, CIFS)
     */
    fileStorageProtocol?: pulumi.Input<string>;
    /**
     * File Unit Recovery
     */
    fileUnitRecoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Snapshot schedule frequency must be one of "DAILY" or "WEEKLY"
     */
    frequency?: pulumi.Input<string>;
    /**
     * Snapshot schedule hour (0 to 23)
     */
    hour?: pulumi.Input<number>;
    /**
     * Link Objects
     */
    linkObjects?: pulumi.Input<pulumi.Input<inputs.FileStorageLinkObject>[]>;
    /**
     * Multi AZ (If null, default value is false)
     */
    multiAvailabilityZone?: pulumi.Input<boolean>;
    /**
     * Product Names
     */
    productNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Service Zone ID
     */
    serviceZoneId?: pulumi.Input<string>;
    /**
     * Snapshot retention count
     */
    snapshotRetentionCount?: pulumi.Input<number>;
    /**
     * Snapshot schedule
     */
    snapshotSchedule?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Unlink Objects
     */
    unlinkObjects?: pulumi.Input<pulumi.Input<inputs.FileStorageUnlinkObject>[]>;
}

/**
 * The set of arguments for constructing a FileStorage resource.
 */
export interface FileStorageArgs {
    /**
     * CIFS Password is only available for CIFS Protocol. (6 to 20 alphabet and numeric characters without following special
     * characters ($, %, {, }, [, ], ", \)
     */
    cifsPassword?: pulumi.Input<string>;
    /**
     * Snapshot schedule dayOfWeek must be one of "SUN", "MON", "TUE", "WED", "THU", "FRI" or "SAT"
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * File Storage Disk Type (HDD, SSD, HP_SSD)
     */
    diskType: pulumi.Input<string>;
    /**
     * File Storage Name (3 to 21 lower alphabet and numeric characters with '_' symbol are available, but it must be started
     * with lower alphabet)
     */
    fileStorageName: pulumi.Input<string>;
    /**
     * File Storage Protocol (NFS, CIFS)
     */
    fileStorageProtocol: pulumi.Input<string>;
    /**
     * File Unit Recovery
     */
    fileUnitRecoveryEnabled?: pulumi.Input<boolean>;
    /**
     * Snapshot schedule frequency must be one of "DAILY" or "WEEKLY"
     */
    frequency?: pulumi.Input<string>;
    /**
     * Snapshot schedule hour (0 to 23)
     */
    hour?: pulumi.Input<number>;
    /**
     * Link Objects
     */
    linkObjects?: pulumi.Input<pulumi.Input<inputs.FileStorageLinkObject>[]>;
    /**
     * Multi AZ (If null, default value is false)
     */
    multiAvailabilityZone?: pulumi.Input<boolean>;
    /**
     * Product Names
     */
    productNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Service Zone ID
     */
    serviceZoneId: pulumi.Input<string>;
    /**
     * Snapshot retention count
     */
    snapshotRetentionCount?: pulumi.Input<number>;
    /**
     * Snapshot schedule
     */
    snapshotSchedule?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Unlink Objects
     */
    unlinkObjects?: pulumi.Input<pulumi.Input<inputs.FileStorageUnlinkObject>[]>;
}
