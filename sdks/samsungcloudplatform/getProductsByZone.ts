// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProductsByZone(args: GetProductsByZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetProductsByZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("samsungcloudplatform:index/getProductsByZone:getProductsByZone", {
        "id": args.id,
        "productGroupId": args.productGroupId,
        "productType": args.productType,
        "serviceZoneId": args.serviceZoneId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProductsByZone.
 */
export interface GetProductsByZoneArgs {
    id?: string;
    productGroupId?: string;
    productType?: string;
    serviceZoneId: string;
}

/**
 * A collection of values returned by getProductsByZone.
 */
export interface GetProductsByZoneResult {
    readonly contents: outputs.GetProductsByZoneContent[];
    readonly id: string;
    readonly productGroupId?: string;
    readonly productType?: string;
    readonly serviceZoneId: string;
    readonly totalCount: number;
}
export function getProductsByZoneOutput(args: GetProductsByZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProductsByZoneResult> {
    return pulumi.output(args).apply((a: any) => getProductsByZone(a, opts))
}

/**
 * A collection of arguments for invoking getProductsByZone.
 */
export interface GetProductsByZoneOutputArgs {
    id?: pulumi.Input<string>;
    productGroupId?: pulumi.Input<string>;
    productType?: pulumi.Input<string>;
    serviceZoneId: pulumi.Input<string>;
}
