// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getL3outHsrpInterfaceGroup(args: GetL3outHsrpInterfaceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetL3outHsrpInterfaceGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getL3outHsrpInterfaceGroup:getL3outHsrpInterfaceGroup", {
        "annotation": args.annotation,
        "configIssues": args.configIssues,
        "description": args.description,
        "groupAf": args.groupAf,
        "groupId": args.groupId,
        "groupName": args.groupName,
        "id": args.id,
        "ip": args.ip,
        "ipObtainMode": args.ipObtainMode,
        "l3outHsrpInterfaceProfileDn": args.l3outHsrpInterfaceProfileDn,
        "mac": args.mac,
        "name": args.name,
        "nameAlias": args.nameAlias,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL3outHsrpInterfaceGroup.
 */
export interface GetL3outHsrpInterfaceGroupArgs {
    annotation?: string;
    configIssues?: string;
    description?: string;
    groupAf?: string;
    groupId?: string;
    groupName?: string;
    id?: string;
    ip?: string;
    ipObtainMode?: string;
    l3outHsrpInterfaceProfileDn: string;
    mac?: string;
    name: string;
    nameAlias?: string;
}

/**
 * A collection of values returned by getL3outHsrpInterfaceGroup.
 */
export interface GetL3outHsrpInterfaceGroupResult {
    readonly annotation: string;
    readonly configIssues: string;
    readonly description: string;
    readonly groupAf: string;
    readonly groupId: string;
    readonly groupName: string;
    readonly id: string;
    readonly ip: string;
    readonly ipObtainMode: string;
    readonly l3outHsrpInterfaceProfileDn: string;
    readonly mac: string;
    readonly name: string;
    readonly nameAlias: string;
}
export function getL3outHsrpInterfaceGroupOutput(args: GetL3outHsrpInterfaceGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL3outHsrpInterfaceGroupResult> {
    return pulumi.output(args).apply((a: any) => getL3outHsrpInterfaceGroup(a, opts))
}

/**
 * A collection of arguments for invoking getL3outHsrpInterfaceGroup.
 */
export interface GetL3outHsrpInterfaceGroupOutputArgs {
    annotation?: pulumi.Input<string>;
    configIssues?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    groupAf?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    groupName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ipObtainMode?: pulumi.Input<string>;
    l3outHsrpInterfaceProfileDn: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
}
