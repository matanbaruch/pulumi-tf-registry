// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEpgToStaticPath(args: GetEpgToStaticPathArgs, opts?: pulumi.InvokeOptions): Promise<GetEpgToStaticPathResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getEpgToStaticPath:getEpgToStaticPath", {
        "annotation": args.annotation,
        "applicationEpgDn": args.applicationEpgDn,
        "description": args.description,
        "encap": args.encap,
        "id": args.id,
        "instrImedcy": args.instrImedcy,
        "mode": args.mode,
        "primaryEncap": args.primaryEncap,
        "tdn": args.tdn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEpgToStaticPath.
 */
export interface GetEpgToStaticPathArgs {
    annotation?: string;
    applicationEpgDn: string;
    description?: string;
    encap?: string;
    id?: string;
    instrImedcy?: string;
    mode?: string;
    primaryEncap?: string;
    tdn: string;
}

/**
 * A collection of values returned by getEpgToStaticPath.
 */
export interface GetEpgToStaticPathResult {
    readonly annotation: string;
    readonly applicationEpgDn: string;
    readonly description: string;
    readonly encap: string;
    readonly id: string;
    readonly instrImedcy: string;
    readonly mode: string;
    readonly primaryEncap: string;
    readonly tdn: string;
}
export function getEpgToStaticPathOutput(args: GetEpgToStaticPathOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEpgToStaticPathResult> {
    return pulumi.output(args).apply((a: any) => getEpgToStaticPath(a, opts))
}

/**
 * A collection of arguments for invoking getEpgToStaticPath.
 */
export interface GetEpgToStaticPathOutputArgs {
    annotation?: pulumi.Input<string>;
    applicationEpgDn: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    encap?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instrImedcy?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    primaryEncap?: pulumi.Input<string>;
    tdn: pulumi.Input<string>;
}
