// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudServiceEpg extends pulumi.CustomResource {
    /**
     * Get an existing CloudServiceEpg resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudServiceEpgState, opts?: pulumi.CustomResourceOptions): CloudServiceEpg {
        return new CloudServiceEpg(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/cloudServiceEpg:CloudServiceEpg';

    /**
     * Returns true if the given object is an instance of CloudServiceEpg.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudServiceEpg {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudServiceEpg.__pulumiType;
    }

    public readonly accessType!: pulumi.Output<string>;
    public readonly annotation!: pulumi.Output<string>;
    public readonly azurePrivateEndpoint!: pulumi.Output<string>;
    public readonly cloudApplicationContainerDn!: pulumi.Output<string>;
    public readonly cloudServiceEpgType!: pulumi.Output<string>;
    public readonly customServiceType!: pulumi.Output<string>;
    public readonly deploymentType!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly floodOnEncap!: pulumi.Output<string>;
    public readonly labelMatchCriteria!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly preferredGroupMember!: pulumi.Output<string>;
    public readonly prio!: pulumi.Output<string>;
    /**
     * Create relation to fv:Ctx
     */
    public readonly relationCloudRsCloudEpgCtx!: pulumi.Output<string>;
    /**
     * Create relation to vzBrCP
     */
    public readonly relationFvRsCons!: pulumi.Output<outputs.CloudServiceEpgRelationFvRsCon[] | undefined>;
    /**
     * Create relation to vzCPIf
     */
    public readonly relationFvRsConsIfs!: pulumi.Output<outputs.CloudServiceEpgRelationFvRsConsIf[] | undefined>;
    /**
     * Create relation to qos:CustomPol
     */
    public readonly relationFvRsCustQosPol!: pulumi.Output<string>;
    /**
     * Create relation to vz:GraphCont
     */
    public readonly relationFvRsGraphDeves!: pulumi.Output<string[]>;
    /**
     * Create relation to vz:BrCP
     */
    public readonly relationFvRsIntraEpgs!: pulumi.Output<string[]>;
    /**
     * Create relation to vz:Taboo
     */
    public readonly relationFvRsProtBies!: pulumi.Output<string[]>;
    /**
     * Create relation to vz:CtrctEPgCont
     */
    public readonly relationFvRsProvDeves!: pulumi.Output<string[]>;
    /**
     * Create relation to vzBrCP
     */
    public readonly relationFvRsProvs!: pulumi.Output<outputs.CloudServiceEpgRelationFvRsProv[] | undefined>;
    /**
     * Create relation to fv:EPg
     */
    public readonly relationFvRsSecInheriteds!: pulumi.Output<string[]>;

    /**
     * Create a CloudServiceEpg resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudServiceEpgArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudServiceEpgArgs | CloudServiceEpgState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudServiceEpgState | undefined;
            resourceInputs["accessType"] = state ? state.accessType : undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["azurePrivateEndpoint"] = state ? state.azurePrivateEndpoint : undefined;
            resourceInputs["cloudApplicationContainerDn"] = state ? state.cloudApplicationContainerDn : undefined;
            resourceInputs["cloudServiceEpgType"] = state ? state.cloudServiceEpgType : undefined;
            resourceInputs["customServiceType"] = state ? state.customServiceType : undefined;
            resourceInputs["deploymentType"] = state ? state.deploymentType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["floodOnEncap"] = state ? state.floodOnEncap : undefined;
            resourceInputs["labelMatchCriteria"] = state ? state.labelMatchCriteria : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["preferredGroupMember"] = state ? state.preferredGroupMember : undefined;
            resourceInputs["prio"] = state ? state.prio : undefined;
            resourceInputs["relationCloudRsCloudEpgCtx"] = state ? state.relationCloudRsCloudEpgCtx : undefined;
            resourceInputs["relationFvRsCons"] = state ? state.relationFvRsCons : undefined;
            resourceInputs["relationFvRsConsIfs"] = state ? state.relationFvRsConsIfs : undefined;
            resourceInputs["relationFvRsCustQosPol"] = state ? state.relationFvRsCustQosPol : undefined;
            resourceInputs["relationFvRsGraphDeves"] = state ? state.relationFvRsGraphDeves : undefined;
            resourceInputs["relationFvRsIntraEpgs"] = state ? state.relationFvRsIntraEpgs : undefined;
            resourceInputs["relationFvRsProtBies"] = state ? state.relationFvRsProtBies : undefined;
            resourceInputs["relationFvRsProvDeves"] = state ? state.relationFvRsProvDeves : undefined;
            resourceInputs["relationFvRsProvs"] = state ? state.relationFvRsProvs : undefined;
            resourceInputs["relationFvRsSecInheriteds"] = state ? state.relationFvRsSecInheriteds : undefined;
        } else {
            const args = argsOrState as CloudServiceEpgArgs | undefined;
            if ((!args || args.cloudApplicationContainerDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudApplicationContainerDn'");
            }
            resourceInputs["accessType"] = args ? args.accessType : undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["azurePrivateEndpoint"] = args ? args.azurePrivateEndpoint : undefined;
            resourceInputs["cloudApplicationContainerDn"] = args ? args.cloudApplicationContainerDn : undefined;
            resourceInputs["cloudServiceEpgType"] = args ? args.cloudServiceEpgType : undefined;
            resourceInputs["customServiceType"] = args ? args.customServiceType : undefined;
            resourceInputs["deploymentType"] = args ? args.deploymentType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["floodOnEncap"] = args ? args.floodOnEncap : undefined;
            resourceInputs["labelMatchCriteria"] = args ? args.labelMatchCriteria : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["preferredGroupMember"] = args ? args.preferredGroupMember : undefined;
            resourceInputs["prio"] = args ? args.prio : undefined;
            resourceInputs["relationCloudRsCloudEpgCtx"] = args ? args.relationCloudRsCloudEpgCtx : undefined;
            resourceInputs["relationFvRsCons"] = args ? args.relationFvRsCons : undefined;
            resourceInputs["relationFvRsConsIfs"] = args ? args.relationFvRsConsIfs : undefined;
            resourceInputs["relationFvRsCustQosPol"] = args ? args.relationFvRsCustQosPol : undefined;
            resourceInputs["relationFvRsGraphDeves"] = args ? args.relationFvRsGraphDeves : undefined;
            resourceInputs["relationFvRsIntraEpgs"] = args ? args.relationFvRsIntraEpgs : undefined;
            resourceInputs["relationFvRsProtBies"] = args ? args.relationFvRsProtBies : undefined;
            resourceInputs["relationFvRsProvDeves"] = args ? args.relationFvRsProvDeves : undefined;
            resourceInputs["relationFvRsProvs"] = args ? args.relationFvRsProvs : undefined;
            resourceInputs["relationFvRsSecInheriteds"] = args ? args.relationFvRsSecInheriteds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudServiceEpg.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudServiceEpg resources.
 */
export interface CloudServiceEpgState {
    accessType?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    azurePrivateEndpoint?: pulumi.Input<string>;
    cloudApplicationContainerDn?: pulumi.Input<string>;
    cloudServiceEpgType?: pulumi.Input<string>;
    customServiceType?: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    floodOnEncap?: pulumi.Input<string>;
    labelMatchCriteria?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    preferredGroupMember?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    /**
     * Create relation to fv:Ctx
     */
    relationCloudRsCloudEpgCtx?: pulumi.Input<string>;
    /**
     * Create relation to vzBrCP
     */
    relationFvRsCons?: pulumi.Input<pulumi.Input<inputs.CloudServiceEpgRelationFvRsCon>[]>;
    /**
     * Create relation to vzCPIf
     */
    relationFvRsConsIfs?: pulumi.Input<pulumi.Input<inputs.CloudServiceEpgRelationFvRsConsIf>[]>;
    /**
     * Create relation to qos:CustomPol
     */
    relationFvRsCustQosPol?: pulumi.Input<string>;
    /**
     * Create relation to vz:GraphCont
     */
    relationFvRsGraphDeves?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vz:BrCP
     */
    relationFvRsIntraEpgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vz:Taboo
     */
    relationFvRsProtBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vz:CtrctEPgCont
     */
    relationFvRsProvDeves?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vzBrCP
     */
    relationFvRsProvs?: pulumi.Input<pulumi.Input<inputs.CloudServiceEpgRelationFvRsProv>[]>;
    /**
     * Create relation to fv:EPg
     */
    relationFvRsSecInheriteds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a CloudServiceEpg resource.
 */
export interface CloudServiceEpgArgs {
    accessType?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    azurePrivateEndpoint?: pulumi.Input<string>;
    cloudApplicationContainerDn: pulumi.Input<string>;
    cloudServiceEpgType?: pulumi.Input<string>;
    customServiceType?: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    floodOnEncap?: pulumi.Input<string>;
    labelMatchCriteria?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    preferredGroupMember?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    /**
     * Create relation to fv:Ctx
     */
    relationCloudRsCloudEpgCtx?: pulumi.Input<string>;
    /**
     * Create relation to vzBrCP
     */
    relationFvRsCons?: pulumi.Input<pulumi.Input<inputs.CloudServiceEpgRelationFvRsCon>[]>;
    /**
     * Create relation to vzCPIf
     */
    relationFvRsConsIfs?: pulumi.Input<pulumi.Input<inputs.CloudServiceEpgRelationFvRsConsIf>[]>;
    /**
     * Create relation to qos:CustomPol
     */
    relationFvRsCustQosPol?: pulumi.Input<string>;
    /**
     * Create relation to vz:GraphCont
     */
    relationFvRsGraphDeves?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vz:BrCP
     */
    relationFvRsIntraEpgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vz:Taboo
     */
    relationFvRsProtBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vz:CtrctEPgCont
     */
    relationFvRsProvDeves?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Create relation to vzBrCP
     */
    relationFvRsProvs?: pulumi.Input<pulumi.Input<inputs.CloudServiceEpgRelationFvRsProv>[]>;
    /**
     * Create relation to fv:EPg
     */
    relationFvRsSecInheriteds?: pulumi.Input<pulumi.Input<string>[]>;
}
