// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getL3ExtSubnet(args: GetL3ExtSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetL3ExtSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getL3ExtSubnet:getL3ExtSubnet", {
        "aggregate": args.aggregate,
        "annotation": args.annotation,
        "description": args.description,
        "externalNetworkInstanceProfileDn": args.externalNetworkInstanceProfileDn,
        "id": args.id,
        "ip": args.ip,
        "nameAlias": args.nameAlias,
        "relationL3extRsSubnetToProfiles": args.relationL3extRsSubnetToProfiles,
        "relationL3extRsSubnetToRtSumm": args.relationL3extRsSubnetToRtSumm,
        "scopes": args.scopes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL3ExtSubnet.
 */
export interface GetL3ExtSubnetArgs {
    aggregate?: string;
    annotation?: string;
    description?: string;
    externalNetworkInstanceProfileDn: string;
    id?: string;
    ip: string;
    nameAlias?: string;
    relationL3extRsSubnetToProfiles?: inputs.GetL3ExtSubnetRelationL3extRsSubnetToProfile[];
    relationL3extRsSubnetToRtSumm?: string;
    scopes?: string[];
}

/**
 * A collection of values returned by getL3ExtSubnet.
 */
export interface GetL3ExtSubnetResult {
    readonly aggregate: string;
    readonly annotation: string;
    readonly description: string;
    readonly externalNetworkInstanceProfileDn: string;
    readonly id: string;
    readonly ip: string;
    readonly nameAlias: string;
    readonly relationL3extRsSubnetToProfiles?: outputs.GetL3ExtSubnetRelationL3extRsSubnetToProfile[];
    readonly relationL3extRsSubnetToRtSumm: string;
    readonly scopes: string[];
}
export function getL3ExtSubnetOutput(args: GetL3ExtSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL3ExtSubnetResult> {
    return pulumi.output(args).apply((a: any) => getL3ExtSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getL3ExtSubnet.
 */
export interface GetL3ExtSubnetOutputArgs {
    aggregate?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    externalNetworkInstanceProfileDn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    relationL3extRsSubnetToProfiles?: pulumi.Input<pulumi.Input<inputs.GetL3ExtSubnetRelationL3extRsSubnetToProfileArgs>[]>;
    relationL3extRsSubnetToRtSumm?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}
