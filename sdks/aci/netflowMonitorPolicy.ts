// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetflowMonitorPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NetflowMonitorPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetflowMonitorPolicyState, opts?: pulumi.CustomResourceOptions): NetflowMonitorPolicy {
        return new NetflowMonitorPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/netflowMonitorPolicy:NetflowMonitorPolicy';

    /**
     * Returns true if the given object is an instance of NetflowMonitorPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetflowMonitorPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetflowMonitorPolicy.__pulumiType;
    }

    /**
     * The annotation of the Netflow Monitor Policy object.
     */
    public readonly annotation!: pulumi.Output<string>;
    public readonly annotations!: pulumi.Output<outputs.NetflowMonitorPolicyAnnotation[]>;
    /**
     * The description of the Netflow Monitor Policy object.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the Netflow Monitor Policy object.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name alias of the Netflow Monitor Policy object.
     */
    public readonly nameAlias!: pulumi.Output<string>;
    /**
     * The key for enabling clients to own their data for entity correlation.
     */
    public readonly ownerKey!: pulumi.Output<string>;
    /**
     * A tag for enabling clients to add their own data. For example, to indicate who created this object.
     */
    public readonly ownerTag!: pulumi.Output<string>;
    /**
     * The distinguished name (DN) of the parent object.
     */
    public readonly parentDn!: pulumi.Output<string>;
    public readonly relationToNetflowExporters!: pulumi.Output<outputs.NetflowMonitorPolicyRelationToNetflowExporter[]>;
    public readonly relationToNetflowRecords!: pulumi.Output<outputs.NetflowMonitorPolicyRelationToNetflowRecord[]>;
    public readonly tags!: pulumi.Output<outputs.NetflowMonitorPolicyTag[]>;

    /**
     * Create a NetflowMonitorPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetflowMonitorPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetflowMonitorPolicyArgs | NetflowMonitorPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetflowMonitorPolicyState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["ownerKey"] = state ? state.ownerKey : undefined;
            resourceInputs["ownerTag"] = state ? state.ownerTag : undefined;
            resourceInputs["parentDn"] = state ? state.parentDn : undefined;
            resourceInputs["relationToNetflowExporters"] = state ? state.relationToNetflowExporters : undefined;
            resourceInputs["relationToNetflowRecords"] = state ? state.relationToNetflowRecords : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as NetflowMonitorPolicyArgs | undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["ownerKey"] = args ? args.ownerKey : undefined;
            resourceInputs["ownerTag"] = args ? args.ownerTag : undefined;
            resourceInputs["parentDn"] = args ? args.parentDn : undefined;
            resourceInputs["relationToNetflowExporters"] = args ? args.relationToNetflowExporters : undefined;
            resourceInputs["relationToNetflowRecords"] = args ? args.relationToNetflowRecords : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetflowMonitorPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetflowMonitorPolicy resources.
 */
export interface NetflowMonitorPolicyState {
    /**
     * The annotation of the Netflow Monitor Policy object.
     */
    annotation?: pulumi.Input<string>;
    annotations?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyAnnotation>[]>;
    /**
     * The description of the Netflow Monitor Policy object.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Netflow Monitor Policy object.
     */
    name?: pulumi.Input<string>;
    /**
     * The name alias of the Netflow Monitor Policy object.
     */
    nameAlias?: pulumi.Input<string>;
    /**
     * The key for enabling clients to own their data for entity correlation.
     */
    ownerKey?: pulumi.Input<string>;
    /**
     * A tag for enabling clients to add their own data. For example, to indicate who created this object.
     */
    ownerTag?: pulumi.Input<string>;
    /**
     * The distinguished name (DN) of the parent object.
     */
    parentDn?: pulumi.Input<string>;
    relationToNetflowExporters?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyRelationToNetflowExporter>[]>;
    relationToNetflowRecords?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyRelationToNetflowRecord>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyTag>[]>;
}

/**
 * The set of arguments for constructing a NetflowMonitorPolicy resource.
 */
export interface NetflowMonitorPolicyArgs {
    /**
     * The annotation of the Netflow Monitor Policy object.
     */
    annotation?: pulumi.Input<string>;
    annotations?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyAnnotation>[]>;
    /**
     * The description of the Netflow Monitor Policy object.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Netflow Monitor Policy object.
     */
    name?: pulumi.Input<string>;
    /**
     * The name alias of the Netflow Monitor Policy object.
     */
    nameAlias?: pulumi.Input<string>;
    /**
     * The key for enabling clients to own their data for entity correlation.
     */
    ownerKey?: pulumi.Input<string>;
    /**
     * A tag for enabling clients to add their own data. For example, to indicate who created this object.
     */
    ownerTag?: pulumi.Input<string>;
    /**
     * The distinguished name (DN) of the parent object.
     */
    parentDn?: pulumi.Input<string>;
    relationToNetflowExporters?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyRelationToNetflowExporter>[]>;
    relationToNetflowRecords?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyRelationToNetflowRecord>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.NetflowMonitorPolicyTag>[]>;
}
