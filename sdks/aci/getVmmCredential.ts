// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVmmCredential(args: GetVmmCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetVmmCredentialResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getVmmCredential:getVmmCredential", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "pwd": args.pwd,
        "usr": args.usr,
        "vmmDomainDn": args.vmmDomainDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVmmCredential.
 */
export interface GetVmmCredentialArgs {
    annotation?: string;
    description?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    pwd?: string;
    usr?: string;
    vmmDomainDn: string;
}

/**
 * A collection of values returned by getVmmCredential.
 */
export interface GetVmmCredentialResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly pwd: string;
    readonly usr: string;
    readonly vmmDomainDn: string;
}
export function getVmmCredentialOutput(args: GetVmmCredentialOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmmCredentialResult> {
    return pulumi.output(args).apply((a: any) => getVmmCredential(a, opts))
}

/**
 * A collection of arguments for invoking getVmmCredential.
 */
export interface GetVmmCredentialOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    pwd?: pulumi.Input<string>;
    usr?: pulumi.Input<string>;
    vmmDomainDn: pulumi.Input<string>;
}
