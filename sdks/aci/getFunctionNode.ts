// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFunctionNode(args: GetFunctionNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionNodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getFunctionNode:getFunctionNode", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "l4L7ServiceGraphTemplateDn": args.l4L7ServiceGraphTemplateDn,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFunctionNode.
 */
export interface GetFunctionNodeArgs {
    annotation?: string;
    description?: string;
    id?: string;
    l4L7ServiceGraphTemplateDn: string;
    name: string;
}

/**
 * A collection of values returned by getFunctionNode.
 */
export interface GetFunctionNodeResult {
    readonly annotation: string;
    readonly connConsumerDn: string;
    readonly connCopyDn: string;
    readonly connProviderDn: string;
    readonly description: string;
    readonly funcTemplateType: string;
    readonly funcType: string;
    readonly id: string;
    readonly isCopy: string;
    readonly l4L7DeviceInterfaceConsumerAttachmentNotification: string;
    readonly l4L7DeviceInterfaceConsumerConnectorType: string;
    readonly l4L7DeviceInterfaceConsumerName: string;
    readonly l4L7DeviceInterfaceProviderAttachmentNotification: string;
    readonly l4L7DeviceInterfaceProviderConnectorType: string;
    readonly l4L7DeviceInterfaceProviderName: string;
    readonly l4L7ServiceGraphTemplateDn: string;
    readonly managed: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly relationVnsRsDefaultScopeToTerm: string;
    readonly relationVnsRsNodeToAbsFuncProf: string;
    readonly relationVnsRsNodeToCloudLDev: string;
    readonly relationVnsRsNodeToLDev: string;
    readonly relationVnsRsNodeToMFunc: string;
    readonly routingMode: string;
    readonly sequenceNumber: string;
    readonly shareEncap: string;
}
export function getFunctionNodeOutput(args: GetFunctionNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionNodeResult> {
    return pulumi.output(args).apply((a: any) => getFunctionNode(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionNode.
 */
export interface GetFunctionNodeOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    l4L7ServiceGraphTemplateDn: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
