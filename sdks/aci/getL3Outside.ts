// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getL3Outside(args: GetL3OutsideArgs, opts?: pulumi.InvokeOptions): Promise<GetL3OutsideResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getL3Outside:getL3Outside", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "tenantDn": args.tenantDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL3Outside.
 */
export interface GetL3OutsideArgs {
    annotation?: string;
    description?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    tenantDn: string;
}

/**
 * A collection of values returned by getL3Outside.
 */
export interface GetL3OutsideResult {
    readonly annotation: string;
    readonly defaultRouteLeakPolicies: outputs.GetL3OutsideDefaultRouteLeakPolicy[];
    readonly description: string;
    readonly enforceRtctrls: string[];
    readonly id: string;
    readonly mplsEnabled: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly pims: string[];
    readonly relationL3extRsDampeningPols: outputs.GetL3OutsideRelationL3extRsDampeningPol[];
    readonly relationL3extRsEctx: string;
    readonly relationL3extRsInterleakPol: string;
    readonly relationL3extRsL3DomAtt: string;
    readonly relationL3extrsRedistributePols: outputs.GetL3OutsideRelationL3extrsRedistributePol[];
    readonly targetDscp: string;
    readonly tenantDn: string;
}
export function getL3OutsideOutput(args: GetL3OutsideOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL3OutsideResult> {
    return pulumi.output(args).apply((a: any) => getL3Outside(a, opts))
}

/**
 * A collection of arguments for invoking getL3Outside.
 */
export interface GetL3OutsideOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
}
