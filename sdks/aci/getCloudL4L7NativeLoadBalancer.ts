// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudL4L7NativeLoadBalancer(args: GetCloudL4L7NativeLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudL4L7NativeLoadBalancerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getCloudL4L7NativeLoadBalancer:getCloudL4L7NativeLoadBalancer", {
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "tenantDn": args.tenantDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudL4L7NativeLoadBalancer.
 */
export interface GetCloudL4L7NativeLoadBalancerArgs {
    id?: string;
    name: string;
    nameAlias?: string;
    tenantDn: string;
}

/**
 * A collection of values returned by getCloudL4L7NativeLoadBalancer.
 */
export interface GetCloudL4L7NativeLoadBalancerResult {
    readonly aaaDomainDns: string[];
    readonly activeActive: string;
    readonly allowAll: string;
    readonly annotation: string;
    readonly autoScaling: string;
    readonly cloudL4l7LoadBalancerType: string;
    readonly contextAware: string;
    readonly customResourceGroup: string;
    readonly deviceType: string;
    readonly functionType: string;
    readonly id: string;
    readonly instanceCount: string;
    readonly isCopy: string;
    readonly isInstantiation: string;
    readonly isStaticIp: string;
    readonly l4l7DeviceApplicationSecurityGroup: string;
    readonly l4l7ThirdPartyDevice: string;
    readonly managed: string;
    readonly maxInstanceCount: string;
    readonly minInstanceCount: string;
    readonly mode: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly nativeLbName: string;
    readonly packageModel: string;
    readonly promiscuousMode: string;
    readonly relationCloudRsLdevToCloudSubnets: string[];
    readonly scheme: string;
    readonly serviceType: string;
    readonly size: string;
    readonly sku: string;
    readonly staticIpAddresses: string[];
    readonly targetMode: string;
    readonly tenantDn: string;
    readonly trunking: string;
    readonly version: string;
}
export function getCloudL4L7NativeLoadBalancerOutput(args: GetCloudL4L7NativeLoadBalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudL4L7NativeLoadBalancerResult> {
    return pulumi.output(args).apply((a: any) => getCloudL4L7NativeLoadBalancer(a, opts))
}

/**
 * A collection of arguments for invoking getCloudL4L7NativeLoadBalancer.
 */
export interface GetCloudL4L7NativeLoadBalancerOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
}
