// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLeafProfile(args: GetLeafProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetLeafProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getLeafProfile:getLeafProfile", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "leafSelectorIds": args.leafSelectorIds,
        "leafSelectors": args.leafSelectors,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "nodeBlockIds": args.nodeBlockIds,
        "relationInfraRsAccCardPs": args.relationInfraRsAccCardPs,
        "relationInfraRsAccPortPs": args.relationInfraRsAccPortPs,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLeafProfile.
 */
export interface GetLeafProfileArgs {
    annotation?: string;
    description?: string;
    id?: string;
    leafSelectorIds?: string[];
    leafSelectors?: inputs.GetLeafProfileLeafSelector[];
    name: string;
    nameAlias?: string;
    nodeBlockIds?: string[];
    relationInfraRsAccCardPs?: string[];
    relationInfraRsAccPortPs?: string[];
}

/**
 * A collection of values returned by getLeafProfile.
 */
export interface GetLeafProfileResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly leafSelectorIds?: string[];
    readonly leafSelectors?: outputs.GetLeafProfileLeafSelector[];
    readonly name: string;
    readonly nameAlias: string;
    readonly nodeBlockIds?: string[];
    readonly relationInfraRsAccCardPs?: string[];
    readonly relationInfraRsAccPortPs?: string[];
}
export function getLeafProfileOutput(args: GetLeafProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLeafProfileResult> {
    return pulumi.output(args).apply((a: any) => getLeafProfile(a, opts))
}

/**
 * A collection of arguments for invoking getLeafProfile.
 */
export interface GetLeafProfileOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    leafSelectorIds?: pulumi.Input<pulumi.Input<string>[]>;
    leafSelectors?: pulumi.Input<pulumi.Input<inputs.GetLeafProfileLeafSelectorArgs>[]>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    nodeBlockIds?: pulumi.Input<pulumi.Input<string>[]>;
    relationInfraRsAccCardPs?: pulumi.Input<pulumi.Input<string>[]>;
    relationInfraRsAccPortPs?: pulumi.Input<pulumi.Input<string>[]>;
}
