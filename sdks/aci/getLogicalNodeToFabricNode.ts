// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogicalNodeToFabricNode(args: GetLogicalNodeToFabricNodeArgs, opts?: pulumi.InvokeOptions): Promise<GetLogicalNodeToFabricNodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getLogicalNodeToFabricNode:getLogicalNodeToFabricNode", {
        "annotation": args.annotation,
        "configIssues": args.configIssues,
        "description": args.description,
        "id": args.id,
        "logicalNodeProfileDn": args.logicalNodeProfileDn,
        "rtrId": args.rtrId,
        "rtrIdLoopBack": args.rtrIdLoopBack,
        "tdn": args.tdn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogicalNodeToFabricNode.
 */
export interface GetLogicalNodeToFabricNodeArgs {
    annotation?: string;
    configIssues?: string;
    description?: string;
    id?: string;
    logicalNodeProfileDn: string;
    rtrId?: string;
    rtrIdLoopBack?: string;
    tdn: string;
}

/**
 * A collection of values returned by getLogicalNodeToFabricNode.
 */
export interface GetLogicalNodeToFabricNodeResult {
    readonly annotation: string;
    readonly configIssues: string;
    readonly description: string;
    readonly id: string;
    readonly logicalNodeProfileDn: string;
    readonly rtrId: string;
    readonly rtrIdLoopBack: string;
    readonly tdn: string;
}
export function getLogicalNodeToFabricNodeOutput(args: GetLogicalNodeToFabricNodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogicalNodeToFabricNodeResult> {
    return pulumi.output(args).apply((a: any) => getLogicalNodeToFabricNode(a, opts))
}

/**
 * A collection of arguments for invoking getLogicalNodeToFabricNode.
 */
export interface GetLogicalNodeToFabricNodeOutputArgs {
    annotation?: pulumi.Input<string>;
    configIssues?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    logicalNodeProfileDn: pulumi.Input<string>;
    rtrId?: pulumi.Input<string>;
    rtrIdLoopBack?: pulumi.Input<string>;
    tdn: pulumi.Input<string>;
}
