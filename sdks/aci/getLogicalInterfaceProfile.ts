// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLogicalInterfaceProfile(args: GetLogicalInterfaceProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetLogicalInterfaceProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getLogicalInterfaceProfile:getLogicalInterfaceProfile", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "logicalNodeProfileDn": args.logicalNodeProfileDn,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogicalInterfaceProfile.
 */
export interface GetLogicalInterfaceProfileArgs {
    annotation?: string;
    description?: string;
    id?: string;
    logicalNodeProfileDn: string;
    name: string;
}

/**
 * A collection of values returned by getLogicalInterfaceProfile.
 */
export interface GetLogicalInterfaceProfileResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly logicalNodeProfileDn: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly prio: string;
    readonly relationL3extRsArpIfPol: string;
    readonly relationL3extRsEgressQosDppPol: string;
    readonly relationL3extRsIgmpIfPol: string;
    readonly relationL3extRsIngressQosDppPol: string;
    readonly relationL3extRsLIfPCustQosPol: string;
    readonly relationL3extRsLIfPToNetflowMonitorPols: outputs.GetLogicalInterfaceProfileRelationL3extRsLIfPToNetflowMonitorPol[];
    readonly relationL3extRsNdIfPol: string;
    readonly relationL3extRsPimIpIfPol: string;
    readonly relationL3extRsPimIpv6IfPol: string;
    readonly tag: string;
}
export function getLogicalInterfaceProfileOutput(args: GetLogicalInterfaceProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogicalInterfaceProfileResult> {
    return pulumi.output(args).apply((a: any) => getLogicalInterfaceProfile(a, opts))
}

/**
 * A collection of arguments for invoking getLogicalInterfaceProfile.
 */
export interface GetLogicalInterfaceProfileOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    logicalNodeProfileDn: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
