// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GlobalSecurity extends pulumi.CustomResource {
    /**
     * Get an existing GlobalSecurity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalSecurityState, opts?: pulumi.CustomResourceOptions): GlobalSecurity {
        return new GlobalSecurity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/globalSecurity:GlobalSecurity';

    /**
     * Returns true if the given object is an instance of GlobalSecurity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlobalSecurity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlobalSecurity.__pulumiType;
    }

    public readonly annotation!: pulumi.Output<string>;
    public readonly blockDuration!: pulumi.Output<string>;
    public readonly changeCount!: pulumi.Output<string>;
    public readonly changeDuringInterval!: pulumi.Output<string>;
    public readonly changeInterval!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly enableLoginBlock!: pulumi.Output<string>;
    public readonly expirationWarnTime!: pulumi.Output<string>;
    public readonly historyCount!: pulumi.Output<string>;
    public readonly maxFailedAttempts!: pulumi.Output<string>;
    public readonly maxFailedAttemptsWindow!: pulumi.Output<string>;
    public readonly maximumValidityPeriod!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly noChangeInterval!: pulumi.Output<string>;
    public readonly pwdStrengthCheck!: pulumi.Output<string>;
    /**
     * Create relation to aaa:UserEp
     */
    public readonly relationAaaRsToUserEp!: pulumi.Output<string | undefined>;
    public readonly sessionRecordFlags!: pulumi.Output<string[]>;
    public readonly uiIdleTimeoutSeconds!: pulumi.Output<string>;
    public readonly webtokenTimeoutSeconds!: pulumi.Output<string>;

    /**
     * Create a GlobalSecurity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GlobalSecurityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalSecurityArgs | GlobalSecurityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalSecurityState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["blockDuration"] = state ? state.blockDuration : undefined;
            resourceInputs["changeCount"] = state ? state.changeCount : undefined;
            resourceInputs["changeDuringInterval"] = state ? state.changeDuringInterval : undefined;
            resourceInputs["changeInterval"] = state ? state.changeInterval : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableLoginBlock"] = state ? state.enableLoginBlock : undefined;
            resourceInputs["expirationWarnTime"] = state ? state.expirationWarnTime : undefined;
            resourceInputs["historyCount"] = state ? state.historyCount : undefined;
            resourceInputs["maxFailedAttempts"] = state ? state.maxFailedAttempts : undefined;
            resourceInputs["maxFailedAttemptsWindow"] = state ? state.maxFailedAttemptsWindow : undefined;
            resourceInputs["maximumValidityPeriod"] = state ? state.maximumValidityPeriod : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["noChangeInterval"] = state ? state.noChangeInterval : undefined;
            resourceInputs["pwdStrengthCheck"] = state ? state.pwdStrengthCheck : undefined;
            resourceInputs["relationAaaRsToUserEp"] = state ? state.relationAaaRsToUserEp : undefined;
            resourceInputs["sessionRecordFlags"] = state ? state.sessionRecordFlags : undefined;
            resourceInputs["uiIdleTimeoutSeconds"] = state ? state.uiIdleTimeoutSeconds : undefined;
            resourceInputs["webtokenTimeoutSeconds"] = state ? state.webtokenTimeoutSeconds : undefined;
        } else {
            const args = argsOrState as GlobalSecurityArgs | undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["blockDuration"] = args ? args.blockDuration : undefined;
            resourceInputs["changeCount"] = args ? args.changeCount : undefined;
            resourceInputs["changeDuringInterval"] = args ? args.changeDuringInterval : undefined;
            resourceInputs["changeInterval"] = args ? args.changeInterval : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableLoginBlock"] = args ? args.enableLoginBlock : undefined;
            resourceInputs["expirationWarnTime"] = args ? args.expirationWarnTime : undefined;
            resourceInputs["historyCount"] = args ? args.historyCount : undefined;
            resourceInputs["maxFailedAttempts"] = args ? args.maxFailedAttempts : undefined;
            resourceInputs["maxFailedAttemptsWindow"] = args ? args.maxFailedAttemptsWindow : undefined;
            resourceInputs["maximumValidityPeriod"] = args ? args.maximumValidityPeriod : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["noChangeInterval"] = args ? args.noChangeInterval : undefined;
            resourceInputs["pwdStrengthCheck"] = args ? args.pwdStrengthCheck : undefined;
            resourceInputs["relationAaaRsToUserEp"] = args ? args.relationAaaRsToUserEp : undefined;
            resourceInputs["sessionRecordFlags"] = args ? args.sessionRecordFlags : undefined;
            resourceInputs["uiIdleTimeoutSeconds"] = args ? args.uiIdleTimeoutSeconds : undefined;
            resourceInputs["webtokenTimeoutSeconds"] = args ? args.webtokenTimeoutSeconds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GlobalSecurity.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GlobalSecurity resources.
 */
export interface GlobalSecurityState {
    annotation?: pulumi.Input<string>;
    blockDuration?: pulumi.Input<string>;
    changeCount?: pulumi.Input<string>;
    changeDuringInterval?: pulumi.Input<string>;
    changeInterval?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableLoginBlock?: pulumi.Input<string>;
    expirationWarnTime?: pulumi.Input<string>;
    historyCount?: pulumi.Input<string>;
    maxFailedAttempts?: pulumi.Input<string>;
    maxFailedAttemptsWindow?: pulumi.Input<string>;
    maximumValidityPeriod?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    noChangeInterval?: pulumi.Input<string>;
    pwdStrengthCheck?: pulumi.Input<string>;
    /**
     * Create relation to aaa:UserEp
     */
    relationAaaRsToUserEp?: pulumi.Input<string>;
    sessionRecordFlags?: pulumi.Input<pulumi.Input<string>[]>;
    uiIdleTimeoutSeconds?: pulumi.Input<string>;
    webtokenTimeoutSeconds?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GlobalSecurity resource.
 */
export interface GlobalSecurityArgs {
    annotation?: pulumi.Input<string>;
    blockDuration?: pulumi.Input<string>;
    changeCount?: pulumi.Input<string>;
    changeDuringInterval?: pulumi.Input<string>;
    changeInterval?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableLoginBlock?: pulumi.Input<string>;
    expirationWarnTime?: pulumi.Input<string>;
    historyCount?: pulumi.Input<string>;
    maxFailedAttempts?: pulumi.Input<string>;
    maxFailedAttemptsWindow?: pulumi.Input<string>;
    maximumValidityPeriod?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    noChangeInterval?: pulumi.Input<string>;
    pwdStrengthCheck?: pulumi.Input<string>;
    /**
     * Create relation to aaa:UserEp
     */
    relationAaaRsToUserEp?: pulumi.Input<string>;
    sessionRecordFlags?: pulumi.Input<pulumi.Input<string>[]>;
    uiIdleTimeoutSeconds?: pulumi.Input<string>;
    webtokenTimeoutSeconds?: pulumi.Input<string>;
}
