// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRelationToFallbackRouteGroup(args: GetRelationToFallbackRouteGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetRelationToFallbackRouteGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getRelationToFallbackRouteGroup:getRelationToFallbackRouteGroup", {
        "parentDn": args.parentDn,
        "targetDn": args.targetDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRelationToFallbackRouteGroup.
 */
export interface GetRelationToFallbackRouteGroupArgs {
    parentDn: string;
    targetDn: string;
}

/**
 * A collection of values returned by getRelationToFallbackRouteGroup.
 */
export interface GetRelationToFallbackRouteGroupResult {
    readonly annotation: string;
    readonly annotations: outputs.GetRelationToFallbackRouteGroupAnnotation[];
    readonly id: string;
    readonly parentDn: string;
    readonly tags: outputs.GetRelationToFallbackRouteGroupTag[];
    readonly targetDn: string;
}
export function getRelationToFallbackRouteGroupOutput(args: GetRelationToFallbackRouteGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRelationToFallbackRouteGroupResult> {
    return pulumi.output(args).apply((a: any) => getRelationToFallbackRouteGroup(a, opts))
}

/**
 * A collection of arguments for invoking getRelationToFallbackRouteGroup.
 */
export interface GetRelationToFallbackRouteGroupOutputArgs {
    parentDn: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}
