// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEndpointControls(args?: GetEndpointControlsArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointControlsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getEndpointControls:getEndpointControls", {
        "adminSt": args.adminSt,
        "annotation": args.annotation,
        "description": args.description,
        "holdIntvl": args.holdIntvl,
        "id": args.id,
        "nameAlias": args.nameAlias,
        "rogueEpDetectIntvl": args.rogueEpDetectIntvl,
        "rogueEpDetectMult": args.rogueEpDetectMult,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEndpointControls.
 */
export interface GetEndpointControlsArgs {
    adminSt?: string;
    annotation?: string;
    description?: string;
    holdIntvl?: string;
    id?: string;
    nameAlias?: string;
    rogueEpDetectIntvl?: string;
    rogueEpDetectMult?: string;
}

/**
 * A collection of values returned by getEndpointControls.
 */
export interface GetEndpointControlsResult {
    readonly adminSt: string;
    readonly annotation: string;
    readonly description: string;
    readonly holdIntvl: string;
    readonly id: string;
    readonly nameAlias: string;
    readonly rogueEpDetectIntvl: string;
    readonly rogueEpDetectMult: string;
}
export function getEndpointControlsOutput(args?: GetEndpointControlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointControlsResult> {
    return pulumi.output(args).apply((a: any) => getEndpointControls(a, opts))
}

/**
 * A collection of arguments for invoking getEndpointControls.
 */
export interface GetEndpointControlsOutputArgs {
    adminSt?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    holdIntvl?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    rogueEpDetectIntvl?: pulumi.Input<string>;
    rogueEpDetectMult?: pulumi.Input<string>;
}
