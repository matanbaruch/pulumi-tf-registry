// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInterfaceConfig(args: GetInterfaceConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getInterfaceConfig:getInterfaceConfig", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "interface": args.interface,
        "nameAlias": args.nameAlias,
        "node": args.node,
        "portType": args.portType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceConfig.
 */
export interface GetInterfaceConfigArgs {
    annotation?: string;
    description?: string;
    id?: string;
    interface: string;
    nameAlias?: string;
    node: number;
    portType?: string;
}

/**
 * A collection of values returned by getInterfaceConfig.
 */
export interface GetInterfaceConfigResult {
    readonly adminState: string;
    readonly annotation: string;
    readonly breakout: string;
    readonly description: string;
    readonly id: string;
    readonly interface: string;
    readonly nameAlias: string;
    readonly node: number;
    readonly operationalAssociatedGroup: string;
    readonly operationalAssociatedSubGroup: string;
    readonly pcMember: string;
    readonly pcPortDn: string;
    readonly policyGroup: string;
    readonly portDn: string;
    readonly portType?: string;
    readonly role: string;
}
export function getInterfaceConfigOutput(args: GetInterfaceConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceConfigResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceConfig(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceConfig.
 */
export interface GetInterfaceConfigOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interface: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    node: pulumi.Input<number>;
    portType?: pulumi.Input<string>;
}
