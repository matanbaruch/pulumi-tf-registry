// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VswitchPolicy extends pulumi.CustomResource {
    /**
     * Get an existing VswitchPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VswitchPolicyState, opts?: pulumi.CustomResourceOptions): VswitchPolicy {
        return new VswitchPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/vswitchPolicy:VswitchPolicy';

    /**
     * Returns true if the given object is an instance of VswitchPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VswitchPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VswitchPolicy.__pulumiType;
    }

    public readonly annotation!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    /**
     * Create relation to netflowVmmExporterPol
     */
    public readonly relationVmmRsVswitchExporterPols!: pulumi.Output<outputs.VswitchPolicyRelationVmmRsVswitchExporterPol[] | undefined>;
    /**
     * Create relation to cdp:IfPol
     */
    public readonly relationVmmRsVswitchOverrideCdpIfPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to nws:FwPol
     */
    public readonly relationVmmRsVswitchOverrideFwPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to lacp:LagPol
     */
    public readonly relationVmmRsVswitchOverrideLacpPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to lldp:IfPol
     */
    public readonly relationVmmRsVswitchOverrideLldpIfPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to mcp:IfPol
     */
    public readonly relationVmmRsVswitchOverrideMcpIfPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to l2:InstPol
     */
    public readonly relationVmmRsVswitchOverrideMtuPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to stp:IfPol
     */
    public readonly relationVmmRsVswitchOverrideStpPol!: pulumi.Output<string | undefined>;
    public readonly vmmDomainDn!: pulumi.Output<string>;

    /**
     * Create a VswitchPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VswitchPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VswitchPolicyArgs | VswitchPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VswitchPolicyState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["relationVmmRsVswitchExporterPols"] = state ? state.relationVmmRsVswitchExporterPols : undefined;
            resourceInputs["relationVmmRsVswitchOverrideCdpIfPol"] = state ? state.relationVmmRsVswitchOverrideCdpIfPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideFwPol"] = state ? state.relationVmmRsVswitchOverrideFwPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideLacpPol"] = state ? state.relationVmmRsVswitchOverrideLacpPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideLldpIfPol"] = state ? state.relationVmmRsVswitchOverrideLldpIfPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideMcpIfPol"] = state ? state.relationVmmRsVswitchOverrideMcpIfPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideMtuPol"] = state ? state.relationVmmRsVswitchOverrideMtuPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideStpPol"] = state ? state.relationVmmRsVswitchOverrideStpPol : undefined;
            resourceInputs["vmmDomainDn"] = state ? state.vmmDomainDn : undefined;
        } else {
            const args = argsOrState as VswitchPolicyArgs | undefined;
            if ((!args || args.vmmDomainDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vmmDomainDn'");
            }
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["relationVmmRsVswitchExporterPols"] = args ? args.relationVmmRsVswitchExporterPols : undefined;
            resourceInputs["relationVmmRsVswitchOverrideCdpIfPol"] = args ? args.relationVmmRsVswitchOverrideCdpIfPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideFwPol"] = args ? args.relationVmmRsVswitchOverrideFwPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideLacpPol"] = args ? args.relationVmmRsVswitchOverrideLacpPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideLldpIfPol"] = args ? args.relationVmmRsVswitchOverrideLldpIfPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideMcpIfPol"] = args ? args.relationVmmRsVswitchOverrideMcpIfPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideMtuPol"] = args ? args.relationVmmRsVswitchOverrideMtuPol : undefined;
            resourceInputs["relationVmmRsVswitchOverrideStpPol"] = args ? args.relationVmmRsVswitchOverrideStpPol : undefined;
            resourceInputs["vmmDomainDn"] = args ? args.vmmDomainDn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VswitchPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VswitchPolicy resources.
 */
export interface VswitchPolicyState {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    /**
     * Create relation to netflowVmmExporterPol
     */
    relationVmmRsVswitchExporterPols?: pulumi.Input<pulumi.Input<inputs.VswitchPolicyRelationVmmRsVswitchExporterPol>[]>;
    /**
     * Create relation to cdp:IfPol
     */
    relationVmmRsVswitchOverrideCdpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to nws:FwPol
     */
    relationVmmRsVswitchOverrideFwPol?: pulumi.Input<string>;
    /**
     * Create relation to lacp:LagPol
     */
    relationVmmRsVswitchOverrideLacpPol?: pulumi.Input<string>;
    /**
     * Create relation to lldp:IfPol
     */
    relationVmmRsVswitchOverrideLldpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to mcp:IfPol
     */
    relationVmmRsVswitchOverrideMcpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to l2:InstPol
     */
    relationVmmRsVswitchOverrideMtuPol?: pulumi.Input<string>;
    /**
     * Create relation to stp:IfPol
     */
    relationVmmRsVswitchOverrideStpPol?: pulumi.Input<string>;
    vmmDomainDn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VswitchPolicy resource.
 */
export interface VswitchPolicyArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    /**
     * Create relation to netflowVmmExporterPol
     */
    relationVmmRsVswitchExporterPols?: pulumi.Input<pulumi.Input<inputs.VswitchPolicyRelationVmmRsVswitchExporterPol>[]>;
    /**
     * Create relation to cdp:IfPol
     */
    relationVmmRsVswitchOverrideCdpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to nws:FwPol
     */
    relationVmmRsVswitchOverrideFwPol?: pulumi.Input<string>;
    /**
     * Create relation to lacp:LagPol
     */
    relationVmmRsVswitchOverrideLacpPol?: pulumi.Input<string>;
    /**
     * Create relation to lldp:IfPol
     */
    relationVmmRsVswitchOverrideLldpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to mcp:IfPol
     */
    relationVmmRsVswitchOverrideMcpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to l2:InstPol
     */
    relationVmmRsVswitchOverrideMtuPol?: pulumi.Input<string>;
    /**
     * Create relation to stp:IfPol
     */
    relationVmmRsVswitchOverrideStpPol?: pulumi.Input<string>;
    vmmDomainDn: pulumi.Input<string>;
}
