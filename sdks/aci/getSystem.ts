// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystem(args: GetSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getSystem:getSystem", {
        "address": args.address,
        "bootStrapTate": args.bootStrapTate,
        "childAction": args.childAction,
        "configIssues": args.configIssues,
        "controlPlaneMtu": args.controlPlaneMtu,
        "currentTime": args.currentTime,
        "enforceSubnetCheck": args.enforceSubnetCheck,
        "etepAddr": args.etepAddr,
        "fabricDomain": args.fabricDomain,
        "fabricId": args.fabricId,
        "fabricMac": args.fabricMac,
        "id": args.id,
        "inbMgmtAddr": args.inbMgmtAddr,
        "inbMgmtAddr6": args.inbMgmtAddr6,
        "inbMgmtAddr6Mask": args.inbMgmtAddr6Mask,
        "inbMgmtAddrMask": args.inbMgmtAddrMask,
        "inbMgmtGateway": args.inbMgmtGateway,
        "inbMgmtGateway6": args.inbMgmtGateway6,
        "lastRebootTime": args.lastRebootTime,
        "lastResetReason": args.lastResetReason,
        "lcOwn": args.lcOwn,
        "modTs": args.modTs,
        "mode": args.mode,
        "monPolDn": args.monPolDn,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "nodeType": args.nodeType,
        "oobMgmtAddr": args.oobMgmtAddr,
        "oobMgmtAddr6": args.oobMgmtAddr6,
        "oobMgmtAddr6Mask": args.oobMgmtAddr6Mask,
        "oobMgmtAddrMask": args.oobMgmtAddrMask,
        "oobMgmtGateway": args.oobMgmtGateway,
        "oobMgmtGateway6": args.oobMgmtGateway6,
        "podId": args.podId,
        "remoteNetworkId": args.remoteNetworkId,
        "remoteNode": args.remoteNode,
        "rlOperPodId": args.rlOperPodId,
        "rlRoutableMode": args.rlRoutableMode,
        "rldirectMode": args.rldirectMode,
        "role": args.role,
        "serial": args.serial,
        "serverType": args.serverType,
        "siteId": args.siteId,
        "state": args.state,
        "systemId": args.systemId,
        "systemUptime": args.systemUptime,
        "tepPool": args.tepPool,
        "unicastXrEpLearnDisable": args.unicastXrEpLearnDisable,
        "version": args.version,
        "virtualMode": args.virtualMode,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSystem.
 */
export interface GetSystemArgs {
    address?: string;
    bootStrapTate?: string;
    childAction?: string;
    configIssues?: string;
    controlPlaneMtu?: string;
    currentTime?: string;
    enforceSubnetCheck?: string;
    etepAddr?: string;
    fabricDomain?: string;
    fabricId?: string;
    fabricMac?: string;
    id?: string;
    inbMgmtAddr?: string;
    inbMgmtAddr6?: string;
    inbMgmtAddr6Mask?: string;
    inbMgmtAddrMask?: string;
    inbMgmtGateway?: string;
    inbMgmtGateway6?: string;
    lastRebootTime?: string;
    lastResetReason?: string;
    lcOwn?: string;
    modTs?: string;
    mode?: string;
    monPolDn?: string;
    name?: string;
    nameAlias?: string;
    nodeType?: string;
    oobMgmtAddr?: string;
    oobMgmtAddr6?: string;
    oobMgmtAddr6Mask?: string;
    oobMgmtAddrMask?: string;
    oobMgmtGateway?: string;
    oobMgmtGateway6?: string;
    podId: string;
    remoteNetworkId?: string;
    remoteNode?: string;
    rlOperPodId?: string;
    rlRoutableMode?: string;
    rldirectMode?: string;
    role?: string;
    serial?: string;
    serverType?: string;
    siteId?: string;
    state?: string;
    systemId: string;
    systemUptime?: string;
    tepPool?: string;
    unicastXrEpLearnDisable?: string;
    version?: string;
    virtualMode?: string;
}

/**
 * A collection of values returned by getSystem.
 */
export interface GetSystemResult {
    readonly address: string;
    readonly bootStrapTate: string;
    readonly childAction: string;
    readonly configIssues: string;
    readonly controlPlaneMtu: string;
    readonly currentTime: string;
    readonly enforceSubnetCheck: string;
    readonly etepAddr: string;
    readonly fabricDomain: string;
    readonly fabricId: string;
    readonly fabricMac: string;
    readonly id: string;
    readonly inbMgmtAddr: string;
    readonly inbMgmtAddr6: string;
    readonly inbMgmtAddr6Mask: string;
    readonly inbMgmtAddrMask: string;
    readonly inbMgmtGateway: string;
    readonly inbMgmtGateway6: string;
    readonly lastRebootTime: string;
    readonly lastResetReason: string;
    readonly lcOwn: string;
    readonly modTs: string;
    readonly mode: string;
    readonly monPolDn: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly nodeType: string;
    readonly oobMgmtAddr: string;
    readonly oobMgmtAddr6: string;
    readonly oobMgmtAddr6Mask: string;
    readonly oobMgmtAddrMask: string;
    readonly oobMgmtGateway: string;
    readonly oobMgmtGateway6: string;
    readonly podId: string;
    readonly remoteNetworkId: string;
    readonly remoteNode: string;
    readonly rlOperPodId: string;
    readonly rlRoutableMode: string;
    readonly rldirectMode: string;
    readonly role: string;
    readonly serial: string;
    readonly serverType: string;
    readonly siteId: string;
    readonly state: string;
    readonly systemId: string;
    readonly systemUptime: string;
    readonly tepPool: string;
    readonly unicastXrEpLearnDisable: string;
    readonly version: string;
    readonly virtualMode: string;
}
export function getSystemOutput(args: GetSystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemResult> {
    return pulumi.output(args).apply((a: any) => getSystem(a, opts))
}

/**
 * A collection of arguments for invoking getSystem.
 */
export interface GetSystemOutputArgs {
    address?: pulumi.Input<string>;
    bootStrapTate?: pulumi.Input<string>;
    childAction?: pulumi.Input<string>;
    configIssues?: pulumi.Input<string>;
    controlPlaneMtu?: pulumi.Input<string>;
    currentTime?: pulumi.Input<string>;
    enforceSubnetCheck?: pulumi.Input<string>;
    etepAddr?: pulumi.Input<string>;
    fabricDomain?: pulumi.Input<string>;
    fabricId?: pulumi.Input<string>;
    fabricMac?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inbMgmtAddr?: pulumi.Input<string>;
    inbMgmtAddr6?: pulumi.Input<string>;
    inbMgmtAddr6Mask?: pulumi.Input<string>;
    inbMgmtAddrMask?: pulumi.Input<string>;
    inbMgmtGateway?: pulumi.Input<string>;
    inbMgmtGateway6?: pulumi.Input<string>;
    lastRebootTime?: pulumi.Input<string>;
    lastResetReason?: pulumi.Input<string>;
    lcOwn?: pulumi.Input<string>;
    modTs?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    monPolDn?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    nodeType?: pulumi.Input<string>;
    oobMgmtAddr?: pulumi.Input<string>;
    oobMgmtAddr6?: pulumi.Input<string>;
    oobMgmtAddr6Mask?: pulumi.Input<string>;
    oobMgmtAddrMask?: pulumi.Input<string>;
    oobMgmtGateway?: pulumi.Input<string>;
    oobMgmtGateway6?: pulumi.Input<string>;
    podId: pulumi.Input<string>;
    remoteNetworkId?: pulumi.Input<string>;
    remoteNode?: pulumi.Input<string>;
    rlOperPodId?: pulumi.Input<string>;
    rlRoutableMode?: pulumi.Input<string>;
    rldirectMode?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    serial?: pulumi.Input<string>;
    serverType?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    systemId: pulumi.Input<string>;
    systemUptime?: pulumi.Input<string>;
    tepPool?: pulumi.Input<string>;
    unicastXrEpLearnDisable?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    virtualMode?: pulumi.Input<string>;
}
