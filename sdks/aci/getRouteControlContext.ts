// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRouteControlContext(args: GetRouteControlContextArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteControlContextResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getRouteControlContext:getRouteControlContext", {
        "action": args.action,
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "order": args.order,
        "routeControlProfileDn": args.routeControlProfileDn,
        "setRule": args.setRule,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRouteControlContext.
 */
export interface GetRouteControlContextArgs {
    action?: string;
    annotation?: string;
    description?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    order?: string;
    routeControlProfileDn: string;
    setRule?: string;
}

/**
 * A collection of values returned by getRouteControlContext.
 */
export interface GetRouteControlContextResult {
    readonly action: string;
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly order: string;
    readonly routeControlProfileDn: string;
    readonly setRule?: string;
}
export function getRouteControlContextOutput(args: GetRouteControlContextOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteControlContextResult> {
    return pulumi.output(args).apply((a: any) => getRouteControlContext(a, opts))
}

/**
 * A collection of arguments for invoking getRouteControlContext.
 */
export interface GetRouteControlContextOutputArgs {
    action?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    order?: pulumi.Input<string>;
    routeControlProfileDn: pulumi.Input<string>;
    setRule?: pulumi.Input<string>;
}
