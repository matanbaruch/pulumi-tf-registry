// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOspfTimers(args: GetOspfTimersArgs, opts?: pulumi.InvokeOptions): Promise<GetOspfTimersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getOspfTimers:getOspfTimers", {
        "annotation": args.annotation,
        "bwRef": args.bwRef,
        "ctrls": args.ctrls,
        "description": args.description,
        "dist": args.dist,
        "grCtrl": args.grCtrl,
        "id": args.id,
        "lsaArrivalIntvl": args.lsaArrivalIntvl,
        "lsaGpPacingIntvl": args.lsaGpPacingIntvl,
        "lsaHoldIntvl": args.lsaHoldIntvl,
        "lsaMaxIntvl": args.lsaMaxIntvl,
        "lsaStartIntvl": args.lsaStartIntvl,
        "maxEcmp": args.maxEcmp,
        "maxLsaAction": args.maxLsaAction,
        "maxLsaNum": args.maxLsaNum,
        "maxLsaResetIntvl": args.maxLsaResetIntvl,
        "maxLsaSleepCnt": args.maxLsaSleepCnt,
        "maxLsaSleepIntvl": args.maxLsaSleepIntvl,
        "maxLsaThresh": args.maxLsaThresh,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "spfHoldIntvl": args.spfHoldIntvl,
        "spfInitIntvl": args.spfInitIntvl,
        "spfMaxIntvl": args.spfMaxIntvl,
        "tenantDn": args.tenantDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOspfTimers.
 */
export interface GetOspfTimersArgs {
    annotation?: string;
    bwRef?: string;
    ctrls?: string[];
    description?: string;
    dist?: string;
    grCtrl?: string;
    id?: string;
    lsaArrivalIntvl?: string;
    lsaGpPacingIntvl?: string;
    lsaHoldIntvl?: string;
    lsaMaxIntvl?: string;
    lsaStartIntvl?: string;
    maxEcmp?: string;
    maxLsaAction?: string;
    maxLsaNum?: string;
    maxLsaResetIntvl?: string;
    maxLsaSleepCnt?: string;
    maxLsaSleepIntvl?: string;
    maxLsaThresh?: string;
    name: string;
    nameAlias?: string;
    spfHoldIntvl?: string;
    spfInitIntvl?: string;
    spfMaxIntvl?: string;
    tenantDn: string;
}

/**
 * A collection of values returned by getOspfTimers.
 */
export interface GetOspfTimersResult {
    readonly annotation: string;
    readonly bwRef: string;
    readonly ctrls: string[];
    readonly description: string;
    readonly dist: string;
    readonly grCtrl: string;
    readonly id: string;
    readonly lsaArrivalIntvl: string;
    readonly lsaGpPacingIntvl: string;
    readonly lsaHoldIntvl: string;
    readonly lsaMaxIntvl: string;
    readonly lsaStartIntvl: string;
    readonly maxEcmp: string;
    readonly maxLsaAction: string;
    readonly maxLsaNum: string;
    readonly maxLsaResetIntvl: string;
    readonly maxLsaSleepCnt: string;
    readonly maxLsaSleepIntvl: string;
    readonly maxLsaThresh: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly spfHoldIntvl: string;
    readonly spfInitIntvl: string;
    readonly spfMaxIntvl: string;
    readonly tenantDn: string;
}
export function getOspfTimersOutput(args: GetOspfTimersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspfTimersResult> {
    return pulumi.output(args).apply((a: any) => getOspfTimers(a, opts))
}

/**
 * A collection of arguments for invoking getOspfTimers.
 */
export interface GetOspfTimersOutputArgs {
    annotation?: pulumi.Input<string>;
    bwRef?: pulumi.Input<string>;
    ctrls?: pulumi.Input<pulumi.Input<string>[]>;
    description?: pulumi.Input<string>;
    dist?: pulumi.Input<string>;
    grCtrl?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lsaArrivalIntvl?: pulumi.Input<string>;
    lsaGpPacingIntvl?: pulumi.Input<string>;
    lsaHoldIntvl?: pulumi.Input<string>;
    lsaMaxIntvl?: pulumi.Input<string>;
    lsaStartIntvl?: pulumi.Input<string>;
    maxEcmp?: pulumi.Input<string>;
    maxLsaAction?: pulumi.Input<string>;
    maxLsaNum?: pulumi.Input<string>;
    maxLsaResetIntvl?: pulumi.Input<string>;
    maxLsaSleepCnt?: pulumi.Input<string>;
    maxLsaSleepIntvl?: pulumi.Input<string>;
    maxLsaThresh?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    spfHoldIntvl?: pulumi.Input<string>;
    spfInitIntvl?: pulumi.Input<string>;
    spfMaxIntvl?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
}
