// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEpgToContractInterface(args: GetEpgToContractInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetEpgToContractInterfaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getEpgToContractInterface:getEpgToContractInterface", {
        "annotation": args.annotation,
        "applicationEpgDn": args.applicationEpgDn,
        "contractInterfaceDn": args.contractInterfaceDn,
        "description": args.description,
        "id": args.id,
        "nameAlias": args.nameAlias,
        "prio": args.prio,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEpgToContractInterface.
 */
export interface GetEpgToContractInterfaceArgs {
    annotation?: string;
    applicationEpgDn: string;
    contractInterfaceDn: string;
    description?: string;
    id?: string;
    nameAlias?: string;
    prio?: string;
}

/**
 * A collection of values returned by getEpgToContractInterface.
 */
export interface GetEpgToContractInterfaceResult {
    readonly annotation: string;
    readonly applicationEpgDn: string;
    readonly contractInterfaceDn: string;
    readonly description: string;
    readonly id: string;
    readonly nameAlias: string;
    readonly prio: string;
}
export function getEpgToContractInterfaceOutput(args: GetEpgToContractInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEpgToContractInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getEpgToContractInterface(a, opts))
}

/**
 * A collection of arguments for invoking getEpgToContractInterface.
 */
export interface GetEpgToContractInterfaceOutputArgs {
    annotation?: pulumi.Input<string>;
    applicationEpgDn: pulumi.Input<string>;
    contractInterfaceDn: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
}
