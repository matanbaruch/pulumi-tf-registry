// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContractSubjectOneWayFilter(args: GetContractSubjectOneWayFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetContractSubjectOneWayFilterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getContractSubjectOneWayFilter:getContractSubjectOneWayFilter", {
        "action": args.action,
        "annotation": args.annotation,
        "contractSubjectDn": args.contractSubjectDn,
        "description": args.description,
        "directives": args.directives,
        "filterDn": args.filterDn,
        "id": args.id,
        "nameAlias": args.nameAlias,
        "priorityOverride": args.priorityOverride,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContractSubjectOneWayFilter.
 */
export interface GetContractSubjectOneWayFilterArgs {
    action?: string;
    annotation?: string;
    contractSubjectDn: string;
    description?: string;
    directives?: string[];
    filterDn: string;
    id?: string;
    nameAlias?: string;
    priorityOverride?: string;
}

/**
 * A collection of values returned by getContractSubjectOneWayFilter.
 */
export interface GetContractSubjectOneWayFilterResult {
    readonly action: string;
    readonly annotation: string;
    readonly contractSubjectDn: string;
    readonly description: string;
    readonly directives: string[];
    readonly filterDn: string;
    readonly id: string;
    readonly nameAlias: string;
    readonly priorityOverride: string;
    readonly tnVzFilterName: string;
}
export function getContractSubjectOneWayFilterOutput(args: GetContractSubjectOneWayFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContractSubjectOneWayFilterResult> {
    return pulumi.output(args).apply((a: any) => getContractSubjectOneWayFilter(a, opts))
}

/**
 * A collection of arguments for invoking getContractSubjectOneWayFilter.
 */
export interface GetContractSubjectOneWayFilterOutputArgs {
    action?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    contractSubjectDn: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    directives?: pulumi.Input<pulumi.Input<string>[]>;
    filterDn: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    priorityOverride?: pulumi.Input<string>;
}
