// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudExternalNetworkVpnNetwork extends pulumi.CustomResource {
    /**
     * Get an existing CloudExternalNetworkVpnNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudExternalNetworkVpnNetworkState, opts?: pulumi.CustomResourceOptions): CloudExternalNetworkVpnNetwork {
        return new CloudExternalNetworkVpnNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/cloudExternalNetworkVpnNetwork:CloudExternalNetworkVpnNetwork';

    /**
     * Returns true if the given object is an instance of CloudExternalNetworkVpnNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudExternalNetworkVpnNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudExternalNetworkVpnNetwork.__pulumiType;
    }

    public readonly aciCloudExternalNetworkDn!: pulumi.Output<string>;
    public readonly annotation!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly ipsecTunnels!: pulumi.Output<outputs.CloudExternalNetworkVpnNetworkIpsecTunnel[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly remoteSiteId!: pulumi.Output<string>;
    public readonly remoteSiteName!: pulumi.Output<string>;

    /**
     * Create a CloudExternalNetworkVpnNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudExternalNetworkVpnNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudExternalNetworkVpnNetworkArgs | CloudExternalNetworkVpnNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudExternalNetworkVpnNetworkState | undefined;
            resourceInputs["aciCloudExternalNetworkDn"] = state ? state.aciCloudExternalNetworkDn : undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipsecTunnels"] = state ? state.ipsecTunnels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["remoteSiteId"] = state ? state.remoteSiteId : undefined;
            resourceInputs["remoteSiteName"] = state ? state.remoteSiteName : undefined;
        } else {
            const args = argsOrState as CloudExternalNetworkVpnNetworkArgs | undefined;
            if ((!args || args.aciCloudExternalNetworkDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aciCloudExternalNetworkDn'");
            }
            resourceInputs["aciCloudExternalNetworkDn"] = args ? args.aciCloudExternalNetworkDn : undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipsecTunnels"] = args ? args.ipsecTunnels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["remoteSiteId"] = args ? args.remoteSiteId : undefined;
            resourceInputs["remoteSiteName"] = args ? args.remoteSiteName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudExternalNetworkVpnNetwork.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudExternalNetworkVpnNetwork resources.
 */
export interface CloudExternalNetworkVpnNetworkState {
    aciCloudExternalNetworkDn?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ipsecTunnels?: pulumi.Input<pulumi.Input<inputs.CloudExternalNetworkVpnNetworkIpsecTunnel>[]>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    remoteSiteId?: pulumi.Input<string>;
    remoteSiteName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudExternalNetworkVpnNetwork resource.
 */
export interface CloudExternalNetworkVpnNetworkArgs {
    aciCloudExternalNetworkDn: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ipsecTunnels?: pulumi.Input<pulumi.Input<inputs.CloudExternalNetworkVpnNetworkIpsecTunnel>[]>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    remoteSiteId?: pulumi.Input<string>;
    remoteSiteName?: pulumi.Input<string>;
}
