// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFileRemotePath(args: GetFileRemotePathArgs, opts?: pulumi.InvokeOptions): Promise<GetFileRemotePathResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getFileRemotePath:getFileRemotePath", {
        "annotation": args.annotation,
        "authType": args.authType,
        "description": args.description,
        "host": args.host,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "protocol": args.protocol,
        "remotePath": args.remotePath,
        "remotePort": args.remotePort,
        "userName": args.userName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFileRemotePath.
 */
export interface GetFileRemotePathArgs {
    annotation?: string;
    authType?: string;
    description?: string;
    host?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    protocol?: string;
    remotePath?: string;
    remotePort?: string;
    userName?: string;
}

/**
 * A collection of values returned by getFileRemotePath.
 */
export interface GetFileRemotePathResult {
    readonly annotation: string;
    readonly authType: string;
    readonly description: string;
    readonly host: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly protocol: string;
    readonly remotePath: string;
    readonly remotePort: string;
    readonly userName: string;
}
export function getFileRemotePathOutput(args: GetFileRemotePathOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileRemotePathResult> {
    return pulumi.output(args).apply((a: any) => getFileRemotePath(a, opts))
}

/**
 * A collection of arguments for invoking getFileRemotePath.
 */
export interface GetFileRemotePathOutputArgs {
    annotation?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    remotePath?: pulumi.Input<string>;
    remotePort?: pulumi.Input<string>;
    userName?: pulumi.Input<string>;
}
