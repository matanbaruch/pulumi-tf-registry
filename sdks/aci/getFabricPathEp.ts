// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFabricPathEp(args: GetFabricPathEpArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricPathEpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getFabricPathEp:getFabricPathEp", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "nodeId": args.nodeId,
        "podId": args.podId,
        "vpc": args.vpc,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricPathEp.
 */
export interface GetFabricPathEpArgs {
    annotation?: string;
    description?: string;
    id?: string;
    name: string;
    nodeId: string;
    podId: string;
    vpc?: boolean;
}

/**
 * A collection of values returned by getFabricPathEp.
 */
export interface GetFabricPathEpResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly nodeId: string;
    readonly podId: string;
    readonly vpc?: boolean;
}
export function getFabricPathEpOutput(args: GetFabricPathEpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricPathEpResult> {
    return pulumi.output(args).apply((a: any) => getFabricPathEp(a, opts))
}

/**
 * A collection of arguments for invoking getFabricPathEp.
 */
export interface GetFabricPathEpOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodeId: pulumi.Input<string>;
    podId: pulumi.Input<string>;
    vpc?: pulumi.Input<boolean>;
}
