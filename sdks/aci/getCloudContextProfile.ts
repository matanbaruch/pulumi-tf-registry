// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCloudContextProfile(args: GetCloudContextProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudContextProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getCloudContextProfile:getCloudContextProfile", {
        "accessPolicyType": args.accessPolicyType,
        "annotation": args.annotation,
        "cloudBrownfield": args.cloudBrownfield,
        "cloudVendor": args.cloudVendor,
        "description": args.description,
        "hubNetwork": args.hubNetwork,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "primaryCidr": args.primaryCidr,
        "region": args.region,
        "relationCloudRsCtxToFlowLog": args.relationCloudRsCtxToFlowLog,
        "relationCloudRsToCtx": args.relationCloudRsToCtx,
        "tenantDn": args.tenantDn,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudContextProfile.
 */
export interface GetCloudContextProfileArgs {
    accessPolicyType?: string;
    annotation?: string;
    cloudBrownfield?: string;
    cloudVendor?: string;
    description?: string;
    hubNetwork?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    primaryCidr?: string;
    region?: string;
    relationCloudRsCtxToFlowLog?: string;
    relationCloudRsToCtx?: string;
    tenantDn: string;
    type?: string;
}

/**
 * A collection of values returned by getCloudContextProfile.
 */
export interface GetCloudContextProfileResult {
    readonly accessPolicyType?: string;
    readonly annotation: string;
    readonly cloudBrownfield?: string;
    readonly cloudVendor?: string;
    readonly description: string;
    readonly hubNetwork?: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly primaryCidr?: string;
    readonly region?: string;
    readonly relationCloudRsCtxToFlowLog?: string;
    readonly relationCloudRsToCtx?: string;
    readonly tenantDn: string;
    readonly type: string;
}
export function getCloudContextProfileOutput(args: GetCloudContextProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudContextProfileResult> {
    return pulumi.output(args).apply((a: any) => getCloudContextProfile(a, opts))
}

/**
 * A collection of arguments for invoking getCloudContextProfile.
 */
export interface GetCloudContextProfileOutputArgs {
    accessPolicyType?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    cloudBrownfield?: pulumi.Input<string>;
    cloudVendor?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    hubNetwork?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    primaryCidr?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    relationCloudRsCtxToFlowLog?: pulumi.Input<string>;
    relationCloudRsToCtx?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
