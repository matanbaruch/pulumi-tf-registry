// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMaintenancePolicy(args: GetMaintenancePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMaintenancePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getMaintenancePolicy:getMaintenancePolicy", {
        "adminSt": args.adminSt,
        "annotation": args.annotation,
        "description": args.description,
        "graceful": args.graceful,
        "id": args.id,
        "ignoreCompat": args.ignoreCompat,
        "internalLabel": args.internalLabel,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "notifCond": args.notifCond,
        "runMode": args.runMode,
        "version": args.version,
        "versionCheckOverride": args.versionCheckOverride,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMaintenancePolicy.
 */
export interface GetMaintenancePolicyArgs {
    adminSt?: string;
    annotation?: string;
    description?: string;
    graceful?: string;
    id?: string;
    ignoreCompat?: string;
    internalLabel?: string;
    name: string;
    nameAlias?: string;
    notifCond?: string;
    runMode?: string;
    version?: string;
    versionCheckOverride?: string;
}

/**
 * A collection of values returned by getMaintenancePolicy.
 */
export interface GetMaintenancePolicyResult {
    readonly adminSt: string;
    readonly annotation: string;
    readonly description: string;
    readonly graceful: string;
    readonly id: string;
    readonly ignoreCompat: string;
    readonly internalLabel: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly notifCond: string;
    readonly runMode: string;
    readonly version: string;
    readonly versionCheckOverride: string;
}
export function getMaintenancePolicyOutput(args: GetMaintenancePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMaintenancePolicyResult> {
    return pulumi.output(args).apply((a: any) => getMaintenancePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getMaintenancePolicy.
 */
export interface GetMaintenancePolicyOutputArgs {
    adminSt?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    graceful?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ignoreCompat?: pulumi.Input<string>;
    internalLabel?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    notifCond?: pulumi.Input<string>;
    runMode?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    versionCheckOverride?: pulumi.Input<string>;
}
