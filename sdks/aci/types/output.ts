// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ActionRuleProfileSetAsPathPrependA {
    /**
     * ASN must be between 0 and 2147483647
     */
    asn: string;
    /**
     * Order must be between 0 and 31
     */
    order: string;
}

export interface ApplicationEpgRelationFvRsNodeAtt {
    deploymentImmediacy?: string;
    description: string;
    encap: string;
    mode?: string;
    nodeDn: string;
}

export interface BgpPeerConnectivityProfileRelationBgpRsPeerToProfile {
    direction: string;
    targetDn: string;
}

export interface BridgeDomainRelationFvRsBdToNetflowMonitorPol {
    fltType: string;
    tnNetflowMonitorPolName: string;
}

export interface BulkEpgToStaticPathStaticPath {
    deploymentImmediacy?: string;
    description?: string;
    encap: string;
    interfaceDn: string;
    mode?: string;
    primaryEncap?: string;
}

export interface CloudExternalNetworkVpnNetworkIpsecTunnel {
    bgpPeerAsn: string;
    ikeVersion?: string;
    preSharedKey: string;
    publicIpAddress: string;
    sourceInterfaces: string[];
    subnetPoolName: string;
}

export interface CloudL4L7ThirdPartyDeviceInterfaceSelector {
    allowAll: string;
    endPointSelectors?: outputs.CloudL4L7ThirdPartyDeviceInterfaceSelectorEndPointSelector[];
    name: string;
}

export interface CloudL4L7ThirdPartyDeviceInterfaceSelectorEndPointSelector {
    matchExpression: string;
    name: string;
}

export interface CloudServiceEpgRelationFvRsCon {
    prio: string;
    targetDn: string;
}

export interface CloudServiceEpgRelationFvRsConsIf {
    prio: string;
    targetDn: string;
}

export interface CloudServiceEpgRelationFvRsProv {
    labelMatchCriteria: string;
    prio: string;
    targetDn: string;
}

export interface CloudVrfLeakRoutesLeakTo {
    vrfDn: string;
}

export interface ContractFilter {
    annotation: string;
    description: string;
    filterEntries?: outputs.ContractFilterFilterEntry[];
    filterName: string;
    id: string;
    nameAlias: string;
}

export interface ContractFilterFilterEntry {
    annotation: string;
    applyToFrag: string;
    arpOpc: string;
    dFromPort: string;
    dToPort: string;
    description: string;
    /**
     * @deprecated Deprecated
     */
    entryAnnotation: string;
    /**
     * @deprecated Deprecated
     */
    entryDescription: string;
    entryNameAlias: string;
    etherT: string;
    filterEntryName: string;
    icmpv4T: string;
    icmpv6T: string;
    id: string;
    matchDscp: string;
    prot: string;
    sFromPort: string;
    sToPort: string;
    stateful: string;
    tcpRules: string;
}

export interface ContractSubjectConsumerToProvider {
    id: string;
    prio: string;
    /**
     * Create relation to vzFilter
     */
    relationVzRsFiltAtts?: outputs.ContractSubjectConsumerToProviderRelationVzRsFiltAtt[];
    relationVzRsInTermGraphAtt: string;
    targetDscp: string;
}

export interface ContractSubjectConsumerToProviderRelationVzRsFiltAtt {
    action: string;
    directives: string[];
    filterDn: string;
    priorityOverride: string;
}

export interface ContractSubjectProviderToConsumer {
    id: string;
    prio: string;
    /**
     * Create relation to vzFilter
     */
    relationVzRsFiltAtts?: outputs.ContractSubjectProviderToConsumerRelationVzRsFiltAtt[];
    relationVzRsOutTermGraphAtt: string;
    targetDscp: string;
}

export interface ContractSubjectProviderToConsumerRelationVzRsFiltAtt {
    action: string;
    directives: string[];
    filterDn: string;
    priorityOverride: string;
}

export interface DhcpOptionPolicyDhcpOption {
    annotation?: string;
    data: string;
    dhcpOptionId: string;
    id: string;
    name: string;
    nameAlias: string;
}

export interface DhcpRelayPolicyRelationDhcpRsProv {
    addr: string;
    tdn: string;
}

export interface EndpointSecurityGroupRelationFvRsCon {
    prio?: string;
    targetDn: string;
}

export interface EndpointSecurityGroupRelationFvRsConsIf {
    prio?: string;
    targetDn: string;
}

export interface EndpointSecurityGroupRelationFvRsProv {
    matchT?: string;
    prio?: string;
    targetDn: string;
}

export interface EndpointTagIpAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface EndpointTagIpTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface EndpointTagMacAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface EndpointTagMacTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface ErrorDisableRecoveryEdrEvent {
    annotation: string;
    description: string;
    event: string;
    id: string;
    name: string;
    nameAlias: string;
    recover: string;
}

export interface ExternalManagementNetworkInstanceProfileAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface ExternalManagementNetworkInstanceProfileRelationToConsumedOutOfBandContract {
    /**
     * The annotation of the Relation To Consumed Out Of Band Contract object.
     */
    annotation: string;
    /**
     * The name of the Out Of Band Contract object.
     */
    outOfBandContractName: string;
    /**
     * The Quality of service (QoS) priority class ID. QoS refers to the capability of a network to provide better service to selected network traffic over various technologies. The primary goal of QoS is to provide priority including dedicated bandwidth, controlled jitter and latency (required by some real-time and interactive traffic), and improved loss characteristics. You can configure the bandwidth of each QoS level using QoS profiles.
     */
    priority: string;
}

export interface ExternalManagementNetworkInstanceProfileTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface ExternalManagementNetworkSubnetAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface ExternalManagementNetworkSubnetTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface ExternalNetworkInstanceProfileRelationL3extRsInstPToProfile {
    direction?: string;
    tnRtctrlProfileDn?: string;
    /**
     * @deprecated Deprecated
     */
    tnRtctrlProfileName?: string;
}

export interface GetActionRuleProfileSetAsPathPrependA {
    asn?: string;
    order?: string;
}

export interface GetClientEndPointFvcepObject {
    applicationProfileName: string;
    baseEpg?: {[key: string]: string};
    endpointPaths: string[];
    epgName: string;
    esgName: string;
    instanceProfileName: string;
    ip: string;
    ips: string[];
    l2outName: string;
    mac: string;
    name: string;
    tenantName: string;
    vlan: string;
    vrfName: string;
}

export interface GetCloudExternalNetworkVpnNetworkIpsecTunnel {
    bgpPeerAsn: string;
    ikeVersion: string;
    preSharedKey: string;
    publicIpAddress: string;
    sourceInterfaces: string[];
    subnetPoolName: string;
}

export interface GetCloudL4L7ThirdPartyDeviceInterfaceSelector {
    allowAll: string;
    endPointSelectors: outputs.GetCloudL4L7ThirdPartyDeviceInterfaceSelectorEndPointSelector[];
    name: string;
}

export interface GetCloudL4L7ThirdPartyDeviceInterfaceSelectorEndPointSelector {
    matchExpression: string;
    name: string;
}

export interface GetCloudServiceEpgRelationFvRsCon {
    prio: string;
    targetDn: string;
}

export interface GetCloudServiceEpgRelationFvRsConsIf {
    prio: string;
    targetDn: string;
}

export interface GetCloudServiceEpgRelationFvRsProv {
    labelMatchCriteria: string;
    prio: string;
    targetDn: string;
}

export interface GetCloudVrfLeakRoutesLeakTo {
    vrfDn?: string;
}

export interface GetContractSubjectConsumerToProvider {
    id: string;
    prio: string;
    /**
     * Represent a relation to vzFilter
     */
    relationVzRsFiltAtts?: outputs.GetContractSubjectConsumerToProviderRelationVzRsFiltAtt[];
    relationVzRsInTermGraphAtt: string;
    targetDscp: string;
}

export interface GetContractSubjectConsumerToProviderRelationVzRsFiltAtt {
    action: string;
    directives: string[];
    filterDn: string;
    priorityOverride: string;
}

export interface GetContractSubjectProviderToConsumer {
    id: string;
    prio: string;
    /**
     * Represent a relation to vzFilter
     */
    relationVzRsFiltAtts?: outputs.GetContractSubjectProviderToConsumerRelationVzRsFiltAtt[];
    relationVzRsOutTermGraphAtt: string;
    targetDscp: string;
}

export interface GetContractSubjectProviderToConsumerRelationVzRsFiltAtt {
    action: string;
    directives: string[];
    filterDn: string;
    priorityOverride: string;
}

export interface GetEndpointTagIpAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetEndpointTagIpTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetEndpointTagMacAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetEndpointTagMacTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetErrorDisableRecoveryEdrEvent {
    annotation: string;
    description: string;
    event: string;
    id: string;
    name: string;
    nameAlias: string;
    recover: string;
}

export interface GetExternalManagementNetworkInstanceProfileAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetExternalManagementNetworkInstanceProfileRelationToConsumedOutOfBandContract {
    /**
     * The annotation of the Relation To Consumed Out Of Band Contract object.
     */
    annotation: string;
    /**
     * The name of the Out Of Band Contract object.
     */
    outOfBandContractName: string;
    /**
     * The Quality of service (QoS) priority class ID. QoS refers to the capability of a network to provide better service to selected network traffic over various technologies. The primary goal of QoS is to provide priority including dedicated bandwidth, controlled jitter and latency (required by some real-time and interactive traffic), and improved loss characteristics. You can configure the bandwidth of each QoS level using QoS profiles.
     */
    priority: string;
}

export interface GetExternalManagementNetworkInstanceProfileTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetExternalManagementNetworkSubnetAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetExternalManagementNetworkSubnetTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetExternalNetworkInstanceProfileRelationL3extRsInstPToProfile {
    direction: string;
    tnRtctrlProfileDn: string;
}

export interface GetL3ExtSubnetRelationL3extRsSubnetToProfile {
    direction?: string;
    tnRtctrlProfileDn?: string;
    tnRtctrlProfileName?: string;
}

export interface GetL3OutsideDefaultRouteLeakPolicy {
    always: string;
    annotation: string;
    criteria: string;
    scopes: string[];
}

export interface GetL3OutsideRelationL3extRsDampeningPol {
    af: string;
    tnRtctrlProfileDn: string;
}

export interface GetL3OutsideRelationL3extrsRedistributePol {
    source: string;
    targetDn: string;
}

export interface GetL3outConsumerLabelAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outConsumerLabelTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outFloatingSviRelationL3extRsDynPathAtt {
    encap: string;
    enhancedLagPolicyDn: string;
    floatingAddress: string;
    forgedTransmit: string;
    macChange: string;
    promiscuousMode: string;
    tdn: string;
}

export interface GetL3outNodeSidProfileAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outNodeSidProfileTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outProviderLabelAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outProviderLabelTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outRedistributePolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL3outRedistributePolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetL4L7DeviceRelationVnsRsAlDevToDomP {
    domainDn?: string;
    switchingMode?: string;
}

export interface GetLeafAccessBundlePolicyGroupRelationInfraRsNetflowMonitorPol {
    fltType?: string;
    targetDn?: string;
}

export interface GetLeafProfileLeafSelector {
    description?: string;
    id?: string;
    name?: string;
    nodeBlocks?: outputs.GetLeafProfileLeafSelectorNodeBlock[];
    switchAssociationType?: string;
}

export interface GetLeafProfileLeafSelectorNodeBlock {
    description?: string;
    from_?: string;
    id?: string;
    name?: string;
    to_?: string;
}

export interface GetLogicalInterfaceProfileRelationL3extRsLIfPToNetflowMonitorPol {
    fltType: string;
    tnNetflowMonitorPolDn: string;
    tnNetflowMonitorPolName: string;
}

export interface GetMatchCommunityTermsMatchCommunityFactor {
    community: string;
    description: string;
    scope: string;
}

export interface GetMulticastPoolMulticastAddressBlock {
    annotation: string;
    description: string;
    from?: string;
    name?: string;
    nameAlias: string;
    to?: string;
}

export interface GetNetflowMonitorPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetNetflowMonitorPolicyRelationToNetflowExporter {
    /**
     * The annotation of the Relation To Netflow Exporter object.
     */
    annotation: string;
    /**
     * Name.
     */
    netflowExporterPolicyName: string;
}

export interface GetNetflowMonitorPolicyRelationToNetflowRecord {
    /**
     * The annotation of the Relation To Netflow Record object.
     */
    annotation: string;
    /**
     * Name.
     */
    netflowRecordPolicyName: string;
}

export interface GetNetflowMonitorPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetNetflowRecordPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetNetflowRecordPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetOutOfBandContractAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetOutOfBandContractTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetPimRouteMapEntryAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetPimRouteMapEntryTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetPimRouteMapPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetPimRouteMapPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRelationToConsumedOutOfBandContractAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRelationToConsumedOutOfBandContractTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRelationToFallbackRouteGroupAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRelationToFallbackRouteGroupTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRelationToNetflowExporterAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRelationToNetflowExporterTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetRestChildren {
    childClassName: string;
    childContent: {[key: string]: string};
}

export interface GetRestManagedChild {
    /**
     * Class name of child object.
     */
    className: string;
    /**
     * Map of key-value pairs which represents the attributes for the child object.
     */
    content: {[key: string]: string};
    /**
     * The relative name of the child object.
     */
    rn: string;
}

export interface GetSubnetMsnlb {
    group?: string;
    mac?: string;
    mode?: string;
}

export interface GetVrfFallbackRouteGroupAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetVrfFallbackRouteGroupMemberAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetVrfFallbackRouteGroupMemberTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetVrfFallbackRouteGroupTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface GetVrfFallbackRouteGroupVrfFallbackRouteGroupMember {
    /**
     * The annotation of the VRF Fallback Route Group Member object.
     */
    annotation: string;
    /**
     * The description of the VRF Fallback Route Group Member object.
     */
    description: string;
    /**
     * The address of the VRF Fallback Route Group Member object.
     */
    fallbackMember: string;
    /**
     * The name of the VRF Fallback Route Group Member object.
     */
    name: string;
    /**
     * The name alias of the VRF Fallback Route Group Member object.
     */
    nameAlias: string;
}

export interface GetVrfLeakEpgBdSubnetLeakTo {
    allowL3outAdvertisement?: string;
    vrfDn?: string;
}

export interface L3ExtSubnetRelationL3extRsSubnetToProfile {
    direction: string;
    tnRtctrlProfileDn?: string;
    /**
     * @deprecated Deprecated
     */
    tnRtctrlProfileName?: string;
}

export interface L3OutsideDefaultRouteLeakPolicy {
    always: string;
    annotation: string;
    criteria: string;
    scopes: string[];
}

export interface L3OutsideRelationL3extRsDampeningPol {
    af?: string;
    tnRtctrlProfileDn?: string;
    /**
     * @deprecated Deprecated
     */
    tnRtctrlProfileName?: string;
}

export interface L3OutsideRelationL3extrsRedistributePol {
    source?: string;
    targetDn: string;
}

export interface L3outConsumerLabelAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outConsumerLabelTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outFloatingSviRelationL3extRsDynPathAtt {
    encap?: string;
    enhancedLagPolicyDn?: string;
    floatingAddress: string;
    forgedTransmit?: string;
    macChange?: string;
    promiscuousMode?: string;
    tdn: string;
}

export interface L3outNodeSidProfileAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outNodeSidProfileTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outProviderLabelAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outProviderLabelTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outRedistributePolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L3outRedistributePolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface L4L7DeviceRelationVnsRsAlDevToDomP {
    domainDn: string;
    switchingMode?: string;
}

export interface LeafAccessBundlePolicyGroupRelationInfraRsNetflowMonitorPol {
    fltType: string;
    targetDn: string;
}

export interface LeafAccessPortPolicyGroupRelationInfraRsNetflowMonitorPol {
    fltType: string;
    targetDn: string;
}

export interface LeafProfileLeafSelector {
    description: string;
    id: string;
    name: string;
    nodeBlocks?: outputs.LeafProfileLeafSelectorNodeBlock[];
    switchAssociationType: string;
}

export interface LeafProfileLeafSelectorNodeBlock {
    description: string;
    from_: string;
    id: string;
    name: string;
    to_: string;
}

export interface LogicalInterfaceProfileRelationL3extRsLIfPToNetflowMonitorPol {
    fltType: string;
    tnNetflowMonitorPolDn?: string;
    /**
     * @deprecated Deprecated
     */
    tnNetflowMonitorPolName?: string;
}

export interface MatchCommunityTermsMatchCommunityFactor {
    community: string;
    description: string;
    scope: string;
}

export interface MulticastPoolMulticastAddressBlock {
    annotation: string;
    description: string;
    dn: string;
    from: string;
    name?: string;
    nameAlias: string;
    to: string;
}

export interface NetflowMonitorPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface NetflowMonitorPolicyRelationToNetflowExporter {
    /**
     * The annotation of the Relation To Netflow Exporter object.
     */
    annotation: string;
    /**
     * Name.
     */
    netflowExporterPolicyName: string;
}

export interface NetflowMonitorPolicyRelationToNetflowRecord {
    /**
     * The annotation of the Relation To Netflow Record object.
     */
    annotation: string;
    /**
     * Name.
     */
    netflowRecordPolicyName: string;
}

export interface NetflowMonitorPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface NetflowRecordPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface NetflowRecordPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface OutOfBandContractAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface OutOfBandContractTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface PimRouteMapEntryAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface PimRouteMapEntryTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface PimRouteMapPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface PimRouteMapPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RelationToConsumedOutOfBandContractAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RelationToConsumedOutOfBandContractTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RelationToFallbackRouteGroupAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RelationToFallbackRouteGroupTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RelationToNetflowExporterAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RelationToNetflowExporterTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface RestManagedChild {
    /**
     * Class name of child object.
     */
    className: string;
    /**
     * Map of key-value pairs which represents the attributes for the child object.
     */
    content: {[key: string]: string};
    /**
     * The relative name of the child object.
     */
    rn: string;
}

export interface SpineProfileSpineSelector {
    description: string;
    id: string;
    name: string;
    nodeBlocks?: outputs.SpineProfileSpineSelectorNodeBlock[];
    switchAssociationType: string;
}

export interface SpineProfileSpineSelectorNodeBlock {
    description: string;
    from_: string;
    id: string;
    name: string;
    to_: string;
}

export interface SubnetMsnlb {
    group?: string;
    mac?: string;
    mode?: string;
}

export interface VmmControllerRelationVmmRsVmmCtrlrP {
    epgDeplPref?: string;
    targetDn: string;
}

export interface VrfFallbackRouteGroupAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface VrfFallbackRouteGroupMemberAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface VrfFallbackRouteGroupMemberTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface VrfFallbackRouteGroupTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: string;
    /**
     * The value of the property.
     */
    value: string;
}

export interface VrfFallbackRouteGroupVrfFallbackRouteGroupMember {
    /**
     * The annotation of the VRF Fallback Route Group Member object.
     */
    annotation: string;
    /**
     * The description of the VRF Fallback Route Group Member object.
     */
    description: string;
    /**
     * The address of the VRF Fallback Route Group Member object.
     */
    fallbackMember: string;
    /**
     * The name of the VRF Fallback Route Group Member object.
     */
    name: string;
    /**
     * The name alias of the VRF Fallback Route Group Member object.
     */
    nameAlias: string;
}

export interface VrfLeakEpgBdSubnetLeakTo {
    /**
     * Must be set as true for the Cloud APIC
     */
    allowL3outAdvertisement?: string;
    vrfDn: string;
}

export interface VrfRelationFvRsCtxToBgpCtxAfPol {
    af: string;
    tnBgpCtxAfPolName: string;
}

export interface VrfRelationFvRsCtxToEigrpCtxAfPol {
    af: string;
    tnEigrpCtxAfPolName: string;
}

export interface VrfRelationFvRsCtxToOspfCtxPol {
    af: string;
    tnOspfCtxPolName: string;
}

export interface VswitchPolicyRelationVmmRsVswitchExporterPol {
    activeFlowTimeOut?: string;
    idleFlowTimeOut?: string;
    samplingRate?: string;
    targetDn: string;
}

