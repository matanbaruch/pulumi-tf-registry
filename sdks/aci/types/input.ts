// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ActionRuleProfileSetAsPathPrependA {
    /**
     * ASN must be between 0 and 2147483647
     */
    asn: pulumi.Input<string>;
    /**
     * Order must be between 0 and 31
     */
    order: pulumi.Input<string>;
}

export interface ApplicationEpgRelationFvRsNodeAtt {
    deploymentImmediacy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    encap: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    nodeDn: pulumi.Input<string>;
}

export interface BgpPeerConnectivityProfileRelationBgpRsPeerToProfile {
    direction: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface BridgeDomainRelationFvRsBdToNetflowMonitorPol {
    fltType: pulumi.Input<string>;
    tnNetflowMonitorPolName: pulumi.Input<string>;
}

export interface BulkEpgToStaticPathStaticPath {
    deploymentImmediacy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    encap: pulumi.Input<string>;
    interfaceDn: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    primaryEncap?: pulumi.Input<string>;
}

export interface CloudExternalNetworkVpnNetworkIpsecTunnel {
    bgpPeerAsn: pulumi.Input<string>;
    ikeVersion?: pulumi.Input<string>;
    preSharedKey?: pulumi.Input<string>;
    publicIpAddress: pulumi.Input<string>;
    sourceInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    subnetPoolName: pulumi.Input<string>;
}

export interface CloudL4L7ThirdPartyDeviceInterfaceSelector {
    allowAll?: pulumi.Input<string>;
    endPointSelectors?: pulumi.Input<pulumi.Input<inputs.CloudL4L7ThirdPartyDeviceInterfaceSelectorEndPointSelector>[]>;
    name: pulumi.Input<string>;
}

export interface CloudL4L7ThirdPartyDeviceInterfaceSelectorEndPointSelector {
    matchExpression: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface CloudServiceEpgRelationFvRsCon {
    prio?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface CloudServiceEpgRelationFvRsConsIf {
    prio?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface CloudServiceEpgRelationFvRsProv {
    labelMatchCriteria?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface CloudVrfLeakRoutesLeakTo {
    vrfDn: pulumi.Input<string>;
}

export interface ContractFilter {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    filterEntries?: pulumi.Input<pulumi.Input<inputs.ContractFilterFilterEntry>[]>;
    filterName: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
}

export interface ContractFilterFilterEntry {
    annotation?: pulumi.Input<string>;
    applyToFrag?: pulumi.Input<string>;
    arpOpc?: pulumi.Input<string>;
    dFromPort?: pulumi.Input<string>;
    dToPort?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    entryAnnotation?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    entryDescription?: pulumi.Input<string>;
    entryNameAlias?: pulumi.Input<string>;
    etherT?: pulumi.Input<string>;
    filterEntryName: pulumi.Input<string>;
    icmpv4T?: pulumi.Input<string>;
    icmpv6T?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    matchDscp?: pulumi.Input<string>;
    prot?: pulumi.Input<string>;
    sFromPort?: pulumi.Input<string>;
    sToPort?: pulumi.Input<string>;
    stateful?: pulumi.Input<string>;
    tcpRules?: pulumi.Input<string>;
}

export interface ContractSubjectConsumerToProvider {
    id?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    /**
     * Create relation to vzFilter
     */
    relationVzRsFiltAtts?: pulumi.Input<pulumi.Input<inputs.ContractSubjectConsumerToProviderRelationVzRsFiltAtt>[]>;
    relationVzRsInTermGraphAtt?: pulumi.Input<string>;
    targetDscp?: pulumi.Input<string>;
}

export interface ContractSubjectConsumerToProviderRelationVzRsFiltAtt {
    action?: pulumi.Input<string>;
    directives?: pulumi.Input<pulumi.Input<string>[]>;
    filterDn: pulumi.Input<string>;
    priorityOverride?: pulumi.Input<string>;
}

export interface ContractSubjectProviderToConsumer {
    id?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    /**
     * Create relation to vzFilter
     */
    relationVzRsFiltAtts?: pulumi.Input<pulumi.Input<inputs.ContractSubjectProviderToConsumerRelationVzRsFiltAtt>[]>;
    relationVzRsOutTermGraphAtt?: pulumi.Input<string>;
    targetDscp?: pulumi.Input<string>;
}

export interface ContractSubjectProviderToConsumerRelationVzRsFiltAtt {
    action?: pulumi.Input<string>;
    directives?: pulumi.Input<pulumi.Input<string>[]>;
    filterDn: pulumi.Input<string>;
    priorityOverride?: pulumi.Input<string>;
}

export interface DhcpOptionPolicyDhcpOption {
    annotation?: pulumi.Input<string>;
    data?: pulumi.Input<string>;
    dhcpOptionId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
}

export interface DhcpRelayPolicyRelationDhcpRsProv {
    addr: pulumi.Input<string>;
    tdn: pulumi.Input<string>;
}

export interface EndpointSecurityGroupRelationFvRsCon {
    prio?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface EndpointSecurityGroupRelationFvRsConsIf {
    prio?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface EndpointSecurityGroupRelationFvRsProv {
    matchT?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface EndpointTagIpAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface EndpointTagIpTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface EndpointTagMacAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface EndpointTagMacTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface ErrorDisableRecoveryEdrEvent {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    event: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    recover?: pulumi.Input<string>;
}

export interface ExternalManagementNetworkInstanceProfileAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface ExternalManagementNetworkInstanceProfileRelationToConsumedOutOfBandContract {
    /**
     * The annotation of the Relation To Consumed Out Of Band Contract object.
     */
    annotation?: pulumi.Input<string>;
    /**
     * The name of the Out Of Band Contract object.
     */
    outOfBandContractName: pulumi.Input<string>;
    /**
     * The Quality of service (QoS) priority class ID. QoS refers to the capability of a network to provide better service to selected network traffic over various technologies. The primary goal of QoS is to provide priority including dedicated bandwidth, controlled jitter and latency (required by some real-time and interactive traffic), and improved loss characteristics. You can configure the bandwidth of each QoS level using QoS profiles.
     */
    priority?: pulumi.Input<string>;
}

export interface ExternalManagementNetworkInstanceProfileTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface ExternalManagementNetworkSubnetAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface ExternalManagementNetworkSubnetTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface ExternalNetworkInstanceProfileRelationL3extRsInstPToProfile {
    direction?: pulumi.Input<string>;
    tnRtctrlProfileDn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    tnRtctrlProfileName?: pulumi.Input<string>;
}

export interface GetActionRuleProfileSetAsPathPrependA {
    asn?: string;
    order?: string;
}

export interface GetActionRuleProfileSetAsPathPrependAArgs {
    asn?: pulumi.Input<string>;
    order?: pulumi.Input<string>;
}

export interface GetClientEndPointFvcepObject {
    applicationProfileName?: string;
    baseEpg?: {[key: string]: string};
    endpointPaths?: string[];
    epgName?: string;
    esgName?: string;
    instanceProfileName?: string;
    ip?: string;
    ips?: string[];
    l2outName?: string;
    mac?: string;
    name?: string;
    tenantName?: string;
    vlan?: string;
    vrfName?: string;
}

export interface GetClientEndPointFvcepObjectArgs {
    applicationProfileName?: pulumi.Input<string>;
    baseEpg?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    endpointPaths?: pulumi.Input<pulumi.Input<string>[]>;
    epgName?: pulumi.Input<string>;
    esgName?: pulumi.Input<string>;
    instanceProfileName?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    l2outName?: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tenantName?: pulumi.Input<string>;
    vlan?: pulumi.Input<string>;
    vrfName?: pulumi.Input<string>;
}

export interface GetCloudExternalNetworkVpnNetworkIpsecTunnel {
    bgpPeerAsn: string;
    ikeVersion: string;
    preSharedKey?: string;
    publicIpAddress: string;
    sourceInterfaces?: string[];
    subnetPoolName: string;
}

export interface GetCloudExternalNetworkVpnNetworkIpsecTunnelArgs {
    bgpPeerAsn: pulumi.Input<string>;
    ikeVersion: pulumi.Input<string>;
    preSharedKey?: pulumi.Input<string>;
    publicIpAddress: pulumi.Input<string>;
    sourceInterfaces?: pulumi.Input<pulumi.Input<string>[]>;
    subnetPoolName: pulumi.Input<string>;
}

export interface GetCloudVrfLeakRoutesLeakTo {
    vrfDn?: string;
}

export interface GetCloudVrfLeakRoutesLeakToArgs {
    vrfDn?: pulumi.Input<string>;
}

export interface GetContractSubjectConsumerToProvider {
    id?: string;
    prio?: string;
    /**
     * Represent a relation to vzFilter
     */
    relationVzRsFiltAtts?: inputs.GetContractSubjectConsumerToProviderRelationVzRsFiltAtt[];
    relationVzRsInTermGraphAtt?: string;
    targetDscp?: string;
}

export interface GetContractSubjectConsumerToProviderArgs {
    id?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    /**
     * Represent a relation to vzFilter
     */
    relationVzRsFiltAtts?: pulumi.Input<pulumi.Input<inputs.GetContractSubjectConsumerToProviderRelationVzRsFiltAttArgs>[]>;
    relationVzRsInTermGraphAtt?: pulumi.Input<string>;
    targetDscp?: pulumi.Input<string>;
}

export interface GetContractSubjectConsumerToProviderRelationVzRsFiltAtt {
    action?: string;
    directives?: string[];
    filterDn?: string;
    priorityOverride?: string;
}

export interface GetContractSubjectConsumerToProviderRelationVzRsFiltAttArgs {
    action?: pulumi.Input<string>;
    directives?: pulumi.Input<pulumi.Input<string>[]>;
    filterDn?: pulumi.Input<string>;
    priorityOverride?: pulumi.Input<string>;
}

export interface GetContractSubjectProviderToConsumer {
    id?: string;
    prio?: string;
    /**
     * Represent a relation to vzFilter
     */
    relationVzRsFiltAtts?: inputs.GetContractSubjectProviderToConsumerRelationVzRsFiltAtt[];
    relationVzRsOutTermGraphAtt?: string;
    targetDscp?: string;
}

export interface GetContractSubjectProviderToConsumerArgs {
    id?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    /**
     * Represent a relation to vzFilter
     */
    relationVzRsFiltAtts?: pulumi.Input<pulumi.Input<inputs.GetContractSubjectProviderToConsumerRelationVzRsFiltAttArgs>[]>;
    relationVzRsOutTermGraphAtt?: pulumi.Input<string>;
    targetDscp?: pulumi.Input<string>;
}

export interface GetContractSubjectProviderToConsumerRelationVzRsFiltAtt {
    action?: string;
    directives?: string[];
    filterDn?: string;
    priorityOverride?: string;
}

export interface GetContractSubjectProviderToConsumerRelationVzRsFiltAttArgs {
    action?: pulumi.Input<string>;
    directives?: pulumi.Input<pulumi.Input<string>[]>;
    filterDn?: pulumi.Input<string>;
    priorityOverride?: pulumi.Input<string>;
}

export interface GetErrorDisableRecoveryEdrEvent {
    annotation?: string;
    description?: string;
    event?: string;
    id?: string;
    name?: string;
    nameAlias?: string;
    recover?: string;
}

export interface GetErrorDisableRecoveryEdrEventArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    event?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    recover?: pulumi.Input<string>;
}

export interface GetExternalNetworkInstanceProfileRelationL3extRsInstPToProfile {
    direction?: string;
    tnRtctrlProfileDn?: string;
}

export interface GetExternalNetworkInstanceProfileRelationL3extRsInstPToProfileArgs {
    direction?: pulumi.Input<string>;
    tnRtctrlProfileDn?: pulumi.Input<string>;
}

export interface GetL3ExtSubnetRelationL3extRsSubnetToProfile {
    direction?: string;
    tnRtctrlProfileDn?: string;
    tnRtctrlProfileName?: string;
}

export interface GetL3ExtSubnetRelationL3extRsSubnetToProfileArgs {
    direction?: pulumi.Input<string>;
    tnRtctrlProfileDn?: pulumi.Input<string>;
    tnRtctrlProfileName?: pulumi.Input<string>;
}

export interface GetL4L7DeviceRelationVnsRsAlDevToDomP {
    domainDn?: string;
    switchingMode?: string;
}

export interface GetL4L7DeviceRelationVnsRsAlDevToDomPArgs {
    domainDn?: pulumi.Input<string>;
    switchingMode?: pulumi.Input<string>;
}

export interface GetLeafAccessBundlePolicyGroupRelationInfraRsNetflowMonitorPol {
    fltType?: string;
    targetDn?: string;
}

export interface GetLeafAccessBundlePolicyGroupRelationInfraRsNetflowMonitorPolArgs {
    fltType?: pulumi.Input<string>;
    targetDn?: pulumi.Input<string>;
}

export interface GetLeafProfileLeafSelector {
    description?: string;
    id?: string;
    name?: string;
    nodeBlocks?: inputs.GetLeafProfileLeafSelectorNodeBlock[];
    switchAssociationType?: string;
}

export interface GetLeafProfileLeafSelectorArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nodeBlocks?: pulumi.Input<pulumi.Input<inputs.GetLeafProfileLeafSelectorNodeBlockArgs>[]>;
    switchAssociationType?: pulumi.Input<string>;
}

export interface GetLeafProfileLeafSelectorNodeBlock {
    description?: string;
    from_?: string;
    id?: string;
    name?: string;
    to_?: string;
}

export interface GetLeafProfileLeafSelectorNodeBlockArgs {
    description?: pulumi.Input<string>;
    from_?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    to_?: pulumi.Input<string>;
}

export interface GetMatchCommunityTermsMatchCommunityFactor {
    community: string;
    description?: string;
    scope?: string;
}

export interface GetMatchCommunityTermsMatchCommunityFactorArgs {
    community: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}

export interface GetMulticastPoolMulticastAddressBlock {
    annotation?: string;
    description?: string;
    from?: string;
    name?: string;
    nameAlias?: string;
    to?: string;
}

export interface GetMulticastPoolMulticastAddressBlockArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    from?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    to?: pulumi.Input<string>;
}

export interface GetRestChildren {
    childClassName?: string;
    childContent?: {[key: string]: string};
}

export interface GetRestChildrenArgs {
    childClassName?: pulumi.Input<string>;
    childContent?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetRestManagedChild {
    /**
     * Class name of child object.
     */
    className?: string;
    /**
     * Map of key-value pairs which represents the attributes for the child object.
     */
    content?: {[key: string]: string};
    /**
     * The relative name of the child object.
     */
    rn?: string;
}

export interface GetRestManagedChildArgs {
    /**
     * Class name of child object.
     */
    className?: pulumi.Input<string>;
    /**
     * Map of key-value pairs which represents the attributes for the child object.
     */
    content?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The relative name of the child object.
     */
    rn?: pulumi.Input<string>;
}

export interface GetSubnetMsnlb {
    group?: string;
    mac?: string;
    mode?: string;
}

export interface GetSubnetMsnlbArgs {
    group?: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface GetVrfLeakEpgBdSubnetLeakTo {
    allowL3outAdvertisement?: string;
    vrfDn?: string;
}

export interface GetVrfLeakEpgBdSubnetLeakToArgs {
    allowL3outAdvertisement?: pulumi.Input<string>;
    vrfDn?: pulumi.Input<string>;
}

export interface L3ExtSubnetRelationL3extRsSubnetToProfile {
    direction: pulumi.Input<string>;
    tnRtctrlProfileDn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    tnRtctrlProfileName?: pulumi.Input<string>;
}

export interface L3OutsideDefaultRouteLeakPolicy {
    always?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    criteria?: pulumi.Input<string>;
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface L3OutsideRelationL3extRsDampeningPol {
    af?: pulumi.Input<string>;
    tnRtctrlProfileDn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    tnRtctrlProfileName?: pulumi.Input<string>;
}

export interface L3OutsideRelationL3extrsRedistributePol {
    source?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface L3outConsumerLabelAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outConsumerLabelTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outFloatingSviRelationL3extRsDynPathAtt {
    encap?: pulumi.Input<string>;
    enhancedLagPolicyDn?: pulumi.Input<string>;
    floatingAddress: pulumi.Input<string>;
    forgedTransmit?: pulumi.Input<string>;
    macChange?: pulumi.Input<string>;
    promiscuousMode?: pulumi.Input<string>;
    tdn: pulumi.Input<string>;
}

export interface L3outNodeSidProfileAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outNodeSidProfileTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outProviderLabelAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outProviderLabelTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outRedistributePolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L3outRedistributePolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface L4L7DeviceRelationVnsRsAlDevToDomP {
    domainDn: pulumi.Input<string>;
    switchingMode?: pulumi.Input<string>;
}

export interface LeafAccessBundlePolicyGroupRelationInfraRsNetflowMonitorPol {
    fltType: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface LeafAccessPortPolicyGroupRelationInfraRsNetflowMonitorPol {
    fltType: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface LeafProfileLeafSelector {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodeBlocks?: pulumi.Input<pulumi.Input<inputs.LeafProfileLeafSelectorNodeBlock>[]>;
    switchAssociationType: pulumi.Input<string>;
}

export interface LeafProfileLeafSelectorNodeBlock {
    description?: pulumi.Input<string>;
    from_?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    to_?: pulumi.Input<string>;
}

export interface LogicalInterfaceProfileRelationL3extRsLIfPToNetflowMonitorPol {
    fltType: pulumi.Input<string>;
    tnNetflowMonitorPolDn?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    tnNetflowMonitorPolName?: pulumi.Input<string>;
}

export interface MatchCommunityTermsMatchCommunityFactor {
    community: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}

export interface MulticastPoolMulticastAddressBlock {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    from: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    to: pulumi.Input<string>;
}

export interface NetflowMonitorPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface NetflowMonitorPolicyRelationToNetflowExporter {
    /**
     * The annotation of the Relation To Netflow Exporter object.
     */
    annotation?: pulumi.Input<string>;
    /**
     * Name.
     */
    netflowExporterPolicyName: pulumi.Input<string>;
}

export interface NetflowMonitorPolicyRelationToNetflowRecord {
    /**
     * The annotation of the Relation To Netflow Record object.
     */
    annotation?: pulumi.Input<string>;
    /**
     * Name.
     */
    netflowRecordPolicyName?: pulumi.Input<string>;
}

export interface NetflowMonitorPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface NetflowRecordPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface NetflowRecordPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface OutOfBandContractAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface OutOfBandContractTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface PimRouteMapEntryAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface PimRouteMapEntryTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface PimRouteMapPolicyAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface PimRouteMapPolicyTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RelationToConsumedOutOfBandContractAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RelationToConsumedOutOfBandContractTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RelationToFallbackRouteGroupAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RelationToFallbackRouteGroupTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RelationToNetflowExporterAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RelationToNetflowExporterTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface RestManagedChild {
    /**
     * Class name of child object.
     */
    className: pulumi.Input<string>;
    /**
     * Map of key-value pairs which represents the attributes for the child object.
     */
    content?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The relative name of the child object.
     */
    rn: pulumi.Input<string>;
}

export interface SpineProfileSpineSelector {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nodeBlocks?: pulumi.Input<pulumi.Input<inputs.SpineProfileSpineSelectorNodeBlock>[]>;
    switchAssociationType: pulumi.Input<string>;
}

export interface SpineProfileSpineSelectorNodeBlock {
    description?: pulumi.Input<string>;
    from_?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    to_?: pulumi.Input<string>;
}

export interface SubnetMsnlb {
    group?: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface VmmControllerRelationVmmRsVmmCtrlrP {
    epgDeplPref?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}

export interface VrfFallbackRouteGroupAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface VrfFallbackRouteGroupMemberAnnotation {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface VrfFallbackRouteGroupMemberTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface VrfFallbackRouteGroupTag {
    /**
     * The key used to uniquely identify this configuration object.
     */
    key: pulumi.Input<string>;
    /**
     * The value of the property.
     */
    value: pulumi.Input<string>;
}

export interface VrfFallbackRouteGroupVrfFallbackRouteGroupMember {
    /**
     * The annotation of the VRF Fallback Route Group Member object.
     */
    annotation?: pulumi.Input<string>;
    /**
     * The description of the VRF Fallback Route Group Member object.
     */
    description?: pulumi.Input<string>;
    /**
     * The address of the VRF Fallback Route Group Member object.
     */
    fallbackMember: pulumi.Input<string>;
    /**
     * The name of the VRF Fallback Route Group Member object.
     */
    name?: pulumi.Input<string>;
    /**
     * The name alias of the VRF Fallback Route Group Member object.
     */
    nameAlias?: pulumi.Input<string>;
}

export interface VrfLeakEpgBdSubnetLeakTo {
    /**
     * Must be set as true for the Cloud APIC
     */
    allowL3outAdvertisement?: pulumi.Input<string>;
    vrfDn: pulumi.Input<string>;
}

export interface VrfRelationFvRsCtxToBgpCtxAfPol {
    af: pulumi.Input<string>;
    tnBgpCtxAfPolName: pulumi.Input<string>;
}

export interface VrfRelationFvRsCtxToEigrpCtxAfPol {
    af: pulumi.Input<string>;
    tnEigrpCtxAfPolName: pulumi.Input<string>;
}

export interface VrfRelationFvRsCtxToOspfCtxPol {
    af: pulumi.Input<string>;
    tnOspfCtxPolName: pulumi.Input<string>;
}

export interface VswitchPolicyRelationVmmRsVswitchExporterPol {
    activeFlowTimeOut?: pulumi.Input<string>;
    idleFlowTimeOut?: pulumi.Input<string>;
    samplingRate?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
}
