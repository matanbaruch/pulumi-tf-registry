// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getApplicationEpg(args: GetApplicationEpgArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationEpgResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getApplicationEpg:getApplicationEpg", {
        "annotation": args.annotation,
        "applicationProfileDn": args.applicationProfileDn,
        "description": args.description,
        "exceptionTag": args.exceptionTag,
        "floodOnEncap": args.floodOnEncap,
        "fwdCtrl": args.fwdCtrl,
        "hasMcastSource": args.hasMcastSource,
        "id": args.id,
        "isAttrBasedEpg": args.isAttrBasedEpg,
        "matchT": args.matchT,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "pcEnfPref": args.pcEnfPref,
        "prefGrMemb": args.prefGrMemb,
        "prio": args.prio,
        "shutdown": args.shutdown,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplicationEpg.
 */
export interface GetApplicationEpgArgs {
    annotation?: string;
    applicationProfileDn: string;
    description?: string;
    exceptionTag?: string;
    floodOnEncap?: string;
    fwdCtrl?: string;
    hasMcastSource?: string;
    id?: string;
    isAttrBasedEpg?: string;
    matchT?: string;
    name: string;
    nameAlias?: string;
    pcEnfPref?: string;
    prefGrMemb?: string;
    prio?: string;
    shutdown?: string;
}

/**
 * A collection of values returned by getApplicationEpg.
 */
export interface GetApplicationEpgResult {
    readonly annotation: string;
    readonly applicationProfileDn: string;
    readonly description: string;
    readonly exceptionTag: string;
    readonly floodOnEncap: string;
    readonly fwdCtrl: string;
    readonly hasMcastSource: string;
    readonly id: string;
    readonly isAttrBasedEpg: string;
    readonly matchT: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly pcEnfPref: string;
    readonly prefGrMemb: string;
    readonly prio: string;
    readonly shutdown: string;
}
export function getApplicationEpgOutput(args: GetApplicationEpgOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationEpgResult> {
    return pulumi.output(args).apply((a: any) => getApplicationEpg(a, opts))
}

/**
 * A collection of arguments for invoking getApplicationEpg.
 */
export interface GetApplicationEpgOutputArgs {
    annotation?: pulumi.Input<string>;
    applicationProfileDn: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    exceptionTag?: pulumi.Input<string>;
    floodOnEncap?: pulumi.Input<string>;
    fwdCtrl?: pulumi.Input<string>;
    hasMcastSource?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isAttrBasedEpg?: pulumi.Input<string>;
    matchT?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    pcEnfPref?: pulumi.Input<string>;
    prefGrMemb?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    shutdown?: pulumi.Input<string>;
}
