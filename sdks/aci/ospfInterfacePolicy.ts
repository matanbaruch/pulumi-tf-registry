// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OspfInterfacePolicy extends pulumi.CustomResource {
    /**
     * Get an existing OspfInterfacePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OspfInterfacePolicyState, opts?: pulumi.CustomResourceOptions): OspfInterfacePolicy {
        return new OspfInterfacePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/ospfInterfacePolicy:OspfInterfacePolicy';

    /**
     * Returns true if the given object is an instance of OspfInterfacePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OspfInterfacePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OspfInterfacePolicy.__pulumiType;
    }

    public readonly annotation!: pulumi.Output<string>;
    public readonly cost!: pulumi.Output<string>;
    public readonly ctrls!: pulumi.Output<string[]>;
    public readonly deadIntvl!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly helloIntvl!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly nwT!: pulumi.Output<string>;
    public readonly pfxSuppress!: pulumi.Output<string>;
    public readonly prio!: pulumi.Output<string>;
    public readonly rexmitIntvl!: pulumi.Output<string>;
    public readonly tenantDn!: pulumi.Output<string>;
    public readonly xmitDelay!: pulumi.Output<string>;

    /**
     * Create a OspfInterfacePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OspfInterfacePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OspfInterfacePolicyArgs | OspfInterfacePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OspfInterfacePolicyState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["cost"] = state ? state.cost : undefined;
            resourceInputs["ctrls"] = state ? state.ctrls : undefined;
            resourceInputs["deadIntvl"] = state ? state.deadIntvl : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["helloIntvl"] = state ? state.helloIntvl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["nwT"] = state ? state.nwT : undefined;
            resourceInputs["pfxSuppress"] = state ? state.pfxSuppress : undefined;
            resourceInputs["prio"] = state ? state.prio : undefined;
            resourceInputs["rexmitIntvl"] = state ? state.rexmitIntvl : undefined;
            resourceInputs["tenantDn"] = state ? state.tenantDn : undefined;
            resourceInputs["xmitDelay"] = state ? state.xmitDelay : undefined;
        } else {
            const args = argsOrState as OspfInterfacePolicyArgs | undefined;
            if ((!args || args.tenantDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantDn'");
            }
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["cost"] = args ? args.cost : undefined;
            resourceInputs["ctrls"] = args ? args.ctrls : undefined;
            resourceInputs["deadIntvl"] = args ? args.deadIntvl : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["helloIntvl"] = args ? args.helloIntvl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["nwT"] = args ? args.nwT : undefined;
            resourceInputs["pfxSuppress"] = args ? args.pfxSuppress : undefined;
            resourceInputs["prio"] = args ? args.prio : undefined;
            resourceInputs["rexmitIntvl"] = args ? args.rexmitIntvl : undefined;
            resourceInputs["tenantDn"] = args ? args.tenantDn : undefined;
            resourceInputs["xmitDelay"] = args ? args.xmitDelay : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OspfInterfacePolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OspfInterfacePolicy resources.
 */
export interface OspfInterfacePolicyState {
    annotation?: pulumi.Input<string>;
    cost?: pulumi.Input<string>;
    ctrls?: pulumi.Input<pulumi.Input<string>[]>;
    deadIntvl?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    helloIntvl?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    nwT?: pulumi.Input<string>;
    pfxSuppress?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    rexmitIntvl?: pulumi.Input<string>;
    tenantDn?: pulumi.Input<string>;
    xmitDelay?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OspfInterfacePolicy resource.
 */
export interface OspfInterfacePolicyArgs {
    annotation?: pulumi.Input<string>;
    cost?: pulumi.Input<string>;
    ctrls?: pulumi.Input<pulumi.Input<string>[]>;
    deadIntvl?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    helloIntvl?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    nwT?: pulumi.Input<string>;
    pfxSuppress?: pulumi.Input<string>;
    prio?: pulumi.Input<string>;
    rexmitIntvl?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
    xmitDelay?: pulumi.Input<string>;
}
