// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLogicalInterfaceContext(args: GetLogicalInterfaceContextArgs, opts?: pulumi.InvokeOptions): Promise<GetLogicalInterfaceContextResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getLogicalInterfaceContext:getLogicalInterfaceContext", {
        "annotation": args.annotation,
        "connNameOrLbl": args.connNameOrLbl,
        "description": args.description,
        "id": args.id,
        "l3Dest": args.l3Dest,
        "logicalDeviceContextDn": args.logicalDeviceContextDn,
        "nameAlias": args.nameAlias,
        "permitLog": args.permitLog,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLogicalInterfaceContext.
 */
export interface GetLogicalInterfaceContextArgs {
    annotation?: string;
    connNameOrLbl: string;
    description?: string;
    id?: string;
    l3Dest?: string;
    logicalDeviceContextDn: string;
    nameAlias?: string;
    permitLog?: string;
}

/**
 * A collection of values returned by getLogicalInterfaceContext.
 */
export interface GetLogicalInterfaceContextResult {
    readonly annotation: string;
    readonly connNameOrLbl: string;
    readonly description: string;
    readonly id: string;
    readonly l3Dest: string;
    readonly logicalDeviceContextDn: string;
    readonly nameAlias: string;
    readonly permitLog: string;
}
export function getLogicalInterfaceContextOutput(args: GetLogicalInterfaceContextOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogicalInterfaceContextResult> {
    return pulumi.output(args).apply((a: any) => getLogicalInterfaceContext(a, opts))
}

/**
 * A collection of arguments for invoking getLogicalInterfaceContext.
 */
export interface GetLogicalInterfaceContextOutputArgs {
    annotation?: pulumi.Input<string>;
    connNameOrLbl: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    l3Dest?: pulumi.Input<string>;
    logicalDeviceContextDn: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    permitLog?: pulumi.Input<string>;
}
