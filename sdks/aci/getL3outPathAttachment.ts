// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getL3outPathAttachment(args: GetL3outPathAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetL3outPathAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getL3outPathAttachment:getL3outPathAttachment", {
        "addr": args.addr,
        "annotation": args.annotation,
        "autostate": args.autostate,
        "description": args.description,
        "encap": args.encap,
        "encapScope": args.encapScope,
        "id": args.id,
        "ifInstT": args.ifInstT,
        "ipv6Dad": args.ipv6Dad,
        "llAddr": args.llAddr,
        "logicalInterfaceProfileDn": args.logicalInterfaceProfileDn,
        "mac": args.mac,
        "mode": args.mode,
        "mtu": args.mtu,
        "targetDn": args.targetDn,
        "targetDscp": args.targetDscp,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL3outPathAttachment.
 */
export interface GetL3outPathAttachmentArgs {
    addr?: string;
    annotation?: string;
    autostate?: string;
    description?: string;
    encap?: string;
    encapScope?: string;
    id?: string;
    ifInstT?: string;
    ipv6Dad?: string;
    llAddr?: string;
    logicalInterfaceProfileDn: string;
    mac?: string;
    mode?: string;
    mtu?: string;
    targetDn: string;
    targetDscp?: string;
}

/**
 * A collection of values returned by getL3outPathAttachment.
 */
export interface GetL3outPathAttachmentResult {
    readonly addr: string;
    readonly annotation: string;
    readonly autostate: string;
    readonly description: string;
    readonly encap: string;
    readonly encapScope: string;
    readonly id: string;
    readonly ifInstT: string;
    readonly ipv6Dad: string;
    readonly llAddr: string;
    readonly logicalInterfaceProfileDn: string;
    readonly mac: string;
    readonly mode: string;
    readonly mtu: string;
    readonly targetDn: string;
    readonly targetDscp: string;
}
export function getL3outPathAttachmentOutput(args: GetL3outPathAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL3outPathAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getL3outPathAttachment(a, opts))
}

/**
 * A collection of arguments for invoking getL3outPathAttachment.
 */
export interface GetL3outPathAttachmentOutputArgs {
    addr?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    autostate?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    encap?: pulumi.Input<string>;
    encapScope?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ifInstT?: pulumi.Input<string>;
    ipv6Dad?: pulumi.Input<string>;
    llAddr?: pulumi.Input<string>;
    logicalInterfaceProfileDn: pulumi.Input<string>;
    mac?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    mtu?: pulumi.Input<string>;
    targetDn: pulumi.Input<string>;
    targetDscp?: pulumi.Input<string>;
}
