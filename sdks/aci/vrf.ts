// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Vrf extends pulumi.CustomResource {
    /**
     * Get an existing Vrf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VrfState, opts?: pulumi.CustomResourceOptions): Vrf {
        return new Vrf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/vrf:Vrf';

    /**
     * Returns true if the given object is an instance of Vrf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vrf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vrf.__pulumiType;
    }

    public readonly annotation!: pulumi.Output<string>;
    public readonly bdEnforcedEnable!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly ipDataPlaneLearning!: pulumi.Output<string>;
    public readonly knwMcastAct!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly pcEnfDir!: pulumi.Output<string>;
    public readonly pcEnfPref!: pulumi.Output<string>;
    public /*out*/ readonly pcTag!: pulumi.Output<string>;
    public readonly relationFvRsBgpCtxPol!: pulumi.Output<string>;
    public readonly relationFvRsCtxMcastTos!: pulumi.Output<string[] | undefined>;
    public readonly relationFvRsCtxMonPol!: pulumi.Output<string | undefined>;
    public readonly relationFvRsCtxToBgpCtxAfPols!: pulumi.Output<outputs.VrfRelationFvRsCtxToBgpCtxAfPol[] | undefined>;
    public readonly relationFvRsCtxToEigrpCtxAfPols!: pulumi.Output<outputs.VrfRelationFvRsCtxToEigrpCtxAfPol[] | undefined>;
    public readonly relationFvRsCtxToEpRet!: pulumi.Output<string>;
    public readonly relationFvRsCtxToExtRouteTagPol!: pulumi.Output<string>;
    public readonly relationFvRsCtxToOspfCtxPols!: pulumi.Output<outputs.VrfRelationFvRsCtxToOspfCtxPol[] | undefined>;
    public readonly relationFvRsOspfCtxPol!: pulumi.Output<string>;
    public readonly relationFvRsVrfValidationPol!: pulumi.Output<string>;
    public /*out*/ readonly scope!: pulumi.Output<string>;
    public readonly tenantDn!: pulumi.Output<string>;

    /**
     * Create a Vrf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VrfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VrfArgs | VrfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VrfState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["bdEnforcedEnable"] = state ? state.bdEnforcedEnable : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipDataPlaneLearning"] = state ? state.ipDataPlaneLearning : undefined;
            resourceInputs["knwMcastAct"] = state ? state.knwMcastAct : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["pcEnfDir"] = state ? state.pcEnfDir : undefined;
            resourceInputs["pcEnfPref"] = state ? state.pcEnfPref : undefined;
            resourceInputs["pcTag"] = state ? state.pcTag : undefined;
            resourceInputs["relationFvRsBgpCtxPol"] = state ? state.relationFvRsBgpCtxPol : undefined;
            resourceInputs["relationFvRsCtxMcastTos"] = state ? state.relationFvRsCtxMcastTos : undefined;
            resourceInputs["relationFvRsCtxMonPol"] = state ? state.relationFvRsCtxMonPol : undefined;
            resourceInputs["relationFvRsCtxToBgpCtxAfPols"] = state ? state.relationFvRsCtxToBgpCtxAfPols : undefined;
            resourceInputs["relationFvRsCtxToEigrpCtxAfPols"] = state ? state.relationFvRsCtxToEigrpCtxAfPols : undefined;
            resourceInputs["relationFvRsCtxToEpRet"] = state ? state.relationFvRsCtxToEpRet : undefined;
            resourceInputs["relationFvRsCtxToExtRouteTagPol"] = state ? state.relationFvRsCtxToExtRouteTagPol : undefined;
            resourceInputs["relationFvRsCtxToOspfCtxPols"] = state ? state.relationFvRsCtxToOspfCtxPols : undefined;
            resourceInputs["relationFvRsOspfCtxPol"] = state ? state.relationFvRsOspfCtxPol : undefined;
            resourceInputs["relationFvRsVrfValidationPol"] = state ? state.relationFvRsVrfValidationPol : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["tenantDn"] = state ? state.tenantDn : undefined;
        } else {
            const args = argsOrState as VrfArgs | undefined;
            if ((!args || args.tenantDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantDn'");
            }
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["bdEnforcedEnable"] = args ? args.bdEnforcedEnable : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipDataPlaneLearning"] = args ? args.ipDataPlaneLearning : undefined;
            resourceInputs["knwMcastAct"] = args ? args.knwMcastAct : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["pcEnfDir"] = args ? args.pcEnfDir : undefined;
            resourceInputs["pcEnfPref"] = args ? args.pcEnfPref : undefined;
            resourceInputs["relationFvRsBgpCtxPol"] = args ? args.relationFvRsBgpCtxPol : undefined;
            resourceInputs["relationFvRsCtxMcastTos"] = args ? args.relationFvRsCtxMcastTos : undefined;
            resourceInputs["relationFvRsCtxMonPol"] = args ? args.relationFvRsCtxMonPol : undefined;
            resourceInputs["relationFvRsCtxToBgpCtxAfPols"] = args ? args.relationFvRsCtxToBgpCtxAfPols : undefined;
            resourceInputs["relationFvRsCtxToEigrpCtxAfPols"] = args ? args.relationFvRsCtxToEigrpCtxAfPols : undefined;
            resourceInputs["relationFvRsCtxToEpRet"] = args ? args.relationFvRsCtxToEpRet : undefined;
            resourceInputs["relationFvRsCtxToExtRouteTagPol"] = args ? args.relationFvRsCtxToExtRouteTagPol : undefined;
            resourceInputs["relationFvRsCtxToOspfCtxPols"] = args ? args.relationFvRsCtxToOspfCtxPols : undefined;
            resourceInputs["relationFvRsOspfCtxPol"] = args ? args.relationFvRsOspfCtxPol : undefined;
            resourceInputs["relationFvRsVrfValidationPol"] = args ? args.relationFvRsVrfValidationPol : undefined;
            resourceInputs["tenantDn"] = args ? args.tenantDn : undefined;
            resourceInputs["pcTag"] = undefined /*out*/;
            resourceInputs["scope"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vrf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vrf resources.
 */
export interface VrfState {
    annotation?: pulumi.Input<string>;
    bdEnforcedEnable?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ipDataPlaneLearning?: pulumi.Input<string>;
    knwMcastAct?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    pcEnfDir?: pulumi.Input<string>;
    pcEnfPref?: pulumi.Input<string>;
    pcTag?: pulumi.Input<string>;
    relationFvRsBgpCtxPol?: pulumi.Input<string>;
    relationFvRsCtxMcastTos?: pulumi.Input<pulumi.Input<string>[]>;
    relationFvRsCtxMonPol?: pulumi.Input<string>;
    relationFvRsCtxToBgpCtxAfPols?: pulumi.Input<pulumi.Input<inputs.VrfRelationFvRsCtxToBgpCtxAfPol>[]>;
    relationFvRsCtxToEigrpCtxAfPols?: pulumi.Input<pulumi.Input<inputs.VrfRelationFvRsCtxToEigrpCtxAfPol>[]>;
    relationFvRsCtxToEpRet?: pulumi.Input<string>;
    relationFvRsCtxToExtRouteTagPol?: pulumi.Input<string>;
    relationFvRsCtxToOspfCtxPols?: pulumi.Input<pulumi.Input<inputs.VrfRelationFvRsCtxToOspfCtxPol>[]>;
    relationFvRsOspfCtxPol?: pulumi.Input<string>;
    relationFvRsVrfValidationPol?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
    tenantDn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vrf resource.
 */
export interface VrfArgs {
    annotation?: pulumi.Input<string>;
    bdEnforcedEnable?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    ipDataPlaneLearning?: pulumi.Input<string>;
    knwMcastAct?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    pcEnfDir?: pulumi.Input<string>;
    pcEnfPref?: pulumi.Input<string>;
    relationFvRsBgpCtxPol?: pulumi.Input<string>;
    relationFvRsCtxMcastTos?: pulumi.Input<pulumi.Input<string>[]>;
    relationFvRsCtxMonPol?: pulumi.Input<string>;
    relationFvRsCtxToBgpCtxAfPols?: pulumi.Input<pulumi.Input<inputs.VrfRelationFvRsCtxToBgpCtxAfPol>[]>;
    relationFvRsCtxToEigrpCtxAfPols?: pulumi.Input<pulumi.Input<inputs.VrfRelationFvRsCtxToEigrpCtxAfPol>[]>;
    relationFvRsCtxToEpRet?: pulumi.Input<string>;
    relationFvRsCtxToExtRouteTagPol?: pulumi.Input<string>;
    relationFvRsCtxToOspfCtxPols?: pulumi.Input<pulumi.Input<inputs.VrfRelationFvRsCtxToOspfCtxPol>[]>;
    relationFvRsOspfCtxPol?: pulumi.Input<string>;
    relationFvRsVrfValidationPol?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
}
