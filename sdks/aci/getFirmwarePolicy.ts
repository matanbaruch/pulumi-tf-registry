// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFirmwarePolicy(args: GetFirmwarePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFirmwarePolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getFirmwarePolicy:getFirmwarePolicy", {
        "annotation": args.annotation,
        "description": args.description,
        "effectiveOnReboot": args.effectiveOnReboot,
        "id": args.id,
        "ignoreCompat": args.ignoreCompat,
        "internalLabel": args.internalLabel,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "version": args.version,
        "versionCheckOverride": args.versionCheckOverride,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirmwarePolicy.
 */
export interface GetFirmwarePolicyArgs {
    annotation?: string;
    description?: string;
    effectiveOnReboot?: string;
    id?: string;
    ignoreCompat?: string;
    internalLabel?: string;
    name: string;
    nameAlias?: string;
    version?: string;
    versionCheckOverride?: string;
}

/**
 * A collection of values returned by getFirmwarePolicy.
 */
export interface GetFirmwarePolicyResult {
    readonly annotation: string;
    readonly description: string;
    readonly effectiveOnReboot: string;
    readonly id: string;
    readonly ignoreCompat: string;
    readonly internalLabel: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly version: string;
    readonly versionCheckOverride: string;
}
export function getFirmwarePolicyOutput(args: GetFirmwarePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirmwarePolicyResult> {
    return pulumi.output(args).apply((a: any) => getFirmwarePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFirmwarePolicy.
 */
export interface GetFirmwarePolicyOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    effectiveOnReboot?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ignoreCompat?: pulumi.Input<string>;
    internalLabel?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    versionCheckOverride?: pulumi.Input<string>;
}
