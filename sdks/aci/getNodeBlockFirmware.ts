// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNodeBlockFirmware(args: GetNodeBlockFirmwareArgs, opts?: pulumi.InvokeOptions): Promise<GetNodeBlockFirmwareResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getNodeBlockFirmware:getNodeBlockFirmware", {
        "annotation": args.annotation,
        "description": args.description,
        "firmwareGroupDn": args.firmwareGroupDn,
        "from_": args.from_,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "to_": args.to_,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNodeBlockFirmware.
 */
export interface GetNodeBlockFirmwareArgs {
    annotation?: string;
    description?: string;
    firmwareGroupDn: string;
    from_?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    to_?: string;
}

/**
 * A collection of values returned by getNodeBlockFirmware.
 */
export interface GetNodeBlockFirmwareResult {
    readonly annotation: string;
    readonly description: string;
    readonly firmwareGroupDn: string;
    readonly from_: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly to_: string;
}
export function getNodeBlockFirmwareOutput(args: GetNodeBlockFirmwareOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNodeBlockFirmwareResult> {
    return pulumi.output(args).apply((a: any) => getNodeBlockFirmware(a, opts))
}

/**
 * A collection of arguments for invoking getNodeBlockFirmware.
 */
export interface GetNodeBlockFirmwareOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    firmwareGroupDn: pulumi.Input<string>;
    from_?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    to_?: pulumi.Input<string>;
}
