// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getL3DomainProfile(args: GetL3DomainProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetL3DomainProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getL3DomainProfile:getL3DomainProfile", {
        "annotation": args.annotation,
        "id": args.id,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "relationExtnwRsOuts": args.relationExtnwRsOuts,
        "relationInfraRsDomVxlanNsDef": args.relationInfraRsDomVxlanNsDef,
        "relationInfraRsVipAddrNs": args.relationInfraRsVipAddrNs,
        "relationInfraRsVlanNs": args.relationInfraRsVlanNs,
        "relationInfraRsVlanNsDef": args.relationInfraRsVlanNsDef,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL3DomainProfile.
 */
export interface GetL3DomainProfileArgs {
    annotation?: string;
    id?: string;
    name: string;
    nameAlias?: string;
    relationExtnwRsOuts?: string[];
    relationInfraRsDomVxlanNsDef?: string;
    relationInfraRsVipAddrNs?: string;
    relationInfraRsVlanNs?: string;
    relationInfraRsVlanNsDef?: string;
}

/**
 * A collection of values returned by getL3DomainProfile.
 */
export interface GetL3DomainProfileResult {
    readonly annotation: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly relationExtnwRsOuts?: string[];
    readonly relationInfraRsDomVxlanNsDef?: string;
    readonly relationInfraRsVipAddrNs?: string;
    readonly relationInfraRsVlanNs?: string;
    readonly relationInfraRsVlanNsDef?: string;
}
export function getL3DomainProfileOutput(args: GetL3DomainProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL3DomainProfileResult> {
    return pulumi.output(args).apply((a: any) => getL3DomainProfile(a, opts))
}

/**
 * A collection of arguments for invoking getL3DomainProfile.
 */
export interface GetL3DomainProfileOutputArgs {
    annotation?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    relationExtnwRsOuts?: pulumi.Input<pulumi.Input<string>[]>;
    relationInfraRsDomVxlanNsDef?: pulumi.Input<string>;
    relationInfraRsVipAddrNs?: pulumi.Input<string>;
    relationInfraRsVlanNs?: pulumi.Input<string>;
    relationInfraRsVlanNsDef?: pulumi.Input<string>;
}
