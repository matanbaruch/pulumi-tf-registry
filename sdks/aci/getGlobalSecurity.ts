// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getGlobalSecurity(args?: GetGlobalSecurityArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalSecurityResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getGlobalSecurity:getGlobalSecurity", {
        "annotation": args.annotation,
        "blockDuration": args.blockDuration,
        "changeCount": args.changeCount,
        "changeDuringInterval": args.changeDuringInterval,
        "changeInterval": args.changeInterval,
        "description": args.description,
        "enableLoginBlock": args.enableLoginBlock,
        "expirationWarnTime": args.expirationWarnTime,
        "historyCount": args.historyCount,
        "id": args.id,
        "maxFailedAttempts": args.maxFailedAttempts,
        "maxFailedAttemptsWindow": args.maxFailedAttemptsWindow,
        "maximumValidityPeriod": args.maximumValidityPeriod,
        "nameAlias": args.nameAlias,
        "noChangeInterval": args.noChangeInterval,
        "pwdStrengthCheck": args.pwdStrengthCheck,
        "sessionRecordFlags": args.sessionRecordFlags,
        "uiIdleTimeoutSeconds": args.uiIdleTimeoutSeconds,
        "webtokenTimeoutSeconds": args.webtokenTimeoutSeconds,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGlobalSecurity.
 */
export interface GetGlobalSecurityArgs {
    annotation?: string;
    blockDuration?: string;
    changeCount?: string;
    changeDuringInterval?: string;
    changeInterval?: string;
    description?: string;
    enableLoginBlock?: string;
    expirationWarnTime?: string;
    historyCount?: string;
    id?: string;
    maxFailedAttempts?: string;
    maxFailedAttemptsWindow?: string;
    maximumValidityPeriod?: string;
    nameAlias?: string;
    noChangeInterval?: string;
    pwdStrengthCheck?: string;
    sessionRecordFlags?: string[];
    uiIdleTimeoutSeconds?: string;
    webtokenTimeoutSeconds?: string;
}

/**
 * A collection of values returned by getGlobalSecurity.
 */
export interface GetGlobalSecurityResult {
    readonly annotation: string;
    readonly blockDuration: string;
    readonly changeCount: string;
    readonly changeDuringInterval: string;
    readonly changeInterval: string;
    readonly description: string;
    readonly enableLoginBlock: string;
    readonly expirationWarnTime: string;
    readonly historyCount: string;
    readonly id: string;
    readonly maxFailedAttempts: string;
    readonly maxFailedAttemptsWindow: string;
    readonly maximumValidityPeriod: string;
    readonly nameAlias: string;
    readonly noChangeInterval: string;
    readonly pwdStrengthCheck: string;
    readonly sessionRecordFlags: string[];
    readonly uiIdleTimeoutSeconds: string;
    readonly webtokenTimeoutSeconds: string;
}
export function getGlobalSecurityOutput(args?: GetGlobalSecurityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalSecurityResult> {
    return pulumi.output(args).apply((a: any) => getGlobalSecurity(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalSecurity.
 */
export interface GetGlobalSecurityOutputArgs {
    annotation?: pulumi.Input<string>;
    blockDuration?: pulumi.Input<string>;
    changeCount?: pulumi.Input<string>;
    changeDuringInterval?: pulumi.Input<string>;
    changeInterval?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    enableLoginBlock?: pulumi.Input<string>;
    expirationWarnTime?: pulumi.Input<string>;
    historyCount?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    maxFailedAttempts?: pulumi.Input<string>;
    maxFailedAttemptsWindow?: pulumi.Input<string>;
    maximumValidityPeriod?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    noChangeInterval?: pulumi.Input<string>;
    pwdStrengthCheck?: pulumi.Input<string>;
    sessionRecordFlags?: pulumi.Input<pulumi.Input<string>[]>;
    uiIdleTimeoutSeconds?: pulumi.Input<string>;
    webtokenTimeoutSeconds?: pulumi.Input<string>;
}
