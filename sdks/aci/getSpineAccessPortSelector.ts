// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpineAccessPortSelector(args: GetSpineAccessPortSelectorArgs, opts?: pulumi.InvokeOptions): Promise<GetSpineAccessPortSelectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getSpineAccessPortSelector:getSpineAccessPortSelector", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "relationInfraRsSpAccGrp": args.relationInfraRsSpAccGrp,
        "spineAccessPortSelectorType": args.spineAccessPortSelectorType,
        "spineInterfaceProfileDn": args.spineInterfaceProfileDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpineAccessPortSelector.
 */
export interface GetSpineAccessPortSelectorArgs {
    annotation?: string;
    description?: string;
    id?: string;
    name: string;
    relationInfraRsSpAccGrp?: string;
    spineAccessPortSelectorType: string;
    spineInterfaceProfileDn: string;
}

/**
 * A collection of values returned by getSpineAccessPortSelector.
 */
export interface GetSpineAccessPortSelectorResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly relationInfraRsSpAccGrp?: string;
    readonly spineAccessPortSelectorType: string;
    readonly spineInterfaceProfileDn: string;
}
export function getSpineAccessPortSelectorOutput(args: GetSpineAccessPortSelectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpineAccessPortSelectorResult> {
    return pulumi.output(args).apply((a: any) => getSpineAccessPortSelector(a, opts))
}

/**
 * A collection of arguments for invoking getSpineAccessPortSelector.
 */
export interface GetSpineAccessPortSelectorOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    relationInfraRsSpAccGrp?: pulumi.Input<string>;
    spineAccessPortSelectorType: pulumi.Input<string>;
    spineInterfaceProfileDn: pulumi.Input<string>;
}
