// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSubnet(args: GetSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getSubnet:getSubnet", {
        "annotation": args.annotation,
        "anycastMac": args.anycastMac,
        "description": args.description,
        "id": args.id,
        "ip": args.ip,
        "msnlb": args.msnlb,
        "nextHopAddr": args.nextHopAddr,
        "parentDn": args.parentDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetArgs {
    annotation?: string;
    anycastMac?: string;
    description?: string;
    id?: string;
    ip: string;
    msnlb?: inputs.GetSubnetMsnlb;
    nextHopAddr?: string;
    parentDn: string;
}

/**
 * A collection of values returned by getSubnet.
 */
export interface GetSubnetResult {
    readonly annotation: string;
    readonly anycastMac?: string;
    readonly ctrls: string[];
    readonly description: string;
    readonly id: string;
    readonly ip: string;
    readonly ipDataPlaneLearning: string;
    readonly msnlb?: outputs.GetSubnetMsnlb;
    readonly nameAlias: string;
    readonly nextHopAddr?: string;
    readonly parentDn: string;
    readonly preferred: string;
    readonly scopes: string[];
    readonly virtual: string;
}
export function getSubnetOutput(args: GetSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubnetResult> {
    return pulumi.output(args).apply((a: any) => getSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getSubnet.
 */
export interface GetSubnetOutputArgs {
    annotation?: pulumi.Input<string>;
    anycastMac?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    msnlb?: pulumi.Input<inputs.GetSubnetMsnlbArgs>;
    nextHopAddr?: pulumi.Input<string>;
    parentDn: pulumi.Input<string>;
}
