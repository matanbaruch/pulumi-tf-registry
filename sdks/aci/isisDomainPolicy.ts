// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IsisDomainPolicy extends pulumi.CustomResource {
    /**
     * Get an existing IsisDomainPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IsisDomainPolicyState, opts?: pulumi.CustomResourceOptions): IsisDomainPolicy {
        return new IsisDomainPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/isisDomainPolicy:IsisDomainPolicy';

    /**
     * Returns true if the given object is an instance of IsisDomainPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IsisDomainPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IsisDomainPolicy.__pulumiType;
    }

    public readonly annotation!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly isisLevelName!: pulumi.Output<string>;
    public readonly isisLevelType!: pulumi.Output<string | undefined>;
    public readonly lspFastFlood!: pulumi.Output<string>;
    public readonly lspGenInitIntvl!: pulumi.Output<string>;
    public readonly lspGenMaxIntvl!: pulumi.Output<string>;
    public readonly lspGenSecIntvl!: pulumi.Output<string>;
    public readonly mtu!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly redistribMetric!: pulumi.Output<string>;
    public readonly spfCompInitIntvl!: pulumi.Output<string>;
    public readonly spfCompMaxIntvl!: pulumi.Output<string>;
    public readonly spfCompSecIntvl!: pulumi.Output<string>;

    /**
     * Create a IsisDomainPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IsisDomainPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IsisDomainPolicyArgs | IsisDomainPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IsisDomainPolicyState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["isisLevelName"] = state ? state.isisLevelName : undefined;
            resourceInputs["isisLevelType"] = state ? state.isisLevelType : undefined;
            resourceInputs["lspFastFlood"] = state ? state.lspFastFlood : undefined;
            resourceInputs["lspGenInitIntvl"] = state ? state.lspGenInitIntvl : undefined;
            resourceInputs["lspGenMaxIntvl"] = state ? state.lspGenMaxIntvl : undefined;
            resourceInputs["lspGenSecIntvl"] = state ? state.lspGenSecIntvl : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["redistribMetric"] = state ? state.redistribMetric : undefined;
            resourceInputs["spfCompInitIntvl"] = state ? state.spfCompInitIntvl : undefined;
            resourceInputs["spfCompMaxIntvl"] = state ? state.spfCompMaxIntvl : undefined;
            resourceInputs["spfCompSecIntvl"] = state ? state.spfCompSecIntvl : undefined;
        } else {
            const args = argsOrState as IsisDomainPolicyArgs | undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isisLevelName"] = args ? args.isisLevelName : undefined;
            resourceInputs["isisLevelType"] = args ? args.isisLevelType : undefined;
            resourceInputs["lspFastFlood"] = args ? args.lspFastFlood : undefined;
            resourceInputs["lspGenInitIntvl"] = args ? args.lspGenInitIntvl : undefined;
            resourceInputs["lspGenMaxIntvl"] = args ? args.lspGenMaxIntvl : undefined;
            resourceInputs["lspGenSecIntvl"] = args ? args.lspGenSecIntvl : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["redistribMetric"] = args ? args.redistribMetric : undefined;
            resourceInputs["spfCompInitIntvl"] = args ? args.spfCompInitIntvl : undefined;
            resourceInputs["spfCompMaxIntvl"] = args ? args.spfCompMaxIntvl : undefined;
            resourceInputs["spfCompSecIntvl"] = args ? args.spfCompSecIntvl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IsisDomainPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IsisDomainPolicy resources.
 */
export interface IsisDomainPolicyState {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isisLevelName?: pulumi.Input<string>;
    isisLevelType?: pulumi.Input<string>;
    lspFastFlood?: pulumi.Input<string>;
    lspGenInitIntvl?: pulumi.Input<string>;
    lspGenMaxIntvl?: pulumi.Input<string>;
    lspGenSecIntvl?: pulumi.Input<string>;
    mtu?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    redistribMetric?: pulumi.Input<string>;
    spfCompInitIntvl?: pulumi.Input<string>;
    spfCompMaxIntvl?: pulumi.Input<string>;
    spfCompSecIntvl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IsisDomainPolicy resource.
 */
export interface IsisDomainPolicyArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    isisLevelName?: pulumi.Input<string>;
    isisLevelType?: pulumi.Input<string>;
    lspFastFlood?: pulumi.Input<string>;
    lspGenInitIntvl?: pulumi.Input<string>;
    lspGenMaxIntvl?: pulumi.Input<string>;
    lspGenSecIntvl?: pulumi.Input<string>;
    mtu?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    redistribMetric?: pulumi.Input<string>;
    spfCompInitIntvl?: pulumi.Input<string>;
    spfCompMaxIntvl?: pulumi.Input<string>;
    spfCompSecIntvl?: pulumi.Input<string>;
}
