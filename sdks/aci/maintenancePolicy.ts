// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MaintenancePolicy extends pulumi.CustomResource {
    /**
     * Get an existing MaintenancePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaintenancePolicyState, opts?: pulumi.CustomResourceOptions): MaintenancePolicy {
        return new MaintenancePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/maintenancePolicy:MaintenancePolicy';

    /**
     * Returns true if the given object is an instance of MaintenancePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MaintenancePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MaintenancePolicy.__pulumiType;
    }

    public readonly adminSt!: pulumi.Output<string>;
    public readonly annotation!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly graceful!: pulumi.Output<string>;
    public readonly ignoreCompat!: pulumi.Output<string>;
    public readonly internalLabel!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly notifCond!: pulumi.Output<string>;
    public readonly relationMaintRsPolNotif!: pulumi.Output<string | undefined>;
    public readonly relationMaintRsPolScheduler!: pulumi.Output<string | undefined>;
    public readonly relationTrigRsTriggerable!: pulumi.Output<string | undefined>;
    public readonly runMode!: pulumi.Output<string>;
    public readonly version!: pulumi.Output<string>;
    public readonly versionCheckOverride!: pulumi.Output<string>;

    /**
     * Create a MaintenancePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MaintenancePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MaintenancePolicyArgs | MaintenancePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MaintenancePolicyState | undefined;
            resourceInputs["adminSt"] = state ? state.adminSt : undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["graceful"] = state ? state.graceful : undefined;
            resourceInputs["ignoreCompat"] = state ? state.ignoreCompat : undefined;
            resourceInputs["internalLabel"] = state ? state.internalLabel : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["notifCond"] = state ? state.notifCond : undefined;
            resourceInputs["relationMaintRsPolNotif"] = state ? state.relationMaintRsPolNotif : undefined;
            resourceInputs["relationMaintRsPolScheduler"] = state ? state.relationMaintRsPolScheduler : undefined;
            resourceInputs["relationTrigRsTriggerable"] = state ? state.relationTrigRsTriggerable : undefined;
            resourceInputs["runMode"] = state ? state.runMode : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionCheckOverride"] = state ? state.versionCheckOverride : undefined;
        } else {
            const args = argsOrState as MaintenancePolicyArgs | undefined;
            resourceInputs["adminSt"] = args ? args.adminSt : undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["graceful"] = args ? args.graceful : undefined;
            resourceInputs["ignoreCompat"] = args ? args.ignoreCompat : undefined;
            resourceInputs["internalLabel"] = args ? args.internalLabel : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["notifCond"] = args ? args.notifCond : undefined;
            resourceInputs["relationMaintRsPolNotif"] = args ? args.relationMaintRsPolNotif : undefined;
            resourceInputs["relationMaintRsPolScheduler"] = args ? args.relationMaintRsPolScheduler : undefined;
            resourceInputs["relationTrigRsTriggerable"] = args ? args.relationTrigRsTriggerable : undefined;
            resourceInputs["runMode"] = args ? args.runMode : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["versionCheckOverride"] = args ? args.versionCheckOverride : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MaintenancePolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MaintenancePolicy resources.
 */
export interface MaintenancePolicyState {
    adminSt?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    graceful?: pulumi.Input<string>;
    ignoreCompat?: pulumi.Input<string>;
    internalLabel?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    notifCond?: pulumi.Input<string>;
    relationMaintRsPolNotif?: pulumi.Input<string>;
    relationMaintRsPolScheduler?: pulumi.Input<string>;
    relationTrigRsTriggerable?: pulumi.Input<string>;
    runMode?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    versionCheckOverride?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MaintenancePolicy resource.
 */
export interface MaintenancePolicyArgs {
    adminSt?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    graceful?: pulumi.Input<string>;
    ignoreCompat?: pulumi.Input<string>;
    internalLabel?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    notifCond?: pulumi.Input<string>;
    relationMaintRsPolNotif?: pulumi.Input<string>;
    relationMaintRsPolScheduler?: pulumi.Input<string>;
    relationTrigRsTriggerable?: pulumi.Input<string>;
    runMode?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
    versionCheckOverride?: pulumi.Input<string>;
}
