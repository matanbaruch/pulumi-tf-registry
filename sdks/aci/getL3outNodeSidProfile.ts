// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getL3outNodeSidProfile(args: GetL3outNodeSidProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetL3outNodeSidProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getL3outNodeSidProfile:getL3outNodeSidProfile", {
        "parentDn": args.parentDn,
        "segmentId": args.segmentId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getL3outNodeSidProfile.
 */
export interface GetL3outNodeSidProfileArgs {
    parentDn: string;
    segmentId: string;
}

/**
 * A collection of values returned by getL3outNodeSidProfile.
 */
export interface GetL3outNodeSidProfileResult {
    readonly annotation: string;
    readonly annotations: outputs.GetL3outNodeSidProfileAnnotation[];
    readonly description: string;
    readonly id: string;
    readonly loopbackAddress: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly parentDn: string;
    readonly segmentId: string;
    readonly tags: outputs.GetL3outNodeSidProfileTag[];
}
export function getL3outNodeSidProfileOutput(args: GetL3outNodeSidProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetL3outNodeSidProfileResult> {
    return pulumi.output(args).apply((a: any) => getL3outNodeSidProfile(a, opts))
}

/**
 * A collection of arguments for invoking getL3outNodeSidProfile.
 */
export interface GetL3outNodeSidProfileOutputArgs {
    parentDn: pulumi.Input<string>;
    segmentId: pulumi.Input<string>;
}
