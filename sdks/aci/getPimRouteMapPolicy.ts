// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPimRouteMapPolicy(args: GetPimRouteMapPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPimRouteMapPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getPimRouteMapPolicy:getPimRouteMapPolicy", {
        "name": args.name,
        "parentDn": args.parentDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPimRouteMapPolicy.
 */
export interface GetPimRouteMapPolicyArgs {
    name: string;
    parentDn: string;
}

/**
 * A collection of values returned by getPimRouteMapPolicy.
 */
export interface GetPimRouteMapPolicyResult {
    readonly annotation: string;
    readonly annotations: outputs.GetPimRouteMapPolicyAnnotation[];
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly ownerKey: string;
    readonly ownerTag: string;
    readonly parentDn: string;
    readonly tags: outputs.GetPimRouteMapPolicyTag[];
}
export function getPimRouteMapPolicyOutput(args: GetPimRouteMapPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPimRouteMapPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPimRouteMapPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPimRouteMapPolicy.
 */
export interface GetPimRouteMapPolicyOutputArgs {
    name: pulumi.Input<string>;
    parentDn: pulumi.Input<string>;
}
