// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the aci package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'aci';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * Global annotation for the provider. This can also be set as the ACI_ANNOTATION environment variable.
     */
    public readonly annotation!: pulumi.Output<string | undefined>;
    /**
     * Certificate name for the User in Cisco ACI. This can also be set as the ACI_CERT_NAME environment variable.
     */
    public readonly certName!: pulumi.Output<string | undefined>;
    /**
     * Allow insecure HTTPS client. This can also be set as the ACI_INSECURE environment variable. Defaults to `true`.
     */
    public readonly insecure!: pulumi.Output<string | undefined>;
    /**
     * Password for the APIC Account. This can also be set as the ACI_PASSWORD environment variable.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Private key path for signature calculation. This can also be set as the ACI_PRIVATE_KEY environment variable.
     */
    public readonly privateKey!: pulumi.Output<string | undefined>;
    /**
     * Proxy server credentials in the form of username:password. This can also be set as the ACI_PROXY_CREDS environment
     * variable.
     */
    public readonly proxyCreds!: pulumi.Output<string | undefined>;
    /**
     * Proxy Server URL with port number. This can also be set as the ACI_PROXY_URL environment variable.
     */
    public readonly proxyUrl!: pulumi.Output<string | undefined>;
    /**
     * Number of retries for REST API calls. This can also be set as the ACI_RETRIES environment variable. Defaults to `2`.
     */
    public readonly retries!: pulumi.Output<string | undefined>;
    /**
     * URL of the Cisco ACI web interface. This can also be set as the ACI_URL environment variable.
     */
    public readonly url!: pulumi.Output<string | undefined>;
    /**
     * Username for the APIC Account. This can also be set as the ACI_USERNAME environment variable.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * Flag to validate if a object with entered relation Dn exists in the APIC. Defaults to `true`.
     */
    public readonly validateRelationDn!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["certName"] = args ? args.certName : undefined;
            resourceInputs["insecure"] = args ? args.insecure : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["proxyCreds"] = args ? args.proxyCreds : undefined;
            resourceInputs["proxyUrl"] = args ? args.proxyUrl : undefined;
            resourceInputs["retries"] = args ? args.retries : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["validateRelationDn"] = args ? args.validateRelationDn : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * Global annotation for the provider. This can also be set as the ACI_ANNOTATION environment variable.
     */
    annotation?: pulumi.Input<string>;
    /**
     * Certificate name for the User in Cisco ACI. This can also be set as the ACI_CERT_NAME environment variable.
     */
    certName?: pulumi.Input<string>;
    /**
     * Allow insecure HTTPS client. This can also be set as the ACI_INSECURE environment variable. Defaults to `true`.
     */
    insecure?: pulumi.Input<string>;
    /**
     * Password for the APIC Account. This can also be set as the ACI_PASSWORD environment variable.
     */
    password?: pulumi.Input<string>;
    /**
     * Private key path for signature calculation. This can also be set as the ACI_PRIVATE_KEY environment variable.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Proxy server credentials in the form of username:password. This can also be set as the ACI_PROXY_CREDS environment
     * variable.
     */
    proxyCreds?: pulumi.Input<string>;
    /**
     * Proxy Server URL with port number. This can also be set as the ACI_PROXY_URL environment variable.
     */
    proxyUrl?: pulumi.Input<string>;
    /**
     * Number of retries for REST API calls. This can also be set as the ACI_RETRIES environment variable. Defaults to `2`.
     */
    retries?: pulumi.Input<string>;
    /**
     * URL of the Cisco ACI web interface. This can also be set as the ACI_URL environment variable.
     */
    url?: pulumi.Input<string>;
    /**
     * Username for the APIC Account. This can also be set as the ACI_USERNAME environment variable.
     */
    username?: pulumi.Input<string>;
    /**
     * Flag to validate if a object with entered relation Dn exists in the APIC. Defaults to `true`.
     */
    validateRelationDn?: pulumi.Input<string>;
}
