// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVrfLeakEpgBdSubnet(args: GetVrfLeakEpgBdSubnetArgs, opts?: pulumi.InvokeOptions): Promise<GetVrfLeakEpgBdSubnetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getVrfLeakEpgBdSubnet:getVrfLeakEpgBdSubnet", {
        "allowL3outAdvertisement": args.allowL3outAdvertisement,
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "ip": args.ip,
        "leakTos": args.leakTos,
        "nameAlias": args.nameAlias,
        "vrfDn": args.vrfDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVrfLeakEpgBdSubnet.
 */
export interface GetVrfLeakEpgBdSubnetArgs {
    allowL3outAdvertisement?: string;
    annotation?: string;
    description?: string;
    id?: string;
    ip: string;
    leakTos?: inputs.GetVrfLeakEpgBdSubnetLeakTo[];
    nameAlias?: string;
    vrfDn: string;
}

/**
 * A collection of values returned by getVrfLeakEpgBdSubnet.
 */
export interface GetVrfLeakEpgBdSubnetResult {
    readonly allowL3outAdvertisement?: string;
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly ip: string;
    readonly leakTos?: outputs.GetVrfLeakEpgBdSubnetLeakTo[];
    readonly nameAlias: string;
    readonly vrfDn: string;
}
export function getVrfLeakEpgBdSubnetOutput(args: GetVrfLeakEpgBdSubnetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVrfLeakEpgBdSubnetResult> {
    return pulumi.output(args).apply((a: any) => getVrfLeakEpgBdSubnet(a, opts))
}

/**
 * A collection of arguments for invoking getVrfLeakEpgBdSubnet.
 */
export interface GetVrfLeakEpgBdSubnetOutputArgs {
    allowL3outAdvertisement?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    leakTos?: pulumi.Input<pulumi.Input<inputs.GetVrfLeakEpgBdSubnetLeakToArgs>[]>;
    nameAlias?: pulumi.Input<string>;
    vrfDn: pulumi.Input<string>;
}
