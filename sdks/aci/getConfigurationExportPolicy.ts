// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConfigurationExportPolicy(args: GetConfigurationExportPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigurationExportPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getConfigurationExportPolicy:getConfigurationExportPolicy", {
        "adminSt": args.adminSt,
        "annotation": args.annotation,
        "description": args.description,
        "format": args.format,
        "id": args.id,
        "includeSecureFields": args.includeSecureFields,
        "maxSnapshotCount": args.maxSnapshotCount,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "snapshot": args.snapshot,
        "targetDn": args.targetDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConfigurationExportPolicy.
 */
export interface GetConfigurationExportPolicyArgs {
    adminSt?: string;
    annotation?: string;
    description?: string;
    format?: string;
    id?: string;
    includeSecureFields?: string;
    maxSnapshotCount?: string;
    name: string;
    nameAlias?: string;
    snapshot?: string;
    targetDn?: string;
}

/**
 * A collection of values returned by getConfigurationExportPolicy.
 */
export interface GetConfigurationExportPolicyResult {
    readonly adminSt: string;
    readonly annotation: string;
    readonly description: string;
    readonly format: string;
    readonly id: string;
    readonly includeSecureFields: string;
    readonly maxSnapshotCount: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly snapshot: string;
    readonly targetDn: string;
}
export function getConfigurationExportPolicyOutput(args: GetConfigurationExportPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigurationExportPolicyResult> {
    return pulumi.output(args).apply((a: any) => getConfigurationExportPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getConfigurationExportPolicy.
 */
export interface GetConfigurationExportPolicyOutputArgs {
    adminSt?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    format?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includeSecureFields?: pulumi.Input<string>;
    maxSnapshotCount?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    snapshot?: pulumi.Input<string>;
    targetDn?: pulumi.Input<string>;
}
