// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudContextProfile extends pulumi.CustomResource {
    /**
     * Get an existing CloudContextProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudContextProfileState, opts?: pulumi.CustomResourceOptions): CloudContextProfile {
        return new CloudContextProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/cloudContextProfile:CloudContextProfile';

    /**
     * Returns true if the given object is an instance of CloudContextProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudContextProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudContextProfile.__pulumiType;
    }

    /**
     * Cloud context access policy type
     */
    public readonly accessPolicyType!: pulumi.Output<string | undefined>;
    public readonly annotation!: pulumi.Output<string>;
    /**
     * Import Brownfield Virtual Network
     */
    public readonly cloudBrownfield!: pulumi.Output<string | undefined>;
    /**
     * Name of the vendor
     */
    public readonly cloudVendor!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    /**
     * hub network to enable transit gateway
     */
    public readonly hubNetwork!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Mo doc not defined in techpub!!!
     */
    public readonly nameAlias!: pulumi.Output<string>;
    /**
     * Primary CIDR block
     */
    public readonly primaryCidr!: pulumi.Output<string>;
    /**
     * region
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Create relation to cloudAwsFlowLogPol
     */
    public readonly relationCloudRsCtxToFlowLog!: pulumi.Output<string | undefined>;
    /**
     * Create relation to fvCtx
     */
    public readonly relationCloudRsToCtx!: pulumi.Output<string>;
    public readonly tenantDn!: pulumi.Output<string>;
    /**
     * component type
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a CloudContextProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudContextProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudContextProfileArgs | CloudContextProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudContextProfileState | undefined;
            resourceInputs["accessPolicyType"] = state ? state.accessPolicyType : undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["cloudBrownfield"] = state ? state.cloudBrownfield : undefined;
            resourceInputs["cloudVendor"] = state ? state.cloudVendor : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hubNetwork"] = state ? state.hubNetwork : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["primaryCidr"] = state ? state.primaryCidr : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["relationCloudRsCtxToFlowLog"] = state ? state.relationCloudRsCtxToFlowLog : undefined;
            resourceInputs["relationCloudRsToCtx"] = state ? state.relationCloudRsToCtx : undefined;
            resourceInputs["tenantDn"] = state ? state.tenantDn : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as CloudContextProfileArgs | undefined;
            if ((!args || args.cloudVendor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudVendor'");
            }
            if ((!args || args.primaryCidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryCidr'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.relationCloudRsToCtx === undefined) && !opts.urn) {
                throw new Error("Missing required property 'relationCloudRsToCtx'");
            }
            if ((!args || args.tenantDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantDn'");
            }
            resourceInputs["accessPolicyType"] = args ? args.accessPolicyType : undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["cloudBrownfield"] = args ? args.cloudBrownfield : undefined;
            resourceInputs["cloudVendor"] = args ? args.cloudVendor : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hubNetwork"] = args ? args.hubNetwork : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["primaryCidr"] = args ? args.primaryCidr : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["relationCloudRsCtxToFlowLog"] = args ? args.relationCloudRsCtxToFlowLog : undefined;
            resourceInputs["relationCloudRsToCtx"] = args ? args.relationCloudRsToCtx : undefined;
            resourceInputs["tenantDn"] = args ? args.tenantDn : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudContextProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CloudContextProfile resources.
 */
export interface CloudContextProfileState {
    /**
     * Cloud context access policy type
     */
    accessPolicyType?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    /**
     * Import Brownfield Virtual Network
     */
    cloudBrownfield?: pulumi.Input<string>;
    /**
     * Name of the vendor
     */
    cloudVendor?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * hub network to enable transit gateway
     */
    hubNetwork?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Mo doc not defined in techpub!!!
     */
    nameAlias?: pulumi.Input<string>;
    /**
     * Primary CIDR block
     */
    primaryCidr?: pulumi.Input<string>;
    /**
     * region
     */
    region?: pulumi.Input<string>;
    /**
     * Create relation to cloudAwsFlowLogPol
     */
    relationCloudRsCtxToFlowLog?: pulumi.Input<string>;
    /**
     * Create relation to fvCtx
     */
    relationCloudRsToCtx?: pulumi.Input<string>;
    tenantDn?: pulumi.Input<string>;
    /**
     * component type
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudContextProfile resource.
 */
export interface CloudContextProfileArgs {
    /**
     * Cloud context access policy type
     */
    accessPolicyType?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    /**
     * Import Brownfield Virtual Network
     */
    cloudBrownfield?: pulumi.Input<string>;
    /**
     * Name of the vendor
     */
    cloudVendor: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * hub network to enable transit gateway
     */
    hubNetwork?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Mo doc not defined in techpub!!!
     */
    nameAlias?: pulumi.Input<string>;
    /**
     * Primary CIDR block
     */
    primaryCidr: pulumi.Input<string>;
    /**
     * region
     */
    region: pulumi.Input<string>;
    /**
     * Create relation to cloudAwsFlowLogPol
     */
    relationCloudRsCtxToFlowLog?: pulumi.Input<string>;
    /**
     * Create relation to fvCtx
     */
    relationCloudRsToCtx: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
    /**
     * component type
     */
    type?: pulumi.Input<string>;
}
