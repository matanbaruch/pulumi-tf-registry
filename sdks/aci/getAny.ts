// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAny(args: GetAnyArgs, opts?: pulumi.InvokeOptions): Promise<GetAnyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getAny:getAny", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "matchT": args.matchT,
        "nameAlias": args.nameAlias,
        "prefGrMemb": args.prefGrMemb,
        "relationVzRsAnyToCons": args.relationVzRsAnyToCons,
        "relationVzRsAnyToConsIfs": args.relationVzRsAnyToConsIfs,
        "relationVzRsAnyToProvs": args.relationVzRsAnyToProvs,
        "vrfDn": args.vrfDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAny.
 */
export interface GetAnyArgs {
    annotation?: string;
    description?: string;
    id?: string;
    matchT?: string;
    nameAlias?: string;
    prefGrMemb?: string;
    relationVzRsAnyToCons?: string[];
    relationVzRsAnyToConsIfs?: string[];
    relationVzRsAnyToProvs?: string[];
    vrfDn: string;
}

/**
 * A collection of values returned by getAny.
 */
export interface GetAnyResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly matchT: string;
    readonly nameAlias: string;
    readonly prefGrMemb: string;
    readonly relationVzRsAnyToCons?: string[];
    readonly relationVzRsAnyToConsIfs?: string[];
    readonly relationVzRsAnyToProvs?: string[];
    readonly vrfDn: string;
}
export function getAnyOutput(args: GetAnyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnyResult> {
    return pulumi.output(args).apply((a: any) => getAny(a, opts))
}

/**
 * A collection of arguments for invoking getAny.
 */
export interface GetAnyOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    matchT?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    prefGrMemb?: pulumi.Input<string>;
    relationVzRsAnyToCons?: pulumi.Input<pulumi.Input<string>[]>;
    relationVzRsAnyToConsIfs?: pulumi.Input<pulumi.Input<string>[]>;
    relationVzRsAnyToProvs?: pulumi.Input<pulumi.Input<string>[]>;
    vrfDn: pulumi.Input<string>;
}
