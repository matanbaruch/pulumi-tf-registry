// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLocalUser(args: GetLocalUserArgs, opts?: pulumi.InvokeOptions): Promise<GetLocalUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getLocalUser:getLocalUser", {
        "accountStatus": args.accountStatus,
        "annotation": args.annotation,
        "certAttribute": args.certAttribute,
        "clearPwdHistory": args.clearPwdHistory,
        "description": args.description,
        "email": args.email,
        "expiration": args.expiration,
        "expires": args.expires,
        "firstName": args.firstName,
        "id": args.id,
        "lastName": args.lastName,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "otpenable": args.otpenable,
        "otpkey": args.otpkey,
        "phone": args.phone,
        "pwdLifeTime": args.pwdLifeTime,
        "pwdUpdateRequired": args.pwdUpdateRequired,
        "rbacString": args.rbacString,
        "unixUserId": args.unixUserId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocalUser.
 */
export interface GetLocalUserArgs {
    accountStatus?: string;
    annotation?: string;
    certAttribute?: string;
    clearPwdHistory?: string;
    description?: string;
    email?: string;
    expiration?: string;
    expires?: string;
    firstName?: string;
    id?: string;
    lastName?: string;
    name: string;
    nameAlias?: string;
    otpenable?: string;
    otpkey?: string;
    phone?: string;
    pwdLifeTime?: string;
    pwdUpdateRequired?: string;
    rbacString?: string;
    unixUserId?: string;
}

/**
 * A collection of values returned by getLocalUser.
 */
export interface GetLocalUserResult {
    readonly accountStatus: string;
    readonly annotation: string;
    readonly certAttribute: string;
    readonly clearPwdHistory: string;
    readonly description: string;
    readonly email: string;
    readonly expiration: string;
    readonly expires: string;
    readonly firstName: string;
    readonly id: string;
    readonly lastName: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly otpenable: string;
    readonly otpkey: string;
    readonly phone: string;
    readonly pwdLifeTime: string;
    readonly pwdUpdateRequired: string;
    readonly rbacString: string;
    readonly unixUserId: string;
}
export function getLocalUserOutput(args: GetLocalUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocalUserResult> {
    return pulumi.output(args).apply((a: any) => getLocalUser(a, opts))
}

/**
 * A collection of arguments for invoking getLocalUser.
 */
export interface GetLocalUserOutputArgs {
    accountStatus?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    certAttribute?: pulumi.Input<string>;
    clearPwdHistory?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    expiration?: pulumi.Input<string>;
    expires?: pulumi.Input<string>;
    firstName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lastName?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    otpenable?: pulumi.Input<string>;
    otpkey?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    pwdLifeTime?: pulumi.Input<string>;
    pwdUpdateRequired?: pulumi.Input<string>;
    rbacString?: pulumi.Input<string>;
    unixUserId?: pulumi.Input<string>;
}
