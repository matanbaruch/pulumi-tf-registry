// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VmmDomain extends pulumi.CustomResource {
    /**
     * Get an existing VmmDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmmDomainState, opts?: pulumi.CustomResourceOptions): VmmDomain {
        return new VmmDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/vmmDomain:VmmDomain';

    /**
     * Returns true if the given object is an instance of VmmDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmmDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmmDomain.__pulumiType;
    }

    public readonly accessMode!: pulumi.Output<string>;
    public readonly annotation!: pulumi.Output<string | undefined>;
    public readonly arpLearning!: pulumi.Output<string>;
    public readonly aveTimeOut!: pulumi.Output<string>;
    public readonly configInfraPg!: pulumi.Output<string>;
    public readonly ctrlKnob!: pulumi.Output<string>;
    public readonly delimiter!: pulumi.Output<string>;
    public readonly enableAve!: pulumi.Output<string>;
    public readonly enableTag!: pulumi.Output<string>;
    public readonly enableVmFolder!: pulumi.Output<string>;
    public readonly encapMode!: pulumi.Output<string>;
    public readonly enfPref!: pulumi.Output<string>;
    public readonly epInventoryType!: pulumi.Output<string>;
    public readonly epRetTime!: pulumi.Output<string>;
    public readonly hvAvailMonitor!: pulumi.Output<string>;
    public readonly mcastAddr!: pulumi.Output<string>;
    public readonly mode!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    public readonly prefEncapMode!: pulumi.Output<string>;
    public readonly providerProfileDn!: pulumi.Output<string>;
    public readonly relationInfraRsDomVxlanNsDef!: pulumi.Output<string | undefined>;
    public readonly relationInfraRsVipAddrNs!: pulumi.Output<string | undefined>;
    public readonly relationInfraRsVlanNs!: pulumi.Output<string | undefined>;
    public readonly relationInfraRsVlanNsDef!: pulumi.Output<string | undefined>;
    public readonly relationVmmRsDefaultCdpIfPol!: pulumi.Output<string>;
    public readonly relationVmmRsDefaultFwPol!: pulumi.Output<string>;
    public readonly relationVmmRsDefaultL2InstPol!: pulumi.Output<string>;
    public readonly relationVmmRsDefaultLacpLagPol!: pulumi.Output<string>;
    public readonly relationVmmRsDefaultLldpIfPol!: pulumi.Output<string>;
    public readonly relationVmmRsDefaultStpIfPol!: pulumi.Output<string>;
    public readonly relationVmmRsDomMcastAddrNs!: pulumi.Output<string | undefined>;
    public readonly relationVmmRsPrefEnhancedLagPol!: pulumi.Output<string | undefined>;

    /**
     * Create a VmmDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmmDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmmDomainArgs | VmmDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmmDomainState | undefined;
            resourceInputs["accessMode"] = state ? state.accessMode : undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["arpLearning"] = state ? state.arpLearning : undefined;
            resourceInputs["aveTimeOut"] = state ? state.aveTimeOut : undefined;
            resourceInputs["configInfraPg"] = state ? state.configInfraPg : undefined;
            resourceInputs["ctrlKnob"] = state ? state.ctrlKnob : undefined;
            resourceInputs["delimiter"] = state ? state.delimiter : undefined;
            resourceInputs["enableAve"] = state ? state.enableAve : undefined;
            resourceInputs["enableTag"] = state ? state.enableTag : undefined;
            resourceInputs["enableVmFolder"] = state ? state.enableVmFolder : undefined;
            resourceInputs["encapMode"] = state ? state.encapMode : undefined;
            resourceInputs["enfPref"] = state ? state.enfPref : undefined;
            resourceInputs["epInventoryType"] = state ? state.epInventoryType : undefined;
            resourceInputs["epRetTime"] = state ? state.epRetTime : undefined;
            resourceInputs["hvAvailMonitor"] = state ? state.hvAvailMonitor : undefined;
            resourceInputs["mcastAddr"] = state ? state.mcastAddr : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["prefEncapMode"] = state ? state.prefEncapMode : undefined;
            resourceInputs["providerProfileDn"] = state ? state.providerProfileDn : undefined;
            resourceInputs["relationInfraRsDomVxlanNsDef"] = state ? state.relationInfraRsDomVxlanNsDef : undefined;
            resourceInputs["relationInfraRsVipAddrNs"] = state ? state.relationInfraRsVipAddrNs : undefined;
            resourceInputs["relationInfraRsVlanNs"] = state ? state.relationInfraRsVlanNs : undefined;
            resourceInputs["relationInfraRsVlanNsDef"] = state ? state.relationInfraRsVlanNsDef : undefined;
            resourceInputs["relationVmmRsDefaultCdpIfPol"] = state ? state.relationVmmRsDefaultCdpIfPol : undefined;
            resourceInputs["relationVmmRsDefaultFwPol"] = state ? state.relationVmmRsDefaultFwPol : undefined;
            resourceInputs["relationVmmRsDefaultL2InstPol"] = state ? state.relationVmmRsDefaultL2InstPol : undefined;
            resourceInputs["relationVmmRsDefaultLacpLagPol"] = state ? state.relationVmmRsDefaultLacpLagPol : undefined;
            resourceInputs["relationVmmRsDefaultLldpIfPol"] = state ? state.relationVmmRsDefaultLldpIfPol : undefined;
            resourceInputs["relationVmmRsDefaultStpIfPol"] = state ? state.relationVmmRsDefaultStpIfPol : undefined;
            resourceInputs["relationVmmRsDomMcastAddrNs"] = state ? state.relationVmmRsDomMcastAddrNs : undefined;
            resourceInputs["relationVmmRsPrefEnhancedLagPol"] = state ? state.relationVmmRsPrefEnhancedLagPol : undefined;
        } else {
            const args = argsOrState as VmmDomainArgs | undefined;
            if ((!args || args.providerProfileDn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerProfileDn'");
            }
            resourceInputs["accessMode"] = args ? args.accessMode : undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["arpLearning"] = args ? args.arpLearning : undefined;
            resourceInputs["aveTimeOut"] = args ? args.aveTimeOut : undefined;
            resourceInputs["configInfraPg"] = args ? args.configInfraPg : undefined;
            resourceInputs["ctrlKnob"] = args ? args.ctrlKnob : undefined;
            resourceInputs["delimiter"] = args ? args.delimiter : undefined;
            resourceInputs["enableAve"] = args ? args.enableAve : undefined;
            resourceInputs["enableTag"] = args ? args.enableTag : undefined;
            resourceInputs["enableVmFolder"] = args ? args.enableVmFolder : undefined;
            resourceInputs["encapMode"] = args ? args.encapMode : undefined;
            resourceInputs["enfPref"] = args ? args.enfPref : undefined;
            resourceInputs["epInventoryType"] = args ? args.epInventoryType : undefined;
            resourceInputs["epRetTime"] = args ? args.epRetTime : undefined;
            resourceInputs["hvAvailMonitor"] = args ? args.hvAvailMonitor : undefined;
            resourceInputs["mcastAddr"] = args ? args.mcastAddr : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["prefEncapMode"] = args ? args.prefEncapMode : undefined;
            resourceInputs["providerProfileDn"] = args ? args.providerProfileDn : undefined;
            resourceInputs["relationInfraRsDomVxlanNsDef"] = args ? args.relationInfraRsDomVxlanNsDef : undefined;
            resourceInputs["relationInfraRsVipAddrNs"] = args ? args.relationInfraRsVipAddrNs : undefined;
            resourceInputs["relationInfraRsVlanNs"] = args ? args.relationInfraRsVlanNs : undefined;
            resourceInputs["relationInfraRsVlanNsDef"] = args ? args.relationInfraRsVlanNsDef : undefined;
            resourceInputs["relationVmmRsDefaultCdpIfPol"] = args ? args.relationVmmRsDefaultCdpIfPol : undefined;
            resourceInputs["relationVmmRsDefaultFwPol"] = args ? args.relationVmmRsDefaultFwPol : undefined;
            resourceInputs["relationVmmRsDefaultL2InstPol"] = args ? args.relationVmmRsDefaultL2InstPol : undefined;
            resourceInputs["relationVmmRsDefaultLacpLagPol"] = args ? args.relationVmmRsDefaultLacpLagPol : undefined;
            resourceInputs["relationVmmRsDefaultLldpIfPol"] = args ? args.relationVmmRsDefaultLldpIfPol : undefined;
            resourceInputs["relationVmmRsDefaultStpIfPol"] = args ? args.relationVmmRsDefaultStpIfPol : undefined;
            resourceInputs["relationVmmRsDomMcastAddrNs"] = args ? args.relationVmmRsDomMcastAddrNs : undefined;
            resourceInputs["relationVmmRsPrefEnhancedLagPol"] = args ? args.relationVmmRsPrefEnhancedLagPol : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmmDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VmmDomain resources.
 */
export interface VmmDomainState {
    accessMode?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    arpLearning?: pulumi.Input<string>;
    aveTimeOut?: pulumi.Input<string>;
    configInfraPg?: pulumi.Input<string>;
    ctrlKnob?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    enableAve?: pulumi.Input<string>;
    enableTag?: pulumi.Input<string>;
    enableVmFolder?: pulumi.Input<string>;
    encapMode?: pulumi.Input<string>;
    enfPref?: pulumi.Input<string>;
    epInventoryType?: pulumi.Input<string>;
    epRetTime?: pulumi.Input<string>;
    hvAvailMonitor?: pulumi.Input<string>;
    mcastAddr?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    prefEncapMode?: pulumi.Input<string>;
    providerProfileDn?: pulumi.Input<string>;
    relationInfraRsDomVxlanNsDef?: pulumi.Input<string>;
    relationInfraRsVipAddrNs?: pulumi.Input<string>;
    relationInfraRsVlanNs?: pulumi.Input<string>;
    relationInfraRsVlanNsDef?: pulumi.Input<string>;
    relationVmmRsDefaultCdpIfPol?: pulumi.Input<string>;
    relationVmmRsDefaultFwPol?: pulumi.Input<string>;
    relationVmmRsDefaultL2InstPol?: pulumi.Input<string>;
    relationVmmRsDefaultLacpLagPol?: pulumi.Input<string>;
    relationVmmRsDefaultLldpIfPol?: pulumi.Input<string>;
    relationVmmRsDefaultStpIfPol?: pulumi.Input<string>;
    relationVmmRsDomMcastAddrNs?: pulumi.Input<string>;
    relationVmmRsPrefEnhancedLagPol?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VmmDomain resource.
 */
export interface VmmDomainArgs {
    accessMode?: pulumi.Input<string>;
    annotation?: pulumi.Input<string>;
    arpLearning?: pulumi.Input<string>;
    aveTimeOut?: pulumi.Input<string>;
    configInfraPg?: pulumi.Input<string>;
    ctrlKnob?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    enableAve?: pulumi.Input<string>;
    enableTag?: pulumi.Input<string>;
    enableVmFolder?: pulumi.Input<string>;
    encapMode?: pulumi.Input<string>;
    enfPref?: pulumi.Input<string>;
    epInventoryType?: pulumi.Input<string>;
    epRetTime?: pulumi.Input<string>;
    hvAvailMonitor?: pulumi.Input<string>;
    mcastAddr?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    prefEncapMode?: pulumi.Input<string>;
    providerProfileDn: pulumi.Input<string>;
    relationInfraRsDomVxlanNsDef?: pulumi.Input<string>;
    relationInfraRsVipAddrNs?: pulumi.Input<string>;
    relationInfraRsVlanNs?: pulumi.Input<string>;
    relationInfraRsVlanNsDef?: pulumi.Input<string>;
    relationVmmRsDefaultCdpIfPol?: pulumi.Input<string>;
    relationVmmRsDefaultFwPol?: pulumi.Input<string>;
    relationVmmRsDefaultL2InstPol?: pulumi.Input<string>;
    relationVmmRsDefaultLacpLagPol?: pulumi.Input<string>;
    relationVmmRsDefaultLldpIfPol?: pulumi.Input<string>;
    relationVmmRsDefaultStpIfPol?: pulumi.Input<string>;
    relationVmmRsDomMcastAddrNs?: pulumi.Input<string>;
    relationVmmRsPrefEnhancedLagPol?: pulumi.Input<string>;
}
