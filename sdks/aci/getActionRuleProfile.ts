// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getActionRuleProfile(args: GetActionRuleProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetActionRuleProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getActionRuleProfile:getActionRuleProfile", {
        "annotation": args.annotation,
        "description": args.description,
        "id": args.id,
        "multipath": args.multipath,
        "name": args.name,
        "nameAlias": args.nameAlias,
        "nextHopPropagation": args.nextHopPropagation,
        "setAsPathPrependAs": args.setAsPathPrependAs,
        "setAsPathPrependLastAs": args.setAsPathPrependLastAs,
        "setCommunities": args.setCommunities,
        "setDampening": args.setDampening,
        "setMetric": args.setMetric,
        "setMetricType": args.setMetricType,
        "setNextHop": args.setNextHop,
        "setPreference": args.setPreference,
        "setRouteTag": args.setRouteTag,
        "setWeight": args.setWeight,
        "tenantDn": args.tenantDn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getActionRuleProfile.
 */
export interface GetActionRuleProfileArgs {
    annotation?: string;
    description?: string;
    id?: string;
    multipath?: string;
    name: string;
    nameAlias?: string;
    nextHopPropagation?: string;
    setAsPathPrependAs?: inputs.GetActionRuleProfileSetAsPathPrependA[];
    setAsPathPrependLastAs?: string;
    setCommunities?: {[key: string]: string};
    setDampening?: {[key: string]: string};
    setMetric?: string;
    setMetricType?: string;
    setNextHop?: string;
    setPreference?: string;
    setRouteTag?: string;
    setWeight?: string;
    tenantDn: string;
}

/**
 * A collection of values returned by getActionRuleProfile.
 */
export interface GetActionRuleProfileResult {
    readonly annotation: string;
    readonly description: string;
    readonly id: string;
    readonly multipath?: string;
    readonly name: string;
    readonly nameAlias: string;
    readonly nextHopPropagation?: string;
    readonly setAsPathPrependAs?: outputs.GetActionRuleProfileSetAsPathPrependA[];
    readonly setAsPathPrependLastAs?: string;
    readonly setCommunities?: {[key: string]: string};
    readonly setDampening?: {[key: string]: string};
    readonly setMetric?: string;
    readonly setMetricType?: string;
    readonly setNextHop?: string;
    readonly setPreference?: string;
    readonly setRouteTag?: string;
    readonly setWeight?: string;
    readonly tenantDn: string;
}
export function getActionRuleProfileOutput(args: GetActionRuleProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActionRuleProfileResult> {
    return pulumi.output(args).apply((a: any) => getActionRuleProfile(a, opts))
}

/**
 * A collection of arguments for invoking getActionRuleProfile.
 */
export interface GetActionRuleProfileOutputArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    multipath?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    nextHopPropagation?: pulumi.Input<string>;
    setAsPathPrependAs?: pulumi.Input<pulumi.Input<inputs.GetActionRuleProfileSetAsPathPrependAArgs>[]>;
    setAsPathPrependLastAs?: pulumi.Input<string>;
    setCommunities?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    setDampening?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    setMetric?: pulumi.Input<string>;
    setMetricType?: pulumi.Input<string>;
    setNextHop?: pulumi.Input<string>;
    setPreference?: pulumi.Input<string>;
    setRouteTag?: pulumi.Input<string>;
    setWeight?: pulumi.Input<string>;
    tenantDn: pulumi.Input<string>;
}
