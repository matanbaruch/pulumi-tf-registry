// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AccessSwitchPolicyGroup extends pulumi.CustomResource {
    /**
     * Get an existing AccessSwitchPolicyGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessSwitchPolicyGroupState, opts?: pulumi.CustomResourceOptions): AccessSwitchPolicyGroup {
        return new AccessSwitchPolicyGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aci:index/accessSwitchPolicyGroup:AccessSwitchPolicyGroup';

    /**
     * Returns true if the given object is an instance of AccessSwitchPolicyGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessSwitchPolicyGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessSwitchPolicyGroup.__pulumiType;
    }

    public readonly annotation!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly nameAlias!: pulumi.Output<string>;
    /**
     * Create relation to bfd:Ipv4InstPol
     */
    public readonly relationInfraRsBfdIpv4InstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to bfd:Ipv6InstPol
     */
    public readonly relationInfraRsBfdIpv6InstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to bfd:MhIpv4InstPol
     */
    public readonly relationInfraRsBfdMhIpv4InstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to bfd:MhIpv6InstPol
     */
    public readonly relationInfraRsBfdMhIpv6InstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to equipment:FlashConfigPol
     */
    public readonly relationInfraRsEquipmentFlashConfigPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to fc:FabricPol
     */
    public readonly relationInfraRsFcFabricPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to fc:InstPol
     */
    public readonly relationInfraRsFcInstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to iacl:LeafProfile
     */
    public readonly relationInfraRsIaclLeafProfile!: pulumi.Output<string | undefined>;
    /**
     * Create relation to l2:NodeAuthPol
     */
    public readonly relationInfraRsL2NodeAuthPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to copp:LeafProfile
     */
    public readonly relationInfraRsLeafCoppProfile!: pulumi.Output<string | undefined>;
    /**
     * Create relation to cdp:IfPol
     */
    public readonly relationInfraRsLeafPGrpToCdpIfPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to lldp:IfPol
     */
    public readonly relationInfraRsLeafPGrpToLldpIfPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to mon:InfraPol
     */
    public readonly relationInfraRsMonNodeInfraPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to stp:InstPol
     */
    public readonly relationInfraRsMstInstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to netflow:NodePol
     */
    public readonly relationInfraRsNetflowNodePol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to poe:InstPol
     */
    public readonly relationInfraRsPoeInstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to topoctrl:FastLinkFailoverInstPol
     */
    public readonly relationInfraRsTopoctrlFastLinkFailoverInstPol!: pulumi.Output<string | undefined>;
    /**
     * Create relation to topoctrl:FwdScaleProfilePol
     */
    public readonly relationInfraRsTopoctrlFwdScaleProfPol!: pulumi.Output<string | undefined>;

    /**
     * Create a AccessSwitchPolicyGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccessSwitchPolicyGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessSwitchPolicyGroupArgs | AccessSwitchPolicyGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessSwitchPolicyGroupState | undefined;
            resourceInputs["annotation"] = state ? state.annotation : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameAlias"] = state ? state.nameAlias : undefined;
            resourceInputs["relationInfraRsBfdIpv4InstPol"] = state ? state.relationInfraRsBfdIpv4InstPol : undefined;
            resourceInputs["relationInfraRsBfdIpv6InstPol"] = state ? state.relationInfraRsBfdIpv6InstPol : undefined;
            resourceInputs["relationInfraRsBfdMhIpv4InstPol"] = state ? state.relationInfraRsBfdMhIpv4InstPol : undefined;
            resourceInputs["relationInfraRsBfdMhIpv6InstPol"] = state ? state.relationInfraRsBfdMhIpv6InstPol : undefined;
            resourceInputs["relationInfraRsEquipmentFlashConfigPol"] = state ? state.relationInfraRsEquipmentFlashConfigPol : undefined;
            resourceInputs["relationInfraRsFcFabricPol"] = state ? state.relationInfraRsFcFabricPol : undefined;
            resourceInputs["relationInfraRsFcInstPol"] = state ? state.relationInfraRsFcInstPol : undefined;
            resourceInputs["relationInfraRsIaclLeafProfile"] = state ? state.relationInfraRsIaclLeafProfile : undefined;
            resourceInputs["relationInfraRsL2NodeAuthPol"] = state ? state.relationInfraRsL2NodeAuthPol : undefined;
            resourceInputs["relationInfraRsLeafCoppProfile"] = state ? state.relationInfraRsLeafCoppProfile : undefined;
            resourceInputs["relationInfraRsLeafPGrpToCdpIfPol"] = state ? state.relationInfraRsLeafPGrpToCdpIfPol : undefined;
            resourceInputs["relationInfraRsLeafPGrpToLldpIfPol"] = state ? state.relationInfraRsLeafPGrpToLldpIfPol : undefined;
            resourceInputs["relationInfraRsMonNodeInfraPol"] = state ? state.relationInfraRsMonNodeInfraPol : undefined;
            resourceInputs["relationInfraRsMstInstPol"] = state ? state.relationInfraRsMstInstPol : undefined;
            resourceInputs["relationInfraRsNetflowNodePol"] = state ? state.relationInfraRsNetflowNodePol : undefined;
            resourceInputs["relationInfraRsPoeInstPol"] = state ? state.relationInfraRsPoeInstPol : undefined;
            resourceInputs["relationInfraRsTopoctrlFastLinkFailoverInstPol"] = state ? state.relationInfraRsTopoctrlFastLinkFailoverInstPol : undefined;
            resourceInputs["relationInfraRsTopoctrlFwdScaleProfPol"] = state ? state.relationInfraRsTopoctrlFwdScaleProfPol : undefined;
        } else {
            const args = argsOrState as AccessSwitchPolicyGroupArgs | undefined;
            resourceInputs["annotation"] = args ? args.annotation : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameAlias"] = args ? args.nameAlias : undefined;
            resourceInputs["relationInfraRsBfdIpv4InstPol"] = args ? args.relationInfraRsBfdIpv4InstPol : undefined;
            resourceInputs["relationInfraRsBfdIpv6InstPol"] = args ? args.relationInfraRsBfdIpv6InstPol : undefined;
            resourceInputs["relationInfraRsBfdMhIpv4InstPol"] = args ? args.relationInfraRsBfdMhIpv4InstPol : undefined;
            resourceInputs["relationInfraRsBfdMhIpv6InstPol"] = args ? args.relationInfraRsBfdMhIpv6InstPol : undefined;
            resourceInputs["relationInfraRsEquipmentFlashConfigPol"] = args ? args.relationInfraRsEquipmentFlashConfigPol : undefined;
            resourceInputs["relationInfraRsFcFabricPol"] = args ? args.relationInfraRsFcFabricPol : undefined;
            resourceInputs["relationInfraRsFcInstPol"] = args ? args.relationInfraRsFcInstPol : undefined;
            resourceInputs["relationInfraRsIaclLeafProfile"] = args ? args.relationInfraRsIaclLeafProfile : undefined;
            resourceInputs["relationInfraRsL2NodeAuthPol"] = args ? args.relationInfraRsL2NodeAuthPol : undefined;
            resourceInputs["relationInfraRsLeafCoppProfile"] = args ? args.relationInfraRsLeafCoppProfile : undefined;
            resourceInputs["relationInfraRsLeafPGrpToCdpIfPol"] = args ? args.relationInfraRsLeafPGrpToCdpIfPol : undefined;
            resourceInputs["relationInfraRsLeafPGrpToLldpIfPol"] = args ? args.relationInfraRsLeafPGrpToLldpIfPol : undefined;
            resourceInputs["relationInfraRsMonNodeInfraPol"] = args ? args.relationInfraRsMonNodeInfraPol : undefined;
            resourceInputs["relationInfraRsMstInstPol"] = args ? args.relationInfraRsMstInstPol : undefined;
            resourceInputs["relationInfraRsNetflowNodePol"] = args ? args.relationInfraRsNetflowNodePol : undefined;
            resourceInputs["relationInfraRsPoeInstPol"] = args ? args.relationInfraRsPoeInstPol : undefined;
            resourceInputs["relationInfraRsTopoctrlFastLinkFailoverInstPol"] = args ? args.relationInfraRsTopoctrlFastLinkFailoverInstPol : undefined;
            resourceInputs["relationInfraRsTopoctrlFwdScaleProfPol"] = args ? args.relationInfraRsTopoctrlFwdScaleProfPol : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessSwitchPolicyGroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AccessSwitchPolicyGroup resources.
 */
export interface AccessSwitchPolicyGroupState {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    /**
     * Create relation to bfd:Ipv4InstPol
     */
    relationInfraRsBfdIpv4InstPol?: pulumi.Input<string>;
    /**
     * Create relation to bfd:Ipv6InstPol
     */
    relationInfraRsBfdIpv6InstPol?: pulumi.Input<string>;
    /**
     * Create relation to bfd:MhIpv4InstPol
     */
    relationInfraRsBfdMhIpv4InstPol?: pulumi.Input<string>;
    /**
     * Create relation to bfd:MhIpv6InstPol
     */
    relationInfraRsBfdMhIpv6InstPol?: pulumi.Input<string>;
    /**
     * Create relation to equipment:FlashConfigPol
     */
    relationInfraRsEquipmentFlashConfigPol?: pulumi.Input<string>;
    /**
     * Create relation to fc:FabricPol
     */
    relationInfraRsFcFabricPol?: pulumi.Input<string>;
    /**
     * Create relation to fc:InstPol
     */
    relationInfraRsFcInstPol?: pulumi.Input<string>;
    /**
     * Create relation to iacl:LeafProfile
     */
    relationInfraRsIaclLeafProfile?: pulumi.Input<string>;
    /**
     * Create relation to l2:NodeAuthPol
     */
    relationInfraRsL2NodeAuthPol?: pulumi.Input<string>;
    /**
     * Create relation to copp:LeafProfile
     */
    relationInfraRsLeafCoppProfile?: pulumi.Input<string>;
    /**
     * Create relation to cdp:IfPol
     */
    relationInfraRsLeafPGrpToCdpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to lldp:IfPol
     */
    relationInfraRsLeafPGrpToLldpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to mon:InfraPol
     */
    relationInfraRsMonNodeInfraPol?: pulumi.Input<string>;
    /**
     * Create relation to stp:InstPol
     */
    relationInfraRsMstInstPol?: pulumi.Input<string>;
    /**
     * Create relation to netflow:NodePol
     */
    relationInfraRsNetflowNodePol?: pulumi.Input<string>;
    /**
     * Create relation to poe:InstPol
     */
    relationInfraRsPoeInstPol?: pulumi.Input<string>;
    /**
     * Create relation to topoctrl:FastLinkFailoverInstPol
     */
    relationInfraRsTopoctrlFastLinkFailoverInstPol?: pulumi.Input<string>;
    /**
     * Create relation to topoctrl:FwdScaleProfilePol
     */
    relationInfraRsTopoctrlFwdScaleProfPol?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccessSwitchPolicyGroup resource.
 */
export interface AccessSwitchPolicyGroupArgs {
    annotation?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nameAlias?: pulumi.Input<string>;
    /**
     * Create relation to bfd:Ipv4InstPol
     */
    relationInfraRsBfdIpv4InstPol?: pulumi.Input<string>;
    /**
     * Create relation to bfd:Ipv6InstPol
     */
    relationInfraRsBfdIpv6InstPol?: pulumi.Input<string>;
    /**
     * Create relation to bfd:MhIpv4InstPol
     */
    relationInfraRsBfdMhIpv4InstPol?: pulumi.Input<string>;
    /**
     * Create relation to bfd:MhIpv6InstPol
     */
    relationInfraRsBfdMhIpv6InstPol?: pulumi.Input<string>;
    /**
     * Create relation to equipment:FlashConfigPol
     */
    relationInfraRsEquipmentFlashConfigPol?: pulumi.Input<string>;
    /**
     * Create relation to fc:FabricPol
     */
    relationInfraRsFcFabricPol?: pulumi.Input<string>;
    /**
     * Create relation to fc:InstPol
     */
    relationInfraRsFcInstPol?: pulumi.Input<string>;
    /**
     * Create relation to iacl:LeafProfile
     */
    relationInfraRsIaclLeafProfile?: pulumi.Input<string>;
    /**
     * Create relation to l2:NodeAuthPol
     */
    relationInfraRsL2NodeAuthPol?: pulumi.Input<string>;
    /**
     * Create relation to copp:LeafProfile
     */
    relationInfraRsLeafCoppProfile?: pulumi.Input<string>;
    /**
     * Create relation to cdp:IfPol
     */
    relationInfraRsLeafPGrpToCdpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to lldp:IfPol
     */
    relationInfraRsLeafPGrpToLldpIfPol?: pulumi.Input<string>;
    /**
     * Create relation to mon:InfraPol
     */
    relationInfraRsMonNodeInfraPol?: pulumi.Input<string>;
    /**
     * Create relation to stp:InstPol
     */
    relationInfraRsMstInstPol?: pulumi.Input<string>;
    /**
     * Create relation to netflow:NodePol
     */
    relationInfraRsNetflowNodePol?: pulumi.Input<string>;
    /**
     * Create relation to poe:InstPol
     */
    relationInfraRsPoeInstPol?: pulumi.Input<string>;
    /**
     * Create relation to topoctrl:FastLinkFailoverInstPol
     */
    relationInfraRsTopoctrlFastLinkFailoverInstPol?: pulumi.Input<string>;
    /**
     * Create relation to topoctrl:FwdScaleProfilePol
     */
    relationInfraRsTopoctrlFwdScaleProfPol?: pulumi.Input<string>;
}
