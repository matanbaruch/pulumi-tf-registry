// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSpinePortSelector(args: GetSpinePortSelectorArgs, opts?: pulumi.InvokeOptions): Promise<GetSpinePortSelectorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getSpinePortSelector:getSpinePortSelector", {
        "id": args.id,
        "spineProfileDn": args.spineProfileDn,
        "tdn": args.tdn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSpinePortSelector.
 */
export interface GetSpinePortSelectorArgs {
    id?: string;
    spineProfileDn: string;
    tdn: string;
}

/**
 * A collection of values returned by getSpinePortSelector.
 */
export interface GetSpinePortSelectorResult {
    readonly id: string;
    readonly spineProfileDn: string;
    readonly tdn: string;
}
export function getSpinePortSelectorOutput(args: GetSpinePortSelectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpinePortSelectorResult> {
    return pulumi.output(args).apply((a: any) => getSpinePortSelector(a, opts))
}

/**
 * A collection of arguments for invoking getSpinePortSelector.
 */
export interface GetSpinePortSelectorOutputArgs {
    id?: pulumi.Input<string>;
    spineProfileDn: pulumi.Input<string>;
    tdn: pulumi.Input<string>;
}
