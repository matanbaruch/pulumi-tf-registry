// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEpgToDomain(args: GetEpgToDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetEpgToDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aci:index/getEpgToDomain:getEpgToDomain", {
        "allowMicroSeg": args.allowMicroSeg,
        "annotation": args.annotation,
        "applicationEpgDn": args.applicationEpgDn,
        "bindingType": args.bindingType,
        "customEpgName": args.customEpgName,
        "delimiter": args.delimiter,
        "encap": args.encap,
        "encapMode": args.encapMode,
        "enhancedLagPolicy": args.enhancedLagPolicy,
        "epgCos": args.epgCos,
        "epgCosPref": args.epgCosPref,
        "id": args.id,
        "instrImedcy": args.instrImedcy,
        "lagPolicyName": args.lagPolicyName,
        "netflowDir": args.netflowDir,
        "netflowPref": args.netflowPref,
        "numPorts": args.numPorts,
        "portAllocation": args.portAllocation,
        "primaryEncap": args.primaryEncap,
        "primaryEncapInner": args.primaryEncapInner,
        "resImedcy": args.resImedcy,
        "secondaryEncapInner": args.secondaryEncapInner,
        "switchingMode": args.switchingMode,
        "tdn": args.tdn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEpgToDomain.
 */
export interface GetEpgToDomainArgs {
    allowMicroSeg?: boolean;
    annotation?: string;
    applicationEpgDn: string;
    bindingType?: string;
    customEpgName?: string;
    delimiter?: string;
    encap?: string;
    encapMode?: string;
    enhancedLagPolicy?: string;
    epgCos?: string;
    epgCosPref?: string;
    id?: string;
    instrImedcy?: string;
    /**
     * @deprecated Deprecated
     */
    lagPolicyName?: string;
    netflowDir?: string;
    netflowPref?: string;
    numPorts?: string;
    portAllocation?: string;
    primaryEncap?: string;
    primaryEncapInner?: string;
    resImedcy?: string;
    secondaryEncapInner?: string;
    switchingMode?: string;
    tdn: string;
}

/**
 * A collection of values returned by getEpgToDomain.
 */
export interface GetEpgToDomainResult {
    readonly allowMicroSeg: boolean;
    readonly annotation: string;
    readonly applicationEpgDn: string;
    readonly bindingType: string;
    readonly customEpgName: string;
    readonly delimiter: string;
    readonly encap: string;
    readonly encapMode: string;
    readonly enhancedLagPolicy?: string;
    readonly epgCos: string;
    readonly epgCosPref: string;
    readonly id: string;
    readonly instrImedcy: string;
    /**
     * @deprecated Deprecated
     */
    readonly lagPolicyName: string;
    readonly netflowDir: string;
    readonly netflowPref: string;
    readonly numPorts: string;
    readonly portAllocation: string;
    readonly primaryEncap: string;
    readonly primaryEncapInner: string;
    readonly resImedcy: string;
    readonly secondaryEncapInner: string;
    readonly switchingMode: string;
    readonly tdn: string;
}
export function getEpgToDomainOutput(args: GetEpgToDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEpgToDomainResult> {
    return pulumi.output(args).apply((a: any) => getEpgToDomain(a, opts))
}

/**
 * A collection of arguments for invoking getEpgToDomain.
 */
export interface GetEpgToDomainOutputArgs {
    allowMicroSeg?: pulumi.Input<boolean>;
    annotation?: pulumi.Input<string>;
    applicationEpgDn: pulumi.Input<string>;
    bindingType?: pulumi.Input<string>;
    customEpgName?: pulumi.Input<string>;
    delimiter?: pulumi.Input<string>;
    encap?: pulumi.Input<string>;
    encapMode?: pulumi.Input<string>;
    enhancedLagPolicy?: pulumi.Input<string>;
    epgCos?: pulumi.Input<string>;
    epgCosPref?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    instrImedcy?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    lagPolicyName?: pulumi.Input<string>;
    netflowDir?: pulumi.Input<string>;
    netflowPref?: pulumi.Input<string>;
    numPorts?: pulumi.Input<string>;
    portAllocation?: pulumi.Input<string>;
    primaryEncap?: pulumi.Input<string>;
    primaryEncapInner?: pulumi.Input<string>;
    resImedcy?: pulumi.Input<string>;
    secondaryEncapInner?: pulumi.Input<string>;
    switchingMode?: pulumi.Input<string>;
    tdn: pulumi.Input<string>;
}
