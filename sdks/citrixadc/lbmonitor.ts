// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Lbmonitor extends pulumi.CustomResource {
    /**
     * Get an existing Lbmonitor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbmonitorState, opts?: pulumi.CustomResourceOptions): Lbmonitor {
        return new Lbmonitor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/lbmonitor:Lbmonitor';

    /**
     * Returns true if the given object is an instance of Lbmonitor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Lbmonitor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lbmonitor.__pulumiType;
    }

    public readonly action!: pulumi.Output<string>;
    public readonly alertretries!: pulumi.Output<number>;
    public readonly application!: pulumi.Output<string>;
    public readonly attribute!: pulumi.Output<string>;
    public readonly basedn!: pulumi.Output<string>;
    public readonly binddn!: pulumi.Output<string>;
    public readonly customheaders!: pulumi.Output<string>;
    public readonly database!: pulumi.Output<string>;
    public readonly destip!: pulumi.Output<string>;
    public readonly destport!: pulumi.Output<number>;
    public readonly deviation!: pulumi.Output<number>;
    public readonly dispatcherip!: pulumi.Output<string>;
    public readonly dispatcherport!: pulumi.Output<number>;
    public readonly domain!: pulumi.Output<string>;
    public readonly downtime!: pulumi.Output<number>;
    public readonly evalrule!: pulumi.Output<string>;
    public readonly failureretries!: pulumi.Output<number>;
    public readonly filename!: pulumi.Output<string>;
    public readonly filter!: pulumi.Output<string>;
    public readonly firmwarerevision!: pulumi.Output<number>;
    public readonly group!: pulumi.Output<string>;
    public readonly hostipaddress!: pulumi.Output<string>;
    public readonly hostname!: pulumi.Output<string>;
    public readonly httprequest!: pulumi.Output<string>;
    public readonly inbandsecurityid!: pulumi.Output<string>;
    public readonly interval!: pulumi.Output<number>;
    public readonly ipaddresses!: pulumi.Output<string[]>;
    public readonly iptunnel!: pulumi.Output<string>;
    public readonly kcdaccount!: pulumi.Output<string>;
    public readonly lasversion!: pulumi.Output<string>;
    public readonly logonpointname!: pulumi.Output<string>;
    public readonly lrtm!: pulumi.Output<string>;
    public readonly maxforwards!: pulumi.Output<number>;
    public readonly metric!: pulumi.Output<string>;
    public readonly metrictable!: pulumi.Output<string>;
    public readonly metricthreshold!: pulumi.Output<number>;
    public readonly metricweight!: pulumi.Output<number>;
    public readonly monitorname!: pulumi.Output<string>;
    public readonly mssqlprotocolversion!: pulumi.Output<string>;
    public readonly netprofile!: pulumi.Output<string>;
    public readonly oraclesid!: pulumi.Output<string>;
    public readonly originhost!: pulumi.Output<string>;
    public readonly originrealm!: pulumi.Output<string>;
    public readonly password!: pulumi.Output<string>;
    public readonly productname!: pulumi.Output<string>;
    public readonly query!: pulumi.Output<string>;
    public readonly querytype!: pulumi.Output<string>;
    public readonly radaccountsession!: pulumi.Output<string>;
    public readonly radaccounttype!: pulumi.Output<number>;
    public readonly radapn!: pulumi.Output<string>;
    public readonly radframedip!: pulumi.Output<string>;
    public readonly radkey!: pulumi.Output<string>;
    public readonly radmsisdn!: pulumi.Output<string>;
    public readonly radnasid!: pulumi.Output<string>;
    public readonly radnasip!: pulumi.Output<string>;
    public readonly recv!: pulumi.Output<string>;
    public readonly respcodes!: pulumi.Output<string[] | undefined>;
    public readonly resptimeout!: pulumi.Output<number>;
    public readonly resptimeoutthresh!: pulumi.Output<number>;
    public readonly retries!: pulumi.Output<number>;
    public readonly reverse!: pulumi.Output<string>;
    public readonly rtsprequest!: pulumi.Output<string>;
    public readonly scriptargs!: pulumi.Output<string>;
    public readonly scriptname!: pulumi.Output<string>;
    public readonly secondarypassword!: pulumi.Output<string>;
    public readonly secure!: pulumi.Output<string>;
    public readonly send!: pulumi.Output<string>;
    public readonly servicegroupname!: pulumi.Output<string>;
    public readonly servicename!: pulumi.Output<string>;
    public readonly sipmethod!: pulumi.Output<string>;
    public readonly sipreguri!: pulumi.Output<string>;
    public readonly sipuri!: pulumi.Output<string>;
    public readonly sitepath!: pulumi.Output<string>;
    public readonly snmpcommunity!: pulumi.Output<string>;
    public readonly snmpoid!: pulumi.Output<string>;
    public readonly snmpthreshold!: pulumi.Output<string>;
    public readonly snmpversion!: pulumi.Output<string>;
    public readonly sqlquery!: pulumi.Output<string>;
    public readonly sslprofile!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public readonly storedb!: pulumi.Output<string>;
    public readonly storefrontacctservice!: pulumi.Output<string>;
    public readonly storefrontcheckbackendservices!: pulumi.Output<string>;
    public readonly storename!: pulumi.Output<string>;
    public readonly successretries!: pulumi.Output<number>;
    public readonly tos!: pulumi.Output<string>;
    public readonly tosid!: pulumi.Output<number>;
    public readonly transparent!: pulumi.Output<string>;
    public readonly trofscode!: pulumi.Output<number>;
    public readonly trofsstring!: pulumi.Output<string>;
    public readonly type!: pulumi.Output<string>;
    public readonly units1!: pulumi.Output<string>;
    public readonly units2!: pulumi.Output<string>;
    public readonly units3!: pulumi.Output<string>;
    public readonly units4!: pulumi.Output<string>;
    public readonly username!: pulumi.Output<string>;
    public readonly validatecred!: pulumi.Output<string>;
    public readonly vendorid!: pulumi.Output<number>;
    public readonly vendorspecificvendorid!: pulumi.Output<number>;

    /**
     * Create a Lbmonitor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LbmonitorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbmonitorArgs | LbmonitorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbmonitorState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["alertretries"] = state ? state.alertretries : undefined;
            resourceInputs["application"] = state ? state.application : undefined;
            resourceInputs["attribute"] = state ? state.attribute : undefined;
            resourceInputs["basedn"] = state ? state.basedn : undefined;
            resourceInputs["binddn"] = state ? state.binddn : undefined;
            resourceInputs["customheaders"] = state ? state.customheaders : undefined;
            resourceInputs["database"] = state ? state.database : undefined;
            resourceInputs["destip"] = state ? state.destip : undefined;
            resourceInputs["destport"] = state ? state.destport : undefined;
            resourceInputs["deviation"] = state ? state.deviation : undefined;
            resourceInputs["dispatcherip"] = state ? state.dispatcherip : undefined;
            resourceInputs["dispatcherport"] = state ? state.dispatcherport : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["downtime"] = state ? state.downtime : undefined;
            resourceInputs["evalrule"] = state ? state.evalrule : undefined;
            resourceInputs["failureretries"] = state ? state.failureretries : undefined;
            resourceInputs["filename"] = state ? state.filename : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["firmwarerevision"] = state ? state.firmwarerevision : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["hostipaddress"] = state ? state.hostipaddress : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["httprequest"] = state ? state.httprequest : undefined;
            resourceInputs["inbandsecurityid"] = state ? state.inbandsecurityid : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["ipaddresses"] = state ? state.ipaddresses : undefined;
            resourceInputs["iptunnel"] = state ? state.iptunnel : undefined;
            resourceInputs["kcdaccount"] = state ? state.kcdaccount : undefined;
            resourceInputs["lasversion"] = state ? state.lasversion : undefined;
            resourceInputs["logonpointname"] = state ? state.logonpointname : undefined;
            resourceInputs["lrtm"] = state ? state.lrtm : undefined;
            resourceInputs["maxforwards"] = state ? state.maxforwards : undefined;
            resourceInputs["metric"] = state ? state.metric : undefined;
            resourceInputs["metrictable"] = state ? state.metrictable : undefined;
            resourceInputs["metricthreshold"] = state ? state.metricthreshold : undefined;
            resourceInputs["metricweight"] = state ? state.metricweight : undefined;
            resourceInputs["monitorname"] = state ? state.monitorname : undefined;
            resourceInputs["mssqlprotocolversion"] = state ? state.mssqlprotocolversion : undefined;
            resourceInputs["netprofile"] = state ? state.netprofile : undefined;
            resourceInputs["oraclesid"] = state ? state.oraclesid : undefined;
            resourceInputs["originhost"] = state ? state.originhost : undefined;
            resourceInputs["originrealm"] = state ? state.originrealm : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["productname"] = state ? state.productname : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["querytype"] = state ? state.querytype : undefined;
            resourceInputs["radaccountsession"] = state ? state.radaccountsession : undefined;
            resourceInputs["radaccounttype"] = state ? state.radaccounttype : undefined;
            resourceInputs["radapn"] = state ? state.radapn : undefined;
            resourceInputs["radframedip"] = state ? state.radframedip : undefined;
            resourceInputs["radkey"] = state ? state.radkey : undefined;
            resourceInputs["radmsisdn"] = state ? state.radmsisdn : undefined;
            resourceInputs["radnasid"] = state ? state.radnasid : undefined;
            resourceInputs["radnasip"] = state ? state.radnasip : undefined;
            resourceInputs["recv"] = state ? state.recv : undefined;
            resourceInputs["respcodes"] = state ? state.respcodes : undefined;
            resourceInputs["resptimeout"] = state ? state.resptimeout : undefined;
            resourceInputs["resptimeoutthresh"] = state ? state.resptimeoutthresh : undefined;
            resourceInputs["retries"] = state ? state.retries : undefined;
            resourceInputs["reverse"] = state ? state.reverse : undefined;
            resourceInputs["rtsprequest"] = state ? state.rtsprequest : undefined;
            resourceInputs["scriptargs"] = state ? state.scriptargs : undefined;
            resourceInputs["scriptname"] = state ? state.scriptname : undefined;
            resourceInputs["secondarypassword"] = state ? state.secondarypassword : undefined;
            resourceInputs["secure"] = state ? state.secure : undefined;
            resourceInputs["send"] = state ? state.send : undefined;
            resourceInputs["servicegroupname"] = state ? state.servicegroupname : undefined;
            resourceInputs["servicename"] = state ? state.servicename : undefined;
            resourceInputs["sipmethod"] = state ? state.sipmethod : undefined;
            resourceInputs["sipreguri"] = state ? state.sipreguri : undefined;
            resourceInputs["sipuri"] = state ? state.sipuri : undefined;
            resourceInputs["sitepath"] = state ? state.sitepath : undefined;
            resourceInputs["snmpcommunity"] = state ? state.snmpcommunity : undefined;
            resourceInputs["snmpoid"] = state ? state.snmpoid : undefined;
            resourceInputs["snmpthreshold"] = state ? state.snmpthreshold : undefined;
            resourceInputs["snmpversion"] = state ? state.snmpversion : undefined;
            resourceInputs["sqlquery"] = state ? state.sqlquery : undefined;
            resourceInputs["sslprofile"] = state ? state.sslprofile : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storedb"] = state ? state.storedb : undefined;
            resourceInputs["storefrontacctservice"] = state ? state.storefrontacctservice : undefined;
            resourceInputs["storefrontcheckbackendservices"] = state ? state.storefrontcheckbackendservices : undefined;
            resourceInputs["storename"] = state ? state.storename : undefined;
            resourceInputs["successretries"] = state ? state.successretries : undefined;
            resourceInputs["tos"] = state ? state.tos : undefined;
            resourceInputs["tosid"] = state ? state.tosid : undefined;
            resourceInputs["transparent"] = state ? state.transparent : undefined;
            resourceInputs["trofscode"] = state ? state.trofscode : undefined;
            resourceInputs["trofsstring"] = state ? state.trofsstring : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["units1"] = state ? state.units1 : undefined;
            resourceInputs["units2"] = state ? state.units2 : undefined;
            resourceInputs["units3"] = state ? state.units3 : undefined;
            resourceInputs["units4"] = state ? state.units4 : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["validatecred"] = state ? state.validatecred : undefined;
            resourceInputs["vendorid"] = state ? state.vendorid : undefined;
            resourceInputs["vendorspecificvendorid"] = state ? state.vendorspecificvendorid : undefined;
        } else {
            const args = argsOrState as LbmonitorArgs | undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["alertretries"] = args ? args.alertretries : undefined;
            resourceInputs["application"] = args ? args.application : undefined;
            resourceInputs["attribute"] = args ? args.attribute : undefined;
            resourceInputs["basedn"] = args ? args.basedn : undefined;
            resourceInputs["binddn"] = args ? args.binddn : undefined;
            resourceInputs["customheaders"] = args ? args.customheaders : undefined;
            resourceInputs["database"] = args ? args.database : undefined;
            resourceInputs["destip"] = args ? args.destip : undefined;
            resourceInputs["destport"] = args ? args.destport : undefined;
            resourceInputs["deviation"] = args ? args.deviation : undefined;
            resourceInputs["dispatcherip"] = args ? args.dispatcherip : undefined;
            resourceInputs["dispatcherport"] = args ? args.dispatcherport : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["downtime"] = args ? args.downtime : undefined;
            resourceInputs["evalrule"] = args ? args.evalrule : undefined;
            resourceInputs["failureretries"] = args ? args.failureretries : undefined;
            resourceInputs["filename"] = args ? args.filename : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["firmwarerevision"] = args ? args.firmwarerevision : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["hostipaddress"] = args ? args.hostipaddress : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["httprequest"] = args ? args.httprequest : undefined;
            resourceInputs["inbandsecurityid"] = args ? args.inbandsecurityid : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["ipaddresses"] = args ? args.ipaddresses : undefined;
            resourceInputs["iptunnel"] = args ? args.iptunnel : undefined;
            resourceInputs["kcdaccount"] = args ? args.kcdaccount : undefined;
            resourceInputs["lasversion"] = args ? args.lasversion : undefined;
            resourceInputs["logonpointname"] = args ? args.logonpointname : undefined;
            resourceInputs["lrtm"] = args ? args.lrtm : undefined;
            resourceInputs["maxforwards"] = args ? args.maxforwards : undefined;
            resourceInputs["metric"] = args ? args.metric : undefined;
            resourceInputs["metrictable"] = args ? args.metrictable : undefined;
            resourceInputs["metricthreshold"] = args ? args.metricthreshold : undefined;
            resourceInputs["metricweight"] = args ? args.metricweight : undefined;
            resourceInputs["monitorname"] = args ? args.monitorname : undefined;
            resourceInputs["mssqlprotocolversion"] = args ? args.mssqlprotocolversion : undefined;
            resourceInputs["netprofile"] = args ? args.netprofile : undefined;
            resourceInputs["oraclesid"] = args ? args.oraclesid : undefined;
            resourceInputs["originhost"] = args ? args.originhost : undefined;
            resourceInputs["originrealm"] = args ? args.originrealm : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["productname"] = args ? args.productname : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["querytype"] = args ? args.querytype : undefined;
            resourceInputs["radaccountsession"] = args ? args.radaccountsession : undefined;
            resourceInputs["radaccounttype"] = args ? args.radaccounttype : undefined;
            resourceInputs["radapn"] = args ? args.radapn : undefined;
            resourceInputs["radframedip"] = args ? args.radframedip : undefined;
            resourceInputs["radkey"] = args ? args.radkey : undefined;
            resourceInputs["radmsisdn"] = args ? args.radmsisdn : undefined;
            resourceInputs["radnasid"] = args ? args.radnasid : undefined;
            resourceInputs["radnasip"] = args ? args.radnasip : undefined;
            resourceInputs["recv"] = args ? args.recv : undefined;
            resourceInputs["respcodes"] = args ? args.respcodes : undefined;
            resourceInputs["resptimeout"] = args ? args.resptimeout : undefined;
            resourceInputs["resptimeoutthresh"] = args ? args.resptimeoutthresh : undefined;
            resourceInputs["retries"] = args ? args.retries : undefined;
            resourceInputs["reverse"] = args ? args.reverse : undefined;
            resourceInputs["rtsprequest"] = args ? args.rtsprequest : undefined;
            resourceInputs["scriptargs"] = args ? args.scriptargs : undefined;
            resourceInputs["scriptname"] = args ? args.scriptname : undefined;
            resourceInputs["secondarypassword"] = args ? args.secondarypassword : undefined;
            resourceInputs["secure"] = args ? args.secure : undefined;
            resourceInputs["send"] = args ? args.send : undefined;
            resourceInputs["servicegroupname"] = args ? args.servicegroupname : undefined;
            resourceInputs["servicename"] = args ? args.servicename : undefined;
            resourceInputs["sipmethod"] = args ? args.sipmethod : undefined;
            resourceInputs["sipreguri"] = args ? args.sipreguri : undefined;
            resourceInputs["sipuri"] = args ? args.sipuri : undefined;
            resourceInputs["sitepath"] = args ? args.sitepath : undefined;
            resourceInputs["snmpcommunity"] = args ? args.snmpcommunity : undefined;
            resourceInputs["snmpoid"] = args ? args.snmpoid : undefined;
            resourceInputs["snmpthreshold"] = args ? args.snmpthreshold : undefined;
            resourceInputs["snmpversion"] = args ? args.snmpversion : undefined;
            resourceInputs["sqlquery"] = args ? args.sqlquery : undefined;
            resourceInputs["sslprofile"] = args ? args.sslprofile : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["storedb"] = args ? args.storedb : undefined;
            resourceInputs["storefrontacctservice"] = args ? args.storefrontacctservice : undefined;
            resourceInputs["storefrontcheckbackendservices"] = args ? args.storefrontcheckbackendservices : undefined;
            resourceInputs["storename"] = args ? args.storename : undefined;
            resourceInputs["successretries"] = args ? args.successretries : undefined;
            resourceInputs["tos"] = args ? args.tos : undefined;
            resourceInputs["tosid"] = args ? args.tosid : undefined;
            resourceInputs["transparent"] = args ? args.transparent : undefined;
            resourceInputs["trofscode"] = args ? args.trofscode : undefined;
            resourceInputs["trofsstring"] = args ? args.trofsstring : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["units1"] = args ? args.units1 : undefined;
            resourceInputs["units2"] = args ? args.units2 : undefined;
            resourceInputs["units3"] = args ? args.units3 : undefined;
            resourceInputs["units4"] = args ? args.units4 : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["validatecred"] = args ? args.validatecred : undefined;
            resourceInputs["vendorid"] = args ? args.vendorid : undefined;
            resourceInputs["vendorspecificvendorid"] = args ? args.vendorspecificvendorid : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Lbmonitor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Lbmonitor resources.
 */
export interface LbmonitorState {
    action?: pulumi.Input<string>;
    alertretries?: pulumi.Input<number>;
    application?: pulumi.Input<string>;
    attribute?: pulumi.Input<string>;
    basedn?: pulumi.Input<string>;
    binddn?: pulumi.Input<string>;
    customheaders?: pulumi.Input<string>;
    database?: pulumi.Input<string>;
    destip?: pulumi.Input<string>;
    destport?: pulumi.Input<number>;
    deviation?: pulumi.Input<number>;
    dispatcherip?: pulumi.Input<string>;
    dispatcherport?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    downtime?: pulumi.Input<number>;
    evalrule?: pulumi.Input<string>;
    failureretries?: pulumi.Input<number>;
    filename?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    firmwarerevision?: pulumi.Input<number>;
    group?: pulumi.Input<string>;
    hostipaddress?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    httprequest?: pulumi.Input<string>;
    inbandsecurityid?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    ipaddresses?: pulumi.Input<pulumi.Input<string>[]>;
    iptunnel?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    lasversion?: pulumi.Input<string>;
    logonpointname?: pulumi.Input<string>;
    lrtm?: pulumi.Input<string>;
    maxforwards?: pulumi.Input<number>;
    metric?: pulumi.Input<string>;
    metrictable?: pulumi.Input<string>;
    metricthreshold?: pulumi.Input<number>;
    metricweight?: pulumi.Input<number>;
    monitorname?: pulumi.Input<string>;
    mssqlprotocolversion?: pulumi.Input<string>;
    netprofile?: pulumi.Input<string>;
    oraclesid?: pulumi.Input<string>;
    originhost?: pulumi.Input<string>;
    originrealm?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    productname?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    querytype?: pulumi.Input<string>;
    radaccountsession?: pulumi.Input<string>;
    radaccounttype?: pulumi.Input<number>;
    radapn?: pulumi.Input<string>;
    radframedip?: pulumi.Input<string>;
    radkey?: pulumi.Input<string>;
    radmsisdn?: pulumi.Input<string>;
    radnasid?: pulumi.Input<string>;
    radnasip?: pulumi.Input<string>;
    recv?: pulumi.Input<string>;
    respcodes?: pulumi.Input<pulumi.Input<string>[]>;
    resptimeout?: pulumi.Input<number>;
    resptimeoutthresh?: pulumi.Input<number>;
    retries?: pulumi.Input<number>;
    reverse?: pulumi.Input<string>;
    rtsprequest?: pulumi.Input<string>;
    scriptargs?: pulumi.Input<string>;
    scriptname?: pulumi.Input<string>;
    secondarypassword?: pulumi.Input<string>;
    secure?: pulumi.Input<string>;
    send?: pulumi.Input<string>;
    servicegroupname?: pulumi.Input<string>;
    servicename?: pulumi.Input<string>;
    sipmethod?: pulumi.Input<string>;
    sipreguri?: pulumi.Input<string>;
    sipuri?: pulumi.Input<string>;
    sitepath?: pulumi.Input<string>;
    snmpcommunity?: pulumi.Input<string>;
    snmpoid?: pulumi.Input<string>;
    snmpthreshold?: pulumi.Input<string>;
    snmpversion?: pulumi.Input<string>;
    sqlquery?: pulumi.Input<string>;
    sslprofile?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storedb?: pulumi.Input<string>;
    storefrontacctservice?: pulumi.Input<string>;
    storefrontcheckbackendservices?: pulumi.Input<string>;
    storename?: pulumi.Input<string>;
    successretries?: pulumi.Input<number>;
    tos?: pulumi.Input<string>;
    tosid?: pulumi.Input<number>;
    transparent?: pulumi.Input<string>;
    trofscode?: pulumi.Input<number>;
    trofsstring?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    units1?: pulumi.Input<string>;
    units2?: pulumi.Input<string>;
    units3?: pulumi.Input<string>;
    units4?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    validatecred?: pulumi.Input<string>;
    vendorid?: pulumi.Input<number>;
    vendorspecificvendorid?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Lbmonitor resource.
 */
export interface LbmonitorArgs {
    action?: pulumi.Input<string>;
    alertretries?: pulumi.Input<number>;
    application?: pulumi.Input<string>;
    attribute?: pulumi.Input<string>;
    basedn?: pulumi.Input<string>;
    binddn?: pulumi.Input<string>;
    customheaders?: pulumi.Input<string>;
    database?: pulumi.Input<string>;
    destip?: pulumi.Input<string>;
    destport?: pulumi.Input<number>;
    deviation?: pulumi.Input<number>;
    dispatcherip?: pulumi.Input<string>;
    dispatcherport?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    downtime?: pulumi.Input<number>;
    evalrule?: pulumi.Input<string>;
    failureretries?: pulumi.Input<number>;
    filename?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    firmwarerevision?: pulumi.Input<number>;
    group?: pulumi.Input<string>;
    hostipaddress?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    httprequest?: pulumi.Input<string>;
    inbandsecurityid?: pulumi.Input<string>;
    interval?: pulumi.Input<number>;
    ipaddresses?: pulumi.Input<pulumi.Input<string>[]>;
    iptunnel?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    lasversion?: pulumi.Input<string>;
    logonpointname?: pulumi.Input<string>;
    lrtm?: pulumi.Input<string>;
    maxforwards?: pulumi.Input<number>;
    metric?: pulumi.Input<string>;
    metrictable?: pulumi.Input<string>;
    metricthreshold?: pulumi.Input<number>;
    metricweight?: pulumi.Input<number>;
    monitorname?: pulumi.Input<string>;
    mssqlprotocolversion?: pulumi.Input<string>;
    netprofile?: pulumi.Input<string>;
    oraclesid?: pulumi.Input<string>;
    originhost?: pulumi.Input<string>;
    originrealm?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    productname?: pulumi.Input<string>;
    query?: pulumi.Input<string>;
    querytype?: pulumi.Input<string>;
    radaccountsession?: pulumi.Input<string>;
    radaccounttype?: pulumi.Input<number>;
    radapn?: pulumi.Input<string>;
    radframedip?: pulumi.Input<string>;
    radkey?: pulumi.Input<string>;
    radmsisdn?: pulumi.Input<string>;
    radnasid?: pulumi.Input<string>;
    radnasip?: pulumi.Input<string>;
    recv?: pulumi.Input<string>;
    respcodes?: pulumi.Input<pulumi.Input<string>[]>;
    resptimeout?: pulumi.Input<number>;
    resptimeoutthresh?: pulumi.Input<number>;
    retries?: pulumi.Input<number>;
    reverse?: pulumi.Input<string>;
    rtsprequest?: pulumi.Input<string>;
    scriptargs?: pulumi.Input<string>;
    scriptname?: pulumi.Input<string>;
    secondarypassword?: pulumi.Input<string>;
    secure?: pulumi.Input<string>;
    send?: pulumi.Input<string>;
    servicegroupname?: pulumi.Input<string>;
    servicename?: pulumi.Input<string>;
    sipmethod?: pulumi.Input<string>;
    sipreguri?: pulumi.Input<string>;
    sipuri?: pulumi.Input<string>;
    sitepath?: pulumi.Input<string>;
    snmpcommunity?: pulumi.Input<string>;
    snmpoid?: pulumi.Input<string>;
    snmpthreshold?: pulumi.Input<string>;
    snmpversion?: pulumi.Input<string>;
    sqlquery?: pulumi.Input<string>;
    sslprofile?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storedb?: pulumi.Input<string>;
    storefrontacctservice?: pulumi.Input<string>;
    storefrontcheckbackendservices?: pulumi.Input<string>;
    storename?: pulumi.Input<string>;
    successretries?: pulumi.Input<number>;
    tos?: pulumi.Input<string>;
    tosid?: pulumi.Input<number>;
    transparent?: pulumi.Input<string>;
    trofscode?: pulumi.Input<number>;
    trofsstring?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    units1?: pulumi.Input<string>;
    units2?: pulumi.Input<string>;
    units3?: pulumi.Input<string>;
    units4?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    validatecred?: pulumi.Input<string>;
    vendorid?: pulumi.Input<number>;
    vendorspecificvendorid?: pulumi.Input<number>;
}
