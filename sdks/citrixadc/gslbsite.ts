// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Gslbsite extends pulumi.CustomResource {
    /**
     * Get an existing Gslbsite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbsiteState, opts?: pulumi.CustomResourceOptions): Gslbsite {
        return new Gslbsite(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/gslbsite:Gslbsite';

    /**
     * Returns true if the given object is an instance of Gslbsite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gslbsite {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gslbsite.__pulumiType;
    }

    public readonly clip!: pulumi.Output<string>;
    public readonly metricexchange!: pulumi.Output<string>;
    public readonly naptrreplacementsuffix!: pulumi.Output<string>;
    public readonly nwmetricexchange!: pulumi.Output<string>;
    public readonly parentsite!: pulumi.Output<string>;
    public readonly publicclip!: pulumi.Output<string>;
    public readonly publicip!: pulumi.Output<string>;
    public readonly sessionexchange!: pulumi.Output<string>;
    public readonly siteipaddress!: pulumi.Output<string>;
    public readonly sitename!: pulumi.Output<string>;
    public readonly sitetype!: pulumi.Output<string>;
    public readonly triggermonitor!: pulumi.Output<string>;

    /**
     * Create a Gslbsite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GslbsiteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbsiteArgs | GslbsiteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbsiteState | undefined;
            resourceInputs["clip"] = state ? state.clip : undefined;
            resourceInputs["metricexchange"] = state ? state.metricexchange : undefined;
            resourceInputs["naptrreplacementsuffix"] = state ? state.naptrreplacementsuffix : undefined;
            resourceInputs["nwmetricexchange"] = state ? state.nwmetricexchange : undefined;
            resourceInputs["parentsite"] = state ? state.parentsite : undefined;
            resourceInputs["publicclip"] = state ? state.publicclip : undefined;
            resourceInputs["publicip"] = state ? state.publicip : undefined;
            resourceInputs["sessionexchange"] = state ? state.sessionexchange : undefined;
            resourceInputs["siteipaddress"] = state ? state.siteipaddress : undefined;
            resourceInputs["sitename"] = state ? state.sitename : undefined;
            resourceInputs["sitetype"] = state ? state.sitetype : undefined;
            resourceInputs["triggermonitor"] = state ? state.triggermonitor : undefined;
        } else {
            const args = argsOrState as GslbsiteArgs | undefined;
            resourceInputs["clip"] = args ? args.clip : undefined;
            resourceInputs["metricexchange"] = args ? args.metricexchange : undefined;
            resourceInputs["naptrreplacementsuffix"] = args ? args.naptrreplacementsuffix : undefined;
            resourceInputs["nwmetricexchange"] = args ? args.nwmetricexchange : undefined;
            resourceInputs["parentsite"] = args ? args.parentsite : undefined;
            resourceInputs["publicclip"] = args ? args.publicclip : undefined;
            resourceInputs["publicip"] = args ? args.publicip : undefined;
            resourceInputs["sessionexchange"] = args ? args.sessionexchange : undefined;
            resourceInputs["siteipaddress"] = args ? args.siteipaddress : undefined;
            resourceInputs["sitename"] = args ? args.sitename : undefined;
            resourceInputs["sitetype"] = args ? args.sitetype : undefined;
            resourceInputs["triggermonitor"] = args ? args.triggermonitor : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gslbsite.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Gslbsite resources.
 */
export interface GslbsiteState {
    clip?: pulumi.Input<string>;
    metricexchange?: pulumi.Input<string>;
    naptrreplacementsuffix?: pulumi.Input<string>;
    nwmetricexchange?: pulumi.Input<string>;
    parentsite?: pulumi.Input<string>;
    publicclip?: pulumi.Input<string>;
    publicip?: pulumi.Input<string>;
    sessionexchange?: pulumi.Input<string>;
    siteipaddress?: pulumi.Input<string>;
    sitename?: pulumi.Input<string>;
    sitetype?: pulumi.Input<string>;
    triggermonitor?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Gslbsite resource.
 */
export interface GslbsiteArgs {
    clip?: pulumi.Input<string>;
    metricexchange?: pulumi.Input<string>;
    naptrreplacementsuffix?: pulumi.Input<string>;
    nwmetricexchange?: pulumi.Input<string>;
    parentsite?: pulumi.Input<string>;
    publicclip?: pulumi.Input<string>;
    publicip?: pulumi.Input<string>;
    sessionexchange?: pulumi.Input<string>;
    siteipaddress?: pulumi.Input<string>;
    sitename?: pulumi.Input<string>;
    sitetype?: pulumi.Input<string>;
    triggermonitor?: pulumi.Input<string>;
}
