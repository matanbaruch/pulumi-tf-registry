// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppfwprofileSqlinjectionBinding extends pulumi.CustomResource {
    /**
     * Get an existing AppfwprofileSqlinjectionBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppfwprofileSqlinjectionBindingState, opts?: pulumi.CustomResourceOptions): AppfwprofileSqlinjectionBinding {
        return new AppfwprofileSqlinjectionBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appfwprofileSqlinjectionBinding:AppfwprofileSqlinjectionBinding';

    /**
     * Returns true if the given object is an instance of AppfwprofileSqlinjectionBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppfwprofileSqlinjectionBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppfwprofileSqlinjectionBinding.__pulumiType;
    }

    public readonly alertonly!: pulumi.Output<string>;
    public readonly asScanLocationSql!: pulumi.Output<string>;
    public readonly asValueExprSql!: pulumi.Output<string>;
    public readonly asValueTypeSql!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly formactionurlSql!: pulumi.Output<string>;
    public readonly isautodeployed!: pulumi.Output<string>;
    public readonly isregexSql!: pulumi.Output<string>;
    public readonly isvalueregexSql!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly sqlinjection!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a AppfwprofileSqlinjectionBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppfwprofileSqlinjectionBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppfwprofileSqlinjectionBindingArgs | AppfwprofileSqlinjectionBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppfwprofileSqlinjectionBindingState | undefined;
            resourceInputs["alertonly"] = state ? state.alertonly : undefined;
            resourceInputs["asScanLocationSql"] = state ? state.asScanLocationSql : undefined;
            resourceInputs["asValueExprSql"] = state ? state.asValueExprSql : undefined;
            resourceInputs["asValueTypeSql"] = state ? state.asValueTypeSql : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["formactionurlSql"] = state ? state.formactionurlSql : undefined;
            resourceInputs["isautodeployed"] = state ? state.isautodeployed : undefined;
            resourceInputs["isregexSql"] = state ? state.isregexSql : undefined;
            resourceInputs["isvalueregexSql"] = state ? state.isvalueregexSql : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sqlinjection"] = state ? state.sqlinjection : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as AppfwprofileSqlinjectionBindingArgs | undefined;
            if ((!args || args.asScanLocationSql === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asScanLocationSql'");
            }
            if ((!args || args.formactionurlSql === undefined) && !opts.urn) {
                throw new Error("Missing required property 'formactionurlSql'");
            }
            if ((!args || args.sqlinjection === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlinjection'");
            }
            resourceInputs["alertonly"] = args ? args.alertonly : undefined;
            resourceInputs["asScanLocationSql"] = args ? args.asScanLocationSql : undefined;
            resourceInputs["asValueExprSql"] = args ? args.asValueExprSql : undefined;
            resourceInputs["asValueTypeSql"] = args ? args.asValueTypeSql : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["formactionurlSql"] = args ? args.formactionurlSql : undefined;
            resourceInputs["isautodeployed"] = args ? args.isautodeployed : undefined;
            resourceInputs["isregexSql"] = args ? args.isregexSql : undefined;
            resourceInputs["isvalueregexSql"] = args ? args.isvalueregexSql : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sqlinjection"] = args ? args.sqlinjection : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppfwprofileSqlinjectionBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppfwprofileSqlinjectionBinding resources.
 */
export interface AppfwprofileSqlinjectionBindingState {
    alertonly?: pulumi.Input<string>;
    asScanLocationSql?: pulumi.Input<string>;
    asValueExprSql?: pulumi.Input<string>;
    asValueTypeSql?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    formactionurlSql?: pulumi.Input<string>;
    isautodeployed?: pulumi.Input<string>;
    isregexSql?: pulumi.Input<string>;
    isvalueregexSql?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sqlinjection?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppfwprofileSqlinjectionBinding resource.
 */
export interface AppfwprofileSqlinjectionBindingArgs {
    alertonly?: pulumi.Input<string>;
    asScanLocationSql: pulumi.Input<string>;
    asValueExprSql?: pulumi.Input<string>;
    asValueTypeSql?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    formactionurlSql: pulumi.Input<string>;
    isautodeployed?: pulumi.Input<string>;
    isregexSql?: pulumi.Input<string>;
    isvalueregexSql?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sqlinjection: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
