// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Server extends pulumi.CustomResource {
    /**
     * Get an existing Server resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerState, opts?: pulumi.CustomResourceOptions): Server {
        return new Server(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/server:Server';

    /**
     * Returns true if the given object is an instance of Server.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Server {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Server.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string>;
    public readonly delay!: pulumi.Output<number>;
    public readonly domain!: pulumi.Output<string>;
    public readonly domainresolvenow!: pulumi.Output<boolean>;
    public readonly domainresolveretry!: pulumi.Output<number>;
    public readonly graceful!: pulumi.Output<string>;
    public readonly internal!: pulumi.Output<boolean>;
    public readonly ipaddress!: pulumi.Output<string>;
    public readonly ipv6address!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly querytype!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public readonly td!: pulumi.Output<number>;
    public readonly translationip!: pulumi.Output<string>;
    public readonly translationmask!: pulumi.Output<string>;

    /**
     * Create a Server resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerArgs | ServerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["delay"] = state ? state.delay : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["domainresolvenow"] = state ? state.domainresolvenow : undefined;
            resourceInputs["domainresolveretry"] = state ? state.domainresolveretry : undefined;
            resourceInputs["graceful"] = state ? state.graceful : undefined;
            resourceInputs["internal"] = state ? state.internal : undefined;
            resourceInputs["ipaddress"] = state ? state.ipaddress : undefined;
            resourceInputs["ipv6address"] = state ? state.ipv6address : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["querytype"] = state ? state.querytype : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["td"] = state ? state.td : undefined;
            resourceInputs["translationip"] = state ? state.translationip : undefined;
            resourceInputs["translationmask"] = state ? state.translationmask : undefined;
        } else {
            const args = argsOrState as ServerArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["delay"] = args ? args.delay : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["domainresolvenow"] = args ? args.domainresolvenow : undefined;
            resourceInputs["domainresolveretry"] = args ? args.domainresolveretry : undefined;
            resourceInputs["graceful"] = args ? args.graceful : undefined;
            resourceInputs["internal"] = args ? args.internal : undefined;
            resourceInputs["ipaddress"] = args ? args.ipaddress : undefined;
            resourceInputs["ipv6address"] = args ? args.ipv6address : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["querytype"] = args ? args.querytype : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["td"] = args ? args.td : undefined;
            resourceInputs["translationip"] = args ? args.translationip : undefined;
            resourceInputs["translationmask"] = args ? args.translationmask : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Server.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Server resources.
 */
export interface ServerState {
    comment?: pulumi.Input<string>;
    delay?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    domainresolvenow?: pulumi.Input<boolean>;
    domainresolveretry?: pulumi.Input<number>;
    graceful?: pulumi.Input<string>;
    internal?: pulumi.Input<boolean>;
    ipaddress?: pulumi.Input<string>;
    ipv6address?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    querytype?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    td?: pulumi.Input<number>;
    translationip?: pulumi.Input<string>;
    translationmask?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Server resource.
 */
export interface ServerArgs {
    comment?: pulumi.Input<string>;
    delay?: pulumi.Input<number>;
    domain?: pulumi.Input<string>;
    domainresolvenow?: pulumi.Input<boolean>;
    domainresolveretry?: pulumi.Input<number>;
    graceful?: pulumi.Input<string>;
    internal?: pulumi.Input<boolean>;
    ipaddress?: pulumi.Input<string>;
    ipv6address?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    querytype?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    td?: pulumi.Input<number>;
    translationip?: pulumi.Input<string>;
    translationmask?: pulumi.Input<string>;
}
