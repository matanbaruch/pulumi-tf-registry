// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Locationparameter extends pulumi.CustomResource {
    /**
     * Get an existing Locationparameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocationparameterState, opts?: pulumi.CustomResourceOptions): Locationparameter {
        return new Locationparameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/locationparameter:Locationparameter';

    /**
     * Returns true if the given object is an instance of Locationparameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Locationparameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Locationparameter.__pulumiType;
    }

    public readonly context!: pulumi.Output<string>;
    public readonly matchwildcardtoany!: pulumi.Output<string>;
    public readonly q1label!: pulumi.Output<string>;
    public readonly q2label!: pulumi.Output<string>;
    public readonly q3label!: pulumi.Output<string>;
    public readonly q4label!: pulumi.Output<string>;
    public readonly q5label!: pulumi.Output<string>;
    public readonly q6label!: pulumi.Output<string>;

    /**
     * Create a Locationparameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LocationparameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocationparameterArgs | LocationparameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocationparameterState | undefined;
            resourceInputs["context"] = state ? state.context : undefined;
            resourceInputs["matchwildcardtoany"] = state ? state.matchwildcardtoany : undefined;
            resourceInputs["q1label"] = state ? state.q1label : undefined;
            resourceInputs["q2label"] = state ? state.q2label : undefined;
            resourceInputs["q3label"] = state ? state.q3label : undefined;
            resourceInputs["q4label"] = state ? state.q4label : undefined;
            resourceInputs["q5label"] = state ? state.q5label : undefined;
            resourceInputs["q6label"] = state ? state.q6label : undefined;
        } else {
            const args = argsOrState as LocationparameterArgs | undefined;
            resourceInputs["context"] = args ? args.context : undefined;
            resourceInputs["matchwildcardtoany"] = args ? args.matchwildcardtoany : undefined;
            resourceInputs["q1label"] = args ? args.q1label : undefined;
            resourceInputs["q2label"] = args ? args.q2label : undefined;
            resourceInputs["q3label"] = args ? args.q3label : undefined;
            resourceInputs["q4label"] = args ? args.q4label : undefined;
            resourceInputs["q5label"] = args ? args.q5label : undefined;
            resourceInputs["q6label"] = args ? args.q6label : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Locationparameter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Locationparameter resources.
 */
export interface LocationparameterState {
    context?: pulumi.Input<string>;
    matchwildcardtoany?: pulumi.Input<string>;
    q1label?: pulumi.Input<string>;
    q2label?: pulumi.Input<string>;
    q3label?: pulumi.Input<string>;
    q4label?: pulumi.Input<string>;
    q5label?: pulumi.Input<string>;
    q6label?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Locationparameter resource.
 */
export interface LocationparameterArgs {
    context?: pulumi.Input<string>;
    matchwildcardtoany?: pulumi.Input<string>;
    q1label?: pulumi.Input<string>;
    q2label?: pulumi.Input<string>;
    q3label?: pulumi.Input<string>;
    q4label?: pulumi.Input<string>;
    q5label?: pulumi.Input<string>;
    q6label?: pulumi.Input<string>;
}
