// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SslcertkeySslocspresponderBinding extends pulumi.CustomResource {
    /**
     * Get an existing SslcertkeySslocspresponderBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SslcertkeySslocspresponderBindingState, opts?: pulumi.CustomResourceOptions): SslcertkeySslocspresponderBinding {
        return new SslcertkeySslocspresponderBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/sslcertkeySslocspresponderBinding:SslcertkeySslocspresponderBinding';

    /**
     * Returns true if the given object is an instance of SslcertkeySslocspresponderBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SslcertkeySslocspresponderBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SslcertkeySslocspresponderBinding.__pulumiType;
    }

    public readonly certkey!: pulumi.Output<string>;
    public readonly ocspresponder!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<number>;

    /**
     * Create a SslcertkeySslocspresponderBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SslcertkeySslocspresponderBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SslcertkeySslocspresponderBindingArgs | SslcertkeySslocspresponderBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SslcertkeySslocspresponderBindingState | undefined;
            resourceInputs["certkey"] = state ? state.certkey : undefined;
            resourceInputs["ocspresponder"] = state ? state.ocspresponder : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
        } else {
            const args = argsOrState as SslcertkeySslocspresponderBindingArgs | undefined;
            if ((!args || args.certkey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'certkey'");
            }
            if ((!args || args.ocspresponder === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ocspresponder'");
            }
            resourceInputs["certkey"] = args ? args.certkey : undefined;
            resourceInputs["ocspresponder"] = args ? args.ocspresponder : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SslcertkeySslocspresponderBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SslcertkeySslocspresponderBinding resources.
 */
export interface SslcertkeySslocspresponderBindingState {
    certkey?: pulumi.Input<string>;
    ocspresponder?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SslcertkeySslocspresponderBinding resource.
 */
export interface SslcertkeySslocspresponderBindingArgs {
    certkey: pulumi.Input<string>;
    ocspresponder: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
}
