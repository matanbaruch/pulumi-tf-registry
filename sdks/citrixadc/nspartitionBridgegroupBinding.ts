// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NspartitionBridgegroupBinding extends pulumi.CustomResource {
    /**
     * Get an existing NspartitionBridgegroupBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NspartitionBridgegroupBindingState, opts?: pulumi.CustomResourceOptions): NspartitionBridgegroupBinding {
        return new NspartitionBridgegroupBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/nspartitionBridgegroupBinding:NspartitionBridgegroupBinding';

    /**
     * Returns true if the given object is an instance of NspartitionBridgegroupBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NspartitionBridgegroupBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NspartitionBridgegroupBinding.__pulumiType;
    }

    public readonly bridgegroup!: pulumi.Output<number>;
    public readonly partitionname!: pulumi.Output<string>;

    /**
     * Create a NspartitionBridgegroupBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NspartitionBridgegroupBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NspartitionBridgegroupBindingArgs | NspartitionBridgegroupBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NspartitionBridgegroupBindingState | undefined;
            resourceInputs["bridgegroup"] = state ? state.bridgegroup : undefined;
            resourceInputs["partitionname"] = state ? state.partitionname : undefined;
        } else {
            const args = argsOrState as NspartitionBridgegroupBindingArgs | undefined;
            if ((!args || args.bridgegroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bridgegroup'");
            }
            if ((!args || args.partitionname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'partitionname'");
            }
            resourceInputs["bridgegroup"] = args ? args.bridgegroup : undefined;
            resourceInputs["partitionname"] = args ? args.partitionname : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NspartitionBridgegroupBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NspartitionBridgegroupBinding resources.
 */
export interface NspartitionBridgegroupBindingState {
    bridgegroup?: pulumi.Input<number>;
    partitionname?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NspartitionBridgegroupBinding resource.
 */
export interface NspartitionBridgegroupBindingArgs {
    bridgegroup: pulumi.Input<number>;
    partitionname: pulumi.Input<string>;
}
