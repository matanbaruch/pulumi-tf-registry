// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Vpntrafficaction extends pulumi.CustomResource {
    /**
     * Get an existing Vpntrafficaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpntrafficactionState, opts?: pulumi.CustomResourceOptions): Vpntrafficaction {
        return new Vpntrafficaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/vpntrafficaction:Vpntrafficaction';

    /**
     * Returns true if the given object is an instance of Vpntrafficaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpntrafficaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpntrafficaction.__pulumiType;
    }

    public readonly apptimeout!: pulumi.Output<number>;
    public readonly formssoaction!: pulumi.Output<string>;
    public readonly fta!: pulumi.Output<string>;
    public readonly hdx!: pulumi.Output<string>;
    public readonly kcdaccount!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly passwdexpression!: pulumi.Output<string>;
    public readonly proxy!: pulumi.Output<string>;
    public readonly qual!: pulumi.Output<string>;
    public readonly samlssoprofile!: pulumi.Output<string>;
    public readonly sso!: pulumi.Output<string>;
    public readonly userexpression!: pulumi.Output<string>;
    public readonly wanscaler!: pulumi.Output<string>;

    /**
     * Create a Vpntrafficaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpntrafficactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpntrafficactionArgs | VpntrafficactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpntrafficactionState | undefined;
            resourceInputs["apptimeout"] = state ? state.apptimeout : undefined;
            resourceInputs["formssoaction"] = state ? state.formssoaction : undefined;
            resourceInputs["fta"] = state ? state.fta : undefined;
            resourceInputs["hdx"] = state ? state.hdx : undefined;
            resourceInputs["kcdaccount"] = state ? state.kcdaccount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwdexpression"] = state ? state.passwdexpression : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["qual"] = state ? state.qual : undefined;
            resourceInputs["samlssoprofile"] = state ? state.samlssoprofile : undefined;
            resourceInputs["sso"] = state ? state.sso : undefined;
            resourceInputs["userexpression"] = state ? state.userexpression : undefined;
            resourceInputs["wanscaler"] = state ? state.wanscaler : undefined;
        } else {
            const args = argsOrState as VpntrafficactionArgs | undefined;
            if ((!args || args.qual === undefined) && !opts.urn) {
                throw new Error("Missing required property 'qual'");
            }
            resourceInputs["apptimeout"] = args ? args.apptimeout : undefined;
            resourceInputs["formssoaction"] = args ? args.formssoaction : undefined;
            resourceInputs["fta"] = args ? args.fta : undefined;
            resourceInputs["hdx"] = args ? args.hdx : undefined;
            resourceInputs["kcdaccount"] = args ? args.kcdaccount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwdexpression"] = args ? args.passwdexpression : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["qual"] = args ? args.qual : undefined;
            resourceInputs["samlssoprofile"] = args ? args.samlssoprofile : undefined;
            resourceInputs["sso"] = args ? args.sso : undefined;
            resourceInputs["userexpression"] = args ? args.userexpression : undefined;
            resourceInputs["wanscaler"] = args ? args.wanscaler : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpntrafficaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vpntrafficaction resources.
 */
export interface VpntrafficactionState {
    apptimeout?: pulumi.Input<number>;
    formssoaction?: pulumi.Input<string>;
    fta?: pulumi.Input<string>;
    hdx?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwdexpression?: pulumi.Input<string>;
    proxy?: pulumi.Input<string>;
    qual?: pulumi.Input<string>;
    samlssoprofile?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    userexpression?: pulumi.Input<string>;
    wanscaler?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpntrafficaction resource.
 */
export interface VpntrafficactionArgs {
    apptimeout?: pulumi.Input<number>;
    formssoaction?: pulumi.Input<string>;
    fta?: pulumi.Input<string>;
    hdx?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwdexpression?: pulumi.Input<string>;
    proxy?: pulumi.Input<string>;
    qual: pulumi.Input<string>;
    samlssoprofile?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    userexpression?: pulumi.Input<string>;
    wanscaler?: pulumi.Input<string>;
}
