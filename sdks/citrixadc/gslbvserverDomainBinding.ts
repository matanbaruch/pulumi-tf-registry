// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GslbvserverDomainBinding extends pulumi.CustomResource {
    /**
     * Get an existing GslbvserverDomainBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbvserverDomainBindingState, opts?: pulumi.CustomResourceOptions): GslbvserverDomainBinding {
        return new GslbvserverDomainBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/gslbvserverDomainBinding:GslbvserverDomainBinding';

    /**
     * Returns true if the given object is an instance of GslbvserverDomainBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbvserverDomainBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbvserverDomainBinding.__pulumiType;
    }

    public readonly backupip!: pulumi.Output<string>;
    public readonly backupipflag!: pulumi.Output<boolean>;
    public readonly cookiedomain!: pulumi.Output<string>;
    public readonly cookiedomainflag!: pulumi.Output<boolean>;
    public readonly cookietimeout!: pulumi.Output<number>;
    public readonly domainname!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly sitedomainttl!: pulumi.Output<number>;
    public readonly ttl!: pulumi.Output<number>;

    /**
     * Create a GslbvserverDomainBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GslbvserverDomainBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbvserverDomainBindingArgs | GslbvserverDomainBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbvserverDomainBindingState | undefined;
            resourceInputs["backupip"] = state ? state.backupip : undefined;
            resourceInputs["backupipflag"] = state ? state.backupipflag : undefined;
            resourceInputs["cookiedomain"] = state ? state.cookiedomain : undefined;
            resourceInputs["cookiedomainflag"] = state ? state.cookiedomainflag : undefined;
            resourceInputs["cookietimeout"] = state ? state.cookietimeout : undefined;
            resourceInputs["domainname"] = state ? state.domainname : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sitedomainttl"] = state ? state.sitedomainttl : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        } else {
            const args = argsOrState as GslbvserverDomainBindingArgs | undefined;
            if ((!args || args.domainname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainname'");
            }
            resourceInputs["backupip"] = args ? args.backupip : undefined;
            resourceInputs["backupipflag"] = args ? args.backupipflag : undefined;
            resourceInputs["cookiedomain"] = args ? args.cookiedomain : undefined;
            resourceInputs["cookiedomainflag"] = args ? args.cookiedomainflag : undefined;
            resourceInputs["cookietimeout"] = args ? args.cookietimeout : undefined;
            resourceInputs["domainname"] = args ? args.domainname : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sitedomainttl"] = args ? args.sitedomainttl : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbvserverDomainBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbvserverDomainBinding resources.
 */
export interface GslbvserverDomainBindingState {
    backupip?: pulumi.Input<string>;
    backupipflag?: pulumi.Input<boolean>;
    cookiedomain?: pulumi.Input<string>;
    cookiedomainflag?: pulumi.Input<boolean>;
    cookietimeout?: pulumi.Input<number>;
    domainname?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sitedomainttl?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GslbvserverDomainBinding resource.
 */
export interface GslbvserverDomainBindingArgs {
    backupip?: pulumi.Input<string>;
    backupipflag?: pulumi.Input<boolean>;
    cookiedomain?: pulumi.Input<string>;
    cookiedomainflag?: pulumi.Input<boolean>;
    cookietimeout?: pulumi.Input<number>;
    domainname: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sitedomainttl?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
}
