// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Nd6ravariables extends pulumi.CustomResource {
    /**
     * Get an existing Nd6ravariables resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Nd6ravariablesState, opts?: pulumi.CustomResourceOptions): Nd6ravariables {
        return new Nd6ravariables(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/nd6ravariables:Nd6ravariables';

    /**
     * Returns true if the given object is an instance of Nd6ravariables.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Nd6ravariables {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Nd6ravariables.__pulumiType;
    }

    public readonly ceaserouteradv!: pulumi.Output<string>;
    public readonly currhoplimit!: pulumi.Output<number>;
    public readonly defaultlifetime!: pulumi.Output<number>;
    public readonly linkmtu!: pulumi.Output<number>;
    public readonly managedaddrconfig!: pulumi.Output<string>;
    public readonly maxrtadvinterval!: pulumi.Output<number>;
    public readonly minrtadvinterval!: pulumi.Output<number>;
    public readonly onlyunicastrtadvresponse!: pulumi.Output<string>;
    public readonly otheraddrconfig!: pulumi.Output<string>;
    public readonly reachabletime!: pulumi.Output<number>;
    public readonly retranstime!: pulumi.Output<number>;
    public readonly sendrouteradv!: pulumi.Output<string>;
    public readonly srclinklayeraddroption!: pulumi.Output<string>;
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a Nd6ravariables resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Nd6ravariablesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Nd6ravariablesArgs | Nd6ravariablesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Nd6ravariablesState | undefined;
            resourceInputs["ceaserouteradv"] = state ? state.ceaserouteradv : undefined;
            resourceInputs["currhoplimit"] = state ? state.currhoplimit : undefined;
            resourceInputs["defaultlifetime"] = state ? state.defaultlifetime : undefined;
            resourceInputs["linkmtu"] = state ? state.linkmtu : undefined;
            resourceInputs["managedaddrconfig"] = state ? state.managedaddrconfig : undefined;
            resourceInputs["maxrtadvinterval"] = state ? state.maxrtadvinterval : undefined;
            resourceInputs["minrtadvinterval"] = state ? state.minrtadvinterval : undefined;
            resourceInputs["onlyunicastrtadvresponse"] = state ? state.onlyunicastrtadvresponse : undefined;
            resourceInputs["otheraddrconfig"] = state ? state.otheraddrconfig : undefined;
            resourceInputs["reachabletime"] = state ? state.reachabletime : undefined;
            resourceInputs["retranstime"] = state ? state.retranstime : undefined;
            resourceInputs["sendrouteradv"] = state ? state.sendrouteradv : undefined;
            resourceInputs["srclinklayeraddroption"] = state ? state.srclinklayeraddroption : undefined;
            resourceInputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as Nd6ravariablesArgs | undefined;
            if ((!args || args.vlan === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlan'");
            }
            resourceInputs["ceaserouteradv"] = args ? args.ceaserouteradv : undefined;
            resourceInputs["currhoplimit"] = args ? args.currhoplimit : undefined;
            resourceInputs["defaultlifetime"] = args ? args.defaultlifetime : undefined;
            resourceInputs["linkmtu"] = args ? args.linkmtu : undefined;
            resourceInputs["managedaddrconfig"] = args ? args.managedaddrconfig : undefined;
            resourceInputs["maxrtadvinterval"] = args ? args.maxrtadvinterval : undefined;
            resourceInputs["minrtadvinterval"] = args ? args.minrtadvinterval : undefined;
            resourceInputs["onlyunicastrtadvresponse"] = args ? args.onlyunicastrtadvresponse : undefined;
            resourceInputs["otheraddrconfig"] = args ? args.otheraddrconfig : undefined;
            resourceInputs["reachabletime"] = args ? args.reachabletime : undefined;
            resourceInputs["retranstime"] = args ? args.retranstime : undefined;
            resourceInputs["sendrouteradv"] = args ? args.sendrouteradv : undefined;
            resourceInputs["srclinklayeraddroption"] = args ? args.srclinklayeraddroption : undefined;
            resourceInputs["vlan"] = args ? args.vlan : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Nd6ravariables.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Nd6ravariables resources.
 */
export interface Nd6ravariablesState {
    ceaserouteradv?: pulumi.Input<string>;
    currhoplimit?: pulumi.Input<number>;
    defaultlifetime?: pulumi.Input<number>;
    linkmtu?: pulumi.Input<number>;
    managedaddrconfig?: pulumi.Input<string>;
    maxrtadvinterval?: pulumi.Input<number>;
    minrtadvinterval?: pulumi.Input<number>;
    onlyunicastrtadvresponse?: pulumi.Input<string>;
    otheraddrconfig?: pulumi.Input<string>;
    reachabletime?: pulumi.Input<number>;
    retranstime?: pulumi.Input<number>;
    sendrouteradv?: pulumi.Input<string>;
    srclinklayeraddroption?: pulumi.Input<string>;
    vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Nd6ravariables resource.
 */
export interface Nd6ravariablesArgs {
    ceaserouteradv?: pulumi.Input<string>;
    currhoplimit?: pulumi.Input<number>;
    defaultlifetime?: pulumi.Input<number>;
    linkmtu?: pulumi.Input<number>;
    managedaddrconfig?: pulumi.Input<string>;
    maxrtadvinterval?: pulumi.Input<number>;
    minrtadvinterval?: pulumi.Input<number>;
    onlyunicastrtadvresponse?: pulumi.Input<string>;
    otheraddrconfig?: pulumi.Input<string>;
    reachabletime?: pulumi.Input<number>;
    retranstime?: pulumi.Input<number>;
    sendrouteradv?: pulumi.Input<string>;
    srclinklayeraddroption?: pulumi.Input<string>;
    vlan: pulumi.Input<number>;
}
