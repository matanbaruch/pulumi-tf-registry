// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AppfwprofileCrosssitescriptingBinding extends pulumi.CustomResource {
    /**
     * Get an existing AppfwprofileCrosssitescriptingBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppfwprofileCrosssitescriptingBindingState, opts?: pulumi.CustomResourceOptions): AppfwprofileCrosssitescriptingBinding {
        return new AppfwprofileCrosssitescriptingBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appfwprofileCrosssitescriptingBinding:AppfwprofileCrosssitescriptingBinding';

    /**
     * Returns true if the given object is an instance of AppfwprofileCrosssitescriptingBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppfwprofileCrosssitescriptingBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppfwprofileCrosssitescriptingBinding.__pulumiType;
    }

    public readonly alertonly!: pulumi.Output<string>;
    public readonly asScanLocationXss!: pulumi.Output<string>;
    public readonly asValueExprXss!: pulumi.Output<string>;
    public readonly asValueTypeXss!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly crosssitescripting!: pulumi.Output<string>;
    public readonly formactionurlXss!: pulumi.Output<string>;
    public readonly isautodeployed!: pulumi.Output<string>;
    public readonly isregexXss!: pulumi.Output<string>;
    public readonly isvalueregexXss!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a AppfwprofileCrosssitescriptingBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppfwprofileCrosssitescriptingBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppfwprofileCrosssitescriptingBindingArgs | AppfwprofileCrosssitescriptingBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppfwprofileCrosssitescriptingBindingState | undefined;
            resourceInputs["alertonly"] = state ? state.alertonly : undefined;
            resourceInputs["asScanLocationXss"] = state ? state.asScanLocationXss : undefined;
            resourceInputs["asValueExprXss"] = state ? state.asValueExprXss : undefined;
            resourceInputs["asValueTypeXss"] = state ? state.asValueTypeXss : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["crosssitescripting"] = state ? state.crosssitescripting : undefined;
            resourceInputs["formactionurlXss"] = state ? state.formactionurlXss : undefined;
            resourceInputs["isautodeployed"] = state ? state.isautodeployed : undefined;
            resourceInputs["isregexXss"] = state ? state.isregexXss : undefined;
            resourceInputs["isvalueregexXss"] = state ? state.isvalueregexXss : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as AppfwprofileCrosssitescriptingBindingArgs | undefined;
            if ((!args || args.asScanLocationXss === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asScanLocationXss'");
            }
            if ((!args || args.crosssitescripting === undefined) && !opts.urn) {
                throw new Error("Missing required property 'crosssitescripting'");
            }
            if ((!args || args.formactionurlXss === undefined) && !opts.urn) {
                throw new Error("Missing required property 'formactionurlXss'");
            }
            resourceInputs["alertonly"] = args ? args.alertonly : undefined;
            resourceInputs["asScanLocationXss"] = args ? args.asScanLocationXss : undefined;
            resourceInputs["asValueExprXss"] = args ? args.asValueExprXss : undefined;
            resourceInputs["asValueTypeXss"] = args ? args.asValueTypeXss : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["crosssitescripting"] = args ? args.crosssitescripting : undefined;
            resourceInputs["formactionurlXss"] = args ? args.formactionurlXss : undefined;
            resourceInputs["isautodeployed"] = args ? args.isautodeployed : undefined;
            resourceInputs["isregexXss"] = args ? args.isregexXss : undefined;
            resourceInputs["isvalueregexXss"] = args ? args.isvalueregexXss : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppfwprofileCrosssitescriptingBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AppfwprofileCrosssitescriptingBinding resources.
 */
export interface AppfwprofileCrosssitescriptingBindingState {
    alertonly?: pulumi.Input<string>;
    asScanLocationXss?: pulumi.Input<string>;
    asValueExprXss?: pulumi.Input<string>;
    asValueTypeXss?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    crosssitescripting?: pulumi.Input<string>;
    formactionurlXss?: pulumi.Input<string>;
    isautodeployed?: pulumi.Input<string>;
    isregexXss?: pulumi.Input<string>;
    isvalueregexXss?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppfwprofileCrosssitescriptingBinding resource.
 */
export interface AppfwprofileCrosssitescriptingBindingArgs {
    alertonly?: pulumi.Input<string>;
    asScanLocationXss: pulumi.Input<string>;
    asValueExprXss?: pulumi.Input<string>;
    asValueTypeXss?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    crosssitescripting: pulumi.Input<string>;
    formactionurlXss: pulumi.Input<string>;
    isautodeployed?: pulumi.Input<string>;
    isregexXss?: pulumi.Input<string>;
    isvalueregexXss?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
