// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Vpnclientlessaccessprofile extends pulumi.CustomResource {
    /**
     * Get an existing Vpnclientlessaccessprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnclientlessaccessprofileState, opts?: pulumi.CustomResourceOptions): Vpnclientlessaccessprofile {
        return new Vpnclientlessaccessprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/vpnclientlessaccessprofile:Vpnclientlessaccessprofile';

    /**
     * Returns true if the given object is an instance of Vpnclientlessaccessprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpnclientlessaccessprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpnclientlessaccessprofile.__pulumiType;
    }

    public readonly clientconsumedcookies!: pulumi.Output<string>;
    public readonly javascriptrewritepolicylabel!: pulumi.Output<string>;
    public readonly profilename!: pulumi.Output<string>;
    public readonly regexforfindingcustomurls!: pulumi.Output<string>;
    public readonly regexforfindingurlincss!: pulumi.Output<string>;
    public readonly regexforfindingurlinjavascript!: pulumi.Output<string>;
    public readonly regexforfindingurlinxcomponent!: pulumi.Output<string>;
    public readonly regexforfindingurlinxml!: pulumi.Output<string>;
    public readonly reqhdrrewritepolicylabel!: pulumi.Output<string>;
    public readonly requirepersistentcookie!: pulumi.Output<string>;
    public readonly reshdrrewritepolicylabel!: pulumi.Output<string>;
    public readonly urlrewritepolicylabel!: pulumi.Output<string>;

    /**
     * Create a Vpnclientlessaccessprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnclientlessaccessprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnclientlessaccessprofileArgs | VpnclientlessaccessprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnclientlessaccessprofileState | undefined;
            resourceInputs["clientconsumedcookies"] = state ? state.clientconsumedcookies : undefined;
            resourceInputs["javascriptrewritepolicylabel"] = state ? state.javascriptrewritepolicylabel : undefined;
            resourceInputs["profilename"] = state ? state.profilename : undefined;
            resourceInputs["regexforfindingcustomurls"] = state ? state.regexforfindingcustomurls : undefined;
            resourceInputs["regexforfindingurlincss"] = state ? state.regexforfindingurlincss : undefined;
            resourceInputs["regexforfindingurlinjavascript"] = state ? state.regexforfindingurlinjavascript : undefined;
            resourceInputs["regexforfindingurlinxcomponent"] = state ? state.regexforfindingurlinxcomponent : undefined;
            resourceInputs["regexforfindingurlinxml"] = state ? state.regexforfindingurlinxml : undefined;
            resourceInputs["reqhdrrewritepolicylabel"] = state ? state.reqhdrrewritepolicylabel : undefined;
            resourceInputs["requirepersistentcookie"] = state ? state.requirepersistentcookie : undefined;
            resourceInputs["reshdrrewritepolicylabel"] = state ? state.reshdrrewritepolicylabel : undefined;
            resourceInputs["urlrewritepolicylabel"] = state ? state.urlrewritepolicylabel : undefined;
        } else {
            const args = argsOrState as VpnclientlessaccessprofileArgs | undefined;
            if ((!args || args.profilename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profilename'");
            }
            resourceInputs["clientconsumedcookies"] = args ? args.clientconsumedcookies : undefined;
            resourceInputs["javascriptrewritepolicylabel"] = args ? args.javascriptrewritepolicylabel : undefined;
            resourceInputs["profilename"] = args ? args.profilename : undefined;
            resourceInputs["regexforfindingcustomurls"] = args ? args.regexforfindingcustomurls : undefined;
            resourceInputs["regexforfindingurlincss"] = args ? args.regexforfindingurlincss : undefined;
            resourceInputs["regexforfindingurlinjavascript"] = args ? args.regexforfindingurlinjavascript : undefined;
            resourceInputs["regexforfindingurlinxcomponent"] = args ? args.regexforfindingurlinxcomponent : undefined;
            resourceInputs["regexforfindingurlinxml"] = args ? args.regexforfindingurlinxml : undefined;
            resourceInputs["reqhdrrewritepolicylabel"] = args ? args.reqhdrrewritepolicylabel : undefined;
            resourceInputs["requirepersistentcookie"] = args ? args.requirepersistentcookie : undefined;
            resourceInputs["reshdrrewritepolicylabel"] = args ? args.reshdrrewritepolicylabel : undefined;
            resourceInputs["urlrewritepolicylabel"] = args ? args.urlrewritepolicylabel : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpnclientlessaccessprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vpnclientlessaccessprofile resources.
 */
export interface VpnclientlessaccessprofileState {
    clientconsumedcookies?: pulumi.Input<string>;
    javascriptrewritepolicylabel?: pulumi.Input<string>;
    profilename?: pulumi.Input<string>;
    regexforfindingcustomurls?: pulumi.Input<string>;
    regexforfindingurlincss?: pulumi.Input<string>;
    regexforfindingurlinjavascript?: pulumi.Input<string>;
    regexforfindingurlinxcomponent?: pulumi.Input<string>;
    regexforfindingurlinxml?: pulumi.Input<string>;
    reqhdrrewritepolicylabel?: pulumi.Input<string>;
    requirepersistentcookie?: pulumi.Input<string>;
    reshdrrewritepolicylabel?: pulumi.Input<string>;
    urlrewritepolicylabel?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpnclientlessaccessprofile resource.
 */
export interface VpnclientlessaccessprofileArgs {
    clientconsumedcookies?: pulumi.Input<string>;
    javascriptrewritepolicylabel?: pulumi.Input<string>;
    profilename: pulumi.Input<string>;
    regexforfindingcustomurls?: pulumi.Input<string>;
    regexforfindingurlincss?: pulumi.Input<string>;
    regexforfindingurlinjavascript?: pulumi.Input<string>;
    regexforfindingurlinxcomponent?: pulumi.Input<string>;
    regexforfindingurlinxml?: pulumi.Input<string>;
    reqhdrrewritepolicylabel?: pulumi.Input<string>;
    requirepersistentcookie?: pulumi.Input<string>;
    reshdrrewritepolicylabel?: pulumi.Input<string>;
    urlrewritepolicylabel?: pulumi.Input<string>;
}
