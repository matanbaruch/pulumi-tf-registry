// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GslbservicegroupGslbservicegroupmemberBinding extends pulumi.CustomResource {
    /**
     * Get an existing GslbservicegroupGslbservicegroupmemberBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbservicegroupGslbservicegroupmemberBindingState, opts?: pulumi.CustomResourceOptions): GslbservicegroupGslbservicegroupmemberBinding {
        return new GslbservicegroupGslbservicegroupmemberBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/gslbservicegroupGslbservicegroupmemberBinding:GslbservicegroupGslbservicegroupmemberBinding';

    /**
     * Returns true if the given object is an instance of GslbservicegroupGslbservicegroupmemberBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GslbservicegroupGslbservicegroupmemberBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GslbservicegroupGslbservicegroupmemberBinding.__pulumiType;
    }

    public readonly hashid!: pulumi.Output<number>;
    public readonly ip!: pulumi.Output<string>;
    public readonly order!: pulumi.Output<number>;
    public readonly port!: pulumi.Output<number>;
    public readonly publicip!: pulumi.Output<string>;
    public readonly publicport!: pulumi.Output<number>;
    public readonly servername!: pulumi.Output<string>;
    public readonly servicegroupname!: pulumi.Output<string>;
    public readonly siteprefix!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a GslbservicegroupGslbservicegroupmemberBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GslbservicegroupGslbservicegroupmemberBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbservicegroupGslbservicegroupmemberBindingArgs | GslbservicegroupGslbservicegroupmemberBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbservicegroupGslbservicegroupmemberBindingState | undefined;
            resourceInputs["hashid"] = state ? state.hashid : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["publicip"] = state ? state.publicip : undefined;
            resourceInputs["publicport"] = state ? state.publicport : undefined;
            resourceInputs["servername"] = state ? state.servername : undefined;
            resourceInputs["servicegroupname"] = state ? state.servicegroupname : undefined;
            resourceInputs["siteprefix"] = state ? state.siteprefix : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as GslbservicegroupGslbservicegroupmemberBindingArgs | undefined;
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.servicegroupname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicegroupname'");
            }
            resourceInputs["hashid"] = args ? args.hashid : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["publicip"] = args ? args.publicip : undefined;
            resourceInputs["publicport"] = args ? args.publicport : undefined;
            resourceInputs["servername"] = args ? args.servername : undefined;
            resourceInputs["servicegroupname"] = args ? args.servicegroupname : undefined;
            resourceInputs["siteprefix"] = args ? args.siteprefix : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GslbservicegroupGslbservicegroupmemberBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GslbservicegroupGslbservicegroupmemberBinding resources.
 */
export interface GslbservicegroupGslbservicegroupmemberBindingState {
    hashid?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    port?: pulumi.Input<number>;
    publicip?: pulumi.Input<string>;
    publicport?: pulumi.Input<number>;
    servername?: pulumi.Input<string>;
    servicegroupname?: pulumi.Input<string>;
    siteprefix?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GslbservicegroupGslbservicegroupmemberBinding resource.
 */
export interface GslbservicegroupGslbservicegroupmemberBindingArgs {
    hashid?: pulumi.Input<number>;
    ip?: pulumi.Input<string>;
    order?: pulumi.Input<number>;
    port: pulumi.Input<number>;
    publicip?: pulumi.Input<string>;
    publicport?: pulumi.Input<number>;
    servername?: pulumi.Input<string>;
    servicegroupname: pulumi.Input<string>;
    siteprefix?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    weight?: pulumi.Input<number>;
}
