// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Lbgroup extends pulumi.CustomResource {
    /**
     * Get an existing Lbgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbgroupState, opts?: pulumi.CustomResourceOptions): Lbgroup {
        return new Lbgroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/lbgroup:Lbgroup';

    /**
     * Returns true if the given object is an instance of Lbgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Lbgroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lbgroup.__pulumiType;
    }

    public readonly backuppersistencetimeout!: pulumi.Output<number>;
    public readonly cookiedomain!: pulumi.Output<string>;
    public readonly cookiename!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly persistencebackup!: pulumi.Output<string>;
    public readonly persistencetype!: pulumi.Output<string>;
    public readonly persistmask!: pulumi.Output<string>;
    public readonly rule!: pulumi.Output<string>;
    public readonly timeout!: pulumi.Output<number>;
    public readonly usevserverpersistency!: pulumi.Output<string>;
    public readonly v6persistmasklen!: pulumi.Output<number>;

    /**
     * Create a Lbgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LbgroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbgroupArgs | LbgroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbgroupState | undefined;
            resourceInputs["backuppersistencetimeout"] = state ? state.backuppersistencetimeout : undefined;
            resourceInputs["cookiedomain"] = state ? state.cookiedomain : undefined;
            resourceInputs["cookiename"] = state ? state.cookiename : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["persistencebackup"] = state ? state.persistencebackup : undefined;
            resourceInputs["persistencetype"] = state ? state.persistencetype : undefined;
            resourceInputs["persistmask"] = state ? state.persistmask : undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["usevserverpersistency"] = state ? state.usevserverpersistency : undefined;
            resourceInputs["v6persistmasklen"] = state ? state.v6persistmasklen : undefined;
        } else {
            const args = argsOrState as LbgroupArgs | undefined;
            resourceInputs["backuppersistencetimeout"] = args ? args.backuppersistencetimeout : undefined;
            resourceInputs["cookiedomain"] = args ? args.cookiedomain : undefined;
            resourceInputs["cookiename"] = args ? args.cookiename : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["persistencebackup"] = args ? args.persistencebackup : undefined;
            resourceInputs["persistencetype"] = args ? args.persistencetype : undefined;
            resourceInputs["persistmask"] = args ? args.persistmask : undefined;
            resourceInputs["rule"] = args ? args.rule : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["usevserverpersistency"] = args ? args.usevserverpersistency : undefined;
            resourceInputs["v6persistmasklen"] = args ? args.v6persistmasklen : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Lbgroup.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Lbgroup resources.
 */
export interface LbgroupState {
    backuppersistencetimeout?: pulumi.Input<number>;
    cookiedomain?: pulumi.Input<string>;
    cookiename?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistencebackup?: pulumi.Input<string>;
    persistencetype?: pulumi.Input<string>;
    persistmask?: pulumi.Input<string>;
    rule?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    usevserverpersistency?: pulumi.Input<string>;
    v6persistmasklen?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Lbgroup resource.
 */
export interface LbgroupArgs {
    backuppersistencetimeout?: pulumi.Input<number>;
    cookiedomain?: pulumi.Input<string>;
    cookiename?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistencebackup?: pulumi.Input<string>;
    persistencetype?: pulumi.Input<string>;
    persistmask?: pulumi.Input<string>;
    rule?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    usevserverpersistency?: pulumi.Input<string>;
    v6persistmasklen?: pulumi.Input<number>;
}
