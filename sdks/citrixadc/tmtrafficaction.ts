// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Tmtrafficaction extends pulumi.CustomResource {
    /**
     * Get an existing Tmtrafficaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TmtrafficactionState, opts?: pulumi.CustomResourceOptions): Tmtrafficaction {
        return new Tmtrafficaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/tmtrafficaction:Tmtrafficaction';

    /**
     * Returns true if the given object is an instance of Tmtrafficaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tmtrafficaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tmtrafficaction.__pulumiType;
    }

    public readonly apptimeout!: pulumi.Output<number>;
    public readonly forcedtimeout!: pulumi.Output<string>;
    public readonly forcedtimeoutval!: pulumi.Output<number>;
    public readonly formssoaction!: pulumi.Output<string>;
    public readonly initiatelogout!: pulumi.Output<string>;
    public readonly kcdaccount!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly passwdexpression!: pulumi.Output<string>;
    public readonly persistentcookie!: pulumi.Output<string>;
    public readonly samlssoprofile!: pulumi.Output<string>;
    public readonly sso!: pulumi.Output<string>;
    public readonly userexpression!: pulumi.Output<string>;

    /**
     * Create a Tmtrafficaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TmtrafficactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TmtrafficactionArgs | TmtrafficactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TmtrafficactionState | undefined;
            resourceInputs["apptimeout"] = state ? state.apptimeout : undefined;
            resourceInputs["forcedtimeout"] = state ? state.forcedtimeout : undefined;
            resourceInputs["forcedtimeoutval"] = state ? state.forcedtimeoutval : undefined;
            resourceInputs["formssoaction"] = state ? state.formssoaction : undefined;
            resourceInputs["initiatelogout"] = state ? state.initiatelogout : undefined;
            resourceInputs["kcdaccount"] = state ? state.kcdaccount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passwdexpression"] = state ? state.passwdexpression : undefined;
            resourceInputs["persistentcookie"] = state ? state.persistentcookie : undefined;
            resourceInputs["samlssoprofile"] = state ? state.samlssoprofile : undefined;
            resourceInputs["sso"] = state ? state.sso : undefined;
            resourceInputs["userexpression"] = state ? state.userexpression : undefined;
        } else {
            const args = argsOrState as TmtrafficactionArgs | undefined;
            resourceInputs["apptimeout"] = args ? args.apptimeout : undefined;
            resourceInputs["forcedtimeout"] = args ? args.forcedtimeout : undefined;
            resourceInputs["forcedtimeoutval"] = args ? args.forcedtimeoutval : undefined;
            resourceInputs["formssoaction"] = args ? args.formssoaction : undefined;
            resourceInputs["initiatelogout"] = args ? args.initiatelogout : undefined;
            resourceInputs["kcdaccount"] = args ? args.kcdaccount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwdexpression"] = args ? args.passwdexpression : undefined;
            resourceInputs["persistentcookie"] = args ? args.persistentcookie : undefined;
            resourceInputs["samlssoprofile"] = args ? args.samlssoprofile : undefined;
            resourceInputs["sso"] = args ? args.sso : undefined;
            resourceInputs["userexpression"] = args ? args.userexpression : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tmtrafficaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Tmtrafficaction resources.
 */
export interface TmtrafficactionState {
    apptimeout?: pulumi.Input<number>;
    forcedtimeout?: pulumi.Input<string>;
    forcedtimeoutval?: pulumi.Input<number>;
    formssoaction?: pulumi.Input<string>;
    initiatelogout?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwdexpression?: pulumi.Input<string>;
    persistentcookie?: pulumi.Input<string>;
    samlssoprofile?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    userexpression?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Tmtrafficaction resource.
 */
export interface TmtrafficactionArgs {
    apptimeout?: pulumi.Input<number>;
    forcedtimeout?: pulumi.Input<string>;
    forcedtimeoutval?: pulumi.Input<number>;
    formssoaction?: pulumi.Input<string>;
    initiatelogout?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    passwdexpression?: pulumi.Input<string>;
    persistentcookie?: pulumi.Input<string>;
    samlssoprofile?: pulumi.Input<string>;
    sso?: pulumi.Input<string>;
    userexpression?: pulumi.Input<string>;
}
