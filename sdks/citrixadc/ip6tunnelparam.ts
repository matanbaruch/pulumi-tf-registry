// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ip6tunnelparam extends pulumi.CustomResource {
    /**
     * Get an existing Ip6tunnelparam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ip6tunnelparamState, opts?: pulumi.CustomResourceOptions): Ip6tunnelparam {
        return new Ip6tunnelparam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/ip6tunnelparam:Ip6tunnelparam';

    /**
     * Returns true if the given object is an instance of Ip6tunnelparam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ip6tunnelparam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ip6tunnelparam.__pulumiType;
    }

    public readonly dropfrag!: pulumi.Output<string>;
    public readonly dropfragcputhreshold!: pulumi.Output<number>;
    public readonly srcip!: pulumi.Output<string>;
    public readonly srciproundrobin!: pulumi.Output<string>;
    public readonly useclientsourceipv6!: pulumi.Output<string>;

    /**
     * Create a Ip6tunnelparam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: Ip6tunnelparamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ip6tunnelparamArgs | Ip6tunnelparamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ip6tunnelparamState | undefined;
            resourceInputs["dropfrag"] = state ? state.dropfrag : undefined;
            resourceInputs["dropfragcputhreshold"] = state ? state.dropfragcputhreshold : undefined;
            resourceInputs["srcip"] = state ? state.srcip : undefined;
            resourceInputs["srciproundrobin"] = state ? state.srciproundrobin : undefined;
            resourceInputs["useclientsourceipv6"] = state ? state.useclientsourceipv6 : undefined;
        } else {
            const args = argsOrState as Ip6tunnelparamArgs | undefined;
            resourceInputs["dropfrag"] = args ? args.dropfrag : undefined;
            resourceInputs["dropfragcputhreshold"] = args ? args.dropfragcputhreshold : undefined;
            resourceInputs["srcip"] = args ? args.srcip : undefined;
            resourceInputs["srciproundrobin"] = args ? args.srciproundrobin : undefined;
            resourceInputs["useclientsourceipv6"] = args ? args.useclientsourceipv6 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ip6tunnelparam.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ip6tunnelparam resources.
 */
export interface Ip6tunnelparamState {
    dropfrag?: pulumi.Input<string>;
    dropfragcputhreshold?: pulumi.Input<number>;
    srcip?: pulumi.Input<string>;
    srciproundrobin?: pulumi.Input<string>;
    useclientsourceipv6?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ip6tunnelparam resource.
 */
export interface Ip6tunnelparamArgs {
    dropfrag?: pulumi.Input<string>;
    dropfragcputhreshold?: pulumi.Input<number>;
    srcip?: pulumi.Input<string>;
    srciproundrobin?: pulumi.Input<string>;
    useclientsourceipv6?: pulumi.Input<string>;
}
