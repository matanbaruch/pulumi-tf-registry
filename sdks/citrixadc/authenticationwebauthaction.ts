// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Authenticationwebauthaction extends pulumi.CustomResource {
    /**
     * Get an existing Authenticationwebauthaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationwebauthactionState, opts?: pulumi.CustomResourceOptions): Authenticationwebauthaction {
        return new Authenticationwebauthaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/authenticationwebauthaction:Authenticationwebauthaction';

    /**
     * Returns true if the given object is an instance of Authenticationwebauthaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Authenticationwebauthaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Authenticationwebauthaction.__pulumiType;
    }

    public readonly attribute1!: pulumi.Output<string>;
    public readonly attribute10!: pulumi.Output<string>;
    public readonly attribute11!: pulumi.Output<string>;
    public readonly attribute12!: pulumi.Output<string>;
    public readonly attribute13!: pulumi.Output<string>;
    public readonly attribute14!: pulumi.Output<string>;
    public readonly attribute15!: pulumi.Output<string>;
    public readonly attribute16!: pulumi.Output<string>;
    public readonly attribute2!: pulumi.Output<string>;
    public readonly attribute3!: pulumi.Output<string>;
    public readonly attribute4!: pulumi.Output<string>;
    public readonly attribute5!: pulumi.Output<string>;
    public readonly attribute6!: pulumi.Output<string>;
    public readonly attribute7!: pulumi.Output<string>;
    public readonly attribute8!: pulumi.Output<string>;
    public readonly attribute9!: pulumi.Output<string>;
    public readonly defaultauthenticationgroup!: pulumi.Output<string>;
    public readonly fullreqexpr!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly scheme!: pulumi.Output<string>;
    public readonly serverip!: pulumi.Output<string>;
    public readonly serverport!: pulumi.Output<number>;
    public readonly successrule!: pulumi.Output<string>;

    /**
     * Create a Authenticationwebauthaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthenticationwebauthactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationwebauthactionArgs | AuthenticationwebauthactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationwebauthactionState | undefined;
            resourceInputs["attribute1"] = state ? state.attribute1 : undefined;
            resourceInputs["attribute10"] = state ? state.attribute10 : undefined;
            resourceInputs["attribute11"] = state ? state.attribute11 : undefined;
            resourceInputs["attribute12"] = state ? state.attribute12 : undefined;
            resourceInputs["attribute13"] = state ? state.attribute13 : undefined;
            resourceInputs["attribute14"] = state ? state.attribute14 : undefined;
            resourceInputs["attribute15"] = state ? state.attribute15 : undefined;
            resourceInputs["attribute16"] = state ? state.attribute16 : undefined;
            resourceInputs["attribute2"] = state ? state.attribute2 : undefined;
            resourceInputs["attribute3"] = state ? state.attribute3 : undefined;
            resourceInputs["attribute4"] = state ? state.attribute4 : undefined;
            resourceInputs["attribute5"] = state ? state.attribute5 : undefined;
            resourceInputs["attribute6"] = state ? state.attribute6 : undefined;
            resourceInputs["attribute7"] = state ? state.attribute7 : undefined;
            resourceInputs["attribute8"] = state ? state.attribute8 : undefined;
            resourceInputs["attribute9"] = state ? state.attribute9 : undefined;
            resourceInputs["defaultauthenticationgroup"] = state ? state.defaultauthenticationgroup : undefined;
            resourceInputs["fullreqexpr"] = state ? state.fullreqexpr : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scheme"] = state ? state.scheme : undefined;
            resourceInputs["serverip"] = state ? state.serverip : undefined;
            resourceInputs["serverport"] = state ? state.serverport : undefined;
            resourceInputs["successrule"] = state ? state.successrule : undefined;
        } else {
            const args = argsOrState as AuthenticationwebauthactionArgs | undefined;
            if ((!args || args.scheme === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheme'");
            }
            if ((!args || args.serverip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverip'");
            }
            if ((!args || args.serverport === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverport'");
            }
            if ((!args || args.successrule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'successrule'");
            }
            resourceInputs["attribute1"] = args ? args.attribute1 : undefined;
            resourceInputs["attribute10"] = args ? args.attribute10 : undefined;
            resourceInputs["attribute11"] = args ? args.attribute11 : undefined;
            resourceInputs["attribute12"] = args ? args.attribute12 : undefined;
            resourceInputs["attribute13"] = args ? args.attribute13 : undefined;
            resourceInputs["attribute14"] = args ? args.attribute14 : undefined;
            resourceInputs["attribute15"] = args ? args.attribute15 : undefined;
            resourceInputs["attribute16"] = args ? args.attribute16 : undefined;
            resourceInputs["attribute2"] = args ? args.attribute2 : undefined;
            resourceInputs["attribute3"] = args ? args.attribute3 : undefined;
            resourceInputs["attribute4"] = args ? args.attribute4 : undefined;
            resourceInputs["attribute5"] = args ? args.attribute5 : undefined;
            resourceInputs["attribute6"] = args ? args.attribute6 : undefined;
            resourceInputs["attribute7"] = args ? args.attribute7 : undefined;
            resourceInputs["attribute8"] = args ? args.attribute8 : undefined;
            resourceInputs["attribute9"] = args ? args.attribute9 : undefined;
            resourceInputs["defaultauthenticationgroup"] = args ? args.defaultauthenticationgroup : undefined;
            resourceInputs["fullreqexpr"] = args ? args.fullreqexpr : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scheme"] = args ? args.scheme : undefined;
            resourceInputs["serverip"] = args ? args.serverip : undefined;
            resourceInputs["serverport"] = args ? args.serverport : undefined;
            resourceInputs["successrule"] = args ? args.successrule : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Authenticationwebauthaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Authenticationwebauthaction resources.
 */
export interface AuthenticationwebauthactionState {
    attribute1?: pulumi.Input<string>;
    attribute10?: pulumi.Input<string>;
    attribute11?: pulumi.Input<string>;
    attribute12?: pulumi.Input<string>;
    attribute13?: pulumi.Input<string>;
    attribute14?: pulumi.Input<string>;
    attribute15?: pulumi.Input<string>;
    attribute16?: pulumi.Input<string>;
    attribute2?: pulumi.Input<string>;
    attribute3?: pulumi.Input<string>;
    attribute4?: pulumi.Input<string>;
    attribute5?: pulumi.Input<string>;
    attribute6?: pulumi.Input<string>;
    attribute7?: pulumi.Input<string>;
    attribute8?: pulumi.Input<string>;
    attribute9?: pulumi.Input<string>;
    defaultauthenticationgroup?: pulumi.Input<string>;
    fullreqexpr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scheme?: pulumi.Input<string>;
    serverip?: pulumi.Input<string>;
    serverport?: pulumi.Input<number>;
    successrule?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Authenticationwebauthaction resource.
 */
export interface AuthenticationwebauthactionArgs {
    attribute1?: pulumi.Input<string>;
    attribute10?: pulumi.Input<string>;
    attribute11?: pulumi.Input<string>;
    attribute12?: pulumi.Input<string>;
    attribute13?: pulumi.Input<string>;
    attribute14?: pulumi.Input<string>;
    attribute15?: pulumi.Input<string>;
    attribute16?: pulumi.Input<string>;
    attribute2?: pulumi.Input<string>;
    attribute3?: pulumi.Input<string>;
    attribute4?: pulumi.Input<string>;
    attribute5?: pulumi.Input<string>;
    attribute6?: pulumi.Input<string>;
    attribute7?: pulumi.Input<string>;
    attribute8?: pulumi.Input<string>;
    attribute9?: pulumi.Input<string>;
    defaultauthenticationgroup?: pulumi.Input<string>;
    fullreqexpr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    scheme: pulumi.Input<string>;
    serverip: pulumi.Input<string>;
    serverport: pulumi.Input<number>;
    successrule: pulumi.Input<string>;
}
