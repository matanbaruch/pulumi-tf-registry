// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BotprofileIpreputationBinding extends pulumi.CustomResource {
    /**
     * Get an existing BotprofileIpreputationBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BotprofileIpreputationBindingState, opts?: pulumi.CustomResourceOptions): BotprofileIpreputationBinding {
        return new BotprofileIpreputationBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/botprofileIpreputationBinding:BotprofileIpreputationBinding';

    /**
     * Returns true if the given object is an instance of BotprofileIpreputationBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BotprofileIpreputationBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BotprofileIpreputationBinding.__pulumiType;
    }

    public readonly botBindComment!: pulumi.Output<string>;
    public readonly botIprepActions!: pulumi.Output<string[]>;
    public readonly botIprepEnabled!: pulumi.Output<string>;
    public readonly botIpreputation!: pulumi.Output<boolean>;
    public readonly category!: pulumi.Output<string>;
    public readonly logmessage!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a BotprofileIpreputationBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotprofileIpreputationBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BotprofileIpreputationBindingArgs | BotprofileIpreputationBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BotprofileIpreputationBindingState | undefined;
            resourceInputs["botBindComment"] = state ? state.botBindComment : undefined;
            resourceInputs["botIprepActions"] = state ? state.botIprepActions : undefined;
            resourceInputs["botIprepEnabled"] = state ? state.botIprepEnabled : undefined;
            resourceInputs["botIpreputation"] = state ? state.botIpreputation : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["logmessage"] = state ? state.logmessage : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as BotprofileIpreputationBindingArgs | undefined;
            if ((!args || args.category === undefined) && !opts.urn) {
                throw new Error("Missing required property 'category'");
            }
            resourceInputs["botBindComment"] = args ? args.botBindComment : undefined;
            resourceInputs["botIprepActions"] = args ? args.botIprepActions : undefined;
            resourceInputs["botIprepEnabled"] = args ? args.botIprepEnabled : undefined;
            resourceInputs["botIpreputation"] = args ? args.botIpreputation : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["logmessage"] = args ? args.logmessage : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BotprofileIpreputationBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BotprofileIpreputationBinding resources.
 */
export interface BotprofileIpreputationBindingState {
    botBindComment?: pulumi.Input<string>;
    botIprepActions?: pulumi.Input<pulumi.Input<string>[]>;
    botIprepEnabled?: pulumi.Input<string>;
    botIpreputation?: pulumi.Input<boolean>;
    category?: pulumi.Input<string>;
    logmessage?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BotprofileIpreputationBinding resource.
 */
export interface BotprofileIpreputationBindingArgs {
    botBindComment?: pulumi.Input<string>;
    botIprepActions?: pulumi.Input<pulumi.Input<string>[]>;
    botIprepEnabled?: pulumi.Input<string>;
    botIpreputation?: pulumi.Input<boolean>;
    category: pulumi.Input<string>;
    logmessage?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
