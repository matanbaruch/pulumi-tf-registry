// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Appfwsignatures extends pulumi.CustomResource {
    /**
     * Get an existing Appfwsignatures resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppfwsignaturesState, opts?: pulumi.CustomResourceOptions): Appfwsignatures {
        return new Appfwsignatures(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appfwsignatures:Appfwsignatures';

    /**
     * Returns true if the given object is an instance of Appfwsignatures.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appfwsignatures {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appfwsignatures.__pulumiType;
    }

    public readonly actions!: pulumi.Output<string[]>;
    public readonly autoenablenewsignatures!: pulumi.Output<string>;
    public readonly category!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<string>;
    public readonly merge!: pulumi.Output<boolean>;
    public readonly mergedefault!: pulumi.Output<boolean>;
    public readonly name!: pulumi.Output<string>;
    public readonly overwrite!: pulumi.Output<boolean>;
    public readonly preservedefactions!: pulumi.Output<boolean>;
    public readonly ruleids!: pulumi.Output<number[]>;
    public readonly sha1!: pulumi.Output<string>;
    public readonly src!: pulumi.Output<string>;
    public readonly vendortype!: pulumi.Output<string>;
    public readonly xslt!: pulumi.Output<string>;

    /**
     * Create a Appfwsignatures resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppfwsignaturesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppfwsignaturesArgs | AppfwsignaturesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppfwsignaturesState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["autoenablenewsignatures"] = state ? state.autoenablenewsignatures : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["merge"] = state ? state.merge : undefined;
            resourceInputs["mergedefault"] = state ? state.mergedefault : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["overwrite"] = state ? state.overwrite : undefined;
            resourceInputs["preservedefactions"] = state ? state.preservedefactions : undefined;
            resourceInputs["ruleids"] = state ? state.ruleids : undefined;
            resourceInputs["sha1"] = state ? state.sha1 : undefined;
            resourceInputs["src"] = state ? state.src : undefined;
            resourceInputs["vendortype"] = state ? state.vendortype : undefined;
            resourceInputs["xslt"] = state ? state.xslt : undefined;
        } else {
            const args = argsOrState as AppfwsignaturesArgs | undefined;
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["autoenablenewsignatures"] = args ? args.autoenablenewsignatures : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["merge"] = args ? args.merge : undefined;
            resourceInputs["mergedefault"] = args ? args.mergedefault : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["overwrite"] = args ? args.overwrite : undefined;
            resourceInputs["preservedefactions"] = args ? args.preservedefactions : undefined;
            resourceInputs["ruleids"] = args ? args.ruleids : undefined;
            resourceInputs["sha1"] = args ? args.sha1 : undefined;
            resourceInputs["src"] = args ? args.src : undefined;
            resourceInputs["vendortype"] = args ? args.vendortype : undefined;
            resourceInputs["xslt"] = args ? args.xslt : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Appfwsignatures.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Appfwsignatures resources.
 */
export interface AppfwsignaturesState {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    autoenablenewsignatures?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    enabled?: pulumi.Input<string>;
    merge?: pulumi.Input<boolean>;
    mergedefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    overwrite?: pulumi.Input<boolean>;
    preservedefactions?: pulumi.Input<boolean>;
    ruleids?: pulumi.Input<pulumi.Input<number>[]>;
    sha1?: pulumi.Input<string>;
    src?: pulumi.Input<string>;
    vendortype?: pulumi.Input<string>;
    xslt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Appfwsignatures resource.
 */
export interface AppfwsignaturesArgs {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    autoenablenewsignatures?: pulumi.Input<string>;
    category?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    enabled?: pulumi.Input<string>;
    merge?: pulumi.Input<boolean>;
    mergedefault?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    overwrite?: pulumi.Input<boolean>;
    preservedefactions?: pulumi.Input<boolean>;
    ruleids?: pulumi.Input<pulumi.Input<number>[]>;
    sha1?: pulumi.Input<string>;
    src?: pulumi.Input<string>;
    vendortype?: pulumi.Input<string>;
    xslt?: pulumi.Input<string>;
}
