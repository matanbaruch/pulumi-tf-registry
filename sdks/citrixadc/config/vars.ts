// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("citrixadc");

/**
 * Perform the login operation and acquire a session token to be used for subsequent requests.
 */
export declare const doLogin: boolean | undefined;
Object.defineProperty(exports, "doLogin", {
    get() {
        return __config.getObject<boolean>("doLogin");
    },
    enumerable: true,
});

/**
 * The URL to the API
 */
export declare const endpoint: string | undefined;
Object.defineProperty(exports, "endpoint", {
    get() {
        return __config.get("endpoint");
    },
    enumerable: true,
});

/**
 * Ignore validity of endpoint TLS certificate if true
 */
export declare const insecureSkipVerify: boolean | undefined;
Object.defineProperty(exports, "insecureSkipVerify", {
    get() {
        return __config.getObject<boolean>("insecureSkipVerify");
    },
    enumerable: true,
});

/**
 * Partition to target
 */
export declare const partition: string | undefined;
Object.defineProperty(exports, "partition", {
    get() {
        return __config.get("partition");
    },
    enumerable: true,
});

/**
 * Password to login to the NetScaler
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Target NS ip. When defined username, password and endpoint must refer to MAS.
 */
export declare const proxiedNs: string | undefined;
Object.defineProperty(exports, "proxiedNs", {
    get() {
        return __config.get("proxiedNs");
    },
    enumerable: true,
});

/**
 * Username to login to the NetScaler
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

