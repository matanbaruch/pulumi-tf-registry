// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Transformaction extends pulumi.CustomResource {
    /**
     * Get an existing Transformaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransformactionState, opts?: pulumi.CustomResourceOptions): Transformaction {
        return new Transformaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/transformaction:Transformaction';

    /**
     * Returns true if the given object is an instance of Transformaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Transformaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Transformaction.__pulumiType;
    }

    public readonly comment!: pulumi.Output<string>;
    public readonly cookiedomainfrom!: pulumi.Output<string>;
    public readonly cookiedomaininto!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly priority!: pulumi.Output<number>;
    public readonly profilename!: pulumi.Output<string>;
    public readonly requrlfrom!: pulumi.Output<string>;
    public readonly requrlinto!: pulumi.Output<string>;
    public readonly resurlfrom!: pulumi.Output<string>;
    public readonly resurlinto!: pulumi.Output<string>;
    public readonly state!: pulumi.Output<string>;

    /**
     * Create a Transformaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TransformactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransformactionArgs | TransformactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransformactionState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cookiedomainfrom"] = state ? state.cookiedomainfrom : undefined;
            resourceInputs["cookiedomaininto"] = state ? state.cookiedomaininto : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["profilename"] = state ? state.profilename : undefined;
            resourceInputs["requrlfrom"] = state ? state.requrlfrom : undefined;
            resourceInputs["requrlinto"] = state ? state.requrlinto : undefined;
            resourceInputs["resurlfrom"] = state ? state.resurlfrom : undefined;
            resourceInputs["resurlinto"] = state ? state.resurlinto : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as TransformactionArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cookiedomainfrom"] = args ? args.cookiedomainfrom : undefined;
            resourceInputs["cookiedomaininto"] = args ? args.cookiedomaininto : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["profilename"] = args ? args.profilename : undefined;
            resourceInputs["requrlfrom"] = args ? args.requrlfrom : undefined;
            resourceInputs["requrlinto"] = args ? args.requrlinto : undefined;
            resourceInputs["resurlfrom"] = args ? args.resurlfrom : undefined;
            resourceInputs["resurlinto"] = args ? args.resurlinto : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Transformaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Transformaction resources.
 */
export interface TransformactionState {
    comment?: pulumi.Input<string>;
    cookiedomainfrom?: pulumi.Input<string>;
    cookiedomaininto?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    profilename?: pulumi.Input<string>;
    requrlfrom?: pulumi.Input<string>;
    requrlinto?: pulumi.Input<string>;
    resurlfrom?: pulumi.Input<string>;
    resurlinto?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Transformaction resource.
 */
export interface TransformactionArgs {
    comment?: pulumi.Input<string>;
    cookiedomainfrom?: pulumi.Input<string>;
    cookiedomaininto?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    profilename?: pulumi.Input<string>;
    requrlfrom?: pulumi.Input<string>;
    requrlinto?: pulumi.Input<string>;
    resurlfrom?: pulumi.Input<string>;
    resurlinto?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
}
