// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Rdpclientprofile extends pulumi.CustomResource {
    /**
     * Get an existing Rdpclientprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RdpclientprofileState, opts?: pulumi.CustomResourceOptions): Rdpclientprofile {
        return new Rdpclientprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/rdpclientprofile:Rdpclientprofile';

    /**
     * Returns true if the given object is an instance of Rdpclientprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rdpclientprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rdpclientprofile.__pulumiType;
    }

    public readonly addusernameinrdpfile!: pulumi.Output<string>;
    public readonly audiocapturemode!: pulumi.Output<string>;
    public readonly keyboardhook!: pulumi.Output<string>;
    public readonly multimonitorsupport!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly psk!: pulumi.Output<string>;
    public readonly randomizerdpfilename!: pulumi.Output<string>;
    public readonly rdpcookievalidity!: pulumi.Output<number>;
    public readonly rdpcustomparams!: pulumi.Output<string>;
    public readonly rdpfilename!: pulumi.Output<string>;
    public readonly rdphost!: pulumi.Output<string>;
    public readonly rdplinkattribute!: pulumi.Output<string>;
    public readonly rdplistener!: pulumi.Output<string>;
    public readonly rdpurloverride!: pulumi.Output<string>;
    public readonly redirectclipboard!: pulumi.Output<string>;
    public readonly redirectcomports!: pulumi.Output<string>;
    public readonly redirectdrives!: pulumi.Output<string>;
    public readonly redirectpnpdevices!: pulumi.Output<string>;
    public readonly redirectprinters!: pulumi.Output<string>;
    public readonly videoplaybackmode!: pulumi.Output<string>;

    /**
     * Create a Rdpclientprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RdpclientprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RdpclientprofileArgs | RdpclientprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RdpclientprofileState | undefined;
            resourceInputs["addusernameinrdpfile"] = state ? state.addusernameinrdpfile : undefined;
            resourceInputs["audiocapturemode"] = state ? state.audiocapturemode : undefined;
            resourceInputs["keyboardhook"] = state ? state.keyboardhook : undefined;
            resourceInputs["multimonitorsupport"] = state ? state.multimonitorsupport : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["psk"] = state ? state.psk : undefined;
            resourceInputs["randomizerdpfilename"] = state ? state.randomizerdpfilename : undefined;
            resourceInputs["rdpcookievalidity"] = state ? state.rdpcookievalidity : undefined;
            resourceInputs["rdpcustomparams"] = state ? state.rdpcustomparams : undefined;
            resourceInputs["rdpfilename"] = state ? state.rdpfilename : undefined;
            resourceInputs["rdphost"] = state ? state.rdphost : undefined;
            resourceInputs["rdplinkattribute"] = state ? state.rdplinkattribute : undefined;
            resourceInputs["rdplistener"] = state ? state.rdplistener : undefined;
            resourceInputs["rdpurloverride"] = state ? state.rdpurloverride : undefined;
            resourceInputs["redirectclipboard"] = state ? state.redirectclipboard : undefined;
            resourceInputs["redirectcomports"] = state ? state.redirectcomports : undefined;
            resourceInputs["redirectdrives"] = state ? state.redirectdrives : undefined;
            resourceInputs["redirectpnpdevices"] = state ? state.redirectpnpdevices : undefined;
            resourceInputs["redirectprinters"] = state ? state.redirectprinters : undefined;
            resourceInputs["videoplaybackmode"] = state ? state.videoplaybackmode : undefined;
        } else {
            const args = argsOrState as RdpclientprofileArgs | undefined;
            resourceInputs["addusernameinrdpfile"] = args ? args.addusernameinrdpfile : undefined;
            resourceInputs["audiocapturemode"] = args ? args.audiocapturemode : undefined;
            resourceInputs["keyboardhook"] = args ? args.keyboardhook : undefined;
            resourceInputs["multimonitorsupport"] = args ? args.multimonitorsupport : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["psk"] = args ? args.psk : undefined;
            resourceInputs["randomizerdpfilename"] = args ? args.randomizerdpfilename : undefined;
            resourceInputs["rdpcookievalidity"] = args ? args.rdpcookievalidity : undefined;
            resourceInputs["rdpcustomparams"] = args ? args.rdpcustomparams : undefined;
            resourceInputs["rdpfilename"] = args ? args.rdpfilename : undefined;
            resourceInputs["rdphost"] = args ? args.rdphost : undefined;
            resourceInputs["rdplinkattribute"] = args ? args.rdplinkattribute : undefined;
            resourceInputs["rdplistener"] = args ? args.rdplistener : undefined;
            resourceInputs["rdpurloverride"] = args ? args.rdpurloverride : undefined;
            resourceInputs["redirectclipboard"] = args ? args.redirectclipboard : undefined;
            resourceInputs["redirectcomports"] = args ? args.redirectcomports : undefined;
            resourceInputs["redirectdrives"] = args ? args.redirectdrives : undefined;
            resourceInputs["redirectpnpdevices"] = args ? args.redirectpnpdevices : undefined;
            resourceInputs["redirectprinters"] = args ? args.redirectprinters : undefined;
            resourceInputs["videoplaybackmode"] = args ? args.videoplaybackmode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Rdpclientprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Rdpclientprofile resources.
 */
export interface RdpclientprofileState {
    addusernameinrdpfile?: pulumi.Input<string>;
    audiocapturemode?: pulumi.Input<string>;
    keyboardhook?: pulumi.Input<string>;
    multimonitorsupport?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    psk?: pulumi.Input<string>;
    randomizerdpfilename?: pulumi.Input<string>;
    rdpcookievalidity?: pulumi.Input<number>;
    rdpcustomparams?: pulumi.Input<string>;
    rdpfilename?: pulumi.Input<string>;
    rdphost?: pulumi.Input<string>;
    rdplinkattribute?: pulumi.Input<string>;
    rdplistener?: pulumi.Input<string>;
    rdpurloverride?: pulumi.Input<string>;
    redirectclipboard?: pulumi.Input<string>;
    redirectcomports?: pulumi.Input<string>;
    redirectdrives?: pulumi.Input<string>;
    redirectpnpdevices?: pulumi.Input<string>;
    redirectprinters?: pulumi.Input<string>;
    videoplaybackmode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Rdpclientprofile resource.
 */
export interface RdpclientprofileArgs {
    addusernameinrdpfile?: pulumi.Input<string>;
    audiocapturemode?: pulumi.Input<string>;
    keyboardhook?: pulumi.Input<string>;
    multimonitorsupport?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    psk?: pulumi.Input<string>;
    randomizerdpfilename?: pulumi.Input<string>;
    rdpcookievalidity?: pulumi.Input<number>;
    rdpcustomparams?: pulumi.Input<string>;
    rdpfilename?: pulumi.Input<string>;
    rdphost?: pulumi.Input<string>;
    rdplinkattribute?: pulumi.Input<string>;
    rdplistener?: pulumi.Input<string>;
    rdpurloverride?: pulumi.Input<string>;
    redirectclipboard?: pulumi.Input<string>;
    redirectcomports?: pulumi.Input<string>;
    redirectdrives?: pulumi.Input<string>;
    redirectpnpdevices?: pulumi.Input<string>;
    redirectprinters?: pulumi.Input<string>;
    videoplaybackmode?: pulumi.Input<string>;
}
