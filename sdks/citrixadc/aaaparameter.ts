// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Aaaparameter extends pulumi.CustomResource {
    /**
     * Get an existing Aaaparameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AaaparameterState, opts?: pulumi.CustomResourceOptions): Aaaparameter {
        return new Aaaparameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/aaaparameter:Aaaparameter';

    /**
     * Returns true if the given object is an instance of Aaaparameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Aaaparameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Aaaparameter.__pulumiType;
    }

    public readonly aaadloglevel!: pulumi.Output<string>;
    public readonly aaadnatip!: pulumi.Output<string>;
    public readonly aaasessionloglevel!: pulumi.Output<string>;
    public readonly apitokencache!: pulumi.Output<string>;
    public readonly defaultauthtype!: pulumi.Output<string>;
    public readonly defaultcspheader!: pulumi.Output<string>;
    public readonly dynaddr!: pulumi.Output<string>;
    public readonly enableenhancedauthfeedback!: pulumi.Output<string>;
    public readonly enablesessionstickiness!: pulumi.Output<string>;
    public readonly enablestaticpagecaching!: pulumi.Output<string>;
    public readonly failedlogintimeout!: pulumi.Output<number>;
    public readonly ftmode!: pulumi.Output<string>;
    public readonly loginencryption!: pulumi.Output<string>;
    public readonly maxaaausers!: pulumi.Output<number>;
    public readonly maxkbquestions!: pulumi.Output<number>;
    public readonly maxloginattempts!: pulumi.Output<number>;
    public readonly maxsamldeflatesize!: pulumi.Output<number>;
    public readonly persistentloginattempts!: pulumi.Output<string>;
    public readonly pwdexpirynotificationdays!: pulumi.Output<number>;
    public readonly samesite!: pulumi.Output<string>;
    public readonly tokenintrospectioninterval!: pulumi.Output<number>;

    /**
     * Create a Aaaparameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AaaparameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AaaparameterArgs | AaaparameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AaaparameterState | undefined;
            resourceInputs["aaadloglevel"] = state ? state.aaadloglevel : undefined;
            resourceInputs["aaadnatip"] = state ? state.aaadnatip : undefined;
            resourceInputs["aaasessionloglevel"] = state ? state.aaasessionloglevel : undefined;
            resourceInputs["apitokencache"] = state ? state.apitokencache : undefined;
            resourceInputs["defaultauthtype"] = state ? state.defaultauthtype : undefined;
            resourceInputs["defaultcspheader"] = state ? state.defaultcspheader : undefined;
            resourceInputs["dynaddr"] = state ? state.dynaddr : undefined;
            resourceInputs["enableenhancedauthfeedback"] = state ? state.enableenhancedauthfeedback : undefined;
            resourceInputs["enablesessionstickiness"] = state ? state.enablesessionstickiness : undefined;
            resourceInputs["enablestaticpagecaching"] = state ? state.enablestaticpagecaching : undefined;
            resourceInputs["failedlogintimeout"] = state ? state.failedlogintimeout : undefined;
            resourceInputs["ftmode"] = state ? state.ftmode : undefined;
            resourceInputs["loginencryption"] = state ? state.loginencryption : undefined;
            resourceInputs["maxaaausers"] = state ? state.maxaaausers : undefined;
            resourceInputs["maxkbquestions"] = state ? state.maxkbquestions : undefined;
            resourceInputs["maxloginattempts"] = state ? state.maxloginattempts : undefined;
            resourceInputs["maxsamldeflatesize"] = state ? state.maxsamldeflatesize : undefined;
            resourceInputs["persistentloginattempts"] = state ? state.persistentloginattempts : undefined;
            resourceInputs["pwdexpirynotificationdays"] = state ? state.pwdexpirynotificationdays : undefined;
            resourceInputs["samesite"] = state ? state.samesite : undefined;
            resourceInputs["tokenintrospectioninterval"] = state ? state.tokenintrospectioninterval : undefined;
        } else {
            const args = argsOrState as AaaparameterArgs | undefined;
            resourceInputs["aaadloglevel"] = args ? args.aaadloglevel : undefined;
            resourceInputs["aaadnatip"] = args ? args.aaadnatip : undefined;
            resourceInputs["aaasessionloglevel"] = args ? args.aaasessionloglevel : undefined;
            resourceInputs["apitokencache"] = args ? args.apitokencache : undefined;
            resourceInputs["defaultauthtype"] = args ? args.defaultauthtype : undefined;
            resourceInputs["defaultcspheader"] = args ? args.defaultcspheader : undefined;
            resourceInputs["dynaddr"] = args ? args.dynaddr : undefined;
            resourceInputs["enableenhancedauthfeedback"] = args ? args.enableenhancedauthfeedback : undefined;
            resourceInputs["enablesessionstickiness"] = args ? args.enablesessionstickiness : undefined;
            resourceInputs["enablestaticpagecaching"] = args ? args.enablestaticpagecaching : undefined;
            resourceInputs["failedlogintimeout"] = args ? args.failedlogintimeout : undefined;
            resourceInputs["ftmode"] = args ? args.ftmode : undefined;
            resourceInputs["loginencryption"] = args ? args.loginencryption : undefined;
            resourceInputs["maxaaausers"] = args ? args.maxaaausers : undefined;
            resourceInputs["maxkbquestions"] = args ? args.maxkbquestions : undefined;
            resourceInputs["maxloginattempts"] = args ? args.maxloginattempts : undefined;
            resourceInputs["maxsamldeflatesize"] = args ? args.maxsamldeflatesize : undefined;
            resourceInputs["persistentloginattempts"] = args ? args.persistentloginattempts : undefined;
            resourceInputs["pwdexpirynotificationdays"] = args ? args.pwdexpirynotificationdays : undefined;
            resourceInputs["samesite"] = args ? args.samesite : undefined;
            resourceInputs["tokenintrospectioninterval"] = args ? args.tokenintrospectioninterval : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Aaaparameter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Aaaparameter resources.
 */
export interface AaaparameterState {
    aaadloglevel?: pulumi.Input<string>;
    aaadnatip?: pulumi.Input<string>;
    aaasessionloglevel?: pulumi.Input<string>;
    apitokencache?: pulumi.Input<string>;
    defaultauthtype?: pulumi.Input<string>;
    defaultcspheader?: pulumi.Input<string>;
    dynaddr?: pulumi.Input<string>;
    enableenhancedauthfeedback?: pulumi.Input<string>;
    enablesessionstickiness?: pulumi.Input<string>;
    enablestaticpagecaching?: pulumi.Input<string>;
    failedlogintimeout?: pulumi.Input<number>;
    ftmode?: pulumi.Input<string>;
    loginencryption?: pulumi.Input<string>;
    maxaaausers?: pulumi.Input<number>;
    maxkbquestions?: pulumi.Input<number>;
    maxloginattempts?: pulumi.Input<number>;
    maxsamldeflatesize?: pulumi.Input<number>;
    persistentloginattempts?: pulumi.Input<string>;
    pwdexpirynotificationdays?: pulumi.Input<number>;
    samesite?: pulumi.Input<string>;
    tokenintrospectioninterval?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Aaaparameter resource.
 */
export interface AaaparameterArgs {
    aaadloglevel?: pulumi.Input<string>;
    aaadnatip?: pulumi.Input<string>;
    aaasessionloglevel?: pulumi.Input<string>;
    apitokencache?: pulumi.Input<string>;
    defaultauthtype?: pulumi.Input<string>;
    defaultcspheader?: pulumi.Input<string>;
    dynaddr?: pulumi.Input<string>;
    enableenhancedauthfeedback?: pulumi.Input<string>;
    enablesessionstickiness?: pulumi.Input<string>;
    enablestaticpagecaching?: pulumi.Input<string>;
    failedlogintimeout?: pulumi.Input<number>;
    ftmode?: pulumi.Input<string>;
    loginencryption?: pulumi.Input<string>;
    maxaaausers?: pulumi.Input<number>;
    maxkbquestions?: pulumi.Input<number>;
    maxloginattempts?: pulumi.Input<number>;
    maxsamldeflatesize?: pulumi.Input<number>;
    persistentloginattempts?: pulumi.Input<string>;
    pwdexpirynotificationdays?: pulumi.Input<number>;
    samesite?: pulumi.Input<string>;
    tokenintrospectioninterval?: pulumi.Input<number>;
}
