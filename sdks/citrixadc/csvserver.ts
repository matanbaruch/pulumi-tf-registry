// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Csvserver extends pulumi.CustomResource {
    /**
     * Get an existing Csvserver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CsvserverState, opts?: pulumi.CustomResourceOptions): Csvserver {
        return new Csvserver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/csvserver:Csvserver';

    /**
     * Returns true if the given object is an instance of Csvserver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Csvserver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Csvserver.__pulumiType;
    }

    public readonly appflowlog!: pulumi.Output<string>;
    public readonly authentication!: pulumi.Output<string>;
    public readonly authenticationhost!: pulumi.Output<string>;
    public readonly authn401!: pulumi.Output<string>;
    public readonly authnprofile!: pulumi.Output<string>;
    public readonly authnvsname!: pulumi.Output<string>;
    public readonly backupip!: pulumi.Output<string>;
    public readonly backupvserver!: pulumi.Output<string>;
    public readonly cacheable!: pulumi.Output<string>;
    public readonly casesensitive!: pulumi.Output<string>;
    public readonly ciphers!: pulumi.Output<string[] | undefined>;
    public readonly ciphersuites!: pulumi.Output<string[] | undefined>;
    public readonly clttimeout!: pulumi.Output<number>;
    public readonly comment!: pulumi.Output<string>;
    public readonly cookiedomain!: pulumi.Output<string>;
    public readonly cookietimeout!: pulumi.Output<number>;
    public readonly dbprofilename!: pulumi.Output<string>;
    public readonly disableprimaryondown!: pulumi.Output<string>;
    public readonly dnsprofilename!: pulumi.Output<string>;
    public readonly dnsrecordtype!: pulumi.Output<string>;
    public readonly domainname!: pulumi.Output<string>;
    public readonly downstateflush!: pulumi.Output<string>;
    public readonly httpprofilename!: pulumi.Output<string>;
    public readonly httpsredirecturl!: pulumi.Output<string>;
    public readonly icmpvsrresponse!: pulumi.Output<string>;
    public readonly insertvserveripport!: pulumi.Output<string>;
    public readonly ipmask!: pulumi.Output<string>;
    public readonly ippattern!: pulumi.Output<string>;
    public readonly ipset!: pulumi.Output<string>;
    public readonly ipv46!: pulumi.Output<string>;
    public readonly l2conn!: pulumi.Output<string>;
    public readonly lbvserverbinding!: pulumi.Output<string | undefined>;
    public readonly listenpolicy!: pulumi.Output<string>;
    public readonly listenpriority!: pulumi.Output<number>;
    public readonly mssqlserverversion!: pulumi.Output<string>;
    public readonly mysqlcharacterset!: pulumi.Output<number>;
    public readonly mysqlprotocolversion!: pulumi.Output<number>;
    public readonly mysqlservercapabilities!: pulumi.Output<number>;
    public readonly mysqlserverversion!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly netprofile!: pulumi.Output<string>;
    public readonly oracleserverversion!: pulumi.Output<string>;
    public readonly persistenceid!: pulumi.Output<number>;
    public readonly persistencetype!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<number>;
    public readonly precedence!: pulumi.Output<string>;
    public readonly push!: pulumi.Output<string>;
    public readonly pushlabel!: pulumi.Output<string>;
    public readonly pushmulticlients!: pulumi.Output<string>;
    public readonly pushvserver!: pulumi.Output<string>;
    public readonly range!: pulumi.Output<number>;
    public readonly redirectfromport!: pulumi.Output<number>;
    public readonly redirectportrewrite!: pulumi.Output<string>;
    public readonly redirecturl!: pulumi.Output<string>;
    public readonly rhistate!: pulumi.Output<string>;
    public readonly rtspnat!: pulumi.Output<string>;
    public readonly servicetype!: pulumi.Output<string>;
    public readonly sitedomainttl!: pulumi.Output<number>;
    public readonly snisslcertkeys!: pulumi.Output<string[] | undefined>;
    public readonly sobackupaction!: pulumi.Output<string>;
    public readonly somethod!: pulumi.Output<string>;
    public readonly sopersistence!: pulumi.Output<string>;
    public readonly sopersistencetimeout!: pulumi.Output<number>;
    public readonly sothreshold!: pulumi.Output<number>;
    public readonly sslcertkey!: pulumi.Output<string | undefined>;
    public readonly sslpolicybindings!: pulumi.Output<outputs.CsvserverSslpolicybinding[] | undefined>;
    public readonly sslprofile!: pulumi.Output<string | undefined>;
    public readonly state!: pulumi.Output<string>;
    public readonly stateupdate!: pulumi.Output<string>;
    public readonly targettype!: pulumi.Output<string>;
    public readonly tcpprofilename!: pulumi.Output<string>;
    public readonly td!: pulumi.Output<number>;
    public readonly ttl!: pulumi.Output<number>;
    public readonly vipheader!: pulumi.Output<string>;

    /**
     * Create a Csvserver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CsvserverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CsvserverArgs | CsvserverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CsvserverState | undefined;
            resourceInputs["appflowlog"] = state ? state.appflowlog : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["authenticationhost"] = state ? state.authenticationhost : undefined;
            resourceInputs["authn401"] = state ? state.authn401 : undefined;
            resourceInputs["authnprofile"] = state ? state.authnprofile : undefined;
            resourceInputs["authnvsname"] = state ? state.authnvsname : undefined;
            resourceInputs["backupip"] = state ? state.backupip : undefined;
            resourceInputs["backupvserver"] = state ? state.backupvserver : undefined;
            resourceInputs["cacheable"] = state ? state.cacheable : undefined;
            resourceInputs["casesensitive"] = state ? state.casesensitive : undefined;
            resourceInputs["ciphers"] = state ? state.ciphers : undefined;
            resourceInputs["ciphersuites"] = state ? state.ciphersuites : undefined;
            resourceInputs["clttimeout"] = state ? state.clttimeout : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cookiedomain"] = state ? state.cookiedomain : undefined;
            resourceInputs["cookietimeout"] = state ? state.cookietimeout : undefined;
            resourceInputs["dbprofilename"] = state ? state.dbprofilename : undefined;
            resourceInputs["disableprimaryondown"] = state ? state.disableprimaryondown : undefined;
            resourceInputs["dnsprofilename"] = state ? state.dnsprofilename : undefined;
            resourceInputs["dnsrecordtype"] = state ? state.dnsrecordtype : undefined;
            resourceInputs["domainname"] = state ? state.domainname : undefined;
            resourceInputs["downstateflush"] = state ? state.downstateflush : undefined;
            resourceInputs["httpprofilename"] = state ? state.httpprofilename : undefined;
            resourceInputs["httpsredirecturl"] = state ? state.httpsredirecturl : undefined;
            resourceInputs["icmpvsrresponse"] = state ? state.icmpvsrresponse : undefined;
            resourceInputs["insertvserveripport"] = state ? state.insertvserveripport : undefined;
            resourceInputs["ipmask"] = state ? state.ipmask : undefined;
            resourceInputs["ippattern"] = state ? state.ippattern : undefined;
            resourceInputs["ipset"] = state ? state.ipset : undefined;
            resourceInputs["ipv46"] = state ? state.ipv46 : undefined;
            resourceInputs["l2conn"] = state ? state.l2conn : undefined;
            resourceInputs["lbvserverbinding"] = state ? state.lbvserverbinding : undefined;
            resourceInputs["listenpolicy"] = state ? state.listenpolicy : undefined;
            resourceInputs["listenpriority"] = state ? state.listenpriority : undefined;
            resourceInputs["mssqlserverversion"] = state ? state.mssqlserverversion : undefined;
            resourceInputs["mysqlcharacterset"] = state ? state.mysqlcharacterset : undefined;
            resourceInputs["mysqlprotocolversion"] = state ? state.mysqlprotocolversion : undefined;
            resourceInputs["mysqlservercapabilities"] = state ? state.mysqlservercapabilities : undefined;
            resourceInputs["mysqlserverversion"] = state ? state.mysqlserverversion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netprofile"] = state ? state.netprofile : undefined;
            resourceInputs["oracleserverversion"] = state ? state.oracleserverversion : undefined;
            resourceInputs["persistenceid"] = state ? state.persistenceid : undefined;
            resourceInputs["persistencetype"] = state ? state.persistencetype : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["precedence"] = state ? state.precedence : undefined;
            resourceInputs["push"] = state ? state.push : undefined;
            resourceInputs["pushlabel"] = state ? state.pushlabel : undefined;
            resourceInputs["pushmulticlients"] = state ? state.pushmulticlients : undefined;
            resourceInputs["pushvserver"] = state ? state.pushvserver : undefined;
            resourceInputs["range"] = state ? state.range : undefined;
            resourceInputs["redirectfromport"] = state ? state.redirectfromport : undefined;
            resourceInputs["redirectportrewrite"] = state ? state.redirectportrewrite : undefined;
            resourceInputs["redirecturl"] = state ? state.redirecturl : undefined;
            resourceInputs["rhistate"] = state ? state.rhistate : undefined;
            resourceInputs["rtspnat"] = state ? state.rtspnat : undefined;
            resourceInputs["servicetype"] = state ? state.servicetype : undefined;
            resourceInputs["sitedomainttl"] = state ? state.sitedomainttl : undefined;
            resourceInputs["snisslcertkeys"] = state ? state.snisslcertkeys : undefined;
            resourceInputs["sobackupaction"] = state ? state.sobackupaction : undefined;
            resourceInputs["somethod"] = state ? state.somethod : undefined;
            resourceInputs["sopersistence"] = state ? state.sopersistence : undefined;
            resourceInputs["sopersistencetimeout"] = state ? state.sopersistencetimeout : undefined;
            resourceInputs["sothreshold"] = state ? state.sothreshold : undefined;
            resourceInputs["sslcertkey"] = state ? state.sslcertkey : undefined;
            resourceInputs["sslpolicybindings"] = state ? state.sslpolicybindings : undefined;
            resourceInputs["sslprofile"] = state ? state.sslprofile : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateupdate"] = state ? state.stateupdate : undefined;
            resourceInputs["targettype"] = state ? state.targettype : undefined;
            resourceInputs["tcpprofilename"] = state ? state.tcpprofilename : undefined;
            resourceInputs["td"] = state ? state.td : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["vipheader"] = state ? state.vipheader : undefined;
        } else {
            const args = argsOrState as CsvserverArgs | undefined;
            resourceInputs["appflowlog"] = args ? args.appflowlog : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["authenticationhost"] = args ? args.authenticationhost : undefined;
            resourceInputs["authn401"] = args ? args.authn401 : undefined;
            resourceInputs["authnprofile"] = args ? args.authnprofile : undefined;
            resourceInputs["authnvsname"] = args ? args.authnvsname : undefined;
            resourceInputs["backupip"] = args ? args.backupip : undefined;
            resourceInputs["backupvserver"] = args ? args.backupvserver : undefined;
            resourceInputs["cacheable"] = args ? args.cacheable : undefined;
            resourceInputs["casesensitive"] = args ? args.casesensitive : undefined;
            resourceInputs["ciphers"] = args ? args.ciphers : undefined;
            resourceInputs["ciphersuites"] = args ? args.ciphersuites : undefined;
            resourceInputs["clttimeout"] = args ? args.clttimeout : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cookiedomain"] = args ? args.cookiedomain : undefined;
            resourceInputs["cookietimeout"] = args ? args.cookietimeout : undefined;
            resourceInputs["dbprofilename"] = args ? args.dbprofilename : undefined;
            resourceInputs["disableprimaryondown"] = args ? args.disableprimaryondown : undefined;
            resourceInputs["dnsprofilename"] = args ? args.dnsprofilename : undefined;
            resourceInputs["dnsrecordtype"] = args ? args.dnsrecordtype : undefined;
            resourceInputs["domainname"] = args ? args.domainname : undefined;
            resourceInputs["downstateflush"] = args ? args.downstateflush : undefined;
            resourceInputs["httpprofilename"] = args ? args.httpprofilename : undefined;
            resourceInputs["httpsredirecturl"] = args ? args.httpsredirecturl : undefined;
            resourceInputs["icmpvsrresponse"] = args ? args.icmpvsrresponse : undefined;
            resourceInputs["insertvserveripport"] = args ? args.insertvserveripport : undefined;
            resourceInputs["ipmask"] = args ? args.ipmask : undefined;
            resourceInputs["ippattern"] = args ? args.ippattern : undefined;
            resourceInputs["ipset"] = args ? args.ipset : undefined;
            resourceInputs["ipv46"] = args ? args.ipv46 : undefined;
            resourceInputs["l2conn"] = args ? args.l2conn : undefined;
            resourceInputs["lbvserverbinding"] = args ? args.lbvserverbinding : undefined;
            resourceInputs["listenpolicy"] = args ? args.listenpolicy : undefined;
            resourceInputs["listenpriority"] = args ? args.listenpriority : undefined;
            resourceInputs["mssqlserverversion"] = args ? args.mssqlserverversion : undefined;
            resourceInputs["mysqlcharacterset"] = args ? args.mysqlcharacterset : undefined;
            resourceInputs["mysqlprotocolversion"] = args ? args.mysqlprotocolversion : undefined;
            resourceInputs["mysqlservercapabilities"] = args ? args.mysqlservercapabilities : undefined;
            resourceInputs["mysqlserverversion"] = args ? args.mysqlserverversion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netprofile"] = args ? args.netprofile : undefined;
            resourceInputs["oracleserverversion"] = args ? args.oracleserverversion : undefined;
            resourceInputs["persistenceid"] = args ? args.persistenceid : undefined;
            resourceInputs["persistencetype"] = args ? args.persistencetype : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["precedence"] = args ? args.precedence : undefined;
            resourceInputs["push"] = args ? args.push : undefined;
            resourceInputs["pushlabel"] = args ? args.pushlabel : undefined;
            resourceInputs["pushmulticlients"] = args ? args.pushmulticlients : undefined;
            resourceInputs["pushvserver"] = args ? args.pushvserver : undefined;
            resourceInputs["range"] = args ? args.range : undefined;
            resourceInputs["redirectfromport"] = args ? args.redirectfromport : undefined;
            resourceInputs["redirectportrewrite"] = args ? args.redirectportrewrite : undefined;
            resourceInputs["redirecturl"] = args ? args.redirecturl : undefined;
            resourceInputs["rhistate"] = args ? args.rhistate : undefined;
            resourceInputs["rtspnat"] = args ? args.rtspnat : undefined;
            resourceInputs["servicetype"] = args ? args.servicetype : undefined;
            resourceInputs["sitedomainttl"] = args ? args.sitedomainttl : undefined;
            resourceInputs["snisslcertkeys"] = args ? args.snisslcertkeys : undefined;
            resourceInputs["sobackupaction"] = args ? args.sobackupaction : undefined;
            resourceInputs["somethod"] = args ? args.somethod : undefined;
            resourceInputs["sopersistence"] = args ? args.sopersistence : undefined;
            resourceInputs["sopersistencetimeout"] = args ? args.sopersistencetimeout : undefined;
            resourceInputs["sothreshold"] = args ? args.sothreshold : undefined;
            resourceInputs["sslcertkey"] = args ? args.sslcertkey : undefined;
            resourceInputs["sslpolicybindings"] = args ? args.sslpolicybindings : undefined;
            resourceInputs["sslprofile"] = args ? args.sslprofile : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["stateupdate"] = args ? args.stateupdate : undefined;
            resourceInputs["targettype"] = args ? args.targettype : undefined;
            resourceInputs["tcpprofilename"] = args ? args.tcpprofilename : undefined;
            resourceInputs["td"] = args ? args.td : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["vipheader"] = args ? args.vipheader : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Csvserver.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Csvserver resources.
 */
export interface CsvserverState {
    appflowlog?: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    authenticationhost?: pulumi.Input<string>;
    authn401?: pulumi.Input<string>;
    authnprofile?: pulumi.Input<string>;
    authnvsname?: pulumi.Input<string>;
    backupip?: pulumi.Input<string>;
    backupvserver?: pulumi.Input<string>;
    cacheable?: pulumi.Input<string>;
    casesensitive?: pulumi.Input<string>;
    ciphers?: pulumi.Input<pulumi.Input<string>[]>;
    ciphersuites?: pulumi.Input<pulumi.Input<string>[]>;
    clttimeout?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    cookiedomain?: pulumi.Input<string>;
    cookietimeout?: pulumi.Input<number>;
    dbprofilename?: pulumi.Input<string>;
    disableprimaryondown?: pulumi.Input<string>;
    dnsprofilename?: pulumi.Input<string>;
    dnsrecordtype?: pulumi.Input<string>;
    domainname?: pulumi.Input<string>;
    downstateflush?: pulumi.Input<string>;
    httpprofilename?: pulumi.Input<string>;
    httpsredirecturl?: pulumi.Input<string>;
    icmpvsrresponse?: pulumi.Input<string>;
    insertvserveripport?: pulumi.Input<string>;
    ipmask?: pulumi.Input<string>;
    ippattern?: pulumi.Input<string>;
    ipset?: pulumi.Input<string>;
    ipv46?: pulumi.Input<string>;
    l2conn?: pulumi.Input<string>;
    lbvserverbinding?: pulumi.Input<string>;
    listenpolicy?: pulumi.Input<string>;
    listenpriority?: pulumi.Input<number>;
    mssqlserverversion?: pulumi.Input<string>;
    mysqlcharacterset?: pulumi.Input<number>;
    mysqlprotocolversion?: pulumi.Input<number>;
    mysqlservercapabilities?: pulumi.Input<number>;
    mysqlserverversion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netprofile?: pulumi.Input<string>;
    oracleserverversion?: pulumi.Input<string>;
    persistenceid?: pulumi.Input<number>;
    persistencetype?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    precedence?: pulumi.Input<string>;
    push?: pulumi.Input<string>;
    pushlabel?: pulumi.Input<string>;
    pushmulticlients?: pulumi.Input<string>;
    pushvserver?: pulumi.Input<string>;
    range?: pulumi.Input<number>;
    redirectfromport?: pulumi.Input<number>;
    redirectportrewrite?: pulumi.Input<string>;
    redirecturl?: pulumi.Input<string>;
    rhistate?: pulumi.Input<string>;
    rtspnat?: pulumi.Input<string>;
    servicetype?: pulumi.Input<string>;
    sitedomainttl?: pulumi.Input<number>;
    snisslcertkeys?: pulumi.Input<pulumi.Input<string>[]>;
    sobackupaction?: pulumi.Input<string>;
    somethod?: pulumi.Input<string>;
    sopersistence?: pulumi.Input<string>;
    sopersistencetimeout?: pulumi.Input<number>;
    sothreshold?: pulumi.Input<number>;
    sslcertkey?: pulumi.Input<string>;
    sslpolicybindings?: pulumi.Input<pulumi.Input<inputs.CsvserverSslpolicybinding>[]>;
    sslprofile?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateupdate?: pulumi.Input<string>;
    targettype?: pulumi.Input<string>;
    tcpprofilename?: pulumi.Input<string>;
    td?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
    vipheader?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Csvserver resource.
 */
export interface CsvserverArgs {
    appflowlog?: pulumi.Input<string>;
    authentication?: pulumi.Input<string>;
    authenticationhost?: pulumi.Input<string>;
    authn401?: pulumi.Input<string>;
    authnprofile?: pulumi.Input<string>;
    authnvsname?: pulumi.Input<string>;
    backupip?: pulumi.Input<string>;
    backupvserver?: pulumi.Input<string>;
    cacheable?: pulumi.Input<string>;
    casesensitive?: pulumi.Input<string>;
    ciphers?: pulumi.Input<pulumi.Input<string>[]>;
    ciphersuites?: pulumi.Input<pulumi.Input<string>[]>;
    clttimeout?: pulumi.Input<number>;
    comment?: pulumi.Input<string>;
    cookiedomain?: pulumi.Input<string>;
    cookietimeout?: pulumi.Input<number>;
    dbprofilename?: pulumi.Input<string>;
    disableprimaryondown?: pulumi.Input<string>;
    dnsprofilename?: pulumi.Input<string>;
    dnsrecordtype?: pulumi.Input<string>;
    domainname?: pulumi.Input<string>;
    downstateflush?: pulumi.Input<string>;
    httpprofilename?: pulumi.Input<string>;
    httpsredirecturl?: pulumi.Input<string>;
    icmpvsrresponse?: pulumi.Input<string>;
    insertvserveripport?: pulumi.Input<string>;
    ipmask?: pulumi.Input<string>;
    ippattern?: pulumi.Input<string>;
    ipset?: pulumi.Input<string>;
    ipv46?: pulumi.Input<string>;
    l2conn?: pulumi.Input<string>;
    lbvserverbinding?: pulumi.Input<string>;
    listenpolicy?: pulumi.Input<string>;
    listenpriority?: pulumi.Input<number>;
    mssqlserverversion?: pulumi.Input<string>;
    mysqlcharacterset?: pulumi.Input<number>;
    mysqlprotocolversion?: pulumi.Input<number>;
    mysqlservercapabilities?: pulumi.Input<number>;
    mysqlserverversion?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netprofile?: pulumi.Input<string>;
    oracleserverversion?: pulumi.Input<string>;
    persistenceid?: pulumi.Input<number>;
    persistencetype?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    precedence?: pulumi.Input<string>;
    push?: pulumi.Input<string>;
    pushlabel?: pulumi.Input<string>;
    pushmulticlients?: pulumi.Input<string>;
    pushvserver?: pulumi.Input<string>;
    range?: pulumi.Input<number>;
    redirectfromport?: pulumi.Input<number>;
    redirectportrewrite?: pulumi.Input<string>;
    redirecturl?: pulumi.Input<string>;
    rhistate?: pulumi.Input<string>;
    rtspnat?: pulumi.Input<string>;
    servicetype?: pulumi.Input<string>;
    sitedomainttl?: pulumi.Input<number>;
    snisslcertkeys?: pulumi.Input<pulumi.Input<string>[]>;
    sobackupaction?: pulumi.Input<string>;
    somethod?: pulumi.Input<string>;
    sopersistence?: pulumi.Input<string>;
    sopersistencetimeout?: pulumi.Input<number>;
    sothreshold?: pulumi.Input<number>;
    sslcertkey?: pulumi.Input<string>;
    sslpolicybindings?: pulumi.Input<pulumi.Input<inputs.CsvserverSslpolicybinding>[]>;
    sslprofile?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    stateupdate?: pulumi.Input<string>;
    targettype?: pulumi.Input<string>;
    tcpprofilename?: pulumi.Input<string>;
    td?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
    vipheader?: pulumi.Input<string>;
}
