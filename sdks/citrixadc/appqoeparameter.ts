// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Appqoeparameter extends pulumi.CustomResource {
    /**
     * Get an existing Appqoeparameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppqoeparameterState, opts?: pulumi.CustomResourceOptions): Appqoeparameter {
        return new Appqoeparameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appqoeparameter:Appqoeparameter';

    /**
     * Returns true if the given object is an instance of Appqoeparameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appqoeparameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appqoeparameter.__pulumiType;
    }

    public readonly avgwaitingclient!: pulumi.Output<number>;
    public readonly dosattackthresh!: pulumi.Output<number>;
    public readonly maxaltrespbandwidth!: pulumi.Output<number>;
    public readonly sessionlife!: pulumi.Output<number>;

    /**
     * Create a Appqoeparameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppqoeparameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppqoeparameterArgs | AppqoeparameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppqoeparameterState | undefined;
            resourceInputs["avgwaitingclient"] = state ? state.avgwaitingclient : undefined;
            resourceInputs["dosattackthresh"] = state ? state.dosattackthresh : undefined;
            resourceInputs["maxaltrespbandwidth"] = state ? state.maxaltrespbandwidth : undefined;
            resourceInputs["sessionlife"] = state ? state.sessionlife : undefined;
        } else {
            const args = argsOrState as AppqoeparameterArgs | undefined;
            resourceInputs["avgwaitingclient"] = args ? args.avgwaitingclient : undefined;
            resourceInputs["dosattackthresh"] = args ? args.dosattackthresh : undefined;
            resourceInputs["maxaltrespbandwidth"] = args ? args.maxaltrespbandwidth : undefined;
            resourceInputs["sessionlife"] = args ? args.sessionlife : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Appqoeparameter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Appqoeparameter resources.
 */
export interface AppqoeparameterState {
    avgwaitingclient?: pulumi.Input<number>;
    dosattackthresh?: pulumi.Input<number>;
    maxaltrespbandwidth?: pulumi.Input<number>;
    sessionlife?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Appqoeparameter resource.
 */
export interface AppqoeparameterArgs {
    avgwaitingclient?: pulumi.Input<number>;
    dosattackthresh?: pulumi.Input<number>;
    maxaltrespbandwidth?: pulumi.Input<number>;
    sessionlife?: pulumi.Input<number>;
}
