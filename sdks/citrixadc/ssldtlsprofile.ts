// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ssldtlsprofile extends pulumi.CustomResource {
    /**
     * Get an existing Ssldtlsprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SsldtlsprofileState, opts?: pulumi.CustomResourceOptions): Ssldtlsprofile {
        return new Ssldtlsprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/ssldtlsprofile:Ssldtlsprofile';

    /**
     * Returns true if the given object is an instance of Ssldtlsprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ssldtlsprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ssldtlsprofile.__pulumiType;
    }

    public readonly helloverifyrequest!: pulumi.Output<string>;
    public readonly maxbadmacignorecount!: pulumi.Output<number>;
    public readonly maxholdqlen!: pulumi.Output<number>;
    public readonly maxpacketsize!: pulumi.Output<number>;
    public readonly maxrecordsize!: pulumi.Output<number>;
    public readonly maxretrytime!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly pmtudiscovery!: pulumi.Output<string>;
    public readonly terminatesession!: pulumi.Output<string>;

    /**
     * Create a Ssldtlsprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SsldtlsprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SsldtlsprofileArgs | SsldtlsprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SsldtlsprofileState | undefined;
            resourceInputs["helloverifyrequest"] = state ? state.helloverifyrequest : undefined;
            resourceInputs["maxbadmacignorecount"] = state ? state.maxbadmacignorecount : undefined;
            resourceInputs["maxholdqlen"] = state ? state.maxholdqlen : undefined;
            resourceInputs["maxpacketsize"] = state ? state.maxpacketsize : undefined;
            resourceInputs["maxrecordsize"] = state ? state.maxrecordsize : undefined;
            resourceInputs["maxretrytime"] = state ? state.maxretrytime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pmtudiscovery"] = state ? state.pmtudiscovery : undefined;
            resourceInputs["terminatesession"] = state ? state.terminatesession : undefined;
        } else {
            const args = argsOrState as SsldtlsprofileArgs | undefined;
            resourceInputs["helloverifyrequest"] = args ? args.helloverifyrequest : undefined;
            resourceInputs["maxbadmacignorecount"] = args ? args.maxbadmacignorecount : undefined;
            resourceInputs["maxholdqlen"] = args ? args.maxholdqlen : undefined;
            resourceInputs["maxpacketsize"] = args ? args.maxpacketsize : undefined;
            resourceInputs["maxrecordsize"] = args ? args.maxrecordsize : undefined;
            resourceInputs["maxretrytime"] = args ? args.maxretrytime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pmtudiscovery"] = args ? args.pmtudiscovery : undefined;
            resourceInputs["terminatesession"] = args ? args.terminatesession : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ssldtlsprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ssldtlsprofile resources.
 */
export interface SsldtlsprofileState {
    helloverifyrequest?: pulumi.Input<string>;
    maxbadmacignorecount?: pulumi.Input<number>;
    maxholdqlen?: pulumi.Input<number>;
    maxpacketsize?: pulumi.Input<number>;
    maxrecordsize?: pulumi.Input<number>;
    maxretrytime?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    pmtudiscovery?: pulumi.Input<string>;
    terminatesession?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ssldtlsprofile resource.
 */
export interface SsldtlsprofileArgs {
    helloverifyrequest?: pulumi.Input<string>;
    maxbadmacignorecount?: pulumi.Input<number>;
    maxholdqlen?: pulumi.Input<number>;
    maxpacketsize?: pulumi.Input<number>;
    maxrecordsize?: pulumi.Input<number>;
    maxretrytime?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    pmtudiscovery?: pulumi.Input<string>;
    terminatesession?: pulumi.Input<string>;
}
