// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Tmsessionaction extends pulumi.CustomResource {
    /**
     * Get an existing Tmsessionaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TmsessionactionState, opts?: pulumi.CustomResourceOptions): Tmsessionaction {
        return new Tmsessionaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/tmsessionaction:Tmsessionaction';

    /**
     * Returns true if the given object is an instance of Tmsessionaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tmsessionaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tmsessionaction.__pulumiType;
    }

    public readonly defaultauthorizationaction!: pulumi.Output<string>;
    public readonly homepage!: pulumi.Output<string>;
    public readonly httponlycookie!: pulumi.Output<string>;
    public readonly kcdaccount!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly persistentcookie!: pulumi.Output<string>;
    public readonly persistentcookievalidity!: pulumi.Output<number>;
    public readonly sesstimeout!: pulumi.Output<number>;
    public readonly sso!: pulumi.Output<string>;
    public readonly ssocredential!: pulumi.Output<string>;
    public readonly ssodomain!: pulumi.Output<string>;

    /**
     * Create a Tmsessionaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TmsessionactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TmsessionactionArgs | TmsessionactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TmsessionactionState | undefined;
            resourceInputs["defaultauthorizationaction"] = state ? state.defaultauthorizationaction : undefined;
            resourceInputs["homepage"] = state ? state.homepage : undefined;
            resourceInputs["httponlycookie"] = state ? state.httponlycookie : undefined;
            resourceInputs["kcdaccount"] = state ? state.kcdaccount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["persistentcookie"] = state ? state.persistentcookie : undefined;
            resourceInputs["persistentcookievalidity"] = state ? state.persistentcookievalidity : undefined;
            resourceInputs["sesstimeout"] = state ? state.sesstimeout : undefined;
            resourceInputs["sso"] = state ? state.sso : undefined;
            resourceInputs["ssocredential"] = state ? state.ssocredential : undefined;
            resourceInputs["ssodomain"] = state ? state.ssodomain : undefined;
        } else {
            const args = argsOrState as TmsessionactionArgs | undefined;
            resourceInputs["defaultauthorizationaction"] = args ? args.defaultauthorizationaction : undefined;
            resourceInputs["homepage"] = args ? args.homepage : undefined;
            resourceInputs["httponlycookie"] = args ? args.httponlycookie : undefined;
            resourceInputs["kcdaccount"] = args ? args.kcdaccount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["persistentcookie"] = args ? args.persistentcookie : undefined;
            resourceInputs["persistentcookievalidity"] = args ? args.persistentcookievalidity : undefined;
            resourceInputs["sesstimeout"] = args ? args.sesstimeout : undefined;
            resourceInputs["sso"] = args ? args.sso : undefined;
            resourceInputs["ssocredential"] = args ? args.ssocredential : undefined;
            resourceInputs["ssodomain"] = args ? args.ssodomain : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tmsessionaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Tmsessionaction resources.
 */
export interface TmsessionactionState {
    defaultauthorizationaction?: pulumi.Input<string>;
    homepage?: pulumi.Input<string>;
    httponlycookie?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistentcookie?: pulumi.Input<string>;
    persistentcookievalidity?: pulumi.Input<number>;
    sesstimeout?: pulumi.Input<number>;
    sso?: pulumi.Input<string>;
    ssocredential?: pulumi.Input<string>;
    ssodomain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Tmsessionaction resource.
 */
export interface TmsessionactionArgs {
    defaultauthorizationaction?: pulumi.Input<string>;
    homepage?: pulumi.Input<string>;
    httponlycookie?: pulumi.Input<string>;
    kcdaccount?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    persistentcookie?: pulumi.Input<string>;
    persistentcookievalidity?: pulumi.Input<number>;
    sesstimeout?: pulumi.Input<number>;
    sso?: pulumi.Input<string>;
    ssocredential?: pulumi.Input<string>;
    ssodomain?: pulumi.Input<string>;
}
