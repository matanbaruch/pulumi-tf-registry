// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Gslbparameter extends pulumi.CustomResource {
    /**
     * Get an existing Gslbparameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbparameterState, opts?: pulumi.CustomResourceOptions): Gslbparameter {
        return new Gslbparameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/gslbparameter:Gslbparameter';

    /**
     * Returns true if the given object is an instance of Gslbparameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gslbparameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gslbparameter.__pulumiType;
    }

    public readonly automaticconfigsync!: pulumi.Output<string>;
    public readonly dropldnsreq!: pulumi.Output<string>;
    public readonly gslbconfigsyncmonitor!: pulumi.Output<string>;
    public readonly gslbsvcstatedelaytime!: pulumi.Output<number>;
    public readonly gslbsyncinterval!: pulumi.Output<number>;
    public readonly gslbsynclocfiles!: pulumi.Output<string>;
    public readonly gslbsyncmode!: pulumi.Output<string>;
    public readonly ldnsentrytimeout!: pulumi.Output<number>;
    public readonly ldnsmask!: pulumi.Output<string>;
    public readonly ldnsprobeorders!: pulumi.Output<string[]>;
    public readonly mepkeepalivetimeout!: pulumi.Output<number>;
    public readonly rtttolerance!: pulumi.Output<number>;
    public readonly svcstatelearningtime!: pulumi.Output<number>;
    public readonly v6ldnsmasklen!: pulumi.Output<number>;

    /**
     * Create a Gslbparameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GslbparameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbparameterArgs | GslbparameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbparameterState | undefined;
            resourceInputs["automaticconfigsync"] = state ? state.automaticconfigsync : undefined;
            resourceInputs["dropldnsreq"] = state ? state.dropldnsreq : undefined;
            resourceInputs["gslbconfigsyncmonitor"] = state ? state.gslbconfigsyncmonitor : undefined;
            resourceInputs["gslbsvcstatedelaytime"] = state ? state.gslbsvcstatedelaytime : undefined;
            resourceInputs["gslbsyncinterval"] = state ? state.gslbsyncinterval : undefined;
            resourceInputs["gslbsynclocfiles"] = state ? state.gslbsynclocfiles : undefined;
            resourceInputs["gslbsyncmode"] = state ? state.gslbsyncmode : undefined;
            resourceInputs["ldnsentrytimeout"] = state ? state.ldnsentrytimeout : undefined;
            resourceInputs["ldnsmask"] = state ? state.ldnsmask : undefined;
            resourceInputs["ldnsprobeorders"] = state ? state.ldnsprobeorders : undefined;
            resourceInputs["mepkeepalivetimeout"] = state ? state.mepkeepalivetimeout : undefined;
            resourceInputs["rtttolerance"] = state ? state.rtttolerance : undefined;
            resourceInputs["svcstatelearningtime"] = state ? state.svcstatelearningtime : undefined;
            resourceInputs["v6ldnsmasklen"] = state ? state.v6ldnsmasklen : undefined;
        } else {
            const args = argsOrState as GslbparameterArgs | undefined;
            resourceInputs["automaticconfigsync"] = args ? args.automaticconfigsync : undefined;
            resourceInputs["dropldnsreq"] = args ? args.dropldnsreq : undefined;
            resourceInputs["gslbconfigsyncmonitor"] = args ? args.gslbconfigsyncmonitor : undefined;
            resourceInputs["gslbsvcstatedelaytime"] = args ? args.gslbsvcstatedelaytime : undefined;
            resourceInputs["gslbsyncinterval"] = args ? args.gslbsyncinterval : undefined;
            resourceInputs["gslbsynclocfiles"] = args ? args.gslbsynclocfiles : undefined;
            resourceInputs["gslbsyncmode"] = args ? args.gslbsyncmode : undefined;
            resourceInputs["ldnsentrytimeout"] = args ? args.ldnsentrytimeout : undefined;
            resourceInputs["ldnsmask"] = args ? args.ldnsmask : undefined;
            resourceInputs["ldnsprobeorders"] = args ? args.ldnsprobeorders : undefined;
            resourceInputs["mepkeepalivetimeout"] = args ? args.mepkeepalivetimeout : undefined;
            resourceInputs["rtttolerance"] = args ? args.rtttolerance : undefined;
            resourceInputs["svcstatelearningtime"] = args ? args.svcstatelearningtime : undefined;
            resourceInputs["v6ldnsmasklen"] = args ? args.v6ldnsmasklen : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gslbparameter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Gslbparameter resources.
 */
export interface GslbparameterState {
    automaticconfigsync?: pulumi.Input<string>;
    dropldnsreq?: pulumi.Input<string>;
    gslbconfigsyncmonitor?: pulumi.Input<string>;
    gslbsvcstatedelaytime?: pulumi.Input<number>;
    gslbsyncinterval?: pulumi.Input<number>;
    gslbsynclocfiles?: pulumi.Input<string>;
    gslbsyncmode?: pulumi.Input<string>;
    ldnsentrytimeout?: pulumi.Input<number>;
    ldnsmask?: pulumi.Input<string>;
    ldnsprobeorders?: pulumi.Input<pulumi.Input<string>[]>;
    mepkeepalivetimeout?: pulumi.Input<number>;
    rtttolerance?: pulumi.Input<number>;
    svcstatelearningtime?: pulumi.Input<number>;
    v6ldnsmasklen?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Gslbparameter resource.
 */
export interface GslbparameterArgs {
    automaticconfigsync?: pulumi.Input<string>;
    dropldnsreq?: pulumi.Input<string>;
    gslbconfigsyncmonitor?: pulumi.Input<string>;
    gslbsvcstatedelaytime?: pulumi.Input<number>;
    gslbsyncinterval?: pulumi.Input<number>;
    gslbsynclocfiles?: pulumi.Input<string>;
    gslbsyncmode?: pulumi.Input<string>;
    ldnsentrytimeout?: pulumi.Input<number>;
    ldnsmask?: pulumi.Input<string>;
    ldnsprobeorders?: pulumi.Input<pulumi.Input<string>[]>;
    mepkeepalivetimeout?: pulumi.Input<number>;
    rtttolerance?: pulumi.Input<number>;
    svcstatelearningtime?: pulumi.Input<number>;
    v6ldnsmasklen?: pulumi.Input<number>;
}
