// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHanode(args: GetHanodeArgs, opts?: pulumi.InvokeOptions): Promise<GetHanodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("citrixadc:index/getHanode:getHanode", {
        "hanodeId": args.hanodeId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHanode.
 */
export interface GetHanodeArgs {
    hanodeId: number;
    id?: string;
}

/**
 * A collection of values returned by getHanode.
 */
export interface GetHanodeResult {
    readonly completedfliptime: number;
    readonly curflips: number;
    readonly deadinterval: number;
    readonly enaifaces: number;
    readonly failsafe: string;
    readonly hanodeId: number;
    readonly haprop: string;
    readonly hastatus: string;
    readonly hasync: string;
    readonly hellointerval: number;
    readonly id: string;
    readonly inc: string;
    readonly ipaddress: string;
    readonly masterstatetime: number;
    readonly maxflips: number;
    readonly maxfliptime: number;
    readonly netmask: string;
    readonly routemonitor: string;
    readonly routemonitorstate: string;
    readonly ssl2: string;
    readonly state: string;
    readonly syncstatusstrictmode: string;
    readonly syncvlan: number;
}
export function getHanodeOutput(args: GetHanodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHanodeResult> {
    return pulumi.output(args).apply((a: any) => getHanode(a, opts))
}

/**
 * A collection of arguments for invoking getHanode.
 */
export interface GetHanodeOutputArgs {
    hanodeId: pulumi.Input<number>;
    id?: pulumi.Input<string>;
}
