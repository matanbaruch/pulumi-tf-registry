// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Systemfile extends pulumi.CustomResource {
    /**
     * Get an existing Systemfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemfileState, opts?: pulumi.CustomResourceOptions): Systemfile {
        return new Systemfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/systemfile:Systemfile';

    /**
     * Returns true if the given object is an instance of Systemfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Systemfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Systemfile.__pulumiType;
    }

    public readonly filecontent!: pulumi.Output<string>;
    public readonly fileencoding!: pulumi.Output<string | undefined>;
    public readonly filelocation!: pulumi.Output<string>;
    public readonly filename!: pulumi.Output<string>;

    /**
     * Create a Systemfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemfileArgs | SystemfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemfileState | undefined;
            resourceInputs["filecontent"] = state ? state.filecontent : undefined;
            resourceInputs["fileencoding"] = state ? state.fileencoding : undefined;
            resourceInputs["filelocation"] = state ? state.filelocation : undefined;
            resourceInputs["filename"] = state ? state.filename : undefined;
        } else {
            const args = argsOrState as SystemfileArgs | undefined;
            if ((!args || args.filecontent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filecontent'");
            }
            if ((!args || args.filelocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filelocation'");
            }
            if ((!args || args.filename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filename'");
            }
            resourceInputs["filecontent"] = args ? args.filecontent : undefined;
            resourceInputs["fileencoding"] = args ? args.fileencoding : undefined;
            resourceInputs["filelocation"] = args ? args.filelocation : undefined;
            resourceInputs["filename"] = args ? args.filename : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Systemfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Systemfile resources.
 */
export interface SystemfileState {
    filecontent?: pulumi.Input<string>;
    fileencoding?: pulumi.Input<string>;
    filelocation?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Systemfile resource.
 */
export interface SystemfileArgs {
    filecontent: pulumi.Input<string>;
    fileencoding?: pulumi.Input<string>;
    filelocation: pulumi.Input<string>;
    filename: pulumi.Input<string>;
}
