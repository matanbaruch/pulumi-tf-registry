// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Appfwsettings extends pulumi.CustomResource {
    /**
     * Get an existing Appfwsettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppfwsettingsState, opts?: pulumi.CustomResourceOptions): Appfwsettings {
        return new Appfwsettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appfwsettings:Appfwsettings';

    /**
     * Returns true if the given object is an instance of Appfwsettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appfwsettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appfwsettings.__pulumiType;
    }

    public readonly ceflogging!: pulumi.Output<string>;
    public readonly centralizedlearning!: pulumi.Output<string>;
    public readonly clientiploggingheader!: pulumi.Output<string>;
    public readonly cookiepostencryptprefix!: pulumi.Output<string>;
    public readonly defaultprofile!: pulumi.Output<string>;
    public readonly entitydecoding!: pulumi.Output<string>;
    public readonly geolocationlogging!: pulumi.Output<string>;
    public readonly importsizelimit!: pulumi.Output<number>;
    public readonly learnratelimit!: pulumi.Output<number>;
    public readonly logmalformedreq!: pulumi.Output<string>;
    public readonly malformedreqactions!: pulumi.Output<string[]>;
    public readonly proxyport!: pulumi.Output<number>;
    public readonly proxyserver!: pulumi.Output<string>;
    public readonly sessioncookiename!: pulumi.Output<string>;
    public readonly sessionlifetime!: pulumi.Output<number>;
    public readonly sessionlimit!: pulumi.Output<number>;
    public readonly sessiontimeout!: pulumi.Output<number>;
    public readonly signatureautoupdate!: pulumi.Output<string>;
    public readonly signatureurl!: pulumi.Output<string>;
    public readonly undefaction!: pulumi.Output<string>;
    public readonly useconfigurablesecretkey!: pulumi.Output<string>;

    /**
     * Create a Appfwsettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppfwsettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppfwsettingsArgs | AppfwsettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppfwsettingsState | undefined;
            resourceInputs["ceflogging"] = state ? state.ceflogging : undefined;
            resourceInputs["centralizedlearning"] = state ? state.centralizedlearning : undefined;
            resourceInputs["clientiploggingheader"] = state ? state.clientiploggingheader : undefined;
            resourceInputs["cookiepostencryptprefix"] = state ? state.cookiepostencryptprefix : undefined;
            resourceInputs["defaultprofile"] = state ? state.defaultprofile : undefined;
            resourceInputs["entitydecoding"] = state ? state.entitydecoding : undefined;
            resourceInputs["geolocationlogging"] = state ? state.geolocationlogging : undefined;
            resourceInputs["importsizelimit"] = state ? state.importsizelimit : undefined;
            resourceInputs["learnratelimit"] = state ? state.learnratelimit : undefined;
            resourceInputs["logmalformedreq"] = state ? state.logmalformedreq : undefined;
            resourceInputs["malformedreqactions"] = state ? state.malformedreqactions : undefined;
            resourceInputs["proxyport"] = state ? state.proxyport : undefined;
            resourceInputs["proxyserver"] = state ? state.proxyserver : undefined;
            resourceInputs["sessioncookiename"] = state ? state.sessioncookiename : undefined;
            resourceInputs["sessionlifetime"] = state ? state.sessionlifetime : undefined;
            resourceInputs["sessionlimit"] = state ? state.sessionlimit : undefined;
            resourceInputs["sessiontimeout"] = state ? state.sessiontimeout : undefined;
            resourceInputs["signatureautoupdate"] = state ? state.signatureautoupdate : undefined;
            resourceInputs["signatureurl"] = state ? state.signatureurl : undefined;
            resourceInputs["undefaction"] = state ? state.undefaction : undefined;
            resourceInputs["useconfigurablesecretkey"] = state ? state.useconfigurablesecretkey : undefined;
        } else {
            const args = argsOrState as AppfwsettingsArgs | undefined;
            resourceInputs["ceflogging"] = args ? args.ceflogging : undefined;
            resourceInputs["centralizedlearning"] = args ? args.centralizedlearning : undefined;
            resourceInputs["clientiploggingheader"] = args ? args.clientiploggingheader : undefined;
            resourceInputs["cookiepostencryptprefix"] = args ? args.cookiepostencryptprefix : undefined;
            resourceInputs["defaultprofile"] = args ? args.defaultprofile : undefined;
            resourceInputs["entitydecoding"] = args ? args.entitydecoding : undefined;
            resourceInputs["geolocationlogging"] = args ? args.geolocationlogging : undefined;
            resourceInputs["importsizelimit"] = args ? args.importsizelimit : undefined;
            resourceInputs["learnratelimit"] = args ? args.learnratelimit : undefined;
            resourceInputs["logmalformedreq"] = args ? args.logmalformedreq : undefined;
            resourceInputs["malformedreqactions"] = args ? args.malformedreqactions : undefined;
            resourceInputs["proxyport"] = args ? args.proxyport : undefined;
            resourceInputs["proxyserver"] = args ? args.proxyserver : undefined;
            resourceInputs["sessioncookiename"] = args ? args.sessioncookiename : undefined;
            resourceInputs["sessionlifetime"] = args ? args.sessionlifetime : undefined;
            resourceInputs["sessionlimit"] = args ? args.sessionlimit : undefined;
            resourceInputs["sessiontimeout"] = args ? args.sessiontimeout : undefined;
            resourceInputs["signatureautoupdate"] = args ? args.signatureautoupdate : undefined;
            resourceInputs["signatureurl"] = args ? args.signatureurl : undefined;
            resourceInputs["undefaction"] = args ? args.undefaction : undefined;
            resourceInputs["useconfigurablesecretkey"] = args ? args.useconfigurablesecretkey : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Appfwsettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Appfwsettings resources.
 */
export interface AppfwsettingsState {
    ceflogging?: pulumi.Input<string>;
    centralizedlearning?: pulumi.Input<string>;
    clientiploggingheader?: pulumi.Input<string>;
    cookiepostencryptprefix?: pulumi.Input<string>;
    defaultprofile?: pulumi.Input<string>;
    entitydecoding?: pulumi.Input<string>;
    geolocationlogging?: pulumi.Input<string>;
    importsizelimit?: pulumi.Input<number>;
    learnratelimit?: pulumi.Input<number>;
    logmalformedreq?: pulumi.Input<string>;
    malformedreqactions?: pulumi.Input<pulumi.Input<string>[]>;
    proxyport?: pulumi.Input<number>;
    proxyserver?: pulumi.Input<string>;
    sessioncookiename?: pulumi.Input<string>;
    sessionlifetime?: pulumi.Input<number>;
    sessionlimit?: pulumi.Input<number>;
    sessiontimeout?: pulumi.Input<number>;
    signatureautoupdate?: pulumi.Input<string>;
    signatureurl?: pulumi.Input<string>;
    undefaction?: pulumi.Input<string>;
    useconfigurablesecretkey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Appfwsettings resource.
 */
export interface AppfwsettingsArgs {
    ceflogging?: pulumi.Input<string>;
    centralizedlearning?: pulumi.Input<string>;
    clientiploggingheader?: pulumi.Input<string>;
    cookiepostencryptprefix?: pulumi.Input<string>;
    defaultprofile?: pulumi.Input<string>;
    entitydecoding?: pulumi.Input<string>;
    geolocationlogging?: pulumi.Input<string>;
    importsizelimit?: pulumi.Input<number>;
    learnratelimit?: pulumi.Input<number>;
    logmalformedreq?: pulumi.Input<string>;
    malformedreqactions?: pulumi.Input<pulumi.Input<string>[]>;
    proxyport?: pulumi.Input<number>;
    proxyserver?: pulumi.Input<string>;
    sessioncookiename?: pulumi.Input<string>;
    sessionlifetime?: pulumi.Input<number>;
    sessionlimit?: pulumi.Input<number>;
    sessiontimeout?: pulumi.Input<number>;
    signatureautoupdate?: pulumi.Input<string>;
    signatureurl?: pulumi.Input<string>;
    undefaction?: pulumi.Input<string>;
    useconfigurablesecretkey?: pulumi.Input<string>;
}
