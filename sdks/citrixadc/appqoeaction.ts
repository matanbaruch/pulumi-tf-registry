// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Appqoeaction extends pulumi.CustomResource {
    /**
     * Get an existing Appqoeaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppqoeactionState, opts?: pulumi.CustomResourceOptions): Appqoeaction {
        return new Appqoeaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appqoeaction:Appqoeaction';

    /**
     * Returns true if the given object is an instance of Appqoeaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appqoeaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appqoeaction.__pulumiType;
    }

    public readonly altcontentpath!: pulumi.Output<string>;
    public readonly altcontentsvcname!: pulumi.Output<string>;
    public readonly customfile!: pulumi.Output<string>;
    public readonly delay!: pulumi.Output<number>;
    public readonly dosaction!: pulumi.Output<string>;
    public readonly dostrigexpression!: pulumi.Output<string>;
    public readonly maxconn!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;
    public readonly numretries!: pulumi.Output<string>;
    public readonly polqdepth!: pulumi.Output<number>;
    public readonly priority!: pulumi.Output<string>;
    public readonly priqdepth!: pulumi.Output<number>;
    public readonly respondwith!: pulumi.Output<string>;
    public readonly retryonreset!: pulumi.Output<string>;
    public readonly retryontimeout!: pulumi.Output<number>;
    public readonly tcpprofile!: pulumi.Output<string>;

    /**
     * Create a Appqoeaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppqoeactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppqoeactionArgs | AppqoeactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppqoeactionState | undefined;
            resourceInputs["altcontentpath"] = state ? state.altcontentpath : undefined;
            resourceInputs["altcontentsvcname"] = state ? state.altcontentsvcname : undefined;
            resourceInputs["customfile"] = state ? state.customfile : undefined;
            resourceInputs["delay"] = state ? state.delay : undefined;
            resourceInputs["dosaction"] = state ? state.dosaction : undefined;
            resourceInputs["dostrigexpression"] = state ? state.dostrigexpression : undefined;
            resourceInputs["maxconn"] = state ? state.maxconn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numretries"] = state ? state.numretries : undefined;
            resourceInputs["polqdepth"] = state ? state.polqdepth : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["priqdepth"] = state ? state.priqdepth : undefined;
            resourceInputs["respondwith"] = state ? state.respondwith : undefined;
            resourceInputs["retryonreset"] = state ? state.retryonreset : undefined;
            resourceInputs["retryontimeout"] = state ? state.retryontimeout : undefined;
            resourceInputs["tcpprofile"] = state ? state.tcpprofile : undefined;
        } else {
            const args = argsOrState as AppqoeactionArgs | undefined;
            resourceInputs["altcontentpath"] = args ? args.altcontentpath : undefined;
            resourceInputs["altcontentsvcname"] = args ? args.altcontentsvcname : undefined;
            resourceInputs["customfile"] = args ? args.customfile : undefined;
            resourceInputs["delay"] = args ? args.delay : undefined;
            resourceInputs["dosaction"] = args ? args.dosaction : undefined;
            resourceInputs["dostrigexpression"] = args ? args.dostrigexpression : undefined;
            resourceInputs["maxconn"] = args ? args.maxconn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numretries"] = args ? args.numretries : undefined;
            resourceInputs["polqdepth"] = args ? args.polqdepth : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["priqdepth"] = args ? args.priqdepth : undefined;
            resourceInputs["respondwith"] = args ? args.respondwith : undefined;
            resourceInputs["retryonreset"] = args ? args.retryonreset : undefined;
            resourceInputs["retryontimeout"] = args ? args.retryontimeout : undefined;
            resourceInputs["tcpprofile"] = args ? args.tcpprofile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Appqoeaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Appqoeaction resources.
 */
export interface AppqoeactionState {
    altcontentpath?: pulumi.Input<string>;
    altcontentsvcname?: pulumi.Input<string>;
    customfile?: pulumi.Input<string>;
    delay?: pulumi.Input<number>;
    dosaction?: pulumi.Input<string>;
    dostrigexpression?: pulumi.Input<string>;
    maxconn?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    numretries?: pulumi.Input<string>;
    polqdepth?: pulumi.Input<number>;
    priority?: pulumi.Input<string>;
    priqdepth?: pulumi.Input<number>;
    respondwith?: pulumi.Input<string>;
    retryonreset?: pulumi.Input<string>;
    retryontimeout?: pulumi.Input<number>;
    tcpprofile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Appqoeaction resource.
 */
export interface AppqoeactionArgs {
    altcontentpath?: pulumi.Input<string>;
    altcontentsvcname?: pulumi.Input<string>;
    customfile?: pulumi.Input<string>;
    delay?: pulumi.Input<number>;
    dosaction?: pulumi.Input<string>;
    dostrigexpression?: pulumi.Input<string>;
    maxconn?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    numretries?: pulumi.Input<string>;
    polqdepth?: pulumi.Input<number>;
    priority?: pulumi.Input<string>;
    priqdepth?: pulumi.Input<number>;
    respondwith?: pulumi.Input<string>;
    retryonreset?: pulumi.Input<string>;
    retryontimeout?: pulumi.Input<number>;
    tcpprofile?: pulumi.Input<string>;
}
