// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Vpnformssoaction extends pulumi.CustomResource {
    /**
     * Get an existing Vpnformssoaction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnformssoactionState, opts?: pulumi.CustomResourceOptions): Vpnformssoaction {
        return new Vpnformssoaction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/vpnformssoaction:Vpnformssoaction';

    /**
     * Returns true if the given object is an instance of Vpnformssoaction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpnformssoaction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpnformssoaction.__pulumiType;
    }

    public readonly actionurl!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly namevaluepair!: pulumi.Output<string>;
    public readonly nvtype!: pulumi.Output<string>;
    public readonly passwdfield!: pulumi.Output<string>;
    public readonly responsesize!: pulumi.Output<number>;
    public readonly ssosuccessrule!: pulumi.Output<string>;
    public readonly submitmethod!: pulumi.Output<string>;
    public readonly userfield!: pulumi.Output<string>;

    /**
     * Create a Vpnformssoaction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnformssoactionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnformssoactionArgs | VpnformssoactionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnformssoactionState | undefined;
            resourceInputs["actionurl"] = state ? state.actionurl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namevaluepair"] = state ? state.namevaluepair : undefined;
            resourceInputs["nvtype"] = state ? state.nvtype : undefined;
            resourceInputs["passwdfield"] = state ? state.passwdfield : undefined;
            resourceInputs["responsesize"] = state ? state.responsesize : undefined;
            resourceInputs["ssosuccessrule"] = state ? state.ssosuccessrule : undefined;
            resourceInputs["submitmethod"] = state ? state.submitmethod : undefined;
            resourceInputs["userfield"] = state ? state.userfield : undefined;
        } else {
            const args = argsOrState as VpnformssoactionArgs | undefined;
            if ((!args || args.actionurl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actionurl'");
            }
            if ((!args || args.passwdfield === undefined) && !opts.urn) {
                throw new Error("Missing required property 'passwdfield'");
            }
            if ((!args || args.ssosuccessrule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ssosuccessrule'");
            }
            if ((!args || args.userfield === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userfield'");
            }
            resourceInputs["actionurl"] = args ? args.actionurl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namevaluepair"] = args ? args.namevaluepair : undefined;
            resourceInputs["nvtype"] = args ? args.nvtype : undefined;
            resourceInputs["passwdfield"] = args ? args.passwdfield : undefined;
            resourceInputs["responsesize"] = args ? args.responsesize : undefined;
            resourceInputs["ssosuccessrule"] = args ? args.ssosuccessrule : undefined;
            resourceInputs["submitmethod"] = args ? args.submitmethod : undefined;
            resourceInputs["userfield"] = args ? args.userfield : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpnformssoaction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vpnformssoaction resources.
 */
export interface VpnformssoactionState {
    actionurl?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namevaluepair?: pulumi.Input<string>;
    nvtype?: pulumi.Input<string>;
    passwdfield?: pulumi.Input<string>;
    responsesize?: pulumi.Input<number>;
    ssosuccessrule?: pulumi.Input<string>;
    submitmethod?: pulumi.Input<string>;
    userfield?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpnformssoaction resource.
 */
export interface VpnformssoactionArgs {
    actionurl: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namevaluepair?: pulumi.Input<string>;
    nvtype?: pulumi.Input<string>;
    passwdfield: pulumi.Input<string>;
    responsesize?: pulumi.Input<number>;
    ssosuccessrule: pulumi.Input<string>;
    submitmethod?: pulumi.Input<string>;
    userfield: pulumi.Input<string>;
}
