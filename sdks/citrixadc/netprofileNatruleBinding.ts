// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class NetprofileNatruleBinding extends pulumi.CustomResource {
    /**
     * Get an existing NetprofileNatruleBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetprofileNatruleBindingState, opts?: pulumi.CustomResourceOptions): NetprofileNatruleBinding {
        return new NetprofileNatruleBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/netprofileNatruleBinding:NetprofileNatruleBinding';

    /**
     * Returns true if the given object is an instance of NetprofileNatruleBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetprofileNatruleBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetprofileNatruleBinding.__pulumiType;
    }

    public readonly name!: pulumi.Output<string>;
    public readonly natrule!: pulumi.Output<string>;
    public readonly netmask!: pulumi.Output<string>;
    public readonly rewriteip!: pulumi.Output<string>;

    /**
     * Create a NetprofileNatruleBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetprofileNatruleBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetprofileNatruleBindingArgs | NetprofileNatruleBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetprofileNatruleBindingState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["natrule"] = state ? state.natrule : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["rewriteip"] = state ? state.rewriteip : undefined;
        } else {
            const args = argsOrState as NetprofileNatruleBindingArgs | undefined;
            if ((!args || args.natrule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'natrule'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["natrule"] = args ? args.natrule : undefined;
            resourceInputs["netmask"] = args ? args.netmask : undefined;
            resourceInputs["rewriteip"] = args ? args.rewriteip : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetprofileNatruleBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetprofileNatruleBinding resources.
 */
export interface NetprofileNatruleBindingState {
    name?: pulumi.Input<string>;
    natrule?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    rewriteip?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetprofileNatruleBinding resource.
 */
export interface NetprofileNatruleBindingArgs {
    name?: pulumi.Input<string>;
    natrule: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    rewriteip?: pulumi.Input<string>;
}
