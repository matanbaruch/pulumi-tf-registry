// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Nsfeature extends pulumi.CustomResource {
    /**
     * Get an existing Nsfeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NsfeatureState, opts?: pulumi.CustomResourceOptions): Nsfeature {
        return new Nsfeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/nsfeature:Nsfeature';

    /**
     * Returns true if the given object is an instance of Nsfeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Nsfeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Nsfeature.__pulumiType;
    }

    public readonly aaa!: pulumi.Output<boolean>;
    public readonly adaptivetcp!: pulumi.Output<boolean>;
    public readonly apigateway!: pulumi.Output<boolean>;
    public readonly appflow!: pulumi.Output<boolean>;
    public readonly appfw!: pulumi.Output<boolean>;
    public readonly appqoe!: pulumi.Output<boolean>;
    public readonly bgp!: pulumi.Output<boolean>;
    public readonly bot!: pulumi.Output<boolean>;
    public readonly cf!: pulumi.Output<boolean>;
    public readonly ch!: pulumi.Output<boolean>;
    public readonly ci!: pulumi.Output<boolean>;
    public readonly cloudbridge!: pulumi.Output<boolean>;
    public readonly cmp!: pulumi.Output<boolean>;
    public readonly contentaccelerator!: pulumi.Output<boolean>;
    public readonly cqa!: pulumi.Output<boolean>;
    public readonly cr!: pulumi.Output<boolean>;
    public readonly cs!: pulumi.Output<boolean>;
    public readonly feo!: pulumi.Output<boolean>;
    public readonly forwardproxy!: pulumi.Output<boolean>;
    public readonly gslb!: pulumi.Output<boolean>;
    public readonly hdosp!: pulumi.Output<boolean>;
    public readonly htmlinjection!: pulumi.Output<boolean>;
    public readonly ic!: pulumi.Output<boolean>;
    public readonly ipv6pt!: pulumi.Output<boolean>;
    public readonly isis!: pulumi.Output<boolean>;
    public readonly lb!: pulumi.Output<boolean>;
    public readonly lsn!: pulumi.Output<boolean>;
    public readonly ospf!: pulumi.Output<boolean>;
    public readonly pq!: pulumi.Output<boolean>;
    public readonly push!: pulumi.Output<boolean>;
    public readonly rdpproxy!: pulumi.Output<boolean>;
    public readonly rep!: pulumi.Output<boolean>;
    public readonly responder!: pulumi.Output<boolean>;
    public readonly rewrite!: pulumi.Output<boolean>;
    public readonly rip!: pulumi.Output<boolean>;
    public readonly rise!: pulumi.Output<boolean>;
    public readonly sp!: pulumi.Output<boolean>;
    public readonly ssl!: pulumi.Output<boolean>;
    public readonly sslinterception!: pulumi.Output<boolean>;
    public readonly sslvpn!: pulumi.Output<boolean>;
    public readonly urlfiltering!: pulumi.Output<boolean>;
    public readonly videooptimization!: pulumi.Output<boolean>;
    public readonly wl!: pulumi.Output<boolean>;

    /**
     * Create a Nsfeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NsfeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NsfeatureArgs | NsfeatureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NsfeatureState | undefined;
            resourceInputs["aaa"] = state ? state.aaa : undefined;
            resourceInputs["adaptivetcp"] = state ? state.adaptivetcp : undefined;
            resourceInputs["apigateway"] = state ? state.apigateway : undefined;
            resourceInputs["appflow"] = state ? state.appflow : undefined;
            resourceInputs["appfw"] = state ? state.appfw : undefined;
            resourceInputs["appqoe"] = state ? state.appqoe : undefined;
            resourceInputs["bgp"] = state ? state.bgp : undefined;
            resourceInputs["bot"] = state ? state.bot : undefined;
            resourceInputs["cf"] = state ? state.cf : undefined;
            resourceInputs["ch"] = state ? state.ch : undefined;
            resourceInputs["ci"] = state ? state.ci : undefined;
            resourceInputs["cloudbridge"] = state ? state.cloudbridge : undefined;
            resourceInputs["cmp"] = state ? state.cmp : undefined;
            resourceInputs["contentaccelerator"] = state ? state.contentaccelerator : undefined;
            resourceInputs["cqa"] = state ? state.cqa : undefined;
            resourceInputs["cr"] = state ? state.cr : undefined;
            resourceInputs["cs"] = state ? state.cs : undefined;
            resourceInputs["feo"] = state ? state.feo : undefined;
            resourceInputs["forwardproxy"] = state ? state.forwardproxy : undefined;
            resourceInputs["gslb"] = state ? state.gslb : undefined;
            resourceInputs["hdosp"] = state ? state.hdosp : undefined;
            resourceInputs["htmlinjection"] = state ? state.htmlinjection : undefined;
            resourceInputs["ic"] = state ? state.ic : undefined;
            resourceInputs["ipv6pt"] = state ? state.ipv6pt : undefined;
            resourceInputs["isis"] = state ? state.isis : undefined;
            resourceInputs["lb"] = state ? state.lb : undefined;
            resourceInputs["lsn"] = state ? state.lsn : undefined;
            resourceInputs["ospf"] = state ? state.ospf : undefined;
            resourceInputs["pq"] = state ? state.pq : undefined;
            resourceInputs["push"] = state ? state.push : undefined;
            resourceInputs["rdpproxy"] = state ? state.rdpproxy : undefined;
            resourceInputs["rep"] = state ? state.rep : undefined;
            resourceInputs["responder"] = state ? state.responder : undefined;
            resourceInputs["rewrite"] = state ? state.rewrite : undefined;
            resourceInputs["rip"] = state ? state.rip : undefined;
            resourceInputs["rise"] = state ? state.rise : undefined;
            resourceInputs["sp"] = state ? state.sp : undefined;
            resourceInputs["ssl"] = state ? state.ssl : undefined;
            resourceInputs["sslinterception"] = state ? state.sslinterception : undefined;
            resourceInputs["sslvpn"] = state ? state.sslvpn : undefined;
            resourceInputs["urlfiltering"] = state ? state.urlfiltering : undefined;
            resourceInputs["videooptimization"] = state ? state.videooptimization : undefined;
            resourceInputs["wl"] = state ? state.wl : undefined;
        } else {
            const args = argsOrState as NsfeatureArgs | undefined;
            resourceInputs["aaa"] = args ? args.aaa : undefined;
            resourceInputs["adaptivetcp"] = args ? args.adaptivetcp : undefined;
            resourceInputs["apigateway"] = args ? args.apigateway : undefined;
            resourceInputs["appflow"] = args ? args.appflow : undefined;
            resourceInputs["appfw"] = args ? args.appfw : undefined;
            resourceInputs["appqoe"] = args ? args.appqoe : undefined;
            resourceInputs["bgp"] = args ? args.bgp : undefined;
            resourceInputs["bot"] = args ? args.bot : undefined;
            resourceInputs["cf"] = args ? args.cf : undefined;
            resourceInputs["ch"] = args ? args.ch : undefined;
            resourceInputs["ci"] = args ? args.ci : undefined;
            resourceInputs["cloudbridge"] = args ? args.cloudbridge : undefined;
            resourceInputs["cmp"] = args ? args.cmp : undefined;
            resourceInputs["contentaccelerator"] = args ? args.contentaccelerator : undefined;
            resourceInputs["cqa"] = args ? args.cqa : undefined;
            resourceInputs["cr"] = args ? args.cr : undefined;
            resourceInputs["cs"] = args ? args.cs : undefined;
            resourceInputs["feo"] = args ? args.feo : undefined;
            resourceInputs["forwardproxy"] = args ? args.forwardproxy : undefined;
            resourceInputs["gslb"] = args ? args.gslb : undefined;
            resourceInputs["hdosp"] = args ? args.hdosp : undefined;
            resourceInputs["htmlinjection"] = args ? args.htmlinjection : undefined;
            resourceInputs["ic"] = args ? args.ic : undefined;
            resourceInputs["ipv6pt"] = args ? args.ipv6pt : undefined;
            resourceInputs["isis"] = args ? args.isis : undefined;
            resourceInputs["lb"] = args ? args.lb : undefined;
            resourceInputs["lsn"] = args ? args.lsn : undefined;
            resourceInputs["ospf"] = args ? args.ospf : undefined;
            resourceInputs["pq"] = args ? args.pq : undefined;
            resourceInputs["push"] = args ? args.push : undefined;
            resourceInputs["rdpproxy"] = args ? args.rdpproxy : undefined;
            resourceInputs["rep"] = args ? args.rep : undefined;
            resourceInputs["responder"] = args ? args.responder : undefined;
            resourceInputs["rewrite"] = args ? args.rewrite : undefined;
            resourceInputs["rip"] = args ? args.rip : undefined;
            resourceInputs["rise"] = args ? args.rise : undefined;
            resourceInputs["sp"] = args ? args.sp : undefined;
            resourceInputs["ssl"] = args ? args.ssl : undefined;
            resourceInputs["sslinterception"] = args ? args.sslinterception : undefined;
            resourceInputs["sslvpn"] = args ? args.sslvpn : undefined;
            resourceInputs["urlfiltering"] = args ? args.urlfiltering : undefined;
            resourceInputs["videooptimization"] = args ? args.videooptimization : undefined;
            resourceInputs["wl"] = args ? args.wl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Nsfeature.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Nsfeature resources.
 */
export interface NsfeatureState {
    aaa?: pulumi.Input<boolean>;
    adaptivetcp?: pulumi.Input<boolean>;
    apigateway?: pulumi.Input<boolean>;
    appflow?: pulumi.Input<boolean>;
    appfw?: pulumi.Input<boolean>;
    appqoe?: pulumi.Input<boolean>;
    bgp?: pulumi.Input<boolean>;
    bot?: pulumi.Input<boolean>;
    cf?: pulumi.Input<boolean>;
    ch?: pulumi.Input<boolean>;
    ci?: pulumi.Input<boolean>;
    cloudbridge?: pulumi.Input<boolean>;
    cmp?: pulumi.Input<boolean>;
    contentaccelerator?: pulumi.Input<boolean>;
    cqa?: pulumi.Input<boolean>;
    cr?: pulumi.Input<boolean>;
    cs?: pulumi.Input<boolean>;
    feo?: pulumi.Input<boolean>;
    forwardproxy?: pulumi.Input<boolean>;
    gslb?: pulumi.Input<boolean>;
    hdosp?: pulumi.Input<boolean>;
    htmlinjection?: pulumi.Input<boolean>;
    ic?: pulumi.Input<boolean>;
    ipv6pt?: pulumi.Input<boolean>;
    isis?: pulumi.Input<boolean>;
    lb?: pulumi.Input<boolean>;
    lsn?: pulumi.Input<boolean>;
    ospf?: pulumi.Input<boolean>;
    pq?: pulumi.Input<boolean>;
    push?: pulumi.Input<boolean>;
    rdpproxy?: pulumi.Input<boolean>;
    rep?: pulumi.Input<boolean>;
    responder?: pulumi.Input<boolean>;
    rewrite?: pulumi.Input<boolean>;
    rip?: pulumi.Input<boolean>;
    rise?: pulumi.Input<boolean>;
    sp?: pulumi.Input<boolean>;
    ssl?: pulumi.Input<boolean>;
    sslinterception?: pulumi.Input<boolean>;
    sslvpn?: pulumi.Input<boolean>;
    urlfiltering?: pulumi.Input<boolean>;
    videooptimization?: pulumi.Input<boolean>;
    wl?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Nsfeature resource.
 */
export interface NsfeatureArgs {
    aaa?: pulumi.Input<boolean>;
    adaptivetcp?: pulumi.Input<boolean>;
    apigateway?: pulumi.Input<boolean>;
    appflow?: pulumi.Input<boolean>;
    appfw?: pulumi.Input<boolean>;
    appqoe?: pulumi.Input<boolean>;
    bgp?: pulumi.Input<boolean>;
    bot?: pulumi.Input<boolean>;
    cf?: pulumi.Input<boolean>;
    ch?: pulumi.Input<boolean>;
    ci?: pulumi.Input<boolean>;
    cloudbridge?: pulumi.Input<boolean>;
    cmp?: pulumi.Input<boolean>;
    contentaccelerator?: pulumi.Input<boolean>;
    cqa?: pulumi.Input<boolean>;
    cr?: pulumi.Input<boolean>;
    cs?: pulumi.Input<boolean>;
    feo?: pulumi.Input<boolean>;
    forwardproxy?: pulumi.Input<boolean>;
    gslb?: pulumi.Input<boolean>;
    hdosp?: pulumi.Input<boolean>;
    htmlinjection?: pulumi.Input<boolean>;
    ic?: pulumi.Input<boolean>;
    ipv6pt?: pulumi.Input<boolean>;
    isis?: pulumi.Input<boolean>;
    lb?: pulumi.Input<boolean>;
    lsn?: pulumi.Input<boolean>;
    ospf?: pulumi.Input<boolean>;
    pq?: pulumi.Input<boolean>;
    push?: pulumi.Input<boolean>;
    rdpproxy?: pulumi.Input<boolean>;
    rep?: pulumi.Input<boolean>;
    responder?: pulumi.Input<boolean>;
    rewrite?: pulumi.Input<boolean>;
    rip?: pulumi.Input<boolean>;
    rise?: pulumi.Input<boolean>;
    sp?: pulumi.Input<boolean>;
    ssl?: pulumi.Input<boolean>;
    sslinterception?: pulumi.Input<boolean>;
    sslvpn?: pulumi.Input<boolean>;
    urlfiltering?: pulumi.Input<boolean>;
    videooptimization?: pulumi.Input<boolean>;
    wl?: pulumi.Input<boolean>;
}
