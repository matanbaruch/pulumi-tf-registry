// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Vpnnexthopserver extends pulumi.CustomResource {
    /**
     * Get an existing Vpnnexthopserver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnnexthopserverState, opts?: pulumi.CustomResourceOptions): Vpnnexthopserver {
        return new Vpnnexthopserver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/vpnnexthopserver:Vpnnexthopserver';

    /**
     * Returns true if the given object is an instance of Vpnnexthopserver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpnnexthopserver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpnnexthopserver.__pulumiType;
    }

    public readonly name!: pulumi.Output<string>;
    public readonly nexthopfqdn!: pulumi.Output<string>;
    public readonly nexthopip!: pulumi.Output<string>;
    public readonly nexthopport!: pulumi.Output<number>;
    public readonly resaddresstype!: pulumi.Output<string>;
    public readonly secure!: pulumi.Output<string>;

    /**
     * Create a Vpnnexthopserver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnnexthopserverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnnexthopserverArgs | VpnnexthopserverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnnexthopserverState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nexthopfqdn"] = state ? state.nexthopfqdn : undefined;
            resourceInputs["nexthopip"] = state ? state.nexthopip : undefined;
            resourceInputs["nexthopport"] = state ? state.nexthopport : undefined;
            resourceInputs["resaddresstype"] = state ? state.resaddresstype : undefined;
            resourceInputs["secure"] = state ? state.secure : undefined;
        } else {
            const args = argsOrState as VpnnexthopserverArgs | undefined;
            if ((!args || args.nexthopport === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nexthopport'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nexthopfqdn"] = args ? args.nexthopfqdn : undefined;
            resourceInputs["nexthopip"] = args ? args.nexthopip : undefined;
            resourceInputs["nexthopport"] = args ? args.nexthopport : undefined;
            resourceInputs["resaddresstype"] = args ? args.resaddresstype : undefined;
            resourceInputs["secure"] = args ? args.secure : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpnnexthopserver.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vpnnexthopserver resources.
 */
export interface VpnnexthopserverState {
    name?: pulumi.Input<string>;
    nexthopfqdn?: pulumi.Input<string>;
    nexthopip?: pulumi.Input<string>;
    nexthopport?: pulumi.Input<number>;
    resaddresstype?: pulumi.Input<string>;
    secure?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpnnexthopserver resource.
 */
export interface VpnnexthopserverArgs {
    name?: pulumi.Input<string>;
    nexthopfqdn?: pulumi.Input<string>;
    nexthopip?: pulumi.Input<string>;
    nexthopport: pulumi.Input<number>;
    resaddresstype?: pulumi.Input<string>;
    secure?: pulumi.Input<string>;
}
