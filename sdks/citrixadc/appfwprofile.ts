// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Appfwprofile extends pulumi.CustomResource {
    /**
     * Get an existing Appfwprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppfwprofileState, opts?: pulumi.CustomResourceOptions): Appfwprofile {
        return new Appfwprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appfwprofile:Appfwprofile';

    /**
     * Returns true if the given object is an instance of Appfwprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appfwprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appfwprofile.__pulumiType;
    }

    public readonly addcookieflags!: pulumi.Output<string>;
    public readonly archivename!: pulumi.Output<string>;
    public readonly bufferoverflowactions!: pulumi.Output<string[]>;
    public readonly bufferoverflowmaxcookielength!: pulumi.Output<number>;
    public readonly bufferoverflowmaxheaderlength!: pulumi.Output<number>;
    public readonly bufferoverflowmaxquerylength!: pulumi.Output<number>;
    public readonly bufferoverflowmaxtotalheaderlength!: pulumi.Output<number>;
    public readonly bufferoverflowmaxurllength!: pulumi.Output<number>;
    public readonly canonicalizehtmlresponse!: pulumi.Output<string>;
    public readonly checkrequestheaders!: pulumi.Output<string>;
    public readonly cmdinjectionactions!: pulumi.Output<string[]>;
    public readonly cmdinjectiontype!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly contenttypeactions!: pulumi.Output<string[]>;
    public readonly cookieconsistencyactions!: pulumi.Output<string[]>;
    public readonly cookieencryption!: pulumi.Output<string>;
    public readonly cookiehijackingactions!: pulumi.Output<string[]>;
    public readonly cookieproxying!: pulumi.Output<string>;
    public readonly cookietransforms!: pulumi.Output<string>;
    public readonly creditcardactions!: pulumi.Output<string[]>;
    public readonly creditcardmaxallowed!: pulumi.Output<number>;
    public readonly creditcards!: pulumi.Output<string[]>;
    public readonly creditcardxout!: pulumi.Output<string>;
    public readonly crosssitescriptingactions!: pulumi.Output<string[]>;
    public readonly crosssitescriptingcheckcompleteurls!: pulumi.Output<string>;
    public readonly crosssitescriptingtransformunsafehtml!: pulumi.Output<string>;
    public readonly csrftagactions!: pulumi.Output<string[]>;
    public readonly customsettings!: pulumi.Output<string>;
    public readonly defaultcharset!: pulumi.Output<string>;
    public readonly defaultfieldformatmaxlength!: pulumi.Output<number>;
    public readonly defaultfieldformatminlength!: pulumi.Output<number>;
    public readonly defaultfieldformattype!: pulumi.Output<string>;
    public readonly defaults!: pulumi.Output<string>;
    public readonly denyurlactions!: pulumi.Output<string[]>;
    public readonly dosecurecreditcardlogging!: pulumi.Output<string>;
    public readonly dynamiclearnings!: pulumi.Output<string[]>;
    public readonly enableformtagging!: pulumi.Output<string>;
    public readonly errorurl!: pulumi.Output<string>;
    public readonly excludefileuploadfromchecks!: pulumi.Output<string>;
    public readonly exemptclosureurlsfromsecuritychecks!: pulumi.Output<string>;
    public readonly fieldconsistencyactions!: pulumi.Output<string[]>;
    public readonly fieldformatactions!: pulumi.Output<string[]>;
    public readonly fileuploadmaxnum!: pulumi.Output<number>;
    public readonly fileuploadtypesactions!: pulumi.Output<string[]>;
    public readonly htmlerrorobject!: pulumi.Output<string>;
    public readonly htmlerrorstatuscode!: pulumi.Output<number>;
    public readonly htmlerrorstatusmessage!: pulumi.Output<string>;
    public readonly infercontenttypexmlpayloadactions!: pulumi.Output<string[]>;
    public readonly inspectcontenttypes!: pulumi.Output<string[]>;
    public readonly invalidpercenthandling!: pulumi.Output<string>;
    public readonly jsondosactions!: pulumi.Output<string[]>;
    public readonly jsonerrorobject!: pulumi.Output<string>;
    public readonly jsonsqlinjectionactions!: pulumi.Output<string[]>;
    public readonly jsonsqlinjectiontype!: pulumi.Output<string>;
    public readonly jsonxssactions!: pulumi.Output<string[]>;
    public readonly logeverypolicyhit!: pulumi.Output<string>;
    public readonly multipleheaderactions!: pulumi.Output<string[]>;
    public readonly name!: pulumi.Output<string>;
    public readonly optimizepartialreqs!: pulumi.Output<string>;
    public readonly percentdecoderecursively!: pulumi.Output<string>;
    public readonly postbodylimit!: pulumi.Output<number>;
    public readonly postbodylimitactions!: pulumi.Output<string[]>;
    public readonly postbodylimitsignature!: pulumi.Output<number>;
    public readonly refererheadercheck!: pulumi.Output<string>;
    public readonly requestcontenttype!: pulumi.Output<string>;
    public readonly responsecontenttype!: pulumi.Output<string>;
    public readonly rfcprofile!: pulumi.Output<string>;
    public readonly semicolonfieldseparator!: pulumi.Output<string>;
    public readonly sessionlessfieldconsistency!: pulumi.Output<string>;
    public readonly sessionlessurlclosure!: pulumi.Output<string>;
    public readonly signatures!: pulumi.Output<string>;
    public readonly sqlinjectionactions!: pulumi.Output<string[]>;
    public readonly sqlinjectionchecksqlwildchars!: pulumi.Output<string>;
    public readonly sqlinjectiongrammar!: pulumi.Output<string>;
    public readonly sqlinjectiononlycheckfieldswithsqlchars!: pulumi.Output<string>;
    public readonly sqlinjectionparsecomments!: pulumi.Output<string>;
    public readonly sqlinjectiontransformspecialchars!: pulumi.Output<string>;
    public readonly sqlinjectiontype!: pulumi.Output<string>;
    public readonly starturlactions!: pulumi.Output<string[]>;
    public readonly starturlclosure!: pulumi.Output<string>;
    public readonly streaming!: pulumi.Output<string>;
    public readonly stripcomments!: pulumi.Output<string>;
    public readonly striphtmlcomments!: pulumi.Output<string>;
    public readonly stripxmlcomments!: pulumi.Output<string>;
    public readonly trace!: pulumi.Output<string>;
    public readonly types!: pulumi.Output<string[]>;
    public readonly urldecoderequestcookies!: pulumi.Output<string>;
    public readonly usehtmlerrorobject!: pulumi.Output<string>;
    public readonly verboseloglevel!: pulumi.Output<string>;
    public readonly xmlattachmentactions!: pulumi.Output<string[]>;
    public readonly xmldosactions!: pulumi.Output<string[]>;
    public readonly xmlerrorobject!: pulumi.Output<string>;
    public readonly xmlformatactions!: pulumi.Output<string[]>;
    public readonly xmlsoapfaultactions!: pulumi.Output<string[]>;
    public readonly xmlsqlinjectionactions!: pulumi.Output<string[]>;
    public readonly xmlsqlinjectionchecksqlwildchars!: pulumi.Output<string>;
    public readonly xmlsqlinjectiononlycheckfieldswithsqlchars!: pulumi.Output<string>;
    public readonly xmlsqlinjectionparsecomments!: pulumi.Output<string>;
    public readonly xmlsqlinjectiontype!: pulumi.Output<string>;
    public readonly xmlvalidationactions!: pulumi.Output<string[]>;
    public readonly xmlwsiactions!: pulumi.Output<string[]>;
    public readonly xmlxssactions!: pulumi.Output<string[]>;

    /**
     * Create a Appfwprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppfwprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppfwprofileArgs | AppfwprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppfwprofileState | undefined;
            resourceInputs["addcookieflags"] = state ? state.addcookieflags : undefined;
            resourceInputs["archivename"] = state ? state.archivename : undefined;
            resourceInputs["bufferoverflowactions"] = state ? state.bufferoverflowactions : undefined;
            resourceInputs["bufferoverflowmaxcookielength"] = state ? state.bufferoverflowmaxcookielength : undefined;
            resourceInputs["bufferoverflowmaxheaderlength"] = state ? state.bufferoverflowmaxheaderlength : undefined;
            resourceInputs["bufferoverflowmaxquerylength"] = state ? state.bufferoverflowmaxquerylength : undefined;
            resourceInputs["bufferoverflowmaxtotalheaderlength"] = state ? state.bufferoverflowmaxtotalheaderlength : undefined;
            resourceInputs["bufferoverflowmaxurllength"] = state ? state.bufferoverflowmaxurllength : undefined;
            resourceInputs["canonicalizehtmlresponse"] = state ? state.canonicalizehtmlresponse : undefined;
            resourceInputs["checkrequestheaders"] = state ? state.checkrequestheaders : undefined;
            resourceInputs["cmdinjectionactions"] = state ? state.cmdinjectionactions : undefined;
            resourceInputs["cmdinjectiontype"] = state ? state.cmdinjectiontype : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["contenttypeactions"] = state ? state.contenttypeactions : undefined;
            resourceInputs["cookieconsistencyactions"] = state ? state.cookieconsistencyactions : undefined;
            resourceInputs["cookieencryption"] = state ? state.cookieencryption : undefined;
            resourceInputs["cookiehijackingactions"] = state ? state.cookiehijackingactions : undefined;
            resourceInputs["cookieproxying"] = state ? state.cookieproxying : undefined;
            resourceInputs["cookietransforms"] = state ? state.cookietransforms : undefined;
            resourceInputs["creditcardactions"] = state ? state.creditcardactions : undefined;
            resourceInputs["creditcardmaxallowed"] = state ? state.creditcardmaxallowed : undefined;
            resourceInputs["creditcards"] = state ? state.creditcards : undefined;
            resourceInputs["creditcardxout"] = state ? state.creditcardxout : undefined;
            resourceInputs["crosssitescriptingactions"] = state ? state.crosssitescriptingactions : undefined;
            resourceInputs["crosssitescriptingcheckcompleteurls"] = state ? state.crosssitescriptingcheckcompleteurls : undefined;
            resourceInputs["crosssitescriptingtransformunsafehtml"] = state ? state.crosssitescriptingtransformunsafehtml : undefined;
            resourceInputs["csrftagactions"] = state ? state.csrftagactions : undefined;
            resourceInputs["customsettings"] = state ? state.customsettings : undefined;
            resourceInputs["defaultcharset"] = state ? state.defaultcharset : undefined;
            resourceInputs["defaultfieldformatmaxlength"] = state ? state.defaultfieldformatmaxlength : undefined;
            resourceInputs["defaultfieldformatminlength"] = state ? state.defaultfieldformatminlength : undefined;
            resourceInputs["defaultfieldformattype"] = state ? state.defaultfieldformattype : undefined;
            resourceInputs["defaults"] = state ? state.defaults : undefined;
            resourceInputs["denyurlactions"] = state ? state.denyurlactions : undefined;
            resourceInputs["dosecurecreditcardlogging"] = state ? state.dosecurecreditcardlogging : undefined;
            resourceInputs["dynamiclearnings"] = state ? state.dynamiclearnings : undefined;
            resourceInputs["enableformtagging"] = state ? state.enableformtagging : undefined;
            resourceInputs["errorurl"] = state ? state.errorurl : undefined;
            resourceInputs["excludefileuploadfromchecks"] = state ? state.excludefileuploadfromchecks : undefined;
            resourceInputs["exemptclosureurlsfromsecuritychecks"] = state ? state.exemptclosureurlsfromsecuritychecks : undefined;
            resourceInputs["fieldconsistencyactions"] = state ? state.fieldconsistencyactions : undefined;
            resourceInputs["fieldformatactions"] = state ? state.fieldformatactions : undefined;
            resourceInputs["fileuploadmaxnum"] = state ? state.fileuploadmaxnum : undefined;
            resourceInputs["fileuploadtypesactions"] = state ? state.fileuploadtypesactions : undefined;
            resourceInputs["htmlerrorobject"] = state ? state.htmlerrorobject : undefined;
            resourceInputs["htmlerrorstatuscode"] = state ? state.htmlerrorstatuscode : undefined;
            resourceInputs["htmlerrorstatusmessage"] = state ? state.htmlerrorstatusmessage : undefined;
            resourceInputs["infercontenttypexmlpayloadactions"] = state ? state.infercontenttypexmlpayloadactions : undefined;
            resourceInputs["inspectcontenttypes"] = state ? state.inspectcontenttypes : undefined;
            resourceInputs["invalidpercenthandling"] = state ? state.invalidpercenthandling : undefined;
            resourceInputs["jsondosactions"] = state ? state.jsondosactions : undefined;
            resourceInputs["jsonerrorobject"] = state ? state.jsonerrorobject : undefined;
            resourceInputs["jsonsqlinjectionactions"] = state ? state.jsonsqlinjectionactions : undefined;
            resourceInputs["jsonsqlinjectiontype"] = state ? state.jsonsqlinjectiontype : undefined;
            resourceInputs["jsonxssactions"] = state ? state.jsonxssactions : undefined;
            resourceInputs["logeverypolicyhit"] = state ? state.logeverypolicyhit : undefined;
            resourceInputs["multipleheaderactions"] = state ? state.multipleheaderactions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["optimizepartialreqs"] = state ? state.optimizepartialreqs : undefined;
            resourceInputs["percentdecoderecursively"] = state ? state.percentdecoderecursively : undefined;
            resourceInputs["postbodylimit"] = state ? state.postbodylimit : undefined;
            resourceInputs["postbodylimitactions"] = state ? state.postbodylimitactions : undefined;
            resourceInputs["postbodylimitsignature"] = state ? state.postbodylimitsignature : undefined;
            resourceInputs["refererheadercheck"] = state ? state.refererheadercheck : undefined;
            resourceInputs["requestcontenttype"] = state ? state.requestcontenttype : undefined;
            resourceInputs["responsecontenttype"] = state ? state.responsecontenttype : undefined;
            resourceInputs["rfcprofile"] = state ? state.rfcprofile : undefined;
            resourceInputs["semicolonfieldseparator"] = state ? state.semicolonfieldseparator : undefined;
            resourceInputs["sessionlessfieldconsistency"] = state ? state.sessionlessfieldconsistency : undefined;
            resourceInputs["sessionlessurlclosure"] = state ? state.sessionlessurlclosure : undefined;
            resourceInputs["signatures"] = state ? state.signatures : undefined;
            resourceInputs["sqlinjectionactions"] = state ? state.sqlinjectionactions : undefined;
            resourceInputs["sqlinjectionchecksqlwildchars"] = state ? state.sqlinjectionchecksqlwildchars : undefined;
            resourceInputs["sqlinjectiongrammar"] = state ? state.sqlinjectiongrammar : undefined;
            resourceInputs["sqlinjectiononlycheckfieldswithsqlchars"] = state ? state.sqlinjectiononlycheckfieldswithsqlchars : undefined;
            resourceInputs["sqlinjectionparsecomments"] = state ? state.sqlinjectionparsecomments : undefined;
            resourceInputs["sqlinjectiontransformspecialchars"] = state ? state.sqlinjectiontransformspecialchars : undefined;
            resourceInputs["sqlinjectiontype"] = state ? state.sqlinjectiontype : undefined;
            resourceInputs["starturlactions"] = state ? state.starturlactions : undefined;
            resourceInputs["starturlclosure"] = state ? state.starturlclosure : undefined;
            resourceInputs["streaming"] = state ? state.streaming : undefined;
            resourceInputs["stripcomments"] = state ? state.stripcomments : undefined;
            resourceInputs["striphtmlcomments"] = state ? state.striphtmlcomments : undefined;
            resourceInputs["stripxmlcomments"] = state ? state.stripxmlcomments : undefined;
            resourceInputs["trace"] = state ? state.trace : undefined;
            resourceInputs["types"] = state ? state.types : undefined;
            resourceInputs["urldecoderequestcookies"] = state ? state.urldecoderequestcookies : undefined;
            resourceInputs["usehtmlerrorobject"] = state ? state.usehtmlerrorobject : undefined;
            resourceInputs["verboseloglevel"] = state ? state.verboseloglevel : undefined;
            resourceInputs["xmlattachmentactions"] = state ? state.xmlattachmentactions : undefined;
            resourceInputs["xmldosactions"] = state ? state.xmldosactions : undefined;
            resourceInputs["xmlerrorobject"] = state ? state.xmlerrorobject : undefined;
            resourceInputs["xmlformatactions"] = state ? state.xmlformatactions : undefined;
            resourceInputs["xmlsoapfaultactions"] = state ? state.xmlsoapfaultactions : undefined;
            resourceInputs["xmlsqlinjectionactions"] = state ? state.xmlsqlinjectionactions : undefined;
            resourceInputs["xmlsqlinjectionchecksqlwildchars"] = state ? state.xmlsqlinjectionchecksqlwildchars : undefined;
            resourceInputs["xmlsqlinjectiononlycheckfieldswithsqlchars"] = state ? state.xmlsqlinjectiononlycheckfieldswithsqlchars : undefined;
            resourceInputs["xmlsqlinjectionparsecomments"] = state ? state.xmlsqlinjectionparsecomments : undefined;
            resourceInputs["xmlsqlinjectiontype"] = state ? state.xmlsqlinjectiontype : undefined;
            resourceInputs["xmlvalidationactions"] = state ? state.xmlvalidationactions : undefined;
            resourceInputs["xmlwsiactions"] = state ? state.xmlwsiactions : undefined;
            resourceInputs["xmlxssactions"] = state ? state.xmlxssactions : undefined;
        } else {
            const args = argsOrState as AppfwprofileArgs | undefined;
            resourceInputs["addcookieflags"] = args ? args.addcookieflags : undefined;
            resourceInputs["archivename"] = args ? args.archivename : undefined;
            resourceInputs["bufferoverflowactions"] = args ? args.bufferoverflowactions : undefined;
            resourceInputs["bufferoverflowmaxcookielength"] = args ? args.bufferoverflowmaxcookielength : undefined;
            resourceInputs["bufferoverflowmaxheaderlength"] = args ? args.bufferoverflowmaxheaderlength : undefined;
            resourceInputs["bufferoverflowmaxquerylength"] = args ? args.bufferoverflowmaxquerylength : undefined;
            resourceInputs["bufferoverflowmaxtotalheaderlength"] = args ? args.bufferoverflowmaxtotalheaderlength : undefined;
            resourceInputs["bufferoverflowmaxurllength"] = args ? args.bufferoverflowmaxurllength : undefined;
            resourceInputs["canonicalizehtmlresponse"] = args ? args.canonicalizehtmlresponse : undefined;
            resourceInputs["checkrequestheaders"] = args ? args.checkrequestheaders : undefined;
            resourceInputs["cmdinjectionactions"] = args ? args.cmdinjectionactions : undefined;
            resourceInputs["cmdinjectiontype"] = args ? args.cmdinjectiontype : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["contenttypeactions"] = args ? args.contenttypeactions : undefined;
            resourceInputs["cookieconsistencyactions"] = args ? args.cookieconsistencyactions : undefined;
            resourceInputs["cookieencryption"] = args ? args.cookieencryption : undefined;
            resourceInputs["cookiehijackingactions"] = args ? args.cookiehijackingactions : undefined;
            resourceInputs["cookieproxying"] = args ? args.cookieproxying : undefined;
            resourceInputs["cookietransforms"] = args ? args.cookietransforms : undefined;
            resourceInputs["creditcardactions"] = args ? args.creditcardactions : undefined;
            resourceInputs["creditcardmaxallowed"] = args ? args.creditcardmaxallowed : undefined;
            resourceInputs["creditcards"] = args ? args.creditcards : undefined;
            resourceInputs["creditcardxout"] = args ? args.creditcardxout : undefined;
            resourceInputs["crosssitescriptingactions"] = args ? args.crosssitescriptingactions : undefined;
            resourceInputs["crosssitescriptingcheckcompleteurls"] = args ? args.crosssitescriptingcheckcompleteurls : undefined;
            resourceInputs["crosssitescriptingtransformunsafehtml"] = args ? args.crosssitescriptingtransformunsafehtml : undefined;
            resourceInputs["csrftagactions"] = args ? args.csrftagactions : undefined;
            resourceInputs["customsettings"] = args ? args.customsettings : undefined;
            resourceInputs["defaultcharset"] = args ? args.defaultcharset : undefined;
            resourceInputs["defaultfieldformatmaxlength"] = args ? args.defaultfieldformatmaxlength : undefined;
            resourceInputs["defaultfieldformatminlength"] = args ? args.defaultfieldformatminlength : undefined;
            resourceInputs["defaultfieldformattype"] = args ? args.defaultfieldformattype : undefined;
            resourceInputs["defaults"] = args ? args.defaults : undefined;
            resourceInputs["denyurlactions"] = args ? args.denyurlactions : undefined;
            resourceInputs["dosecurecreditcardlogging"] = args ? args.dosecurecreditcardlogging : undefined;
            resourceInputs["dynamiclearnings"] = args ? args.dynamiclearnings : undefined;
            resourceInputs["enableformtagging"] = args ? args.enableformtagging : undefined;
            resourceInputs["errorurl"] = args ? args.errorurl : undefined;
            resourceInputs["excludefileuploadfromchecks"] = args ? args.excludefileuploadfromchecks : undefined;
            resourceInputs["exemptclosureurlsfromsecuritychecks"] = args ? args.exemptclosureurlsfromsecuritychecks : undefined;
            resourceInputs["fieldconsistencyactions"] = args ? args.fieldconsistencyactions : undefined;
            resourceInputs["fieldformatactions"] = args ? args.fieldformatactions : undefined;
            resourceInputs["fileuploadmaxnum"] = args ? args.fileuploadmaxnum : undefined;
            resourceInputs["fileuploadtypesactions"] = args ? args.fileuploadtypesactions : undefined;
            resourceInputs["htmlerrorobject"] = args ? args.htmlerrorobject : undefined;
            resourceInputs["htmlerrorstatuscode"] = args ? args.htmlerrorstatuscode : undefined;
            resourceInputs["htmlerrorstatusmessage"] = args ? args.htmlerrorstatusmessage : undefined;
            resourceInputs["infercontenttypexmlpayloadactions"] = args ? args.infercontenttypexmlpayloadactions : undefined;
            resourceInputs["inspectcontenttypes"] = args ? args.inspectcontenttypes : undefined;
            resourceInputs["invalidpercenthandling"] = args ? args.invalidpercenthandling : undefined;
            resourceInputs["jsondosactions"] = args ? args.jsondosactions : undefined;
            resourceInputs["jsonerrorobject"] = args ? args.jsonerrorobject : undefined;
            resourceInputs["jsonsqlinjectionactions"] = args ? args.jsonsqlinjectionactions : undefined;
            resourceInputs["jsonsqlinjectiontype"] = args ? args.jsonsqlinjectiontype : undefined;
            resourceInputs["jsonxssactions"] = args ? args.jsonxssactions : undefined;
            resourceInputs["logeverypolicyhit"] = args ? args.logeverypolicyhit : undefined;
            resourceInputs["multipleheaderactions"] = args ? args.multipleheaderactions : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["optimizepartialreqs"] = args ? args.optimizepartialreqs : undefined;
            resourceInputs["percentdecoderecursively"] = args ? args.percentdecoderecursively : undefined;
            resourceInputs["postbodylimit"] = args ? args.postbodylimit : undefined;
            resourceInputs["postbodylimitactions"] = args ? args.postbodylimitactions : undefined;
            resourceInputs["postbodylimitsignature"] = args ? args.postbodylimitsignature : undefined;
            resourceInputs["refererheadercheck"] = args ? args.refererheadercheck : undefined;
            resourceInputs["requestcontenttype"] = args ? args.requestcontenttype : undefined;
            resourceInputs["responsecontenttype"] = args ? args.responsecontenttype : undefined;
            resourceInputs["rfcprofile"] = args ? args.rfcprofile : undefined;
            resourceInputs["semicolonfieldseparator"] = args ? args.semicolonfieldseparator : undefined;
            resourceInputs["sessionlessfieldconsistency"] = args ? args.sessionlessfieldconsistency : undefined;
            resourceInputs["sessionlessurlclosure"] = args ? args.sessionlessurlclosure : undefined;
            resourceInputs["signatures"] = args ? args.signatures : undefined;
            resourceInputs["sqlinjectionactions"] = args ? args.sqlinjectionactions : undefined;
            resourceInputs["sqlinjectionchecksqlwildchars"] = args ? args.sqlinjectionchecksqlwildchars : undefined;
            resourceInputs["sqlinjectiongrammar"] = args ? args.sqlinjectiongrammar : undefined;
            resourceInputs["sqlinjectiononlycheckfieldswithsqlchars"] = args ? args.sqlinjectiononlycheckfieldswithsqlchars : undefined;
            resourceInputs["sqlinjectionparsecomments"] = args ? args.sqlinjectionparsecomments : undefined;
            resourceInputs["sqlinjectiontransformspecialchars"] = args ? args.sqlinjectiontransformspecialchars : undefined;
            resourceInputs["sqlinjectiontype"] = args ? args.sqlinjectiontype : undefined;
            resourceInputs["starturlactions"] = args ? args.starturlactions : undefined;
            resourceInputs["starturlclosure"] = args ? args.starturlclosure : undefined;
            resourceInputs["streaming"] = args ? args.streaming : undefined;
            resourceInputs["stripcomments"] = args ? args.stripcomments : undefined;
            resourceInputs["striphtmlcomments"] = args ? args.striphtmlcomments : undefined;
            resourceInputs["stripxmlcomments"] = args ? args.stripxmlcomments : undefined;
            resourceInputs["trace"] = args ? args.trace : undefined;
            resourceInputs["types"] = args ? args.types : undefined;
            resourceInputs["urldecoderequestcookies"] = args ? args.urldecoderequestcookies : undefined;
            resourceInputs["usehtmlerrorobject"] = args ? args.usehtmlerrorobject : undefined;
            resourceInputs["verboseloglevel"] = args ? args.verboseloglevel : undefined;
            resourceInputs["xmlattachmentactions"] = args ? args.xmlattachmentactions : undefined;
            resourceInputs["xmldosactions"] = args ? args.xmldosactions : undefined;
            resourceInputs["xmlerrorobject"] = args ? args.xmlerrorobject : undefined;
            resourceInputs["xmlformatactions"] = args ? args.xmlformatactions : undefined;
            resourceInputs["xmlsoapfaultactions"] = args ? args.xmlsoapfaultactions : undefined;
            resourceInputs["xmlsqlinjectionactions"] = args ? args.xmlsqlinjectionactions : undefined;
            resourceInputs["xmlsqlinjectionchecksqlwildchars"] = args ? args.xmlsqlinjectionchecksqlwildchars : undefined;
            resourceInputs["xmlsqlinjectiononlycheckfieldswithsqlchars"] = args ? args.xmlsqlinjectiononlycheckfieldswithsqlchars : undefined;
            resourceInputs["xmlsqlinjectionparsecomments"] = args ? args.xmlsqlinjectionparsecomments : undefined;
            resourceInputs["xmlsqlinjectiontype"] = args ? args.xmlsqlinjectiontype : undefined;
            resourceInputs["xmlvalidationactions"] = args ? args.xmlvalidationactions : undefined;
            resourceInputs["xmlwsiactions"] = args ? args.xmlwsiactions : undefined;
            resourceInputs["xmlxssactions"] = args ? args.xmlxssactions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Appfwprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Appfwprofile resources.
 */
export interface AppfwprofileState {
    addcookieflags?: pulumi.Input<string>;
    archivename?: pulumi.Input<string>;
    bufferoverflowactions?: pulumi.Input<pulumi.Input<string>[]>;
    bufferoverflowmaxcookielength?: pulumi.Input<number>;
    bufferoverflowmaxheaderlength?: pulumi.Input<number>;
    bufferoverflowmaxquerylength?: pulumi.Input<number>;
    bufferoverflowmaxtotalheaderlength?: pulumi.Input<number>;
    bufferoverflowmaxurllength?: pulumi.Input<number>;
    canonicalizehtmlresponse?: pulumi.Input<string>;
    checkrequestheaders?: pulumi.Input<string>;
    cmdinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    cmdinjectiontype?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    contenttypeactions?: pulumi.Input<pulumi.Input<string>[]>;
    cookieconsistencyactions?: pulumi.Input<pulumi.Input<string>[]>;
    cookieencryption?: pulumi.Input<string>;
    cookiehijackingactions?: pulumi.Input<pulumi.Input<string>[]>;
    cookieproxying?: pulumi.Input<string>;
    cookietransforms?: pulumi.Input<string>;
    creditcardactions?: pulumi.Input<pulumi.Input<string>[]>;
    creditcardmaxallowed?: pulumi.Input<number>;
    creditcards?: pulumi.Input<pulumi.Input<string>[]>;
    creditcardxout?: pulumi.Input<string>;
    crosssitescriptingactions?: pulumi.Input<pulumi.Input<string>[]>;
    crosssitescriptingcheckcompleteurls?: pulumi.Input<string>;
    crosssitescriptingtransformunsafehtml?: pulumi.Input<string>;
    csrftagactions?: pulumi.Input<pulumi.Input<string>[]>;
    customsettings?: pulumi.Input<string>;
    defaultcharset?: pulumi.Input<string>;
    defaultfieldformatmaxlength?: pulumi.Input<number>;
    defaultfieldformatminlength?: pulumi.Input<number>;
    defaultfieldformattype?: pulumi.Input<string>;
    defaults?: pulumi.Input<string>;
    denyurlactions?: pulumi.Input<pulumi.Input<string>[]>;
    dosecurecreditcardlogging?: pulumi.Input<string>;
    dynamiclearnings?: pulumi.Input<pulumi.Input<string>[]>;
    enableformtagging?: pulumi.Input<string>;
    errorurl?: pulumi.Input<string>;
    excludefileuploadfromchecks?: pulumi.Input<string>;
    exemptclosureurlsfromsecuritychecks?: pulumi.Input<string>;
    fieldconsistencyactions?: pulumi.Input<pulumi.Input<string>[]>;
    fieldformatactions?: pulumi.Input<pulumi.Input<string>[]>;
    fileuploadmaxnum?: pulumi.Input<number>;
    fileuploadtypesactions?: pulumi.Input<pulumi.Input<string>[]>;
    htmlerrorobject?: pulumi.Input<string>;
    htmlerrorstatuscode?: pulumi.Input<number>;
    htmlerrorstatusmessage?: pulumi.Input<string>;
    infercontenttypexmlpayloadactions?: pulumi.Input<pulumi.Input<string>[]>;
    inspectcontenttypes?: pulumi.Input<pulumi.Input<string>[]>;
    invalidpercenthandling?: pulumi.Input<string>;
    jsondosactions?: pulumi.Input<pulumi.Input<string>[]>;
    jsonerrorobject?: pulumi.Input<string>;
    jsonsqlinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    jsonsqlinjectiontype?: pulumi.Input<string>;
    jsonxssactions?: pulumi.Input<pulumi.Input<string>[]>;
    logeverypolicyhit?: pulumi.Input<string>;
    multipleheaderactions?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    optimizepartialreqs?: pulumi.Input<string>;
    percentdecoderecursively?: pulumi.Input<string>;
    postbodylimit?: pulumi.Input<number>;
    postbodylimitactions?: pulumi.Input<pulumi.Input<string>[]>;
    postbodylimitsignature?: pulumi.Input<number>;
    refererheadercheck?: pulumi.Input<string>;
    requestcontenttype?: pulumi.Input<string>;
    responsecontenttype?: pulumi.Input<string>;
    rfcprofile?: pulumi.Input<string>;
    semicolonfieldseparator?: pulumi.Input<string>;
    sessionlessfieldconsistency?: pulumi.Input<string>;
    sessionlessurlclosure?: pulumi.Input<string>;
    signatures?: pulumi.Input<string>;
    sqlinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    sqlinjectionchecksqlwildchars?: pulumi.Input<string>;
    sqlinjectiongrammar?: pulumi.Input<string>;
    sqlinjectiononlycheckfieldswithsqlchars?: pulumi.Input<string>;
    sqlinjectionparsecomments?: pulumi.Input<string>;
    sqlinjectiontransformspecialchars?: pulumi.Input<string>;
    sqlinjectiontype?: pulumi.Input<string>;
    starturlactions?: pulumi.Input<pulumi.Input<string>[]>;
    starturlclosure?: pulumi.Input<string>;
    streaming?: pulumi.Input<string>;
    stripcomments?: pulumi.Input<string>;
    striphtmlcomments?: pulumi.Input<string>;
    stripxmlcomments?: pulumi.Input<string>;
    trace?: pulumi.Input<string>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
    urldecoderequestcookies?: pulumi.Input<string>;
    usehtmlerrorobject?: pulumi.Input<string>;
    verboseloglevel?: pulumi.Input<string>;
    xmlattachmentactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmldosactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlerrorobject?: pulumi.Input<string>;
    xmlformatactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlsoapfaultactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlsqlinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlsqlinjectionchecksqlwildchars?: pulumi.Input<string>;
    xmlsqlinjectiononlycheckfieldswithsqlchars?: pulumi.Input<string>;
    xmlsqlinjectionparsecomments?: pulumi.Input<string>;
    xmlsqlinjectiontype?: pulumi.Input<string>;
    xmlvalidationactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlwsiactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlxssactions?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Appfwprofile resource.
 */
export interface AppfwprofileArgs {
    addcookieflags?: pulumi.Input<string>;
    archivename?: pulumi.Input<string>;
    bufferoverflowactions?: pulumi.Input<pulumi.Input<string>[]>;
    bufferoverflowmaxcookielength?: pulumi.Input<number>;
    bufferoverflowmaxheaderlength?: pulumi.Input<number>;
    bufferoverflowmaxquerylength?: pulumi.Input<number>;
    bufferoverflowmaxtotalheaderlength?: pulumi.Input<number>;
    bufferoverflowmaxurllength?: pulumi.Input<number>;
    canonicalizehtmlresponse?: pulumi.Input<string>;
    checkrequestheaders?: pulumi.Input<string>;
    cmdinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    cmdinjectiontype?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    contenttypeactions?: pulumi.Input<pulumi.Input<string>[]>;
    cookieconsistencyactions?: pulumi.Input<pulumi.Input<string>[]>;
    cookieencryption?: pulumi.Input<string>;
    cookiehijackingactions?: pulumi.Input<pulumi.Input<string>[]>;
    cookieproxying?: pulumi.Input<string>;
    cookietransforms?: pulumi.Input<string>;
    creditcardactions?: pulumi.Input<pulumi.Input<string>[]>;
    creditcardmaxallowed?: pulumi.Input<number>;
    creditcards?: pulumi.Input<pulumi.Input<string>[]>;
    creditcardxout?: pulumi.Input<string>;
    crosssitescriptingactions?: pulumi.Input<pulumi.Input<string>[]>;
    crosssitescriptingcheckcompleteurls?: pulumi.Input<string>;
    crosssitescriptingtransformunsafehtml?: pulumi.Input<string>;
    csrftagactions?: pulumi.Input<pulumi.Input<string>[]>;
    customsettings?: pulumi.Input<string>;
    defaultcharset?: pulumi.Input<string>;
    defaultfieldformatmaxlength?: pulumi.Input<number>;
    defaultfieldformatminlength?: pulumi.Input<number>;
    defaultfieldformattype?: pulumi.Input<string>;
    defaults?: pulumi.Input<string>;
    denyurlactions?: pulumi.Input<pulumi.Input<string>[]>;
    dosecurecreditcardlogging?: pulumi.Input<string>;
    dynamiclearnings?: pulumi.Input<pulumi.Input<string>[]>;
    enableformtagging?: pulumi.Input<string>;
    errorurl?: pulumi.Input<string>;
    excludefileuploadfromchecks?: pulumi.Input<string>;
    exemptclosureurlsfromsecuritychecks?: pulumi.Input<string>;
    fieldconsistencyactions?: pulumi.Input<pulumi.Input<string>[]>;
    fieldformatactions?: pulumi.Input<pulumi.Input<string>[]>;
    fileuploadmaxnum?: pulumi.Input<number>;
    fileuploadtypesactions?: pulumi.Input<pulumi.Input<string>[]>;
    htmlerrorobject?: pulumi.Input<string>;
    htmlerrorstatuscode?: pulumi.Input<number>;
    htmlerrorstatusmessage?: pulumi.Input<string>;
    infercontenttypexmlpayloadactions?: pulumi.Input<pulumi.Input<string>[]>;
    inspectcontenttypes?: pulumi.Input<pulumi.Input<string>[]>;
    invalidpercenthandling?: pulumi.Input<string>;
    jsondosactions?: pulumi.Input<pulumi.Input<string>[]>;
    jsonerrorobject?: pulumi.Input<string>;
    jsonsqlinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    jsonsqlinjectiontype?: pulumi.Input<string>;
    jsonxssactions?: pulumi.Input<pulumi.Input<string>[]>;
    logeverypolicyhit?: pulumi.Input<string>;
    multipleheaderactions?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    optimizepartialreqs?: pulumi.Input<string>;
    percentdecoderecursively?: pulumi.Input<string>;
    postbodylimit?: pulumi.Input<number>;
    postbodylimitactions?: pulumi.Input<pulumi.Input<string>[]>;
    postbodylimitsignature?: pulumi.Input<number>;
    refererheadercheck?: pulumi.Input<string>;
    requestcontenttype?: pulumi.Input<string>;
    responsecontenttype?: pulumi.Input<string>;
    rfcprofile?: pulumi.Input<string>;
    semicolonfieldseparator?: pulumi.Input<string>;
    sessionlessfieldconsistency?: pulumi.Input<string>;
    sessionlessurlclosure?: pulumi.Input<string>;
    signatures?: pulumi.Input<string>;
    sqlinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    sqlinjectionchecksqlwildchars?: pulumi.Input<string>;
    sqlinjectiongrammar?: pulumi.Input<string>;
    sqlinjectiononlycheckfieldswithsqlchars?: pulumi.Input<string>;
    sqlinjectionparsecomments?: pulumi.Input<string>;
    sqlinjectiontransformspecialchars?: pulumi.Input<string>;
    sqlinjectiontype?: pulumi.Input<string>;
    starturlactions?: pulumi.Input<pulumi.Input<string>[]>;
    starturlclosure?: pulumi.Input<string>;
    streaming?: pulumi.Input<string>;
    stripcomments?: pulumi.Input<string>;
    striphtmlcomments?: pulumi.Input<string>;
    stripxmlcomments?: pulumi.Input<string>;
    trace?: pulumi.Input<string>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
    urldecoderequestcookies?: pulumi.Input<string>;
    usehtmlerrorobject?: pulumi.Input<string>;
    verboseloglevel?: pulumi.Input<string>;
    xmlattachmentactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmldosactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlerrorobject?: pulumi.Input<string>;
    xmlformatactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlsoapfaultactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlsqlinjectionactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlsqlinjectionchecksqlwildchars?: pulumi.Input<string>;
    xmlsqlinjectiononlycheckfieldswithsqlchars?: pulumi.Input<string>;
    xmlsqlinjectionparsecomments?: pulumi.Input<string>;
    xmlsqlinjectiontype?: pulumi.Input<string>;
    xmlvalidationactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlwsiactions?: pulumi.Input<pulumi.Input<string>[]>;
    xmlxssactions?: pulumi.Input<pulumi.Input<string>[]>;
}
