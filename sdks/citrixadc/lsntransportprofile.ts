// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Lsntransportprofile extends pulumi.CustomResource {
    /**
     * Get an existing Lsntransportprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LsntransportprofileState, opts?: pulumi.CustomResourceOptions): Lsntransportprofile {
        return new Lsntransportprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/lsntransportprofile:Lsntransportprofile';

    /**
     * Returns true if the given object is an instance of Lsntransportprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Lsntransportprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Lsntransportprofile.__pulumiType;
    }

    public readonly finrsttimeout!: pulumi.Output<number>;
    public readonly groupsessionlimit!: pulumi.Output<number>;
    public readonly portpreserveparity!: pulumi.Output<string>;
    public readonly portpreserverange!: pulumi.Output<string>;
    public readonly portquota!: pulumi.Output<number>;
    public readonly sessionquota!: pulumi.Output<number>;
    public readonly sessiontimeout!: pulumi.Output<number>;
    public readonly stuntimeout!: pulumi.Output<number>;
    public readonly syncheck!: pulumi.Output<string>;
    public readonly synidletimeout!: pulumi.Output<number>;
    public readonly transportprofilename!: pulumi.Output<string>;
    public readonly transportprotocol!: pulumi.Output<string | undefined>;

    /**
     * Create a Lsntransportprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LsntransportprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LsntransportprofileArgs | LsntransportprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LsntransportprofileState | undefined;
            resourceInputs["finrsttimeout"] = state ? state.finrsttimeout : undefined;
            resourceInputs["groupsessionlimit"] = state ? state.groupsessionlimit : undefined;
            resourceInputs["portpreserveparity"] = state ? state.portpreserveparity : undefined;
            resourceInputs["portpreserverange"] = state ? state.portpreserverange : undefined;
            resourceInputs["portquota"] = state ? state.portquota : undefined;
            resourceInputs["sessionquota"] = state ? state.sessionquota : undefined;
            resourceInputs["sessiontimeout"] = state ? state.sessiontimeout : undefined;
            resourceInputs["stuntimeout"] = state ? state.stuntimeout : undefined;
            resourceInputs["syncheck"] = state ? state.syncheck : undefined;
            resourceInputs["synidletimeout"] = state ? state.synidletimeout : undefined;
            resourceInputs["transportprofilename"] = state ? state.transportprofilename : undefined;
            resourceInputs["transportprotocol"] = state ? state.transportprotocol : undefined;
        } else {
            const args = argsOrState as LsntransportprofileArgs | undefined;
            if ((!args || args.transportprofilename === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transportprofilename'");
            }
            resourceInputs["finrsttimeout"] = args ? args.finrsttimeout : undefined;
            resourceInputs["groupsessionlimit"] = args ? args.groupsessionlimit : undefined;
            resourceInputs["portpreserveparity"] = args ? args.portpreserveparity : undefined;
            resourceInputs["portpreserverange"] = args ? args.portpreserverange : undefined;
            resourceInputs["portquota"] = args ? args.portquota : undefined;
            resourceInputs["sessionquota"] = args ? args.sessionquota : undefined;
            resourceInputs["sessiontimeout"] = args ? args.sessiontimeout : undefined;
            resourceInputs["stuntimeout"] = args ? args.stuntimeout : undefined;
            resourceInputs["syncheck"] = args ? args.syncheck : undefined;
            resourceInputs["synidletimeout"] = args ? args.synidletimeout : undefined;
            resourceInputs["transportprofilename"] = args ? args.transportprofilename : undefined;
            resourceInputs["transportprotocol"] = args ? args.transportprotocol : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Lsntransportprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Lsntransportprofile resources.
 */
export interface LsntransportprofileState {
    finrsttimeout?: pulumi.Input<number>;
    groupsessionlimit?: pulumi.Input<number>;
    portpreserveparity?: pulumi.Input<string>;
    portpreserverange?: pulumi.Input<string>;
    portquota?: pulumi.Input<number>;
    sessionquota?: pulumi.Input<number>;
    sessiontimeout?: pulumi.Input<number>;
    stuntimeout?: pulumi.Input<number>;
    syncheck?: pulumi.Input<string>;
    synidletimeout?: pulumi.Input<number>;
    transportprofilename?: pulumi.Input<string>;
    transportprotocol?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Lsntransportprofile resource.
 */
export interface LsntransportprofileArgs {
    finrsttimeout?: pulumi.Input<number>;
    groupsessionlimit?: pulumi.Input<number>;
    portpreserveparity?: pulumi.Input<string>;
    portpreserverange?: pulumi.Input<string>;
    portquota?: pulumi.Input<number>;
    sessionquota?: pulumi.Input<number>;
    sessiontimeout?: pulumi.Input<number>;
    stuntimeout?: pulumi.Input<number>;
    syncheck?: pulumi.Input<string>;
    synidletimeout?: pulumi.Input<number>;
    transportprofilename: pulumi.Input<string>;
    transportprotocol?: pulumi.Input<string>;
}
