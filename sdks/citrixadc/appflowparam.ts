// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Appflowparam extends pulumi.CustomResource {
    /**
     * Get an existing Appflowparam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppflowparamState, opts?: pulumi.CustomResourceOptions): Appflowparam {
        return new Appflowparam(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/appflowparam:Appflowparam';

    /**
     * Returns true if the given object is an instance of Appflowparam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Appflowparam {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Appflowparam.__pulumiType;
    }

    public readonly aaausername!: pulumi.Output<string>;
    public readonly analyticsauthtoken!: pulumi.Output<string>;
    public readonly appnamerefresh!: pulumi.Output<number>;
    public readonly auditlogs!: pulumi.Output<string>;
    public readonly cacheinsight!: pulumi.Output<string>;
    public readonly clienttrafficonly!: pulumi.Output<string>;
    public readonly connectionchaining!: pulumi.Output<string>;
    public readonly cqareporting!: pulumi.Output<string>;
    public readonly distributedtracing!: pulumi.Output<string>;
    public readonly disttracingsamplingrate!: pulumi.Output<number>;
    public readonly emailaddress!: pulumi.Output<string>;
    public readonly events!: pulumi.Output<string>;
    public readonly flowrecordinterval!: pulumi.Output<number>;
    public readonly gxsessionreporting!: pulumi.Output<string>;
    public readonly httpauthorization!: pulumi.Output<string>;
    public readonly httpcontenttype!: pulumi.Output<string>;
    public readonly httpcookie!: pulumi.Output<string>;
    public readonly httpdomain!: pulumi.Output<string>;
    public readonly httphost!: pulumi.Output<string>;
    public readonly httplocation!: pulumi.Output<string>;
    public readonly httpmethod!: pulumi.Output<string>;
    public readonly httpquerywithurl!: pulumi.Output<string>;
    public readonly httpreferer!: pulumi.Output<string>;
    public readonly httpsetcookie!: pulumi.Output<string>;
    public readonly httpsetcookie2!: pulumi.Output<string>;
    public readonly httpurl!: pulumi.Output<string>;
    public readonly httpuseragent!: pulumi.Output<string>;
    public readonly httpvia!: pulumi.Output<string>;
    public readonly httpxforwardedfor!: pulumi.Output<string>;
    public readonly identifiername!: pulumi.Output<string>;
    public readonly identifiersessionname!: pulumi.Output<string>;
    public readonly logstreamovernsip!: pulumi.Output<string>;
    public readonly lsnlogging!: pulumi.Output<string>;
    public readonly metrics!: pulumi.Output<string>;
    public readonly observationdomainid!: pulumi.Output<number>;
    public readonly observationdomainname!: pulumi.Output<string>;
    public readonly observationpointid!: pulumi.Output<number>;
    public readonly securityinsightrecordinterval!: pulumi.Output<number>;
    public readonly securityinsighttraffic!: pulumi.Output<string>;
    public readonly skipcacheredirectionhttptransaction!: pulumi.Output<string>;
    public readonly subscriberawareness!: pulumi.Output<string>;
    public readonly subscriberidobfuscation!: pulumi.Output<string>;
    public readonly subscriberidobfuscationalgo!: pulumi.Output<string>;
    public readonly tcpattackcounterinterval!: pulumi.Output<number>;
    public readonly templaterefresh!: pulumi.Output<number>;
    public readonly timeseriesovernsip!: pulumi.Output<string>;
    public readonly udppmtu!: pulumi.Output<number>;
    public readonly urlcategory!: pulumi.Output<string>;
    public readonly usagerecordinterval!: pulumi.Output<number>;
    public readonly videoinsight!: pulumi.Output<string>;
    public readonly websaasappusagereporting!: pulumi.Output<string>;

    /**
     * Create a Appflowparam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppflowparamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppflowparamArgs | AppflowparamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppflowparamState | undefined;
            resourceInputs["aaausername"] = state ? state.aaausername : undefined;
            resourceInputs["analyticsauthtoken"] = state ? state.analyticsauthtoken : undefined;
            resourceInputs["appnamerefresh"] = state ? state.appnamerefresh : undefined;
            resourceInputs["auditlogs"] = state ? state.auditlogs : undefined;
            resourceInputs["cacheinsight"] = state ? state.cacheinsight : undefined;
            resourceInputs["clienttrafficonly"] = state ? state.clienttrafficonly : undefined;
            resourceInputs["connectionchaining"] = state ? state.connectionchaining : undefined;
            resourceInputs["cqareporting"] = state ? state.cqareporting : undefined;
            resourceInputs["distributedtracing"] = state ? state.distributedtracing : undefined;
            resourceInputs["disttracingsamplingrate"] = state ? state.disttracingsamplingrate : undefined;
            resourceInputs["emailaddress"] = state ? state.emailaddress : undefined;
            resourceInputs["events"] = state ? state.events : undefined;
            resourceInputs["flowrecordinterval"] = state ? state.flowrecordinterval : undefined;
            resourceInputs["gxsessionreporting"] = state ? state.gxsessionreporting : undefined;
            resourceInputs["httpauthorization"] = state ? state.httpauthorization : undefined;
            resourceInputs["httpcontenttype"] = state ? state.httpcontenttype : undefined;
            resourceInputs["httpcookie"] = state ? state.httpcookie : undefined;
            resourceInputs["httpdomain"] = state ? state.httpdomain : undefined;
            resourceInputs["httphost"] = state ? state.httphost : undefined;
            resourceInputs["httplocation"] = state ? state.httplocation : undefined;
            resourceInputs["httpmethod"] = state ? state.httpmethod : undefined;
            resourceInputs["httpquerywithurl"] = state ? state.httpquerywithurl : undefined;
            resourceInputs["httpreferer"] = state ? state.httpreferer : undefined;
            resourceInputs["httpsetcookie"] = state ? state.httpsetcookie : undefined;
            resourceInputs["httpsetcookie2"] = state ? state.httpsetcookie2 : undefined;
            resourceInputs["httpurl"] = state ? state.httpurl : undefined;
            resourceInputs["httpuseragent"] = state ? state.httpuseragent : undefined;
            resourceInputs["httpvia"] = state ? state.httpvia : undefined;
            resourceInputs["httpxforwardedfor"] = state ? state.httpxforwardedfor : undefined;
            resourceInputs["identifiername"] = state ? state.identifiername : undefined;
            resourceInputs["identifiersessionname"] = state ? state.identifiersessionname : undefined;
            resourceInputs["logstreamovernsip"] = state ? state.logstreamovernsip : undefined;
            resourceInputs["lsnlogging"] = state ? state.lsnlogging : undefined;
            resourceInputs["metrics"] = state ? state.metrics : undefined;
            resourceInputs["observationdomainid"] = state ? state.observationdomainid : undefined;
            resourceInputs["observationdomainname"] = state ? state.observationdomainname : undefined;
            resourceInputs["observationpointid"] = state ? state.observationpointid : undefined;
            resourceInputs["securityinsightrecordinterval"] = state ? state.securityinsightrecordinterval : undefined;
            resourceInputs["securityinsighttraffic"] = state ? state.securityinsighttraffic : undefined;
            resourceInputs["skipcacheredirectionhttptransaction"] = state ? state.skipcacheredirectionhttptransaction : undefined;
            resourceInputs["subscriberawareness"] = state ? state.subscriberawareness : undefined;
            resourceInputs["subscriberidobfuscation"] = state ? state.subscriberidobfuscation : undefined;
            resourceInputs["subscriberidobfuscationalgo"] = state ? state.subscriberidobfuscationalgo : undefined;
            resourceInputs["tcpattackcounterinterval"] = state ? state.tcpattackcounterinterval : undefined;
            resourceInputs["templaterefresh"] = state ? state.templaterefresh : undefined;
            resourceInputs["timeseriesovernsip"] = state ? state.timeseriesovernsip : undefined;
            resourceInputs["udppmtu"] = state ? state.udppmtu : undefined;
            resourceInputs["urlcategory"] = state ? state.urlcategory : undefined;
            resourceInputs["usagerecordinterval"] = state ? state.usagerecordinterval : undefined;
            resourceInputs["videoinsight"] = state ? state.videoinsight : undefined;
            resourceInputs["websaasappusagereporting"] = state ? state.websaasappusagereporting : undefined;
        } else {
            const args = argsOrState as AppflowparamArgs | undefined;
            resourceInputs["aaausername"] = args ? args.aaausername : undefined;
            resourceInputs["analyticsauthtoken"] = args ? args.analyticsauthtoken : undefined;
            resourceInputs["appnamerefresh"] = args ? args.appnamerefresh : undefined;
            resourceInputs["auditlogs"] = args ? args.auditlogs : undefined;
            resourceInputs["cacheinsight"] = args ? args.cacheinsight : undefined;
            resourceInputs["clienttrafficonly"] = args ? args.clienttrafficonly : undefined;
            resourceInputs["connectionchaining"] = args ? args.connectionchaining : undefined;
            resourceInputs["cqareporting"] = args ? args.cqareporting : undefined;
            resourceInputs["distributedtracing"] = args ? args.distributedtracing : undefined;
            resourceInputs["disttracingsamplingrate"] = args ? args.disttracingsamplingrate : undefined;
            resourceInputs["emailaddress"] = args ? args.emailaddress : undefined;
            resourceInputs["events"] = args ? args.events : undefined;
            resourceInputs["flowrecordinterval"] = args ? args.flowrecordinterval : undefined;
            resourceInputs["gxsessionreporting"] = args ? args.gxsessionreporting : undefined;
            resourceInputs["httpauthorization"] = args ? args.httpauthorization : undefined;
            resourceInputs["httpcontenttype"] = args ? args.httpcontenttype : undefined;
            resourceInputs["httpcookie"] = args ? args.httpcookie : undefined;
            resourceInputs["httpdomain"] = args ? args.httpdomain : undefined;
            resourceInputs["httphost"] = args ? args.httphost : undefined;
            resourceInputs["httplocation"] = args ? args.httplocation : undefined;
            resourceInputs["httpmethod"] = args ? args.httpmethod : undefined;
            resourceInputs["httpquerywithurl"] = args ? args.httpquerywithurl : undefined;
            resourceInputs["httpreferer"] = args ? args.httpreferer : undefined;
            resourceInputs["httpsetcookie"] = args ? args.httpsetcookie : undefined;
            resourceInputs["httpsetcookie2"] = args ? args.httpsetcookie2 : undefined;
            resourceInputs["httpurl"] = args ? args.httpurl : undefined;
            resourceInputs["httpuseragent"] = args ? args.httpuseragent : undefined;
            resourceInputs["httpvia"] = args ? args.httpvia : undefined;
            resourceInputs["httpxforwardedfor"] = args ? args.httpxforwardedfor : undefined;
            resourceInputs["identifiername"] = args ? args.identifiername : undefined;
            resourceInputs["identifiersessionname"] = args ? args.identifiersessionname : undefined;
            resourceInputs["logstreamovernsip"] = args ? args.logstreamovernsip : undefined;
            resourceInputs["lsnlogging"] = args ? args.lsnlogging : undefined;
            resourceInputs["metrics"] = args ? args.metrics : undefined;
            resourceInputs["observationdomainid"] = args ? args.observationdomainid : undefined;
            resourceInputs["observationdomainname"] = args ? args.observationdomainname : undefined;
            resourceInputs["observationpointid"] = args ? args.observationpointid : undefined;
            resourceInputs["securityinsightrecordinterval"] = args ? args.securityinsightrecordinterval : undefined;
            resourceInputs["securityinsighttraffic"] = args ? args.securityinsighttraffic : undefined;
            resourceInputs["skipcacheredirectionhttptransaction"] = args ? args.skipcacheredirectionhttptransaction : undefined;
            resourceInputs["subscriberawareness"] = args ? args.subscriberawareness : undefined;
            resourceInputs["subscriberidobfuscation"] = args ? args.subscriberidobfuscation : undefined;
            resourceInputs["subscriberidobfuscationalgo"] = args ? args.subscriberidobfuscationalgo : undefined;
            resourceInputs["tcpattackcounterinterval"] = args ? args.tcpattackcounterinterval : undefined;
            resourceInputs["templaterefresh"] = args ? args.templaterefresh : undefined;
            resourceInputs["timeseriesovernsip"] = args ? args.timeseriesovernsip : undefined;
            resourceInputs["udppmtu"] = args ? args.udppmtu : undefined;
            resourceInputs["urlcategory"] = args ? args.urlcategory : undefined;
            resourceInputs["usagerecordinterval"] = args ? args.usagerecordinterval : undefined;
            resourceInputs["videoinsight"] = args ? args.videoinsight : undefined;
            resourceInputs["websaasappusagereporting"] = args ? args.websaasappusagereporting : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Appflowparam.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Appflowparam resources.
 */
export interface AppflowparamState {
    aaausername?: pulumi.Input<string>;
    analyticsauthtoken?: pulumi.Input<string>;
    appnamerefresh?: pulumi.Input<number>;
    auditlogs?: pulumi.Input<string>;
    cacheinsight?: pulumi.Input<string>;
    clienttrafficonly?: pulumi.Input<string>;
    connectionchaining?: pulumi.Input<string>;
    cqareporting?: pulumi.Input<string>;
    distributedtracing?: pulumi.Input<string>;
    disttracingsamplingrate?: pulumi.Input<number>;
    emailaddress?: pulumi.Input<string>;
    events?: pulumi.Input<string>;
    flowrecordinterval?: pulumi.Input<number>;
    gxsessionreporting?: pulumi.Input<string>;
    httpauthorization?: pulumi.Input<string>;
    httpcontenttype?: pulumi.Input<string>;
    httpcookie?: pulumi.Input<string>;
    httpdomain?: pulumi.Input<string>;
    httphost?: pulumi.Input<string>;
    httplocation?: pulumi.Input<string>;
    httpmethod?: pulumi.Input<string>;
    httpquerywithurl?: pulumi.Input<string>;
    httpreferer?: pulumi.Input<string>;
    httpsetcookie?: pulumi.Input<string>;
    httpsetcookie2?: pulumi.Input<string>;
    httpurl?: pulumi.Input<string>;
    httpuseragent?: pulumi.Input<string>;
    httpvia?: pulumi.Input<string>;
    httpxforwardedfor?: pulumi.Input<string>;
    identifiername?: pulumi.Input<string>;
    identifiersessionname?: pulumi.Input<string>;
    logstreamovernsip?: pulumi.Input<string>;
    lsnlogging?: pulumi.Input<string>;
    metrics?: pulumi.Input<string>;
    observationdomainid?: pulumi.Input<number>;
    observationdomainname?: pulumi.Input<string>;
    observationpointid?: pulumi.Input<number>;
    securityinsightrecordinterval?: pulumi.Input<number>;
    securityinsighttraffic?: pulumi.Input<string>;
    skipcacheredirectionhttptransaction?: pulumi.Input<string>;
    subscriberawareness?: pulumi.Input<string>;
    subscriberidobfuscation?: pulumi.Input<string>;
    subscriberidobfuscationalgo?: pulumi.Input<string>;
    tcpattackcounterinterval?: pulumi.Input<number>;
    templaterefresh?: pulumi.Input<number>;
    timeseriesovernsip?: pulumi.Input<string>;
    udppmtu?: pulumi.Input<number>;
    urlcategory?: pulumi.Input<string>;
    usagerecordinterval?: pulumi.Input<number>;
    videoinsight?: pulumi.Input<string>;
    websaasappusagereporting?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Appflowparam resource.
 */
export interface AppflowparamArgs {
    aaausername?: pulumi.Input<string>;
    analyticsauthtoken?: pulumi.Input<string>;
    appnamerefresh?: pulumi.Input<number>;
    auditlogs?: pulumi.Input<string>;
    cacheinsight?: pulumi.Input<string>;
    clienttrafficonly?: pulumi.Input<string>;
    connectionchaining?: pulumi.Input<string>;
    cqareporting?: pulumi.Input<string>;
    distributedtracing?: pulumi.Input<string>;
    disttracingsamplingrate?: pulumi.Input<number>;
    emailaddress?: pulumi.Input<string>;
    events?: pulumi.Input<string>;
    flowrecordinterval?: pulumi.Input<number>;
    gxsessionreporting?: pulumi.Input<string>;
    httpauthorization?: pulumi.Input<string>;
    httpcontenttype?: pulumi.Input<string>;
    httpcookie?: pulumi.Input<string>;
    httpdomain?: pulumi.Input<string>;
    httphost?: pulumi.Input<string>;
    httplocation?: pulumi.Input<string>;
    httpmethod?: pulumi.Input<string>;
    httpquerywithurl?: pulumi.Input<string>;
    httpreferer?: pulumi.Input<string>;
    httpsetcookie?: pulumi.Input<string>;
    httpsetcookie2?: pulumi.Input<string>;
    httpurl?: pulumi.Input<string>;
    httpuseragent?: pulumi.Input<string>;
    httpvia?: pulumi.Input<string>;
    httpxforwardedfor?: pulumi.Input<string>;
    identifiername?: pulumi.Input<string>;
    identifiersessionname?: pulumi.Input<string>;
    logstreamovernsip?: pulumi.Input<string>;
    lsnlogging?: pulumi.Input<string>;
    metrics?: pulumi.Input<string>;
    observationdomainid?: pulumi.Input<number>;
    observationdomainname?: pulumi.Input<string>;
    observationpointid?: pulumi.Input<number>;
    securityinsightrecordinterval?: pulumi.Input<number>;
    securityinsighttraffic?: pulumi.Input<string>;
    skipcacheredirectionhttptransaction?: pulumi.Input<string>;
    subscriberawareness?: pulumi.Input<string>;
    subscriberidobfuscation?: pulumi.Input<string>;
    subscriberidobfuscationalgo?: pulumi.Input<string>;
    tcpattackcounterinterval?: pulumi.Input<number>;
    templaterefresh?: pulumi.Input<number>;
    timeseriesovernsip?: pulumi.Input<string>;
    udppmtu?: pulumi.Input<number>;
    urlcategory?: pulumi.Input<string>;
    usagerecordinterval?: pulumi.Input<number>;
    videoinsight?: pulumi.Input<string>;
    websaasappusagereporting?: pulumi.Input<string>;
}
