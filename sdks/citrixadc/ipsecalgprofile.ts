// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipsecalgprofile extends pulumi.CustomResource {
    /**
     * Get an existing Ipsecalgprofile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpsecalgprofileState, opts?: pulumi.CustomResourceOptions): Ipsecalgprofile {
        return new Ipsecalgprofile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/ipsecalgprofile:Ipsecalgprofile';

    /**
     * Returns true if the given object is an instance of Ipsecalgprofile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipsecalgprofile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipsecalgprofile.__pulumiType;
    }

    public readonly connfailover!: pulumi.Output<string>;
    public readonly espgatetimeout!: pulumi.Output<number>;
    public readonly espsessiontimeout!: pulumi.Output<number>;
    public readonly ikesessiontimeout!: pulumi.Output<number>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a Ipsecalgprofile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpsecalgprofileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpsecalgprofileArgs | IpsecalgprofileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpsecalgprofileState | undefined;
            resourceInputs["connfailover"] = state ? state.connfailover : undefined;
            resourceInputs["espgatetimeout"] = state ? state.espgatetimeout : undefined;
            resourceInputs["espsessiontimeout"] = state ? state.espsessiontimeout : undefined;
            resourceInputs["ikesessiontimeout"] = state ? state.ikesessiontimeout : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as IpsecalgprofileArgs | undefined;
            resourceInputs["connfailover"] = args ? args.connfailover : undefined;
            resourceInputs["espgatetimeout"] = args ? args.espgatetimeout : undefined;
            resourceInputs["espsessiontimeout"] = args ? args.espsessiontimeout : undefined;
            resourceInputs["ikesessiontimeout"] = args ? args.ikesessiontimeout : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipsecalgprofile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipsecalgprofile resources.
 */
export interface IpsecalgprofileState {
    connfailover?: pulumi.Input<string>;
    espgatetimeout?: pulumi.Input<number>;
    espsessiontimeout?: pulumi.Input<number>;
    ikesessiontimeout?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipsecalgprofile resource.
 */
export interface IpsecalgprofileArgs {
    connfailover?: pulumi.Input<string>;
    espgatetimeout?: pulumi.Input<number>;
    espsessiontimeout?: pulumi.Input<number>;
    ikesessiontimeout?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
