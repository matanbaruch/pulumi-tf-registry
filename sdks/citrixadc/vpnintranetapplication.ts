// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Vpnintranetapplication extends pulumi.CustomResource {
    /**
     * Get an existing Vpnintranetapplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpnintranetapplicationState, opts?: pulumi.CustomResourceOptions): Vpnintranetapplication {
        return new Vpnintranetapplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/vpnintranetapplication:Vpnintranetapplication';

    /**
     * Returns true if the given object is an instance of Vpnintranetapplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpnintranetapplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpnintranetapplication.__pulumiType;
    }

    public readonly clientapplications!: pulumi.Output<string[]>;
    public readonly destip!: pulumi.Output<string>;
    public readonly destport!: pulumi.Output<string>;
    public readonly hostname!: pulumi.Output<string>;
    public readonly interception!: pulumi.Output<string>;
    public readonly intranetapplication!: pulumi.Output<string>;
    public readonly iprange!: pulumi.Output<string>;
    public readonly netmask!: pulumi.Output<string>;
    public readonly protocol!: pulumi.Output<string>;
    public readonly spoofiip!: pulumi.Output<string>;
    public readonly srcip!: pulumi.Output<string>;
    public readonly srcport!: pulumi.Output<number>;

    /**
     * Create a Vpnintranetapplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpnintranetapplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpnintranetapplicationArgs | VpnintranetapplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpnintranetapplicationState | undefined;
            resourceInputs["clientapplications"] = state ? state.clientapplications : undefined;
            resourceInputs["destip"] = state ? state.destip : undefined;
            resourceInputs["destport"] = state ? state.destport : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["interception"] = state ? state.interception : undefined;
            resourceInputs["intranetapplication"] = state ? state.intranetapplication : undefined;
            resourceInputs["iprange"] = state ? state.iprange : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["spoofiip"] = state ? state.spoofiip : undefined;
            resourceInputs["srcip"] = state ? state.srcip : undefined;
            resourceInputs["srcport"] = state ? state.srcport : undefined;
        } else {
            const args = argsOrState as VpnintranetapplicationArgs | undefined;
            if ((!args || args.intranetapplication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'intranetapplication'");
            }
            resourceInputs["clientapplications"] = args ? args.clientapplications : undefined;
            resourceInputs["destip"] = args ? args.destip : undefined;
            resourceInputs["destport"] = args ? args.destport : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["interception"] = args ? args.interception : undefined;
            resourceInputs["intranetapplication"] = args ? args.intranetapplication : undefined;
            resourceInputs["iprange"] = args ? args.iprange : undefined;
            resourceInputs["netmask"] = args ? args.netmask : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["spoofiip"] = args ? args.spoofiip : undefined;
            resourceInputs["srcip"] = args ? args.srcip : undefined;
            resourceInputs["srcport"] = args ? args.srcport : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpnintranetapplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Vpnintranetapplication resources.
 */
export interface VpnintranetapplicationState {
    clientapplications?: pulumi.Input<pulumi.Input<string>[]>;
    destip?: pulumi.Input<string>;
    destport?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    interception?: pulumi.Input<string>;
    intranetapplication?: pulumi.Input<string>;
    iprange?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    spoofiip?: pulumi.Input<string>;
    srcip?: pulumi.Input<string>;
    srcport?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Vpnintranetapplication resource.
 */
export interface VpnintranetapplicationArgs {
    clientapplications?: pulumi.Input<pulumi.Input<string>[]>;
    destip?: pulumi.Input<string>;
    destport?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    interception?: pulumi.Input<string>;
    intranetapplication: pulumi.Input<string>;
    iprange?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    protocol?: pulumi.Input<string>;
    spoofiip?: pulumi.Input<string>;
    srcip?: pulumi.Input<string>;
    srcport?: pulumi.Input<number>;
}
