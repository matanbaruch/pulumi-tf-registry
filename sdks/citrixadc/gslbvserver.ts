// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Gslbvserver extends pulumi.CustomResource {
    /**
     * Get an existing Gslbvserver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GslbvserverState, opts?: pulumi.CustomResourceOptions): Gslbvserver {
        return new Gslbvserver(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'citrixadc:index/gslbvserver:Gslbvserver';

    /**
     * Returns true if the given object is an instance of Gslbvserver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gslbvserver {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gslbvserver.__pulumiType;
    }

    public readonly appflowlog!: pulumi.Output<string>;
    public readonly backupip!: pulumi.Output<string>;
    public readonly backuplbmethod!: pulumi.Output<string>;
    public readonly backupsessiontimeout!: pulumi.Output<number>;
    public readonly backupvserver!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string>;
    public readonly considereffectivestate!: pulumi.Output<string>;
    public readonly cookiedomain!: pulumi.Output<string>;
    public readonly cookietimeout!: pulumi.Output<number>;
    public readonly disableprimaryondown!: pulumi.Output<string>;
    public readonly dnsrecordtype!: pulumi.Output<string>;
    public readonly domainname!: pulumi.Output<string>;
    public readonly domains!: pulumi.Output<outputs.GslbvserverDomain[] | undefined>;
    public readonly dynamicweight!: pulumi.Output<string>;
    public readonly ecs!: pulumi.Output<string>;
    public readonly ecsaddrvalidation!: pulumi.Output<string>;
    public readonly edr!: pulumi.Output<string>;
    public readonly iptype!: pulumi.Output<string>;
    public readonly lbmethod!: pulumi.Output<string>;
    public readonly mir!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly netmask!: pulumi.Output<string>;
    public readonly persistenceid!: pulumi.Output<number>;
    public readonly persistencetype!: pulumi.Output<string>;
    public readonly persistmask!: pulumi.Output<string>;
    public readonly servicename!: pulumi.Output<string>;
    public readonly services!: pulumi.Output<outputs.GslbvserverService[] | undefined>;
    public readonly servicetype!: pulumi.Output<string>;
    public readonly sitedomainttl!: pulumi.Output<number>;
    public readonly sobackupaction!: pulumi.Output<string>;
    public readonly somethod!: pulumi.Output<string>;
    public readonly sopersistence!: pulumi.Output<string>;
    public readonly sopersistencetimeout!: pulumi.Output<number>;
    public readonly sothreshold!: pulumi.Output<number>;
    public readonly state!: pulumi.Output<string>;
    public readonly timeout!: pulumi.Output<number>;
    public readonly tolerance!: pulumi.Output<number>;
    public readonly ttl!: pulumi.Output<number>;
    public readonly v6netmasklen!: pulumi.Output<number>;
    public readonly v6persistmasklen!: pulumi.Output<number>;
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a Gslbvserver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GslbvserverArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GslbvserverArgs | GslbvserverState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GslbvserverState | undefined;
            resourceInputs["appflowlog"] = state ? state.appflowlog : undefined;
            resourceInputs["backupip"] = state ? state.backupip : undefined;
            resourceInputs["backuplbmethod"] = state ? state.backuplbmethod : undefined;
            resourceInputs["backupsessiontimeout"] = state ? state.backupsessiontimeout : undefined;
            resourceInputs["backupvserver"] = state ? state.backupvserver : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["considereffectivestate"] = state ? state.considereffectivestate : undefined;
            resourceInputs["cookiedomain"] = state ? state.cookiedomain : undefined;
            resourceInputs["cookietimeout"] = state ? state.cookietimeout : undefined;
            resourceInputs["disableprimaryondown"] = state ? state.disableprimaryondown : undefined;
            resourceInputs["dnsrecordtype"] = state ? state.dnsrecordtype : undefined;
            resourceInputs["domainname"] = state ? state.domainname : undefined;
            resourceInputs["domains"] = state ? state.domains : undefined;
            resourceInputs["dynamicweight"] = state ? state.dynamicweight : undefined;
            resourceInputs["ecs"] = state ? state.ecs : undefined;
            resourceInputs["ecsaddrvalidation"] = state ? state.ecsaddrvalidation : undefined;
            resourceInputs["edr"] = state ? state.edr : undefined;
            resourceInputs["iptype"] = state ? state.iptype : undefined;
            resourceInputs["lbmethod"] = state ? state.lbmethod : undefined;
            resourceInputs["mir"] = state ? state.mir : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["persistenceid"] = state ? state.persistenceid : undefined;
            resourceInputs["persistencetype"] = state ? state.persistencetype : undefined;
            resourceInputs["persistmask"] = state ? state.persistmask : undefined;
            resourceInputs["servicename"] = state ? state.servicename : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
            resourceInputs["servicetype"] = state ? state.servicetype : undefined;
            resourceInputs["sitedomainttl"] = state ? state.sitedomainttl : undefined;
            resourceInputs["sobackupaction"] = state ? state.sobackupaction : undefined;
            resourceInputs["somethod"] = state ? state.somethod : undefined;
            resourceInputs["sopersistence"] = state ? state.sopersistence : undefined;
            resourceInputs["sopersistencetimeout"] = state ? state.sopersistencetimeout : undefined;
            resourceInputs["sothreshold"] = state ? state.sothreshold : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["tolerance"] = state ? state.tolerance : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
            resourceInputs["v6netmasklen"] = state ? state.v6netmasklen : undefined;
            resourceInputs["v6persistmasklen"] = state ? state.v6persistmasklen : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as GslbvserverArgs | undefined;
            resourceInputs["appflowlog"] = args ? args.appflowlog : undefined;
            resourceInputs["backupip"] = args ? args.backupip : undefined;
            resourceInputs["backuplbmethod"] = args ? args.backuplbmethod : undefined;
            resourceInputs["backupsessiontimeout"] = args ? args.backupsessiontimeout : undefined;
            resourceInputs["backupvserver"] = args ? args.backupvserver : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["considereffectivestate"] = args ? args.considereffectivestate : undefined;
            resourceInputs["cookiedomain"] = args ? args.cookiedomain : undefined;
            resourceInputs["cookietimeout"] = args ? args.cookietimeout : undefined;
            resourceInputs["disableprimaryondown"] = args ? args.disableprimaryondown : undefined;
            resourceInputs["dnsrecordtype"] = args ? args.dnsrecordtype : undefined;
            resourceInputs["domainname"] = args ? args.domainname : undefined;
            resourceInputs["domains"] = args ? args.domains : undefined;
            resourceInputs["dynamicweight"] = args ? args.dynamicweight : undefined;
            resourceInputs["ecs"] = args ? args.ecs : undefined;
            resourceInputs["ecsaddrvalidation"] = args ? args.ecsaddrvalidation : undefined;
            resourceInputs["edr"] = args ? args.edr : undefined;
            resourceInputs["iptype"] = args ? args.iptype : undefined;
            resourceInputs["lbmethod"] = args ? args.lbmethod : undefined;
            resourceInputs["mir"] = args ? args.mir : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netmask"] = args ? args.netmask : undefined;
            resourceInputs["persistenceid"] = args ? args.persistenceid : undefined;
            resourceInputs["persistencetype"] = args ? args.persistencetype : undefined;
            resourceInputs["persistmask"] = args ? args.persistmask : undefined;
            resourceInputs["servicename"] = args ? args.servicename : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
            resourceInputs["servicetype"] = args ? args.servicetype : undefined;
            resourceInputs["sitedomainttl"] = args ? args.sitedomainttl : undefined;
            resourceInputs["sobackupaction"] = args ? args.sobackupaction : undefined;
            resourceInputs["somethod"] = args ? args.somethod : undefined;
            resourceInputs["sopersistence"] = args ? args.sopersistence : undefined;
            resourceInputs["sopersistencetimeout"] = args ? args.sopersistencetimeout : undefined;
            resourceInputs["sothreshold"] = args ? args.sothreshold : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["tolerance"] = args ? args.tolerance : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["v6netmasklen"] = args ? args.v6netmasklen : undefined;
            resourceInputs["v6persistmasklen"] = args ? args.v6persistmasklen : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gslbvserver.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Gslbvserver resources.
 */
export interface GslbvserverState {
    appflowlog?: pulumi.Input<string>;
    backupip?: pulumi.Input<string>;
    backuplbmethod?: pulumi.Input<string>;
    backupsessiontimeout?: pulumi.Input<number>;
    backupvserver?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    considereffectivestate?: pulumi.Input<string>;
    cookiedomain?: pulumi.Input<string>;
    cookietimeout?: pulumi.Input<number>;
    disableprimaryondown?: pulumi.Input<string>;
    dnsrecordtype?: pulumi.Input<string>;
    domainname?: pulumi.Input<string>;
    domains?: pulumi.Input<pulumi.Input<inputs.GslbvserverDomain>[]>;
    dynamicweight?: pulumi.Input<string>;
    ecs?: pulumi.Input<string>;
    ecsaddrvalidation?: pulumi.Input<string>;
    edr?: pulumi.Input<string>;
    iptype?: pulumi.Input<string>;
    lbmethod?: pulumi.Input<string>;
    mir?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    persistenceid?: pulumi.Input<number>;
    persistencetype?: pulumi.Input<string>;
    persistmask?: pulumi.Input<string>;
    servicename?: pulumi.Input<string>;
    services?: pulumi.Input<pulumi.Input<inputs.GslbvserverService>[]>;
    servicetype?: pulumi.Input<string>;
    sitedomainttl?: pulumi.Input<number>;
    sobackupaction?: pulumi.Input<string>;
    somethod?: pulumi.Input<string>;
    sopersistence?: pulumi.Input<string>;
    sopersistencetimeout?: pulumi.Input<number>;
    sothreshold?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    tolerance?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
    v6netmasklen?: pulumi.Input<number>;
    v6persistmasklen?: pulumi.Input<number>;
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Gslbvserver resource.
 */
export interface GslbvserverArgs {
    appflowlog?: pulumi.Input<string>;
    backupip?: pulumi.Input<string>;
    backuplbmethod?: pulumi.Input<string>;
    backupsessiontimeout?: pulumi.Input<number>;
    backupvserver?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    considereffectivestate?: pulumi.Input<string>;
    cookiedomain?: pulumi.Input<string>;
    cookietimeout?: pulumi.Input<number>;
    disableprimaryondown?: pulumi.Input<string>;
    dnsrecordtype?: pulumi.Input<string>;
    domainname?: pulumi.Input<string>;
    domains?: pulumi.Input<pulumi.Input<inputs.GslbvserverDomain>[]>;
    dynamicweight?: pulumi.Input<string>;
    ecs?: pulumi.Input<string>;
    ecsaddrvalidation?: pulumi.Input<string>;
    edr?: pulumi.Input<string>;
    iptype?: pulumi.Input<string>;
    lbmethod?: pulumi.Input<string>;
    mir?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    netmask?: pulumi.Input<string>;
    persistenceid?: pulumi.Input<number>;
    persistencetype?: pulumi.Input<string>;
    persistmask?: pulumi.Input<string>;
    servicename?: pulumi.Input<string>;
    services?: pulumi.Input<pulumi.Input<inputs.GslbvserverService>[]>;
    servicetype?: pulumi.Input<string>;
    sitedomainttl?: pulumi.Input<number>;
    sobackupaction?: pulumi.Input<string>;
    somethod?: pulumi.Input<string>;
    sopersistence?: pulumi.Input<string>;
    sopersistencetimeout?: pulumi.Input<number>;
    sothreshold?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    tolerance?: pulumi.Input<number>;
    ttl?: pulumi.Input<number>;
    v6netmasklen?: pulumi.Input<number>;
    v6persistmasklen?: pulumi.Input<number>;
    weight?: pulumi.Input<number>;
}
