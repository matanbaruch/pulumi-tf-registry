// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetDestinationsDestination {
    id: string;
    kind: string;
    name: string;
}

export interface GetDestinationsFilter {
    /**
     * The kind of the destination.
     */
    kind?: string;
    /**
     * The name of the destination.
     */
    name?: string;
}

export interface GetGroupsFilter {
    /**
     * The name of the group.
     */
    name?: string;
    /**
     * The ID of the user who belongs to this group. Cannot be used with `user_name`.
     */
    userId?: string;
    /**
     * The name of the user who belongs to this group. Cannot be used with `user_id`.
     */
    userName?: string;
}

export interface GetGroupsGroup {
    id: string;
    name: string;
    users: string[];
}

export interface GetUsersFilter {
    /**
     * The ID of the group where user is a member. Cannot be used with `group_name`.
     */
    groupId?: string;
    /**
     * The name of the group where user is a member. Cannot be used with `group_id`.
     */
    groupName?: string;
    /**
     * The name of the user.
     */
    name?: string;
}

export interface GetUsersUser {
    groups: string[];
    id: string;
    name: string;
}

export interface GrantInfra {
    /**
     * The name of the Infra role to assign to the user. Valid roles are `admin` or `view`.
     */
    role: string;
}

export interface GrantKubernetes {
    /**
     * The name of the Kubernetes cluster to assign to the user.
     */
    cluster: string;
    /**
     * The namespace of the Kubernetes cluster to assign to the name.
     */
    namespace?: string;
    /**
     * The name of the Kubernetes ClusterRole to assign to the user. See [Kubernetes Roles](https://infrahq.com/docs/integrations/kubernetes#roles) for a list of valid roles.
     */
    role: string;
}

export interface IdentityProviderAzure {
    /**
     * The Azure AD tenant ID.
     */
    tenantId: string;
}

export interface IdentityProviderGoogle {
    /**
     * A Google workspace admin user email. Infra will impersonate this user when making API calls to retrieve Google groups. If set, `service_account_key` must also be set.
     */
    adminEmail?: string;
    /**
     * A Google service account private key file. Must be a JSON-formatted string. If set, `admin_email` must also be set.
     */
    serviceAccountKey?: string;
}

export interface IdentityProviderOkta {
    /**
     * The full Okta authorization server URL. Must start with `https://`.
     */
    issuer: string;
}

