// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Grant extends pulumi.CustomResource {
    /**
     * Get an existing Grant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GrantState, opts?: pulumi.CustomResourceOptions): Grant {
        return new Grant(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infra:index/grant:Grant';

    /**
     * Returns true if the given object is an instance of Grant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Grant {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Grant.__pulumiType;
    }

    /**
     * The ID of the group to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * The name of the group to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * Infra grant configurations. One of `infra`, `kubernetes` must be set.
     */
    public readonly infra!: pulumi.Output<outputs.GrantInfra | undefined>;
    /**
     * Kubernetes grant configurations. One of `infra`, `kubernetes` must be set.
     */
    public readonly kubernetes!: pulumi.Output<outputs.GrantKubernetes | undefined>;
    /**
     * The ID of the user to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    public readonly userId!: pulumi.Output<string>;
    /**
     * The email of the user to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a Grant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GrantArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GrantArgs | GrantState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GrantState | undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["infra"] = state ? state.infra : undefined;
            resourceInputs["kubernetes"] = state ? state.kubernetes : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as GrantArgs | undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["infra"] = args ? args.infra : undefined;
            resourceInputs["kubernetes"] = args ? args.kubernetes : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Grant.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Grant resources.
 */
export interface GrantState {
    /**
     * The ID of the group to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the group to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Infra grant configurations. One of `infra`, `kubernetes` must be set.
     */
    infra?: pulumi.Input<inputs.GrantInfra>;
    /**
     * Kubernetes grant configurations. One of `infra`, `kubernetes` must be set.
     */
    kubernetes?: pulumi.Input<inputs.GrantKubernetes>;
    /**
     * The ID of the user to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    userId?: pulumi.Input<string>;
    /**
     * The email of the user to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Grant resource.
 */
export interface GrantArgs {
    /**
     * The ID of the group to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the group to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Infra grant configurations. One of `infra`, `kubernetes` must be set.
     */
    infra?: pulumi.Input<inputs.GrantInfra>;
    /**
     * Kubernetes grant configurations. One of `infra`, `kubernetes` must be set.
     */
    kubernetes?: pulumi.Input<inputs.GrantKubernetes>;
    /**
     * The ID of the user to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    userId?: pulumi.Input<string>;
    /**
     * The email of the user to assign this grant. One of `user_id`, `user_name`, `group_id`, `group_name` must be set.
     */
    userName?: pulumi.Input<string>;
}
