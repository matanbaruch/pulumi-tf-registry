// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IdentityProvider extends pulumi.CustomResource {
    /**
     * Get an existing IdentityProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IdentityProviderState, opts?: pulumi.CustomResourceOptions): IdentityProvider {
        return new IdentityProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infra:index/identityProvider:IdentityProvider';

    /**
     * Returns true if the given object is an instance of IdentityProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IdentityProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IdentityProvider.__pulumiType;
    }

    /**
     * Azure AD identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    public readonly azure!: pulumi.Output<outputs.IdentityProviderAzure | undefined>;
    /**
     * The identity provider's OIDC client ID.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * The identity provider's OIDC client secret.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * Google identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    public readonly google!: pulumi.Output<outputs.IdentityProviderGoogle | undefined>;
    /**
     * The identity provider's full authorization server URL. Must start with `https://`. One of `issuer`, `google`, `azure`,
     * `okta` must be set.
     */
    public readonly issuer!: pulumi.Output<string>;
    /**
     * The identity provider's name. If omitted, a name will be automatically generated. Identity provider names may include
     * letters (uppercase and lowercase), numbers, underscores `_`, hyphens `-`, and periods `.`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Okta identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    public readonly okta!: pulumi.Output<outputs.IdentityProviderOkta | undefined>;

    /**
     * Create a IdentityProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IdentityProviderArgs | IdentityProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IdentityProviderState | undefined;
            resourceInputs["azure"] = state ? state.azure : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["google"] = state ? state.google : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["okta"] = state ? state.okta : undefined;
        } else {
            const args = argsOrState as IdentityProviderArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            resourceInputs["azure"] = args ? args.azure : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["google"] = args ? args.google : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["okta"] = args ? args.okta : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IdentityProvider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IdentityProvider resources.
 */
export interface IdentityProviderState {
    /**
     * Azure AD identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    azure?: pulumi.Input<inputs.IdentityProviderAzure>;
    /**
     * The identity provider's OIDC client ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The identity provider's OIDC client secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Google identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    google?: pulumi.Input<inputs.IdentityProviderGoogle>;
    /**
     * The identity provider's full authorization server URL. Must start with `https://`. One of `issuer`, `google`, `azure`,
     * `okta` must be set.
     */
    issuer?: pulumi.Input<string>;
    /**
     * The identity provider's name. If omitted, a name will be automatically generated. Identity provider names may include
     * letters (uppercase and lowercase), numbers, underscores `_`, hyphens `-`, and periods `.`.
     */
    name?: pulumi.Input<string>;
    /**
     * Okta identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    okta?: pulumi.Input<inputs.IdentityProviderOkta>;
}

/**
 * The set of arguments for constructing a IdentityProvider resource.
 */
export interface IdentityProviderArgs {
    /**
     * Azure AD identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    azure?: pulumi.Input<inputs.IdentityProviderAzure>;
    /**
     * The identity provider's OIDC client ID.
     */
    clientId: pulumi.Input<string>;
    /**
     * The identity provider's OIDC client secret.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Google identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    google?: pulumi.Input<inputs.IdentityProviderGoogle>;
    /**
     * The identity provider's full authorization server URL. Must start with `https://`. One of `issuer`, `google`, `azure`,
     * `okta` must be set.
     */
    issuer?: pulumi.Input<string>;
    /**
     * The identity provider's name. If omitted, a name will be automatically generated. Identity provider names may include
     * letters (uppercase and lowercase), numbers, underscores `_`, hyphens `-`, and periods `.`.
     */
    name?: pulumi.Input<string>;
    /**
     * Okta identity provider configurations. One of `issuer`, `google`, `azure`, `okta` must be set.
     */
    okta?: pulumi.Input<inputs.IdentityProviderOkta>;
}
