// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("infra");

/**
 * The access key used to authenticate with the Infra server. Can also be sourced from `INFRA_ACCESS_KEY`.
 */
export declare const accessKey: string | undefined;
Object.defineProperty(exports, "accessKey", {
    get() {
        return __config.get("accessKey");
    },
    enumerable: true,
});

export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

/**
 * The server's PEM-encoded public certificate for client verification. Can also be sourced from
 * `INFRA_SERVER_CERTIFICATE`. Cannot be used with `skip_tls_verify`, `server_certificate_file`.
 */
export declare const serverCertificate: string | undefined;
Object.defineProperty(exports, "serverCertificate", {
    get() {
        return __config.get("serverCertificate");
    },
    enumerable: true,
});

/**
 * The server's PEM-encoded public certificate file for client verification. Can also be sourced from
 * `INFRA_SERVER_CERTIFICATE_FILE`. Cannot be used with `skip_tls_verify`, `server_certificate`.
 */
export declare const serverCertificateFile: string | undefined;
Object.defineProperty(exports, "serverCertificateFile", {
    get() {
        return __config.get("serverCertificateFile");
    },
    enumerable: true,
});

/**
 * Controls client verification of the server certificate. This should only be `true` for testing or development. Can also
 * be sourced from`INFRA_SKIP_TLS_VERIFY`. Cannot be used with `server_certificate`, `server_certificate_file`.
 */
export declare const skipTlsVerify: boolean | undefined;
Object.defineProperty(exports, "skipTlsVerify", {
    get() {
        return __config.getObject<boolean>("skipTlsVerify");
    },
    enumerable: true,
});

