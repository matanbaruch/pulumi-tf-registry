// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnAuthenticationKerberosRealm(args: GetMsgVpnAuthenticationKerberosRealmArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnAuthenticationKerberosRealmResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getMsgVpnAuthenticationKerberosRealm:getMsgVpnAuthenticationKerberosRealm", {
        "kerberosRealmName": args.kerberosRealmName,
        "msgVpnName": args.msgVpnName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnAuthenticationKerberosRealm.
 */
export interface GetMsgVpnAuthenticationKerberosRealmArgs {
    kerberosRealmName: string;
    msgVpnName: string;
}

/**
 * A collection of values returned by getMsgVpnAuthenticationKerberosRealm.
 */
export interface GetMsgVpnAuthenticationKerberosRealmResult {
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kdcAddress: string;
    readonly kerberosRealmName: string;
    readonly msgVpnName: string;
}
export function getMsgVpnAuthenticationKerberosRealmOutput(args: GetMsgVpnAuthenticationKerberosRealmOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnAuthenticationKerberosRealmResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnAuthenticationKerberosRealm(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnAuthenticationKerberosRealm.
 */
export interface GetMsgVpnAuthenticationKerberosRealmOutputArgs {
    kerberosRealmName: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
}
