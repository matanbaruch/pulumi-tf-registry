// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnMqttSessionSubscription(args: GetMsgVpnMqttSessionSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnMqttSessionSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getMsgVpnMqttSessionSubscription:getMsgVpnMqttSessionSubscription", {
        "mqttSessionClientId": args.mqttSessionClientId,
        "mqttSessionVirtualRouter": args.mqttSessionVirtualRouter,
        "msgVpnName": args.msgVpnName,
        "subscriptionTopic": args.subscriptionTopic,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnMqttSessionSubscription.
 */
export interface GetMsgVpnMqttSessionSubscriptionArgs {
    mqttSessionClientId: string;
    mqttSessionVirtualRouter: string;
    msgVpnName: string;
    subscriptionTopic: string;
}

/**
 * A collection of values returned by getMsgVpnMqttSessionSubscription.
 */
export interface GetMsgVpnMqttSessionSubscriptionResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly mqttSessionClientId: string;
    readonly mqttSessionVirtualRouter: string;
    readonly msgVpnName: string;
    readonly subscriptionQos: number;
    readonly subscriptionTopic: string;
}
export function getMsgVpnMqttSessionSubscriptionOutput(args: GetMsgVpnMqttSessionSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnMqttSessionSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnMqttSessionSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnMqttSessionSubscription.
 */
export interface GetMsgVpnMqttSessionSubscriptionOutputArgs {
    mqttSessionClientId: pulumi.Input<string>;
    mqttSessionVirtualRouter: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
    subscriptionTopic: pulumi.Input<string>;
}
