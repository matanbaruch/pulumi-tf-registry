// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOauthProfileClientAuthorizationParameter(args: GetOauthProfileClientAuthorizationParameterArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthProfileClientAuthorizationParameterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getOauthProfileClientAuthorizationParameter:getOauthProfileClientAuthorizationParameter", {
        "authorizationParameterName": args.authorizationParameterName,
        "oauthProfileName": args.oauthProfileName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOauthProfileClientAuthorizationParameter.
 */
export interface GetOauthProfileClientAuthorizationParameterArgs {
    authorizationParameterName: string;
    oauthProfileName: string;
}

/**
 * A collection of values returned by getOauthProfileClientAuthorizationParameter.
 */
export interface GetOauthProfileClientAuthorizationParameterResult {
    readonly authorizationParameterName: string;
    readonly authorizationParameterValue: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly oauthProfileName: string;
}
export function getOauthProfileClientAuthorizationParameterOutput(args: GetOauthProfileClientAuthorizationParameterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthProfileClientAuthorizationParameterResult> {
    return pulumi.output(args).apply((a: any) => getOauthProfileClientAuthorizationParameter(a, opts))
}

/**
 * A collection of arguments for invoking getOauthProfileClientAuthorizationParameter.
 */
export interface GetOauthProfileClientAuthorizationParameterOutputArgs {
    authorizationParameterName: pulumi.Input<string>;
    oauthProfileName: pulumi.Input<string>;
}
