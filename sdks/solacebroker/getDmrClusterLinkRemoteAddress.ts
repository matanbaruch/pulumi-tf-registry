// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDmrClusterLinkRemoteAddress(args: GetDmrClusterLinkRemoteAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetDmrClusterLinkRemoteAddressResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getDmrClusterLinkRemoteAddress:getDmrClusterLinkRemoteAddress", {
        "dmrClusterName": args.dmrClusterName,
        "remoteAddress": args.remoteAddress,
        "remoteNodeName": args.remoteNodeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDmrClusterLinkRemoteAddress.
 */
export interface GetDmrClusterLinkRemoteAddressArgs {
    dmrClusterName: string;
    remoteAddress: string;
    remoteNodeName: string;
}

/**
 * A collection of values returned by getDmrClusterLinkRemoteAddress.
 */
export interface GetDmrClusterLinkRemoteAddressResult {
    readonly dmrClusterName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly remoteAddress: string;
    readonly remoteNodeName: string;
}
export function getDmrClusterLinkRemoteAddressOutput(args: GetDmrClusterLinkRemoteAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDmrClusterLinkRemoteAddressResult> {
    return pulumi.output(args).apply((a: any) => getDmrClusterLinkRemoteAddress(a, opts))
}

/**
 * A collection of arguments for invoking getDmrClusterLinkRemoteAddress.
 */
export interface GetDmrClusterLinkRemoteAddressOutputArgs {
    dmrClusterName: pulumi.Input<string>;
    remoteAddress: pulumi.Input<string>;
    remoteNodeName: pulumi.Input<string>;
}
