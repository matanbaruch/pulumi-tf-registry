// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getClientCertAuthority(args: GetClientCertAuthorityArgs, opts?: pulumi.InvokeOptions): Promise<GetClientCertAuthorityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getClientCertAuthority:getClientCertAuthority", {
        "certAuthorityName": args.certAuthorityName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClientCertAuthority.
 */
export interface GetClientCertAuthorityArgs {
    certAuthorityName: string;
}

/**
 * A collection of values returned by getClientCertAuthority.
 */
export interface GetClientCertAuthorityResult {
    readonly certAuthorityName: string;
    readonly certContent: string;
    readonly crlDayList: string;
    readonly crlTimeList: string;
    readonly crlUrl: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ocspNonResponderCertEnabled: boolean;
    readonly ocspOverrideUrl: string;
    readonly ocspTimeout: number;
    readonly revocationCheckEnabled: boolean;
}
export function getClientCertAuthorityOutput(args: GetClientCertAuthorityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClientCertAuthorityResult> {
    return pulumi.output(args).apply((a: any) => getClientCertAuthority(a, opts))
}

/**
 * A collection of arguments for invoking getClientCertAuthority.
 */
export interface GetClientCertAuthorityOutputArgs {
    certAuthorityName: pulumi.Input<string>;
}
