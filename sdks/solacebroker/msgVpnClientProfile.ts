// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MsgVpnClientProfile extends pulumi.CustomResource {
    /**
     * Get an existing MsgVpnClientProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MsgVpnClientProfileState, opts?: pulumi.CustomResourceOptions): MsgVpnClientProfile {
        return new MsgVpnClientProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebroker:index/msgVpnClientProfile:MsgVpnClientProfile';

    /**
     * Returns true if the given object is an instance of MsgVpnClientProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MsgVpnClientProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MsgVpnClientProfile.__pulumiType;
    }

    /**
     * Enable or disable allowing Bridge clients using the Client Profile to connect. Changing this setting does not affect
     * existing Bridge client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly allowBridgeConnectionsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The types of Queues and Topic Endpoints that clients using the client-profile can create. Changing this value does not
     * affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"all"`. The allowed values and their meaning are: <pre> "all" - Client can create any
     * type of endpoint. "durable" - Client can create only durable endpoints. "non-durable" - Client can create only
     * non-durable endpoints. </pre> Available since SEMP API version 2.14.
     */
    public readonly allowGuaranteedEndpointCreateDurability!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable allowing clients using the Client Profile to create topic endpoints or queues. Changing this value
     * does not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `false`.
     */
    public readonly allowGuaranteedEndpointCreateEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable allowing clients using the Client Profile to receive guaranteed messages. Changing this setting does
     * not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly allowGuaranteedMsgReceiveEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable allowing clients using the Client Profile to send guaranteed messages. Changing this setting does not
     * affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly allowGuaranteedMsgSendEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable allowing shared subscriptions. Changing this setting does not affect existing subscriptions. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
     * Available since SEMP API version 2.11.
     */
    public readonly allowSharedSubscriptionsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable allowing clients using the Client Profile to establish transacted sessions. Changing this setting does
     * not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly allowTransactedSessionsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of a queue template to copy settings from when a new queue is created by a client using the Client Profile. If
     * the referenced queue template does not exist, queue creation will fail when it tries to resolve this template. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     * Available since SEMP API version 2.14.
     */
    public readonly apiQueueManagementCopyFromOnCreateTemplateName!: pulumi.Output<string | undefined>;
    /**
     * The name of a topic endpoint template to copy settings from when a new topic endpoint is created by a client using the
     * Client Profile. If the referenced topic endpoint template does not exist, topic endpoint creation will fail when it
     * tries to resolve this template. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`. Available since SEMP API version 2.14.
     */
    public readonly apiTopicEndpointManagementCopyFromOnCreateTemplateName!: pulumi.Output<string | undefined>;
    /**
     * The name of the Client Profile.
     */
    public readonly clientProfileName!: pulumi.Output<string>;
    /**
     * Enable or disable allowing clients using the Client Profile to use compression. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `true`. Available since SEMP API
     * version 2.10.
     */
    public readonly compressionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The amount of time to delay the delivery of messages to clients using the Client Profile after the initial message has
     * been delivered (the eliding delay interval), in milliseconds. A value of 0 means there is no delay in delivering
     * messages to clients. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `0`.
     */
    public readonly elidingDelay!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable message eliding for clients using the Client Profile. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `false`.
     */
    public readonly elidingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum number of topics tracked for message eliding per client connection using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `256`.
     */
    public readonly elidingMaxTopicCount!: pulumi.Output<number | undefined>;
    /**
     * The thresholds for the message spool usage event of Queues and Topic Endpoints provisioned by clients, relative to
     * `max_msg_spool_usage` for these Queues and Topic Endpoints. Changing these values during operation does not affect
     * existing sessions. For provisioned durable Queues and Topic Endpoints, this value applies when initially provisioned,
     * but can then be changed afterwards by configuring the Queue or Topic Endpoint.
     */
    public readonly eventClientProvisionedEndpointSpoolUsageThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventClientProvisionedEndpointSpoolUsageThreshold | undefined>;
    /**
     * The thresholds for the Client Username connection count event of the Client Profile, relative to
     * `max_connection_count_per_client_username`.
     */
    public readonly eventConnectionCountPerClientUsernameThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventConnectionCountPerClientUsernameThreshold | undefined>;
    /**
     * The thresholds for the transmit flow count event of the Client Profile, relative to `max_egress_flow_count`.
     */
    public readonly eventEgressFlowCountThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventEgressFlowCountThreshold | undefined>;
    /**
     * The thresholds for the Client Username endpoint count event of the Client Profile, relative to
     * `max_endpoint_count_per_client_username`.
     */
    public readonly eventEndpointCountPerClientUsernameThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventEndpointCountPerClientUsernameThreshold | undefined>;
    /**
     * The thresholds for the receive flow count event of the Client Profile, relative to `max_ingress_flow_count`.
     */
    public readonly eventIngressFlowCountThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventIngressFlowCountThreshold | undefined>;
    /**
     * The thresholds for the client username SMF connection count event of the Client Profile, relative to
     * `service_smf_max_connection_count_per_client_username`.
     */
    public readonly eventServiceSmfConnectionCountPerClientUsernameThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventServiceSmfConnectionCountPerClientUsernameThreshold | undefined>;
    /**
     * The thresholds for the Client Username Web Transport connection count event of the Client Profile, relative to
     * `service_web_max_connection_count_per_client_username`.
     */
    public readonly eventServiceWebConnectionCountPerClientUsernameThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventServiceWebConnectionCountPerClientUsernameThreshold | undefined>;
    /**
     * The thresholds for the subscription count event of the Client Profile, relative to `max_subscription_count`.
     */
    public readonly eventSubscriptionCountThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventSubscriptionCountThreshold | undefined>;
    /**
     * The thresholds for the transacted session count event of the Client Profile, relative to `max_transacted_session_count`.
     */
    public readonly eventTransactedSessionCountThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventTransactedSessionCountThreshold | undefined>;
    /**
     * The thresholds for the transaction count event of the Client Profile, relative to `max_transaction_count`.
     */
    public readonly eventTransactionCountThreshold!: pulumi.Output<outputs.MsgVpnClientProfileEventTransactionCountThreshold | undefined>;
    /**
     * The maximum number of client connections per Client Username using the Client Profile. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported by the
     * platform.
     */
    public readonly maxConnectionCountPerClientUsername!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of transmit flows that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`.
     */
    public readonly maxEgressFlowCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of queues and topic endpoints that can be created by clients with the same Client Username using the
     * Client Profile. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `1000`.
     */
    public readonly maxEndpointCountPerClientUsername!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of receive flows that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`.
     */
    public readonly maxIngressFlowCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of publisher and consumer messages combined that is allowed within a transaction for each client
     * associated with this client-profile. Exceeding this limit will result in a transaction prepare or commit failure.
     * Changing this value during operation will not affect existing sessions. It is only validated at transaction creation
     * time. Large transactions consume more resources and are more likely to require retrieving messages from the ADB or from
     * disk to process the transaction prepare or commit requests. The transaction processing rate may diminish if a large
     * number of messages must be retrieved from the ADB or from disk. Care should be taken to not use excessively large
     * transactions needlessly to avoid exceeding resource limits and to avoid reducing the overall broker performance. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `256`.
     * Available since SEMP API version 2.20.
     */
    public readonly maxMsgsPerTransaction!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of subscriptions per client using the Client Profile. This limit is not enforced when a client adds a
     * subscription to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this limit is not enforced when a
     * subscription is added using a management interface, such as CLI or SEMP. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default varies by platform.
     */
    public readonly maxSubscriptionCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of transacted sessions that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10`.
     */
    public readonly maxTransactedSessionCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of transactions that can be created by one client using the Client Profile. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default varies by platform.
     */
    public readonly maxTransactionCount!: pulumi.Output<number | undefined>;
    /**
     * The name of the Message VPN.
     */
    public readonly msgVpnName!: pulumi.Output<string>;
    /**
     * The maximum depth of the "Control 1" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    public readonly queueControl1MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Control 1" (C-1) priority queue, regardless of the
     * `queue_control1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    public readonly queueControl1MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Direct 1" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    public readonly queueDirect1MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Direct 1" (D-1) priority queue, regardless of the
     * `queue_direct1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    public readonly queueDirect1MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Direct 2" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    public readonly queueDirect2MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Direct 2" (D-2) priority queue, regardless of the
     * `queue_direct2_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    public readonly queueDirect2MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Direct 3" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    public readonly queueDirect3MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Direct 3" (D-3) priority queue, regardless of the
     * `queue_direct3_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    public readonly queueDirect3MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * The maximum depth of the "Guaranteed 1" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message
     * data. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    public readonly queueGuaranteed1MaxDepth!: pulumi.Output<number | undefined>;
    /**
     * The number of messages that are always allowed entry into the "Guaranteed 1" (G-1) priority queue, regardless of the
     * `queue_guaranteed1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `255`.
     */
    public readonly queueGuaranteed1MinMsgBurst!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable the sending of a negative acknowledgment (NACK) to a client using the Client Profile when discarding a
     * guaranteed message due to no matching subscription found. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `false`. Available since SEMP API version 2.2.
     */
    public readonly rejectMsgToSenderOnNoSubscriptionMatchEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable allowing clients using the Client Profile to connect to the Message VPN when its replication state is
     * standby. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value
     * is `false`.
     */
    public readonly replicationAllowClientConnectWhenStandbyEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The minimum client keepalive timeout which will be enforced for client connections. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `30`. Available since SEMP API
     * version 2.19.
     */
    public readonly serviceMinKeepaliveTimeout!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of SMF client connections per Client Username using the Client Profile. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported by the
     * platform.
     */
    public readonly serviceSmfMaxConnectionCountPerClientUsername!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable the enforcement of a minimum keepalive timeout for SMF clients. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available since SEMP API
     * version 2.19.
     */
    public readonly serviceSmfMinKeepaliveEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The timeout for inactive Web Transport client sessions using the Client Profile, in seconds. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `30`.
     */
    public readonly serviceWebInactiveTimeout!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of Web Transport client connections per Client Username using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported
     * by the platform.
     */
    public readonly serviceWebMaxConnectionCountPerClientUsername!: pulumi.Output<number | undefined>;
    /**
     * The maximum Web Transport payload size before fragmentation occurs for clients using the Client Profile, in bytes. The
     * size of the header is not included. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `1000000`.
     */
    public readonly serviceWebMaxPayload!: pulumi.Output<number | undefined>;
    /**
     * The TCP initial congestion window size for clients using the Client Profile, in multiples of the TCP Maximum Segment
     * Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before
     * changing this value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `2`.
     */
    public readonly tcpCongestionWindowSize!: pulumi.Output<number | undefined>;
    /**
     * The number of TCP keepalive retransmissions to a client using the Client Profile before declaring that it is not
     * available. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `5`.
     */
    public readonly tcpKeepaliveCount!: pulumi.Output<number | undefined>;
    /**
     * The amount of time a client connection using the Client Profile must remain idle before TCP begins sending keepalive
     * probes, in seconds. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `3`.
     */
    public readonly tcpKeepaliveIdleTime!: pulumi.Output<number | undefined>;
    /**
     * The amount of time between TCP keepalive retransmissions to a client using the Client Profile when no acknowledgment is
     * received, in seconds. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `1`.
     */
    public readonly tcpKeepaliveInterval!: pulumi.Output<number | undefined>;
    /**
     * The TCP maximum segment size for clients using the Client Profile, in bytes. Changes are applied to all existing
     * connections. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `1460`.
     */
    public readonly tcpMaxSegmentSize!: pulumi.Output<number | undefined>;
    /**
     * The TCP maximum window size for clients using the Client Profile, in kilobytes. Changes are applied to all existing
     * connections. This setting is ignored on the software broker. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `256`.
     */
    public readonly tcpMaxWindowSize!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable allowing a client using the Client Profile to downgrade an encrypted connection to plain text. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     * Available since SEMP API version 2.8.
     */
    public readonly tlsAllowDowngradeToPlainTextEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a MsgVpnClientProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MsgVpnClientProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MsgVpnClientProfileArgs | MsgVpnClientProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MsgVpnClientProfileState | undefined;
            resourceInputs["allowBridgeConnectionsEnabled"] = state ? state.allowBridgeConnectionsEnabled : undefined;
            resourceInputs["allowGuaranteedEndpointCreateDurability"] = state ? state.allowGuaranteedEndpointCreateDurability : undefined;
            resourceInputs["allowGuaranteedEndpointCreateEnabled"] = state ? state.allowGuaranteedEndpointCreateEnabled : undefined;
            resourceInputs["allowGuaranteedMsgReceiveEnabled"] = state ? state.allowGuaranteedMsgReceiveEnabled : undefined;
            resourceInputs["allowGuaranteedMsgSendEnabled"] = state ? state.allowGuaranteedMsgSendEnabled : undefined;
            resourceInputs["allowSharedSubscriptionsEnabled"] = state ? state.allowSharedSubscriptionsEnabled : undefined;
            resourceInputs["allowTransactedSessionsEnabled"] = state ? state.allowTransactedSessionsEnabled : undefined;
            resourceInputs["apiQueueManagementCopyFromOnCreateTemplateName"] = state ? state.apiQueueManagementCopyFromOnCreateTemplateName : undefined;
            resourceInputs["apiTopicEndpointManagementCopyFromOnCreateTemplateName"] = state ? state.apiTopicEndpointManagementCopyFromOnCreateTemplateName : undefined;
            resourceInputs["clientProfileName"] = state ? state.clientProfileName : undefined;
            resourceInputs["compressionEnabled"] = state ? state.compressionEnabled : undefined;
            resourceInputs["elidingDelay"] = state ? state.elidingDelay : undefined;
            resourceInputs["elidingEnabled"] = state ? state.elidingEnabled : undefined;
            resourceInputs["elidingMaxTopicCount"] = state ? state.elidingMaxTopicCount : undefined;
            resourceInputs["eventClientProvisionedEndpointSpoolUsageThreshold"] = state ? state.eventClientProvisionedEndpointSpoolUsageThreshold : undefined;
            resourceInputs["eventConnectionCountPerClientUsernameThreshold"] = state ? state.eventConnectionCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventEgressFlowCountThreshold"] = state ? state.eventEgressFlowCountThreshold : undefined;
            resourceInputs["eventEndpointCountPerClientUsernameThreshold"] = state ? state.eventEndpointCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventIngressFlowCountThreshold"] = state ? state.eventIngressFlowCountThreshold : undefined;
            resourceInputs["eventServiceSmfConnectionCountPerClientUsernameThreshold"] = state ? state.eventServiceSmfConnectionCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventServiceWebConnectionCountPerClientUsernameThreshold"] = state ? state.eventServiceWebConnectionCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventSubscriptionCountThreshold"] = state ? state.eventSubscriptionCountThreshold : undefined;
            resourceInputs["eventTransactedSessionCountThreshold"] = state ? state.eventTransactedSessionCountThreshold : undefined;
            resourceInputs["eventTransactionCountThreshold"] = state ? state.eventTransactionCountThreshold : undefined;
            resourceInputs["maxConnectionCountPerClientUsername"] = state ? state.maxConnectionCountPerClientUsername : undefined;
            resourceInputs["maxEgressFlowCount"] = state ? state.maxEgressFlowCount : undefined;
            resourceInputs["maxEndpointCountPerClientUsername"] = state ? state.maxEndpointCountPerClientUsername : undefined;
            resourceInputs["maxIngressFlowCount"] = state ? state.maxIngressFlowCount : undefined;
            resourceInputs["maxMsgsPerTransaction"] = state ? state.maxMsgsPerTransaction : undefined;
            resourceInputs["maxSubscriptionCount"] = state ? state.maxSubscriptionCount : undefined;
            resourceInputs["maxTransactedSessionCount"] = state ? state.maxTransactedSessionCount : undefined;
            resourceInputs["maxTransactionCount"] = state ? state.maxTransactionCount : undefined;
            resourceInputs["msgVpnName"] = state ? state.msgVpnName : undefined;
            resourceInputs["queueControl1MaxDepth"] = state ? state.queueControl1MaxDepth : undefined;
            resourceInputs["queueControl1MinMsgBurst"] = state ? state.queueControl1MinMsgBurst : undefined;
            resourceInputs["queueDirect1MaxDepth"] = state ? state.queueDirect1MaxDepth : undefined;
            resourceInputs["queueDirect1MinMsgBurst"] = state ? state.queueDirect1MinMsgBurst : undefined;
            resourceInputs["queueDirect2MaxDepth"] = state ? state.queueDirect2MaxDepth : undefined;
            resourceInputs["queueDirect2MinMsgBurst"] = state ? state.queueDirect2MinMsgBurst : undefined;
            resourceInputs["queueDirect3MaxDepth"] = state ? state.queueDirect3MaxDepth : undefined;
            resourceInputs["queueDirect3MinMsgBurst"] = state ? state.queueDirect3MinMsgBurst : undefined;
            resourceInputs["queueGuaranteed1MaxDepth"] = state ? state.queueGuaranteed1MaxDepth : undefined;
            resourceInputs["queueGuaranteed1MinMsgBurst"] = state ? state.queueGuaranteed1MinMsgBurst : undefined;
            resourceInputs["rejectMsgToSenderOnNoSubscriptionMatchEnabled"] = state ? state.rejectMsgToSenderOnNoSubscriptionMatchEnabled : undefined;
            resourceInputs["replicationAllowClientConnectWhenStandbyEnabled"] = state ? state.replicationAllowClientConnectWhenStandbyEnabled : undefined;
            resourceInputs["serviceMinKeepaliveTimeout"] = state ? state.serviceMinKeepaliveTimeout : undefined;
            resourceInputs["serviceSmfMaxConnectionCountPerClientUsername"] = state ? state.serviceSmfMaxConnectionCountPerClientUsername : undefined;
            resourceInputs["serviceSmfMinKeepaliveEnabled"] = state ? state.serviceSmfMinKeepaliveEnabled : undefined;
            resourceInputs["serviceWebInactiveTimeout"] = state ? state.serviceWebInactiveTimeout : undefined;
            resourceInputs["serviceWebMaxConnectionCountPerClientUsername"] = state ? state.serviceWebMaxConnectionCountPerClientUsername : undefined;
            resourceInputs["serviceWebMaxPayload"] = state ? state.serviceWebMaxPayload : undefined;
            resourceInputs["tcpCongestionWindowSize"] = state ? state.tcpCongestionWindowSize : undefined;
            resourceInputs["tcpKeepaliveCount"] = state ? state.tcpKeepaliveCount : undefined;
            resourceInputs["tcpKeepaliveIdleTime"] = state ? state.tcpKeepaliveIdleTime : undefined;
            resourceInputs["tcpKeepaliveInterval"] = state ? state.tcpKeepaliveInterval : undefined;
            resourceInputs["tcpMaxSegmentSize"] = state ? state.tcpMaxSegmentSize : undefined;
            resourceInputs["tcpMaxWindowSize"] = state ? state.tcpMaxWindowSize : undefined;
            resourceInputs["tlsAllowDowngradeToPlainTextEnabled"] = state ? state.tlsAllowDowngradeToPlainTextEnabled : undefined;
        } else {
            const args = argsOrState as MsgVpnClientProfileArgs | undefined;
            if ((!args || args.clientProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientProfileName'");
            }
            if ((!args || args.msgVpnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'msgVpnName'");
            }
            resourceInputs["allowBridgeConnectionsEnabled"] = args ? args.allowBridgeConnectionsEnabled : undefined;
            resourceInputs["allowGuaranteedEndpointCreateDurability"] = args ? args.allowGuaranteedEndpointCreateDurability : undefined;
            resourceInputs["allowGuaranteedEndpointCreateEnabled"] = args ? args.allowGuaranteedEndpointCreateEnabled : undefined;
            resourceInputs["allowGuaranteedMsgReceiveEnabled"] = args ? args.allowGuaranteedMsgReceiveEnabled : undefined;
            resourceInputs["allowGuaranteedMsgSendEnabled"] = args ? args.allowGuaranteedMsgSendEnabled : undefined;
            resourceInputs["allowSharedSubscriptionsEnabled"] = args ? args.allowSharedSubscriptionsEnabled : undefined;
            resourceInputs["allowTransactedSessionsEnabled"] = args ? args.allowTransactedSessionsEnabled : undefined;
            resourceInputs["apiQueueManagementCopyFromOnCreateTemplateName"] = args ? args.apiQueueManagementCopyFromOnCreateTemplateName : undefined;
            resourceInputs["apiTopicEndpointManagementCopyFromOnCreateTemplateName"] = args ? args.apiTopicEndpointManagementCopyFromOnCreateTemplateName : undefined;
            resourceInputs["clientProfileName"] = args ? args.clientProfileName : undefined;
            resourceInputs["compressionEnabled"] = args ? args.compressionEnabled : undefined;
            resourceInputs["elidingDelay"] = args ? args.elidingDelay : undefined;
            resourceInputs["elidingEnabled"] = args ? args.elidingEnabled : undefined;
            resourceInputs["elidingMaxTopicCount"] = args ? args.elidingMaxTopicCount : undefined;
            resourceInputs["eventClientProvisionedEndpointSpoolUsageThreshold"] = args ? args.eventClientProvisionedEndpointSpoolUsageThreshold : undefined;
            resourceInputs["eventConnectionCountPerClientUsernameThreshold"] = args ? args.eventConnectionCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventEgressFlowCountThreshold"] = args ? args.eventEgressFlowCountThreshold : undefined;
            resourceInputs["eventEndpointCountPerClientUsernameThreshold"] = args ? args.eventEndpointCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventIngressFlowCountThreshold"] = args ? args.eventIngressFlowCountThreshold : undefined;
            resourceInputs["eventServiceSmfConnectionCountPerClientUsernameThreshold"] = args ? args.eventServiceSmfConnectionCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventServiceWebConnectionCountPerClientUsernameThreshold"] = args ? args.eventServiceWebConnectionCountPerClientUsernameThreshold : undefined;
            resourceInputs["eventSubscriptionCountThreshold"] = args ? args.eventSubscriptionCountThreshold : undefined;
            resourceInputs["eventTransactedSessionCountThreshold"] = args ? args.eventTransactedSessionCountThreshold : undefined;
            resourceInputs["eventTransactionCountThreshold"] = args ? args.eventTransactionCountThreshold : undefined;
            resourceInputs["maxConnectionCountPerClientUsername"] = args ? args.maxConnectionCountPerClientUsername : undefined;
            resourceInputs["maxEgressFlowCount"] = args ? args.maxEgressFlowCount : undefined;
            resourceInputs["maxEndpointCountPerClientUsername"] = args ? args.maxEndpointCountPerClientUsername : undefined;
            resourceInputs["maxIngressFlowCount"] = args ? args.maxIngressFlowCount : undefined;
            resourceInputs["maxMsgsPerTransaction"] = args ? args.maxMsgsPerTransaction : undefined;
            resourceInputs["maxSubscriptionCount"] = args ? args.maxSubscriptionCount : undefined;
            resourceInputs["maxTransactedSessionCount"] = args ? args.maxTransactedSessionCount : undefined;
            resourceInputs["maxTransactionCount"] = args ? args.maxTransactionCount : undefined;
            resourceInputs["msgVpnName"] = args ? args.msgVpnName : undefined;
            resourceInputs["queueControl1MaxDepth"] = args ? args.queueControl1MaxDepth : undefined;
            resourceInputs["queueControl1MinMsgBurst"] = args ? args.queueControl1MinMsgBurst : undefined;
            resourceInputs["queueDirect1MaxDepth"] = args ? args.queueDirect1MaxDepth : undefined;
            resourceInputs["queueDirect1MinMsgBurst"] = args ? args.queueDirect1MinMsgBurst : undefined;
            resourceInputs["queueDirect2MaxDepth"] = args ? args.queueDirect2MaxDepth : undefined;
            resourceInputs["queueDirect2MinMsgBurst"] = args ? args.queueDirect2MinMsgBurst : undefined;
            resourceInputs["queueDirect3MaxDepth"] = args ? args.queueDirect3MaxDepth : undefined;
            resourceInputs["queueDirect3MinMsgBurst"] = args ? args.queueDirect3MinMsgBurst : undefined;
            resourceInputs["queueGuaranteed1MaxDepth"] = args ? args.queueGuaranteed1MaxDepth : undefined;
            resourceInputs["queueGuaranteed1MinMsgBurst"] = args ? args.queueGuaranteed1MinMsgBurst : undefined;
            resourceInputs["rejectMsgToSenderOnNoSubscriptionMatchEnabled"] = args ? args.rejectMsgToSenderOnNoSubscriptionMatchEnabled : undefined;
            resourceInputs["replicationAllowClientConnectWhenStandbyEnabled"] = args ? args.replicationAllowClientConnectWhenStandbyEnabled : undefined;
            resourceInputs["serviceMinKeepaliveTimeout"] = args ? args.serviceMinKeepaliveTimeout : undefined;
            resourceInputs["serviceSmfMaxConnectionCountPerClientUsername"] = args ? args.serviceSmfMaxConnectionCountPerClientUsername : undefined;
            resourceInputs["serviceSmfMinKeepaliveEnabled"] = args ? args.serviceSmfMinKeepaliveEnabled : undefined;
            resourceInputs["serviceWebInactiveTimeout"] = args ? args.serviceWebInactiveTimeout : undefined;
            resourceInputs["serviceWebMaxConnectionCountPerClientUsername"] = args ? args.serviceWebMaxConnectionCountPerClientUsername : undefined;
            resourceInputs["serviceWebMaxPayload"] = args ? args.serviceWebMaxPayload : undefined;
            resourceInputs["tcpCongestionWindowSize"] = args ? args.tcpCongestionWindowSize : undefined;
            resourceInputs["tcpKeepaliveCount"] = args ? args.tcpKeepaliveCount : undefined;
            resourceInputs["tcpKeepaliveIdleTime"] = args ? args.tcpKeepaliveIdleTime : undefined;
            resourceInputs["tcpKeepaliveInterval"] = args ? args.tcpKeepaliveInterval : undefined;
            resourceInputs["tcpMaxSegmentSize"] = args ? args.tcpMaxSegmentSize : undefined;
            resourceInputs["tcpMaxWindowSize"] = args ? args.tcpMaxWindowSize : undefined;
            resourceInputs["tlsAllowDowngradeToPlainTextEnabled"] = args ? args.tlsAllowDowngradeToPlainTextEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MsgVpnClientProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MsgVpnClientProfile resources.
 */
export interface MsgVpnClientProfileState {
    /**
     * Enable or disable allowing Bridge clients using the Client Profile to connect. Changing this setting does not affect
     * existing Bridge client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowBridgeConnectionsEnabled?: pulumi.Input<boolean>;
    /**
     * The types of Queues and Topic Endpoints that clients using the client-profile can create. Changing this value does not
     * affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"all"`. The allowed values and their meaning are: <pre> "all" - Client can create any
     * type of endpoint. "durable" - Client can create only durable endpoints. "non-durable" - Client can create only
     * non-durable endpoints. </pre> Available since SEMP API version 2.14.
     */
    allowGuaranteedEndpointCreateDurability?: pulumi.Input<string>;
    /**
     * Enable or disable allowing clients using the Client Profile to create topic endpoints or queues. Changing this value
     * does not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `false`.
     */
    allowGuaranteedEndpointCreateEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to receive guaranteed messages. Changing this setting does
     * not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowGuaranteedMsgReceiveEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to send guaranteed messages. Changing this setting does not
     * affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowGuaranteedMsgSendEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing shared subscriptions. Changing this setting does not affect existing subscriptions. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
     * Available since SEMP API version 2.11.
     */
    allowSharedSubscriptionsEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to establish transacted sessions. Changing this setting does
     * not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowTransactedSessionsEnabled?: pulumi.Input<boolean>;
    /**
     * The name of a queue template to copy settings from when a new queue is created by a client using the Client Profile. If
     * the referenced queue template does not exist, queue creation will fail when it tries to resolve this template. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     * Available since SEMP API version 2.14.
     */
    apiQueueManagementCopyFromOnCreateTemplateName?: pulumi.Input<string>;
    /**
     * The name of a topic endpoint template to copy settings from when a new topic endpoint is created by a client using the
     * Client Profile. If the referenced topic endpoint template does not exist, topic endpoint creation will fail when it
     * tries to resolve this template. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`. Available since SEMP API version 2.14.
     */
    apiTopicEndpointManagementCopyFromOnCreateTemplateName?: pulumi.Input<string>;
    /**
     * The name of the Client Profile.
     */
    clientProfileName?: pulumi.Input<string>;
    /**
     * Enable or disable allowing clients using the Client Profile to use compression. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `true`. Available since SEMP API
     * version 2.10.
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * The amount of time to delay the delivery of messages to clients using the Client Profile after the initial message has
     * been delivered (the eliding delay interval), in milliseconds. A value of 0 means there is no delay in delivering
     * messages to clients. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `0`.
     */
    elidingDelay?: pulumi.Input<number>;
    /**
     * Enable or disable message eliding for clients using the Client Profile. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `false`.
     */
    elidingEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum number of topics tracked for message eliding per client connection using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `256`.
     */
    elidingMaxTopicCount?: pulumi.Input<number>;
    /**
     * The thresholds for the message spool usage event of Queues and Topic Endpoints provisioned by clients, relative to
     * `max_msg_spool_usage` for these Queues and Topic Endpoints. Changing these values during operation does not affect
     * existing sessions. For provisioned durable Queues and Topic Endpoints, this value applies when initially provisioned,
     * but can then be changed afterwards by configuring the Queue or Topic Endpoint.
     */
    eventClientProvisionedEndpointSpoolUsageThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventClientProvisionedEndpointSpoolUsageThreshold>;
    /**
     * The thresholds for the Client Username connection count event of the Client Profile, relative to
     * `max_connection_count_per_client_username`.
     */
    eventConnectionCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventConnectionCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the transmit flow count event of the Client Profile, relative to `max_egress_flow_count`.
     */
    eventEgressFlowCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventEgressFlowCountThreshold>;
    /**
     * The thresholds for the Client Username endpoint count event of the Client Profile, relative to
     * `max_endpoint_count_per_client_username`.
     */
    eventEndpointCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventEndpointCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the receive flow count event of the Client Profile, relative to `max_ingress_flow_count`.
     */
    eventIngressFlowCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventIngressFlowCountThreshold>;
    /**
     * The thresholds for the client username SMF connection count event of the Client Profile, relative to
     * `service_smf_max_connection_count_per_client_username`.
     */
    eventServiceSmfConnectionCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventServiceSmfConnectionCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the Client Username Web Transport connection count event of the Client Profile, relative to
     * `service_web_max_connection_count_per_client_username`.
     */
    eventServiceWebConnectionCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventServiceWebConnectionCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the subscription count event of the Client Profile, relative to `max_subscription_count`.
     */
    eventSubscriptionCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventSubscriptionCountThreshold>;
    /**
     * The thresholds for the transacted session count event of the Client Profile, relative to `max_transacted_session_count`.
     */
    eventTransactedSessionCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventTransactedSessionCountThreshold>;
    /**
     * The thresholds for the transaction count event of the Client Profile, relative to `max_transaction_count`.
     */
    eventTransactionCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventTransactionCountThreshold>;
    /**
     * The maximum number of client connections per Client Username using the Client Profile. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported by the
     * platform.
     */
    maxConnectionCountPerClientUsername?: pulumi.Input<number>;
    /**
     * The maximum number of transmit flows that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`.
     */
    maxEgressFlowCount?: pulumi.Input<number>;
    /**
     * The maximum number of queues and topic endpoints that can be created by clients with the same Client Username using the
     * Client Profile. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `1000`.
     */
    maxEndpointCountPerClientUsername?: pulumi.Input<number>;
    /**
     * The maximum number of receive flows that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`.
     */
    maxIngressFlowCount?: pulumi.Input<number>;
    /**
     * The maximum number of publisher and consumer messages combined that is allowed within a transaction for each client
     * associated with this client-profile. Exceeding this limit will result in a transaction prepare or commit failure.
     * Changing this value during operation will not affect existing sessions. It is only validated at transaction creation
     * time. Large transactions consume more resources and are more likely to require retrieving messages from the ADB or from
     * disk to process the transaction prepare or commit requests. The transaction processing rate may diminish if a large
     * number of messages must be retrieved from the ADB or from disk. Care should be taken to not use excessively large
     * transactions needlessly to avoid exceeding resource limits and to avoid reducing the overall broker performance. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `256`.
     * Available since SEMP API version 2.20.
     */
    maxMsgsPerTransaction?: pulumi.Input<number>;
    /**
     * The maximum number of subscriptions per client using the Client Profile. This limit is not enforced when a client adds a
     * subscription to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this limit is not enforced when a
     * subscription is added using a management interface, such as CLI or SEMP. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default varies by platform.
     */
    maxSubscriptionCount?: pulumi.Input<number>;
    /**
     * The maximum number of transacted sessions that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10`.
     */
    maxTransactedSessionCount?: pulumi.Input<number>;
    /**
     * The maximum number of transactions that can be created by one client using the Client Profile. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default varies by platform.
     */
    maxTransactionCount?: pulumi.Input<number>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName?: pulumi.Input<string>;
    /**
     * The maximum depth of the "Control 1" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueControl1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Control 1" (C-1) priority queue, regardless of the
     * `queue_control1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueControl1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 1" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueDirect1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 1" (D-1) priority queue, regardless of the
     * `queue_direct1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueDirect1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 2" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueDirect2MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 2" (D-2) priority queue, regardless of the
     * `queue_direct2_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueDirect2MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 3" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueDirect3MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 3" (D-3) priority queue, regardless of the
     * `queue_direct3_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueDirect3MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Guaranteed 1" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message
     * data. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueGuaranteed1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Guaranteed 1" (G-1) priority queue, regardless of the
     * `queue_guaranteed1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `255`.
     */
    queueGuaranteed1MinMsgBurst?: pulumi.Input<number>;
    /**
     * Enable or disable the sending of a negative acknowledgment (NACK) to a client using the Client Profile when discarding a
     * guaranteed message due to no matching subscription found. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `false`. Available since SEMP API version 2.2.
     */
    rejectMsgToSenderOnNoSubscriptionMatchEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to connect to the Message VPN when its replication state is
     * standby. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value
     * is `false`.
     */
    replicationAllowClientConnectWhenStandbyEnabled?: pulumi.Input<boolean>;
    /**
     * The minimum client keepalive timeout which will be enforced for client connections. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `30`. Available since SEMP API
     * version 2.19.
     */
    serviceMinKeepaliveTimeout?: pulumi.Input<number>;
    /**
     * The maximum number of SMF client connections per Client Username using the Client Profile. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported by the
     * platform.
     */
    serviceSmfMaxConnectionCountPerClientUsername?: pulumi.Input<number>;
    /**
     * Enable or disable the enforcement of a minimum keepalive timeout for SMF clients. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available since SEMP API
     * version 2.19.
     */
    serviceSmfMinKeepaliveEnabled?: pulumi.Input<boolean>;
    /**
     * The timeout for inactive Web Transport client sessions using the Client Profile, in seconds. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `30`.
     */
    serviceWebInactiveTimeout?: pulumi.Input<number>;
    /**
     * The maximum number of Web Transport client connections per Client Username using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported
     * by the platform.
     */
    serviceWebMaxConnectionCountPerClientUsername?: pulumi.Input<number>;
    /**
     * The maximum Web Transport payload size before fragmentation occurs for clients using the Client Profile, in bytes. The
     * size of the header is not included. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `1000000`.
     */
    serviceWebMaxPayload?: pulumi.Input<number>;
    /**
     * The TCP initial congestion window size for clients using the Client Profile, in multiples of the TCP Maximum Segment
     * Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before
     * changing this value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `2`.
     */
    tcpCongestionWindowSize?: pulumi.Input<number>;
    /**
     * The number of TCP keepalive retransmissions to a client using the Client Profile before declaring that it is not
     * available. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `5`.
     */
    tcpKeepaliveCount?: pulumi.Input<number>;
    /**
     * The amount of time a client connection using the Client Profile must remain idle before TCP begins sending keepalive
     * probes, in seconds. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `3`.
     */
    tcpKeepaliveIdleTime?: pulumi.Input<number>;
    /**
     * The amount of time between TCP keepalive retransmissions to a client using the Client Profile when no acknowledgment is
     * received, in seconds. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `1`.
     */
    tcpKeepaliveInterval?: pulumi.Input<number>;
    /**
     * The TCP maximum segment size for clients using the Client Profile, in bytes. Changes are applied to all existing
     * connections. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `1460`.
     */
    tcpMaxSegmentSize?: pulumi.Input<number>;
    /**
     * The TCP maximum window size for clients using the Client Profile, in kilobytes. Changes are applied to all existing
     * connections. This setting is ignored on the software broker. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `256`.
     */
    tcpMaxWindowSize?: pulumi.Input<number>;
    /**
     * Enable or disable allowing a client using the Client Profile to downgrade an encrypted connection to plain text. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     * Available since SEMP API version 2.8.
     */
    tlsAllowDowngradeToPlainTextEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a MsgVpnClientProfile resource.
 */
export interface MsgVpnClientProfileArgs {
    /**
     * Enable or disable allowing Bridge clients using the Client Profile to connect. Changing this setting does not affect
     * existing Bridge client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowBridgeConnectionsEnabled?: pulumi.Input<boolean>;
    /**
     * The types of Queues and Topic Endpoints that clients using the client-profile can create. Changing this value does not
     * affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"all"`. The allowed values and their meaning are: <pre> "all" - Client can create any
     * type of endpoint. "durable" - Client can create only durable endpoints. "non-durable" - Client can create only
     * non-durable endpoints. </pre> Available since SEMP API version 2.14.
     */
    allowGuaranteedEndpointCreateDurability?: pulumi.Input<string>;
    /**
     * Enable or disable allowing clients using the Client Profile to create topic endpoints or queues. Changing this value
     * does not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `false`.
     */
    allowGuaranteedEndpointCreateEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to receive guaranteed messages. Changing this setting does
     * not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowGuaranteedMsgReceiveEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to send guaranteed messages. Changing this setting does not
     * affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowGuaranteedMsgSendEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing shared subscriptions. Changing this setting does not affect existing subscriptions. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
     * Available since SEMP API version 2.11.
     */
    allowSharedSubscriptionsEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to establish transacted sessions. Changing this setting does
     * not affect existing client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    allowTransactedSessionsEnabled?: pulumi.Input<boolean>;
    /**
     * The name of a queue template to copy settings from when a new queue is created by a client using the Client Profile. If
     * the referenced queue template does not exist, queue creation will fail when it tries to resolve this template. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     * Available since SEMP API version 2.14.
     */
    apiQueueManagementCopyFromOnCreateTemplateName?: pulumi.Input<string>;
    /**
     * The name of a topic endpoint template to copy settings from when a new topic endpoint is created by a client using the
     * Client Profile. If the referenced topic endpoint template does not exist, topic endpoint creation will fail when it
     * tries to resolve this template. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`. Available since SEMP API version 2.14.
     */
    apiTopicEndpointManagementCopyFromOnCreateTemplateName?: pulumi.Input<string>;
    /**
     * The name of the Client Profile.
     */
    clientProfileName: pulumi.Input<string>;
    /**
     * Enable or disable allowing clients using the Client Profile to use compression. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `true`. Available since SEMP API
     * version 2.10.
     */
    compressionEnabled?: pulumi.Input<boolean>;
    /**
     * The amount of time to delay the delivery of messages to clients using the Client Profile after the initial message has
     * been delivered (the eliding delay interval), in milliseconds. A value of 0 means there is no delay in delivering
     * messages to clients. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `0`.
     */
    elidingDelay?: pulumi.Input<number>;
    /**
     * Enable or disable message eliding for clients using the Client Profile. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `false`.
     */
    elidingEnabled?: pulumi.Input<boolean>;
    /**
     * The maximum number of topics tracked for message eliding per client connection using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `256`.
     */
    elidingMaxTopicCount?: pulumi.Input<number>;
    /**
     * The thresholds for the message spool usage event of Queues and Topic Endpoints provisioned by clients, relative to
     * `max_msg_spool_usage` for these Queues and Topic Endpoints. Changing these values during operation does not affect
     * existing sessions. For provisioned durable Queues and Topic Endpoints, this value applies when initially provisioned,
     * but can then be changed afterwards by configuring the Queue or Topic Endpoint.
     */
    eventClientProvisionedEndpointSpoolUsageThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventClientProvisionedEndpointSpoolUsageThreshold>;
    /**
     * The thresholds for the Client Username connection count event of the Client Profile, relative to
     * `max_connection_count_per_client_username`.
     */
    eventConnectionCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventConnectionCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the transmit flow count event of the Client Profile, relative to `max_egress_flow_count`.
     */
    eventEgressFlowCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventEgressFlowCountThreshold>;
    /**
     * The thresholds for the Client Username endpoint count event of the Client Profile, relative to
     * `max_endpoint_count_per_client_username`.
     */
    eventEndpointCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventEndpointCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the receive flow count event of the Client Profile, relative to `max_ingress_flow_count`.
     */
    eventIngressFlowCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventIngressFlowCountThreshold>;
    /**
     * The thresholds for the client username SMF connection count event of the Client Profile, relative to
     * `service_smf_max_connection_count_per_client_username`.
     */
    eventServiceSmfConnectionCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventServiceSmfConnectionCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the Client Username Web Transport connection count event of the Client Profile, relative to
     * `service_web_max_connection_count_per_client_username`.
     */
    eventServiceWebConnectionCountPerClientUsernameThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventServiceWebConnectionCountPerClientUsernameThreshold>;
    /**
     * The thresholds for the subscription count event of the Client Profile, relative to `max_subscription_count`.
     */
    eventSubscriptionCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventSubscriptionCountThreshold>;
    /**
     * The thresholds for the transacted session count event of the Client Profile, relative to `max_transacted_session_count`.
     */
    eventTransactedSessionCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventTransactedSessionCountThreshold>;
    /**
     * The thresholds for the transaction count event of the Client Profile, relative to `max_transaction_count`.
     */
    eventTransactionCountThreshold?: pulumi.Input<inputs.MsgVpnClientProfileEventTransactionCountThreshold>;
    /**
     * The maximum number of client connections per Client Username using the Client Profile. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported by the
     * platform.
     */
    maxConnectionCountPerClientUsername?: pulumi.Input<number>;
    /**
     * The maximum number of transmit flows that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`.
     */
    maxEgressFlowCount?: pulumi.Input<number>;
    /**
     * The maximum number of queues and topic endpoints that can be created by clients with the same Client Username using the
     * Client Profile. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `1000`.
     */
    maxEndpointCountPerClientUsername?: pulumi.Input<number>;
    /**
     * The maximum number of receive flows that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `1000`.
     */
    maxIngressFlowCount?: pulumi.Input<number>;
    /**
     * The maximum number of publisher and consumer messages combined that is allowed within a transaction for each client
     * associated with this client-profile. Exceeding this limit will result in a transaction prepare or commit failure.
     * Changing this value during operation will not affect existing sessions. It is only validated at transaction creation
     * time. Large transactions consume more resources and are more likely to require retrieving messages from the ADB or from
     * disk to process the transaction prepare or commit requests. The transaction processing rate may diminish if a large
     * number of messages must be retrieved from the ADB or from disk. Care should be taken to not use excessively large
     * transactions needlessly to avoid exceeding resource limits and to avoid reducing the overall broker performance. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `256`.
     * Available since SEMP API version 2.20.
     */
    maxMsgsPerTransaction?: pulumi.Input<number>;
    /**
     * The maximum number of subscriptions per client using the Client Profile. This limit is not enforced when a client adds a
     * subscription to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this limit is not enforced when a
     * subscription is added using a management interface, such as CLI or SEMP. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default varies by platform.
     */
    maxSubscriptionCount?: pulumi.Input<number>;
    /**
     * The maximum number of transacted sessions that can be created by one client using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10`.
     */
    maxTransactedSessionCount?: pulumi.Input<number>;
    /**
     * The maximum number of transactions that can be created by one client using the Client Profile. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default varies by platform.
     */
    maxTransactionCount?: pulumi.Input<number>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName: pulumi.Input<string>;
    /**
     * The maximum depth of the "Control 1" (C-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueControl1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Control 1" (C-1) priority queue, regardless of the
     * `queue_control1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueControl1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 1" (D-1) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueDirect1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 1" (D-1) priority queue, regardless of the
     * `queue_direct1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueDirect1MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 2" (D-2) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueDirect2MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 2" (D-2) priority queue, regardless of the
     * `queue_direct2_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueDirect2MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Direct 3" (D-3) priority queue, in work units. Each work unit is 2048 bytes of message data.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueDirect3MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Direct 3" (D-3) priority queue, regardless of the
     * `queue_direct3_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `4`.
     */
    queueDirect3MinMsgBurst?: pulumi.Input<number>;
    /**
     * The maximum depth of the "Guaranteed 1" (G-1) priority queue, in work units. Each work unit is 2048 bytes of message
     * data. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `20000`.
     */
    queueGuaranteed1MaxDepth?: pulumi.Input<number>;
    /**
     * The number of messages that are always allowed entry into the "Guaranteed 1" (G-1) priority queue, regardless of the
     * `queue_guaranteed1_max_depth` value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `255`.
     */
    queueGuaranteed1MinMsgBurst?: pulumi.Input<number>;
    /**
     * Enable or disable the sending of a negative acknowledgment (NACK) to a client using the Client Profile when discarding a
     * guaranteed message due to no matching subscription found. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `false`. Available since SEMP API version 2.2.
     */
    rejectMsgToSenderOnNoSubscriptionMatchEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable allowing clients using the Client Profile to connect to the Message VPN when its replication state is
     * standby. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value
     * is `false`.
     */
    replicationAllowClientConnectWhenStandbyEnabled?: pulumi.Input<boolean>;
    /**
     * The minimum client keepalive timeout which will be enforced for client connections. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `30`. Available since SEMP API
     * version 2.19.
     */
    serviceMinKeepaliveTimeout?: pulumi.Input<number>;
    /**
     * The maximum number of SMF client connections per Client Username using the Client Profile. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported by the
     * platform.
     */
    serviceSmfMaxConnectionCountPerClientUsername?: pulumi.Input<number>;
    /**
     * Enable or disable the enforcement of a minimum keepalive timeout for SMF clients. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available since SEMP API
     * version 2.19.
     */
    serviceSmfMinKeepaliveEnabled?: pulumi.Input<boolean>;
    /**
     * The timeout for inactive Web Transport client sessions using the Client Profile, in seconds. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `30`.
     */
    serviceWebInactiveTimeout?: pulumi.Input<number>;
    /**
     * The maximum number of Web Transport client connections per Client Username using the Client Profile. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default is the maximum value supported
     * by the platform.
     */
    serviceWebMaxConnectionCountPerClientUsername?: pulumi.Input<number>;
    /**
     * The maximum Web Transport payload size before fragmentation occurs for clients using the Client Profile, in bytes. The
     * size of the header is not included. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `1000000`.
     */
    serviceWebMaxPayload?: pulumi.Input<number>;
    /**
     * The TCP initial congestion window size for clients using the Client Profile, in multiples of the TCP Maximum Segment
     * Size (MSS). Changing the value from its default of 2 results in non-compliance with RFC 2581. Contact support before
     * changing this value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `2`.
     */
    tcpCongestionWindowSize?: pulumi.Input<number>;
    /**
     * The number of TCP keepalive retransmissions to a client using the Client Profile before declaring that it is not
     * available. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `5`.
     */
    tcpKeepaliveCount?: pulumi.Input<number>;
    /**
     * The amount of time a client connection using the Client Profile must remain idle before TCP begins sending keepalive
     * probes, in seconds. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `3`.
     */
    tcpKeepaliveIdleTime?: pulumi.Input<number>;
    /**
     * The amount of time between TCP keepalive retransmissions to a client using the Client Profile when no acknowledgment is
     * received, in seconds. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `1`.
     */
    tcpKeepaliveInterval?: pulumi.Input<number>;
    /**
     * The TCP maximum segment size for clients using the Client Profile, in bytes. Changes are applied to all existing
     * connections. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `1460`.
     */
    tcpMaxSegmentSize?: pulumi.Input<number>;
    /**
     * The TCP maximum window size for clients using the Client Profile, in kilobytes. Changes are applied to all existing
     * connections. This setting is ignored on the software broker. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `256`.
     */
    tcpMaxWindowSize?: pulumi.Input<number>;
    /**
     * Enable or disable allowing a client using the Client Profile to downgrade an encrypted connection to plain text. Changes
     * to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     * Available since SEMP API version 2.8.
     */
    tlsAllowDowngradeToPlainTextEnabled?: pulumi.Input<boolean>;
}
