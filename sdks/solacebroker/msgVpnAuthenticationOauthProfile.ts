// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MsgVpnAuthenticationOauthProfile extends pulumi.CustomResource {
    /**
     * Get an existing MsgVpnAuthenticationOauthProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MsgVpnAuthenticationOauthProfileState, opts?: pulumi.CustomResourceOptions): MsgVpnAuthenticationOauthProfile {
        return new MsgVpnAuthenticationOauthProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebroker:index/msgVpnAuthenticationOauthProfile:MsgVpnAuthenticationOauthProfile';

    /**
     * Returns true if the given object is an instance of MsgVpnAuthenticationOauthProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MsgVpnAuthenticationOauthProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MsgVpnAuthenticationOauthProfile.__pulumiType;
    }

    /**
     * The name of the groups claim. If non-empty, the specified claim will be used to determine groups for authorization. If
     * empty, the authorization_type attribute of the Message VPN will be used to determine authorization. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `"groups"`.
     */
    public readonly authorizationGroupsClaimName!: pulumi.Output<string | undefined>;
    /**
     * The format of the authorization groups claim value when it is a string. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `"single"`. The allowed values and their meaning are:
     * <pre> "single" - When the claim is a string, it is interpreted as as single group. "space-delimited" - When the claim is
     * a string, it is interpreted as a space-delimited list of groups, similar to the "scope" claim. </pre> Available since
     * SEMP API version 2.32.
     */
    public readonly authorizationGroupsClaimStringFormat!: pulumi.Output<string | undefined>;
    /**
     * The OAuth client id. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `""`.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * The required value for the TYP field in the ID token header. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `"JWT"`.
     */
    public readonly clientRequiredType!: pulumi.Output<string | undefined>;
    /**
     * The OAuth client secret. This attribute is absent from a GET and not updated when absent in a PUT, subject to the
     * exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable verification of the TYP field in the ID token header. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `true`.
     */
    public readonly clientValidateTypeEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable the disconnection of clients when their tokens expire. Changing this value does not affect existing
     * clients, only new client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `true`.
     */
    public readonly disconnectOnTokenExpirationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable the OAuth profile. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The OpenID Connect discovery endpoint or OAuth Authorization Server Metadata endpoint. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    public readonly endpointDiscovery!: pulumi.Output<string | undefined>;
    /**
     * The number of seconds between discovery endpoint requests. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `86400`.
     */
    public readonly endpointDiscoveryRefreshInterval!: pulumi.Output<number | undefined>;
    /**
     * The OAuth introspection endpoint. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    public readonly endpointIntrospection!: pulumi.Output<string | undefined>;
    /**
     * The maximum time in seconds a token introspection request is allowed to take. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `1`.
     */
    public readonly endpointIntrospectionTimeout!: pulumi.Output<number | undefined>;
    /**
     * The OAuth JWKS endpoint. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    public readonly endpointJwks!: pulumi.Output<string | undefined>;
    /**
     * The number of seconds between JWKS endpoint requests. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `86400`.
     */
    public readonly endpointJwksRefreshInterval!: pulumi.Output<number | undefined>;
    /**
     * The OpenID Connect Userinfo endpoint. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    public readonly endpointUserinfo!: pulumi.Output<string | undefined>;
    /**
     * The maximum time in seconds a userinfo request is allowed to take. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `1`.
     */
    public readonly endpointUserinfoTimeout!: pulumi.Output<number | undefined>;
    /**
     * The Issuer Identifier for the OAuth provider. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `""`.
     */
    public readonly issuer!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable whether the API provided MQTT client username will be validated against the username calculated from
     * the token(s). When enabled, connection attempts by MQTT clients are rejected if they differ. Note that this value only
     * applies to MQTT clients; SMF client usernames will not be validated. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `false`.
     */
    public readonly mqttUsernameValidateEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Message VPN.
     */
    public readonly msgVpnName!: pulumi.Output<string>;
    /**
     * The name of the OAuth profile.
     */
    public readonly oauthProfileName!: pulumi.Output<string>;
    /**
     * The OAuth role of the broker. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"client"`. The allowed values and their meaning are: <pre> "client" - The broker is
     * in the OAuth client role. "resource-server" - The broker is in the OAuth resource server role. </pre>
     */
    public readonly oauthRole!: pulumi.Output<string | undefined>;
    /**
     * The name of the proxy to use for discovery, user info, jwks, and introspection requests. Leave empty for no proxy.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     * Available since SEMP API version 2.41.
     */
    public readonly proxyName!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable parsing of the access token as a JWT. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `true`.
     */
    public readonly resourceServerParseAccessTokenEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The required audience value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    public readonly resourceServerRequiredAudience!: pulumi.Output<string | undefined>;
    /**
     * The required issuer value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    public readonly resourceServerRequiredIssuer!: pulumi.Output<string | undefined>;
    /**
     * A space-separated list of scopes that must be present in the scope claim. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `""`.
     */
    public readonly resourceServerRequiredScope!: pulumi.Output<string | undefined>;
    /**
     * The required TYP value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `"at+jwt"`.
     */
    public readonly resourceServerRequiredType!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable verification of the audience claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    public readonly resourceServerValidateAudienceEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable verification of the issuer claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    public readonly resourceServerValidateIssuerEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable verification of the scope claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    public readonly resourceServerValidateScopeEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or disable verification of the TYP field in the access token header. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `true`.
     */
    public readonly resourceServerValidateTypeEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the username claim. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"sub"`.
     */
    public readonly usernameClaimName!: pulumi.Output<string | undefined>;

    /**
     * Create a MsgVpnAuthenticationOauthProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MsgVpnAuthenticationOauthProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MsgVpnAuthenticationOauthProfileArgs | MsgVpnAuthenticationOauthProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MsgVpnAuthenticationOauthProfileState | undefined;
            resourceInputs["authorizationGroupsClaimName"] = state ? state.authorizationGroupsClaimName : undefined;
            resourceInputs["authorizationGroupsClaimStringFormat"] = state ? state.authorizationGroupsClaimStringFormat : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientRequiredType"] = state ? state.clientRequiredType : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["clientValidateTypeEnabled"] = state ? state.clientValidateTypeEnabled : undefined;
            resourceInputs["disconnectOnTokenExpirationEnabled"] = state ? state.disconnectOnTokenExpirationEnabled : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["endpointDiscovery"] = state ? state.endpointDiscovery : undefined;
            resourceInputs["endpointDiscoveryRefreshInterval"] = state ? state.endpointDiscoveryRefreshInterval : undefined;
            resourceInputs["endpointIntrospection"] = state ? state.endpointIntrospection : undefined;
            resourceInputs["endpointIntrospectionTimeout"] = state ? state.endpointIntrospectionTimeout : undefined;
            resourceInputs["endpointJwks"] = state ? state.endpointJwks : undefined;
            resourceInputs["endpointJwksRefreshInterval"] = state ? state.endpointJwksRefreshInterval : undefined;
            resourceInputs["endpointUserinfo"] = state ? state.endpointUserinfo : undefined;
            resourceInputs["endpointUserinfoTimeout"] = state ? state.endpointUserinfoTimeout : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["mqttUsernameValidateEnabled"] = state ? state.mqttUsernameValidateEnabled : undefined;
            resourceInputs["msgVpnName"] = state ? state.msgVpnName : undefined;
            resourceInputs["oauthProfileName"] = state ? state.oauthProfileName : undefined;
            resourceInputs["oauthRole"] = state ? state.oauthRole : undefined;
            resourceInputs["proxyName"] = state ? state.proxyName : undefined;
            resourceInputs["resourceServerParseAccessTokenEnabled"] = state ? state.resourceServerParseAccessTokenEnabled : undefined;
            resourceInputs["resourceServerRequiredAudience"] = state ? state.resourceServerRequiredAudience : undefined;
            resourceInputs["resourceServerRequiredIssuer"] = state ? state.resourceServerRequiredIssuer : undefined;
            resourceInputs["resourceServerRequiredScope"] = state ? state.resourceServerRequiredScope : undefined;
            resourceInputs["resourceServerRequiredType"] = state ? state.resourceServerRequiredType : undefined;
            resourceInputs["resourceServerValidateAudienceEnabled"] = state ? state.resourceServerValidateAudienceEnabled : undefined;
            resourceInputs["resourceServerValidateIssuerEnabled"] = state ? state.resourceServerValidateIssuerEnabled : undefined;
            resourceInputs["resourceServerValidateScopeEnabled"] = state ? state.resourceServerValidateScopeEnabled : undefined;
            resourceInputs["resourceServerValidateTypeEnabled"] = state ? state.resourceServerValidateTypeEnabled : undefined;
            resourceInputs["usernameClaimName"] = state ? state.usernameClaimName : undefined;
        } else {
            const args = argsOrState as MsgVpnAuthenticationOauthProfileArgs | undefined;
            if ((!args || args.msgVpnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'msgVpnName'");
            }
            if ((!args || args.oauthProfileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oauthProfileName'");
            }
            resourceInputs["authorizationGroupsClaimName"] = args ? args.authorizationGroupsClaimName : undefined;
            resourceInputs["authorizationGroupsClaimStringFormat"] = args ? args.authorizationGroupsClaimStringFormat : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientRequiredType"] = args ? args.clientRequiredType : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["clientValidateTypeEnabled"] = args ? args.clientValidateTypeEnabled : undefined;
            resourceInputs["disconnectOnTokenExpirationEnabled"] = args ? args.disconnectOnTokenExpirationEnabled : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["endpointDiscovery"] = args ? args.endpointDiscovery : undefined;
            resourceInputs["endpointDiscoveryRefreshInterval"] = args ? args.endpointDiscoveryRefreshInterval : undefined;
            resourceInputs["endpointIntrospection"] = args ? args.endpointIntrospection : undefined;
            resourceInputs["endpointIntrospectionTimeout"] = args ? args.endpointIntrospectionTimeout : undefined;
            resourceInputs["endpointJwks"] = args ? args.endpointJwks : undefined;
            resourceInputs["endpointJwksRefreshInterval"] = args ? args.endpointJwksRefreshInterval : undefined;
            resourceInputs["endpointUserinfo"] = args ? args.endpointUserinfo : undefined;
            resourceInputs["endpointUserinfoTimeout"] = args ? args.endpointUserinfoTimeout : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["mqttUsernameValidateEnabled"] = args ? args.mqttUsernameValidateEnabled : undefined;
            resourceInputs["msgVpnName"] = args ? args.msgVpnName : undefined;
            resourceInputs["oauthProfileName"] = args ? args.oauthProfileName : undefined;
            resourceInputs["oauthRole"] = args ? args.oauthRole : undefined;
            resourceInputs["proxyName"] = args ? args.proxyName : undefined;
            resourceInputs["resourceServerParseAccessTokenEnabled"] = args ? args.resourceServerParseAccessTokenEnabled : undefined;
            resourceInputs["resourceServerRequiredAudience"] = args ? args.resourceServerRequiredAudience : undefined;
            resourceInputs["resourceServerRequiredIssuer"] = args ? args.resourceServerRequiredIssuer : undefined;
            resourceInputs["resourceServerRequiredScope"] = args ? args.resourceServerRequiredScope : undefined;
            resourceInputs["resourceServerRequiredType"] = args ? args.resourceServerRequiredType : undefined;
            resourceInputs["resourceServerValidateAudienceEnabled"] = args ? args.resourceServerValidateAudienceEnabled : undefined;
            resourceInputs["resourceServerValidateIssuerEnabled"] = args ? args.resourceServerValidateIssuerEnabled : undefined;
            resourceInputs["resourceServerValidateScopeEnabled"] = args ? args.resourceServerValidateScopeEnabled : undefined;
            resourceInputs["resourceServerValidateTypeEnabled"] = args ? args.resourceServerValidateTypeEnabled : undefined;
            resourceInputs["usernameClaimName"] = args ? args.usernameClaimName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MsgVpnAuthenticationOauthProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MsgVpnAuthenticationOauthProfile resources.
 */
export interface MsgVpnAuthenticationOauthProfileState {
    /**
     * The name of the groups claim. If non-empty, the specified claim will be used to determine groups for authorization. If
     * empty, the authorization_type attribute of the Message VPN will be used to determine authorization. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `"groups"`.
     */
    authorizationGroupsClaimName?: pulumi.Input<string>;
    /**
     * The format of the authorization groups claim value when it is a string. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `"single"`. The allowed values and their meaning are:
     * <pre> "single" - When the claim is a string, it is interpreted as as single group. "space-delimited" - When the claim is
     * a string, it is interpreted as a space-delimited list of groups, similar to the "scope" claim. </pre> Available since
     * SEMP API version 2.32.
     */
    authorizationGroupsClaimStringFormat?: pulumi.Input<string>;
    /**
     * The OAuth client id. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `""`.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The required value for the TYP field in the ID token header. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `"JWT"`.
     */
    clientRequiredType?: pulumi.Input<string>;
    /**
     * The OAuth client secret. This attribute is absent from a GET and not updated when absent in a PUT, subject to the
     * exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Enable or disable verification of the TYP field in the ID token header. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `true`.
     */
    clientValidateTypeEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable the disconnection of clients when their tokens expire. Changing this value does not affect existing
     * clients, only new client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `true`.
     */
    disconnectOnTokenExpirationEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable the OAuth profile. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The OpenID Connect discovery endpoint or OAuth Authorization Server Metadata endpoint. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    endpointDiscovery?: pulumi.Input<string>;
    /**
     * The number of seconds between discovery endpoint requests. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `86400`.
     */
    endpointDiscoveryRefreshInterval?: pulumi.Input<number>;
    /**
     * The OAuth introspection endpoint. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    endpointIntrospection?: pulumi.Input<string>;
    /**
     * The maximum time in seconds a token introspection request is allowed to take. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `1`.
     */
    endpointIntrospectionTimeout?: pulumi.Input<number>;
    /**
     * The OAuth JWKS endpoint. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    endpointJwks?: pulumi.Input<string>;
    /**
     * The number of seconds between JWKS endpoint requests. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `86400`.
     */
    endpointJwksRefreshInterval?: pulumi.Input<number>;
    /**
     * The OpenID Connect Userinfo endpoint. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    endpointUserinfo?: pulumi.Input<string>;
    /**
     * The maximum time in seconds a userinfo request is allowed to take. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `1`.
     */
    endpointUserinfoTimeout?: pulumi.Input<number>;
    /**
     * The Issuer Identifier for the OAuth provider. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `""`.
     */
    issuer?: pulumi.Input<string>;
    /**
     * Enable or disable whether the API provided MQTT client username will be validated against the username calculated from
     * the token(s). When enabled, connection attempts by MQTT clients are rejected if they differ. Note that this value only
     * applies to MQTT clients; SMF client usernames will not be validated. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `false`.
     */
    mqttUsernameValidateEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName?: pulumi.Input<string>;
    /**
     * The name of the OAuth profile.
     */
    oauthProfileName?: pulumi.Input<string>;
    /**
     * The OAuth role of the broker. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"client"`. The allowed values and their meaning are: <pre> "client" - The broker is
     * in the OAuth client role. "resource-server" - The broker is in the OAuth resource server role. </pre>
     */
    oauthRole?: pulumi.Input<string>;
    /**
     * The name of the proxy to use for discovery, user info, jwks, and introspection requests. Leave empty for no proxy.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     * Available since SEMP API version 2.41.
     */
    proxyName?: pulumi.Input<string>;
    /**
     * Enable or disable parsing of the access token as a JWT. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `true`.
     */
    resourceServerParseAccessTokenEnabled?: pulumi.Input<boolean>;
    /**
     * The required audience value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    resourceServerRequiredAudience?: pulumi.Input<string>;
    /**
     * The required issuer value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    resourceServerRequiredIssuer?: pulumi.Input<string>;
    /**
     * A space-separated list of scopes that must be present in the scope claim. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `""`.
     */
    resourceServerRequiredScope?: pulumi.Input<string>;
    /**
     * The required TYP value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `"at+jwt"`.
     */
    resourceServerRequiredType?: pulumi.Input<string>;
    /**
     * Enable or disable verification of the audience claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateAudienceEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable verification of the issuer claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateIssuerEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable verification of the scope claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateScopeEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable verification of the TYP field in the access token header. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateTypeEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the username claim. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"sub"`.
     */
    usernameClaimName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MsgVpnAuthenticationOauthProfile resource.
 */
export interface MsgVpnAuthenticationOauthProfileArgs {
    /**
     * The name of the groups claim. If non-empty, the specified claim will be used to determine groups for authorization. If
     * empty, the authorization_type attribute of the Message VPN will be used to determine authorization. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `"groups"`.
     */
    authorizationGroupsClaimName?: pulumi.Input<string>;
    /**
     * The format of the authorization groups claim value when it is a string. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `"single"`. The allowed values and their meaning are:
     * <pre> "single" - When the claim is a string, it is interpreted as as single group. "space-delimited" - When the claim is
     * a string, it is interpreted as a space-delimited list of groups, similar to the "scope" claim. </pre> Available since
     * SEMP API version 2.32.
     */
    authorizationGroupsClaimStringFormat?: pulumi.Input<string>;
    /**
     * The OAuth client id. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `""`.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The required value for the TYP field in the ID token header. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `"JWT"`.
     */
    clientRequiredType?: pulumi.Input<string>;
    /**
     * The OAuth client secret. This attribute is absent from a GET and not updated when absent in a PUT, subject to the
     * exceptions in note 4 (refer to the `Notes` section in the SEMP API `Config reference`). Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Enable or disable verification of the TYP field in the ID token header. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `true`.
     */
    clientValidateTypeEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable the disconnection of clients when their tokens expire. Changing this value does not affect existing
     * clients, only new client connections. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `true`.
     */
    disconnectOnTokenExpirationEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable the OAuth profile. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The OpenID Connect discovery endpoint or OAuth Authorization Server Metadata endpoint. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    endpointDiscovery?: pulumi.Input<string>;
    /**
     * The number of seconds between discovery endpoint requests. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `86400`.
     */
    endpointDiscoveryRefreshInterval?: pulumi.Input<number>;
    /**
     * The OAuth introspection endpoint. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    endpointIntrospection?: pulumi.Input<string>;
    /**
     * The maximum time in seconds a token introspection request is allowed to take. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `1`.
     */
    endpointIntrospectionTimeout?: pulumi.Input<number>;
    /**
     * The OAuth JWKS endpoint. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    endpointJwks?: pulumi.Input<string>;
    /**
     * The number of seconds between JWKS endpoint requests. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `86400`.
     */
    endpointJwksRefreshInterval?: pulumi.Input<number>;
    /**
     * The OpenID Connect Userinfo endpoint. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    endpointUserinfo?: pulumi.Input<string>;
    /**
     * The maximum time in seconds a userinfo request is allowed to take. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `1`.
     */
    endpointUserinfoTimeout?: pulumi.Input<number>;
    /**
     * The Issuer Identifier for the OAuth provider. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `""`.
     */
    issuer?: pulumi.Input<string>;
    /**
     * Enable or disable whether the API provided MQTT client username will be validated against the username calculated from
     * the token(s). When enabled, connection attempts by MQTT clients are rejected if they differ. Note that this value only
     * applies to MQTT clients; SMF client usernames will not be validated. Changes to this attribute are synchronized to HA
     * mates and replication sites via config-sync. The default value is `false`.
     */
    mqttUsernameValidateEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName: pulumi.Input<string>;
    /**
     * The name of the OAuth profile.
     */
    oauthProfileName: pulumi.Input<string>;
    /**
     * The OAuth role of the broker. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"client"`. The allowed values and their meaning are: <pre> "client" - The broker is
     * in the OAuth client role. "resource-server" - The broker is in the OAuth resource server role. </pre>
     */
    oauthRole?: pulumi.Input<string>;
    /**
     * The name of the proxy to use for discovery, user info, jwks, and introspection requests. Leave empty for no proxy.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     * Available since SEMP API version 2.41.
     */
    proxyName?: pulumi.Input<string>;
    /**
     * Enable or disable parsing of the access token as a JWT. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `true`.
     */
    resourceServerParseAccessTokenEnabled?: pulumi.Input<boolean>;
    /**
     * The required audience value. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `""`.
     */
    resourceServerRequiredAudience?: pulumi.Input<string>;
    /**
     * The required issuer value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    resourceServerRequiredIssuer?: pulumi.Input<string>;
    /**
     * A space-separated list of scopes that must be present in the scope claim. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `""`.
     */
    resourceServerRequiredScope?: pulumi.Input<string>;
    /**
     * The required TYP value. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `"at+jwt"`.
     */
    resourceServerRequiredType?: pulumi.Input<string>;
    /**
     * Enable or disable verification of the audience claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateAudienceEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable verification of the issuer claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateIssuerEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable verification of the scope claim in the access token or introspection response. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateScopeEnabled?: pulumi.Input<boolean>;
    /**
     * Enable or disable verification of the TYP field in the access token header. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `true`.
     */
    resourceServerValidateTypeEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the username claim. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `"sub"`.
     */
    usernameClaimName?: pulumi.Input<string>;
}
