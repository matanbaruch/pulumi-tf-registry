// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnDmrBridge(args: GetMsgVpnDmrBridgeArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnDmrBridgeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getMsgVpnDmrBridge:getMsgVpnDmrBridge", {
        "msgVpnName": args.msgVpnName,
        "remoteNodeName": args.remoteNodeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnDmrBridge.
 */
export interface GetMsgVpnDmrBridgeArgs {
    msgVpnName: string;
    remoteNodeName: string;
}

/**
 * A collection of values returned by getMsgVpnDmrBridge.
 */
export interface GetMsgVpnDmrBridgeResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly remoteMsgVpnName: string;
    readonly remoteNodeName: string;
}
export function getMsgVpnDmrBridgeOutput(args: GetMsgVpnDmrBridgeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnDmrBridgeResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnDmrBridge(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnDmrBridge.
 */
export interface GetMsgVpnDmrBridgeOutputArgs {
    msgVpnName: pulumi.Input<string>;
    remoteNodeName: pulumi.Input<string>;
}
