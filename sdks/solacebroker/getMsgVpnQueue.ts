// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMsgVpnQueue(args: GetMsgVpnQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getMsgVpnQueue:getMsgVpnQueue", {
        "msgVpnName": args.msgVpnName,
        "queueName": args.queueName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnQueue.
 */
export interface GetMsgVpnQueueArgs {
    msgVpnName: string;
    queueName: string;
}

/**
 * A collection of values returned by getMsgVpnQueue.
 */
export interface GetMsgVpnQueueResult {
    readonly accessType: string;
    readonly consumerAckPropagationEnabled: boolean;
    readonly deadMsgQueue: string;
    readonly deliveryCountEnabled: boolean;
    readonly deliveryDelay: number;
    readonly egressEnabled: boolean;
    readonly eventBindCountThreshold: outputs.GetMsgVpnQueueEventBindCountThreshold;
    readonly eventMsgSpoolUsageThreshold: outputs.GetMsgVpnQueueEventMsgSpoolUsageThreshold;
    readonly eventRejectLowPriorityMsgLimitThreshold: outputs.GetMsgVpnQueueEventRejectLowPriorityMsgLimitThreshold;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ingressEnabled: boolean;
    readonly maxBindCount: number;
    readonly maxDeliveredUnackedMsgsPerFlow: number;
    readonly maxMsgSize: number;
    readonly maxMsgSpoolUsage: number;
    readonly maxRedeliveryCount: number;
    readonly maxTtl: number;
    readonly msgVpnName: string;
    readonly owner: string;
    readonly partitionCount: number;
    readonly partitionRebalanceDelay: number;
    readonly partitionRebalanceMaxHandoffTime: number;
    readonly permission: string;
    readonly queueName: string;
    readonly redeliveryDelayEnabled: boolean;
    readonly redeliveryDelayInitialInterval: number;
    readonly redeliveryDelayMaxInterval: number;
    readonly redeliveryDelayMultiplier: number;
    readonly redeliveryEnabled: boolean;
    readonly rejectLowPriorityMsgEnabled: boolean;
    readonly rejectLowPriorityMsgLimit: number;
    readonly rejectMsgToSenderOnDiscardBehavior: string;
    readonly respectMsgPriorityEnabled: boolean;
    readonly respectTtlEnabled: boolean;
}
export function getMsgVpnQueueOutput(args: GetMsgVpnQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnQueueResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnQueue(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnQueue.
 */
export interface GetMsgVpnQueueOutputArgs {
    msgVpnName: pulumi.Input<string>;
    queueName: pulumi.Input<string>;
}
