// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnKafkaReceiver(args: GetMsgVpnKafkaReceiverArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnKafkaReceiverResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getMsgVpnKafkaReceiver:getMsgVpnKafkaReceiver", {
        "kafkaReceiverName": args.kafkaReceiverName,
        "msgVpnName": args.msgVpnName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnKafkaReceiver.
 */
export interface GetMsgVpnKafkaReceiverArgs {
    kafkaReceiverName: string;
    msgVpnName: string;
}

/**
 * A collection of values returned by getMsgVpnKafkaReceiver.
 */
export interface GetMsgVpnKafkaReceiverResult {
    readonly authenticationBasicUsername: string;
    readonly authenticationKerberosKeytabFileName: string;
    readonly authenticationKerberosServiceName: string;
    readonly authenticationKerberosUserPrincipalName: string;
    readonly authenticationOauthClientId: string;
    readonly authenticationOauthClientScope: string;
    readonly authenticationOauthClientTokenEndpoint: string;
    readonly authenticationScheme: string;
    readonly authenticationScramHash: string;
    readonly authenticationScramUsername: string;
    readonly batchDelay: number;
    readonly batchMaxSize: number;
    readonly bootstrapAddressList: string;
    readonly enabled: boolean;
    readonly groupId: string;
    readonly groupKeepaliveInterval: number;
    readonly groupKeepaliveTimeout: number;
    readonly groupMembershipType: string;
    readonly groupPartitionSchemeList: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kafkaReceiverName: string;
    readonly metadataTopicExcludeList: string;
    readonly metadataTopicRefreshInterval: number;
    readonly msgVpnName: string;
    readonly transportTlsEnabled: boolean;
}
export function getMsgVpnKafkaReceiverOutput(args: GetMsgVpnKafkaReceiverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnKafkaReceiverResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnKafkaReceiver(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnKafkaReceiver.
 */
export interface GetMsgVpnKafkaReceiverOutputArgs {
    kafkaReceiverName: pulumi.Input<string>;
    msgVpnName: pulumi.Input<string>;
}
