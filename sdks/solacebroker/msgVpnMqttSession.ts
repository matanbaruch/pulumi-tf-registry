// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MsgVpnMqttSession extends pulumi.CustomResource {
    /**
     * Get an existing MsgVpnMqttSession resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MsgVpnMqttSessionState, opts?: pulumi.CustomResourceOptions): MsgVpnMqttSession {
        return new MsgVpnMqttSession(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebroker:index/msgVpnMqttSession:MsgVpnMqttSession';

    /**
     * Returns true if the given object is an instance of MsgVpnMqttSession.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MsgVpnMqttSession {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MsgVpnMqttSession.__pulumiType;
    }

    /**
     * Enable or disable the MQTT Session. When disabled, the client is disconnected, new messages matching QoS 0 subscriptions
     * are discarded, and new messages matching QoS 1 subscriptions are stored for future delivery. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     */
    public readonly mqttSessionClientId!: pulumi.Output<string>;
    /**
     * The virtual router of the MQTT Session. The allowed values and their meaning are: <pre> "primary" - The MQTT Session
     * belongs to the primary virtual router. "backup" - The MQTT Session belongs to the backup virtual router. "auto" - The
     * MQTT Session is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
     * </pre>
     */
    public readonly mqttSessionVirtualRouter!: pulumi.Output<string>;
    /**
     * The name of the Message VPN.
     */
    public readonly msgVpnName!: pulumi.Output<string>;
    /**
     * The owner of the MQTT Session. For externally-created sessions this defaults to the Client Username of the connecting
     * client. For management-created sessions this defaults to empty. Modifying this attribute while the object (or the
     * relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to
     * false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    public readonly owner!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to
     * the standby replication Message VPN. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `true`. Available since SEMP API version 2.14.
     */
    public readonly queueConsumerAckPropagationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Dead Message Queue (DMQ) used by the MQTT Session Queue. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `"#DEAD_MSG_QUEUE"`. Available since SEMP API
     * version 2.14.
     */
    public readonly queueDeadMsgQueue!: pulumi.Output<string | undefined>;
    /**
     * Thresholds for the high number of the MQTT Session Queue Consumers Event, relative to `queue_max_bind_count`. Available
     * since SEMP API version 2.14.
     */
    public readonly queueEventBindCountThreshold!: pulumi.Output<outputs.MsgVpnMqttSessionQueueEventBindCountThreshold | undefined>;
    /**
     * The threshold for the Message Spool usage event of the MQTT Session Queue, relative to `queue_max_msg_spool_usage`.
     * Available since SEMP API version 2.14.
     */
    public readonly queueEventMsgSpoolUsageThreshold!: pulumi.Output<outputs.MsgVpnMqttSessionQueueEventMsgSpoolUsageThreshold | undefined>;
    /**
     * The threshold for the maximum allowed number of any priority messages queued in the MQTT Session Queue, relative to
     * `queue_reject_low_priority_msg_limit`. Available since SEMP API version 2.14.
     */
    public readonly queueEventRejectLowPriorityMsgLimitThreshold!: pulumi.Output<outputs.MsgVpnMqttSessionQueueEventRejectLowPriorityMsgLimitThreshold | undefined>;
    /**
     * The maximum number of consumer flows that can bind to the MQTT Session Queue. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `1000`. Available since SEMP API version 2.14.
     */
    public readonly queueMaxBindCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of messages delivered but not acknowledged per flow for the MQTT Session Queue. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10000`. Available
     * since SEMP API version 2.14.
     */
    public readonly queueMaxDeliveredUnackedMsgsPerFlow!: pulumi.Output<number | undefined>;
    /**
     * The maximum message size allowed in the MQTT Session Queue, in bytes (B). Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `10000000`. Available since SEMP API version 2.14.
     */
    public readonly queueMaxMsgSize!: pulumi.Output<number | undefined>;
    /**
     * The maximum message spool usage allowed by the MQTT Session Queue, in megabytes (MB). A value of 0 only allows spooling
     * of the last message received and disables quota checking. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `5000`. Available since SEMP API version 2.14.
     */
    public readonly queueMaxMsgSpoolUsage!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of times the MQTT Session Queue will attempt redelivery of a message prior to it being discarded or
     * moved to the DMQ. A value of 0 means to retry forever. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `0`. Available since SEMP API version 2.14.
     */
    public readonly queueMaxRedeliveryCount!: pulumi.Output<number | undefined>;
    /**
     * The maximum time in seconds a message can stay in the MQTT Session Queue when `queue_respect_ttl_enabled` is `"true"`. A
     * message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queue_max_ttl`
     * configured for the MQTT Session Queue, is exceeded. A value of 0 disables expiry. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `0`. Available since SEMP API
     * version 2.14.
     */
    public readonly queueMaxTtl!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable the checking of low priority messages against the `queue_reject_low_priority_msg_limit`. This may only
     * be enabled if `queue_reject_msg_to_sender_on_discard_behavior` does not have a value of `"never"`. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available
     * since SEMP API version 2.14.
     */
    public readonly queueRejectLowPriorityMsgEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The number of messages of any priority in the MQTT Session Queue above which low priority messages are not admitted but
     * higher priority messages are allowed. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `0`. Available since SEMP API version 2.14.
     */
    public readonly queueRejectLowPriorityMsgLimit!: pulumi.Output<number | undefined>;
    /**
     * Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause
     * the message to not be delivered to any destination and Transacted Session commits to fail. Modifying this attribute
     * while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * queue_reject_low_priority_msg_enabled will be temporarily set to false to apply the change. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `"when-queue-enabled"`. The
     * allowed values and their meaning are: <pre> "never" - Silently discard messages. "when-queue-enabled" - NACK each
     * message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.
     * "always" - NACK each message discard back to the client, including messages that are discarded because an endpoint is
     * administratively disabled. </pre> Available since SEMP API version 2.14.
     */
    public readonly queueRejectMsgToSenderOnDiscardBehavior!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable the respecting of the time-to-live (TTL) for messages in the MQTT Session Queue. When enabled, expired
     * messages are discarded or moved to the DMQ. Changes to this attribute are synchronized to HA mates and replication sites
     * via config-sync. The default value is `false`. Available since SEMP API version 2.14.
     */
    public readonly queueRespectTtlEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a MsgVpnMqttSession resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MsgVpnMqttSessionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MsgVpnMqttSessionArgs | MsgVpnMqttSessionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MsgVpnMqttSessionState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["mqttSessionClientId"] = state ? state.mqttSessionClientId : undefined;
            resourceInputs["mqttSessionVirtualRouter"] = state ? state.mqttSessionVirtualRouter : undefined;
            resourceInputs["msgVpnName"] = state ? state.msgVpnName : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["queueConsumerAckPropagationEnabled"] = state ? state.queueConsumerAckPropagationEnabled : undefined;
            resourceInputs["queueDeadMsgQueue"] = state ? state.queueDeadMsgQueue : undefined;
            resourceInputs["queueEventBindCountThreshold"] = state ? state.queueEventBindCountThreshold : undefined;
            resourceInputs["queueEventMsgSpoolUsageThreshold"] = state ? state.queueEventMsgSpoolUsageThreshold : undefined;
            resourceInputs["queueEventRejectLowPriorityMsgLimitThreshold"] = state ? state.queueEventRejectLowPriorityMsgLimitThreshold : undefined;
            resourceInputs["queueMaxBindCount"] = state ? state.queueMaxBindCount : undefined;
            resourceInputs["queueMaxDeliveredUnackedMsgsPerFlow"] = state ? state.queueMaxDeliveredUnackedMsgsPerFlow : undefined;
            resourceInputs["queueMaxMsgSize"] = state ? state.queueMaxMsgSize : undefined;
            resourceInputs["queueMaxMsgSpoolUsage"] = state ? state.queueMaxMsgSpoolUsage : undefined;
            resourceInputs["queueMaxRedeliveryCount"] = state ? state.queueMaxRedeliveryCount : undefined;
            resourceInputs["queueMaxTtl"] = state ? state.queueMaxTtl : undefined;
            resourceInputs["queueRejectLowPriorityMsgEnabled"] = state ? state.queueRejectLowPriorityMsgEnabled : undefined;
            resourceInputs["queueRejectLowPriorityMsgLimit"] = state ? state.queueRejectLowPriorityMsgLimit : undefined;
            resourceInputs["queueRejectMsgToSenderOnDiscardBehavior"] = state ? state.queueRejectMsgToSenderOnDiscardBehavior : undefined;
            resourceInputs["queueRespectTtlEnabled"] = state ? state.queueRespectTtlEnabled : undefined;
        } else {
            const args = argsOrState as MsgVpnMqttSessionArgs | undefined;
            if ((!args || args.mqttSessionClientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mqttSessionClientId'");
            }
            if ((!args || args.mqttSessionVirtualRouter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mqttSessionVirtualRouter'");
            }
            if ((!args || args.msgVpnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'msgVpnName'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["mqttSessionClientId"] = args ? args.mqttSessionClientId : undefined;
            resourceInputs["mqttSessionVirtualRouter"] = args ? args.mqttSessionVirtualRouter : undefined;
            resourceInputs["msgVpnName"] = args ? args.msgVpnName : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["queueConsumerAckPropagationEnabled"] = args ? args.queueConsumerAckPropagationEnabled : undefined;
            resourceInputs["queueDeadMsgQueue"] = args ? args.queueDeadMsgQueue : undefined;
            resourceInputs["queueEventBindCountThreshold"] = args ? args.queueEventBindCountThreshold : undefined;
            resourceInputs["queueEventMsgSpoolUsageThreshold"] = args ? args.queueEventMsgSpoolUsageThreshold : undefined;
            resourceInputs["queueEventRejectLowPriorityMsgLimitThreshold"] = args ? args.queueEventRejectLowPriorityMsgLimitThreshold : undefined;
            resourceInputs["queueMaxBindCount"] = args ? args.queueMaxBindCount : undefined;
            resourceInputs["queueMaxDeliveredUnackedMsgsPerFlow"] = args ? args.queueMaxDeliveredUnackedMsgsPerFlow : undefined;
            resourceInputs["queueMaxMsgSize"] = args ? args.queueMaxMsgSize : undefined;
            resourceInputs["queueMaxMsgSpoolUsage"] = args ? args.queueMaxMsgSpoolUsage : undefined;
            resourceInputs["queueMaxRedeliveryCount"] = args ? args.queueMaxRedeliveryCount : undefined;
            resourceInputs["queueMaxTtl"] = args ? args.queueMaxTtl : undefined;
            resourceInputs["queueRejectLowPriorityMsgEnabled"] = args ? args.queueRejectLowPriorityMsgEnabled : undefined;
            resourceInputs["queueRejectLowPriorityMsgLimit"] = args ? args.queueRejectLowPriorityMsgLimit : undefined;
            resourceInputs["queueRejectMsgToSenderOnDiscardBehavior"] = args ? args.queueRejectMsgToSenderOnDiscardBehavior : undefined;
            resourceInputs["queueRespectTtlEnabled"] = args ? args.queueRespectTtlEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MsgVpnMqttSession.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MsgVpnMqttSession resources.
 */
export interface MsgVpnMqttSessionState {
    /**
     * Enable or disable the MQTT Session. When disabled, the client is disconnected, new messages matching QoS 0 subscriptions
     * are discarded, and new messages matching QoS 1 subscriptions are stored for future delivery. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     */
    mqttSessionClientId?: pulumi.Input<string>;
    /**
     * The virtual router of the MQTT Session. The allowed values and their meaning are: <pre> "primary" - The MQTT Session
     * belongs to the primary virtual router. "backup" - The MQTT Session belongs to the backup virtual router. "auto" - The
     * MQTT Session is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
     * </pre>
     */
    mqttSessionVirtualRouter?: pulumi.Input<string>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName?: pulumi.Input<string>;
    /**
     * The owner of the MQTT Session. For externally-created sessions this defaults to the Client Username of the connecting
     * client. For management-created sessions this defaults to empty. Modifying this attribute while the object (or the
     * relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to
     * false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    owner?: pulumi.Input<string>;
    /**
     * Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to
     * the standby replication Message VPN. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `true`. Available since SEMP API version 2.14.
     */
    queueConsumerAckPropagationEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Dead Message Queue (DMQ) used by the MQTT Session Queue. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `"#DEAD_MSG_QUEUE"`. Available since SEMP API
     * version 2.14.
     */
    queueDeadMsgQueue?: pulumi.Input<string>;
    /**
     * Thresholds for the high number of the MQTT Session Queue Consumers Event, relative to `queue_max_bind_count`. Available
     * since SEMP API version 2.14.
     */
    queueEventBindCountThreshold?: pulumi.Input<inputs.MsgVpnMqttSessionQueueEventBindCountThreshold>;
    /**
     * The threshold for the Message Spool usage event of the MQTT Session Queue, relative to `queue_max_msg_spool_usage`.
     * Available since SEMP API version 2.14.
     */
    queueEventMsgSpoolUsageThreshold?: pulumi.Input<inputs.MsgVpnMqttSessionQueueEventMsgSpoolUsageThreshold>;
    /**
     * The threshold for the maximum allowed number of any priority messages queued in the MQTT Session Queue, relative to
     * `queue_reject_low_priority_msg_limit`. Available since SEMP API version 2.14.
     */
    queueEventRejectLowPriorityMsgLimitThreshold?: pulumi.Input<inputs.MsgVpnMqttSessionQueueEventRejectLowPriorityMsgLimitThreshold>;
    /**
     * The maximum number of consumer flows that can bind to the MQTT Session Queue. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `1000`. Available since SEMP API version 2.14.
     */
    queueMaxBindCount?: pulumi.Input<number>;
    /**
     * The maximum number of messages delivered but not acknowledged per flow for the MQTT Session Queue. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10000`. Available
     * since SEMP API version 2.14.
     */
    queueMaxDeliveredUnackedMsgsPerFlow?: pulumi.Input<number>;
    /**
     * The maximum message size allowed in the MQTT Session Queue, in bytes (B). Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `10000000`. Available since SEMP API version 2.14.
     */
    queueMaxMsgSize?: pulumi.Input<number>;
    /**
     * The maximum message spool usage allowed by the MQTT Session Queue, in megabytes (MB). A value of 0 only allows spooling
     * of the last message received and disables quota checking. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `5000`. Available since SEMP API version 2.14.
     */
    queueMaxMsgSpoolUsage?: pulumi.Input<number>;
    /**
     * The maximum number of times the MQTT Session Queue will attempt redelivery of a message prior to it being discarded or
     * moved to the DMQ. A value of 0 means to retry forever. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `0`. Available since SEMP API version 2.14.
     */
    queueMaxRedeliveryCount?: pulumi.Input<number>;
    /**
     * The maximum time in seconds a message can stay in the MQTT Session Queue when `queue_respect_ttl_enabled` is `"true"`. A
     * message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queue_max_ttl`
     * configured for the MQTT Session Queue, is exceeded. A value of 0 disables expiry. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `0`. Available since SEMP API
     * version 2.14.
     */
    queueMaxTtl?: pulumi.Input<number>;
    /**
     * Enable or disable the checking of low priority messages against the `queue_reject_low_priority_msg_limit`. This may only
     * be enabled if `queue_reject_msg_to_sender_on_discard_behavior` does not have a value of `"never"`. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available
     * since SEMP API version 2.14.
     */
    queueRejectLowPriorityMsgEnabled?: pulumi.Input<boolean>;
    /**
     * The number of messages of any priority in the MQTT Session Queue above which low priority messages are not admitted but
     * higher priority messages are allowed. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `0`. Available since SEMP API version 2.14.
     */
    queueRejectLowPriorityMsgLimit?: pulumi.Input<number>;
    /**
     * Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause
     * the message to not be delivered to any destination and Transacted Session commits to fail. Modifying this attribute
     * while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * queue_reject_low_priority_msg_enabled will be temporarily set to false to apply the change. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `"when-queue-enabled"`. The
     * allowed values and their meaning are: <pre> "never" - Silently discard messages. "when-queue-enabled" - NACK each
     * message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.
     * "always" - NACK each message discard back to the client, including messages that are discarded because an endpoint is
     * administratively disabled. </pre> Available since SEMP API version 2.14.
     */
    queueRejectMsgToSenderOnDiscardBehavior?: pulumi.Input<string>;
    /**
     * Enable or disable the respecting of the time-to-live (TTL) for messages in the MQTT Session Queue. When enabled, expired
     * messages are discarded or moved to the DMQ. Changes to this attribute are synchronized to HA mates and replication sites
     * via config-sync. The default value is `false`. Available since SEMP API version 2.14.
     */
    queueRespectTtlEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a MsgVpnMqttSession resource.
 */
export interface MsgVpnMqttSessionArgs {
    /**
     * Enable or disable the MQTT Session. When disabled, the client is disconnected, new messages matching QoS 0 subscriptions
     * are discarded, and new messages matching QoS 1 subscriptions are stored for future delivery. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     */
    mqttSessionClientId: pulumi.Input<string>;
    /**
     * The virtual router of the MQTT Session. The allowed values and their meaning are: <pre> "primary" - The MQTT Session
     * belongs to the primary virtual router. "backup" - The MQTT Session belongs to the backup virtual router. "auto" - The
     * MQTT Session is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
     * </pre>
     */
    mqttSessionVirtualRouter: pulumi.Input<string>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName: pulumi.Input<string>;
    /**
     * The owner of the MQTT Session. For externally-created sessions this defaults to the Client Username of the connecting
     * client. For management-created sessions this defaults to empty. Modifying this attribute while the object (or the
     * relevant part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to
     * false to apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync.
     * The default value is `""`.
     */
    owner?: pulumi.Input<string>;
    /**
     * Enable or disable the propagation of consumer acknowledgments (ACKs) received on the active replication Message VPN to
     * the standby replication Message VPN. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `true`. Available since SEMP API version 2.14.
     */
    queueConsumerAckPropagationEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Dead Message Queue (DMQ) used by the MQTT Session Queue. Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `"#DEAD_MSG_QUEUE"`. Available since SEMP API
     * version 2.14.
     */
    queueDeadMsgQueue?: pulumi.Input<string>;
    /**
     * Thresholds for the high number of the MQTT Session Queue Consumers Event, relative to `queue_max_bind_count`. Available
     * since SEMP API version 2.14.
     */
    queueEventBindCountThreshold?: pulumi.Input<inputs.MsgVpnMqttSessionQueueEventBindCountThreshold>;
    /**
     * The threshold for the Message Spool usage event of the MQTT Session Queue, relative to `queue_max_msg_spool_usage`.
     * Available since SEMP API version 2.14.
     */
    queueEventMsgSpoolUsageThreshold?: pulumi.Input<inputs.MsgVpnMqttSessionQueueEventMsgSpoolUsageThreshold>;
    /**
     * The threshold for the maximum allowed number of any priority messages queued in the MQTT Session Queue, relative to
     * `queue_reject_low_priority_msg_limit`. Available since SEMP API version 2.14.
     */
    queueEventRejectLowPriorityMsgLimitThreshold?: pulumi.Input<inputs.MsgVpnMqttSessionQueueEventRejectLowPriorityMsgLimitThreshold>;
    /**
     * The maximum number of consumer flows that can bind to the MQTT Session Queue. Changes to this attribute are synchronized
     * to HA mates and replication sites via config-sync. The default value is `1000`. Available since SEMP API version 2.14.
     */
    queueMaxBindCount?: pulumi.Input<number>;
    /**
     * The maximum number of messages delivered but not acknowledged per flow for the MQTT Session Queue. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `10000`. Available
     * since SEMP API version 2.14.
     */
    queueMaxDeliveredUnackedMsgsPerFlow?: pulumi.Input<number>;
    /**
     * The maximum message size allowed in the MQTT Session Queue, in bytes (B). Changes to this attribute are synchronized to
     * HA mates and replication sites via config-sync. The default value is `10000000`. Available since SEMP API version 2.14.
     */
    queueMaxMsgSize?: pulumi.Input<number>;
    /**
     * The maximum message spool usage allowed by the MQTT Session Queue, in megabytes (MB). A value of 0 only allows spooling
     * of the last message received and disables quota checking. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `5000`. Available since SEMP API version 2.14.
     */
    queueMaxMsgSpoolUsage?: pulumi.Input<number>;
    /**
     * The maximum number of times the MQTT Session Queue will attempt redelivery of a message prior to it being discarded or
     * moved to the DMQ. A value of 0 means to retry forever. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `0`. Available since SEMP API version 2.14.
     */
    queueMaxRedeliveryCount?: pulumi.Input<number>;
    /**
     * The maximum time in seconds a message can stay in the MQTT Session Queue when `queue_respect_ttl_enabled` is `"true"`. A
     * message expires when the lesser of the sender assigned time-to-live (TTL) in the message and the `queue_max_ttl`
     * configured for the MQTT Session Queue, is exceeded. A value of 0 disables expiry. Changes to this attribute are
     * synchronized to HA mates and replication sites via config-sync. The default value is `0`. Available since SEMP API
     * version 2.14.
     */
    queueMaxTtl?: pulumi.Input<number>;
    /**
     * Enable or disable the checking of low priority messages against the `queue_reject_low_priority_msg_limit`. This may only
     * be enabled if `queue_reject_msg_to_sender_on_discard_behavior` does not have a value of `"never"`. Changes to this
     * attribute are synchronized to HA mates and replication sites via config-sync. The default value is `false`. Available
     * since SEMP API version 2.14.
     */
    queueRejectLowPriorityMsgEnabled?: pulumi.Input<boolean>;
    /**
     * The number of messages of any priority in the MQTT Session Queue above which low priority messages are not admitted but
     * higher priority messages are allowed. Changes to this attribute are synchronized to HA mates and replication sites via
     * config-sync. The default value is `0`. Available since SEMP API version 2.14.
     */
    queueRejectLowPriorityMsgLimit?: pulumi.Input<number>;
    /**
     * Determines when to return negative acknowledgments (NACKs) to sending clients on message discards. Note that NACKs cause
     * the message to not be delivered to any destination and Transacted Session commits to fail. Modifying this attribute
     * while the object (or the relevant part of the object) is administratively enabled may be service impacting as
     * queue_reject_low_priority_msg_enabled will be temporarily set to false to apply the change. Changes to this attribute
     * are synchronized to HA mates and replication sites via config-sync. The default value is `"when-queue-enabled"`. The
     * allowed values and their meaning are: <pre> "never" - Silently discard messages. "when-queue-enabled" - NACK each
     * message discard back to the client, except messages that are discarded because an endpoint is administratively disabled.
     * "always" - NACK each message discard back to the client, including messages that are discarded because an endpoint is
     * administratively disabled. </pre> Available since SEMP API version 2.14.
     */
    queueRejectMsgToSenderOnDiscardBehavior?: pulumi.Input<string>;
    /**
     * Enable or disable the respecting of the time-to-live (TTL) for messages in the MQTT Session Queue. When enabled, expired
     * messages are discarded or moved to the DMQ. Changes to this attribute are synchronized to HA mates and replication sites
     * via config-sync. The default value is `false`. Available since SEMP API version 2.14.
     */
    queueRespectTtlEnabled?: pulumi.Input<boolean>;
}
