// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVirtualHostname(args: GetVirtualHostnameArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualHostnameResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getVirtualHostname:getVirtualHostname", {
        "virtualHostname": args.virtualHostname,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVirtualHostname.
 */
export interface GetVirtualHostnameArgs {
    virtualHostname: string;
}

/**
 * A collection of values returned by getVirtualHostname.
 */
export interface GetVirtualHostnameResult {
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly msgVpnName: string;
    readonly virtualHostname: string;
}
export function getVirtualHostnameOutput(args: GetVirtualHostnameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualHostnameResult> {
    return pulumi.output(args).apply((a: any) => getVirtualHostname(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualHostname.
 */
export interface GetVirtualHostnameOutputArgs {
    virtualHostname: pulumi.Input<string>;
}
