// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MsgVpnKafkaSenderQueueBinding extends pulumi.CustomResource {
    /**
     * Get an existing MsgVpnKafkaSenderQueueBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MsgVpnKafkaSenderQueueBindingState, opts?: pulumi.CustomResourceOptions): MsgVpnKafkaSenderQueueBinding {
        return new MsgVpnKafkaSenderQueueBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solacebroker:index/msgVpnKafkaSenderQueueBinding:MsgVpnKafkaSenderQueueBinding';

    /**
     * Returns true if the given object is an instance of MsgVpnKafkaSenderQueueBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MsgVpnKafkaSenderQueueBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MsgVpnKafkaSenderQueueBinding.__pulumiType;
    }

    /**
     * The number of acks required from the remote Kafka broker. When "none" messages are delivered at-most-once. When "one" or
     * "all" messages are delivered at-least-once but may be reordered. This must be configured as "all" for an idempotent
     * Kafka Sender, otherwise the Queue Binding will be operationally down. This corresponds to the Kafka producer API `acks`
     * configuration setting. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `"all"`. The allowed values and their meaning are: <pre> "none" - No Acks. "one" - Leader Ack Only. "all" - All Replica
     * Acks. </pre>
     */
    public readonly ackMode!: pulumi.Output<string | undefined>;
    /**
     * Enable or disable this queue binding of the Kafka Sender. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `false`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Kafka Sender.
     */
    public readonly kafkaSenderName!: pulumi.Output<string>;
    /**
     * The name of the Message VPN.
     */
    public readonly msgVpnName!: pulumi.Output<string>;
    /**
     * The hash algorithm to use for consistent partition selection. Modifying this attribute while the object (or the relevant
     * part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to
     * apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `"crc"`. The allowed values and their meaning are: <pre> "crc" - CRC Hash. "murmur2" - Murmer2 Hash.
     * "fnv1a" - Fowler-Noll-Vo 1a Hash. </pre>
     */
    public readonly partitionConsistentHash!: pulumi.Output<string | undefined>;
    /**
     * The partition number to use for explicit partition selection. Modifying this attribute while the object (or the relevant
     * part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to
     * apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `0`.
     */
    public readonly partitionExplicitNumber!: pulumi.Output<number | undefined>;
    /**
     * Enable or disable fallback to the random partition selection scheme when the consistent partition scheme is being used
     * but no partition key is available for the message. When enabled a random partition will be selected for each unkeyed
     * messages, otherwise some partition will be selected for groups of unkeyed messages. Modifying this attribute while the
     * object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be
     * temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `true`.
     */
    public readonly partitionRandomFallbackEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The partitioning scheme used to select a partition of the topic on the Kafka cluster to send messages to. This
     * corresponds to the Kafka producer API `partitioner.class` configuration setting. Modifying this attribute while the
     * object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be
     * temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `"consistent"`. The allowed values and their meaning are: <pre> "consistent"
     * - Select a consistent partition for each key value. A hash of the key will be used to select the partition number.
     * "explicit" - Select an explicit partition independent of key value. "random" - Select a random partition independent of
     * key value. </pre>
     */
    public readonly partitionScheme!: pulumi.Output<string | undefined>;
    /**
     * The name of the Queue.
     */
    public readonly queueName!: pulumi.Output<string>;
    /**
     * The Substitution Expression used to generate the key for each message sent to Kafka. This expression can include fields
     * extracted from the metadata of each individual Solace message as it is taken from the Solace Queue. If empty, no key is
     * included for each message as it is published into Kafka. Modifying this attribute while the object (or the relevant part
     * of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply
     * the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `""`.
     */
    public readonly remoteKey!: pulumi.Output<string | undefined>;
    /**
     * The Kafka Topic on the Kafka Cluster to send each message taken from the Solace Queue to. If empty, the Queue Binding
     * will not be operational. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    public readonly remoteTopic!: pulumi.Output<string | undefined>;

    /**
     * Create a MsgVpnKafkaSenderQueueBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MsgVpnKafkaSenderQueueBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MsgVpnKafkaSenderQueueBindingArgs | MsgVpnKafkaSenderQueueBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MsgVpnKafkaSenderQueueBindingState | undefined;
            resourceInputs["ackMode"] = state ? state.ackMode : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["kafkaSenderName"] = state ? state.kafkaSenderName : undefined;
            resourceInputs["msgVpnName"] = state ? state.msgVpnName : undefined;
            resourceInputs["partitionConsistentHash"] = state ? state.partitionConsistentHash : undefined;
            resourceInputs["partitionExplicitNumber"] = state ? state.partitionExplicitNumber : undefined;
            resourceInputs["partitionRandomFallbackEnabled"] = state ? state.partitionRandomFallbackEnabled : undefined;
            resourceInputs["partitionScheme"] = state ? state.partitionScheme : undefined;
            resourceInputs["queueName"] = state ? state.queueName : undefined;
            resourceInputs["remoteKey"] = state ? state.remoteKey : undefined;
            resourceInputs["remoteTopic"] = state ? state.remoteTopic : undefined;
        } else {
            const args = argsOrState as MsgVpnKafkaSenderQueueBindingArgs | undefined;
            if ((!args || args.kafkaSenderName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kafkaSenderName'");
            }
            if ((!args || args.msgVpnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'msgVpnName'");
            }
            if ((!args || args.queueName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queueName'");
            }
            resourceInputs["ackMode"] = args ? args.ackMode : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["kafkaSenderName"] = args ? args.kafkaSenderName : undefined;
            resourceInputs["msgVpnName"] = args ? args.msgVpnName : undefined;
            resourceInputs["partitionConsistentHash"] = args ? args.partitionConsistentHash : undefined;
            resourceInputs["partitionExplicitNumber"] = args ? args.partitionExplicitNumber : undefined;
            resourceInputs["partitionRandomFallbackEnabled"] = args ? args.partitionRandomFallbackEnabled : undefined;
            resourceInputs["partitionScheme"] = args ? args.partitionScheme : undefined;
            resourceInputs["queueName"] = args ? args.queueName : undefined;
            resourceInputs["remoteKey"] = args ? args.remoteKey : undefined;
            resourceInputs["remoteTopic"] = args ? args.remoteTopic : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MsgVpnKafkaSenderQueueBinding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MsgVpnKafkaSenderQueueBinding resources.
 */
export interface MsgVpnKafkaSenderQueueBindingState {
    /**
     * The number of acks required from the remote Kafka broker. When "none" messages are delivered at-most-once. When "one" or
     * "all" messages are delivered at-least-once but may be reordered. This must be configured as "all" for an idempotent
     * Kafka Sender, otherwise the Queue Binding will be operationally down. This corresponds to the Kafka producer API `acks`
     * configuration setting. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `"all"`. The allowed values and their meaning are: <pre> "none" - No Acks. "one" - Leader Ack Only. "all" - All Replica
     * Acks. </pre>
     */
    ackMode?: pulumi.Input<string>;
    /**
     * Enable or disable this queue binding of the Kafka Sender. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Kafka Sender.
     */
    kafkaSenderName?: pulumi.Input<string>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName?: pulumi.Input<string>;
    /**
     * The hash algorithm to use for consistent partition selection. Modifying this attribute while the object (or the relevant
     * part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to
     * apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `"crc"`. The allowed values and their meaning are: <pre> "crc" - CRC Hash. "murmur2" - Murmer2 Hash.
     * "fnv1a" - Fowler-Noll-Vo 1a Hash. </pre>
     */
    partitionConsistentHash?: pulumi.Input<string>;
    /**
     * The partition number to use for explicit partition selection. Modifying this attribute while the object (or the relevant
     * part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to
     * apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `0`.
     */
    partitionExplicitNumber?: pulumi.Input<number>;
    /**
     * Enable or disable fallback to the random partition selection scheme when the consistent partition scheme is being used
     * but no partition key is available for the message. When enabled a random partition will be selected for each unkeyed
     * messages, otherwise some partition will be selected for groups of unkeyed messages. Modifying this attribute while the
     * object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be
     * temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `true`.
     */
    partitionRandomFallbackEnabled?: pulumi.Input<boolean>;
    /**
     * The partitioning scheme used to select a partition of the topic on the Kafka cluster to send messages to. This
     * corresponds to the Kafka producer API `partitioner.class` configuration setting. Modifying this attribute while the
     * object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be
     * temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `"consistent"`. The allowed values and their meaning are: <pre> "consistent"
     * - Select a consistent partition for each key value. A hash of the key will be used to select the partition number.
     * "explicit" - Select an explicit partition independent of key value. "random" - Select a random partition independent of
     * key value. </pre>
     */
    partitionScheme?: pulumi.Input<string>;
    /**
     * The name of the Queue.
     */
    queueName?: pulumi.Input<string>;
    /**
     * The Substitution Expression used to generate the key for each message sent to Kafka. This expression can include fields
     * extracted from the metadata of each individual Solace message as it is taken from the Solace Queue. If empty, no key is
     * included for each message as it is published into Kafka. Modifying this attribute while the object (or the relevant part
     * of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply
     * the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `""`.
     */
    remoteKey?: pulumi.Input<string>;
    /**
     * The Kafka Topic on the Kafka Cluster to send each message taken from the Solace Queue to. If empty, the Queue Binding
     * will not be operational. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    remoteTopic?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MsgVpnKafkaSenderQueueBinding resource.
 */
export interface MsgVpnKafkaSenderQueueBindingArgs {
    /**
     * The number of acks required from the remote Kafka broker. When "none" messages are delivered at-most-once. When "one" or
     * "all" messages are delivered at-least-once but may be reordered. This must be configured as "all" for an idempotent
     * Kafka Sender, otherwise the Queue Binding will be operationally down. This corresponds to the Kafka producer API `acks`
     * configuration setting. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is
     * `"all"`. The allowed values and their meaning are: <pre> "none" - No Acks. "one" - Leader Ack Only. "all" - All Replica
     * Acks. </pre>
     */
    ackMode?: pulumi.Input<string>;
    /**
     * Enable or disable this queue binding of the Kafka Sender. Changes to this attribute are synchronized to HA mates and
     * replication sites via config-sync. The default value is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Kafka Sender.
     */
    kafkaSenderName: pulumi.Input<string>;
    /**
     * The name of the Message VPN.
     */
    msgVpnName: pulumi.Input<string>;
    /**
     * The hash algorithm to use for consistent partition selection. Modifying this attribute while the object (or the relevant
     * part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to
     * apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `"crc"`. The allowed values and their meaning are: <pre> "crc" - CRC Hash. "murmur2" - Murmer2 Hash.
     * "fnv1a" - Fowler-Noll-Vo 1a Hash. </pre>
     */
    partitionConsistentHash?: pulumi.Input<string>;
    /**
     * The partition number to use for explicit partition selection. Modifying this attribute while the object (or the relevant
     * part of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to
     * apply the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The
     * default value is `0`.
     */
    partitionExplicitNumber?: pulumi.Input<number>;
    /**
     * Enable or disable fallback to the random partition selection scheme when the consistent partition scheme is being used
     * but no partition key is available for the message. When enabled a random partition will be selected for each unkeyed
     * messages, otherwise some partition will be selected for groups of unkeyed messages. Modifying this attribute while the
     * object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be
     * temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `true`.
     */
    partitionRandomFallbackEnabled?: pulumi.Input<boolean>;
    /**
     * The partitioning scheme used to select a partition of the topic on the Kafka cluster to send messages to. This
     * corresponds to the Kafka producer API `partitioner.class` configuration setting. Modifying this attribute while the
     * object (or the relevant part of the object) is administratively enabled may be service impacting as enabled will be
     * temporarily set to false to apply the change. Changes to this attribute are synchronized to HA mates and replication
     * sites via config-sync. The default value is `"consistent"`. The allowed values and their meaning are: <pre> "consistent"
     * - Select a consistent partition for each key value. A hash of the key will be used to select the partition number.
     * "explicit" - Select an explicit partition independent of key value. "random" - Select a random partition independent of
     * key value. </pre>
     */
    partitionScheme?: pulumi.Input<string>;
    /**
     * The name of the Queue.
     */
    queueName: pulumi.Input<string>;
    /**
     * The Substitution Expression used to generate the key for each message sent to Kafka. This expression can include fields
     * extracted from the metadata of each individual Solace message as it is taken from the Solace Queue. If empty, no key is
     * included for each message as it is published into Kafka. Modifying this attribute while the object (or the relevant part
     * of the object) is administratively enabled may be service impacting as enabled will be temporarily set to false to apply
     * the change. Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default
     * value is `""`.
     */
    remoteKey?: pulumi.Input<string>;
    /**
     * The Kafka Topic on the Kafka Cluster to send each message taken from the Solace Queue to. If empty, the Queue Binding
     * will not be operational. Modifying this attribute while the object (or the relevant part of the object) is
     * administratively enabled may be service impacting as enabled will be temporarily set to false to apply the change.
     * Changes to this attribute are synchronized to HA mates and replication sites via config-sync. The default value is `""`.
     */
    remoteTopic?: pulumi.Input<string>;
}
