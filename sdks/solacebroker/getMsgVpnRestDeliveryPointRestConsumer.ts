// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getMsgVpnRestDeliveryPointRestConsumer(args: GetMsgVpnRestDeliveryPointRestConsumerArgs, opts?: pulumi.InvokeOptions): Promise<GetMsgVpnRestDeliveryPointRestConsumerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solacebroker:index/getMsgVpnRestDeliveryPointRestConsumer:getMsgVpnRestDeliveryPointRestConsumer", {
        "msgVpnName": args.msgVpnName,
        "restConsumerName": args.restConsumerName,
        "restDeliveryPointName": args.restDeliveryPointName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMsgVpnRestDeliveryPointRestConsumer.
 */
export interface GetMsgVpnRestDeliveryPointRestConsumerArgs {
    msgVpnName: string;
    restConsumerName: string;
    restDeliveryPointName: string;
}

/**
 * A collection of values returned by getMsgVpnRestDeliveryPointRestConsumer.
 */
export interface GetMsgVpnRestDeliveryPointRestConsumerResult {
    readonly authenticationAwsAccessKeyId: string;
    readonly authenticationAwsRegion: string;
    readonly authenticationAwsService: string;
    readonly authenticationHttpBasicUsername: string;
    readonly authenticationHttpHeaderName: string;
    readonly authenticationOauthClientId: string;
    readonly authenticationOauthClientScope: string;
    readonly authenticationOauthClientTokenEndpoint: string;
    readonly authenticationOauthClientTokenExpiryDefault: number;
    readonly authenticationOauthJwtTokenEndpoint: string;
    readonly authenticationOauthJwtTokenExpiryDefault: number;
    readonly authenticationScheme: string;
    readonly enabled: boolean;
    readonly httpMethod: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly localInterface: string;
    readonly maxPostWaitTime: number;
    readonly msgVpnName: string;
    readonly outgoingConnectionCount: number;
    readonly proxyName: string;
    readonly remoteHost: string;
    readonly remotePort: number;
    readonly restConsumerName: string;
    readonly restDeliveryPointName: string;
    readonly retryDelay: number;
    readonly tlsCipherSuiteList: string;
    readonly tlsEnabled: boolean;
}
export function getMsgVpnRestDeliveryPointRestConsumerOutput(args: GetMsgVpnRestDeliveryPointRestConsumerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMsgVpnRestDeliveryPointRestConsumerResult> {
    return pulumi.output(args).apply((a: any) => getMsgVpnRestDeliveryPointRestConsumer(a, opts))
}

/**
 * A collection of arguments for invoking getMsgVpnRestDeliveryPointRestConsumer.
 */
export interface GetMsgVpnRestDeliveryPointRestConsumerOutputArgs {
    msgVpnName: pulumi.Input<string>;
    restConsumerName: pulumi.Input<string>;
    restDeliveryPointName: pulumi.Input<string>;
}
