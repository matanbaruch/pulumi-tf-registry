// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNetwork(args?: GetNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getNetwork:getNetwork", {
        "constraints": args.constraints,
        "id": args.id,
        "name": args.name,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkArgs {
    constraints?: inputs.GetNetworkConstraint[];
    id?: string;
    name?: string;
    tags?: inputs.GetNetworkTag[];
}

/**
 * A collection of values returned by getNetwork.
 */
export interface GetNetworkResult {
    readonly cidr: string;
    readonly constraints?: outputs.GetNetworkConstraint[];
    readonly customProperties: {[key: string]: string};
    readonly deploymentId: string;
    readonly description: string;
    readonly externalId: string;
    readonly externalZoneId: string;
    readonly id: string;
    readonly links: outputs.GetNetworkLink[];
    readonly name: string;
    readonly organizationId: string;
    readonly outboundAccess: boolean;
    readonly owner: string;
    readonly projectId: string;
    readonly selfLink: string;
    readonly tags?: outputs.GetNetworkTag[];
    readonly updatedAt: string;
}
export function getNetworkOutput(args?: GetNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkResult> {
    return pulumi.output(args).apply((a: any) => getNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getNetwork.
 */
export interface GetNetworkOutputArgs {
    constraints?: pulumi.Input<pulumi.Input<inputs.GetNetworkConstraintArgs>[]>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNetworkTagArgs>[]>;
}
