// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDeployment(args?: GetDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getDeployment:getDeployment", {
        "expandLastRequest": args.expandLastRequest,
        "expandProject": args.expandProject,
        "expandResources": args.expandResources,
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeployment.
 */
export interface GetDeploymentArgs {
    expandLastRequest?: boolean;
    expandProject?: boolean;
    expandResources?: boolean;
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getDeployment.
 */
export interface GetDeploymentResult {
    readonly blueprintId: string;
    readonly blueprintVersion: string;
    readonly catalogItemId: string;
    readonly catalogItemVersion: string;
    readonly createdAt: string;
    readonly createdBy: string;
    readonly description: string;
    readonly expandLastRequest?: boolean;
    readonly expandProject?: boolean;
    readonly expandResources?: boolean;
    readonly expenses: outputs.GetDeploymentExpense[];
    readonly id: string;
    readonly inputs: {[key: string]: string};
    readonly lastRequests: outputs.GetDeploymentLastRequest[];
    readonly lastUpdatedAt: string;
    readonly lastUpdatedBy: string;
    readonly leaseExpireAt: string;
    readonly name: string;
    readonly orgId: string;
    readonly owner: string;
    readonly projectId: string;
    readonly projects: outputs.GetDeploymentProject[];
    readonly resources: outputs.GetDeploymentResource[];
    readonly status: string;
}
export function getDeploymentOutput(args?: GetDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getDeployment.
 */
export interface GetDeploymentOutputArgs {
    expandLastRequest?: pulumi.Input<boolean>;
    expandProject?: pulumi.Input<boolean>;
    expandResources?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
