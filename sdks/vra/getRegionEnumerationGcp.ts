// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRegionEnumerationGcp(args: GetRegionEnumerationGcpArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionEnumerationGcpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getRegionEnumerationGcp:getRegionEnumerationGcp", {
        "clientEmail": args.clientEmail,
        "id": args.id,
        "privateKey": args.privateKey,
        "privateKeyId": args.privateKeyId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRegionEnumerationGcp.
 */
export interface GetRegionEnumerationGcpArgs {
    clientEmail: string;
    id?: string;
    privateKey: string;
    privateKeyId: string;
    projectId: string;
}

/**
 * A collection of values returned by getRegionEnumerationGcp.
 */
export interface GetRegionEnumerationGcpResult {
    readonly clientEmail: string;
    readonly id: string;
    readonly privateKey: string;
    readonly privateKeyId: string;
    readonly projectId: string;
    readonly regions: string[];
}
export function getRegionEnumerationGcpOutput(args: GetRegionEnumerationGcpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegionEnumerationGcpResult> {
    return pulumi.output(args).apply((a: any) => getRegionEnumerationGcp(a, opts))
}

/**
 * A collection of arguments for invoking getRegionEnumerationGcp.
 */
export interface GetRegionEnumerationGcpOutputArgs {
    clientEmail: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
