// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRegion(args?: GetRegionArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getRegion:getRegion", {
        "cloudAccountId": args.cloudAccountId,
        "filter": args.filter,
        "id": args.id,
        "region": args.region,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRegion.
 */
export interface GetRegionArgs {
    cloudAccountId?: string;
    filter?: string;
    id?: string;
    region?: string;
}

/**
 * A collection of values returned by getRegion.
 */
export interface GetRegionResult {
    readonly cloudAccountId: string;
    readonly createdAt: string;
    readonly externalRegionId: string;
    readonly filter?: string;
    readonly id: string;
    readonly name: string;
    readonly orgId: string;
    readonly owner: string;
    readonly region?: string;
    readonly updatedAt: string;
}
export function getRegionOutput(args?: GetRegionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegionResult> {
    return pulumi.output(args).apply((a: any) => getRegion(a, opts))
}

/**
 * A collection of arguments for invoking getRegion.
 */
export interface GetRegionOutputArgs {
    cloudAccountId?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
