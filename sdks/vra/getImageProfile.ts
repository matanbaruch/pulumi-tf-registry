// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getImageProfile(args?: GetImageProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetImageProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getImageProfile:getImageProfile", {
        "description": args.description,
        "filter": args.filter,
        "id": args.id,
        "imageMappings": args.imageMappings,
        "name": args.name,
        "regionId": args.regionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getImageProfile.
 */
export interface GetImageProfileArgs {
    description?: string;
    filter?: string;
    id?: string;
    imageMappings?: inputs.GetImageProfileImageMapping[];
    name?: string;
    regionId?: string;
}

/**
 * A collection of values returned by getImageProfile.
 */
export interface GetImageProfileResult {
    readonly createdAt: string;
    readonly description?: string;
    readonly externalRegionId: string;
    readonly filter?: string;
    readonly id: string;
    readonly imageMappings?: outputs.GetImageProfileImageMapping[];
    readonly name: string;
    readonly owner: string;
    readonly regionId: string;
    readonly updatedAt: string;
}
export function getImageProfileOutput(args?: GetImageProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageProfileResult> {
    return pulumi.output(args).apply((a: any) => getImageProfile(a, opts))
}

/**
 * A collection of arguments for invoking getImageProfile.
 */
export interface GetImageProfileOutputArgs {
    description?: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    imageMappings?: pulumi.Input<pulumi.Input<inputs.GetImageProfileImageMappingArgs>[]>;
    name?: pulumi.Input<string>;
    regionId?: pulumi.Input<string>;
}
