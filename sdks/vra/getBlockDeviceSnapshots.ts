// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlockDeviceSnapshots(args: GetBlockDeviceSnapshotsArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockDeviceSnapshotsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getBlockDeviceSnapshots:getBlockDeviceSnapshots", {
        "blockDeviceId": args.blockDeviceId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlockDeviceSnapshots.
 */
export interface GetBlockDeviceSnapshotsArgs {
    blockDeviceId: string;
    id?: string;
}

/**
 * A collection of values returned by getBlockDeviceSnapshots.
 */
export interface GetBlockDeviceSnapshotsResult {
    readonly blockDeviceId: string;
    readonly id: string;
    readonly snapshots: outputs.GetBlockDeviceSnapshotsSnapshot[];
}
export function getBlockDeviceSnapshotsOutput(args: GetBlockDeviceSnapshotsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockDeviceSnapshotsResult> {
    return pulumi.output(args).apply((a: any) => getBlockDeviceSnapshots(a, opts))
}

/**
 * A collection of arguments for invoking getBlockDeviceSnapshots.
 */
export interface GetBlockDeviceSnapshotsOutputArgs {
    blockDeviceId: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
