// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getContentSharingPolicy(args?: GetContentSharingPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetContentSharingPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getContentSharingPolicy:getContentSharingPolicy", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getContentSharingPolicy.
 */
export interface GetContentSharingPolicyArgs {
    id?: string;
    name?: string;
}

/**
 * A collection of values returned by getContentSharingPolicy.
 */
export interface GetContentSharingPolicyResult {
    readonly catalogItemIds: string[];
    readonly catalogSourceIds: string[];
    readonly createdAt: string;
    readonly createdBy: string;
    readonly description: string;
    readonly id: string;
    readonly lastUpdatedAt: string;
    readonly lastUpdatedBy: string;
    readonly name: string;
    readonly orgId: string;
    readonly projectId: string;
}
export function getContentSharingPolicyOutput(args?: GetContentSharingPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContentSharingPolicyResult> {
    return pulumi.output(args).apply((a: any) => getContentSharingPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getContentSharingPolicy.
 */
export interface GetContentSharingPolicyOutputArgs {
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
}
