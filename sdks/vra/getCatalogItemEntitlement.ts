// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCatalogItemEntitlement(args: GetCatalogItemEntitlementArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalogItemEntitlementResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getCatalogItemEntitlement:getCatalogItemEntitlement", {
        "catalogItemId": args.catalogItemId,
        "id": args.id,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCatalogItemEntitlement.
 */
export interface GetCatalogItemEntitlementArgs {
    catalogItemId?: string;
    id?: string;
    projectId: string;
}

/**
 * A collection of values returned by getCatalogItemEntitlement.
 */
export interface GetCatalogItemEntitlementResult {
    readonly catalogItemId?: string;
    readonly definitions: outputs.GetCatalogItemEntitlementDefinition[];
    readonly id?: string;
    readonly projectId: string;
}
export function getCatalogItemEntitlementOutput(args: GetCatalogItemEntitlementOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCatalogItemEntitlementResult> {
    return pulumi.output(args).apply((a: any) => getCatalogItemEntitlement(a, opts))
}

/**
 * A collection of arguments for invoking getCatalogItemEntitlement.
 */
export interface GetCatalogItemEntitlementOutputArgs {
    catalogItemId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
