// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkIpRange extends pulumi.CustomResource {
    /**
     * Get an existing NetworkIpRange resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkIpRangeState, opts?: pulumi.CustomResourceOptions): NetworkIpRange {
        return new NetworkIpRange(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vra:index/networkIpRange:NetworkIpRange';

    /**
     * Returns true if the given object is an instance of NetworkIpRange.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkIpRange {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkIpRange.__pulumiType;
    }

    /**
     * Date when the entity was created. The date is in ISO 8601 and UTC.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A human-friendly description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * End IP address of the range.
     */
    public readonly endIpAddress!: pulumi.Output<string>;
    /**
     * External entity Id on the provider side.
     */
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    /**
     * The Id of the fabric network.
     *
     * @deprecated Deprecated
     */
    public readonly fabricNetworkId!: pulumi.Output<string | undefined>;
    /**
     * The Ids of the fabric networks.
     */
    public readonly fabricNetworkIds!: pulumi.Output<string[] | undefined>;
    /**
     * IP address version: IPv4 or IPv6.
     */
    public readonly ipVersion!: pulumi.Output<string>;
    public /*out*/ readonly links!: pulumi.Output<outputs.NetworkIpRangeLink[]>;
    /**
     * The name of the network IP range.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The id of the organization this entity belongs to.
     */
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * Email of the user that owns the entity.
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * Start IP address of the range.
     */
    public readonly startIpAddress!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.NetworkIpRangeTag[] | undefined>;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a NetworkIpRange resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkIpRangeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkIpRangeArgs | NetworkIpRangeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkIpRangeState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endIpAddress"] = state ? state.endIpAddress : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["fabricNetworkId"] = state ? state.fabricNetworkId : undefined;
            resourceInputs["fabricNetworkIds"] = state ? state.fabricNetworkIds : undefined;
            resourceInputs["ipVersion"] = state ? state.ipVersion : undefined;
            resourceInputs["links"] = state ? state.links : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["startIpAddress"] = state ? state.startIpAddress : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as NetworkIpRangeArgs | undefined;
            if ((!args || args.endIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endIpAddress'");
            }
            if ((!args || args.ipVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipVersion'");
            }
            if ((!args || args.startIpAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startIpAddress'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endIpAddress"] = args ? args.endIpAddress : undefined;
            resourceInputs["fabricNetworkId"] = args ? args.fabricNetworkId : undefined;
            resourceInputs["fabricNetworkIds"] = args ? args.fabricNetworkIds : undefined;
            resourceInputs["ipVersion"] = args ? args.ipVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["startIpAddress"] = args ? args.startIpAddress : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkIpRange.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NetworkIpRange resources.
 */
export interface NetworkIpRangeState {
    /**
     * Date when the entity was created. The date is in ISO 8601 and UTC.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * End IP address of the range.
     */
    endIpAddress?: pulumi.Input<string>;
    /**
     * External entity Id on the provider side.
     */
    externalId?: pulumi.Input<string>;
    /**
     * The Id of the fabric network.
     *
     * @deprecated Deprecated
     */
    fabricNetworkId?: pulumi.Input<string>;
    /**
     * The Ids of the fabric networks.
     */
    fabricNetworkIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP address version: IPv4 or IPv6.
     */
    ipVersion?: pulumi.Input<string>;
    links?: pulumi.Input<pulumi.Input<inputs.NetworkIpRangeLink>[]>;
    /**
     * The name of the network IP range.
     */
    name?: pulumi.Input<string>;
    /**
     * The id of the organization this entity belongs to.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Email of the user that owns the entity.
     */
    owner?: pulumi.Input<string>;
    /**
     * Start IP address of the range.
     */
    startIpAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.NetworkIpRangeTag>[]>;
    /**
     * Date when the entity was last updated. The date is ISO 8601 and UTC.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkIpRange resource.
 */
export interface NetworkIpRangeArgs {
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * End IP address of the range.
     */
    endIpAddress: pulumi.Input<string>;
    /**
     * The Id of the fabric network.
     *
     * @deprecated Deprecated
     */
    fabricNetworkId?: pulumi.Input<string>;
    /**
     * The Ids of the fabric networks.
     */
    fabricNetworkIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IP address version: IPv4 or IPv6.
     */
    ipVersion: pulumi.Input<string>;
    /**
     * The name of the network IP range.
     */
    name?: pulumi.Input<string>;
    /**
     * Start IP address of the range.
     */
    startIpAddress: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.NetworkIpRangeTag>[]>;
}
