// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProject(args?: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getProject:getProject", {
        "administratorRoles": args.administratorRoles,
        "administrators": args.administrators,
        "constraints": args.constraints,
        "customProperties": args.customProperties,
        "description": args.description,
        "id": args.id,
        "machineNamingTemplate": args.machineNamingTemplate,
        "memberRoles": args.memberRoles,
        "members": args.members,
        "name": args.name,
        "operationTimeout": args.operationTimeout,
        "placementPolicy": args.placementPolicy,
        "sharedResources": args.sharedResources,
        "supervisorRoles": args.supervisorRoles,
        "viewerRoles": args.viewerRoles,
        "viewers": args.viewers,
        "zoneAssignments": args.zoneAssignments,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectArgs {
    administratorRoles?: inputs.GetProjectAdministratorRole[];
    /**
     * @deprecated Deprecated
     */
    administrators?: string[];
    constraints?: inputs.GetProjectConstraints;
    customProperties?: {[key: string]: string};
    description?: string;
    id?: string;
    machineNamingTemplate?: string;
    memberRoles?: inputs.GetProjectMemberRole[];
    /**
     * @deprecated Deprecated
     */
    members?: string[];
    name?: string;
    operationTimeout?: number;
    placementPolicy?: string;
    sharedResources?: boolean;
    supervisorRoles?: inputs.GetProjectSupervisorRole[];
    viewerRoles?: inputs.GetProjectViewerRole[];
    /**
     * @deprecated Deprecated
     */
    viewers?: string[];
    zoneAssignments?: inputs.GetProjectZoneAssignment[];
}

/**
 * A collection of values returned by getProject.
 */
export interface GetProjectResult {
    readonly administratorRoles?: outputs.GetProjectAdministratorRole[];
    /**
     * @deprecated Deprecated
     */
    readonly administrators: string[];
    readonly constraints?: outputs.GetProjectConstraints;
    readonly customProperties?: {[key: string]: string};
    readonly description: string;
    readonly id: string;
    readonly machineNamingTemplate?: string;
    readonly memberRoles?: outputs.GetProjectMemberRole[];
    /**
     * @deprecated Deprecated
     */
    readonly members: string[];
    readonly name: string;
    readonly operationTimeout?: number;
    readonly placementPolicy?: string;
    readonly sharedResources: boolean;
    readonly supervisorRoles?: outputs.GetProjectSupervisorRole[];
    readonly viewerRoles?: outputs.GetProjectViewerRole[];
    /**
     * @deprecated Deprecated
     */
    readonly viewers: string[];
    readonly zoneAssignments?: outputs.GetProjectZoneAssignment[];
}
export function getProjectOutput(args?: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult> {
    return pulumi.output(args).apply((a: any) => getProject(a, opts))
}

/**
 * A collection of arguments for invoking getProject.
 */
export interface GetProjectOutputArgs {
    administratorRoles?: pulumi.Input<pulumi.Input<inputs.GetProjectAdministratorRoleArgs>[]>;
    /**
     * @deprecated Deprecated
     */
    administrators?: pulumi.Input<pulumi.Input<string>[]>;
    constraints?: pulumi.Input<inputs.GetProjectConstraintsArgs>;
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    machineNamingTemplate?: pulumi.Input<string>;
    memberRoles?: pulumi.Input<pulumi.Input<inputs.GetProjectMemberRoleArgs>[]>;
    /**
     * @deprecated Deprecated
     */
    members?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    operationTimeout?: pulumi.Input<number>;
    placementPolicy?: pulumi.Input<string>;
    sharedResources?: pulumi.Input<boolean>;
    supervisorRoles?: pulumi.Input<pulumi.Input<inputs.GetProjectSupervisorRoleArgs>[]>;
    viewerRoles?: pulumi.Input<pulumi.Input<inputs.GetProjectViewerRoleArgs>[]>;
    /**
     * @deprecated Deprecated
     */
    viewers?: pulumi.Input<pulumi.Input<string>[]>;
    zoneAssignments?: pulumi.Input<pulumi.Input<inputs.GetProjectZoneAssignmentArgs>[]>;
}
