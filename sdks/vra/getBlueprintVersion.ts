// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBlueprintVersion(args: GetBlueprintVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetBlueprintVersionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getBlueprintVersion:getBlueprintVersion", {
        "blueprintId": args.blueprintId,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlueprintVersion.
 */
export interface GetBlueprintVersionArgs {
    blueprintId: string;
    id: string;
}

/**
 * A collection of values returned by getBlueprintVersion.
 */
export interface GetBlueprintVersionResult {
    readonly blueprintDescription: string;
    readonly blueprintId: string;
    readonly content: string;
    readonly createdAt: string;
    readonly createdBy: string;
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly orgId: string;
    readonly projectId: string;
    readonly projectName: string;
    readonly status: string;
    readonly updatedAt: string;
    readonly updatedBy: string;
    readonly valid: string;
    readonly version: string;
    readonly versionChangeLog: string;
}
export function getBlueprintVersionOutput(args: GetBlueprintVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlueprintVersionResult> {
    return pulumi.output(args).apply((a: any) => getBlueprintVersion(a, opts))
}

/**
 * A collection of arguments for invoking getBlueprintVersion.
 */
export interface GetBlueprintVersionOutputArgs {
    blueprintId: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
