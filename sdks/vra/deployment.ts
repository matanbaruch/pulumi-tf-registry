// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentState, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vra:index/deployment:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * The content of the the cloud template to be used to request the deployment.
     */
    public readonly blueprintContent!: pulumi.Output<string | undefined>;
    /**
     * The id of the cloud template to be used to request the deployment.
     */
    public readonly blueprintId!: pulumi.Output<string>;
    /**
     * The version of the cloud template to be used to request the deployment.
     */
    public readonly blueprintVersion!: pulumi.Output<string>;
    /**
     * The id of the catalog item to be used to request the deployment.
     */
    public readonly catalogItemId!: pulumi.Output<string>;
    /**
     * The version of the catalog item to be used to request the deployment.
     */
    public readonly catalogItemVersion!: pulumi.Output<string>;
    /**
     * Date when the entity was created. The date is in ISO 6801 and UTC.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The user the entity was created by.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * A human-friendly description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly expandLastRequest!: pulumi.Output<boolean | undefined>;
    /**
     * Flag to indicate whether to expand project information.
     */
    public readonly expandProject!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly expandResources!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly expenses!: pulumi.Output<outputs.DeploymentExpense[]>;
    /**
     * Inputs provided by the user. For inputs including those with default values, refer to inputs_including_defaults.
     */
    public readonly inputs!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * All the inputs applied during last create/update operation, including those with default values.
     */
    public /*out*/ readonly inputsIncludingDefaults!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly lastRequests!: pulumi.Output<outputs.DeploymentLastRequest[]>;
    /**
     * Date when the entity was last updated. The date is in ISO 6801 and UTC.
     */
    public /*out*/ readonly lastUpdatedAt!: pulumi.Output<string>;
    /**
     * The user that last updated the deployment.
     */
    public /*out*/ readonly lastUpdatedBy!: pulumi.Output<string>;
    /**
     * Date when the deployment lease expire. The date is in ISO 6801 and UTC.
     */
    public /*out*/ readonly leaseExpireAt!: pulumi.Output<string>;
    /**
     * The name of the deployment.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Id of the organization this deployment belongs to.
     */
    public /*out*/ readonly orgId!: pulumi.Output<string>;
    /**
     * The user this deployment belongs to.
     */
    public readonly owner!: pulumi.Output<string>;
    /**
     * The id of the project this deployment belongs to.
     */
    public readonly projectId!: pulumi.Output<string>;
    public /*out*/ readonly projects!: pulumi.Output<outputs.DeploymentProject[]>;
    /**
     * Reason for requesting/updating a blueprint.
     */
    public readonly reason!: pulumi.Output<string | undefined>;
    public /*out*/ readonly resources!: pulumi.Output<outputs.DeploymentResource[]>;
    /**
     * The status of the deployment with respect to its life cycle operations.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.DeploymentTimeouts | undefined>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentArgs | DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentState | undefined;
            resourceInputs["blueprintContent"] = state ? state.blueprintContent : undefined;
            resourceInputs["blueprintId"] = state ? state.blueprintId : undefined;
            resourceInputs["blueprintVersion"] = state ? state.blueprintVersion : undefined;
            resourceInputs["catalogItemId"] = state ? state.catalogItemId : undefined;
            resourceInputs["catalogItemVersion"] = state ? state.catalogItemVersion : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expandLastRequest"] = state ? state.expandLastRequest : undefined;
            resourceInputs["expandProject"] = state ? state.expandProject : undefined;
            resourceInputs["expandResources"] = state ? state.expandResources : undefined;
            resourceInputs["expenses"] = state ? state.expenses : undefined;
            resourceInputs["inputs"] = state ? state.inputs : undefined;
            resourceInputs["inputsIncludingDefaults"] = state ? state.inputsIncludingDefaults : undefined;
            resourceInputs["lastRequests"] = state ? state.lastRequests : undefined;
            resourceInputs["lastUpdatedAt"] = state ? state.lastUpdatedAt : undefined;
            resourceInputs["lastUpdatedBy"] = state ? state.lastUpdatedBy : undefined;
            resourceInputs["leaseExpireAt"] = state ? state.leaseExpireAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["projects"] = state ? state.projects : undefined;
            resourceInputs["reason"] = state ? state.reason : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as DeploymentArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["blueprintContent"] = args ? args.blueprintContent : undefined;
            resourceInputs["blueprintId"] = args ? args.blueprintId : undefined;
            resourceInputs["blueprintVersion"] = args ? args.blueprintVersion : undefined;
            resourceInputs["catalogItemId"] = args ? args.catalogItemId : undefined;
            resourceInputs["catalogItemVersion"] = args ? args.catalogItemVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expandLastRequest"] = args ? args.expandLastRequest : undefined;
            resourceInputs["expandProject"] = args ? args.expandProject : undefined;
            resourceInputs["expandResources"] = args ? args.expandResources : undefined;
            resourceInputs["inputs"] = args ? args.inputs : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["reason"] = args ? args.reason : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["expenses"] = undefined /*out*/;
            resourceInputs["inputsIncludingDefaults"] = undefined /*out*/;
            resourceInputs["lastRequests"] = undefined /*out*/;
            resourceInputs["lastUpdatedAt"] = undefined /*out*/;
            resourceInputs["lastUpdatedBy"] = undefined /*out*/;
            resourceInputs["leaseExpireAt"] = undefined /*out*/;
            resourceInputs["orgId"] = undefined /*out*/;
            resourceInputs["projects"] = undefined /*out*/;
            resourceInputs["resources"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deployment.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Deployment resources.
 */
export interface DeploymentState {
    /**
     * The content of the the cloud template to be used to request the deployment.
     */
    blueprintContent?: pulumi.Input<string>;
    /**
     * The id of the cloud template to be used to request the deployment.
     */
    blueprintId?: pulumi.Input<string>;
    /**
     * The version of the cloud template to be used to request the deployment.
     */
    blueprintVersion?: pulumi.Input<string>;
    /**
     * The id of the catalog item to be used to request the deployment.
     */
    catalogItemId?: pulumi.Input<string>;
    /**
     * The version of the catalog item to be used to request the deployment.
     */
    catalogItemVersion?: pulumi.Input<string>;
    /**
     * Date when the entity was created. The date is in ISO 6801 and UTC.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The user the entity was created by.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    expandLastRequest?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether to expand project information.
     */
    expandProject?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    expandResources?: pulumi.Input<boolean>;
    expenses?: pulumi.Input<pulumi.Input<inputs.DeploymentExpense>[]>;
    /**
     * Inputs provided by the user. For inputs including those with default values, refer to inputs_including_defaults.
     */
    inputs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * All the inputs applied during last create/update operation, including those with default values.
     */
    inputsIncludingDefaults?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    lastRequests?: pulumi.Input<pulumi.Input<inputs.DeploymentLastRequest>[]>;
    /**
     * Date when the entity was last updated. The date is in ISO 6801 and UTC.
     */
    lastUpdatedAt?: pulumi.Input<string>;
    /**
     * The user that last updated the deployment.
     */
    lastUpdatedBy?: pulumi.Input<string>;
    /**
     * Date when the deployment lease expire. The date is in ISO 6801 and UTC.
     */
    leaseExpireAt?: pulumi.Input<string>;
    /**
     * The name of the deployment.
     */
    name?: pulumi.Input<string>;
    /**
     * The Id of the organization this deployment belongs to.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The user this deployment belongs to.
     */
    owner?: pulumi.Input<string>;
    /**
     * The id of the project this deployment belongs to.
     */
    projectId?: pulumi.Input<string>;
    projects?: pulumi.Input<pulumi.Input<inputs.DeploymentProject>[]>;
    /**
     * Reason for requesting/updating a blueprint.
     */
    reason?: pulumi.Input<string>;
    resources?: pulumi.Input<pulumi.Input<inputs.DeploymentResource>[]>;
    /**
     * The status of the deployment with respect to its life cycle operations.
     */
    status?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DeploymentTimeouts>;
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * The content of the the cloud template to be used to request the deployment.
     */
    blueprintContent?: pulumi.Input<string>;
    /**
     * The id of the cloud template to be used to request the deployment.
     */
    blueprintId?: pulumi.Input<string>;
    /**
     * The version of the cloud template to be used to request the deployment.
     */
    blueprintVersion?: pulumi.Input<string>;
    /**
     * The id of the catalog item to be used to request the deployment.
     */
    catalogItemId?: pulumi.Input<string>;
    /**
     * The version of the catalog item to be used to request the deployment.
     */
    catalogItemVersion?: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * @deprecated Deprecated
     */
    expandLastRequest?: pulumi.Input<boolean>;
    /**
     * Flag to indicate whether to expand project information.
     */
    expandProject?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    expandResources?: pulumi.Input<boolean>;
    /**
     * Inputs provided by the user. For inputs including those with default values, refer to inputs_including_defaults.
     */
    inputs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the deployment.
     */
    name?: pulumi.Input<string>;
    /**
     * The user this deployment belongs to.
     */
    owner?: pulumi.Input<string>;
    /**
     * The id of the project this deployment belongs to.
     */
    projectId: pulumi.Input<string>;
    /**
     * Reason for requesting/updating a blueprint.
     */
    reason?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.DeploymentTimeouts>;
}
