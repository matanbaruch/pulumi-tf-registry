// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageProfile(args?: GetStorageProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getStorageProfile:getStorageProfile", {
        "description": args.description,
        "diskProperties": args.diskProperties,
        "filter": args.filter,
        "id": args.id,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageProfile.
 */
export interface GetStorageProfileArgs {
    description?: string;
    diskProperties?: {[key: string]: string};
    filter?: string;
    id?: string;
    tags?: inputs.GetStorageProfileTag[];
}

/**
 * A collection of values returned by getStorageProfile.
 */
export interface GetStorageProfileResult {
    readonly cloudAccountId: string;
    readonly createdAt: string;
    readonly defaultItem: boolean;
    readonly description?: string;
    readonly diskProperties: {[key: string]: string};
    readonly externalRegionId: string;
    readonly filter?: string;
    readonly id: string;
    readonly links: outputs.GetStorageProfileLink[];
    readonly name: string;
    readonly orgId: string;
    readonly owner: string;
    readonly supportsEncryption: boolean;
    readonly tags?: outputs.GetStorageProfileTag[];
    readonly updatedAt: string;
}
export function getStorageProfileOutput(args?: GetStorageProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageProfileResult> {
    return pulumi.output(args).apply((a: any) => getStorageProfile(a, opts))
}

/**
 * A collection of arguments for invoking getStorageProfile.
 */
export interface GetStorageProfileOutputArgs {
    description?: pulumi.Input<string>;
    diskProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageProfileTagArgs>[]>;
}
