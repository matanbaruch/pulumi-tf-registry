// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageProfileVsphere(args?: GetStorageProfileVsphereArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageProfileVsphereResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vra:index/getStorageProfileVsphere:getStorageProfileVsphere", {
        "filter": args.filter,
        "id": args.id,
        "sharesLevel": args.sharesLevel,
        "tags": args.tags,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageProfileVsphere.
 */
export interface GetStorageProfileVsphereArgs {
    filter?: string;
    id?: string;
    sharesLevel?: string;
    tags?: inputs.GetStorageProfileVsphereTag[];
}

/**
 * A collection of values returned by getStorageProfileVsphere.
 */
export interface GetStorageProfileVsphereResult {
    readonly cloudAccountId: string;
    readonly createdAt: string;
    readonly defaultItem: boolean;
    readonly description: string;
    readonly diskMode: string;
    readonly diskType: string;
    readonly externalRegionId: string;
    readonly filter?: string;
    readonly id: string;
    readonly limitIops: string;
    readonly links: outputs.GetStorageProfileVsphereLink[];
    readonly name: string;
    readonly orgId: string;
    readonly owner: string;
    readonly provisioningType: string;
    readonly shares: string;
    readonly sharesLevel?: string;
    readonly supportsEncryption: boolean;
    readonly tags?: outputs.GetStorageProfileVsphereTag[];
    readonly updatedAt: string;
}
export function getStorageProfileVsphereOutput(args?: GetStorageProfileVsphereOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageProfileVsphereResult> {
    return pulumi.output(args).apply((a: any) => getStorageProfileVsphere(a, opts))
}

/**
 * A collection of arguments for invoking getStorageProfileVsphere.
 */
export interface GetStorageProfileVsphereOutputArgs {
    filter?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    sharesLevel?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageProfileVsphereTagArgs>[]>;
}
