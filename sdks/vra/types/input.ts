// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BlockDeviceConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface BlockDeviceLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface BlockDeviceSnapshot {
    createdAt: pulumi.Input<string>;
    description: pulumi.Input<string>;
    id: pulumi.Input<string>;
    isCurrent: pulumi.Input<boolean>;
    links: pulumi.Input<pulumi.Input<inputs.BlockDeviceSnapshotLink>[]>;
    name: pulumi.Input<string>;
    orgId: pulumi.Input<string>;
    owner: pulumi.Input<string>;
    updatedAt: pulumi.Input<string>;
}

export interface BlockDeviceSnapshotLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface BlockDeviceSnapshotTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlockDeviceTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface BlockDeviceTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BlueprintValidationMessage {
    message: pulumi.Input<string>;
    metadata: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    path: pulumi.Input<string>;
    resourceName: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CatalogItemEntitlementDefinition {
    description: pulumi.Input<string>;
    iconId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    numberOfItems: pulumi.Input<number>;
    sourceName: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CatalogSourceEntitlementDefinition {
    description: pulumi.Input<string>;
    iconId: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    numberOfItems: pulumi.Input<number>;
    sourceName: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CloudAccountAwsLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountAwsTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudAccountAzureLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountAzureTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudAccountGcpLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountGcpTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudAccountNsxtLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountNsxtTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudAccountNsxvLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountNsxvTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudAccountVmcLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountVmcTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface CloudAccountVsphereLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface CloudAccountVsphereTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ContentSourceConfig {
    branch?: pulumi.Input<string>;
    contentType?: pulumi.Input<string>;
    integrationId: pulumi.Input<string>;
    path: pulumi.Input<string>;
    projectName: pulumi.Input<string>;
    repository?: pulumi.Input<string>;
}

export interface DeploymentExpense {
    additionalExpense: pulumi.Input<number>;
    code: pulumi.Input<string>;
    computeExpense: pulumi.Input<number>;
    lastUpdateTime: pulumi.Input<string>;
    message: pulumi.Input<string>;
    networkExpense: pulumi.Input<number>;
    storageExpense: pulumi.Input<number>;
    totalExpense: pulumi.Input<number>;
    unit: pulumi.Input<string>;
}

export interface DeploymentLastRequest {
    actionId: pulumi.Input<string>;
    approvedAt: pulumi.Input<string>;
    blueprintId: pulumi.Input<string>;
    cancelable: pulumi.Input<boolean>;
    catalogItemId: pulumi.Input<string>;
    completedAt: pulumi.Input<string>;
    completedTasks: pulumi.Input<number>;
    createdAt: pulumi.Input<string>;
    details: pulumi.Input<string>;
    dismissed: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    initializedAt: pulumi.Input<string>;
    inputs: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
    outputs: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    requestedBy: pulumi.Input<string>;
    resourceIds: pulumi.Input<pulumi.Input<string>[]>;
    status: pulumi.Input<string>;
    totalTasks: pulumi.Input<number>;
    updatedAt: pulumi.Input<string>;
}

export interface DeploymentProject {
    description: pulumi.Input<string>;
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    version: pulumi.Input<string>;
}

export interface DeploymentResource {
    createdAt: pulumi.Input<string>;
    dependsOns: pulumi.Input<pulumi.Input<string>[]>;
    description: pulumi.Input<string>;
    expenses: pulumi.Input<pulumi.Input<inputs.DeploymentResourceExpense>[]>;
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    propertiesJson: pulumi.Input<string>;
    state: pulumi.Input<string>;
    syncStatus: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface DeploymentResourceExpense {
    additionalExpense: pulumi.Input<number>;
    code: pulumi.Input<string>;
    computeExpense: pulumi.Input<number>;
    lastUpdateTime: pulumi.Input<string>;
    message: pulumi.Input<string>;
    networkExpense: pulumi.Input<number>;
    storageExpense: pulumi.Input<number>;
    totalExpense: pulumi.Input<number>;
    unit: pulumi.Input<string>;
}

export interface DeploymentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FabricComputeLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface FabricComputeTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface FabricDatastoreVsphereLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface FabricDatastoreVsphereTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface FabricNetworkVsphereLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface FabricNetworkVsphereTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface FlavorProfileFlavorMapping {
    /**
     * Number of CPU cores. Mandatory for private clouds such as vSphere. Only `instance_type` or `cpu_count`/`memory` must be specified.
     */
    cpuCount?: pulumi.Input<number>;
    /**
     * The value of the instance type in the corresponding cloud. Mandatory for public clouds. Only `instance_type` or `cpu_count`/`memory` must be specified.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Total amount of memory (in megabytes). Mandatory for private clouds such as vSphere. Only `instance_type` or `cpu_count`/`memory` must be specified.
     */
    memory?: pulumi.Input<number>;
    /**
     * The name of the flavor mapping.
     */
    name: pulumi.Input<string>;
}

export interface FlavorProfileLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface GetBlockDeviceTag {
    key: string;
    value: string;
}

export interface GetBlockDeviceTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountAwsTag {
    key: string;
    value: string;
}

export interface GetCloudAccountAwsTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountAzureTag {
    key: string;
    value: string;
}

export interface GetCloudAccountAzureTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountGcpTag {
    key: string;
    value: string;
}

export interface GetCloudAccountGcpTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountNsxtTag {
    key: string;
    value: string;
}

export interface GetCloudAccountNsxtTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountNsxvTag {
    key: string;
    value: string;
}

export interface GetCloudAccountNsxvTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountVmcTag {
    key: string;
    value: string;
}

export interface GetCloudAccountVmcTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetCloudAccountVsphereTag {
    key: string;
    value: string;
}

export interface GetCloudAccountVsphereTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetFabricComputeTag {
    key: string;
    value: string;
}

export interface GetFabricComputeTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetFabricDatastoreVsphereTag {
    key: string;
    value: string;
}

export interface GetFabricDatastoreVsphereTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetFabricNetworkTag {
    key: string;
    value: string;
}

export interface GetFabricNetworkTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetImageProfileImageMapping {
    /**
     * Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification or vRA cloud templates.
     */
    cloudConfig?: string;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    constraints?: inputs.GetImageProfileImageMappingConstraint[];
    /**
     * A human-friendly description.
     */
    description?: string;
    /**
     * External entity id on the cloud provider side.
     */
    externalId?: string;
    /**
     * External region id on the cloud provider side.
     */
    externalRegionId?: string;
    /**
     * The id of this resource instance.
     */
    imageId?: string;
    /**
     * A human-friendly image name as seen on the cloud provider side.
     */
    imageName?: string;
    /**
     * A human-friendly name of the image mapping.
     */
    name: string;
    /**
     * A human-friendly description.
     */
    organization?: string;
    /**
     * Operating system family of the image.
     */
    osFamily?: string;
    /**
     * Email of the user that owns the entity.
     */
    owner?: string;
    /**
     * Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library items.
     */
    private?: boolean;
}

export interface GetImageProfileImageMappingArgs {
    /**
     * Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification or vRA cloud templates.
     */
    cloudConfig?: pulumi.Input<string>;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    constraints?: pulumi.Input<pulumi.Input<inputs.GetImageProfileImageMappingConstraintArgs>[]>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * External entity id on the cloud provider side.
     */
    externalId?: pulumi.Input<string>;
    /**
     * External region id on the cloud provider side.
     */
    externalRegionId?: pulumi.Input<string>;
    /**
     * The id of this resource instance.
     */
    imageId?: pulumi.Input<string>;
    /**
     * A human-friendly image name as seen on the cloud provider side.
     */
    imageName?: pulumi.Input<string>;
    /**
     * A human-friendly name of the image mapping.
     */
    name: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    organization?: pulumi.Input<string>;
    /**
     * Operating system family of the image.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Email of the user that owns the entity.
     */
    owner?: pulumi.Input<string>;
    /**
     * Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library items.
     */
    private?: pulumi.Input<boolean>;
}

export interface GetImageProfileImageMappingConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: string;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: boolean;
}

export interface GetImageProfileImageMappingConstraintArgs {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface GetMachineTag {
    key: string;
    value: string;
}

export interface GetMachineTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetNetworkConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: string;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: boolean;
}

export interface GetNetworkConstraintArgs {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface GetNetworkDomainTag {
    key: string;
    value: string;
}

export interface GetNetworkDomainTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetNetworkProfileTag {
    key: string;
    value: string;
}

export interface GetNetworkProfileTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetNetworkTag {
    key: string;
    value: string;
}

export interface GetNetworkTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetProjectAdministratorRole {
    /**
     * The email of the user or name of the group.
     */
    email: string;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: string;
}

export interface GetProjectAdministratorRoleArgs {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectConstraints {
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    extensibilities?: inputs.GetProjectConstraintsExtensibility[];
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    networks?: inputs.GetProjectConstraintsNetwork[];
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    storages?: inputs.GetProjectConstraintsStorage[];
}

export interface GetProjectConstraintsArgs {
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    extensibilities?: pulumi.Input<pulumi.Input<inputs.GetProjectConstraintsExtensibilityArgs>[]>;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.GetProjectConstraintsNetworkArgs>[]>;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    storages?: pulumi.Input<pulumi.Input<inputs.GetProjectConstraintsStorageArgs>[]>;
}

export interface GetProjectConstraintsExtensibility {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: string;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: boolean;
}

export interface GetProjectConstraintsExtensibilityArgs {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface GetProjectConstraintsNetwork {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: string;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: boolean;
}

export interface GetProjectConstraintsNetworkArgs {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface GetProjectConstraintsStorage {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: string;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: boolean;
}

export interface GetProjectConstraintsStorageArgs {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface GetProjectMemberRole {
    /**
     * The email of the user or name of the group.
     */
    email: string;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: string;
}

export interface GetProjectMemberRoleArgs {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectSupervisorRole {
    /**
     * The email of the user or name of the group.
     */
    email: string;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: string;
}

export interface GetProjectSupervisorRoleArgs {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectViewerRole {
    /**
     * The email of the user or name of the group.
     */
    email: string;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: string;
}

export interface GetProjectViewerRoleArgs {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface GetProjectZoneAssignment {
    /**
     * The maximum amount of cpus that can be used by this cloud zone. Default is 0 (unlimited cpu).
     */
    cpuLimit?: number;
    /**
     * The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances)
     */
    maxInstances?: number;
    /**
     * The maximum amount of memory that can be used by this cloud zone. Default is 0 (unlimited memory).
     */
    memoryLimitMb?: number;
    /**
     * The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)
     */
    priority?: number;
    /**
     * Upper limit on storage that can be requested from a cloud zone which is part of this project. Default is 0 (unlimited storage). Supported only for vSphere cloud zones.
     */
    storageLimitGb?: number;
    /**
     * The Cloud Zone Id
     */
    zoneId?: string;
}

export interface GetProjectZoneAssignmentArgs {
    /**
     * The maximum amount of cpus that can be used by this cloud zone. Default is 0 (unlimited cpu).
     */
    cpuLimit?: pulumi.Input<number>;
    /**
     * The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances)
     */
    maxInstances?: pulumi.Input<number>;
    /**
     * The maximum amount of memory that can be used by this cloud zone. Default is 0 (unlimited memory).
     */
    memoryLimitMb?: pulumi.Input<number>;
    /**
     * The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)
     */
    priority?: pulumi.Input<number>;
    /**
     * Upper limit on storage that can be requested from a cloud zone which is part of this project. Default is 0 (unlimited storage). Supported only for vSphere cloud zones.
     */
    storageLimitGb?: pulumi.Input<number>;
    /**
     * The Cloud Zone Id
     */
    zoneId?: pulumi.Input<string>;
}

export interface GetSecurityGroupRule {
    access: string;
    direction: string;
    ipRangeCidr: number;
    name?: string;
    ports: string;
    protocol: string;
    service?: string;
}

export interface GetSecurityGroupRuleArgs {
    access: pulumi.Input<string>;
    direction: pulumi.Input<string>;
    ipRangeCidr: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    ports: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    service?: pulumi.Input<string>;
}

export interface GetStorageProfileAwsTag {
    key: string;
    value: string;
}

export interface GetStorageProfileAwsTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetStorageProfileAzureTag {
    key: string;
    value: string;
}

export interface GetStorageProfileAzureTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetStorageProfileTag {
    key: string;
    value: string;
}

export interface GetStorageProfileTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetStorageProfileVsphereTag {
    key: string;
    value: string;
}

export interface GetStorageProfileVsphereTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetZoneTag {
    key: string;
    value: string;
}

export interface GetZoneTagArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetZoneTagsToMatch {
    key: string;
    value: string;
}

export interface GetZoneTagsToMatchArgs {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ImageProfileImageMapping {
    /**
     * Cloud config for this image. This cloud config will be merged during provisioning with other cloud configurations such as the bootConfig provided in MachineSpecification or vRA cloud templates.
     */
    cloudConfig?: pulumi.Input<string>;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    constraints?: pulumi.Input<pulumi.Input<inputs.ImageProfileImageMappingConstraint>[]>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * External entity id on the cloud provider side.
     */
    externalId?: pulumi.Input<string>;
    /**
     * External region id on the cloud provider side.
     */
    externalRegionId?: pulumi.Input<string>;
    /**
     * The id of this resource instance.
     */
    imageId?: pulumi.Input<string>;
    /**
     * A human-friendly image name as seen on the cloud provider side.
     */
    imageName?: pulumi.Input<string>;
    /**
     * A human-friendly name of the image mapping.
     */
    name: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    organization?: pulumi.Input<string>;
    /**
     * Operating system family of the image.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Email of the user that owns the entity.
     */
    owner?: pulumi.Input<string>;
    /**
     * Indicates whether this fabric image is private. For vSphere, private images are considered to be templates and snapshots and public are Content Library items.
     */
    private?: pulumi.Input<boolean>;
}

export interface ImageProfileImageMappingConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface IntegrationLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface IntegrationTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LoadBalancerLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface LoadBalancerNic {
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    deviceIndex?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LoadBalancerRoute {
    healthCheckConfigurations?: pulumi.Input<pulumi.Input<inputs.LoadBalancerRouteHealthCheckConfiguration>[]>;
    memberPort: pulumi.Input<string>;
    memberProtocol: pulumi.Input<string>;
    port: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
}

export interface LoadBalancerRouteHealthCheckConfiguration {
    healthyThreshold?: pulumi.Input<number>;
    intervalSeconds?: pulumi.Input<number>;
    port: pulumi.Input<string>;
    protocol: pulumi.Input<string>;
    timeoutSeconds?: pulumi.Input<number>;
    unhealthyThreshold?: pulumi.Input<number>;
    urlPath?: pulumi.Input<string>;
}

export interface LoadBalancerTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface LoadBalancerTarget {
    machineId: pulumi.Input<string>;
    networkInterfaceId?: pulumi.Input<string>;
}

export interface MachineBootConfig {
    /**
     * A valid cloud config data in json-escaped yaml syntax.
     */
    content?: pulumi.Input<string>;
}

export interface MachineConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface MachineDisk {
    /**
     * The id of the existing block device.
     */
    blockDeviceId: pulumi.Input<string>;
    /**
     * A human-friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * A human-friendly block-device name used as an identifier in APIs that support this option.
     */
    name?: pulumi.Input<string>;
}

export interface MachineDisksList {
    blockDeviceId: pulumi.Input<string>;
    description: pulumi.Input<string>;
    name: pulumi.Input<string>;
}

export interface MachineImageDiskConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface MachineLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface MachineNic {
    addresses?: pulumi.Input<pulumi.Input<string>[]>;
    customProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    deviceIndex?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    networkId: pulumi.Input<string>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MachineTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface MachineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface NetworkConstraint {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface NetworkIpRangeLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface NetworkIpRangeTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NetworkLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface NetworkProfileLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface NetworkProfileTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NetworkTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface NetworkTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProjectAdministratorRole {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectConstraints {
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    extensibilities?: pulumi.Input<pulumi.Input<inputs.ProjectConstraintsExtensibility>[]>;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.ProjectConstraintsNetwork>[]>;
    /**
     * Constraints that are used to drive placement policies for entities such as image, network, storage, etc. Constraint expressions are matched against tags on existing placement targets.
     */
    storages?: pulumi.Input<pulumi.Input<inputs.ProjectConstraintsStorage>[]>;
}

export interface ProjectConstraintsExtensibility {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface ProjectConstraintsNetwork {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface ProjectConstraintsStorage {
    /**
     * An expression of the form "[!]tag-key[:[tag-value]]", used to indicate a constraint match on keys and values of tags.
     */
    expression: pulumi.Input<string>;
    /**
     * Indicates whether this constraint should be strictly enforced or not.
     */
    mandatory: pulumi.Input<boolean>;
}

export interface ProjectMemberRole {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectSupervisorRole {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectViewerRole {
    /**
     * The email of the user or name of the group.
     */
    email: pulumi.Input<string>;
    /**
     * Type of the principal. Currently supported ‘user’ (default) and 'group’.
     */
    type?: pulumi.Input<string>;
}

export interface ProjectZoneAssignment {
    /**
     * The maximum amount of cpus that can be used by this cloud zone. Default is 0 (unlimited cpu).
     */
    cpuLimit?: pulumi.Input<number>;
    /**
     * The maximum number of instances that can be provisioned in this cloud zone. Default is 0 (unlimited instances)
     */
    maxInstances?: pulumi.Input<number>;
    /**
     * The maximum amount of memory that can be used by this cloud zone. Default is 0 (unlimited memory).
     */
    memoryLimitMb?: pulumi.Input<number>;
    /**
     * The priority of this zone in the current project. Lower numbers mean higher priority. Default is 0 (highest)
     */
    priority?: pulumi.Input<number>;
    /**
     * Upper limit on storage that can be requested from a cloud zone which is part of this project. Default is 0 (unlimited storage). Supported only for vSphere cloud zones.
     */
    storageLimitGb?: pulumi.Input<number>;
    /**
     * The Cloud Zone Id
     */
    zoneId: pulumi.Input<string>;
}

export interface StorageProfileAwsLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface StorageProfileAwsTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StorageProfileAzureLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface StorageProfileAzureTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StorageProfileLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface StorageProfileTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StorageProfileVsphereLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface StorageProfileVsphereTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ZoneLink {
    href: pulumi.Input<string>;
    hrefs: pulumi.Input<pulumi.Input<string>[]>;
    rel: pulumi.Input<string>;
}

export interface ZoneTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface ZoneTagsToMatch {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}
