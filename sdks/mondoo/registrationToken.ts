// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RegistrationToken extends pulumi.CustomResource {
    /**
     * Get an existing RegistrationToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegistrationTokenState, opts?: pulumi.CustomResourceOptions): RegistrationToken {
        return new RegistrationToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mondoo:index/registrationToken:RegistrationToken';

    /**
     * Returns true if the given object is an instance of RegistrationToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegistrationToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegistrationToken.__pulumiType;
    }

    /**
     * Description of the token.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The date and time when the token will expire.
     */
    public readonly expiresAt!: pulumi.Output<string>;
    /**
     * The duration after which the token will expire. Format: 1h, 1d, 1w, 1m, 1y
     */
    public readonly expiresIn!: pulumi.Output<string | undefined>;
    /**
     * The Mondoo Resource Name (MRN) of the created token.
     */
    public /*out*/ readonly mrn!: pulumi.Output<string>;
    /**
     * If set to true, the token will not expire.
     */
    public readonly noExpiration!: pulumi.Output<boolean | undefined>;
    /**
     * The generated token.
     */
    public /*out*/ readonly result!: pulumi.Output<string>;
    /**
     * If set to true, the token is revoked.
     */
    public readonly revoked!: pulumi.Output<boolean>;
    /**
     * Mondoo Space Identifier to create the token in.
     */
    public readonly spaceId!: pulumi.Output<string>;

    /**
     * Create a RegistrationToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistrationTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegistrationTokenArgs | RegistrationTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RegistrationTokenState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expiresAt"] = state ? state.expiresAt : undefined;
            resourceInputs["expiresIn"] = state ? state.expiresIn : undefined;
            resourceInputs["mrn"] = state ? state.mrn : undefined;
            resourceInputs["noExpiration"] = state ? state.noExpiration : undefined;
            resourceInputs["result"] = state ? state.result : undefined;
            resourceInputs["revoked"] = state ? state.revoked : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
        } else {
            const args = argsOrState as RegistrationTokenArgs | undefined;
            if ((!args || args.spaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expiresAt"] = args ? args.expiresAt : undefined;
            resourceInputs["expiresIn"] = args ? args.expiresIn : undefined;
            resourceInputs["noExpiration"] = args ? args.noExpiration : undefined;
            resourceInputs["revoked"] = args ? args.revoked : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
            resourceInputs["mrn"] = undefined /*out*/;
            resourceInputs["result"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["result"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RegistrationToken.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RegistrationToken resources.
 */
export interface RegistrationTokenState {
    /**
     * Description of the token.
     */
    description?: pulumi.Input<string>;
    /**
     * The date and time when the token will expire.
     */
    expiresAt?: pulumi.Input<string>;
    /**
     * The duration after which the token will expire. Format: 1h, 1d, 1w, 1m, 1y
     */
    expiresIn?: pulumi.Input<string>;
    /**
     * The Mondoo Resource Name (MRN) of the created token.
     */
    mrn?: pulumi.Input<string>;
    /**
     * If set to true, the token will not expire.
     */
    noExpiration?: pulumi.Input<boolean>;
    /**
     * The generated token.
     */
    result?: pulumi.Input<string>;
    /**
     * If set to true, the token is revoked.
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Mondoo Space Identifier to create the token in.
     */
    spaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RegistrationToken resource.
 */
export interface RegistrationTokenArgs {
    /**
     * Description of the token.
     */
    description?: pulumi.Input<string>;
    /**
     * The date and time when the token will expire.
     */
    expiresAt?: pulumi.Input<string>;
    /**
     * The duration after which the token will expire. Format: 1h, 1d, 1w, 1m, 1y
     */
    expiresIn?: pulumi.Input<string>;
    /**
     * If set to true, the token will not expire.
     */
    noExpiration?: pulumi.Input<boolean>;
    /**
     * If set to true, the token is revoked.
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Mondoo Space Identifier to create the token in.
     */
    spaceId: pulumi.Input<string>;
}
