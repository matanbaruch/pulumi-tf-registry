// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFrameworks(args?: GetFrameworksArgs, opts?: pulumi.InvokeOptions): Promise<GetFrameworksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("mondoo:index/getFrameworks:getFrameworks", {
        "spaceId": args.spaceId,
        "spaceMrn": args.spaceMrn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFrameworks.
 */
export interface GetFrameworksArgs {
    spaceId?: string;
    spaceMrn?: string;
}

/**
 * A collection of values returned by getFrameworks.
 */
export interface GetFrameworksResult {
    readonly frameworks: outputs.GetFrameworksFramework[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly spaceId: string;
    readonly spaceMrn: string;
}
export function getFrameworksOutput(args?: GetFrameworksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFrameworksResult> {
    return pulumi.output(args).apply((a: any) => getFrameworks(a, opts))
}

/**
 * A collection of arguments for invoking getFrameworks.
 */
export interface GetFrameworksOutputArgs {
    spaceId?: pulumi.Input<string>;
    spaceMrn?: pulumi.Input<string>;
}
