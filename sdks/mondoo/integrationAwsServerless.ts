// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IntegrationAwsServerless extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationAwsServerless resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationAwsServerlessState, opts?: pulumi.CustomResourceOptions): IntegrationAwsServerless {
        return new IntegrationAwsServerless(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mondoo:index/integrationAwsServerless:IntegrationAwsServerless';

    /**
     * Returns true if the given object is an instance of IntegrationAwsServerless.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationAwsServerless {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationAwsServerless.__pulumiType;
    }

    /**
     * List of AWS account IDs.
     */
    public readonly accountIds!: pulumi.Output<string[] | undefined>;
    /**
     * Enable console sign in trigger.
     */
    public readonly consoleSignInTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * Enable instance state change trigger.
     */
    public readonly instanceStateChangeTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * Is organization.
     */
    public readonly isOrganization!: pulumi.Output<boolean | undefined>;
    /**
     * Integration identifier
     */
    public /*out*/ readonly mrn!: pulumi.Output<string>;
    /**
     * Name of the integration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * AWS region.
     */
    public readonly region!: pulumi.Output<string>;
    public readonly scanConfiguration!: pulumi.Output<outputs.IntegrationAwsServerlessScanConfiguration>;
    /**
     * Mondoo Space Identifier.
     */
    public readonly spaceId!: pulumi.Output<string>;
    /**
     * Integration token
     */
    public /*out*/ readonly token!: pulumi.Output<string>;

    /**
     * Create a IntegrationAwsServerless resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationAwsServerlessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationAwsServerlessArgs | IntegrationAwsServerlessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationAwsServerlessState | undefined;
            resourceInputs["accountIds"] = state ? state.accountIds : undefined;
            resourceInputs["consoleSignInTrigger"] = state ? state.consoleSignInTrigger : undefined;
            resourceInputs["instanceStateChangeTrigger"] = state ? state.instanceStateChangeTrigger : undefined;
            resourceInputs["isOrganization"] = state ? state.isOrganization : undefined;
            resourceInputs["mrn"] = state ? state.mrn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["scanConfiguration"] = state ? state.scanConfiguration : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
        } else {
            const args = argsOrState as IntegrationAwsServerlessArgs | undefined;
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.scanConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scanConfiguration'");
            }
            if ((!args || args.spaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceId'");
            }
            resourceInputs["accountIds"] = args ? args.accountIds : undefined;
            resourceInputs["consoleSignInTrigger"] = args ? args.consoleSignInTrigger : undefined;
            resourceInputs["instanceStateChangeTrigger"] = args ? args.instanceStateChangeTrigger : undefined;
            resourceInputs["isOrganization"] = args ? args.isOrganization : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["scanConfiguration"] = args ? args.scanConfiguration : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
            resourceInputs["mrn"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationAwsServerless.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationAwsServerless resources.
 */
export interface IntegrationAwsServerlessState {
    /**
     * List of AWS account IDs.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable console sign in trigger.
     */
    consoleSignInTrigger?: pulumi.Input<boolean>;
    /**
     * Enable instance state change trigger.
     */
    instanceStateChangeTrigger?: pulumi.Input<boolean>;
    /**
     * Is organization.
     */
    isOrganization?: pulumi.Input<boolean>;
    /**
     * Integration identifier
     */
    mrn?: pulumi.Input<string>;
    /**
     * Name of the integration.
     */
    name?: pulumi.Input<string>;
    /**
     * AWS region.
     */
    region?: pulumi.Input<string>;
    scanConfiguration?: pulumi.Input<inputs.IntegrationAwsServerlessScanConfiguration>;
    /**
     * Mondoo Space Identifier.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * Integration token
     */
    token?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationAwsServerless resource.
 */
export interface IntegrationAwsServerlessArgs {
    /**
     * List of AWS account IDs.
     */
    accountIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable console sign in trigger.
     */
    consoleSignInTrigger?: pulumi.Input<boolean>;
    /**
     * Enable instance state change trigger.
     */
    instanceStateChangeTrigger?: pulumi.Input<boolean>;
    /**
     * Is organization.
     */
    isOrganization?: pulumi.Input<boolean>;
    /**
     * Name of the integration.
     */
    name?: pulumi.Input<string>;
    /**
     * AWS region.
     */
    region: pulumi.Input<string>;
    scanConfiguration: pulumi.Input<inputs.IntegrationAwsServerlessScanConfiguration>;
    /**
     * Mondoo Space Identifier.
     */
    spaceId: pulumi.Input<string>;
}
