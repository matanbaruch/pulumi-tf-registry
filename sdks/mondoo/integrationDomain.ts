// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IntegrationDomain extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationDomainState, opts?: pulumi.CustomResourceOptions): IntegrationDomain {
        return new IntegrationDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'mondoo:index/integrationDomain:IntegrationDomain';

    /**
     * Returns true if the given object is an instance of IntegrationDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationDomain.__pulumiType;
    }

    /**
     * Domain name or IP address.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * Enable HTTP port.
     */
    public readonly http!: pulumi.Output<boolean | undefined>;
    /**
     * Enable HTTPS port.
     */
    public readonly https!: pulumi.Output<boolean | undefined>;
    /**
     * Integration identifier
     */
    public /*out*/ readonly mrn!: pulumi.Output<string>;
    /**
     * Mondoo Space Identifier.
     */
    public readonly spaceId!: pulumi.Output<string>;

    /**
     * Create a IntegrationDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationDomainArgs | IntegrationDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationDomainState | undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["http"] = state ? state.http : undefined;
            resourceInputs["https"] = state ? state.https : undefined;
            resourceInputs["mrn"] = state ? state.mrn : undefined;
            resourceInputs["spaceId"] = state ? state.spaceId : undefined;
        } else {
            const args = argsOrState as IntegrationDomainArgs | undefined;
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.spaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spaceId'");
            }
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["http"] = args ? args.http : undefined;
            resourceInputs["https"] = args ? args.https : undefined;
            resourceInputs["spaceId"] = args ? args.spaceId : undefined;
            resourceInputs["mrn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationDomain.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IntegrationDomain resources.
 */
export interface IntegrationDomainState {
    /**
     * Domain name or IP address.
     */
    host?: pulumi.Input<string>;
    /**
     * Enable HTTP port.
     */
    http?: pulumi.Input<boolean>;
    /**
     * Enable HTTPS port.
     */
    https?: pulumi.Input<boolean>;
    /**
     * Integration identifier
     */
    mrn?: pulumi.Input<string>;
    /**
     * Mondoo Space Identifier.
     */
    spaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationDomain resource.
 */
export interface IntegrationDomainArgs {
    /**
     * Domain name or IP address.
     */
    host: pulumi.Input<string>;
    /**
     * Enable HTTP port.
     */
    http?: pulumi.Input<boolean>;
    /**
     * Enable HTTPS port.
     */
    https?: pulumi.Input<boolean>;
    /**
     * Mondoo Space Identifier.
     */
    spaceId: pulumi.Input<string>;
}
