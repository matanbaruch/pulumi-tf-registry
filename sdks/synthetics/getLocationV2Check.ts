// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLocationV2Check(args: GetLocationV2CheckArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationV2CheckResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("synthetics:index/getLocationV2Check:getLocationV2Check", {
        "id": args.id,
        "locations": args.locations,
        "metas": args.metas,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLocationV2Check.
 */
export interface GetLocationV2CheckArgs {
    id?: string;
    locations: inputs.GetLocationV2CheckLocation[];
    metas?: inputs.GetLocationV2CheckMeta[];
}

/**
 * A collection of values returned by getLocationV2Check.
 */
export interface GetLocationV2CheckResult {
    readonly id: string;
    readonly locations: outputs.GetLocationV2CheckLocation[];
    readonly metas?: outputs.GetLocationV2CheckMeta[];
}
export function getLocationV2CheckOutput(args: GetLocationV2CheckOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationV2CheckResult> {
    return pulumi.output(args).apply((a: any) => getLocationV2Check(a, opts))
}

/**
 * A collection of arguments for invoking getLocationV2Check.
 */
export interface GetLocationV2CheckOutputArgs {
    id?: pulumi.Input<string>;
    locations: pulumi.Input<pulumi.Input<inputs.GetLocationV2CheckLocationArgs>[]>;
    metas?: pulumi.Input<pulumi.Input<inputs.GetLocationV2CheckMetaArgs>[]>;
}
