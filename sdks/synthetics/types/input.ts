// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CreateApiCheckV2Test {
    active: pulumi.Input<boolean>;
    automaticRetries?: pulumi.Input<number>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.CreateApiCheckV2TestCustomProperty>[]>;
    deviceId: pulumi.Input<number>;
    frequency: pulumi.Input<number>;
    locationIds: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    /**
     * Unique elements of a given request. See official [API documentation](https://dev.splunk.com/observability/reference/api/synthetics_api_tests/latest#endpoint-createapitest) as the source of truth for descriptions and options for these values.
     */
    requests?: pulumi.Input<pulumi.Input<inputs.CreateApiCheckV2TestRequest>[]>;
    schedulingStrategy?: pulumi.Input<string>;
}

export interface CreateApiCheckV2TestCustomProperty {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateApiCheckV2TestRequest {
    configurations?: pulumi.Input<pulumi.Input<inputs.CreateApiCheckV2TestRequestConfiguration>[]>;
    setups?: pulumi.Input<pulumi.Input<inputs.CreateApiCheckV2TestRequestSetup>[]>;
    validations?: pulumi.Input<pulumi.Input<inputs.CreateApiCheckV2TestRequestValidation>[]>;
}

export interface CreateApiCheckV2TestRequestConfiguration {
    body?: pulumi.Input<string>;
    headers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    requestMethod?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface CreateApiCheckV2TestRequestSetup {
    code?: pulumi.Input<string>;
    extractor?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    variable?: pulumi.Input<string>;
}

export interface CreateApiCheckV2TestRequestValidation {
    actual?: pulumi.Input<string>;
    code?: pulumi.Input<string>;
    comparator?: pulumi.Input<string>;
    expected?: pulumi.Input<string>;
    extractor?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    variable?: pulumi.Input<string>;
}

export interface CreateBrowserCheckBlackoutPeriod {
    createdAt?: pulumi.Input<string>;
    durationInMinutes?: pulumi.Input<number>;
    endDate?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    isRepeat?: pulumi.Input<boolean>;
    monthlyRepeatType?: pulumi.Input<string>;
    repeatType?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface CreateBrowserCheckBrowser {
    type?: pulumi.Input<string>;
}

export interface CreateBrowserCheckCheckConnection {
    downloadBandwidth?: pulumi.Input<number>;
    latency?: pulumi.Input<number>;
    packetLoss?: pulumi.Input<number>;
    uploadBandwidth?: pulumi.Input<number>;
}

export interface CreateBrowserCheckCookie {
    domain?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateBrowserCheckDnsOverride {
    originalDomain?: pulumi.Input<string>;
    originalHost?: pulumi.Input<string>;
}

export interface CreateBrowserCheckExcludedFile {
    exclusionType?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
    presetName?: pulumi.Input<string>;
}

export interface CreateBrowserCheckHttpRequestHeader {
    userAgent?: pulumi.Input<string>;
}

export interface CreateBrowserCheckJavascriptFile {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface CreateBrowserCheckNotification {
    call?: pulumi.Input<boolean>;
    email?: pulumi.Input<boolean>;
    escalations?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationEscalation>[]>;
    muted?: pulumi.Input<boolean>;
    notificationWindows?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationNotificationWindow>[]>;
    notifyAfterFailureCount?: pulumi.Input<number>;
    notifyOnLocationFailure?: pulumi.Input<boolean>;
    notifyWhos?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationNotifyWho>[]>;
    sms?: pulumi.Input<boolean>;
}

export interface CreateBrowserCheckNotificationEscalation {
    afterMinutes?: pulumi.Input<number>;
    call?: pulumi.Input<boolean>;
    email?: pulumi.Input<boolean>;
    isRepeat?: pulumi.Input<boolean>;
    notificationWindows?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationEscalationNotificationWindow>[]>;
    notifyWhos?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationEscalationNotifyWho>[]>;
    sms?: pulumi.Input<boolean>;
}

export interface CreateBrowserCheckNotificationEscalationNotificationWindow {
    durationInMinutes?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface CreateBrowserCheckNotificationEscalationNotifyWho {
    call?: pulumi.Input<boolean>;
    customUserEmail?: pulumi.Input<string>;
    email?: pulumi.Input<boolean>;
    id?: pulumi.Input<number>;
    links?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationEscalationNotifyWhoLink>[]>;
    sms?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface CreateBrowserCheckNotificationEscalationNotifyWhoLink {
    selfHtml: pulumi.Input<string>;
}

export interface CreateBrowserCheckNotificationNotificationWindow {
    durationInMinutes?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface CreateBrowserCheckNotificationNotifyWho {
    call?: pulumi.Input<boolean>;
    customUserEmail?: pulumi.Input<string>;
    email?: pulumi.Input<boolean>;
    id?: pulumi.Input<number>;
    links?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckNotificationNotifyWhoLink>[]>;
    sms?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface CreateBrowserCheckNotificationNotifyWhoLink {
    selfHtml: pulumi.Input<string>;
}

export interface CreateBrowserCheckStep {
    how?: pulumi.Input<string>;
    itemMethod?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    position?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
    variableName?: pulumi.Input<string>;
    what?: pulumi.Input<string>;
}

export interface CreateBrowserCheckSuccessCriteria {
    actionType?: pulumi.Input<string>;
    comparisonString?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface CreateBrowserCheckThresholdMonitor {
    comparisonType?: pulumi.Input<string>;
    matcher?: pulumi.Input<string>;
    metricName?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface CreateBrowserCheckV2Test {
    active?: pulumi.Input<boolean>;
    advancedSettings: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestAdvancedSetting>[]>;
    automaticRetries?: pulumi.Input<number>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestCustomProperty>[]>;
    deviceId?: pulumi.Input<number>;
    frequency?: pulumi.Input<number>;
    locationIds?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    schedulingStrategy?: pulumi.Input<string>;
    startUrl?: pulumi.Input<string>;
    transactions: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestTransaction>[]>;
    urlProtocol?: pulumi.Input<string>;
}

export interface CreateBrowserCheckV2TestAdvancedSetting {
    authentications?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestAdvancedSettingAuthentication>[]>;
    collectInteractiveMetrics?: pulumi.Input<boolean>;
    cookies?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestAdvancedSettingCookie>[]>;
    headers?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestAdvancedSettingHeader>[]>;
    hostOverrides?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestAdvancedSettingHostOverride>[]>;
    userAgent?: pulumi.Input<string>;
    verifyCertificates: pulumi.Input<boolean>;
}

export interface CreateBrowserCheckV2TestAdvancedSettingAuthentication {
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface CreateBrowserCheckV2TestAdvancedSettingCookie {
    domain?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateBrowserCheckV2TestAdvancedSettingHeader {
    domain?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateBrowserCheckV2TestAdvancedSettingHostOverride {
    keepHostHeader?: pulumi.Input<boolean>;
    source?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

export interface CreateBrowserCheckV2TestCustomProperty {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateBrowserCheckV2TestTransaction {
    name?: pulumi.Input<string>;
    /**
     * Unique steps for the transaction. See official [API documentation](https://dev.splunk.com/observability/reference/api/synthetics_browser/latest#endpoint-createbrowsertest) as the source of truth for descriptions and options for these values.
     */
    steps: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestTransactionStep>[]>;
}

export interface CreateBrowserCheckV2TestTransactionStep {
    action?: pulumi.Input<string>;
    duration?: pulumi.Input<number>;
    maxWaitTime?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    optionSelector?: pulumi.Input<string>;
    optionSelectorType?: pulumi.Input<string>;
    options?: pulumi.Input<pulumi.Input<inputs.CreateBrowserCheckV2TestTransactionStepOption>[]>;
    selector?: pulumi.Input<string>;
    selectorType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    variableName?: pulumi.Input<string>;
    waitForNav?: pulumi.Input<boolean>;
    waitForNavTimeout?: pulumi.Input<number>;
}

export interface CreateBrowserCheckV2TestTransactionStepOption {
    url?: pulumi.Input<string>;
}

export interface CreateBrowserCheckViewport {
    height?: pulumi.Input<number>;
    width?: pulumi.Input<number>;
}

export interface CreateDowntimeConfigurationV2DowntimeConfiguration {
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endTime: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    rule: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    testIds: pulumi.Input<pulumi.Input<number>[]>;
    testsUpdatedAt?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface CreateHttpCheckBlackoutPeriod {
    createdAt?: pulumi.Input<string>;
    durationInMinutes?: pulumi.Input<number>;
    endDate?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    isRepeat?: pulumi.Input<boolean>;
    monthlyRepeatType?: pulumi.Input<string>;
    repeatType?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface CreateHttpCheckCheckConnection {
    downloadBandwidth?: pulumi.Input<number>;
    latency?: pulumi.Input<number>;
    packetLoss?: pulumi.Input<number>;
    uploadBandwidth?: pulumi.Input<number>;
}

export interface CreateHttpCheckHttpRequestHeader {
    userAgent?: pulumi.Input<string>;
}

export interface CreateHttpCheckNotification {
    call?: pulumi.Input<boolean>;
    email?: pulumi.Input<boolean>;
    escalations?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationEscalation>[]>;
    muted?: pulumi.Input<boolean>;
    notificationWindows?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationNotificationWindow>[]>;
    notifyAfterFailureCount?: pulumi.Input<number>;
    notifyOnLocationFailure?: pulumi.Input<boolean>;
    notifyWhos?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationNotifyWho>[]>;
    sms?: pulumi.Input<boolean>;
}

export interface CreateHttpCheckNotificationEscalation {
    afterMinutes?: pulumi.Input<number>;
    call?: pulumi.Input<boolean>;
    email?: pulumi.Input<boolean>;
    isRepeat?: pulumi.Input<boolean>;
    notificationWindows?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationEscalationNotificationWindow>[]>;
    notifyWhos?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationEscalationNotifyWho>[]>;
    sms?: pulumi.Input<boolean>;
}

export interface CreateHttpCheckNotificationEscalationNotificationWindow {
    durationInMinutes?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface CreateHttpCheckNotificationEscalationNotifyWho {
    call?: pulumi.Input<boolean>;
    customUserEmail?: pulumi.Input<string>;
    email?: pulumi.Input<boolean>;
    id?: pulumi.Input<number>;
    links?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationEscalationNotifyWhoLink>[]>;
    sms?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface CreateHttpCheckNotificationEscalationNotifyWhoLink {
    selfHtml: pulumi.Input<string>;
}

export interface CreateHttpCheckNotificationNotificationWindow {
    durationInMinutes?: pulumi.Input<number>;
    endTime?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface CreateHttpCheckNotificationNotifyWho {
    call?: pulumi.Input<boolean>;
    customUserEmail?: pulumi.Input<string>;
    email?: pulumi.Input<boolean>;
    id?: pulumi.Input<number>;
    links?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckNotificationNotifyWhoLink>[]>;
    sms?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
}

export interface CreateHttpCheckNotificationNotifyWhoLink {
    selfHtml: pulumi.Input<string>;
}

export interface CreateHttpCheckSuccessCriteria {
    actionType?: pulumi.Input<string>;
    comparisonString?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface CreateHttpCheckV2Test {
    active: pulumi.Input<boolean>;
    automaticRetries?: pulumi.Input<number>;
    body?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckV2TestCustomProperty>[]>;
    frequency: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckV2TestHeader>[]>;
    id?: pulumi.Input<number>;
    locationIds: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    requestMethod: pulumi.Input<string>;
    schedulingStrategy?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    url: pulumi.Input<string>;
    userAgent?: pulumi.Input<string>;
    validations?: pulumi.Input<pulumi.Input<inputs.CreateHttpCheckV2TestValidation>[]>;
    verifyCertificates: pulumi.Input<boolean>;
}

export interface CreateHttpCheckV2TestCustomProperty {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateHttpCheckV2TestHeader {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateHttpCheckV2TestValidation {
    actual?: pulumi.Input<string>;
    code?: pulumi.Input<string>;
    comparator?: pulumi.Input<string>;
    expected?: pulumi.Input<string>;
    extractor?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    variable?: pulumi.Input<string>;
}

export interface CreateLocationV2Location {
    country?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    label: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface CreatePortCheckV2Test {
    active: pulumi.Input<boolean>;
    automaticRetries?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.CreatePortCheckV2TestCustomProperty>[]>;
    frequency: pulumi.Input<number>;
    host: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    locationIds: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    port: pulumi.Input<number>;
    protocol: pulumi.Input<string>;
    schedulingStrategy?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
}

export interface CreatePortCheckV2TestCustomProperty {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface CreateVariableV2Variable {
    createdAt?: pulumi.Input<string>;
    description: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name: pulumi.Input<string>;
    secret: pulumi.Input<boolean>;
    updatedAt?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetApiV2CheckTest {
    active?: boolean;
    automaticRetries?: number;
    createdAt?: string;
    createdBy?: string;
    customProperties?: inputs.GetApiV2CheckTestCustomProperty[];
    devices?: inputs.GetApiV2CheckTestDevice[];
    frequency?: number;
    id: number;
    lastRunAt?: string;
    lastRunStatus?: string;
    locationIds?: string[];
    name?: string;
    requests?: inputs.GetApiV2CheckTestRequest[];
    schedulingStrategy?: string;
    type?: string;
    updatedAt?: string;
    updatedBy?: string;
}

export interface GetApiV2CheckTestArgs {
    active?: pulumi.Input<boolean>;
    automaticRetries?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestCustomPropertyArgs>[]>;
    devices?: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestDeviceArgs>[]>;
    frequency?: pulumi.Input<number>;
    id: pulumi.Input<number>;
    lastRunAt?: pulumi.Input<string>;
    lastRunStatus?: pulumi.Input<string>;
    locationIds?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    requests?: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestRequestArgs>[]>;
    schedulingStrategy?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
}

export interface GetApiV2CheckTestCustomProperty {
    key?: string;
    value?: string;
}

export interface GetApiV2CheckTestCustomPropertyArgs {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetApiV2CheckTestDevice {
    id: number;
    label: string;
    networkConnections: inputs.GetApiV2CheckTestDeviceNetworkConnection[];
    userAgent: string;
    viewportHeight: number;
    viewportWidth: number;
}

export interface GetApiV2CheckTestDeviceArgs {
    id: pulumi.Input<number>;
    label: pulumi.Input<string>;
    networkConnections: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestDeviceNetworkConnectionArgs>[]>;
    userAgent: pulumi.Input<string>;
    viewportHeight: pulumi.Input<number>;
    viewportWidth: pulumi.Input<number>;
}

export interface GetApiV2CheckTestDeviceNetworkConnection {
    description: string;
    downloadBandwidth: number;
    latency: number;
    packetLoss: number;
    uploadBandwidth: number;
}

export interface GetApiV2CheckTestDeviceNetworkConnectionArgs {
    description: pulumi.Input<string>;
    downloadBandwidth: pulumi.Input<number>;
    latency: pulumi.Input<number>;
    packetLoss: pulumi.Input<number>;
    uploadBandwidth: pulumi.Input<number>;
}

export interface GetApiV2CheckTestRequest {
    configurations: inputs.GetApiV2CheckTestRequestConfiguration[];
    setups: inputs.GetApiV2CheckTestRequestSetup[];
    validations: inputs.GetApiV2CheckTestRequestValidation[];
}

export interface GetApiV2CheckTestRequestArgs {
    configurations: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestRequestConfigurationArgs>[]>;
    setups: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestRequestSetupArgs>[]>;
    validations: pulumi.Input<pulumi.Input<inputs.GetApiV2CheckTestRequestValidationArgs>[]>;
}

export interface GetApiV2CheckTestRequestConfiguration {
    body: string;
    headers: {[key: string]: string};
    name: string;
    requestMethod: string;
    url: string;
}

export interface GetApiV2CheckTestRequestConfigurationArgs {
    body: pulumi.Input<string>;
    headers: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name: pulumi.Input<string>;
    requestMethod: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface GetApiV2CheckTestRequestSetup {
    code: string;
    extractor: string;
    name: string;
    source: string;
    type: string;
    value: string;
    variable: string;
}

export interface GetApiV2CheckTestRequestSetupArgs {
    code: pulumi.Input<string>;
    extractor: pulumi.Input<string>;
    name: pulumi.Input<string>;
    source: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
    variable: pulumi.Input<string>;
}

export interface GetApiV2CheckTestRequestValidation {
    actual: string;
    code: string;
    comparator: string;
    expected: string;
    extractor: string;
    name: string;
    source: string;
    type: string;
    value: string;
    variable: string;
}

export interface GetApiV2CheckTestRequestValidationArgs {
    actual: pulumi.Input<string>;
    code: pulumi.Input<string>;
    comparator: pulumi.Input<string>;
    expected: pulumi.Input<string>;
    extractor: pulumi.Input<string>;
    name: pulumi.Input<string>;
    source: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value: pulumi.Input<string>;
    variable: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTest {
    active?: boolean;
    advancedSettings?: inputs.GetBrowserV2CheckTestAdvancedSetting[];
    automaticRetries?: number;
    businessTransactions?: inputs.GetBrowserV2CheckTestBusinessTransaction[];
    createdAt?: string;
    createdBy?: string;
    customProperties?: inputs.GetBrowserV2CheckTestCustomProperty[];
    devices?: inputs.GetBrowserV2CheckTestDevice[];
    frequency?: number;
    id: number;
    lastRunAt?: string;
    lastRunStatus?: string;
    locationIds?: string[];
    name?: string;
    schedulingStrategy?: string;
    transactions?: inputs.GetBrowserV2CheckTestTransaction[];
    type?: string;
    updatedAt?: string;
    updatedBy?: string;
}

export interface GetBrowserV2CheckTestArgs {
    active?: pulumi.Input<boolean>;
    advancedSettings?: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestAdvancedSettingArgs>[]>;
    automaticRetries?: pulumi.Input<number>;
    businessTransactions?: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestBusinessTransactionArgs>[]>;
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestCustomPropertyArgs>[]>;
    devices?: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestDeviceArgs>[]>;
    frequency?: pulumi.Input<number>;
    id: pulumi.Input<number>;
    lastRunAt?: pulumi.Input<string>;
    lastRunStatus?: pulumi.Input<string>;
    locationIds?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    schedulingStrategy?: pulumi.Input<string>;
    transactions?: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestTransactionArgs>[]>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestAdvancedSetting {
    authentications: inputs.GetBrowserV2CheckTestAdvancedSettingAuthentication[];
    collectInteractiveMetrics: boolean;
    cookies: inputs.GetBrowserV2CheckTestAdvancedSettingCookie[];
    headers: inputs.GetBrowserV2CheckTestAdvancedSettingHeader[];
    hostOverrides: inputs.GetBrowserV2CheckTestAdvancedSettingHostOverride[];
    userAgent: string;
    verifyCertificates: boolean;
}

export interface GetBrowserV2CheckTestAdvancedSettingArgs {
    authentications: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestAdvancedSettingAuthenticationArgs>[]>;
    collectInteractiveMetrics: pulumi.Input<boolean>;
    cookies: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestAdvancedSettingCookieArgs>[]>;
    headers: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestAdvancedSettingHeaderArgs>[]>;
    hostOverrides: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestAdvancedSettingHostOverrideArgs>[]>;
    userAgent: pulumi.Input<string>;
    verifyCertificates: pulumi.Input<boolean>;
}

export interface GetBrowserV2CheckTestAdvancedSettingAuthentication {
    password: string;
    username: string;
}

export interface GetBrowserV2CheckTestAdvancedSettingAuthenticationArgs {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestAdvancedSettingCookie {
    domain: string;
    key: string;
    path: string;
    value: string;
}

export interface GetBrowserV2CheckTestAdvancedSettingCookieArgs {
    domain: pulumi.Input<string>;
    key: pulumi.Input<string>;
    path: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestAdvancedSettingHeader {
    domain: string;
    name: string;
    value: string;
}

export interface GetBrowserV2CheckTestAdvancedSettingHeaderArgs {
    domain: pulumi.Input<string>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestAdvancedSettingHostOverride {
    keepHostHeader: boolean;
    source: string;
    target: string;
}

export interface GetBrowserV2CheckTestAdvancedSettingHostOverrideArgs {
    keepHostHeader: pulumi.Input<boolean>;
    source: pulumi.Input<string>;
    target: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestBusinessTransaction {
    name: string;
    steps: inputs.GetBrowserV2CheckTestBusinessTransactionStep[];
}

export interface GetBrowserV2CheckTestBusinessTransactionArgs {
    name: pulumi.Input<string>;
    steps: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestBusinessTransactionStepArgs>[]>;
}

export interface GetBrowserV2CheckTestBusinessTransactionStep {
    action: string;
    maxWaitTime: number;
    name: string;
    optionSelector: string;
    optionSelectorType: string;
    options: inputs.GetBrowserV2CheckTestBusinessTransactionStepOption[];
    selector: string;
    selectorType: string;
    type: string;
    url: string;
    value: string;
    variableName: string;
    waitForNav: boolean;
    waitForNavTimeout: number;
}

export interface GetBrowserV2CheckTestBusinessTransactionStepArgs {
    action: pulumi.Input<string>;
    maxWaitTime: pulumi.Input<number>;
    name: pulumi.Input<string>;
    optionSelector: pulumi.Input<string>;
    optionSelectorType: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestBusinessTransactionStepOptionArgs>[]>;
    selector: pulumi.Input<string>;
    selectorType: pulumi.Input<string>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
    value: pulumi.Input<string>;
    variableName: pulumi.Input<string>;
    waitForNav: pulumi.Input<boolean>;
    waitForNavTimeout: pulumi.Input<number>;
}

export interface GetBrowserV2CheckTestBusinessTransactionStepOption {
    url: string;
}

export interface GetBrowserV2CheckTestBusinessTransactionStepOptionArgs {
    url: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestCustomProperty {
    key?: string;
    value?: string;
}

export interface GetBrowserV2CheckTestCustomPropertyArgs {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetBrowserV2CheckTestDevice {
    id: number;
    label: string;
    networkConnections: inputs.GetBrowserV2CheckTestDeviceNetworkConnection[];
    userAgent: string;
    viewportHeight: number;
    viewportWidth: number;
}

export interface GetBrowserV2CheckTestDeviceArgs {
    id: pulumi.Input<number>;
    label: pulumi.Input<string>;
    networkConnections: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestDeviceNetworkConnectionArgs>[]>;
    userAgent: pulumi.Input<string>;
    viewportHeight: pulumi.Input<number>;
    viewportWidth: pulumi.Input<number>;
}

export interface GetBrowserV2CheckTestDeviceNetworkConnection {
    description: string;
    downloadBandwidth: number;
    latency: number;
    packetLoss: number;
    uploadBandwidth: number;
}

export interface GetBrowserV2CheckTestDeviceNetworkConnectionArgs {
    description: pulumi.Input<string>;
    downloadBandwidth: pulumi.Input<number>;
    latency: pulumi.Input<number>;
    packetLoss: pulumi.Input<number>;
    uploadBandwidth: pulumi.Input<number>;
}

export interface GetBrowserV2CheckTestTransaction {
    name: string;
    steps: inputs.GetBrowserV2CheckTestTransactionStep[];
}

export interface GetBrowserV2CheckTestTransactionArgs {
    name: pulumi.Input<string>;
    steps: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestTransactionStepArgs>[]>;
}

export interface GetBrowserV2CheckTestTransactionStep {
    action: string;
    duration: number;
    maxWaitTime: number;
    name: string;
    optionSelector: string;
    optionSelectorType: string;
    options: inputs.GetBrowserV2CheckTestTransactionStepOption[];
    selector: string;
    selectorType: string;
    type: string;
    url: string;
    value: string;
    variableName: string;
    waitForNav: boolean;
    waitForNavTimeout: number;
}

export interface GetBrowserV2CheckTestTransactionStepArgs {
    action: pulumi.Input<string>;
    duration: pulumi.Input<number>;
    maxWaitTime: pulumi.Input<number>;
    name: pulumi.Input<string>;
    optionSelector: pulumi.Input<string>;
    optionSelectorType: pulumi.Input<string>;
    options: pulumi.Input<pulumi.Input<inputs.GetBrowserV2CheckTestTransactionStepOptionArgs>[]>;
    selector: pulumi.Input<string>;
    selectorType: pulumi.Input<string>;
    type: pulumi.Input<string>;
    url: pulumi.Input<string>;
    value: pulumi.Input<string>;
    variableName: pulumi.Input<string>;
    waitForNav: pulumi.Input<boolean>;
    waitForNavTimeout: pulumi.Input<number>;
}

export interface GetBrowserV2CheckTestTransactionStepOption {
    url: string;
}

export interface GetBrowserV2CheckTestTransactionStepOptionArgs {
    url: pulumi.Input<string>;
}

export interface GetCheckBrowser {
    type?: string;
}

export interface GetCheckBrowserArgs {
    type?: pulumi.Input<string>;
}

export interface GetCheckCheckConnection {
    downloadBandwidth?: number;
    latency?: number;
    packetLoss?: number;
    uploadBandwidth?: number;
}

export interface GetCheckCheckConnectionArgs {
    downloadBandwidth?: pulumi.Input<number>;
    latency?: pulumi.Input<number>;
    packetLoss?: pulumi.Input<number>;
    uploadBandwidth?: pulumi.Input<number>;
}

export interface GetCheckCookie {
    domain?: string;
    key?: string;
    path?: string;
    value?: string;
}

export interface GetCheckCookieArgs {
    domain?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetCheckDnsOverride {
    originalDomain?: string;
    originalHost?: string;
}

export interface GetCheckDnsOverrideArgs {
    originalDomain?: pulumi.Input<string>;
    originalHost?: pulumi.Input<string>;
}

export interface GetCheckExcludedFile {
    exclusionType?: string;
    pattern?: string;
    presetName?: string;
}

export interface GetCheckExcludedFileArgs {
    exclusionType?: pulumi.Input<string>;
    pattern?: pulumi.Input<string>;
    presetName?: pulumi.Input<string>;
}

export interface GetCheckJavascriptFile {
    id?: number;
    name?: string;
}

export interface GetCheckJavascriptFileArgs {
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}

export interface GetCheckLink {
    lastRun?: string;
    metrics?: string;
    self?: string;
    selfHtml?: string;
}

export interface GetCheckLinkArgs {
    lastRun?: pulumi.Input<string>;
    metrics?: pulumi.Input<string>;
    self?: pulumi.Input<string>;
    selfHtml?: pulumi.Input<string>;
}

export interface GetCheckStep {
    how?: string;
    itemMethod?: string;
    name?: string;
    position?: number;
    value?: string;
    variableName?: string;
    what?: string;
}

export interface GetCheckStepArgs {
    how?: pulumi.Input<string>;
    itemMethod?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    position?: pulumi.Input<number>;
    value?: pulumi.Input<string>;
    variableName?: pulumi.Input<string>;
    what?: pulumi.Input<string>;
}

export interface GetCheckThresholdMonitor {
    comparisonType?: string;
    matcher?: string;
    metricName?: string;
    value?: number;
}

export interface GetCheckThresholdMonitorArgs {
    comparisonType?: pulumi.Input<string>;
    matcher?: pulumi.Input<string>;
    metricName?: pulumi.Input<string>;
    value?: pulumi.Input<number>;
}

export interface GetCheckViewport {
    height?: number;
    width?: number;
}

export interface GetCheckViewportArgs {
    height?: pulumi.Input<number>;
    width?: pulumi.Input<number>;
}

export interface GetDevicesV2CheckDevice {
    id?: number;
    label?: string;
    networkConnections?: inputs.GetDevicesV2CheckDeviceNetworkConnection[];
    userAgent?: string;
    viewportHeight?: number;
    viewportWidth?: number;
}

export interface GetDevicesV2CheckDeviceArgs {
    id?: pulumi.Input<number>;
    label?: pulumi.Input<string>;
    networkConnections?: pulumi.Input<pulumi.Input<inputs.GetDevicesV2CheckDeviceNetworkConnectionArgs>[]>;
    userAgent?: pulumi.Input<string>;
    viewportHeight?: pulumi.Input<number>;
    viewportWidth?: pulumi.Input<number>;
}

export interface GetDevicesV2CheckDeviceNetworkConnection {
    description: string;
    downloadBandwidth: number;
    latency: number;
    packetLoss: number;
    uploadBandwidth: number;
}

export interface GetDevicesV2CheckDeviceNetworkConnectionArgs {
    description: pulumi.Input<string>;
    downloadBandwidth: pulumi.Input<number>;
    latency: pulumi.Input<number>;
    packetLoss: pulumi.Input<number>;
    uploadBandwidth: pulumi.Input<number>;
}

export interface GetDowntimeConfigurationV2CheckDowntimeConfiguration {
    createdAt?: string;
    description?: string;
    endTime?: string;
    id: number;
    name?: string;
    rule?: string;
    startTime?: string;
    status?: string;
    testCount?: number;
    testsUpdatedAt?: string;
    updatedAt?: string;
}

export interface GetDowntimeConfigurationV2CheckDowntimeConfigurationArgs {
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    id: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    rule?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    testCount?: pulumi.Input<number>;
    testsUpdatedAt?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface GetDowntimeConfigurationsV2CheckDowntimeConfiguration {
    createdAt?: string;
    description?: string;
    endTime?: string;
    id: number;
    name?: string;
    rule?: string;
    startTime?: string;
    status?: string;
    testCount?: number;
    testsUpdatedAt?: string;
    updatedAt?: string;
}

export interface GetDowntimeConfigurationsV2CheckDowntimeConfigurationArgs {
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    id: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    rule?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    testCount?: pulumi.Input<number>;
    testsUpdatedAt?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}

export interface GetHttpV2CheckTest {
    active?: boolean;
    automaticRetries?: number;
    body?: string;
    createdAt?: string;
    createdBy?: string;
    customProperties?: inputs.GetHttpV2CheckTestCustomProperty[];
    frequency?: number;
    headers?: inputs.GetHttpV2CheckTestHeader[];
    id: number;
    lastRunAt?: string;
    lastRunStatus?: string;
    locationIds?: string[];
    name?: string;
    requestMethod?: string;
    schedulingStrategy?: string;
    type?: string;
    updatedAt?: string;
    updatedBy?: string;
    url?: string;
    userAgent?: string;
    validations?: inputs.GetHttpV2CheckTestValidation[];
    verifyCertificates?: boolean;
}

export interface GetHttpV2CheckTestArgs {
    active?: pulumi.Input<boolean>;
    automaticRetries?: pulumi.Input<number>;
    body?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.GetHttpV2CheckTestCustomPropertyArgs>[]>;
    frequency?: pulumi.Input<number>;
    headers?: pulumi.Input<pulumi.Input<inputs.GetHttpV2CheckTestHeaderArgs>[]>;
    id: pulumi.Input<number>;
    lastRunAt?: pulumi.Input<string>;
    lastRunStatus?: pulumi.Input<string>;
    locationIds?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    requestMethod?: pulumi.Input<string>;
    schedulingStrategy?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    url?: pulumi.Input<string>;
    userAgent?: pulumi.Input<string>;
    validations?: pulumi.Input<pulumi.Input<inputs.GetHttpV2CheckTestValidationArgs>[]>;
    verifyCertificates?: pulumi.Input<boolean>;
}

export interface GetHttpV2CheckTestCustomProperty {
    key?: string;
    value?: string;
}

export interface GetHttpV2CheckTestCustomPropertyArgs {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHttpV2CheckTestHeader {
    name?: string;
    value?: string;
}

export interface GetHttpV2CheckTestHeaderArgs {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetHttpV2CheckTestValidation {
    actual?: string;
    code?: string;
    comparator?: string;
    expected?: string;
    extractor?: string;
    name?: string;
    source?: string;
    type?: string;
    value?: string;
    variable?: string;
}

export interface GetHttpV2CheckTestValidationArgs {
    actual?: pulumi.Input<string>;
    code?: pulumi.Input<string>;
    comparator?: pulumi.Input<string>;
    expected?: pulumi.Input<string>;
    extractor?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    variable?: pulumi.Input<string>;
}

export interface GetLocationV2CheckLocation {
    country?: string;
    default?: boolean;
    id: string;
    label?: string;
    type?: string;
}

export interface GetLocationV2CheckLocationArgs {
    country?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    id: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetLocationV2CheckMeta {
    activeTestIds?: number[];
    pausedTestIds?: number[];
}

export interface GetLocationV2CheckMetaArgs {
    activeTestIds?: pulumi.Input<pulumi.Input<number>[]>;
    pausedTestIds?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface GetLocationsV2CheckLocation {
    country?: string;
    default?: boolean;
    id?: string;
    label?: string;
    type?: string;
}

export interface GetLocationsV2CheckLocationArgs {
    country?: pulumi.Input<string>;
    default?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface GetPortV2CheckTest {
    active?: boolean;
    automaticRetries?: number;
    createdAt?: string;
    createdBy?: string;
    customProperties?: inputs.GetPortV2CheckTestCustomProperty[];
    frequency?: number;
    host?: string;
    id: number;
    lastRunAt?: string;
    lastRunStatus?: string;
    locationIds?: string[];
    name?: string;
    port?: number;
    protocol?: string;
    schedulingStrategy?: string;
    type?: string;
    updatedAt?: string;
    updatedBy?: string;
}

export interface GetPortV2CheckTestArgs {
    active?: pulumi.Input<boolean>;
    automaticRetries?: pulumi.Input<number>;
    createdAt?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    customProperties?: pulumi.Input<pulumi.Input<inputs.GetPortV2CheckTestCustomPropertyArgs>[]>;
    frequency?: pulumi.Input<number>;
    host?: pulumi.Input<string>;
    id: pulumi.Input<number>;
    lastRunAt?: pulumi.Input<string>;
    lastRunStatus?: pulumi.Input<string>;
    locationIds?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    schedulingStrategy?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
}

export interface GetPortV2CheckTestCustomProperty {
    key?: string;
    value?: string;
}

export interface GetPortV2CheckTestCustomPropertyArgs {
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetVariableV2CheckVariable {
    createdAt?: string;
    description?: string;
    id: number;
    name?: string;
    secret?: boolean;
    updatedAt?: string;
    value?: string;
}

export interface GetVariableV2CheckVariableArgs {
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    secret?: pulumi.Input<boolean>;
    updatedAt?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GetVariablesV2CheckVariable {
    createdAt?: string;
    description?: string;
    id?: number;
    name?: string;
    secret?: boolean;
    updatedAt?: string;
    value?: string;
}

export interface GetVariablesV2CheckVariableArgs {
    createdAt?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    secret?: pulumi.Input<boolean>;
    updatedAt?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}
