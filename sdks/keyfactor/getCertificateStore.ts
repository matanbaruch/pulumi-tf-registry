// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCertificateStore(args: GetCertificateStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateStoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keyfactor:index/getCertificateStore:getCertificateStore", {
        "agentAssigned": args.agentAssigned,
        "approved": args.approved,
        "clientMachine": args.clientMachine,
        "containerName": args.containerName,
        "createIfMissing": args.createIfMissing,
        "inventorySchedule": args.inventorySchedule,
        "properties": args.properties,
        "setNewPasswordAllowed": args.setNewPasswordAllowed,
        "storePath": args.storePath,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCertificateStore.
 */
export interface GetCertificateStoreArgs {
    agentAssigned?: boolean;
    approved?: boolean;
    clientMachine: string;
    containerName?: string;
    createIfMissing?: boolean;
    inventorySchedule?: string;
    properties?: {[key: string]: string};
    setNewPasswordAllowed?: boolean;
    storePath: string;
}

/**
 * A collection of values returned by getCertificateStore.
 */
export interface GetCertificateStoreResult {
    readonly agentAssigned?: boolean;
    readonly agentId: string;
    readonly agentIdentifier: string;
    readonly approved?: boolean;
    readonly clientMachine: string;
    readonly containerId: number;
    readonly containerName?: string;
    readonly createIfMissing?: boolean;
    readonly displayName: string;
    readonly id: string;
    readonly inventorySchedule?: string;
    readonly properties?: {[key: string]: string};
    readonly serverPassword: string;
    readonly serverUseSsl: boolean;
    readonly serverUsername: string;
    readonly setNewPasswordAllowed?: boolean;
    readonly storePassword: string;
    readonly storePath: string;
    readonly storeType: string;
}
export function getCertificateStoreOutput(args: GetCertificateStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateStoreResult> {
    return pulumi.output(args).apply((a: any) => getCertificateStore(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateStore.
 */
export interface GetCertificateStoreOutputArgs {
    agentAssigned?: pulumi.Input<boolean>;
    approved?: pulumi.Input<boolean>;
    clientMachine: pulumi.Input<string>;
    containerName?: pulumi.Input<string>;
    createIfMissing?: pulumi.Input<boolean>;
    inventorySchedule?: pulumi.Input<string>;
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    setNewPasswordAllowed?: pulumi.Input<boolean>;
    storePath: pulumi.Input<string>;
}
