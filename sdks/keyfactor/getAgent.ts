// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAgent(args: GetAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetAgentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keyfactor:index/getAgent:getAgent", {
        "agentIdentifier": args.agentIdentifier,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAgent.
 */
export interface GetAgentArgs {
    agentIdentifier: string;
}

/**
 * A collection of values returned by getAgent.
 */
export interface GetAgentResult {
    readonly agentId: string;
    readonly agentIdentifier: string;
    readonly agentPlatform: number;
    readonly authCertificateReenrollment: string;
    readonly blueprint: string;
    readonly capabilities: string[];
    readonly clientMachine: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lastErrorCode: number;
    readonly lastErrorMessage: string;
    readonly lastSeen: string;
    readonly lastThumbprintUsed: string;
    readonly legacyThumbprint: string;
    readonly status: number;
    readonly thumbprint: string;
    readonly username: string;
    readonly version: string;
}
export function getAgentOutput(args: GetAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAgentResult> {
    return pulumi.output(args).apply((a: any) => getAgent(a, opts))
}

/**
 * A collection of arguments for invoking getAgent.
 */
export interface GetAgentOutputArgs {
    agentIdentifier: pulumi.Input<string>;
}
