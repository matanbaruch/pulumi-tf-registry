// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getIdentity(args: GetIdentityArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("keyfactor:index/getIdentity:getIdentity", {
        "accountName": args.accountName,
        "roles": args.roles,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentity.
 */
export interface GetIdentityArgs {
    accountName: string;
    roles?: string[];
}

/**
 * A collection of values returned by getIdentity.
 */
export interface GetIdentityResult {
    readonly accountName: string;
    readonly id: number;
    readonly identityType: string;
    readonly roles?: string[];
    readonly valid: boolean;
}
export function getIdentityOutput(args: GetIdentityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityResult> {
    return pulumi.output(args).apply((a: any) => getIdentity(a, opts))
}

/**
 * A collection of arguments for invoking getIdentity.
 */
export interface GetIdentityOutputArgs {
    accountName: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}
