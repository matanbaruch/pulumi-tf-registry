// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdpAdapter(args: GetIdpAdapterArgs, opts?: pulumi.InvokeOptions): Promise<GetIdpAdapterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getIdpAdapter:getIdpAdapter", {
        "adapterId": args.adapterId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdpAdapter.
 */
export interface GetIdpAdapterArgs {
    adapterId: string;
}

/**
 * A collection of values returned by getIdpAdapter.
 */
export interface GetIdpAdapterResult {
    readonly adapterId: string;
    readonly attributeContract: outputs.GetIdpAdapterAttributeContract;
    readonly attributeMapping: outputs.GetIdpAdapterAttributeMapping;
    readonly authnCtxClassRef: string;
    readonly configuration: outputs.GetIdpAdapterConfiguration;
    readonly id: string;
    readonly name: string;
    readonly parentRef: outputs.GetIdpAdapterParentRef;
    readonly pluginDescriptorRef: outputs.GetIdpAdapterPluginDescriptorRef;
}
export function getIdpAdapterOutput(args: GetIdpAdapterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdpAdapterResult> {
    return pulumi.output(args).apply((a: any) => getIdpAdapter(a, opts))
}

/**
 * A collection of arguments for invoking getIdpAdapter.
 */
export interface GetIdpAdapterOutputArgs {
    adapterId: pulumi.Input<string>;
}
