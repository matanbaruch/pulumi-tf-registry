// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("pingfederate");

/**
 * Access token for PingFederate Admin API. Cannot be used in conjunction with username and password, or oauth. Default
 * value can be set with the `PINGFEDERATE_PROVIDER_ACCESS_TOKEN` environment variable.
 */
export declare const accessToken: string | undefined;
Object.defineProperty(exports, "accessToken", {
    get() {
        return __config.get("accessToken");
    },
    enumerable: true,
});

/**
 * Path for PingFederate Admin API. Default value can be set with the `PINGFEDERATE_PROVIDER_ADMIN_API_PATH` environment
 * variable. If no value is supplied, the value used will be `/pf-admin-api/v1`.
 */
export declare const adminApiPath: string | undefined;
Object.defineProperty(exports, "adminApiPath", {
    get() {
        return __config.get("adminApiPath");
    },
    enumerable: true,
});

/**
 * Paths to files containing PEM-encoded certificates to be trusted as root CAs when connecting to the PingFederate server
 * over HTTPS. If not set, the host's root CA set will be used. Default value can be set with the
 * `PINGFEDERATE_PROVIDER_CA_CERTIFICATE_PEM_FILES` environment variable, using commas to delimit multiple PEM files if
 * necessary.
 */
export declare const caCertificatePemFiles: string[] | undefined;
Object.defineProperty(exports, "caCertificatePemFiles", {
    get() {
        return __config.getObject<string[]>("caCertificatePemFiles");
    },
    enumerable: true,
});

/**
 * OAuth client ID for requesting access token. Default value can be set with the `PINGFEDERATE_PROVIDER_OAUTH_CLIENT_ID`
 * environment variable.
 */
export declare const clientId: string | undefined;
Object.defineProperty(exports, "clientId", {
    get() {
        return __config.get("clientId");
    },
    enumerable: true,
});

/**
 * OAuth client secret for requesting access token. Default value can be set with the
 * `PINGFEDERATE_PROVIDER_OAUTH_CLIENT_SECRET` environment variable.
 */
export declare const clientSecret: string | undefined;
Object.defineProperty(exports, "clientSecret", {
    get() {
        return __config.get("clientSecret");
    },
    enumerable: true,
});

/**
 * URI for PingFederate HTTPS port. Default value can be set with the `PINGFEDERATE_PROVIDER_HTTPS_HOST` environment
 * variable.
 */
export declare const httpsHost: string | undefined;
Object.defineProperty(exports, "httpsHost", {
    get() {
        return __config.get("httpsHost");
    },
    enumerable: true,
});

/**
 * Set to true to trust any certificate when connecting to the PingFederate server. This is insecure and should not be
 * enabled outside of testing. Default value can be set with the `PINGFEDERATE_PROVIDER_INSECURE_TRUST_ALL_TLS` environment
 * variable.
 */
export declare const insecureTrustAllTls: boolean | undefined;
Object.defineProperty(exports, "insecureTrustAllTls", {
    get() {
        return __config.getObject<boolean>("insecureTrustAllTls");
    },
    enumerable: true,
});

/**
 * Password for PingFederate Admin user. Must only be set with username. Cannot be used in conjunction with access_token,
 * or oauth. Default value can be set with the `PINGFEDERATE_PROVIDER_PASSWORD` environment variable.
 */
export declare const password: string | undefined;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password");
    },
    enumerable: true,
});

/**
 * Version of the PingFederate server being configured. Default value can be set with the
 * `PINGFEDERATE_PROVIDER_PRODUCT_VERSION` environment variable.
 */
export declare const productVersion: string | undefined;
Object.defineProperty(exports, "productVersion", {
    get() {
        return __config.get("productVersion");
    },
    enumerable: true,
});

/**
 * OAuth scopes for access token. Default value can be set with the `PINGFEDERATE_PROVIDER_OAUTH_SCOPES` environment
 * variable.
 */
export declare const scopes: string[] | undefined;
Object.defineProperty(exports, "scopes", {
    get() {
        return __config.getObject<string[]>("scopes");
    },
    enumerable: true,
});

/**
 * OAuth token URL for requesting access token. Default value can be set with the `PINGFEDERATE_PROVIDER_OAUTH_TOKEN_URL`
 * environment variable.
 */
export declare const tokenUrl: string | undefined;
Object.defineProperty(exports, "tokenUrl", {
    get() {
        return __config.get("tokenUrl");
    },
    enumerable: true,
});

/**
 * Username for PingFederate Admin user. Must only be set with password. Cannot be used in conjunction with access_token,
 * or oauth. Default value can be set with the `PINGFEDERATE_PROVIDER_USERNAME` environment variable.
 */
export declare const username: string | undefined;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username");
    },
    enumerable: true,
});

/**
 * Header value in request for PingFederate. The connection test will be bypassed when set to true. Default value can be
 * set with the `PINGFEDERATE_PROVIDER_X_BYPASS_EXTERNAL_VALIDATION_HEADER` environment variable.
 */
export declare const xBypassExternalValidationHeader: boolean | undefined;
Object.defineProperty(exports, "xBypassExternalValidationHeader", {
    get() {
        return __config.getObject<boolean>("xBypassExternalValidationHeader");
    },
    enumerable: true,
});

