// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ServerSettingsLogSettings extends pulumi.CustomResource {
    /**
     * Get an existing ServerSettingsLogSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerSettingsLogSettingsState, opts?: pulumi.CustomResourceOptions): ServerSettingsLogSettings {
        return new ServerSettingsLogSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/serverSettingsLogSettings:ServerSettingsLogSettings';

    /**
     * Returns true if the given object is an instance of ServerSettingsLogSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerSettingsLogSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerSettingsLogSettings.__pulumiType;
    }

    /**
     * The log categories defined for the system and whether they are enabled.
     */
    public readonly logCategories!: pulumi.Output<outputs.ServerSettingsLogSettingsLogCategory[]>;
    /**
     * The log categories defined for the system and whether they are enabled. This attribute is read-only and will include any
     * categories returned by PingFederate that were not specified in the normal log_categories attribute.
     */
    public /*out*/ readonly logCategoriesAlls!: pulumi.Output<outputs.ServerSettingsLogSettingsLogCategoriesAll[]>;

    /**
     * Create a ServerSettingsLogSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServerSettingsLogSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerSettingsLogSettingsArgs | ServerSettingsLogSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerSettingsLogSettingsState | undefined;
            resourceInputs["logCategories"] = state ? state.logCategories : undefined;
            resourceInputs["logCategoriesAlls"] = state ? state.logCategoriesAlls : undefined;
        } else {
            const args = argsOrState as ServerSettingsLogSettingsArgs | undefined;
            resourceInputs["logCategories"] = args ? args.logCategories : undefined;
            resourceInputs["logCategoriesAlls"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerSettingsLogSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServerSettingsLogSettings resources.
 */
export interface ServerSettingsLogSettingsState {
    /**
     * The log categories defined for the system and whether they are enabled.
     */
    logCategories?: pulumi.Input<pulumi.Input<inputs.ServerSettingsLogSettingsLogCategory>[]>;
    /**
     * The log categories defined for the system and whether they are enabled. This attribute is read-only and will include any
     * categories returned by PingFederate that were not specified in the normal log_categories attribute.
     */
    logCategoriesAlls?: pulumi.Input<pulumi.Input<inputs.ServerSettingsLogSettingsLogCategoriesAll>[]>;
}

/**
 * The set of arguments for constructing a ServerSettingsLogSettings resource.
 */
export interface ServerSettingsLogSettingsArgs {
    /**
     * The log categories defined for the system and whether they are enabled.
     */
    logCategories?: pulumi.Input<pulumi.Input<inputs.ServerSettingsLogSettingsLogCategory>[]>;
}
