// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCustomDataStore(args: GetCustomDataStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomDataStoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getCustomDataStore:getCustomDataStore", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCustomDataStore.
 */
export interface GetCustomDataStoreArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getCustomDataStore.
 */
export interface GetCustomDataStoreResult {
    readonly configurations: outputs.GetCustomDataStoreConfiguration[];
    readonly dataStoreId: string;
    readonly id: string;
    readonly maskAttributeValues: boolean;
    readonly name: string;
    readonly parentReves: outputs.GetCustomDataStoreParentRef[];
    readonly pluginDescriptorReves: outputs.GetCustomDataStorePluginDescriptorRef[];
}
export function getCustomDataStoreOutput(args: GetCustomDataStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCustomDataStoreResult> {
    return pulumi.output(args).apply((a: any) => getCustomDataStore(a, opts))
}

/**
 * A collection of arguments for invoking getCustomDataStore.
 */
export interface GetCustomDataStoreOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
