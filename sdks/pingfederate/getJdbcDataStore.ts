// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getJdbcDataStore(args: GetJdbcDataStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetJdbcDataStoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getJdbcDataStore:getJdbcDataStore", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getJdbcDataStore.
 */
export interface GetJdbcDataStoreArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getJdbcDataStore.
 */
export interface GetJdbcDataStoreResult {
    readonly allowMultiValueAttributes: boolean;
    readonly blockingTimeout: number;
    readonly connectionUrl: string;
    readonly connectionUrlTags: outputs.GetJdbcDataStoreConnectionUrlTag[];
    readonly dataStoreId: string;
    readonly driverClass: string;
    readonly encryptedPassword: string;
    readonly id: string;
    readonly idleTimeout: number;
    readonly maskAttributeValues: boolean;
    readonly maxPoolSize: number;
    readonly minPoolSize: number;
    readonly name: string;
    readonly password: string;
    readonly userName: string;
    readonly validateConnectionSql: string;
}
export function getJdbcDataStoreOutput(args: GetJdbcDataStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJdbcDataStoreResult> {
    return pulumi.output(args).apply((a: any) => getJdbcDataStore(a, opts))
}

/**
 * A collection of arguments for invoking getJdbcDataStore.
 */
export interface GetJdbcDataStoreOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
