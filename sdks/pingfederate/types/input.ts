// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AuthenticationApiApplicationClientForRedirectlessModeRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationApiSettingsDefaultApplicationRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTree {
    /**
     * Authentication API Application Id to be used in this policy branch. If the value is not specified, no Authentication API Application will be used.
     */
    authenticationApiApplicationRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeAuthenticationApiApplicationRef>;
    /**
     * A description for the authentication policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether or not this authentication policy tree is enabled. Default is true.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * If a policy ends in failure keep the user local.
     */
    handleFailuresLocally?: pulumi.Input<boolean>;
    /**
     * The authentication policy tree id. ID is unique.
     */
    id?: pulumi.Input<string>;
    /**
     * The authentication policy name. Name is unique.
     */
    name?: pulumi.Input<string>;
    /**
     * A node inside the authentication policy tree.
     */
    rootNode: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNode>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeAuthenticationApiApplicationRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNode {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesDefaultAuthenticationSource {
    /**
     * A reference to the authentication source.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesDefaultAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesDefaultAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentInputs {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentOutputs {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNode {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node of type AuthenticationPolicyTreeNode.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * An authentication policy contract selection action.
     */
    apcMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction>;
    /**
     * An authentication selector selection action.
     */
    authnSelectorPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authnSourcePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction>;
    /**
     * The continue selection action.
     */
    continuePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction>;
    /**
     * The done selection action.
     */
    donePolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction>;
    /**
     * A authentication policy fragment selection action.
     */
    fragmentPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction>;
    /**
     * A local identity profile selection action.
     */
    localIdentityMappingPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction>;
    /**
     * The restart selection action.
     */
    restartPolicyAction?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyAction {
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    attributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping>;
    /**
     * A reference to a resource.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionApcMappingPolicyActionAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyAction {
    /**
     * A reference to a resource.
     */
    authenticationSelectorRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSelectorPolicyActionAuthenticationSelectorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules>;
    /**
     * An authentication source (IdP adapter or IdP connection).
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    inputUserIdMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSource {
    /**
     * A reference to a resource.
     */
    sourceRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMapping {
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthnSourcePolicyActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionContinuePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionDonePolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyAction {
    /**
     * A collection of attribute rules
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A reference to a resource.
     */
    fragment: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * The actual list of attribute rules.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    attributeName?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.<br>For each SourceType, the value should be:<br>ACCOUNT_LINK - If account linking was enabled for the browser SSO, the value must be 'Local User ID', unless it has been overridden in PingFederate's server configuration.<br>ADAPTER - The value is one of the attributes of the IdP Adapter.<br>ASSERTION - The value is one of the attributes coming from the SAML assertion.<br>AUTHENTICATION_POLICY_CONTRACT - The value is one of the attributes coming from an authentication policy contract.<br>LOCAL_IDENTITY_PROFILE - The value is one of the fields coming from a local identity profile.<br>CONTEXT - The value must be one of the following ['TargetResource' or 'OAuthScopes' or 'ClientId' or 'AuthenticationCtx' or 'ClientIp' or 'Locale' or 'StsBasicAuthUsername' or 'StsSSLClientCertSubjectDN' or 'StsSSLClientCertChain' or 'VirtualServerId' or 'AuthenticatingAuthority' or 'DefaultPersistentGrantLifetime'.]<br>CLAIMS - Attributes provided by the OIDC Provider.<br>CUSTOM_DATA_STORE - The value is one of the attributes returned by this custom data store.<br>EXPRESSION - The value is an OGNL expression.<br>EXTENDED_CLIENT_METADATA - The value is from an OAuth extended client metadata parameter. This source type is deprecated and has been replaced by EXTENDED_PROPERTIES.<br>EXTENDED_PROPERTIES - The value is from an OAuth Client's extended property.<br>IDP_CONNECTION - The value is one of the attributes passed in by the IdP connection.<br>JDBC_DATA_STORE - The value is one of the column names returned from the JDBC attribute source.<br>LDAP_DATA_STORE - The value is one of the LDAP attributes supported by your LDAP data store.<br>MAPPED_ATTRIBUTES - The value is the name of one of the mapped attributes that is defined in the associated attribute mapping.<br>OAUTH_PERSISTENT_GRANT - The value is one of the attributes from the persistent grant.<br>PASSWORD_CREDENTIAL_VALIDATOR - The value is one of the attributes of the PCV.<br>NO_MAPPING - A placeholder value to indicate that an attribute currently has no mapped source.TEXT - A hardcoded value that is used to populate the corresponding attribute.<br>TOKEN - The value is one of the token attributes.<br>REQUEST - The value is from the request context such as the CIBA identity hint contract or the request contract for Ws-Trust.<br>TRACKED_HTTP_PARAMS - The value is from the original request parameters.<br>SUBJECT_TOKEN - The value is one of the OAuth 2.0 Token exchange subject_token attributes.<br>ACTOR_TOKEN - The value is one of the OAuth 2.0 Token exchange actor_token attributes.<br>TOKEN_EXCHANGE_PROCESSOR_POLICY - The value is one of the attributes coming from a Token Exchange Processor policy.<br>FRAGMENT - The value is one of the attributes coming from an authentication policy fragment.<br>INPUTS - The value is one of the attributes coming from an attribute defined in the input authentication policy contract for an authentication policy fragment.<br>ATTRIBUTE_QUERY - The value is one of the user attributes queried from an Attribute Authority.<br>IDENTITY_STORE_USER - The value is one of the attributes from a user identity store provisioner for SCIM processing.<br>IDENTITY_STORE_GROUP - The value is one of the attributes from a group identity store provisioner for SCIM processing.<br>SCIM_USER - The value is one of the attributes passed in from the SCIM user request.<br>SCIM_GROUP - The value is one of the attributes passed in from the SCIM group request.<br>
     */
    attributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource>;
    /**
     * The condition that will be applied to the attribute's expected value. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    condition?: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule. This field is required if the Attribute Source type is not 'EXPRESSION'.
     */
    expectedValue?: pulumi.Input<string>;
    /**
     * The expression of this attribute rule. This field is required if the Attribute Source type is 'EXPRESSION'.
     */
    expression?: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionAttributeRulesItemAttributeSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentPolicyActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping>;
    /**
     * A reference to a resource.
     */
    localIdentityRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef>;
    /**
     * A list of mappings from attribute sources to attribute targets.
     */
    outboundAttributeMapping: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityMappingPolicyActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionRestartPolicyAction {
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
}

export interface AuthenticationPolicyContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface AuthenticationPolicyContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface AuthenticationSelectorAttributeContract {
    /**
     * A set of additional attributes that can be returned by the Authentication Selector. The extended attributes are only used if the Authentication Selector supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorAttributeContractExtendedAttribute>[]>;
}

export interface AuthenticationSelectorAttributeContractExtendedAttribute {
    /**
     * An attribute for the Authentication Selector attribute contract.
     */
    name: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTablesAll>[]>;
}

export interface AuthenticationSelectorConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTableRow>[]>;
}

export interface AuthenticationSelectorConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTableRowField>[]>;
}

export interface AuthenticationSelectorConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTablesAllRow>[]>;
}

export interface AuthenticationSelectorConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTablesAllRowField>[]>;
}

export interface AuthenticationSelectorConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationSelectorParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface AuthenticationSelectorPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface CaptchaProviderConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationTablesAll>[]>;
}

export interface CaptchaProviderConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface CaptchaProviderConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface CaptchaProviderConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationTableRow>[]>;
}

export interface CaptchaProviderConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationTableRowField>[]>;
}

export interface CaptchaProviderConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface CaptchaProviderConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationTablesAllRow>[]>;
}

export interface CaptchaProviderConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CaptchaProviderConfigurationTablesAllRowField>[]>;
}

export interface CaptchaProviderConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface CaptchaProviderParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface CaptchaProviderPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface CaptchaProviderSettingsDefaultCaptchaProviderRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface CertificatesRevocationSettingsCrlSettings {
    /**
     * Next retry on next update expiration in minutes. This value defaults to `60`.
     */
    nextRetryMinsWhenNextUpdateInPast?: pulumi.Input<number>;
    /**
     * Next retry on resolution failure in minutes. This value defaults to `1440`.
     */
    nextRetryMinsWhenResolveFailed?: pulumi.Input<number>;
    /**
     * Treat non retrievable CRL as revoked. This setting defaults to `false`.
     */
    treatNonRetrievableCrlAsRevoked?: pulumi.Input<boolean>;
    /**
     * Verify CRL signature. This setting defaults to `true`.
     */
    verifyCrlSignature?: pulumi.Input<boolean>;
}

export interface CertificatesRevocationSettingsOcspSettings {
    /**
     * Action on responder unavailable. This value defaults to `CONTINUE`. Options are `CONTINUE`, `FAIL`, `FAILOVER`.
     */
    actionOnResponderUnavailable?: pulumi.Input<string>;
    /**
     * Action on status unknown. This value defaults to `FAIL`. Options are `CONTINUE`, `FAIL`, `FAILOVER`.
     */
    actionOnStatusUnknown?: pulumi.Input<string>;
    /**
     * Action on unsuccessful response. This value defaults to `FAIL`. Options are `CONTINUE`, `FAIL`, `FAILOVER`.
     */
    actionOnUnsuccessfulResponse?: pulumi.Input<string>;
    /**
     * Current update grace period in minutes. This value defaults to `5`.
     */
    currentUpdateGracePeriod?: pulumi.Input<number>;
    /**
     * Next update grace period in minutes. This value defaults to `5`.
     */
    nextUpdateGracePeriod?: pulumi.Input<number>;
    /**
     * Do not allow responder to use cached responses. This setting defaults to `false`.
     */
    requesterAddNonce?: pulumi.Input<boolean>;
    /**
     * Resource link to OCSP responder signature verification certificate. A previously selected certificate will be deselected if this attribute is not defined.
     */
    responderCertReference?: pulumi.Input<inputs.CertificatesRevocationSettingsOcspSettingsResponderCertReference>;
    /**
     * Responder connection timeout in seconds. This value defaults to `5`.
     */
    responderTimeout?: pulumi.Input<number>;
    /**
     * Default responder URL. This URL is used if the certificate being checked does not specify an OCSP responder URL.
     */
    responderUrl?: pulumi.Input<string>;
    /**
     * Response cache period in hours. This value defaults to `48`.
     */
    responseCachePeriod?: pulumi.Input<number>;
}

export interface CertificatesRevocationSettingsOcspSettingsResponderCertReference {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface CertificatesRevocationSettingsProxySettings {
    /**
     * Host name.
     */
    host: pulumi.Input<string>;
    /**
     * Port number.
     */
    port: pulumi.Input<number>;
}

export interface ConnectionMetadataExportSigningSettings {
    /**
     * The algorithm used to sign messages sent to this partner. The default is `SHA1withDSA` for DSA certs, `SHA256withRSA` for RSA certs, and `SHA256withECDSA` for EC certs. For RSA certs, `SHA1withRSA`, `SHA384withRSA`, `SHA512withRSA`, `SHA256withRSAandMGF1`, `SHA384withRSAandMGF1` and `SHA512withRSAandMGF1` are also supported. For EC certs, `SHA384withECDSA` and `SHA512withECDSA` are also supported. If the connection is WS-Federation with JWT token type, then the possible values are `RSA SHA256`, `RSA SHA384`, `RSA SHA512`, `RSASSA-PSS SHA256`, `RSASSA-PSS SHA384`, `RSASSA-PSS SHA512`, `ECDSA SHA256`, `ECDSA SHA384`, `ECDSA SHA512`
     */
    algorithm?: pulumi.Input<string>;
    /**
     * Determines whether the signing certificate is included in the signature element.
     */
    includeCertInSignature?: pulumi.Input<boolean>;
    /**
     * Determines whether the element with the raw public key is included in the signature element.
     */
    includeRawKeyInSignature?: pulumi.Input<boolean>;
    /**
     * The ID of the key pair used to sign messages sent to this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate admin console.
     */
    signingKeyPairRef: pulumi.Input<inputs.ConnectionMetadataExportSigningSettingsSigningKeyPairRef>;
}

export interface ConnectionMetadataExportSigningSettingsSigningKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface DataStoreCustomDataStore {
    /**
     * Plugin instance configuration.
     */
    configuration: pulumi.Input<inputs.DataStoreCustomDataStoreConfiguration>;
    /**
     * The plugin instance name.
     */
    name: pulumi.Input<string>;
    /**
     * The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent instances. Note: This parent reference is required if this plugin instance is used as an overriding plugin (e.g. connection adapter overrides). Supported prior to PingFederate `12.0`.
     */
    parentRef?: pulumi.Input<inputs.DataStoreCustomDataStoreParentRef>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is created.
     */
    pluginDescriptorRef: pulumi.Input<inputs.DataStoreCustomDataStorePluginDescriptorRef>;
    /**
     * The data store type.
     */
    type?: pulumi.Input<string>;
}

export interface DataStoreCustomDataStoreConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationTablesAll>[]>;
}

export interface DataStoreCustomDataStoreConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface DataStoreCustomDataStoreConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface DataStoreCustomDataStoreConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationTableRow>[]>;
}

export interface DataStoreCustomDataStoreConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationTableRowField>[]>;
}

export interface DataStoreCustomDataStoreConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface DataStoreCustomDataStoreConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationTablesAllRow>[]>;
}

export interface DataStoreCustomDataStoreConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DataStoreCustomDataStoreConfigurationTablesAllRowField>[]>;
}

export interface DataStoreCustomDataStoreConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface DataStoreCustomDataStoreParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface DataStoreCustomDataStorePluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface DataStoreJdbcDataStore {
    /**
     * Indicates that this data store can select more than one record from a column and return the results as a multi-value attribute. Default value is `false`.
     */
    allowMultiValueAttributes?: pulumi.Input<boolean>;
    /**
     * The amount of time in milliseconds a request waits to get a connection from the connection pool before it fails. The default value is `5000` milliseconds.
     */
    blockingTimeout?: pulumi.Input<number>;
    /**
     * The default location of the JDBC database. This field is required if `connection_url_tags` is not specified.
     */
    connectionUrl?: pulumi.Input<string>;
    /**
     * The set of connection URLs and associated tags for this JDBC data store. This is required if 'connection_url' is not provided.
     */
    connectionUrlTags?: pulumi.Input<pulumi.Input<inputs.DataStoreJdbcDataStoreConnectionUrlTag>[]>;
    /**
     * The name of the driver class used to communicate with the source database.
     */
    driverClass: pulumi.Input<string>;
    /**
     * The length of time in minutes the connection can be idle in the pool before it is closed. The default value is `5` minutes.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * The largest number of database connections in the connection pool for the given data store. The default value is `100`.
     */
    maxPoolSize?: pulumi.Input<number>;
    /**
     * The smallest number of database connections in the connection pool for the given data store. The default value is `10`.
     */
    minPoolSize?: pulumi.Input<number>;
    /**
     * The data store name with a unique value across all data sources. Defaults to a combination of the `connection_url` and `username`.
     */
    name?: pulumi.Input<string>;
    /**
     * The password needed to access the database.
     */
    password?: pulumi.Input<string>;
    /**
     * The data store type.
     */
    type?: pulumi.Input<string>;
    /**
     * The name that identifies the user when connecting to the database.
     */
    userName?: pulumi.Input<string>;
    /**
     * A simple SQL statement used by PingFederate at runtime to verify that the database connection is still active and to reconnect if needed.
     */
    validateConnectionSql?: pulumi.Input<string>;
}

export interface DataStoreJdbcDataStoreConnectionUrlTag {
    /**
     * The location of the JDBC database.
     */
    connectionUrl: pulumi.Input<string>;
    /**
     * Whether this is the default connection. Default value is `false`.
     */
    defaultSource?: pulumi.Input<boolean>;
    /**
     * Tags associated with the `connection_url`. At runtime, nodes will use the first `connection_url_tags` element that has a tag that matches with `node.tags` in the run.properties file.
     */
    tags?: pulumi.Input<string>;
}

export interface DataStoreLdapDataStore {
    /**
     * A list of LDAP attributes to be handled as binary data.
     */
    binaryAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether username and password are required. If `true`, then `user_dn` and `client_tls_certificate_ref` cannot be set. The default value is `false`.
     */
    bindAnonymously?: pulumi.Input<boolean>;
    /**
     * The client TLS certificate used to access the data store. If specified, authentication to the data store will be done using mutual TLS. See '/keyPairs/sslClient' to manage certificates. Supported in PF version `11.3` or later. In order to use this authentication method, you must set either `use_start_tls` or `use_ssl` to `true`. Mutually exclusive with `bind_anonymously` and `user_dn`
     */
    clientTlsCertificateRef?: pulumi.Input<inputs.DataStoreLdapDataStoreClientTlsCertificateRef>;
    /**
     * The maximum number of milliseconds that a connection attempt should be allowed to continue before returning an error. A value of `-1` causes the pool to wait indefinitely. Defaults to `0`.
     */
    connectionTimeout?: pulumi.Input<number>;
    /**
     * Indicates whether temporary connections can be created when the Maximum Connections threshold is reached. Default value is `false`.
     */
    createIfNecessary?: pulumi.Input<boolean>;
    /**
     * The maximum time in milliseconds that DNS information are cached. Defaults to `0`.
     */
    dnsTtl?: pulumi.Input<number>;
    /**
     * Follow LDAP Referrals in the domain tree. The default value is `false`. This property does not apply to PingDirectory as this functionality is configured in PingDirectory.
     */
    followLdapReferrals?: pulumi.Input<boolean>;
    /**
     * The default LDAP host names. This field is required if `hostnames_tags` is not specified. Failover can be configured by providing multiple host names.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of host names and associated tags for this LDAP data store. This is required if 'hostnames' is not provided.
     */
    hostnamesTags?: pulumi.Input<pulumi.Input<inputs.DataStoreLdapDataStoreHostnamesTag>[]>;
    /**
     * The prefix value used to discover LDAP DNS SRV record. Defaults to `_ldap._tcp`.
     */
    ldapDnsSrvPrefix?: pulumi.Input<string>;
    /**
     * A type that allows PingFederate to configure many provisioning settings automatically. The `UNBOUNDID_DS` type has been deprecated, please use the `PING_DIRECTORY` type instead. Supported values are `ACTIVE_DIRECTORY`, `ORACLE_DIRECTORY_SERVER`, `ORACLE_UNIFIED_DIRECTORY`, `PING_DIRECTORY`, `GENERIC`.
     */
    ldapType: pulumi.Input<string>;
    /**
     * The largest number of active connections that can remain in each pool without releasing extra ones. Defaults to `100`.
     */
    maxConnections?: pulumi.Input<number>;
    /**
     * The maximum number of milliseconds the pool waits for a connection to become available when trying to obtain a connection from the pool. Setting a value of `-1` causes the pool not to wait at all and to either create a new connection or produce an error (when no connections are available). Defaults to `-1`.
     */
    maxWait?: pulumi.Input<number>;
    /**
     * The smallest number of connections that can remain in each pool, without creating extra ones. Defaults to `10`.
     */
    minConnections?: pulumi.Input<number>;
    /**
     * The data store name with a unique value across all data sources. Defaults to a combination of the values of `hostnames` and `user_dn`.
     */
    name?: pulumi.Input<string>;
    /**
     * The password credential required to access the data store. Requires `user_dn` to be set.
     */
    password?: pulumi.Input<string>;
    /**
     * The maximum number of milliseconds a connection waits for a response to be returned before producing an error. A value of `-1` causes the connection to wait indefinitely. Defaults to `0`.
     */
    readTimeout?: pulumi.Input<number>;
    /**
     * Indicates whether failed operations should be retried. The default is `false`. Supported in PF version `11.3` or later.
     */
    retryFailedOperations?: pulumi.Input<boolean>;
    /**
     * Indicates whether objects are validated before being borrowed from the pool. Default value is `false`.
     */
    testOnBorrow?: pulumi.Input<boolean>;
    /**
     * Indicates whether objects are validated before being returned to the pool. Default value is `false`.
     */
    testOnReturn?: pulumi.Input<boolean>;
    /**
     * The frequency, in milliseconds, that the evictor cleans up the connections in the pool. A value of `-1` disables the evictor. Defaults to `0`.
     */
    timeBetweenEvictions?: pulumi.Input<number>;
    /**
     * The data store type.
     */
    type?: pulumi.Input<string>;
    /**
     * Use DNS SRV Records to discover LDAP server information. The default value is `false`.
     */
    useDnsSrvRecords?: pulumi.Input<boolean>;
    /**
     * Connects to the LDAP data store using secure SSL/TLS encryption (LDAPS). The default value is `false`.
     */
    useSsl?: pulumi.Input<boolean>;
    /**
     * Connects to the LDAP data store using secure StartTLS encryption. The default value is `false`.
     */
    useStartTls?: pulumi.Input<boolean>;
    /**
     * The username credential required to access the data store. Mutually exclusive with `bind_anonymously` and `client_tls_certificate_ref`. `password` must also be set to use this attribute.
     */
    userDn?: pulumi.Input<string>;
    /**
     * Verifies that the presented server certificate includes the address to which the client intended to establish a connection. Defaults to `true`.
     */
    verifyHost?: pulumi.Input<boolean>;
}

export interface DataStoreLdapDataStoreClientTlsCertificateRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface DataStoreLdapDataStoreHostnamesTag {
    /**
     * Whether this is the default connection. Defaults to `false`.
     */
    defaultSource?: pulumi.Input<boolean>;
    /**
     * The LDAP host names. Failover can be configured by providing multiple host names.
     */
    hostnames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags associated with the host names. At runtime, nodes will use the first `hostnames_tags` element that has a tag that matches with node.tags in the run.properties file.
     */
    tags?: pulumi.Input<string>;
}

export interface DataStorePingOneLdapGatewayDataStore {
    /**
     * A list of LDAP attributes to be handled as binary data.
     */
    binaryAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A type that allows PingFederate to configure many provisioning settings automatically. The value is validated against the LDAP gateway configuration in PingOne unless the provider setting 'x_bypass_external_validation_header' is set to `true`. Supported values are `ACTIVE_DIRECTORY`, `ORACLE_DIRECTORY_SERVER`, `ORACLE_UNIFIED_DIRECTORY`, `UNBOUNDID_DS`, `PING_DIRECTORY`, and `GENERIC`.
     */
    ldapType: pulumi.Input<string>;
    /**
     * The data store name with a unique value across all data sources. Defaults to `ping_one_connection_ref.id` plus `ping_one_environment_id` plus `ping_one_ldap_gateway_id`, each separated by `:`.
     */
    name?: pulumi.Input<string>;
    /**
     * Reference to the PingOne connection this gateway uses.
     */
    pingOneConnectionRef: pulumi.Input<inputs.DataStorePingOneLdapGatewayDataStorePingOneConnectionRef>;
    /**
     * The environment ID to which the gateway belongs.
     */
    pingOneEnvironmentId: pulumi.Input<string>;
    /**
     * The ID of the PingOne LDAP Gateway this data store uses.
     */
    pingOneLdapGatewayId: pulumi.Input<string>;
    /**
     * The data store type.
     */
    type?: pulumi.Input<string>;
    /**
     * Connects to the LDAP data store using secure SSL/TLS encryption (LDAPS). The default value is `false`. The value is validated against the LDAP gateway configuration in PingOne unless the provider setting 'x_bypass_external_validation_header' is set to `true`.
     */
    useSsl?: pulumi.Input<boolean>;
    /**
     * Connects to the LDAP data store using StartTLS. The default value is `false`. The value is validated against the LDAP gateway configuration in PingOne unless the provider setting 'x_bypass_external_validation_header' is set to `true`. Supported in PingFederate `12.1` and later.
     */
    useStartTls?: pulumi.Input<boolean>;
}

export interface DataStorePingOneLdapGatewayDataStorePingOneConnectionRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ExtendedPropertiesItem {
    /**
     * The property description.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the property should allow multiple values. Default value is `false`.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The property name.
     */
    name: pulumi.Input<string>;
}

export interface IdpAdapterAttributeContract {
    /**
     * A list of IdP adapter attributes that correspond to the attributes exposed by the IdP adapter type.
     */
    coreAttributes: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeContractCoreAttribute>[]>;
    /**
     * A list of IdP adapter attributes that correspond to the attributes exposed by the IdP adapter type. This attribute will include any values set by default by PingFederate.
     */
    coreAttributesAlls?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeContractCoreAttributesAll>[]>;
    /**
     * A list of additional attributes that can be returned by the IdP adapter. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeContractExtendedAttribute>[]>;
    /**
     * Whether or not all OGNL expressions used to fulfill an outgoing assertion contract should be masked in the logs. Defaults to `false`.
     */
    maskOgnlValues?: pulumi.Input<boolean>;
    /**
     * The attribute to use for uniquely identify a user's authentication sessions.
     */
    uniqueUserKeyAttribute?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeContractCoreAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to `false`.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to `false`.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpAdapterAttributeContractCoreAttributesAll {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to `false`.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to `false`.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpAdapterAttributeContractExtendedAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to `false`.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to `false`.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpAdapterAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteria>;
}

export interface IdpAdapterAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface IdpAdapterAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpAdapterConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTablesAll>[]>;
}

export interface IdpAdapterConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpAdapterConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpAdapterConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTableRow>[]>;
}

export interface IdpAdapterConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTableRowField>[]>;
}

export interface IdpAdapterConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpAdapterConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTablesAllRow>[]>;
}

export interface IdpAdapterConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTablesAllRowField>[]>;
}

export interface IdpAdapterConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpAdapterParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpAdapterPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionAdditionalAllowedEntitiesConfiguration {
    /**
     * An array of additional allowed entities or issuers to be accepted during entity or issuer validation.
     */
    additionalAllowedEntities?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAdditionalAllowedEntitiesConfigurationAdditionalAllowedEntity>[]>;
    /**
     * Set to true to configure additional entities or issuers to be accepted during entity or issuer validation.
     */
    allowAdditionalEntities?: pulumi.Input<boolean>;
    /**
     * Set to true to accept any entity or issuer during entity or issuer validation. (Not Recommended)
     */
    allowAllEntities?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionAdditionalAllowedEntitiesConfigurationAdditionalAllowedEntity {
    /**
     * Entity description.
     */
    entityDescription?: pulumi.Input<string>;
    /**
     * Unique entity identifier.
     */
    entityId?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQuery {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSource>[]>;
    /**
     * The list of attributes that may be returned to the SP in the response to an attribute request.
     */
    attributes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteria>;
    /**
     * The attribute query profile's security policy.
     */
    policy?: pulumi.Input<inputs.IdpSpConnectionAttributeQueryPolicy>;
}

export interface IdpSpConnectionAttributeQueryAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSource>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryPolicy {
    /**
     * Encrypt the assertion.
     */
    encryptAssertion?: pulumi.Input<boolean>;
    /**
     * Require an encrypted name identifier.
     */
    requireEncryptedNameId?: pulumi.Input<boolean>;
    /**
     * Require signed attribute query.
     */
    requireSignedAttributeQuery?: pulumi.Input<boolean>;
    /**
     * Sign the assertion.
     */
    signAssertion?: pulumi.Input<boolean>;
    /**
     * Sign the response.
     */
    signResponse?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionContactInfo {
    /**
     * Company name.
     */
    company?: pulumi.Input<string>;
    /**
     * Contact email address.
     */
    email?: pulumi.Input<string>;
    /**
     * Contact first name.
     */
    firstName?: pulumi.Input<string>;
    /**
     * Contact last name.
     */
    lastName?: pulumi.Input<string>;
    /**
     * Contact phone number.
     */
    phone?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentials {
    /**
     * The algorithm used to encrypt assertions sent to this partner. AES_128, AES_256, AES_128_GCM, AES_192_GCM, AES_256_GCM and Triple_DES are supported.
     */
    blockEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The certificates used for signature verification and XML encryption.
     */
    certs?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialsCert>[]>;
    /**
     * A reference to a resource.
     */
    decryptionKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialsDecryptionKeyPairRef>;
    inboundBackChannelAuth?: pulumi.Input<inputs.IdpSpConnectionCredentialsInboundBackChannelAuth>;
    /**
     * The algorithm used to transport keys to this partner. RSA_OAEP, RSA_OAEP_256 and RSA_v15 are supported.
     */
    keyTransportAlgorithm?: pulumi.Input<string>;
    outboundBackChannelAuth?: pulumi.Input<inputs.IdpSpConnectionCredentialsOutboundBackChannelAuth>;
    /**
     * A reference to a resource.
     */
    secondaryDecryptionKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialsSecondaryDecryptionKeyPairRef>;
    /**
     * Settings related to signing messages sent to this partner.
     */
    signingSettings?: pulumi.Input<inputs.IdpSpConnectionCredentialsSigningSettings>;
    /**
     * If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field.
     */
    verificationIssuerDn?: pulumi.Input<string>;
    /**
     * If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.
     */
    verificationSubjectDn?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsCert {
    /**
     * Indicates whether this is an active signature verification certificate.
     */
    activeVerificationCert?: pulumi.Input<boolean>;
    /**
     * Certificate details.
     */
    certView?: pulumi.Input<inputs.IdpSpConnectionCredentialsCertCertView>;
    /**
     * Indicates whether to use this cert to encrypt outgoing assertions. Only one certificate in the collection can have this flag set.
     */
    encryptionCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the primary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    primaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the secondary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    secondaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Encoded certificate data.
     */
    x509file: pulumi.Input<inputs.IdpSpConnectionCredentialsCertX509file>;
}

export interface IdpSpConnectionCredentialsCertCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface IdpSpConnectionCredentialsCertX509file {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsDecryptionKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsInboundBackChannelAuth {
    /**
     * The certificates used for signature verification and XML encryption.
     */
    certs?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialsInboundBackChannelAuthCert>[]>;
    /**
     * If incoming or outgoing messages must be signed.
     */
    digitalSignature?: pulumi.Input<boolean>;
    /**
     * Username and password credentials.
     */
    httpBasicCredentials?: pulumi.Input<inputs.IdpSpConnectionCredentialsInboundBackChannelAuthHttpBasicCredentials>;
    /**
     * Incoming HTTP transmissions must use a secure channel.
     */
    requireSsl?: pulumi.Input<boolean>;
    /**
     * The back channel authentication type.
     */
    type: pulumi.Input<string>;
    /**
     * If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field.
     */
    verificationIssuerDn?: pulumi.Input<string>;
    /**
     * If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.
     */
    verificationSubjectDn?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsInboundBackChannelAuthCert {
    /**
     * Indicates whether this is an active signature verification certificate.
     */
    activeVerificationCert?: pulumi.Input<boolean>;
    /**
     * Certificate details.
     */
    certView?: pulumi.Input<inputs.IdpSpConnectionCredentialsInboundBackChannelAuthCertCertView>;
    /**
     * Indicates whether to use this cert to encrypt outgoing assertions. Only one certificate in the collection can have this flag set.
     */
    encryptionCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the primary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    primaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the secondary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    secondaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Encoded certificate data.
     */
    x509file: pulumi.Input<inputs.IdpSpConnectionCredentialsInboundBackChannelAuthCertX509file>;
}

export interface IdpSpConnectionCredentialsInboundBackChannelAuthCertCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface IdpSpConnectionCredentialsInboundBackChannelAuthCertX509file {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsInboundBackChannelAuthHttpBasicCredentials {
    /**
     * For GET requests, this field contains the encrypted password, if one exists.  For POST and PUT requests, if you wish to reuse the existing password, this field should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * User password.  To update the password, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    password?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsOutboundBackChannelAuth {
    /**
     * If incoming or outgoing messages must be signed.
     */
    digitalSignature?: pulumi.Input<boolean>;
    /**
     * Username and password credentials.
     */
    httpBasicCredentials?: pulumi.Input<inputs.IdpSpConnectionCredentialsOutboundBackChannelAuthHttpBasicCredentials>;
    /**
     * A reference to a resource.
     */
    sslAuthKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialsOutboundBackChannelAuthSslAuthKeyPairRef>;
    /**
     * The back channel authentication type.
     */
    type: pulumi.Input<string>;
    /**
     * Validate the partner server certificate. Default is true.
     */
    validatePartnerCert?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionCredentialsOutboundBackChannelAuthHttpBasicCredentials {
    /**
     * For GET requests, this field contains the encrypted password, if one exists.  For POST and PUT requests, if you wish to reuse the existing password, this field should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * User password.  To update the password, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    password?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsOutboundBackChannelAuthSslAuthKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsSecondaryDecryptionKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsSigningSettings {
    /**
     * The algorithm used to sign messages sent to this partner. The default is SHA1withDSA for DSA certs, SHA256withRSA for RSA certs, and SHA256withECDSA for EC certs. For RSA certs, SHA1withRSA, SHA384withRSA, SHA512withRSA, SHA256withRSAandMGF1, SHA384withRSAandMGF1 and SHA512withRSAandMGF1 are also supported. For EC certs, SHA384withECDSA and SHA512withECDSA are also supported. If the connection is WS-Federation with JWT token type, then the possible values are RSA SHA256, RSA SHA384, RSA SHA512, RSASSA-PSS SHA256, RSASSA-PSS SHA384, RSASSA-PSS SHA512, ECDSA SHA256, ECDSA SHA384, ECDSA SHA512
     */
    algorithm?: pulumi.Input<string>;
    /**
     * The list of IDs of alternative key pairs used to sign messages sent to this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate admin console.
     */
    alternativeSigningKeyPairRefs?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialsSigningSettingsAlternativeSigningKeyPairRef>[]>;
    /**
     * Determines whether the signing certificate is included in the signature <KeyInfo> element.
     */
    includeCertInSignature?: pulumi.Input<boolean>;
    /**
     * Determines whether the <KeyValue> element with the raw public key is included in the signature <KeyInfo> element.
     */
    includeRawKeyInSignature?: pulumi.Input<boolean>;
    /**
     * A reference to a resource.
     */
    signingKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialsSigningSettingsSigningKeyPairRef>;
}

export interface IdpSpConnectionCredentialsSigningSettingsAlternativeSigningKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialsSigningSettingsSigningKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionExtendedProperties {
    /**
     * A List of values
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionMetadataReloadSettings {
    /**
     * Specifies whether the metadata of the connection will be automatically reloaded. The default value is true.
     */
    enableAutoMetadataUpdate?: pulumi.Input<boolean>;
    /**
     * A reference to a resource.
     */
    metadataUrlRef?: pulumi.Input<inputs.IdpSpConnectionMetadataReloadSettingsMetadataUrlRef>;
}

export interface IdpSpConnectionMetadataReloadSettingsMetadataUrlRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvision {
    /**
     * Includes settings of a source data store, managing provisioning threads and mapping of attributes.
     */
    channels: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannel>[]>;
    /**
     * Custom SCIM Attributes configuration.
     */
    customSchema?: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionCustomSchema>;
    /**
     * Configuration fields that includes credentials to target SaaS application.
     */
    targetSettings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionTargetSetting>[]>;
    /**
     * Configuration fields that includes credentials to target SaaS application. This attribute will include any values set by default by PingFederate.
     */
    targetSettingsAlls?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionTargetSettingsAll>[]>;
    /**
     * The SaaS plugin type.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannel {
    /**
     * Indicates whether the channel is the active channel for this connection.
     */
    active: pulumi.Input<boolean>;
    /**
     * The mapping of attributes from the local data store into Fields specified by the service provider. This attribute will include any values set by default by PingFederate.
     */
    attributeMappingAlls?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelAttributeMappingAll>[]>;
    /**
     * The mapping of attributes from the local data store into Fields specified by the service provider.
     */
    attributeMappings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelAttributeMapping>[]>;
    /**
     * The source data source and LDAP settings.
     */
    channelSource: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSource>;
    /**
     * The number of processing threads. The default value is 1.
     */
    maxThreads?: pulumi.Input<number>;
    /**
     * The name of the channel.
     */
    name: pulumi.Input<string>;
    /**
     * Timeout, in seconds, for individual user and group provisioning operations on the target service provider. The default value is 60.
     */
    timeout?: pulumi.Input<number>;
}

export interface IdpSpConnectionOutboundProvisionChannelAttributeMapping {
    /**
     * The name of target field.
     */
    fieldName: pulumi.Input<string>;
    /**
     * The settings that represent how attribute values from source data store will be mapped into Fields specified by the service provider.
     */
    saasFieldInfo: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelAttributeMappingSaasFieldInfo>;
}

export interface IdpSpConnectionOutboundProvisionChannelAttributeMappingAll {
    /**
     * The name of target field.
     */
    fieldName: pulumi.Input<string>;
    /**
     * The settings that represent how attribute values from source data store will be mapped into Fields specified by the service provider.
     */
    saasFieldInfo: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelAttributeMappingAllSaasFieldInfo>;
}

export interface IdpSpConnectionOutboundProvisionChannelAttributeMappingAllSaasFieldInfo {
    /**
     * The list of source attribute names used to generate or map to a target field
     */
    attributeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The character case of the field value.
     */
    characterCase?: pulumi.Input<string>;
    /**
     * Indicates whether this field is a create only field and cannot be updated.
     */
    createOnly?: pulumi.Input<boolean>;
    /**
     * The default value for the target field
     */
    defaultValue?: pulumi.Input<string>;
    /**
     * An OGNL expression to obtain a value.
     */
    expression?: pulumi.Input<string>;
    /**
     * Indicates whether the attribute should be masked in server logs.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * Indicates how the field shall be parsed.
     */
    parser?: pulumi.Input<string>;
    /**
     * Indicates whether field should be trimmed before provisioning.
     */
    trim?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionChannelAttributeMappingSaasFieldInfo {
    /**
     * The list of source attribute names used to generate or map to a target field
     */
    attributeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The character case of the field value.
     */
    characterCase?: pulumi.Input<string>;
    /**
     * Indicates whether this field is a create only field and cannot be updated.
     */
    createOnly?: pulumi.Input<boolean>;
    /**
     * The default value for the target field
     */
    defaultValue?: pulumi.Input<string>;
    /**
     * An OGNL expression to obtain a value.
     */
    expression?: pulumi.Input<string>;
    /**
     * Indicates whether the attribute should be masked in server logs.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * Indicates how the field shall be parsed.
     */
    parser?: pulumi.Input<string>;
    /**
     * Indicates whether field should be trimmed before provisioning.
     */
    trim?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSource {
    /**
     * Account management settings.
     */
    accountManagementSettings: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceAccountManagementSettings>;
    /**
     * The base DN where the user records are located.
     */
    baseDn: pulumi.Input<string>;
    /**
     * Setting to detect changes to a user or a group.
     */
    changeDetectionSettings: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceChangeDetectionSettings>;
    /**
     * Reference to an LDAP datastore.
     */
    dataSource: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceDataSource>;
    /**
     * Settings to detect group memberships.
     */
    groupMembershipDetection: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceGroupMembershipDetection>;
    /**
     * The location settings that includes a DN and a LDAP filter.
     */
    groupSourceLocation?: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceGroupSourceLocation>;
    /**
     * the GUID attribute name.
     */
    guidAttributeName: pulumi.Input<string>;
    /**
     * Indicates whether the GUID is stored in binary format.
     */
    guidBinary: pulumi.Input<boolean>;
    /**
     * The location settings that includes a DN and a LDAP filter.
     */
    userSourceLocation: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceUserSourceLocation>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceAccountManagementSettings {
    /**
     * The account status algorithm name. 
     * ACCOUNT_STATUS_ALGORITHM_AD -  Algorithm name for Active Directory, which uses a bitmap for each user entry. 
     * ACCOUNT_STATUS_ALGORITHM_FLAG - Algorithm name for Oracle Directory Server and other LDAP directories that use a separate attribute to store the user's status. When this option is selected, the Flag Comparison Value and Flag Comparison Status fields should be used.
     */
    accountStatusAlgorithm: pulumi.Input<string>;
    /**
     * The account status attribute name.
     */
    accountStatusAttributeName: pulumi.Input<string>;
    /**
     * The default status of the account.
     */
    defaultStatus?: pulumi.Input<boolean>;
    /**
     * The flag that represents comparison status.
     */
    flagComparisonStatus?: pulumi.Input<boolean>;
    /**
     * The flag that represents comparison value.
     */
    flagComparisonValue?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceChangeDetectionSettings {
    /**
     * The changed user algorithm. 
     * ACTIVE_DIRECTORY_USN - For Active Directory only, this algorithm queries for update sequence numbers on user records that are larger than the last time records were checked. 
     * TIMESTAMP - Queries for timestamps on user records that are not older than the last time records were checked. This check is more efficient from the point of view of the PingFederate provisioner but can be more time consuming on the LDAP side, particularly with the Oracle Directory Server. 
     * TIMESTAMP_NO_NEGATION - Queries for timestamps on user records that are newer than the last time records were checked. This algorithm is recommended for the Oracle Directory Server.
     */
    changedUsersAlgorithm: pulumi.Input<string>;
    /**
     * The group object class.
     */
    groupObjectClass: pulumi.Input<string>;
    /**
     * The timestamp attribute name.
     */
    timeStampAttributeName: pulumi.Input<string>;
    /**
     * The user object class.
     */
    userObjectClass: pulumi.Input<string>;
    /**
     * The USN attribute name.
     */
    usnAttributeName?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceDataSource {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceGroupMembershipDetection {
    /**
     * The name of the attribute that represents group members in a group, also known as group member attribute.
     */
    groupMemberAttributeName?: pulumi.Input<string>;
    /**
     * The name of the attribute that indicates the entity is a member of a group, also known as member of attribute.
     */
    memberOfGroupAttributeName?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceGroupSourceLocation {
    /**
     * An LDAP filter.
     */
    filter?: pulumi.Input<string>;
    /**
     * The group DN for users or groups.
     */
    groupDn?: pulumi.Input<string>;
    /**
     * Indicates whether the search is nested.
     */
    nestedSearch?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceUserSourceLocation {
    /**
     * An LDAP filter.
     */
    filter?: pulumi.Input<string>;
    /**
     * The group DN for users or groups.
     */
    groupDn?: pulumi.Input<string>;
    /**
     * Indicates whether the search is nested.
     */
    nestedSearch?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionCustomSchema {
    attributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionCustomSchemaAttribute>[]>;
    namespace?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionCustomSchemaAttribute {
    /**
     * Indicates whether the attribute is multi-valued.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * Name of the attribute.
     */
    name?: pulumi.Input<string>;
    /**
     * List of sub-attributes for an attribute.
     */
    subAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Represents the name of each attribute type in case of multi-valued attribute.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionOutboundProvisionTargetSetting {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionTargetSettingsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSso {
    /**
     * A list of adapters that map to outgoing assertions.
     */
    adapterMappings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMapping>[]>;
    /**
     * Specify to always sign the SAML ArtifactResponse.
     */
    alwaysSignArtifactResponse?: pulumi.Input<boolean>;
    /**
     * The settings for an Artifact binding.
     */
    artifact?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoArtifact>;
    /**
     * The timeframe of validity before and after the issuance of the assertion.
     */
    assertionLifetime: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAssertionLifetime>;
    /**
     * A set of user attributes that the IdP sends in the SAML assertion.
     */
    attributeContract: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAttributeContract>;
    /**
     * A list of authentication policy contracts that map to outgoing assertions.
     */
    authenticationPolicyContractAssertionMappings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMapping>[]>;
    /**
     * Default Target URL for SAML1.x connections. For SP connections, this default URL represents the destination on the SP where the user will be directed. For IdP connections, entering a URL in the Default Target URL field overrides the SP Default URL SSO setting.
     */
    defaultTargetUrl?: pulumi.Input<string>;
    /**
     * The profiles that are enabled for browser-based SSO. SAML 2.0 supports all profiles whereas SAML 1.x IdP connections support both IdP and SP (non-standard) initiated SSO. This is required for SAMLx.x Connections.
     */
    enabledProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines what to encrypt in the browser-based SSO profile.
     */
    encryptionPolicy?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoEncryptionPolicy>;
    /**
     * The SAML bindings that are enabled for browser-based SSO. This is required for SAML 2.0 connections when the enabled profiles contain the SP-initiated SSO profile or either SLO profile. For SAML 1.x based connections, it is not used for SP Connections and it is optional for IdP Connections.
     */
    incomingBindings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The message customizations for browser-based SSO. Depending on server settings, connection type, and protocol this may or may not be supported.
     */
    messageCustomizations?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoMessageCustomization>[]>;
    /**
     * The browser-based SSO protocol to use.
     */
    protocol: pulumi.Input<string>;
    /**
     * Require AuthN requests to be signed when received via the POST or Redirect bindings.
     */
    requireSignedAuthnRequests?: pulumi.Input<boolean>;
    /**
     * Always sign the SAML Assertion.
     */
    signAssertions?: pulumi.Input<boolean>;
    /**
     * Sign SAML Response as required by the associated binding and encryption policy. Applicable to SAML2.0 only and is defaulted to true. It can be set to false only on SAML2.0 connections when signAssertions is set to true.
     */
    signResponseAsRequired?: pulumi.Input<boolean>;
    /**
     * A list of possible endpoints to send SLO requests and responses.
     */
    sloServiceEndpoints?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoSloServiceEndpoint>[]>;
    /**
     * Process in which users authenticated by the IdP are associated with user accounts local to the SP.
     */
    spSamlIdentityMapping?: pulumi.Input<string>;
    /**
     * Process in which users authenticated by the IdP are associated with user accounts local to the SP for WS-Federation connection types.
     */
    spWsFedIdentityMapping?: pulumi.Input<string>;
    /**
     * Application endpoint that can be used to invoke single sign-on (SSO) for the connection. This is a read-only parameter. Supported in PF version 11.3 or later.
     */
    ssoApplicationEndpoint?: pulumi.Input<string>;
    /**
     * A list of possible endpoints to send assertions to.
     */
    ssoServiceEndpoints: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoSsoServiceEndpoint>[]>;
    /**
     * For WS-Federation connections, a whitelist of additional allowed domains and paths used to validate wreply for SLO, if enabled.
     */
    urlWhitelistEntries?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoUrlWhitelistEntry>[]>;
    /**
     * The WS-Federation Token Type to use.
     */
    wsFedTokenType?: pulumi.Input<string>;
    /**
     * The WS-Trust version for a WS-Federation connection. The default version is WSTRUST12.
     */
    wsTrustVersion?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMapping {
    /**
     * If set to true, SSO transaction will be aborted as a fail-safe when the data-store's attribute mappings fail to complete the attribute contract. Otherwise, the attribute contract with default values is used. By default, this value is false.
     */
    abortSsoTransactionAsFailSafe?: pulumi.Input<boolean>;
    adapterOverrideSettings?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettings>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSource>[]>;
    /**
     * Reference to the associated IdP adapter. Note: This is ignored if adapter overrides for this mapping exists. In this case, the override's parent adapter reference is used.
     */
    idpAdapterRef?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIdpAdapterRef>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteria>;
    /**
     * Restricts this mapping to specific virtual entity IDs.
     */
    restrictVirtualEntityIds?: pulumi.Input<boolean>;
    /**
     * The list of virtual server IDs that this mapping is restricted to.
     */
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettings {
    /**
     * A set of attributes exposed by an IdP adapter.
     */
    attributeContract?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeContract>;
    /**
     * An IdP Adapter Contract Mapping.
     */
    attributeMapping?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMapping>;
    /**
     * The fixed value that indicates how the user was authenticated.
     */
    authnCtxClassRef?: pulumi.Input<string>;
    /**
     * Plugin instance configuration.
     */
    configuration: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfiguration>;
    /**
     * The ID of the plugin instance. The ID cannot be modified once the instance is created.<br>Note: Ignored when specifying a connection's adapter override.
     */
    id: pulumi.Input<string>;
    /**
     * The plugin instance name. The name can be modified once the instance is created.<br>Note: Ignored when specifying a connection's adapter override.
     */
    name: pulumi.Input<string>;
    /**
     * The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent instances. Note: This parent reference is required if this plugin instance is used as an overriding plugin (e.g. connection adapter overrides)
     */
    parentRef?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsParentRef>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is created. Note: Ignored when specifying a connection's adapter override.
     */
    pluginDescriptorRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsPluginDescriptorRef>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeContract {
    /**
     * A list of IdP adapter attributes that correspond to the attributes exposed by the IdP adapter type.
     */
    coreAttributes: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that can be returned by the IdP adapter. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeContractExtendedAttribute>[]>;
    /**
     * Whether or not all OGNL expressions used to fulfill an outgoing assertion contract should be masked in the logs. Defaults to false.
     */
    maskOgnlValues?: pulumi.Input<boolean>;
    /**
     * The attribute to use for uniquely identify a user's authentication sessions.
     */
    uniqueUserKeyAttribute?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeContractCoreAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to false.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to false.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeContractExtendedAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to false.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to false.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteria>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTablesAll>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTableRow>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTableRowField>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTablesAllRow>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTablesAllRowField>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingsPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSource>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIdpAdapterRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoArtifact {
    /**
     * The lifetime of the artifact in seconds.
     */
    lifetime: pulumi.Input<number>;
    /**
     * Remote party URLs that you will use to resolve/translate the artifact and get the actual protocol message
     */
    resolverLocations: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoArtifactResolverLocation>[]>;
    /**
     * Source ID for SAML1.x connections
     */
    sourceId?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoArtifactResolverLocation {
    /**
     * The priority of the endpoint.
     */
    index: pulumi.Input<number>;
    /**
     * Remote party URLs that you will use to resolve/translate the artifact and get the actual protocol message
     */
    url: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAssertionLifetime {
    /**
     * Assertion validity in minutes after the assertion issuance.
     */
    minutesAfter: pulumi.Input<number>;
    /**
     * Assertion validity in minutes before the assertion issuance.
     */
    minutesBefore: pulumi.Input<number>;
}

export interface IdpSpConnectionSpBrowserSsoAttributeContract {
    /**
     * A list of read-only assertion attributes (for example, SAML_SUBJECT) that are automatically populated by PingFederate.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that are added to the outgoing assertion.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAttributeContractExtendedAttribute>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAttributeContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The SAML Name Format for the attribute.
     */
    nameFormat?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAttributeContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The SAML Name Format for the attribute.
     */
    nameFormat?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMapping {
    /**
     * If set to true, SSO transaction will be aborted as a fail-safe when the data-store's attribute mappings fail to complete the attribute contract. Otherwise, the attribute contract with default values is used. By default, this value is false.
     */
    abortSsoTransactionAsFailSafe?: pulumi.Input<boolean>;
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSource>[]>;
    /**
     * Reference to the associated Authentication Policy Contract.
     */
    authenticationPolicyContractRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAuthenticationPolicyContractRef>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteria>;
    /**
     * Restricts this mapping to specific virtual entity IDs.
     */
    restrictVirtualEntityIds?: pulumi.Input<boolean>;
    /**
     * The list of virtual server IDs that this mapping is restricted to.
     */
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSource>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoEncryptionPolicy {
    /**
     * Whether the outgoing SAML assertion will be encrypted.
     */
    encryptAssertion?: pulumi.Input<boolean>;
    /**
     * Encrypt the name-identifier attribute in outbound SLO messages.  This can be set if the name id is encrypted.
     */
    encryptSloSubjectNameId?: pulumi.Input<boolean>;
    /**
     * The list of outgoing SAML assertion attributes that will be encrypted. The 'encryptAssertion' property takes precedence over this.
     */
    encryptedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow the encryption of the name-identifier attribute for inbound SLO messages. This can be set if SP initiated SLO is enabled.
     */
    sloSubjectNameIdEncrypted?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoMessageCustomization {
    /**
     * The context in which the customization will be applied. Depending on the connection type and protocol, this can either be 'assertion', 'authn-response' or 'authn-request'.
     */
    contextName?: pulumi.Input<string>;
    /**
     * The OGNL expression that will be executed. Refer to the Admin Manual for a list of variables provided by PingFederate.
     */
    messageExpression?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoSloServiceEndpoint {
    /**
     * The binding of this endpoint, if applicable - usually only required for SAML 2.0 endpoints.
     */
    binding: pulumi.Input<string>;
    /**
     * The absolute or relative URL to which logout responses are sent. A relative URL can be specified if a base URL for the connection has been defined.
     */
    responseUrl?: pulumi.Input<string>;
    /**
     * The absolute or relative URL of the endpoint. A relative URL can be specified if a base URL for the connection has been defined.
     */
    url: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoSsoServiceEndpoint {
    /**
     * The binding of this endpoint, if applicable - usually only required for SAML 2.0 endpoints.  Supported bindings are Artifact and POST.
     */
    binding?: pulumi.Input<string>;
    /**
     * The priority of the endpoint.
     */
    index?: pulumi.Input<number>;
    /**
     * Whether or not this endpoint is the default endpoint. Defaults to false.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The absolute or relative URL of the endpoint. A relative URL can be specified if a base URL for the connection has been defined.
     */
    url: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoUrlWhitelistEntry {
    /**
     * Allow Any Query/Fragment
     */
    allowQueryAndFragment?: pulumi.Input<boolean>;
    /**
     * Require HTTPS
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * Valid Domain Name (leading wildcard '*.' allowed)
     */
    validDomain?: pulumi.Input<string>;
    /**
     * Valid Path (leave blank to allow any path)
     */
    validPath?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrust {
    /**
     * If the attribute contract cannot be fulfilled using data from the Request, abort the transaction.
     */
    abortIfNotFulfilledFromRequest?: pulumi.Input<boolean>;
    /**
     * A set of user attributes that this server will send in the token.
     */
    attributeContract: pulumi.Input<inputs.IdpSpConnectionWsTrustAttributeContract>;
    /**
     * The default token type when a web service client (WSC) does not specify in the token request which token type the STS should issue. Defaults to SAML 2.0.
     */
    defaultTokenType?: pulumi.Input<string>;
    /**
     * When selected, the STS encrypts the SAML 2.0 assertion. Applicable only to SAML 2.0 security token.  This option does not apply to OAuth assertion profiles.
     */
    encryptSaml2Assertion?: pulumi.Input<boolean>;
    /**
     * When selected, the STS generates a symmetric key to be used in conjunction with the "Holder of Key" (HoK) designation for the assertion's Subject Confirmation Method.  This option does not apply to OAuth assertion profiles.
     */
    generateKey?: pulumi.Input<boolean>;
    /**
     * The message customizations for WS-Trust. Depending on server settings, connection type, and protocol this may or may not be supported.
     */
    messageCustomizations?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustMessageCustomization>[]>;
    /**
     * The amount of time after the SAML token was issued during which it is to be considered valid. The default value is 30.
     */
    minutesAfter?: pulumi.Input<number>;
    /**
     * The amount of time before the SAML token was issued during which it is to be considered valid. The default value is 5.
     */
    minutesBefore?: pulumi.Input<number>;
    /**
     * When selected, four additional token-type requests become available.
     */
    oauthAssertionProfiles?: pulumi.Input<boolean>;
    /**
     * The partner service identifiers.
     */
    partnerServiceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Request Contract to be used to map attribute values into the security token.
     */
    requestContractRef?: pulumi.Input<inputs.IdpSpConnectionWsTrustRequestContractRef>;
    /**
     * A list of token processors to validate incoming tokens.
     */
    tokenProcessorMappings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMapping>[]>;
}

export interface IdpSpConnectionWsTrustAttributeContract {
    /**
     * A list of read-only assertion attributes that are automatically populated by PingFederate.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that are added to the outgoing assertion.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustAttributeContractExtendedAttribute>[]>;
}

export interface IdpSpConnectionWsTrustAttributeContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The attribute namespace.  This is required when the Default Token Type is SAML2.0 or SAML1.1 or SAML1.1 for Office 365.
     */
    namespace?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustAttributeContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The attribute namespace.  This is required when the Default Token Type is SAML2.0 or SAML1.1 or SAML1.1 for Office 365.
     */
    namespace?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustMessageCustomization {
    /**
     * The context in which the customization will be applied. Depending on the connection type and protocol, this can either be 'assertion', 'authn-response' or 'authn-request'.
     */
    contextName?: pulumi.Input<string>;
    /**
     * The OGNL expression that will be executed. Refer to the Admin Manual for a list of variables provided by PingFederate.
     */
    messageExpression?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustRequestContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSource>[]>;
    /**
     * Reference to the associated token processor.
     */
    idpTokenProcessorRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIdpTokenProcessorRef>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteria>;
    /**
     * The list of virtual server IDs that this mapping is restricted to.
     */
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSource>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIdpTokenProcessorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface KerberosRealmLdapGatewayDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeyPairSigningImportRotationSettings {
    /**
     * Buffer days before key pair expiration for activation of the new key pair.
     */
    activationBufferDays?: pulumi.Input<number>;
    /**
     * Buffer days before key pair expiration for creation of a new key pair.
     */
    creationBufferDays?: pulumi.Input<number>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    id?: pulumi.Input<string>;
    /**
     * Key algorithm to be used while creating a new key pair. If this property is unset, the key algorithm of the original key pair will be used. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * Key size, in bits. If this property is unset, the key size of the original key pair will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint.
     */
    keySize?: pulumi.Input<number>;
    /**
     * Required if the original key pair used SHA1 algorithm. If this property is unset, the default signature algorithm of the original key pair will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Valid days for the new key pair to be created. If this property is unset, the validity days of the original key pair will be used.
     */
    validDays?: pulumi.Input<number>;
}

export interface KeyPairSslServerImportRotationSettings {
    /**
     * Buffer days before key pair expiration for activation of the new key pair.
     */
    activationBufferDays?: pulumi.Input<number>;
    /**
     * Buffer days before key pair expiration for creation of a new key pair.
     */
    creationBufferDays?: pulumi.Input<number>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    id?: pulumi.Input<string>;
    /**
     * Key algorithm to be used while creating a new key pair. If this property is unset, the key algorithm of the original key pair will be used. Supported algorithms are available through the /keyPairs/keyAlgorithms endpoint.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * Key size, in bits. If this property is unset, the key size of the original key pair will be used. Supported key sizes are available through the /keyPairs/keyAlgorithms endpoint.
     */
    keySize?: pulumi.Input<number>;
    /**
     * Required if the original key pair used SHA1 algorithm. If this property is unset, the default signature algorithm of the original key pair will be used. Supported signature algorithms are available through the /keyPairs/keyAlgorithms endpoint.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Valid days for the new key pair to be created. If this property is unset, the validity days of the original key pair will be used.
     */
    validDays?: pulumi.Input<number>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetIssuer {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeys {
    /**
     * Reference to the P-256 key currently active.
     */
    p256ActiveCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP256ActiveCertRef>;
    /**
     * Key Id for currently active P-256 key.
     */
    p256ActiveKeyId?: pulumi.Input<string>;
    /**
     * Reference to the P-256 key previously active.
     */
    p256PreviousCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP256PreviousCertRef>;
    /**
     * Key Id for previously active P-256 key.
     */
    p256PreviousKeyId?: pulumi.Input<string>;
    /**
     * Enable publishing of the P-256 certificate chain associated with the active key.
     */
    p256PublishX5cParameter?: pulumi.Input<boolean>;
    /**
     * Reference to the P-384 key currently active.
     */
    p384ActiveCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP384ActiveCertRef>;
    /**
     * Key Id for currently active P-384 key.
     */
    p384ActiveKeyId?: pulumi.Input<string>;
    /**
     * Reference to the P-384 key previously active.
     */
    p384PreviousCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP384PreviousCertRef>;
    /**
     * Key Id for previously active P-384 key.
     */
    p384PreviousKeyId?: pulumi.Input<string>;
    /**
     * Enable publishing of the P-384 certificate chain associated with the active key.
     */
    p384PublishX5cParameter?: pulumi.Input<boolean>;
    /**
     * Reference to the P-521 key currently active.
     */
    p521ActiveCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP521ActiveCertRef>;
    /**
     * Key Id for currently active P-521 key.
     */
    p521ActiveKeyId?: pulumi.Input<string>;
    /**
     * Reference to the P-521 key previously active.
     */
    p521PreviousCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP521PreviousCertRef>;
    /**
     * Key Id for previously active P-521 key.
     */
    p521PreviousKeyId?: pulumi.Input<string>;
    /**
     * Enable publishing of the P-521 certificate chain associated with the active key.
     */
    p521PublishX5cParameter?: pulumi.Input<boolean>;
    /**
     * Reference to the RSA key currently active.
     */
    rsaActiveCertRef: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaActiveCertRef>;
    /**
     * Key Id for currently active RSA key.
     */
    rsaActiveKeyId?: pulumi.Input<string>;
    /**
     * PingFederate uses the same RSA key for all RSA signing algorithms. To enable active RSA JWK entry to have unique single valued ''alg'' parameter, use this list to set a key identifier for each RSA algorithm (`RS256`, `RS384`, `RS512`, `PS256`, `PS384` and `PS512`).
     */
    rsaAlgorithmActiveKeyIds?: pulumi.Input<pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaAlgorithmActiveKeyId>[]>;
    /**
     * PingFederate uses the same RSA key for all RSA signing algorithms. To enable previously active RSA JWK entry to have unique single valued ''alg'' parameter, use this list to set a key identifier for each RSA algorithm (`RS256`, `RS384`, `RS512`, `PS256`, `PS384` and `PS512`).
     */
    rsaAlgorithmPreviousKeyIds?: pulumi.Input<pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaAlgorithmPreviousKeyId>[]>;
    /**
     * Reference to the RSA key previously active.
     */
    rsaPreviousCertRef?: pulumi.Input<inputs.KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaPreviousCertRef>;
    /**
     * Key Id for previously active RSA key.
     */
    rsaPreviousKeyId?: pulumi.Input<string>;
    /**
     * Enable publishing of the RSA certificate chain associated with the active key. The default value is `false`.
     */
    rsaPublishX5cParameter?: pulumi.Input<boolean>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP256ActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP256PreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP384ActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP384PreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP521ActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysP521PreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaAlgorithmActiveKeyId {
    /**
     * Unique key identifier.
     */
    keyId: pulumi.Input<string>;
    /**
     * The RSA signing algorithm type. The supported RSA signing algorithm types are `RS256`, `RS384`, `RS512`, `PS256`, `PS384` and `PS512`.
     */
    rsaAlgType: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaAlgorithmPreviousKeyId {
    /**
     * Unique key identifier.
     */
    keyId: pulumi.Input<string>;
    /**
     * The RSA signing algorithm type. The supported RSA signing algorithm types are `RS256`, `RS384`, `RS512`, `PS256`, `PS384` and `PS512`.
     */
    rsaAlgType: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectAdditionalKeySetSigningKeysRsaPreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsSslServerSettingsActiveAdminConsoleCert {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsSslServerSettingsActiveRuntimeServerCert {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsSslServerSettingsAdminConsoleCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface KeypairsSslServerSettingsRuntimeServerCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LicenseFeature {
    /**
     * The name of the license feature.
     */
    name?: pulumi.Input<string>;
    /**
     * The value of the license feature.
     */
    value?: pulumi.Input<string>;
}

export interface LicenseLicenseGroup {
    /**
     * Maximum number of connections permitted under the group.
     */
    connectionCount?: pulumi.Input<number>;
    /**
     * End date for the group.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Group name from the license file.
     */
    name?: pulumi.Input<string>;
    /**
     * Start date for the group.
     */
    startDate?: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileApcId {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileAuthSource {
    /**
     * The persistent, unique ID for the local identity authentication source. It can be any combination of `[a-zA-Z0-9._-]`. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
    /**
     * The local identity authentication source. Source is unique.
     */
    source: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileAuthSourceUpdatePolicy {
    /**
     * Whether or not to keep attributes after user disconnects. The default value is `false`.
     */
    retainAttributes?: pulumi.Input<boolean>;
    /**
     * Whether or not to store attributes that came from authentication sources. The default value is `false`.
     */
    storeAttributes?: pulumi.Input<boolean>;
    /**
     * Whether or not to update attributes when users authenticate. The default value is `false`.
     */
    updateAttributes?: pulumi.Input<boolean>;
    /**
     * The minimum number of days between updates. The default value is `0`.
     */
    updateInterval?: pulumi.Input<number>;
}

export interface LocalIdentityIdentityProfileDataStoreConfig {
    /**
     * The Auxiliary Object Classes used by the new objects stored in the LDAP data store.
     */
    auxiliaryObjectClasses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn: pulumi.Input<string>;
    /**
     * The Relative DN Pattern that will be used to create objects in the directory.
     */
    createPattern?: pulumi.Input<string>;
    /**
     * The data store mapping.
     */
    dataStoreMapping: pulumi.Input<{[key: string]: pulumi.Input<inputs.LocalIdentityIdentityProfileDataStoreConfigDataStoreMapping>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.LocalIdentityIdentityProfileDataStoreConfigDataStoreRef>;
    /**
     * The Object Class used by the new objects stored in the LDAP data store.
     */
    objectClass?: pulumi.Input<string>;
    /**
     * The data store config type. Supported values are `LDAP`, `PING_ONE_LDAP_GATEWAY`, `JDBC`, and `CUSTOM`.
     */
    type: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileDataStoreConfigDataStoreMapping {
    /**
     * The data store attribute metadata.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The data store attribute name.
     */
    name: pulumi.Input<string>;
    /**
     * The data store attribute type. Supported values are `LDAP`, `PING_ONE_LDAP_GATEWAY`, `JDBC`, and `CUSTOM`.
     */
    type: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileDataStoreConfigDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileEmailVerificationConfig {
    /**
     * The allowed character set used to generate the OTP. The default is `23456789BCDFGHJKMNPQRSTVWXZbcdfghjkmnpqrstvwxz`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    allowedOtpCharacterSet?: pulumi.Input<string>;
    /**
     * Whether the email ownership verification is enabled. The default value is `false`.
     */
    emailVerificationEnabled?: pulumi.Input<boolean>;
    /**
     * The template name for email verification error. The default is `local.identity.email.verification.error.html`.
     */
    emailVerificationErrorTemplateName?: pulumi.Input<string>;
    /**
     * The template name for email verification OTP verification. The default is `local.identity.email.verification.otp.html`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    emailVerificationOtpTemplateName?: pulumi.Input<string>;
    /**
     * The template name for email verification sent. The default is `local.identity.email.verification.sent.html`. Note:Only applicable if `email_verification_type` is `OTL`.
     */
    emailVerificationSentTemplateName?: pulumi.Input<string>;
    /**
     * The template name for email verification success. The default is `local.identity.email.verification.success.html`.
     */
    emailVerificationSuccessTemplateName?: pulumi.Input<string>;
    /**
     * Email Verification Type. Supported values are `OTP` and `OTL`.
     */
    emailVerificationType?: pulumi.Input<string>;
    /**
     * Field used for email ownership verification. Note: Not required when `email_verification_enabled` is set to `false`.
     */
    fieldForEmailToVerify?: pulumi.Input<string>;
    /**
     * Field used for storing email verification status. Note: Not required when `email_verification_enabled` is set to `false`.
     */
    fieldStoringVerificationStatus?: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.LocalIdentityIdentityProfileEmailVerificationConfigNotificationPublisherRef>;
    /**
     * Field used OTL time to live. The default is `1440`. Note: Only applicable if `email_verification_type` is `OTL`.
     */
    otlTimeToLive?: pulumi.Input<number>;
    /**
     * The OTP length generated for email verification. The default is `8`. Note: Only applicable if `email_verification_type` is `OTP`. The value must be between `5` and `100`.
     */
    otpLength?: pulumi.Input<number>;
    /**
     * The number of OTP retry attempts for email verification. The default is `3`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    otpRetryAttempts?: pulumi.Input<number>;
    /**
     * Field used OTP time to live. The default is `15`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    otpTimeToLive?: pulumi.Input<number>;
    /**
     * Whether the user must verify their email address before they can complete a single sign-on transaction. The default is `false`.
     */
    requireVerifiedEmail?: pulumi.Input<boolean>;
    /**
     * The template to render when the user must verify their email address before they can complete a single sign-on transaction. The default is `local.identity.email.verification.required.html`. Note: Only applicable if `email_verification_type` is OTL and `require_verified_email` is true.
     */
    requireVerifiedEmailTemplateName?: pulumi.Input<string>;
    /**
     * The template name for verify email. The default is `message-template-email-ownership-verification.html`.
     */
    verifyEmailTemplateName?: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileEmailVerificationConfigNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileFieldConfig {
    /**
     * The field configuration for the local identity profile.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.LocalIdentityIdentityProfileFieldConfigField>[]>;
    /**
     * Strip leading/trailing spaces from unique ID field. The default value is `false`.
     */
    stripSpaceFromUniqueField?: pulumi.Input<boolean>;
}

export interface LocalIdentityIdentityProfileFieldConfigField {
    /**
     * Attributes of the local identity field.
     */
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    /**
     * Id of the local identity field.
     */
    id: pulumi.Input<string>;
    /**
     * Label of the local identity field.
     */
    label: pulumi.Input<string>;
    /**
     * Whether this is a profile page field or not. The default value is `false`.
     */
    profilePageField?: pulumi.Input<boolean>;
    /**
     * Whether this is a registration page field or not. The default value is `false`.
     */
    registrationPageField?: pulumi.Input<boolean>;
    /**
     * The type of the local identity field. Supported values are `CHECKBOX`, `CHECKBOX_GROUP`, `DATE`, `DROP_DOWN`, `EMAIL`, `PHONE`, `TEXT`, and `HIDDEN`.
     */
    type: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileProfileConfig {
    /**
     * Whether the end user is allowed to use delete functionality. The default value is `false`.
     */
    deleteIdentityEnabled?: pulumi.Input<boolean>;
    /**
     * The template name for end-user profile management.
     */
    templateName: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileRegistrationConfig {
    /**
     * Whether CAPTCHA is enabled or not in the registration configuration. The default value is `false`.
     */
    captchaEnabled?: pulumi.Input<boolean>;
    /**
     * Reference to the associated CAPTCHA provider.
     */
    captchaProviderRef?: pulumi.Input<inputs.LocalIdentityIdentityProfileRegistrationConfigCaptchaProviderRef>;
    /**
     * Whether to create an Authentication Session when registering a local account. The default value is `true`.
     */
    createAuthnSessionAfterRegistration?: pulumi.Input<boolean>;
    /**
     * This setting indicates whether PingFederate should execute the workflow before or after account creation. The default is to run the registration workflow after account creation. Supported values are `BEFORE_ACCOUNT_CREATION` and `AFTER_ACCOUNT_CREATION`. Requires that `registration_workflow` is also set.
     */
    executeWorkflow?: pulumi.Input<string>;
    /**
     * The policy fragment to be executed as part of the registration workflow.
     */
    registrationWorkflow?: pulumi.Input<inputs.LocalIdentityIdentityProfileRegistrationConfigRegistrationWorkflow>;
    /**
     * The template name for the registration configuration.
     */
    templateName: pulumi.Input<string>;
    /**
     * Allows users to indicate whether their device is shared or private. In this mode, PingFederate Authentication Sessions will not be stored unless the user indicates the device is private. The default value is `false`.
     */
    thisIsMyDeviceEnabled?: pulumi.Input<boolean>;
    /**
     * When creating an Authentication Session after registering a local account, PingFederate will pass the Unique ID field's value as the username. If the Unique ID value is not the username, then override which field's value will be used as the username.
     */
    usernameField?: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileRegistrationConfigCaptchaProviderRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityIdentityProfileRegistrationConfigRegistrationWorkflow {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityProfileApcId {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityProfileAuthSource {
    /**
     * The persistent, unique ID for the local identity authentication source. It can be any combination of `[a-zA-Z0-9._-]`. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
    /**
     * The local identity authentication source. Source is unique.
     */
    source: pulumi.Input<string>;
}

export interface LocalIdentityProfileAuthSourceUpdatePolicy {
    /**
     * Whether or not to keep attributes after user disconnects. The default value is `false`.
     */
    retainAttributes?: pulumi.Input<boolean>;
    /**
     * Whether or not to store attributes that came from authentication sources. The default value is `false`.
     */
    storeAttributes?: pulumi.Input<boolean>;
    /**
     * Whether or not to update attributes when users authenticate. The default value is `false`.
     */
    updateAttributes?: pulumi.Input<boolean>;
    /**
     * The minimum number of days between updates. The default value is `0`.
     */
    updateInterval?: pulumi.Input<number>;
}

export interface LocalIdentityProfileDataStoreConfig {
    /**
     * The Auxiliary Object Classes used by the new objects stored in the LDAP data store.
     */
    auxiliaryObjectClasses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn: pulumi.Input<string>;
    /**
     * The Relative DN Pattern that will be used to create objects in the directory.
     */
    createPattern?: pulumi.Input<string>;
    /**
     * The data store mapping.
     */
    dataStoreMapping: pulumi.Input<{[key: string]: pulumi.Input<inputs.LocalIdentityProfileDataStoreConfigDataStoreMapping>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.LocalIdentityProfileDataStoreConfigDataStoreRef>;
    /**
     * The Object Class used by the new objects stored in the LDAP data store.
     */
    objectClass?: pulumi.Input<string>;
    /**
     * The data store config type. Supported values are `LDAP`, `PING_ONE_LDAP_GATEWAY`, `JDBC`, and `CUSTOM`.
     */
    type: pulumi.Input<string>;
}

export interface LocalIdentityProfileDataStoreConfigDataStoreMapping {
    /**
     * The data store attribute metadata.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The data store attribute name.
     */
    name: pulumi.Input<string>;
    /**
     * The data store attribute type. Supported values are `LDAP`, `PING_ONE_LDAP_GATEWAY`, `JDBC`, and `CUSTOM`.
     */
    type: pulumi.Input<string>;
}

export interface LocalIdentityProfileDataStoreConfigDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityProfileEmailVerificationConfig {
    /**
     * The allowed character set used to generate the OTP. The default is `23456789BCDFGHJKMNPQRSTVWXZbcdfghjkmnpqrstvwxz`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    allowedOtpCharacterSet?: pulumi.Input<string>;
    /**
     * Whether the email ownership verification is enabled. The default value is `false`.
     */
    emailVerificationEnabled?: pulumi.Input<boolean>;
    /**
     * The template name for email verification error. The default is `local.identity.email.verification.error.html`.
     */
    emailVerificationErrorTemplateName?: pulumi.Input<string>;
    /**
     * The template name for email verification OTP verification. The default is `local.identity.email.verification.otp.html`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    emailVerificationOtpTemplateName?: pulumi.Input<string>;
    /**
     * The template name for email verification sent. The default is `local.identity.email.verification.sent.html`. Note:Only applicable if `email_verification_type` is `OTL`.
     */
    emailVerificationSentTemplateName?: pulumi.Input<string>;
    /**
     * The template name for email verification success. The default is `local.identity.email.verification.success.html`.
     */
    emailVerificationSuccessTemplateName?: pulumi.Input<string>;
    /**
     * Email Verification Type. Supported values are `OTP` and `OTL`.
     */
    emailVerificationType?: pulumi.Input<string>;
    /**
     * Field used for email ownership verification. Note: Not required when `email_verification_enabled` is set to `false`.
     */
    fieldForEmailToVerify?: pulumi.Input<string>;
    /**
     * Field used for storing email verification status. Note: Not required when `email_verification_enabled` is set to `false`.
     */
    fieldStoringVerificationStatus?: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.LocalIdentityProfileEmailVerificationConfigNotificationPublisherRef>;
    /**
     * Field used OTL time to live. The default is `1440`. Note: Only applicable if `email_verification_type` is `OTL`.
     */
    otlTimeToLive?: pulumi.Input<number>;
    /**
     * The OTP length generated for email verification. The default is `8`. Note: Only applicable if `email_verification_type` is `OTP`. The value must be between `5` and `100`.
     */
    otpLength?: pulumi.Input<number>;
    /**
     * The number of OTP retry attempts for email verification. The default is `3`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    otpRetryAttempts?: pulumi.Input<number>;
    /**
     * Field used OTP time to live. The default is `15`. Note: Only applicable if `email_verification_type` is `OTP`.
     */
    otpTimeToLive?: pulumi.Input<number>;
    /**
     * Whether the user must verify their email address before they can complete a single sign-on transaction. The default is `false`.
     */
    requireVerifiedEmail?: pulumi.Input<boolean>;
    /**
     * The template to render when the user must verify their email address before they can complete a single sign-on transaction. The default is `local.identity.email.verification.required.html`. Note: Only applicable if `email_verification_type` is OTL and `require_verified_email` is true.
     */
    requireVerifiedEmailTemplateName?: pulumi.Input<string>;
    /**
     * The template name for verify email. The default is `message-template-email-ownership-verification.html`.
     */
    verifyEmailTemplateName?: pulumi.Input<string>;
}

export interface LocalIdentityProfileEmailVerificationConfigNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityProfileFieldConfig {
    /**
     * The field configuration for the local identity profile.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.LocalIdentityProfileFieldConfigField>[]>;
    /**
     * Strip leading/trailing spaces from unique ID field. The default value is `false`.
     */
    stripSpaceFromUniqueField?: pulumi.Input<boolean>;
}

export interface LocalIdentityProfileFieldConfigField {
    /**
     * Attributes of the local identity field.
     */
    attributes?: pulumi.Input<{[key: string]: pulumi.Input<boolean>}>;
    /**
     * Id of the local identity field.
     */
    id: pulumi.Input<string>;
    /**
     * Label of the local identity field.
     */
    label: pulumi.Input<string>;
    /**
     * Whether this is a profile page field or not. The default value is `false`.
     */
    profilePageField?: pulumi.Input<boolean>;
    /**
     * Whether this is a registration page field or not. The default value is `false`.
     */
    registrationPageField?: pulumi.Input<boolean>;
    /**
     * The type of the local identity field. Supported values are `CHECKBOX`, `CHECKBOX_GROUP`, `DATE`, `DROP_DOWN`, `EMAIL`, `PHONE`, `TEXT`, and `HIDDEN`.
     */
    type: pulumi.Input<string>;
}

export interface LocalIdentityProfileProfileConfig {
    /**
     * Whether the end user is allowed to use delete functionality. The default value is `false`.
     */
    deleteIdentityEnabled?: pulumi.Input<boolean>;
    /**
     * The template name for end-user profile management.
     */
    templateName: pulumi.Input<string>;
}

export interface LocalIdentityProfileRegistrationConfig {
    /**
     * Whether CAPTCHA is enabled or not in the registration configuration. The default value is `false`.
     */
    captchaEnabled?: pulumi.Input<boolean>;
    /**
     * Reference to the associated CAPTCHA provider.
     */
    captchaProviderRef?: pulumi.Input<inputs.LocalIdentityProfileRegistrationConfigCaptchaProviderRef>;
    /**
     * Whether to create an Authentication Session when registering a local account. The default value is `true`.
     */
    createAuthnSessionAfterRegistration?: pulumi.Input<boolean>;
    /**
     * This setting indicates whether PingFederate should execute the workflow before or after account creation. The default is to run the registration workflow after account creation. Supported values are `BEFORE_ACCOUNT_CREATION` and `AFTER_ACCOUNT_CREATION`. Requires that `registration_workflow` is also set.
     */
    executeWorkflow?: pulumi.Input<string>;
    /**
     * The policy fragment to be executed as part of the registration workflow.
     */
    registrationWorkflow?: pulumi.Input<inputs.LocalIdentityProfileRegistrationConfigRegistrationWorkflow>;
    /**
     * The template name for the registration configuration.
     */
    templateName: pulumi.Input<string>;
    /**
     * Allows users to indicate whether their device is shared or private. In this mode, PingFederate Authentication Sessions will not be stored unless the user indicates the device is private. The default value is `false`.
     */
    thisIsMyDeviceEnabled?: pulumi.Input<boolean>;
    /**
     * When creating an Authentication Session after registering a local account, PingFederate will pass the Unique ID field's value as the username. If the Unique ID value is not the username, then override which field's value will be used as the username.
     */
    usernameField?: pulumi.Input<string>;
}

export interface LocalIdentityProfileRegistrationConfigCaptchaProviderRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface LocalIdentityProfileRegistrationConfigRegistrationWorkflow {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface MetadataUrlCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is `true`. Options are `LOCAL` or `HSM`.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1Fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256Fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item. Options are `VALID`, `EXPIRED`, `NOT_YET_VALID`, or `REVOKED`.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface MetadataUrlX509File {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is `true`. Options are `LOCAL` or `HSM`.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The certificate data in PEM format, formatted by PingFederate. This attribute is read-only.
     */
    formattedFileData?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of `[a-z0-9._-]`. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface NotificationPublisherConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTablesAll>[]>;
}

export interface NotificationPublisherConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface NotificationPublisherConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface NotificationPublisherConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTableRow>[]>;
}

export interface NotificationPublisherConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTableRowField>[]>;
}

export interface NotificationPublisherConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface NotificationPublisherConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTablesAllRow>[]>;
}

export interface NotificationPublisherConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTablesAllRowField>[]>;
}

export interface NotificationPublisherConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface NotificationPublisherParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface NotificationPublisherPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface NotificationPublisherSettingsDefaultNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface NotificationPublishersSettingsDefaultNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerAccessControlSettings {
    /**
     * If 'restrictClients' is true, this field defines the list of OAuth clients that are allowed to access the token manager.
     */
    allowedClients?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerAccessControlSettingsAllowedClient>[]>;
    /**
     * Determines whether access to this token manager is restricted to specific OAuth clients. If false, the 'allowedClients' field is ignored. The default value is false.
     */
    restrictClients?: pulumi.Input<boolean>;
}

export interface OauthAccessTokenManagerAccessControlSettingsAllowedClient {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerAttributeContract {
    /**
     * A list of core token attributes that are associated with the access token management plugin type. This field is read-only and is ignored on POST/PUT.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerAttributeContractCoreAttribute>[]>;
    /**
     * Default subject attribute to use for audit logging when validating the access token. Blank value means to use USER_KEY attribute value after grant lookup.
     */
    defaultSubjectAttribute?: pulumi.Input<string>;
    /**
     * A list of additional token attributes that are associated with this access token management plugin instance.
     */
    extendedAttributes: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerAttributeContractExtendedAttribute>[]>;
}

export interface OauthAccessTokenManagerAttributeContractCoreAttribute {
    /**
     * Indicates whether attribute value is always returned as an array.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerAttributeContractExtendedAttribute {
    /**
     * Indicates whether attribute value is always returned as an array.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTablesAll>[]>;
}

export interface OauthAccessTokenManagerConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTableRow>[]>;
}

export interface OauthAccessTokenManagerConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTableRowField>[]>;
}

export interface OauthAccessTokenManagerConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTablesAllRow>[]>;
}

export interface OauthAccessTokenManagerConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTablesAllRowField>[]>;
}

export interface OauthAccessTokenManagerConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerSelectionSettings {
    /**
     * The list of base resource URI's which map to this token manager. A resource URI, specified via the 'aud' parameter, can be used to select a specific token manager for an OAuth request.
     */
    resourceUris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAccessTokenManagerSessionValidationSettings {
    /**
     * Check the session revocation status when validating the access token.
     */
    checkSessionRevocationStatus?: pulumi.Input<boolean>;
    /**
     * Check for a valid authentication session when validating the access token.
     */
    checkValidAuthnSession?: pulumi.Input<boolean>;
    /**
     * Include the session identifier in the access token. Note that if any of the session validation features is enabled, the session identifier will already be included in the access tokens.
     */
    includeSessionId?: pulumi.Input<boolean>;
    /**
     * Update authentication session activity when validating the access token.
     */
    updateAuthnSessionActivity?: pulumi.Input<boolean>;
}

export interface OauthAccessTokenManagerSettingsDefaultAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceLdapAttributeSource>;
}

export interface OauthAccessTokenMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingContext {
    /**
     * Reference to the associated Access Token Mapping Context instance.
     */
    contextRef?: pulumi.Input<inputs.OauthAccessTokenMappingContextContextRef>;
    /**
     * The Access Token Mapping Context type. Options are `DEFAULT`, `PCV`, `IDP_CONNECTION`, `IDP_ADAPTER`, `AUTHENTICATION_POLICY_CONTRACT`, `CLIENT_CREDENTIALS`, `TOKEN_EXCHANGE_PROCESSOR_POLICY`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingContextContextRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthAccessTokenMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsAdminWebServicePcvRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsExclusiveScope {
    /**
     * The description of the scope that appears when the user is prompted for authorization.
     */
    description: pulumi.Input<string>;
    /**
     * True if the scope is dynamic. (Defaults to false)
     */
    dynamic?: pulumi.Input<boolean>;
    /**
     * The name of the scope.
     */
    name: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsExclusiveScopeGroup {
    /**
     * The description of the scope group.
     */
    description: pulumi.Input<string>;
    /**
     * The name of the scope group.
     */
    name: pulumi.Input<string>;
    /**
     * The set of scopes for this scope group.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAuthServerSettingsPersistentGrantContract {
    /**
     * This is a read-only list of persistent grant attributes and includes USER_KEY and USER_NAME. Changes to this field will be ignored.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.OauthAuthServerSettingsPersistentGrantContractCoreAttribute>[]>;
    /**
     * A list of additional attributes for the persistent grant contract.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.OauthAuthServerSettingsPersistentGrantContractExtendedAttribute>[]>;
}

export interface OauthAuthServerSettingsPersistentGrantContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name?: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsPersistentGrantContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsScope {
    /**
     * The description of the scope that appears when the user is prompted for authorization.
     */
    description: pulumi.Input<string>;
    /**
     * True if the scope is dynamic. (Defaults to false)
     */
    dynamic?: pulumi.Input<boolean>;
    /**
     * The name of the scope.
     */
    name: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsScopeGroup {
    /**
     * The description of the scope group.
     */
    description: pulumi.Input<string>;
    /**
     * The name of the scope group.
     */
    name: pulumi.Input<string>;
    /**
     * The set of scopes for this scope group.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSource>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthCibaServerPolicySettingsDefaultRequestPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthClientClientAuth {
    /**
     * Client TLS Certificate Issuer DN.
     */
    clientCertIssuerDn?: pulumi.Input<string>;
    /**
     * Client TLS Certificate Subject DN.
     */
    clientCertSubjectDn?: pulumi.Input<string>;
    /**
     * Enforce replay prevention on JSON Web Tokens. This field is applicable only for Private Key JWT Client and Client Secret JWT Authentication.
     */
    enforceReplayPrevention?: pulumi.Input<boolean>;
    /**
     * The list of secondary client secrets that are temporarily retained.
     */
    secondarySecrets?: pulumi.Input<pulumi.Input<inputs.OauthClientClientAuthSecondarySecret>[]>;
    /**
     * Client secret for Basic Authentication. To update the client secret, specify the plaintext value in this field. This field will not be populated for GET requests.
     */
    secret?: pulumi.Input<string>;
    /**
     * The JSON Web Signature [JWS] algorithm that must be used to sign the JSON Web Tokens. This field is applicable only for Private Key JWT and Client Secret JWT Client Authentication. All asymmetric signing algorithms are allowed for Private Key JWT if value is not present. All symmetric signing algorithms are allowed for Client Secret JWT if value is not present
     * `RS256` - RSA using SHA-256
     * `RS384` - RSA using SHA-384
     * `RS512` - RSA using SHA-512
     * `ES256` - ECDSA using P256 Curve and SHA-256
     * `ES384` - ECDSA using P384 Curve and SHA-384
     * `ES512` - ECDSA using P521 Curve and SHA-512
     * `PS256` - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256
     * `PS384` - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384
     * `PS512` - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512
     * `RSASSA-PSS` is only supported with SafeNet Luna, Thales nCipher or Java 11.
     * `HS256` - HMAC using SHA-256
     * `HS384` - HMAC using SHA-384
     * `HS512` - HMAC using SHA-512.
     */
    tokenEndpointAuthSigningAlgorithm?: pulumi.Input<string>;
    /**
     * Client authentication type. The required field for type `SECRET` is secret.	The required fields for type `CERTIFICATE` are client_cert_issuer_dn and client_cert_subject_dn. The required field for type `PRIVATE_KEY_JWT` is: either jwks or jwks_url.
     */
    type?: pulumi.Input<string>;
}

export interface OauthClientClientAuthSecondarySecret {
    /**
     * The expiry time of the secondary secret.
     */
    expiryTime: pulumi.Input<string>;
    /**
     * Secondary client secret for Basic Authentication. To update the secondary client secret, specify the plaintext value in this field. This field will not be populated for GET requests.
     */
    secret: pulumi.Input<string>;
}

export interface OauthClientDefaultAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthClientExtendedParameters {
    /**
     * A list of values
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthClientJwksSettings {
    /**
     * JSON Web Key Set (JWKS) document of the OAuth client. Either `jwks` or `jwks_url` must be provided if private key JWT client authentication or signed requests is enabled. If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures.
     */
    jwks?: pulumi.Input<string>;
    /**
     * JSON Web Key Set (JWKS) URL of the OAuth client. Either `jwks` or `jwks_url` must be provided if private key JWT client authentication or signed requests is enabled. If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures.
     */
    jwksUrl?: pulumi.Input<string>;
}

export interface OauthClientOidcPolicy {
    /**
     * The back-channel logout URI for this client. Supported in PF version `11.3` or later.
     */
    backChannelLogoutUri?: pulumi.Input<string>;
    /**
     * Determines whether this client is allowed to access the Session Revocation API. The default is `false`.
     */
    grantAccessSessionRevocationApi?: pulumi.Input<boolean>;
    /**
     * Determines whether this client is allowed to access the Session Management API. The default is `false`.
     */
    grantAccessSessionSessionManagementApi?: pulumi.Input<boolean>;
    /**
     * The JSON Web Encryption [JWE] content encryption algorithm for the ID Token.
     * `AES_128_CBC_HMAC_SHA_256` - Composite AES-CBC-128 HMAC-SHA-256
     * `AES_192_CBC_HMAC_SHA_384` - Composite AES-CBC-192 HMAC-SHA-384
     * `AES_256_CBC_HMAC_SHA_512` - Composite AES-CBC-256 HMAC-SHA-512
     * `AES_128_GCM` - AES-GCM-128
     * `AES_192_GCM` - AES-GCM-192
     * `AES_256_GCM` - AES-GCM-256
     */
    idTokenContentEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content encryption key for the ID Token.
     * `DIR` - Direct Encryption with symmetric key
     * `A128KW` - AES-128 Key Wrap
     * `A192KW` - AES-192 Key Wrap
     * `A256KW`- AES-256 Key Wrap
     * `A128GCMKW` - AES-GCM-128 key encryption
     * `A192GCMKW` - AES-GCM-192 key encryption
     * `A256GCMKW` - AES-GCM-256 key encryption
     * `ECDH_ES` - ECDH-ES
     * `ECDH_ES_A128KW` - ECDH-ES with AES-128 Key Wrap
     * `ECDH_ES_A192KW` - ECDH-ES with AES-192 Key Wrap
     * `ECDH_ES_A256KW` - ECDH-ES with AES-256 Key Wrap
     * `RSA_OAEP` - RSAES OAEP
     * `RSA_OAEP_256` - RSAES OAEP using SHA-256 and MGF1 with SHA-256
     */
    idTokenEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The JSON Web Signature [JWS] algorithm required for the ID Token.
     * `NONE` - No signing algorithm
     * `HS256` - HMAC using SHA-256
     * `HS384` - HMAC using SHA-384
     * `HS512` - HMAC using SHA-512
     * `RS256` - RSA using SHA-256
     * `RS384` - RSA using SHA-384
     * `RS512` - RSA using SHA-512
     * `ES256 `- ECDSA using P256 Curve and SHA-256
     * `ES384` - ECDSA using P384 Curve and SHA-384
     * `ES512` - ECDSA using P521 Curve and SHA-512
     * `PS256` - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256
     * `PS384` - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384
     * `PS512` - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512
     * A null value will represent the default algorithm which is RS256.
     * RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11
     */
    idTokenSigningAlgorithm?: pulumi.Input<string>;
    /**
     * The logout mode for this client. The default is 'NONE'. Supported in PF version `11.3` or later. Supported values are `NONE`, `PING_FRONT_CHANNEL`, `OIDC_FRONT_CHANNEL`, and `OIDC_BACK_CHANNEL`.
     */
    logoutMode?: pulumi.Input<string>;
    /**
     * A list of front-channel logout URIs for this client.
     */
    logoutUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determines whether the subject identifier type is pairwise. The default is `false`.
     */
    pairwiseIdentifierUserType?: pulumi.Input<boolean>;
    /**
     * Set this value to `true` if you wish to enable client application logout, and the client is PingAccess, or its logout endpoints follow the PingAccess path convention. The default is `false`.
     */
    pingAccessLogoutCapable?: pulumi.Input<boolean>;
    /**
     * The Open ID Connect policy. A null value will represent the default policy group.
     */
    policyGroup?: pulumi.Input<inputs.OauthClientOidcPolicyPolicyGroup>;
    /**
     * URIs to which the OIDC OP may redirect the resource owner's user agent after RP-initiated logout has completed. Wildcards are allowed. However, for security reasons, make the URL as restrictive as possible. Supported in PF version `12.0` or later.
     */
    postLogoutRedirectUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URI references a file with a single JSON array of Redirect URI and JWKS URL values.
     */
    sectorIdentifierUri?: pulumi.Input<string>;
}

export interface OauthClientOidcPolicyPolicyGroup {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthClientRequestPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthClientTokenExchangeProcessorPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceLdapAttributeSource>;
}

export interface OauthIdpAdapterMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingIdpAdapterRef {
    /**
     * The ID of the resource.
     */
    id?: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthIdpAdapterMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthIdpAdapterMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthIdpAdapterMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthIdpAdapterMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthIdpAdapterMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeContract {
    /**
     * A list of read-only attributes (for example, sub) that are automatically populated by PingFederate.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeContractExtendedAttribute>[]>;
}

export interface OauthOpenIdConnectPolicyAttributeContractCoreAttribute {
    /**
     * Attribute is included in the ID Token.
     */
    includeInIdToken?: pulumi.Input<boolean>;
    /**
     * Attribute is included in the User Info.
     */
    includeInUserInfo?: pulumi.Input<boolean>;
    /**
     * Indicates whether attribute value is always returned as an array.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeContractExtendedAttribute {
    /**
     * Attribute is included in the ID Token.
     */
    includeInIdToken?: pulumi.Input<boolean>;
    /**
     * Attribute is included in the User Info.
     */
    includeInUserInfo?: pulumi.Input<boolean>;
    /**
     * Indicates whether attribute value is always returned as an array.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteria>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthOpenIdConnectPolicyScopeAttributeMappings {
    /**
     * A List of values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthServerSettingsAdminWebServicePcvRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthServerSettingsExclusiveScope {
    /**
     * The description of the scope that appears when the user is prompted for authorization.
     */
    description: pulumi.Input<string>;
    /**
     * True if the scope is dynamic. (Defaults to false)
     */
    dynamic?: pulumi.Input<boolean>;
    /**
     * The name of the scope.
     */
    name: pulumi.Input<string>;
}

export interface OauthServerSettingsExclusiveScopeGroup {
    /**
     * The description of the scope group.
     */
    description: pulumi.Input<string>;
    /**
     * The name of the scope group.
     */
    name: pulumi.Input<string>;
    /**
     * The set of scopes for this scope group.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthServerSettingsPersistentGrantContract {
    /**
     * This is a read-only list of persistent grant attributes and includes USER_KEY and USER_NAME. Changes to this field will be ignored.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.OauthServerSettingsPersistentGrantContractCoreAttribute>[]>;
    /**
     * A list of additional attributes for the persistent grant contract.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.OauthServerSettingsPersistentGrantContractExtendedAttribute>[]>;
}

export interface OauthServerSettingsPersistentGrantContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name?: pulumi.Input<string>;
}

export interface OauthServerSettingsPersistentGrantContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OauthServerSettingsScope {
    /**
     * The description of the scope that appears when the user is prompted for authorization.
     */
    description: pulumi.Input<string>;
    /**
     * True if the scope is dynamic. (Defaults to false)
     */
    dynamic?: pulumi.Input<boolean>;
    /**
     * The name of the scope.
     */
    name: pulumi.Input<string>;
}

export interface OauthServerSettingsScopeGroup {
    /**
     * The description of the scope group.
     */
    description: pulumi.Input<string>;
    /**
     * The name of the scope group.
     */
    name: pulumi.Input<string>;
    /**
     * The set of scopes for this scope group.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthTokenExchangeGeneratorSettingsDefaultGeneratorGroupRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSource>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthTokenExchangeTokenGeneratorMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthTokenExchangeTokenGeneratorMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OauthTokenExchangeTokenGeneratorMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OpenIdConnectSettingsDefaultPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OpenIdConnectSettingsSessionSettings {
    /**
     * Determines whether the user's session is revoked on logout. The default is `true`.
     *
     * @deprecated Deprecated
     */
    revokeUserSessionOnLogout?: pulumi.Input<boolean>;
    /**
     * How long a session revocation is tracked and stored, in minutes. The default is `490`. Value must be between `1` and `432001`, inclusive.
     *
     * @deprecated Deprecated
     */
    sessionRevocationLifetime?: pulumi.Input<number>;
    /**
     * Determines whether user sessions are tracked for logout. The default is `false`.
     *
     * @deprecated Deprecated
     */
    trackUserSessionsForLogout?: pulumi.Input<boolean>;
}

export interface OpenidConnectPolicyAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeContract {
    /**
     * A list of read-only attributes (for example, sub) that are automatically populated by PingFederate.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.OpenidConnectPolicyAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.OpenidConnectPolicyAttributeContractExtendedAttribute>[]>;
}

export interface OpenidConnectPolicyAttributeContractCoreAttribute {
    /**
     * Attribute is included in the ID Token.
     */
    includeInIdToken?: pulumi.Input<boolean>;
    /**
     * Attribute is included in the User Info.
     */
    includeInUserInfo?: pulumi.Input<boolean>;
    /**
     * Indicates whether attribute value is always returned as an array.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeContractExtendedAttribute {
    /**
     * Attribute is included in the ID Token.
     */
    includeInIdToken?: pulumi.Input<boolean>;
    /**
     * Attribute is included in the User Info.
     */
    includeInUserInfo?: pulumi.Input<boolean>;
    /**
     * Indicates whether attribute value is always returned as an array.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMapping {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeContractFulfillment>}>;
    /**
     * A list of configured data stores to look up attributes from.
     */
    attributeSources?: pulumi.Input<pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingIssuanceCriteria>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source?: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSource>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface OpenidConnectPolicyAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OpenidConnectPolicyScopeAttributeMappings {
    /**
     * A List of values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OpenidConnectSettingsDefaultPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface OpenidConnectSettingsSessionSettings {
    /**
     * Determines whether the user's session is revoked on logout. The default is `true`.
     *
     * @deprecated Deprecated
     */
    revokeUserSessionOnLogout?: pulumi.Input<boolean>;
    /**
     * How long a session revocation is tracked and stored, in minutes. The default is `490`. Value must be between `1` and `432001`, inclusive.
     *
     * @deprecated Deprecated
     */
    sessionRevocationLifetime?: pulumi.Input<number>;
    /**
     * Determines whether user sessions are tracked for logout. The default is `false`.
     *
     * @deprecated Deprecated
     */
    trackUserSessionsForLogout?: pulumi.Input<boolean>;
}

export interface PasswordCredentialValidatorAttributeContract {
    /**
     * A list of read-only attributes that are automatically populated by the password credential validator descriptor.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that can be returned by the password credential validator. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorAttributeContractExtendedAttribute>[]>;
}

export interface PasswordCredentialValidatorAttributeContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorAttributeContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTablesAll>[]>;
}

export interface PasswordCredentialValidatorConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTableRow>[]>;
}

export interface PasswordCredentialValidatorConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTableRowField>[]>;
}

export interface PasswordCredentialValidatorConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTablesAllRow>[]>;
}

export interface PasswordCredentialValidatorConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTablesAllRowField>[]>;
}

export interface PasswordCredentialValidatorConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface RedirectValidationRedirectValidationLocalSettings {
    /**
     * Enable validation for error resource. Defaults to `false`.
     */
    enableInErrorResourceValidation?: pulumi.Input<boolean>;
    /**
     * Enable target resource validation for IdP discovery. Defaults to `false`.
     */
    enableTargetResourceValidationForIdpDiscovery?: pulumi.Input<boolean>;
    /**
     * Enable target resource validation for SLO. Defaults to `false`.
     */
    enableTargetResourceValidationForSlo?: pulumi.Input<boolean>;
    /**
     * Enable target resource validation for SSO. Defaults to `false`.
     */
    enableTargetResourceValidationForSso?: pulumi.Input<boolean>;
    /**
     * List of URIs that are designated as valid target resources.
     */
    uriAllowLists?: pulumi.Input<pulumi.Input<inputs.RedirectValidationRedirectValidationLocalSettingsUriAllowList>[]>;
    /**
     * List of URLs that are designated as valid target resources.
     */
    whiteLists?: pulumi.Input<pulumi.Input<inputs.RedirectValidationRedirectValidationLocalSettingsWhiteList>[]>;
}

export interface RedirectValidationRedirectValidationLocalSettingsUriAllowList {
    /**
     * Allow any query parameters and fragment in the resource. Defaults to `false`.
     */
    allowQueryAndFragment?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for IdP discovery validation. Defaults to `false`.
     */
    idpDiscovery?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for in error resource validation. Defaults to `false`.
     */
    inErrorResource?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for SLO redirect validation. Defaults to `false`.
     */
    targetResourceSlo?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for SSO redirect validation. Defaults to `false`.
     */
    targetResourceSso?: pulumi.Input<boolean>;
    /**
     * URI of a valid resource.
     */
    validUri: pulumi.Input<string>;
}

export interface RedirectValidationRedirectValidationLocalSettingsWhiteList {
    /**
     * Allow any query parameters and fragment in the resource. Defaults to `false`.
     */
    allowQueryAndFragment?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for IdP discovery validation. Defaults to `false`.
     */
    idpDiscovery?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for in error resource validation. Defaults to `false`.
     */
    inErrorResource?: pulumi.Input<boolean>;
    /**
     * Require HTTPS for accessing this resource. Defaults to `false`.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for SLO redirect validation. Defaults to `false`.
     */
    targetResourceSlo?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for SSO redirect validation. Defaults to `false`.
     */
    targetResourceSso?: pulumi.Input<boolean>;
    /**
     * Domain of a valid resource.
     */
    validDomain: pulumi.Input<string>;
    /**
     * Path of a valid resource.
     */
    validPath?: pulumi.Input<string>;
}

export interface RedirectValidationRedirectValidationPartnerSettings {
    /**
     * Enable wreply validation for SLO. Defaults to `false`.
     */
    enableWreplyValidationSlo?: pulumi.Input<boolean>;
}

export interface SecretManagerConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationField>[]>;
    /**
     * List of configuration fields. This attribute will include any values set by default by PingFederate.
     */
    fieldsAlls?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationFieldsAll>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationTable>[]>;
    /**
     * List of configuration tables. This attribute will include any values set by default by PingFederate.
     */
    tablesAlls?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationTablesAll>[]>;
}

export interface SecretManagerConfigurationField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface SecretManagerConfigurationFieldsAll {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface SecretManagerConfigurationTable {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationTableRow>[]>;
}

export interface SecretManagerConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationTableRowField>[]>;
}

export interface SecretManagerConfigurationTableRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface SecretManagerConfigurationTablesAll {
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationTablesAllRow>[]>;
}

export interface SecretManagerConfigurationTablesAllRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * The configuration fields in the row.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SecretManagerConfigurationTablesAllRowField>[]>;
}

export interface SecretManagerConfigurationTablesAllRowField {
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value: pulumi.Input<string>;
}

export interface SecretManagerParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface SecretManagerPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsCaptchaSettings {
    /**
     * Secret key for reCAPTCHA.
     */
    secretKey: pulumi.Input<string>;
    /**
     * Site key for reCAPTCHA.
     */
    siteKey: pulumi.Input<string>;
}

export interface ServerSettingsContactInfo {
    /**
     * Company name.
     */
    company?: pulumi.Input<string>;
    /**
     * Contact email address.
     */
    email?: pulumi.Input<string>;
    /**
     * Contact first name.
     */
    firstName?: pulumi.Input<string>;
    /**
     * Contact last name.
     */
    lastName?: pulumi.Input<string>;
    /**
     * Contact phone number.
     */
    phone?: pulumi.Input<string>;
}

export interface ServerSettingsEmailServer {
    /**
     * The IP address or hostname of your email server.
     */
    emailServer: pulumi.Input<string>;
    /**
     * Only set this flag to `true` if the email server supports UTF-8 characters in message headers. Default is `false`.
     */
    enableUtf8MessageHeaders?: pulumi.Input<boolean>;
    /**
     * User password.
     */
    password?: pulumi.Input<string>;
    /**
     * The SMTP port on your email server. Allowable values: `1` - `65535`. The default value is `25`.
     */
    port?: pulumi.Input<number>;
    /**
     * The number of times PingFederate tries to resend an email upon unsuccessful delivery. The default value is `2`.
     */
    retryAttempts?: pulumi.Input<number>;
    /**
     * The number of minutes PingFederate waits before the next retry attempt. The default value is `2`.
     */
    retryDelay?: pulumi.Input<number>;
    /**
     * The email address that appears in the 'From' header line in email messages generated by PingFederate. The address must be in valid format but need not be set up on your system.
     */
    sourceAddr: pulumi.Input<string>;
    /**
     * The secure SMTP port on your email server. This field is not active unless Use SSL is enabled. Allowable values: `1` - `65535`. The default value is `465`.
     */
    sslPort?: pulumi.Input<number>;
    /**
     * The amount of time in seconds that PingFederate will wait before it times out connecting to the SMTP server. Allowable values: `0` - `3600`. The default value is `30`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Turns on detailed error messages for the PingFederate server log to help troubleshoot any problems. Default is `false`.
     */
    useDebugging?: pulumi.Input<boolean>;
    /**
     * Requires the use of SSL/TLS on the port specified by `ssl_port`. If this option is enabled, it overrides the `use_tls` option. Default is `false`.
     */
    useSsl?: pulumi.Input<boolean>;
    /**
     * Requires the use of the STARTTLS protocol on the port specified by `port`. Default is `false`.
     */
    useTls?: pulumi.Input<boolean>;
    /**
     * Authorized email username. Required if the password is provided.
     */
    username?: pulumi.Input<string>;
    /**
     * If `use_ssl` or `use_tls` is enabled, this flag determines whether the email server hostname is verified against the server's SMTPS certificate. Default is `false`.
     */
    verifyHostname?: pulumi.Input<boolean>;
}

export interface ServerSettingsFederationInfo {
    /**
     * This property has been deprecated and is no longer used
     *
     * @deprecated Deprecated
     */
    autoConnectEntityId?: pulumi.Input<string>;
    /**
     * The fully qualified host name, port, and path (if applicable) on which the PingFederate server runs.
     */
    baseUrl: pulumi.Input<string>;
    /**
     * This ID identifies your federation server for SAML 1.x transactions. As with SAML 2.0, it is usually defined as an organization's URL or a DNS address. The SourceID used for artifact resolution is derived from this ID using SHA1.
     */
    saml1xIssuerId?: pulumi.Input<string>;
    /**
     * If supplied, the Source ID value entered here is used for SAML 1.x, instead of being derived from the SAML 1.x Issuer/Audience.
     */
    saml1xSourceId?: pulumi.Input<string>;
    /**
     * This ID defines your organization as the entity operating the server for SAML 2.0 transactions. It is usually defined as an organization's URL or a DNS address; for example: pingidentity.com. The SAML SourceID used for artifact resolution is derived from this ID using SHA1.
     */
    saml2EntityId: pulumi.Input<string>;
    /**
     * The URI of the realm associated with the PingFederate server. A realm represents a single unit of security administration or trust.
     */
    wsfedRealm?: pulumi.Input<string>;
}

export interface ServerSettingsLogSettingsLogCategoriesAll {
    /**
     * The description of the log category.
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether or not the log category is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the log category. This field must match one of the category IDs defined in log4j-categories.xml.
     */
    id?: pulumi.Input<string>;
    /**
     * The description of the log category.
     */
    name?: pulumi.Input<string>;
}

export interface ServerSettingsLogSettingsLogCategory {
    /**
     * The description of the log category. This field is read-only.
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether or not the log category is enabled. The default is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the log category. This field must match one of the category IDs defined in log4j-categories.xml.
     */
    id: pulumi.Input<string>;
    /**
     * The description of the log category. This field is read-only.
     */
    name?: pulumi.Input<string>;
}

export interface ServerSettingsLoggingLogCategoriesAll {
    /**
     * The description of the log category.
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether or not the log category is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the log category. This field must match one of the category IDs defined in log4j-categories.xml.
     */
    id?: pulumi.Input<string>;
    /**
     * The description of the log category.
     */
    name?: pulumi.Input<string>;
}

export interface ServerSettingsLoggingLogCategory {
    /**
     * The description of the log category. This field is read-only.
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether or not the log category is enabled. The default is `false`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the log category. This field must match one of the category IDs defined in log4j-categories.xml.
     */
    id: pulumi.Input<string>;
    /**
     * The description of the log category. This field is read-only.
     */
    name?: pulumi.Input<string>;
}

export interface ServerSettingsNotifications {
    /**
     * Reference to the associated notification publisher for admin user account changes.
     */
    accountChangesNotificationPublisherRef?: pulumi.Input<inputs.ServerSettingsNotificationsAccountChangesNotificationPublisherRef>;
    /**
     * Settings for bulkhead notifications
     */
    bulkheadAlertNotificationSettings?: pulumi.Input<inputs.ServerSettingsNotificationsBulkheadAlertNotificationSettings>;
    /**
     * Notification settings for certificate expiration events.
     */
    certificateExpirations?: pulumi.Input<inputs.ServerSettingsNotificationsCertificateExpirations>;
    /**
     * Indicates the number of days prior to certificate expiry date, the administrative console warning starts. The default value is `14` days. Supported in PF `12.0` or later.
     */
    expiredCertificateAdministrativeConsoleWarningDays?: pulumi.Input<number>;
    /**
     * Indicates the number of days past the certificate expiry date, the administrative console warning ends. The default value is `14` days. Supported in PF `12.0` or later.
     */
    expiringCertificateAdministrativeConsoleWarningDays?: pulumi.Input<number>;
    /**
     * Settings for license event notifications.
     */
    licenseEvents?: pulumi.Input<inputs.ServerSettingsNotificationsLicenseEvents>;
    /**
     * Settings for metadata update event notifications.
     */
    metadataNotificationSettings?: pulumi.Input<inputs.ServerSettingsNotificationsMetadataNotificationSettings>;
    /**
     * Determines whether admin users are notified through email when their account is changed. Default value is `false`.
     */
    notifyAdminUserPasswordChanges?: pulumi.Input<boolean>;
    /**
     * Notification settings for thread pool exhaustion events. Supported in PF `12.0` or later.
     */
    threadPoolExhaustionNotificationSettings?: pulumi.Input<inputs.ServerSettingsNotificationsThreadPoolExhaustionNotificationSettings>;
}

export interface ServerSettingsNotificationsAccountChangesNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsNotificationsBulkheadAlertNotificationSettings {
    /**
     * Email address where notifications are sent.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * The mode of notification. Supported values are `NOTIFICATION_PUBLISHER` and `LOGGING_ONLY`. Set to `NOTIFICATION_PUBLISHER` to enable email notifications and server log messages. Set to `LOGGING_ONLY` to enable server log messages. Defaults to `LOGGING_ONLY`.
     */
    notificationMode?: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.ServerSettingsNotificationsBulkheadAlertNotificationSettingsNotificationPublisherRef>;
    /**
     * Generate a thread dump when a bulkhead reaches its warning threshold or is full. Default is `true`.
     */
    threadDumpEnabled?: pulumi.Input<boolean>;
}

export interface ServerSettingsNotificationsBulkheadAlertNotificationSettingsNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsNotificationsCertificateExpirations {
    /**
     * The email address where notifications are sent.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * Time before certificate expiration when final warning is sent (in days). Must be between `1` and `99999` days.
     */
    finalWarningPeriod: pulumi.Input<number>;
    /**
     * Time before certificate expiration when initial warning is sent (in days).
     */
    initialWarningPeriod?: pulumi.Input<number>;
    /**
     * The mode of notification. Supported values are `NOTIFICATION_PUBLISHER` and `LOGGING_ONLY`. Set to `NOTIFICATION_PUBLISHER` to enable email notifications and server log messages. Set to `LOGGING_ONLY` to enable server log messages. Defaults to `NOTIFICATION_PUBLISHER`. Supported in PF version `11.3` or later.
     */
    notificationMode?: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.ServerSettingsNotificationsCertificateExpirationsNotificationPublisherRef>;
}

export interface ServerSettingsNotificationsCertificateExpirationsNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsNotificationsLicenseEvents {
    /**
     * The email address where notifications are sent.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.ServerSettingsNotificationsLicenseEventsNotificationPublisherRef>;
}

export interface ServerSettingsNotificationsLicenseEventsNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsNotificationsMetadataNotificationSettings {
    /**
     * The email address where notifications are sent.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.ServerSettingsNotificationsMetadataNotificationSettingsNotificationPublisherRef>;
}

export interface ServerSettingsNotificationsMetadataNotificationSettingsNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsNotificationsThreadPoolExhaustionNotificationSettings {
    /**
     * Email address where notifications are sent.
     */
    emailAddress: pulumi.Input<string>;
    /**
     * The mode of notification. Supported values are `NOTIFICATION_PUBLISHER` and `LOGGING_ONLY`. Set to `NOTIFICATION_PUBLISHER` to enable email notifications and server log messages. Set to `LOGGING_ONLY` to enable server log messages. Defaults to `LOGGING_ONLY`.
     */
    notificationMode?: pulumi.Input<string>;
    /**
     * Reference to the associated notification publisher.
     */
    notificationPublisherRef?: pulumi.Input<inputs.ServerSettingsNotificationsThreadPoolExhaustionNotificationSettingsNotificationPublisherRef>;
    /**
     * Generate a thread dump when approaching thread pool exhaustion.
     */
    threadDumpEnabled?: pulumi.Input<boolean>;
}

export interface ServerSettingsNotificationsThreadPoolExhaustionNotificationSettingsNotificationPublisherRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface ServerSettingsRolesAndProtocols {
    /**
     * Enable IdP Discovery. Default is `true`.
     */
    enableIdpDiscovery?: pulumi.Input<boolean>;
    /**
     * Identity Provider (IdP) settings.
     */
    idpRole?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsIdpRole>;
    /**
     * OAuth role settings.
     */
    oauthRole?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsOauthRole>;
    /**
     * Service Provider (SP) settings.
     */
    spRole?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsSpRole>;
}

export interface ServerSettingsRolesAndProtocolsIdpRole {
    /**
     * Enable Identity Provider Role. Default is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Enable Outbound Provisioning. Default is `true`.
     */
    enableOutboundProvisioning?: pulumi.Input<boolean>;
    /**
     * Enable SAML 1.0. Default is `true`.
     */
    enableSaml10?: pulumi.Input<boolean>;
    /**
     * Enable SAML 1.1. Default is `true`.
     */
    enableSaml11?: pulumi.Input<boolean>;
    /**
     * Enable WS Federation. Default is `true`.
     */
    enableWsFed?: pulumi.Input<boolean>;
    /**
     * Enable WS Trust. Default is `true`.
     */
    enableWsTrust?: pulumi.Input<boolean>;
    /**
     * SAML 2.0 Profile settings.
     */
    saml20Profile?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsIdpRoleSaml20Profile>;
}

export interface ServerSettingsRolesAndProtocolsIdpRoleSaml20Profile {
    /**
     * Enable SAML2.0 profile. Default is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * This property has been deprecated and is no longer used.
     *
     * @deprecated Deprecated
     */
    enableAutoConnect?: pulumi.Input<boolean>;
}

export interface ServerSettingsRolesAndProtocolsOauthRole {
    /**
     * Enable OAuth 2.0 Authorization Server (AS) Role. Default is `true`.
     */
    enableOauth?: pulumi.Input<boolean>;
    /**
     * Enable Open ID Connect. Default is `true`.
     */
    enableOpenIdConnect?: pulumi.Input<boolean>;
}

export interface ServerSettingsRolesAndProtocolsSpRole {
    /**
     * Enable Service Provider Role. Default is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Enable Inbound Provisioning. Default is `true`.
     */
    enableInboundProvisioning?: pulumi.Input<boolean>;
    /**
     * Enable OpenID Connect. Default is `true`.
     */
    enableOpenIdConnect?: pulumi.Input<boolean>;
    /**
     * Enable SAML 1.0. Default is `true`.
     */
    enableSaml10?: pulumi.Input<boolean>;
    /**
     * Enable SAML 1.1. Default is `true`.
     */
    enableSaml11?: pulumi.Input<boolean>;
    /**
     * Enable WS Federation. Default is `true`.
     */
    enableWsFed?: pulumi.Input<boolean>;
    /**
     * Enable WS Trust. Default is `true`.
     */
    enableWsTrust?: pulumi.Input<boolean>;
    /**
     * SAML 2.0 Profile settings.
     */
    saml20Profile?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsSpRoleSaml20Profile>;
}

export interface ServerSettingsRolesAndProtocolsSpRoleSaml20Profile {
    /**
     * Enable SAML2.0 profile. Default is `true`.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * This property has been deprecated and no longer used. Default is `true`.
     */
    enableAutoConnect?: pulumi.Input<boolean>;
    /**
     * Enable Attribute Requester Mapping for X.509 Attribute Sharing Profile (XASP). Default is `true`.
     */
    enableXasp?: pulumi.Input<boolean>;
}

export interface ServerSettingsSystemKeysCurrent {
    /**
     * Creation time of the key.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The system key encrypted.
     */
    encryptedKeyData?: pulumi.Input<string>;
    /**
     * The clear text system key base 64 encoded. The system key must be 32 bytes before base 64 encoding
     */
    keyData?: pulumi.Input<string>;
}

export interface ServerSettingsSystemKeysPending {
    /**
     * Creation time of the key.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The system key encrypted.
     */
    encryptedKeyData?: pulumi.Input<string>;
    /**
     * The clear text system key base 64 encoded. The system key must be 32 bytes before base 64 encoding
     */
    keyData?: pulumi.Input<string>;
}

export interface ServerSettingsSystemKeysPrevious {
    /**
     * Creation time of the key.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The system key encrypted.
     */
    encryptedKeyData?: pulumi.Input<string>;
    /**
     * The clear text system key base 64 encoded. The system key must be 32 bytes before base 64 encoding
     */
    keyData?: pulumi.Input<string>;
}

export interface SessionAuthenticationPolicyAuthenticationSource {
    /**
     * A reference to the authentication source.
     */
    sourceRef: pulumi.Input<inputs.SessionAuthenticationPolicyAuthenticationSourceSourceRef>;
    /**
     * The type of this authentication source. Options are `IDP_ADAPTER`, `IDP_CONNECTION`.
     */
    type: pulumi.Input<string>;
}

export interface SessionAuthenticationPolicyAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSource>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpTargetUrlMappingsItem {
    /**
     * The adapter or connection instance mapped for this URL.
     */
    ref: pulumi.Input<inputs.SpTargetUrlMappingsItemRef>;
    /**
     * The URL mapping type. Options are `SP_ADAPTER` or `SP_CONNECTION`.
     */
    type: pulumi.Input<string>;
    /**
     * The URL that will be compared against the target URL. Use a wildcard (*) to match multiple URLs to the same adapter or connection instance.
     */
    url: pulumi.Input<string>;
}

export interface SpTargetUrlMappingsItemRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSource {
    /**
     * The configured settings used to look up attributes from a custom data store.
     */
    customAttributeSource?: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSource>;
    /**
     * The configured settings used to look up attributes from a JDBC data store.
     */
    jdbcAttributeSource?: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSource>;
    /**
     * The configured settings used to look up attributes from a LDAP data store.
     */
    ldapAttributeSource?: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSource>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSource {
    /**
     * Defines how an attribute in an attribute contract should be populated.
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed. Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
    /**
     * The data store type of this attribute source.
     */
    type: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingAttributeSourceLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue. Expressions must be enabled in PingFederate to use expression criteria.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface TokenProcessorToTokenGeneratorMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value. Options are `EQUALS`, `EQUALS_CASE_INSENSITIVE`, `EQUALS_DN`, `NOT_EQUAL`, `NOT_EQUAL_CASE_INSENSITIVE`, `NOT_EQUAL_DN`, `MULTIVALUE_CONTAINS`, `MULTIVALUE_CONTAINS_CASE_INSENSITIVE`, `MULTIVALUE_CONTAINS_DN`, `MULTIVALUE_DOES_NOT_CONTAIN`, `MULTIVALUE_DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `MULTIVALUE_DOES_NOT_CONTAIN_DN`.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.TokenProcessorToTokenGeneratorMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key. Options are `TOKEN_EXCHANGE_PROCESSOR_POLICY`, `ACCOUNT_LINK`, `ADAPTER`, `ASSERTION`, `CONTEXT`, `CUSTOM_DATA_STORE`, `EXPRESSION`, `JDBC_DATA_STORE`, `LDAP_DATA_STORE`, `PING_ONE_LDAP_GATEWAY_DATA_STORE`, `MAPPED_ATTRIBUTES`, `NO_MAPPING`, `TEXT`, `TOKEN`, `REQUEST`, `OAUTH_PERSISTENT_GRANT`, `SUBJECT_TOKEN`, `ACTOR_TOKEN`, `PASSWORD_CREDENTIAL_VALIDATOR`, `IDP_CONNECTION`, `AUTHENTICATION_POLICY_CONTRACT`, `CLAIMS`, `LOCAL_IDENTITY_PROFILE`, `EXTENDED_CLIENT_METADATA`, `EXTENDED_PROPERTIES`, `TRACKED_HTTP_PARAMS`, `FRAGMENT`, `INPUTS`, `ATTRIBUTE_QUERY`, `IDENTITY_STORE_USER`, `IDENTITY_STORE_GROUP`, `SCIM_USER`, `SCIM_GROUP`.
     */
    type: pulumi.Input<string>;
}

export interface TokenProcessorToTokenGeneratorMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}
