// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AuthenticationApiSettingsDefaultApplicationRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTree {
    /**
     * Authentication API Application Id to be used in this policy branch. If the value is not specified, no Authentication API Application will be used.
     */
    authenticationApiApplicationRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeAuthenticationApiApplicationRef>;
    /**
     * A description for the authentication policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether or not this authentication policy tree is enabled. Default is true.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The authentication policy name. Name is unique.
     */
    name?: pulumi.Input<string>;
    /**
     * A node inside the authentication policy tree.
     */
    rootNode?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNode>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeAuthenticationApiApplicationRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNode {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPoliciesAuthnSelectionTreeRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
}

export interface AuthenticationPoliciesDefaultAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPoliciesDefaultAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPoliciesDefaultAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentInputs {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentOutputs {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNode {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
    /**
     * The result action.
     */
    action: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction>;
    /**
     * The nodes inside the authentication policy tree node.
     */
    childrens?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenAction {
    /**
     * Contract fulfillment with the authentication policy contract's default values, and additional attributes retrieved from local data stores.
     */
    attributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping>;
    /**
     * The authentication policy rules.
     */
    attributeRules?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules>;
    authenticationPolicyContractRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef>;
    authenticationSelectorRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef>;
    /**
     * The associated authentication source.
     */
    authenticationSource?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource>;
    /**
     * The result context.
     */
    context?: pulumi.Input<string>;
    /**
     * Reference to the associated authentication fragment.
     */
    fragment?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment>;
    /**
     * The fragment mapping for attributes to be passed into the authentication fragment.
     */
    fragmentMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping>;
    /**
     * Inbound mappings into the local identity profile fields.
     */
    inboundMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping>;
    /**
     * The input user ID mapping.
     */
    inputUserIdMappings?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping>[]>;
    /**
     * Reference to the associated local identity profile.
     */
    localIdentityRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef>;
    /**
     * Authentication policy contract mappings associated with this local Identity profile.
     */
    outboundAttributeMapping?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping>;
    /**
     * The authentication selection type.
     */
    type: pulumi.Input<string>;
    /**
     * Indicates whether the user ID obtained by the user ID mapping is authenticated.
     */
    userIdAuthenticated?: pulumi.Input<boolean>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRules {
    /**
     * When all the rules fail, you may choose to default to the general success action or fail. Default to success.
     */
    fallbackToSuccess?: pulumi.Input<boolean>;
    /**
     * Authentication policy rules using attributes from the previous authentication source. Each rule is evaluated to determine the next action in the policy.
     */
    items?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAttributeRulesItem {
    /**
     * The name of the attribute to use in this attribute rule.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the attribute's expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The expected value of this attribute rule.
     */
    expectedValue: pulumi.Input<string>;
    /**
     * The result of this attribute rule.
     */
    result: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationPolicyContractRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSelectorRef {
    id: pulumi.Input<string>;
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSource {
    sourceRef?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef>;
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionAuthenticationSourceSourceRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragment {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionFragmentMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInboundMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMapping {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource>;
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionInputUserIdMappingSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionLocalIdentityRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenActionOutboundAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationPolicyFragmentRootNodeChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
}

export interface AuthenticationSelectorAttributeContract {
    /**
     * A list of additional attributes that can be returned by the Authentication Selector. The extended attributes are only used if the Authentication Selector supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AuthenticationSelectorConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTable>[]>;
}

export interface AuthenticationSelectorConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTableRow>[]>;
}

export interface AuthenticationSelectorConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.AuthenticationSelectorConfigurationTableRowSensitiveField>[]>;
}

export interface AuthenticationSelectorConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationSelectorConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface AuthenticationSelectorPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface AuthenticationSessionPolicyAuthenticationSource {
    /**
     * A reference to the authentication source.
     */
    sourceRef: pulumi.Input<string>;
    /**
     * The type of this authentication source.
     */
    type: pulumi.Input<string>;
}

export interface CertificatesRevocationSettingsCrlSetting {
    /**
     * Next retry on next update expiration in minutes. This value defaults to `60`.
     */
    nextRetryMinsWhenNextUpdateInPast?: pulumi.Input<number>;
    /**
     * Next retry on resolution failure in minutes. This value defaults to `1440`.
     */
    nextRetryMinsWhenResolveFailed?: pulumi.Input<number>;
    /**
     * Treat non retrievable CRL as revoked. This setting defaults to disabled.
     */
    treatNonRetrievableCrlAsRevoked?: pulumi.Input<boolean>;
    /**
     * Verify CRL signature. This setting defaults to enabled.
     */
    verifyCrlSignature?: pulumi.Input<boolean>;
}

export interface CertificatesRevocationSettingsOcspSetting {
    /**
     * Action on responder unavailable. This value defaults to `CONTINUE`.
     */
    actionOnResponderUnavailable?: pulumi.Input<string>;
    /**
     * Action on status unknown. This value defaults to `FAIL`.
     */
    actionOnStatusUnknown?: pulumi.Input<string>;
    /**
     * Action on unsuccessful response. This value defaults to `FAIL`.
     */
    actionOnUnsuccessfulResponse?: pulumi.Input<string>;
    /**
     * Current update grace period in minutes. This value defaults to `5`.
     */
    currentUpdateGracePeriod?: pulumi.Input<number>;
    /**
     * Next update grace period in minutes. This value defaults to `5`.
     */
    nextUpdateGracePeriod?: pulumi.Input<number>;
    /**
     * Do not allow responder to use cached responses. This setting defaults to disabled.
     */
    requesterAddNonce?: pulumi.Input<boolean>;
    /**
     * Resource link to OCSP responder signature verification certificate. A previously selected certificate will be deselected if this attribute is not defined.
     */
    responderCertReference?: pulumi.Input<inputs.CertificatesRevocationSettingsOcspSettingResponderCertReference>;
    /**
     * Responder connection timeout in seconds. This value defaults to `5`.
     */
    responderTimeout?: pulumi.Input<number>;
    /**
     * Responder URL address. This field is required if OCSP revocation is enabled.
     */
    responderUrl?: pulumi.Input<string>;
    /**
     * Response cache period in hours. This value defaults to `48`.
     */
    responseCachePeriod?: pulumi.Input<number>;
}

export interface CertificatesRevocationSettingsOcspSettingResponderCertReference {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface CertificatesRevocationSettingsProxySetting {
    /**
     * Host name.
     */
    host?: pulumi.Input<string>;
    /**
     * Port number.
     */
    port?: pulumi.Input<number>;
}

export interface CustomDataStoreConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CustomDataStoreConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.CustomDataStoreConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.CustomDataStoreConfigurationTable>[]>;
}

export interface CustomDataStoreConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface CustomDataStoreConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface CustomDataStoreConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.CustomDataStoreConfigurationTableRow>[]>;
}

export interface CustomDataStoreConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.CustomDataStoreConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.CustomDataStoreConfigurationTableRowSensitiveField>[]>;
}

export interface CustomDataStoreConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface CustomDataStoreConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface CustomDataStoreParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface CustomDataStorePluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface ExtendedPropertiesProperty {
    /**
     * The property description.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the property should allow multiple values.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The property name.
     */
    name: pulumi.Input<string>;
}

export interface IdpAdapterAttributeContract {
    /**
     * A list of IdP adapter attributes that correspond to the attributes exposed by the IdP adapter type.
     */
    coreAttributes: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that can be returned by the IdP adapter. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeContractExtendedAttribute>[]>;
    /**
     * Whether this attribute contract is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * Whether or not all OGNL expressions used to fulfill an outgoing assertion contract should be masked in the logs. Defaults to false.
     */
    maskOgnlValues?: pulumi.Input<boolean>;
}

export interface IdpAdapterAttributeContractCoreAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to false.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to false.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpAdapterAttributeContractExtendedAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to false.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to false.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpAdapterAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of configured custom data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingCustomAttributeSource>[]>;
    /**
     * Whether this attribute mapping is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteria>;
    /**
     * A list of configured jdbc data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of configured ldap data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingLdapAttributeSource>[]>;
}

export interface IdpAdapterAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpAdapterAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpAdapterAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpAdapterAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpAdapterAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpAdapterAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpAdapterAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpAdapterConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTable>[]>;
}

export interface IdpAdapterConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTableRow>[]>;
}

export interface IdpAdapterConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.IdpAdapterConfigurationTableRowSensitiveField>[]>;
}

export interface IdpAdapterConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpAdapterParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpAdapterPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionAdditionalAllowedEntitiesConfiguration {
    /**
     * Set to true to configure additional entities or issuers to be accepted during entity or issuer validation.
     */
    additionalAllowedEntities?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAdditionalAllowedEntitiesConfigurationAdditionalAllowedEntity>[]>;
    /**
     * An array of additional allowed entities or issuers to be accepted during entity or issuer validation.
     */
    allowAdditionalEntities?: pulumi.Input<boolean>;
    /**
     * Set to true to accept any entity or issuer during entity or issuer validation. (Not Recommended)
     */
    allowAllEntities?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionAdditionalAllowedEntitiesConfigurationAdditionalAllowedEntity {
    /**
     * Entity description.
     */
    entityDescription?: pulumi.Input<string>;
    /**
     * Unique entity identifier.
     */
    entityId?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQuery {
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeContractFulfillment>[]>;
    /**
     * The list of attributes that may be returned to the SP in the response to an attribute request.
     */
    attributes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryLdapAttributeSource>[]>;
    /**
     * The attribute query profile's security policy.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryPolicy>[]>;
}

export interface IdpSpConnectionAttributeQueryAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionAttributeQueryCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionAttributeQueryJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionAttributeQueryLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionAttributeQueryLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionAttributeQueryLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionAttributeQueryPolicy {
    /**
     * Encrypt the assertion.
     */
    encryptAssertion?: pulumi.Input<boolean>;
    /**
     * Require an encrypted name identifier.
     */
    requireEncryptedNameId?: pulumi.Input<boolean>;
    /**
     * Require signed attribute query.
     */
    requireSignedAttributeQuery?: pulumi.Input<boolean>;
    /**
     * Sign the assertion.
     */
    signAssertion?: pulumi.Input<boolean>;
    /**
     * Sign the response.
     */
    signResponse?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionContactInfo {
    /**
     * Company name.
     */
    company?: pulumi.Input<string>;
    /**
     * Contact email address.
     */
    email?: pulumi.Input<string>;
    /**
     * Contact first name.
     */
    firstName?: pulumi.Input<string>;
    /**
     * Contact last name.
     */
    lastName?: pulumi.Input<string>;
    /**
     * Contact phone number.
     */
    phone?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredential {
    /**
     * The algorithm used to encrypt assertions sent to this partner. AES_128, AES_256, AES_128_GCM, AES_192_GCM, AES_256_GCM and Triple_DES are also supported. Default is AES_128
     */
    blockEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The certificates used for signature verification and XML encryption.
     */
    certs?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialCert>[]>;
    /**
     * The ID of the primary key pair used to decrypt message content received from this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate Administrative Console.
     */
    decryptionKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialDecryptionKeyPairRef>;
    /**
     * The SOAP authentication method(s) to use when you receive a message using SOAP back channel.
     */
    inboundBackChannelAuths?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialInboundBackChannelAuth>[]>;
    /**
     * The algorithm used to transport keys to this partner. RSA_OAEP and RSA_v15 are supported. Default is RSA_OAEP
     */
    keyTransportAlgorithm?: pulumi.Input<string>;
    /**
     * The SOAP authentication method(s) to use when you send a message using SOAP back channel.
     */
    outboundBackChannelAuths?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialOutboundBackChannelAuth>[]>;
    /**
     * The ID of the secondary key pair used to decrypt message content received from this partner.
     */
    secondaryDecryptionKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialSecondaryDecryptionKeyPairRef>;
    /**
     * Settings related to the manner in which messages sent to the partner are digitally signed. Required for SP Connections.
     */
    signingSettings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialSigningSetting>[]>;
    /**
     * If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field.
     */
    verificationIssuerDn?: pulumi.Input<string>;
    /**
     * If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.
     */
    verificationSubjectDn?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialCert {
    /**
     * Indicates whether this is an active signature verification certificate.
     */
    activeVerificationCert?: pulumi.Input<boolean>;
    /**
     * Certificate details. This property is read-only and is always ignored on a POST or PUT.
     */
    certViews?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialCertCertView>[]>;
    /**
     * Indicates whether to use this cert to encrypt outgoing assertions. Only one certificate in the collection can have this flag set.
     */
    encryptionCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the primary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    primaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the secondary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    secondaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * The certificate data. This property must always be supplied on a POST or PUT.
     */
    x509Files: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialCertX509File>[]>;
}

export interface IdpSpConnectionCredentialCertCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1Fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256Fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface IdpSpConnectionCredentialCertX509File {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialDecryptionKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialInboundBackChannelAuth {
    /**
     * The certificate used for signature verification and XML encryption.
     */
    certs?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialInboundBackChannelAuthCert>[]>;
    /**
     * If incoming or outgoing messages must be signed.
     */
    digitalSignature?: pulumi.Input<boolean>;
    /**
     * The credentials to use when you authenticate with the SOAP endpoint.
     */
    httpBasicCredentials?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialInboundBackChannelAuthHttpBasicCredential>[]>;
    /**
     * Incoming HTTP transmissions must use a secure channel.
     */
    requireSsl?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field.
     */
    verificationIssuerDn?: pulumi.Input<string>;
    /**
     * If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.
     */
    verificationSubjectDn?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialInboundBackChannelAuthCert {
    /**
     * Indicates whether this is an active signature verification certificate.
     */
    activeVerificationCert?: pulumi.Input<boolean>;
    /**
     * Certificate details. This property is read-only and is always ignored on a POST or PUT.
     */
    certViews?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialInboundBackChannelAuthCertCertView>[]>;
    /**
     * Indicates whether to use this cert to encrypt outgoing assertions. Only one certificate in the collection can have this flag set.
     */
    encryptionCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the primary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    primaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the secondary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    secondaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * The certificate data. This property must always be supplied on a POST or PUT.
     */
    x509Files: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialInboundBackChannelAuthCertX509File>[]>;
}

export interface IdpSpConnectionCredentialInboundBackChannelAuthCertCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1Fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256Fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface IdpSpConnectionCredentialInboundBackChannelAuthCertX509File {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialInboundBackChannelAuthHttpBasicCredential {
    /**
     * For GET requests, this field contains the encrypted password, if one exists.  For POST and PUT requests, if you wish to reuse the existing password, this field should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * User password.  To update the password, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    password?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialOutboundBackChannelAuth {
    digitalSignature?: pulumi.Input<boolean>;
    httpBasicCredentials?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionCredentialOutboundBackChannelAuthHttpBasicCredential>[]>;
    /**
     * The ID of the key pair used to authenticate with your partner's SOAP endpoint. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'SSL Server Certificates' in the PingFederate Administrative Console.
     */
    sslAuthKeyPairRef?: pulumi.Input<inputs.IdpSpConnectionCredentialOutboundBackChannelAuthSslAuthKeyPairRef>;
    type?: pulumi.Input<string>;
    validatePartnerCert?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionCredentialOutboundBackChannelAuthHttpBasicCredential {
    /**
     * For GET requests, this field contains the encrypted password, if one exists.  For POST and PUT requests, if you wish to reuse the existing password, this field should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * User password.  To update the password, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    password?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialOutboundBackChannelAuthSslAuthKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialSecondaryDecryptionKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialSigningSetting {
    /**
     * The algorithm used to sign messages sent to this partner. The default is SHA1withDSA for DSA certs, SHA256withRSA for RSA certs, and SHA256withECDSA for EC certs. For RSA certs, SHA1withRSA, SHA384withRSA, and SHA512withRSA are also supported. For EC certs, SHA384withECDSA and SHA512withECDSA are also supported. If the connection is WS-Federation with JWT token type, then the possible values are RSA SHA256, RSA SHA384, RSA SHA512, ECDSA SHA256, ECDSA SHA384, ECDSA SHA512
     */
    algorithm?: pulumi.Input<string>;
    /**
     * The list of IDs of alternative key pairs used to sign messages sent to this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate admin console. Requires PF 11.1+
     */
    alternativeSigningKeyPairRefs?: pulumi.Input<inputs.IdpSpConnectionCredentialSigningSettingAlternativeSigningKeyPairRefs>;
    /**
     * Determines whether the signing certificate is included in the signature <KeyInfo> element.
     */
    includeCertInSignature?: pulumi.Input<boolean>;
    /**
     * Determines whether the <KeyValue> element with the raw public key is included in the signature <KeyInfo> element.
     */
    includeRawKeyInSignature?: pulumi.Input<boolean>;
    /**
     * Settings related to the manner in which messages sent to the partner are digitally signed. Required for SP Connections.
     */
    signingKeyPairRef: pulumi.Input<inputs.IdpSpConnectionCredentialSigningSettingSigningKeyPairRef>;
}

export interface IdpSpConnectionCredentialSigningSettingAlternativeSigningKeyPairRefs {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionCredentialSigningSettingSigningKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionExtendedProperty {
    /**
     * The extended property name.
     */
    keyName: pulumi.Input<string>;
    /**
     * A List of parameter values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionMetadataReloadSetting {
    enableAutoMetadataUpdate?: pulumi.Input<boolean>;
    metadataUrlRef: pulumi.Input<inputs.IdpSpConnectionMetadataReloadSettingMetadataUrlRef>;
}

export interface IdpSpConnectionMetadataReloadSettingMetadataUrlRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvision {
    channels: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannel>[]>;
    customSchemas?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionCustomSchema>[]>;
    sensitiveTargetSettings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionSensitiveTargetSetting>[]>;
    targetSettings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionTargetSetting>[]>;
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannel {
    active: pulumi.Input<boolean>;
    attributeMappings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelAttributeMapping>[]>;
    channelSources: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSource>[]>;
    maxThreads: pulumi.Input<number>;
    name: pulumi.Input<string>;
    timeout: pulumi.Input<number>;
}

export interface IdpSpConnectionOutboundProvisionChannelAttributeMapping {
    fieldName: pulumi.Input<string>;
    saasFieldInfos: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelAttributeMappingSaasFieldInfo>[]>;
}

export interface IdpSpConnectionOutboundProvisionChannelAttributeMappingSaasFieldInfo {
    attributeNames?: pulumi.Input<pulumi.Input<string>[]>;
    characterCase?: pulumi.Input<string>;
    createOnly?: pulumi.Input<boolean>;
    defaultValue?: pulumi.Input<string>;
    expression?: pulumi.Input<string>;
    masked?: pulumi.Input<boolean>;
    parser?: pulumi.Input<string>;
    trim?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSource {
    accountManagementSettings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceAccountManagementSetting>[]>;
    baseDn: pulumi.Input<string>;
    changeDetectionSettings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceChangeDetectionSetting>[]>;
    dataSource: pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceDataSource>;
    groupMembershipDetections: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceGroupMembershipDetection>[]>;
    groupSourceLocations?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceGroupSourceLocation>[]>;
    guidAttributeName: pulumi.Input<string>;
    guidBinary: pulumi.Input<boolean>;
    userSourceLocations: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionChannelChannelSourceUserSourceLocation>[]>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceAccountManagementSetting {
    accountStatusAlgorithm: pulumi.Input<string>;
    accountStatusAttributeName: pulumi.Input<string>;
    defaultStatus?: pulumi.Input<boolean>;
    flagComparisonStatus?: pulumi.Input<boolean>;
    flagComparisonValue?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceChangeDetectionSetting {
    changedUsersAlgorithm: pulumi.Input<string>;
    groupObjectClass: pulumi.Input<string>;
    timeStampAttributeName: pulumi.Input<string>;
    userObjectClass: pulumi.Input<string>;
    usnAttributeName?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceDataSource {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceGroupMembershipDetection {
    groupMemberAttributeName: pulumi.Input<string>;
    memberOfGroupAttributeName?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceGroupSourceLocation {
    filter?: pulumi.Input<string>;
    groupDn?: pulumi.Input<string>;
    nestedSearch?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionChannelChannelSourceUserSourceLocation {
    filter?: pulumi.Input<string>;
    groupDn?: pulumi.Input<string>;
    nestedSearch?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionOutboundProvisionCustomSchema {
    attributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionOutboundProvisionCustomSchemaAttribute>[]>;
    namespace?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionCustomSchemaAttribute {
    multiValued?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    subAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionOutboundProvisionSensitiveTargetSetting {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionOutboundProvisionTargetSetting {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSso {
    /**
     * A list of adapters that map to outgoing assertions.
     */
    adapterMappings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMapping>[]>;
    /**
     * The settings for an artifact binding.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoArtifact>[]>;
    /**
     * The timeframe of validity before and after the issuance of the assertion.
     */
    assertionLifetimes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAssertionLifetime>[]>;
    /**
     * A set of user attributes that the IdP sends in the SAML assertion.
     */
    attributeContracts?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAttributeContract>[]>;
    /**
     * A list of authentication policy contracts that map to outgoing assertions.
     */
    authenticationPolicyContractAssertionMappings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMapping>[]>;
    /**
     * Default Target URL for SAML1.x connections. For SP connections, this default URL represents the destination on the SP where the user will be directed. For IdP connections, entering a URL in the Default Target URL field overrides the SP Default URL SSO setting.
     */
    defaultTargetUrl?: pulumi.Input<string>;
    /**
     * The profiles that are enabled for browser-based SSO. SAML 2.0 supports all profiles whereas SAML 1.x IdP connections support both IdP and SP (non-standard) initiated SSO. This is required for SAMLx.x Connections.
     */
    enabledProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The SAML 2.0 encryption policy for browser-based SSO. Required for SAML 2.0 connections.
     */
    encryptionPolicies?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoEncryptionPolicy>[]>;
    /**
     * The SAML bindings that are enabled for browser-based SSO. This is required for SAML 2.0 connections when the enabled profiles contain the SP-initiated SSO profile or either SLO profile. For SAML 1.x based connections, it is not used for SP Connections and it is optional for IdP Connections.
     */
    incomingBindings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The message customizations for browser-based SSO. Depending on server settings, connection type, and protocol this may or may not be supported.
     */
    messageCustomizations?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoMessageCustomization>[]>;
    /**
     * The browser-based SSO protocol to use.
     */
    protocol: pulumi.Input<string>;
    /**
     * Require AuthN requests to be signed when received via the POST or Redirect bindings.
     */
    requireSignedAuthnRequests?: pulumi.Input<boolean>;
    /**
     * Always sign the SAML Assertion.
     */
    signAssertions?: pulumi.Input<boolean>;
    /**
     * Sign SAML Response as required by the associated binding and encryption policy. Applicable to SAML2.0 only and is defaulted to true. It can be set to false only on SAML2.0 connections when signAssertions is set to true.
     */
    signResponseAsRequired?: pulumi.Input<boolean>;
    /**
     * A list of possible endpoints to send SLO requests and responses.
     */
    sloServiceEndpoints?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoSloServiceEndpoint>[]>;
    /**
     * Process in which users authenticated by the IdP are associated with user accounts local to the SP.
     */
    spSamlIdentityMapping?: pulumi.Input<string>;
    /**
     * Process in which users authenticated by the IdP are associated with user accounts local to the SP for WS-Federation connection types.
     */
    spWsFedIdentityMapping?: pulumi.Input<string>;
    /**
     * A list of possible endpoints to send assertions to.
     */
    ssoServiceEndpoints: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoSsoServiceEndpoint>[]>;
    /**
     * For WS-Federation connections, a whitelist of additional allowed domains and paths used to validate wreply for SLO, if enabled.
     */
    urlWhitelistEntries?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoUrlWhitelistEntry>[]>;
    /**
     * The WS-Federation Token Type to use.
     */
    wsFedTokenType?: pulumi.Input<string>;
    /**
     * The WS-Trust version for a WS-Federation connection. The default version is WSTRUST12.
     */
    wsTrustVersion?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMapping {
    /**
     * If set to true, SSO transaction will be aborted as a fail-safe when the data-store's attribute mappings fail to complete the attribute contract. Otherwise, the attribute contract with default values is used. By default, this value is false.
     */
    abortSsoTransactionAsFailSafe?: pulumi.Input<boolean>;
    /**
     * Connection specific configuration overrides for the mapped adapter instance.
     */
    adapterOverrideSettings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSetting>[]>;
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillment>[]>;
    /**
     * A list of configured custom data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSource>[]>;
    /**
     * Reference to the associated IdP adapter.
     * Note: This is ignored if adapter overrides for this mapping exists. In this case, the override's parent adapter reference is used.
     */
    idpAdapterRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIdpAdapterRef>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteria>;
    /**
     * A list of configured jdbc data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSource>[]>;
    /**
     * A list of configured ldap data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSource>[]>;
    /**
     * Restricts this mapping to specific virtual entity IDs.
     */
    restrictVirtualEntityIds?: pulumi.Input<boolean>;
    /**
     * The list of virtual server IDs that this mapping is restricted to.
     */
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSetting {
    /**
     * The list of attributes that the IdP adapter provides.
     */
    attributeContracts?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContract>[]>;
    /**
     * The attributes mapping from attribute sources to attribute targets.
     */
    attributeMappings?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMapping>[]>;
    /**
     * The fixed value that indicates how the user was authenticated.
     */
    authnCtxClassRef?: pulumi.Input<string>;
    /**
     * Plugin instance configuration.
     */
    configuration: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfiguration>;
    /**
     * The ID of the plugin instance. The ID cannot be modified once the instance is created.<br>Note: Ignored when specifying a connection's adapter override.
     */
    id: pulumi.Input<string>;
    /**
     * The plugin instance name. The name cannot be modified once the instance is created.<br>Note: Ignored when specifying a connection's adapter override.
     */
    name: pulumi.Input<string>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is created.
     * Note: Ignored when specifying a connection's adapter override.
     */
    pluginDescriptorRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingPluginDescriptorRef>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContract {
    /**
     * A list of IdP adapter attributes that correspond to the attributes exposed by the IdP adapter type.
     */
    coreAttributes: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that can be returned by the IdP adapter. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContractExtendedAttribute>[]>;
    /**
     * Whether this attribute contract is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * Whether or not all OGNL expressions used to fulfill an outgoing assertion contract should be masked in the logs. Defaults to false.
     */
    maskOgnlValues?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContractCoreAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to false.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to false.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContractExtendedAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to false.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies whether this attribute is used to construct a pseudonym for the SP. Defaults to false.
     */
    pseudonym?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMapping {
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingAttributeContractFulfillment>[]>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSource>[]>;
    inherited?: pulumi.Input<boolean>;
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSource>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTable>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRow>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowSensitiveField>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAdapterOverrideSettingPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIdpAdapterRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAdapterMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoArtifact {
    lifetime: pulumi.Input<number>;
    resolverLocations: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoArtifactResolverLocation>[]>;
    sourceId?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoArtifactResolverLocation {
    index: pulumi.Input<number>;
    url: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAssertionLifetime {
    minutesAfter: pulumi.Input<number>;
    minutesBefore: pulumi.Input<number>;
}

export interface IdpSpConnectionSpBrowserSsoAttributeContract {
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAttributeContractCoreAttribute>[]>;
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAttributeContractExtendedAttribute>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAttributeContractCoreAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The SAML Name Format for the attribute.
     */
    nameFormat: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAttributeContractExtendedAttribute {
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * The SAML Name Format for the attribute.
     */
    nameFormat: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMapping {
    abortSsoTransactionAsFailSafe?: pulumi.Input<boolean>;
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillment>[]>;
    authenticationPolicyContractRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAuthenticationPolicyContractRef>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSource>[]>;
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSource>[]>;
    restrictVirtualEntityIds?: pulumi.Input<boolean>;
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoAuthenticationPolicyContractAssertionMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoEncryptionPolicy {
    encryptAssertion?: pulumi.Input<boolean>;
    encryptSloSubjectNameId?: pulumi.Input<boolean>;
    encryptedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    sloSubjectNameIdEncrypted?: pulumi.Input<boolean>;
}

export interface IdpSpConnectionSpBrowserSsoMessageCustomization {
    contextName?: pulumi.Input<string>;
    messageExpression?: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoSloServiceEndpoint {
    binding: pulumi.Input<string>;
    responseUrl?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoSsoServiceEndpoint {
    /**
     * The binding of this endpoint, if applicable - usually only required for SAML 2.0 endpoints.  Supported bindings are Artifact and POST.
     */
    binding: pulumi.Input<string>;
    /**
     * The priority of the endpoint.
     */
    index: pulumi.Input<number>;
    /**
     * Whether or not this endpoint is the default endpoint. Defaults to false.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * The absolute or relative URL of the endpoint. A relative URL can be specified if a base URL for the connection has been defined.
     */
    url: pulumi.Input<string>;
}

export interface IdpSpConnectionSpBrowserSsoUrlWhitelistEntry {
    allowQueryAndFragment?: pulumi.Input<boolean>;
    requireHttps?: pulumi.Input<boolean>;
    validDomain?: pulumi.Input<string>;
    validPath?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrust {
    abortIfNotFulfilledFromRequest?: pulumi.Input<boolean>;
    attributeContracts?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustAttributeContract>[]>;
    defaultTokenType?: pulumi.Input<string>;
    encryptSaml2Assertion?: pulumi.Input<boolean>;
    generateKey?: pulumi.Input<boolean>;
    messageCustomizations?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustMessageCustomization>[]>;
    minutesAfter?: pulumi.Input<number>;
    minutesBefore?: pulumi.Input<number>;
    oAuthAssertionProfiles?: pulumi.Input<boolean>;
    partnerServiceIds: pulumi.Input<pulumi.Input<string>[]>;
    requestContractRef?: pulumi.Input<inputs.IdpSpConnectionWsTrustRequestContractRef>;
    tokenProcessorMappings: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMapping>[]>;
}

export interface IdpSpConnectionWsTrustAttributeContract {
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustAttributeContractCoreAttribute>[]>;
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustAttributeContractExtendedAttribute>[]>;
}

export interface IdpSpConnectionWsTrustAttributeContractCoreAttribute {
    name: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustAttributeContractExtendedAttribute {
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustMessageCustomization {
    contextName?: pulumi.Input<string>;
    messageExpression?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustRequestContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMapping {
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillment>[]>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSource>[]>;
    idpTokenProcessorRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIdpTokenProcessorRef>;
    issuanceCriteria?: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSource>[]>;
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIdpTokenProcessorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface IdpSpConnectionWsTrustTokenProcessorMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpTokenProcessorAttributeContract {
    /**
     * A list of token processor attributes that correspond to the attributes exposed by the token processor type.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes that can be returned by the token processor. The extended attributes are only used if the token processor supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorAttributeContractExtendedAttribute>[]>;
    /**
     * Whether this attribute contract is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * Whether or not all OGNL expressions used to fulfill an outgoing assertion contract should be masked in the logs. Defaults to false.
     */
    maskOgnlValues?: pulumi.Input<boolean>;
}

export interface IdpTokenProcessorAttributeContractCoreAttribute {
    masked: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface IdpTokenProcessorAttributeContractExtendedAttribute {
    /**
     * Specifies whether this attribute is masked in PingFederate logs. Defaults to `false`.
     */
    masked?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
}

export interface IdpTokenProcessorConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorConfigurationTable>[]>;
}

export interface IdpTokenProcessorConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpTokenProcessorConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpTokenProcessorConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorConfigurationTableRow>[]>;
}

export interface IdpTokenProcessorConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.IdpTokenProcessorConfigurationTableRowSensitiveField>[]>;
}

export interface IdpTokenProcessorConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface IdpTokenProcessorConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface IdpTokenProcessorParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface IdpTokenProcessorPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface JdbcDataStoreConnectionUrlTag {
    connectionUrl: pulumi.Input<string>;
    defaultSource?: pulumi.Input<boolean>;
    tags?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP256ActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP256DecryptionActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP256DecryptionPreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP256PreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP384ActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP384DecryptionActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP384DecryptionPreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP384PreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP521ActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP521DecryptionActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP521DecryptionPreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectP521PreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectRsaActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectRsaDecryptionActiveCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectRsaDecryptionPreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface KeypairsOauthOpenidConnectRsaPreviousCertRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface LdapDataStoreHostnamesTag {
    /**
     * Whether this is the default connection. Defaults to false if not specified.
     */
    defaultSource?: pulumi.Input<boolean>;
    /**
     * The LDAP host names.
     */
    hostnames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP host names.
     */
    tags?: pulumi.Input<string>;
}

export interface MetadataUrlCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface MetadataUrlX509file {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface NotificationPublisherConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTable>[]>;
}

export interface NotificationPublisherConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface NotificationPublisherConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface NotificationPublisherConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTableRow>[]>;
}

export interface NotificationPublisherConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.NotificationPublisherConfigurationTableRowSensitiveField>[]>;
}

export interface NotificationPublisherConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface NotificationPublisherConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface NotificationPublisherParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface NotificationPublisherPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerAccessControlSettings {
    /**
     * If 'restrictClients' is true, this field defines the list of OAuth clients that are allowed to access the token manager.
     */
    allowedClients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If this token manager has a parent, this flag determines whether access control settings are inherited from the parent. When set to true, the other fields in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * Determines whether access to this token manager is restricted to specific OAuth clients. If false, the 'allowedClients' field is ignored. The default value is false.
     */
    restrictClients?: pulumi.Input<boolean>;
}

export interface OauthAccessTokenManagerAttributeContract {
    /**
     * A list of core token attributes that are associated with the access token management plugin type. This field is read-only and is ignored on POST/PUT.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of additional token attributes that are associated with this access token management plugin instance.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAccessTokenManagerConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTable>[]>;
}

export interface OauthAccessTokenManagerConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTableRow>[]>;
}

export interface OauthAccessTokenManagerConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenManagerConfigurationTableRowSensitiveField>[]>;
}

export interface OauthAccessTokenManagerConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenManagerSelectionSettings {
    /**
     * If this token manager has a parent, this flag determines whether selection settings, such as resource URI's, are inherited from the parent. When set to true, the other fields in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The list of base resource URI's which map to this token manager. A resource URI, specified via the 'aud' parameter, can be used to select a specific token manager for an OAuth request.
     */
    resourceUris?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAccessTokenManagerSessionValidationSettings {
    /**
     * Check the session revocation status when validating the access token.
     */
    checkSessionRevocationStatus?: pulumi.Input<boolean>;
    /**
     * Check for a valid authentication session when validating the access token.
     */
    checkValidAuthnSession?: pulumi.Input<boolean>;
    /**
     * Include the session identifier in the access token. Note that if any of the session validation features is enabled, the session identifier will already be included in the access tokens.
     */
    includeSessionId?: pulumi.Input<boolean>;
    /**
     * If this token manager has a parent, this flag determines whether session validation settings, such as checkValidAuthnSession, are inherited from the parent. When set to true, the other fields in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * Update authentication session activity when validating the access token.
     */
    updateAuthnSessionActivity?: pulumi.Input<boolean>;
}

export interface OauthAccessTokenManagerSettingsDefaultAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingsAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsContext {
    /**
     * Reference to the associated Access Token Mapping Context instance.
     */
    contextRef?: pulumi.Input<inputs.OauthAccessTokenMappingsContextContextRef>;
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsContextContextRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingsCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAccessTokenMappingsCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingsCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingsCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingsIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingsIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthAccessTokenMappingsIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingsIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingsJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAccessTokenMappingsJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingsJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthAccessTokenMappingsLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthAccessTokenMappingsLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAccessTokenMappingsLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthAccessTokenMappingsLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsAdminWebServicePcvRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsExclusiveScope {
    description: pulumi.Input<string>;
    dynamic?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsExclusiveScopeGroup {
    description: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAuthServerSettingsPersistentGrantContract {
    coreAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    extendedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAuthServerSettingsScope {
    description: pulumi.Input<string>;
    dynamic?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface OauthAuthServerSettingsScopeGroup {
    description: pulumi.Input<string>;
    name: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillment>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<string>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields?: pulumi.Input<pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The source of the attribute.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillment>}>;
    /**
     * A list of column names used to construct the SQL query to retrieve data from the specified table in the datastore.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<string>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillment?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillment>}>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingLdapAttributeSourceBinaryAttributeSettings>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<string>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter?: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope?: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * The source type of this key.
     */
    type: pulumi.Input<string>;
}

export interface OauthAuthenticationPolicyContractMappingLdapAttributeSourceBinaryAttributeSettings {
    /**
     * Get the encoding type for this attribute. If not specified, the default is BASE64.
     */
    binaryEncoding?: pulumi.Input<string>;
}

export interface OauthClientClientAuth {
    /**
     * Client TLS Certificate Issuer DN.
     */
    clientCertIssuerDn?: pulumi.Input<string>;
    /**
     * Client TLS Certificate Subject DN.
     */
    clientCertSubjectDn?: pulumi.Input<string>;
    /**
     * For GET requests, this field contains the encrypted client secret, if one exists.  For POST and PUT requests, if you wish to reuse the existing secret, this field should be passed back unchanged.
     */
    encryptedSecret?: pulumi.Input<string>;
    /**
     * Enforce replay prevention on JSON Web Tokens. This field is applicable only for Private Key JWT Client Authentication.
     */
    enforceReplayPrevention?: pulumi.Input<boolean>;
    /**
     * Client secret for Basic Authentication.  To update the client secret, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    secret?: pulumi.Input<string>;
    /**
     * The JSON Web Signature [JWS] algorithm that must be used to sign the JSON Web Tokens. This field is applicable only for Private Key JWT Client Authentication. All signing algorithms are allowed if value is not present <br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11.
     */
    tokenEndpointAuthSigningAlgorithm?: pulumi.Input<string>;
    /**
     * Client authentication type.<br>The required field for type SECRET is secret.<br>The required fields for type CERTIFICATE are clientCertIssuerDn and clientCertSubjectDn.<br>The required field for type PRIVATE_KEY_JWT is: either jwks or jwksUrl.
     */
    type?: pulumi.Input<string>;
}

export interface OauthClientExtendedParameters {
    /**
     * A List of values
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthClientJwksSettings {
    /**
     * JSON Web Key Set (JWKS) document of the OAuth client. Either 'jwks' or 'jwksUrl' must be provided if private key JWT client authentication or signed requests is enabled.  If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures.
     */
    jwks?: pulumi.Input<string>;
    /**
     * JSON Web Key Set (JWKS) URL of the OAuth client. Either 'jwks' or 'jwksUrl' must be provided if private key JWT client authentication or signed requests is enabled.  If the client signs its JWTs using an RSASSA-PSS signing algorithm, PingFederate must either use Java 11 or be integrated with a hardware security module (HSM) to process the digital signatures.
     */
    jwksUrl?: pulumi.Input<string>;
}

export interface OauthClientOidcPolicy {
    /**
     * Determines whether this client is allowed to access the Session Revocation API.
     */
    grantAccessSessionRevocationApi?: pulumi.Input<boolean>;
    /**
     * Determines whether this client is allowed to access the Session Management API.
     */
    grantAccessSessionSessionManagementApi?: pulumi.Input<boolean>;
    /**
     * The JSON Web Encryption [JWE] content encryption algorithm for the ID Token.<br>AES_128_CBC_HMAC_SHA_256 - Composite AES-CBC-128 HMAC-SHA-256<br>AES_192_CBC_HMAC_SHA_384 - Composite AES-CBC-192 HMAC-SHA-384<br>AES_256_CBC_HMAC_SHA_512 - Composite AES-CBC-256 HMAC-SHA-512<br>AES_128_GCM - AES-GCM-128<br>AES_192_GCM - AES-GCM-192<br>AES_256_GCM - AES-GCM-256
     */
    idTokenContentEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content encryption key for the ID Token.<br>DIR - Direct Encryption with symmetric key<br>A128KW - AES-128 Key Wrap<br>A192KW - AES-192 Key Wrap<br>A256KW - AES-256 Key Wrap<br>A128GCMKW - AES-GCM-128 key encryption<br>A192GCMKW - AES-GCM-192 key encryption<br>A256GCMKW - AES-GCM-256 key encryption<br>ECDH_ES - ECDH-ES<br>ECDH_ES_A128KW - ECDH-ES with AES-128 Key Wrap<br>ECDH_ES_A192KW - ECDH-ES with AES-192 Key Wrap<br>ECDH_ES_A256KW - ECDH-ES with AES-256 Key Wrap<br>RSA_OAEP - RSAES OAEP<br>RSA_OAEP_256 - RSAES OAEP using SHA-256 and MGF1 with SHA-256
     */
    idTokenEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The JSON Web Signature [JWS] algorithm required for the ID Token.<br>NONE - No signing algorithm<br>HS256 - HMAC using SHA-256<br>HS384 - HMAC using SHA-384<br>HS512 - HMAC using SHA-512<br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>A null value will represent the default algorithm which is RS256.<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11
     */
    idTokenSigningAlgorithm?: pulumi.Input<string>;
    /**
     * A list of client logout URI's which will be invoked when a user logs out through one of PingFederate's SLO endpoints.
     */
    logoutUris?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determines whether the subject identifier type is pairwise.
     */
    pairwiseIdentifierUserType?: pulumi.Input<boolean>;
    /**
     * Set this value to true if you wish to enable client application logout, and the client is PingAccess, or its logout endpoints follow the PingAccess path convention.
     */
    pingAccessLogoutCapable?: pulumi.Input<boolean>;
    /**
     * The Open ID Connect policy. A null value will represent the default policy group.
     */
    policyGroup?: pulumi.Input<string>;
    /**
     * The URI references a file with a single JSON array of Redirect URI and JWKS URL values.
     */
    sectorIdentifierUri?: pulumi.Input<string>;
}

export interface OauthClientRegistrationPolicyConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthClientRegistrationPolicyConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.OauthClientRegistrationPolicyConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.OauthClientRegistrationPolicyConfigurationTable>[]>;
}

export interface OauthClientRegistrationPolicyConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface OauthClientRegistrationPolicyConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthClientRegistrationPolicyConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.OauthClientRegistrationPolicyConfigurationTableRow>[]>;
}

export interface OauthClientRegistrationPolicyConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.OauthClientRegistrationPolicyConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.OauthClientRegistrationPolicyConfigurationTableRowSensitiveField>[]>;
}

export interface OauthClientRegistrationPolicyConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface OauthClientRegistrationPolicyConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthClientRegistrationPolicyParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthClientRegistrationPolicyPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthClientSettingsClientMetadata {
    /**
     * The metadata description.
     */
    description?: pulumi.Input<string>;
    /**
     * If the field should allow multiple values.
     */
    multiValued?: pulumi.Input<boolean>;
    /**
     * The metadata name.
     */
    parameter: pulumi.Input<string>;
}

export interface OauthClientSettingsDynamicClientRegistration {
    /**
     * Allow client deletion from dynamic client management.
     */
    allowClientDelete?: pulumi.Input<boolean>;
    /**
     * The exclusive scopes to allow.
     */
    allowedExclusiveScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates if the Activation Code Confirmation page should be bypassed if 'verification_url_complete' is used by the end user to authorize a device.
     */
    bypassActivationCodeConfirmationOverride?: pulumi.Input<boolean>;
    /**
     * The minimum amount of time in seconds that the Client must wait between polling requests to the token endpoint. The default is 3 seconds.
     */
    cibaPollingInterval?: pulumi.Input<number>;
    /**
     * Determines whether CIBA signed requests are required for this client.
     */
    cibaRequireSignedRequests?: pulumi.Input<boolean>;
    clientCertIssuerRef?: pulumi.Input<inputs.OauthClientSettingsDynamicClientRegistrationClientCertIssuerRef>;
    /**
     * Client TLS Certificate Issuer Type.
     */
    clientCertIssuerType?: pulumi.Input<string>;
    defaultAccessTokenManagerRef?: pulumi.Input<inputs.OauthClientSettingsDynamicClientRegistrationDefaultAccessTokenManagerRef>;
    /**
     * Allows an administrator to override the Device Authorization Settings set globally for the OAuth AS. Defaults to SERVER_DEFAULT.
     */
    deviceFlowSettingType?: pulumi.Input<string>;
    /**
     * The amount of time client should wait between polling requests, in seconds.
     */
    devicePollingIntervalOverride?: pulumi.Input<number>;
    /**
     * Disable registration access tokens. Local standards may mandate different registration access token requirements. If applicable, implement custom validation and enforcement rules using the DynamicClientRegistrationPlugin interface from the PingFederate SDK, configure the client registration policies (policyRefs), and set this property (disableRegistrationAccessTokens) to true. CAUTION: When the disableRegistrationAccessTokens property is set to true, all clients, not just the ones created using the Dynamic Client Registration protocol, are vulnerable to unrestricted retrievals, updates (including modifications to the client authentication scheme and redirect URIs), and deletes at the /as/clients.oauth2 endpoint unless one or more client registration policies are in place to protect against unauthorized attempts.
     */
    disableRegistrationAccessTokens?: pulumi.Input<boolean>;
    /**
     * Enforce replay prevention.
     */
    enforceReplayPrevention?: pulumi.Input<boolean>;
    /**
     * The initial access token to prevent unwanted client registrations.
     */
    initialAccessTokenScope?: pulumi.Input<string>;
    /**
     * Open ID Connect Policy settings.  This is included in the message only when OIDC is enabled.
     */
    oidcPolicy?: pulumi.Input<inputs.OauthClientSettingsDynamicClientRegistrationOidcPolicy>;
    /**
     * The 'device_code' and 'user_code' timeout, in seconds.
     */
    pendingAuthorizationTimeoutOverride?: pulumi.Input<number>;
    /**
     * The persistent grant expiration time.
     */
    persistentGrantExpirationTime?: pulumi.Input<number>;
    /**
     * The persistent grant expiration time unit.
     */
    persistentGrantExpirationTimeUnit?: pulumi.Input<string>;
    /**
     * Allows an administrator to override the Persistent Grant Lifetime set globally for the OAuth AS. Defaults to SERVER_DEFAULT.
     */
    persistentGrantExpirationType?: pulumi.Input<string>;
    /**
     * The persistent grant idle timeout.
     */
    persistentGrantIdleTimeout?: pulumi.Input<number>;
    /**
     * The persistent grant idle timeout time unit.
     */
    persistentGrantIdleTimeoutTimeUnit?: pulumi.Input<string>;
    /**
     * Allows an administrator to override the Persistent Grant Idle Timeout set globally for the OAuth AS. Defaults to SERVER_DEFAULT.
     */
    persistentGrantIdleTimeoutType?: pulumi.Input<string>;
    /**
     * The client registration policies.
     */
    policyRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use ROLL or DONT_ROLL to override the Roll Refresh Token Values setting on the Authorization Server Settings. SERVER_DEFAULT will default to the Roll Refresh Token Values setting on the Authorization Server Setting screen. Defaults to SERVER_DEFAULT.
     */
    refreshRolling?: pulumi.Input<string>;
    /**
     * The minimum interval to roll refresh tokens, in hours. This value will override the Refresh Token Rolling Interval Value on the Authorization Server Settings.
     */
    refreshTokenRollingInterval?: pulumi.Input<number>;
    /**
     * Use OVERRIDE_SERVER_DEFAULT to override the Refresh Token Rolling Interval value on the Authorization Server Settings. SERVER_DEFAULT will default to the Refresh Token Rolling Interval value on the Authorization Server Setting. Defaults to SERVER_DEFAULT.
     */
    refreshTokenRollingIntervalType?: pulumi.Input<string>;
    requestPolicyRef?: pulumi.Input<inputs.OauthClientSettingsDynamicClientRegistrationRequestPolicyRef>;
    /**
     * Determines whether Proof Key for Code Exchange (PKCE) is required for the dynamically created client.
     */
    requireProofKeyForCodeExchange?: pulumi.Input<boolean>;
    /**
     * Require signed requests.
     */
    requireSignedRequests?: pulumi.Input<boolean>;
    /**
     * Restrict common scopes.
     */
    restrictCommonScopes?: pulumi.Input<boolean>;
    /**
     * Determines whether the client is restricted to using only its default access token manager. The default is false.
     */
    restrictToDefaultAccessTokenManager?: pulumi.Input<boolean>;
    /**
     * The common scopes to restrict.
     */
    restrictedCommonScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Rotate registration access token on dynamic client management requests.
     */
    rotateClientSecret?: pulumi.Input<boolean>;
    /**
     * Rotate client secret on dynamic client management requests.
     */
    rotateRegistrationAccessToken?: pulumi.Input<boolean>;
    tokenExchangeProcessorPolicyRef?: pulumi.Input<inputs.OauthClientSettingsDynamicClientRegistrationTokenExchangeProcessorPolicyRef>;
    /**
     * The URL is used as 'verification_url' and 'verification_url_complete' values in a Device Authorization request.
     */
    userAuthorizationUrlOverride?: pulumi.Input<string>;
}

export interface OauthClientSettingsDynamicClientRegistrationClientCertIssuerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthClientSettingsDynamicClientRegistrationDefaultAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthClientSettingsDynamicClientRegistrationOidcPolicy {
    /**
     * The JSON Web Encryption [JWE] content encryption algorithm for the ID Token.<br>AES_128_CBC_HMAC_SHA_256 - Composite AES-CBC-128 HMAC-SHA-256<br>AES_192_CBC_HMAC_SHA_384 - Composite AES-CBC-192 HMAC-SHA-384<br>AES_256_CBC_HMAC_SHA_512 - Composite AES-CBC-256 HMAC-SHA-512<br>AES-GCM-128 - AES_128_GCM<br>AES_192_GCM - AES-GCM-192<br>AES_256_GCM - AES-GCM-256
     */
    idTokenContentEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The JSON Web Encryption [JWE] encryption algorithm used to encrypt the content encryption key for the ID Token.<br>DIR - Direct Encryption with symmetric key<br>A128KW - AES-128 Key Wrap<br>A192KW - AES-192 Key Wrap<br>A256KW - AES-256 Key Wrap<br>A128GCMKW - AES-GCM-128 key encryption<br>A192GCMKW - AES-GCM-192 key encryption<br>A256GCMKW - AES-GCM-256 key encryption<br>ECDH_ES - ECDH-ES<br>ECDH_ES_A128KW - ECDH-ES with AES-128 Key Wrap<br>ECDH_ES_A192KW - ECDH-ES with AES-192 Key Wrap<br>ECDH_ES_A256KW - ECDH-ES with AES-256 Key Wrap<br>RSA_OAEP - RSAES OAEP<br>
     */
    idTokenEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The JSON Web Signature [JWS] algorithm required for the ID Token.<br>NONE - No signing algorithm<br>HS256 - HMAC using SHA-256<br>HS384 - HMAC using SHA-384<br>HS512 - HMAC using SHA-512<br>RS256 - RSA using SHA-256<br>RS384 - RSA using SHA-384<br>RS512 - RSA using SHA-512<br>ES256 - ECDSA using P256 Curve and SHA-256<br>ES384 - ECDSA using P384 Curve and SHA-384<br>ES512 - ECDSA using P521 Curve and SHA-512<br>PS256 - RSASSA-PSS using SHA-256 and MGF1 padding with SHA-256<br>PS384 - RSASSA-PSS using SHA-384 and MGF1 padding with SHA-384<br>PS512 - RSASSA-PSS using SHA-512 and MGF1 padding with SHA-512<br>A null value will represent the default algorithm which is RS256.<br>RSASSA-PSS is only supported with SafeNet Luna, Thales nCipher or Java 11
     */
    idTokenSigningAlgorithm?: pulumi.Input<string>;
    policyGroup: pulumi.Input<inputs.OauthClientSettingsDynamicClientRegistrationOidcPolicyPolicyGroup>;
}

export interface OauthClientSettingsDynamicClientRegistrationOidcPolicyPolicyGroup {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthClientSettingsDynamicClientRegistrationRequestPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthClientSettingsDynamicClientRegistrationTokenExchangeProcessorPolicyRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeContract {
    /**
     * A list of read-only attributes (for example, sub) that are automatically populated by PingFederate.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeContractCoreAttribute>[]>;
    /**
     * A list of additional attributes.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeContractExtendedAttribute>[]>;
}

export interface OauthOpenidConnectPolicyAttributeContractCoreAttribute {
    includeInIdToken: pulumi.Input<boolean>;
    includeInUserInfo: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    overrideDefaultDelivery: pulumi.Input<boolean>;
}

export interface OauthOpenidConnectPolicyAttributeContractExtendedAttribute {
    /**
     * Attribute is included in the ID Token.
     */
    includeInIdToken?: pulumi.Input<boolean>;
    /**
     * Attribute is included in the User Info.
     */
    includeInUserInfo?: pulumi.Input<boolean>;
    /**
     * The name of this attribute.
     */
    name: pulumi.Input<string>;
    /**
     * This is true when either include in id or user info is true and is used to make the resulting API calls correct
     */
    overrideDefaultDelivery?: pulumi.Input<boolean>;
}

export interface OauthOpenidConnectPolicyAttributeMapping {
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingLdapAttributeSource>[]>;
}

export interface OauthOpenidConnectPolicyAttributeMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthOpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyAttributeMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthOpenidConnectPolicyScopeAttributeMapping {
    /**
     * The extended property name.
     */
    keyName: pulumi.Input<string>;
    /**
     * A List of parameter values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface OauthOpenidConnectPolicyTimeouts {
    delete?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsIssuanceCriteriaExpressionCriteria>[]>;
}

export interface OauthResourceOwnerCredentialsMappingsIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.OauthResourceOwnerCredentialsMappingsLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface OauthResourceOwnerCredentialsMappingsPasswordValidatorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorAttributeContract {
    /**
     * A list of read-only attributes that are automatically populated by the password credential validator descriptor.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of additional attributes that can be returned by the password credential validator. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether this attribute contract is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
}

export interface PasswordCredentialValidatorConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTable>[]>;
}

export interface PasswordCredentialValidatorConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTableRow>[]>;
}

export interface PasswordCredentialValidatorConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.PasswordCredentialValidatorConfigurationTableRowSensitiveField>[]>;
}

export interface PasswordCredentialValidatorConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface PasswordCredentialValidatorPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface RedirectValidationSettingsRedirectValidationLocalSettings {
    /**
     * Enable validation for error resource.
     */
    enableInErrorResourceValidation?: pulumi.Input<boolean>;
    /**
     * Enable target resource validation for IdP discovery.
     */
    enableTargetResourceValidationForIdpDiscovery?: pulumi.Input<boolean>;
    /**
     * Enable target resource validation for SLO.
     */
    enableTargetResourceValidationForSlo?: pulumi.Input<boolean>;
    /**
     * Enable target resource validation for SSO.
     */
    enableTargetResourceValidationForSso?: pulumi.Input<boolean>;
    /**
     * List of URLs that are designated as valid target resources.
     */
    whiteLists?: pulumi.Input<pulumi.Input<inputs.RedirectValidationSettingsRedirectValidationLocalSettingsWhiteList>[]>;
}

export interface RedirectValidationSettingsRedirectValidationLocalSettingsWhiteList {
    /**
     * Allow any query parameters and fragment in the resource.
     */
    allowQueryAndFragment?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for IdP discovery validation.
     */
    idpDiscovery?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for in error resource validation.
     */
    inErrorResource?: pulumi.Input<boolean>;
    /**
     * Require HTTPS for accessing this resource.
     */
    requireHttps?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for SLO redirect validation.
     */
    targetResourceSlo?: pulumi.Input<boolean>;
    /**
     * Enable this target resource for SSO redirect validation.
     */
    targetResourceSso?: pulumi.Input<boolean>;
    /**
     * Domain of a valid resource.
     */
    validDomain: pulumi.Input<string>;
    /**
     * Path of a valid resource.
     */
    validPath?: pulumi.Input<string>;
}

export interface RedirectValidationSettingsRedirectValidationPartnerSettings {
    /**
     * Enable wreply validation for SLO.
     */
    enableWreplyValidationSlo?: pulumi.Input<boolean>;
}

export interface ServerSettingsFederationInfo {
    /**
     * The fully qualified host name, port, and path (if applicable) on which the PingFederate server runs.
     */
    baseUrl?: pulumi.Input<string>;
    /**
     * This ID identifies your federation server for SAML 1.x transactions. As with SAML 2.0, it is usually defined as an organization's URL or a DNS address. The SourceID used for artifact resolution is derived from this ID using SHA1.
     */
    saml1xIssuerId?: pulumi.Input<string>;
    /**
     * If supplied, the Source ID value entered here is used for SAML 1.x, instead of being derived from the SAML 1.x Issuer/Audience.
     */
    saml1xSourceId?: pulumi.Input<string>;
    /**
     * This ID defines your organization as the entity operating the server for SAML 2.0 transactions. It is usually defined as an organization's URL or a DNS address; for example: pingidentity.com. The SAML SourceID used for artifact resolution is derived from this ID using SHA1.
     */
    saml2EntityId?: pulumi.Input<string>;
    /**
     * The URI of the realm associated with the PingFederate server. A realm represents a single unit of security administration or trust.
     */
    wsfedRealm?: pulumi.Input<string>;
}

export interface ServerSettingsRolesAndProtocols {
    enableIdpDiscovery?: pulumi.Input<boolean>;
    idpRole: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsIdpRole>;
    oauthRole: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsOauthRole>;
    spRole: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsSpRole>;
}

export interface ServerSettingsRolesAndProtocolsIdpRole {
    enable?: pulumi.Input<boolean>;
    enableOutboundProvisioning?: pulumi.Input<boolean>;
    enableSaml10?: pulumi.Input<boolean>;
    enableSaml11?: pulumi.Input<boolean>;
    enableWsFed?: pulumi.Input<boolean>;
    enableWsTrust?: pulumi.Input<boolean>;
    saml20Profile?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsIdpRoleSaml20Profile>;
}

export interface ServerSettingsRolesAndProtocolsIdpRoleSaml20Profile {
    enable?: pulumi.Input<boolean>;
    enableAutoConnect?: pulumi.Input<boolean>;
}

export interface ServerSettingsRolesAndProtocolsOauthRole {
    enableOauth?: pulumi.Input<boolean>;
    enableOpenidConnect?: pulumi.Input<boolean>;
}

export interface ServerSettingsRolesAndProtocolsSpRole {
    enable?: pulumi.Input<boolean>;
    enableInboundProvisioning?: pulumi.Input<boolean>;
    enableOpenidConnect?: pulumi.Input<boolean>;
    enableSaml10?: pulumi.Input<boolean>;
    enableSaml11?: pulumi.Input<boolean>;
    enableWsFed?: pulumi.Input<boolean>;
    enableWsTrust?: pulumi.Input<boolean>;
    saml20Profile?: pulumi.Input<inputs.ServerSettingsRolesAndProtocolsSpRoleSaml20Profile>;
}

export interface ServerSettingsRolesAndProtocolsSpRoleSaml20Profile {
    enable?: pulumi.Input<boolean>;
    enableAutoConnect?: pulumi.Input<boolean>;
    enableXasp?: pulumi.Input<boolean>;
}

export interface SpAdapterAttributeContract {
    /**
     * A list of read-only attributes that are automatically populated by the SP adapter descriptor.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of additional attributes that can be returned by the SP adapter. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether this attribute contract is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
}

export interface SpAdapterConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SpAdapterConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.SpAdapterConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.SpAdapterConfigurationTable>[]>;
}

export interface SpAdapterConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface SpAdapterConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAdapterConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.SpAdapterConfigurationTableRow>[]>;
}

export interface SpAdapterConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SpAdapterConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.SpAdapterConfigurationTableRowSensitiveField>[]>;
}

export interface SpAdapterConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface SpAdapterConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAdapterParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpAdapterPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpAdapterTargetApplicationInfo {
    /**
     * The application icon URL.
     */
    applicationIconUrl?: pulumi.Input<string>;
    /**
     * The application name.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * Specifies Whether target application information is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
}

export interface SpAuthenticationPolicyContractMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpAuthenticationPolicyContractMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionAdditionalAllowedEntitiesConfiguration {
    /**
     * Set to true to configure additional entities or issuers to be accepted during entity or issuer validation.
     */
    additionalAllowedEntities?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionAdditionalAllowedEntitiesConfigurationAdditionalAllowedEntity>[]>;
    /**
     * An array of additional allowed entities or issuers to be accepted during entity or issuer validation.
     */
    allowAdditionalEntities?: pulumi.Input<boolean>;
    /**
     * Set to true to accept any entity or issuer during entity or issuer validation. (Not Recommended)
     */
    allowAllEntities?: pulumi.Input<boolean>;
}

export interface SpIdpConnectionAdditionalAllowedEntitiesConfigurationAdditionalAllowedEntity {
    /**
     * Entity description.
     */
    entityDescription?: pulumi.Input<string>;
    /**
     * Unique entity identifier.
     */
    entityId?: pulumi.Input<string>;
}

export interface SpIdpConnectionAttributeQuery {
    /**
     * The attribute name mappings between the SP and the IdP.
     */
    nameMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionAttributeQueryNameMapping>[]>;
    /**
     * The attribute query profile's security policy.
     */
    policies?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionAttributeQueryPolicy>[]>;
    /**
     * The URL at your IdP partner's site where attribute queries are to be sent.
     */
    url: pulumi.Input<string>;
}

export interface SpIdpConnectionAttributeQueryNameMapping {
    /**
     * The local attribute name.
     */
    localName: pulumi.Input<string>;
    /**
     * The remote attribute name as defined by the attribute authority.
     */
    remoteName: pulumi.Input<string>;
}

export interface SpIdpConnectionAttributeQueryPolicy {
    /**
     * Encrypt the name identifier.
     */
    encryptNameId?: pulumi.Input<boolean>;
    /**
     * Mask attributes in log files.
     */
    maskAttributeValues?: pulumi.Input<boolean>;
    /**
     * Require encrypted assertion.
     */
    requireEncryptedAssertion?: pulumi.Input<boolean>;
    /**
     * Require signed assertion.
     */
    requireSignedAssertion?: pulumi.Input<boolean>;
    /**
     * Require signed response.
     */
    requireSignedResponse?: pulumi.Input<boolean>;
    /**
     * Sign the attribute query.
     */
    signAttributeQuery?: pulumi.Input<boolean>;
}

export interface SpIdpConnectionContactInfo {
    /**
     * Company name.
     */
    company?: pulumi.Input<string>;
    /**
     * Contact email address.
     */
    email?: pulumi.Input<string>;
    /**
     * Contact first name.
     */
    firstName?: pulumi.Input<string>;
    /**
     * Contact last name.
     */
    lastName?: pulumi.Input<string>;
    /**
     * Contact phone number.
     */
    phone?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredential {
    /**
     * The algorithm used to encrypt assertions sent to this partner. AES_128, AES_256, AES_128_GCM, AES_192_GCM, AES_256_GCM and Triple_DES are also supported. Default is AES_128
     */
    blockEncryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The certificates used for signature verification and XML encryption.
     */
    certs?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialCert>[]>;
    /**
     * The ID of the primary key pair used to decrypt message content received from this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate Administrative Console.
     */
    decryptionKeyPairRef?: pulumi.Input<inputs.SpIdpConnectionCredentialDecryptionKeyPairRef>;
    /**
     * The SOAP authentication method(s) to use when you receive a message using SOAP back channel.
     */
    inboundBackChannelAuths?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialInboundBackChannelAuth>[]>;
    /**
     * The algorithm used to transport keys to this partner. RSA_OAEP and RSA_v15 are supported. Default is RSA_OAEP
     */
    keyTransportAlgorithm?: pulumi.Input<string>;
    /**
     * The SOAP authentication method(s) to use when you send a message using SOAP back channel.
     */
    outboundBackChannelAuths?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialOutboundBackChannelAuth>[]>;
    /**
     * The ID of the secondary key pair used to decrypt message content received from this partner.
     */
    secondaryDecryptionKeyPairRef?: pulumi.Input<inputs.SpIdpConnectionCredentialSecondaryDecryptionKeyPairRef>;
    /**
     * Settings related to the manner in which messages sent to the partner are digitally signed. Required for SP Connections.
     */
    signingSettings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialSigningSetting>[]>;
    /**
     * If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field.
     */
    verificationIssuerDn?: pulumi.Input<string>;
    /**
     * If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.
     */
    verificationSubjectDn?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialCert {
    /**
     * Indicates whether this is an active signature verification certificate.
     */
    activeVerificationCert?: pulumi.Input<boolean>;
    /**
     * Certificate details. This property is read-only and is always ignored on a POST or PUT.
     */
    certViews?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialCertCertView>[]>;
    /**
     * Indicates whether to use this cert to encrypt outgoing assertions. Only one certificate in the collection can have this flag set.
     */
    encryptionCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the primary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    primaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the secondary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    secondaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * The certificate data. This property must always be supplied on a POST or PUT.
     */
    x509Files: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialCertX509File>[]>;
}

export interface SpIdpConnectionCredentialCertCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1Fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256Fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface SpIdpConnectionCredentialCertX509File {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialDecryptionKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialInboundBackChannelAuth {
    /**
     * The certificate used for signature verification and XML encryption.
     */
    certs?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialInboundBackChannelAuthCert>[]>;
    /**
     * If incoming or outgoing messages must be signed.
     */
    digitalSignature?: pulumi.Input<boolean>;
    /**
     * The credentials to use when you authenticate with the SOAP endpoint.
     */
    httpBasicCredentials?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialInboundBackChannelAuthHttpBasicCredential>[]>;
    /**
     * Incoming HTTP transmissions must use a secure channel.
     */
    requireSsl?: pulumi.Input<boolean>;
    type?: pulumi.Input<string>;
    /**
     * If a verification Subject DN is provided, you can optionally restrict the issuer to a specific trusted CA by specifying its DN in this field.
     */
    verificationIssuerDn?: pulumi.Input<string>;
    /**
     * If this property is set, the verification trust model is Anchored. The verification certificate must be signed by a trusted CA and included in the incoming message, and the subject DN of the expected certificate is specified in this property. If this property is not set, then a primary verification certificate must be specified in the certs array.
     */
    verificationSubjectDn?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialInboundBackChannelAuthCert {
    /**
     * Indicates whether this is an active signature verification certificate.
     */
    activeVerificationCert?: pulumi.Input<boolean>;
    /**
     * Certificate details. This property is read-only and is always ignored on a POST or PUT.
     */
    certViews?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialInboundBackChannelAuthCertCertView>[]>;
    /**
     * Indicates whether to use this cert to encrypt outgoing assertions. Only one certificate in the collection can have this flag set.
     */
    encryptionCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the primary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    primaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * Indicates whether this is the secondary signature verification certificate. Only one certificate in the collection can have this flag set.
     */
    secondaryVerificationCert?: pulumi.Input<boolean>;
    /**
     * The certificate data. This property must always be supplied on a POST or PUT.
     */
    x509Files: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialInboundBackChannelAuthCertX509File>[]>;
}

export interface SpIdpConnectionCredentialInboundBackChannelAuthCertCertView {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The end date up until which the item is valid, in ISO 8601 format (UTC).
     */
    expires?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate.
     */
    id?: pulumi.Input<string>;
    /**
     * The issuer's distinguished name.
     */
    issuerDn?: pulumi.Input<string>;
    /**
     * The public key algorithm.
     */
    keyAlgorithm?: pulumi.Input<string>;
    /**
     * The public key size.
     */
    keySize?: pulumi.Input<number>;
    /**
     * The serial number assigned by the CA.
     */
    serialNumber?: pulumi.Input<string>;
    /**
     * SHA-1 fingerprint in Hex encoding.
     */
    sha1Fingerprint?: pulumi.Input<string>;
    /**
     * SHA-256 fingerprint in Hex encoding.
     */
    sha256Fingerprint?: pulumi.Input<string>;
    /**
     * The signature algorithm.
     */
    signatureAlgorithm?: pulumi.Input<string>;
    /**
     * Status of the item.
     */
    status?: pulumi.Input<string>;
    /**
     * The subject alternative names (SAN).
     */
    subjectAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject's distinguished name.
     */
    subjectDn?: pulumi.Input<string>;
    /**
     * The start date from which the item is valid, in ISO 8601 format (UTC).
     */
    validFrom?: pulumi.Input<string>;
    /**
     * The X.509 version to which the item conforms.
     */
    version?: pulumi.Input<number>;
}

export interface SpIdpConnectionCredentialInboundBackChannelAuthCertX509File {
    /**
     * Cryptographic Provider. This is only applicable if Hybrid HSM mode is true.
     */
    cryptoProvider?: pulumi.Input<string>;
    /**
     * The certificate data in PEM format. New line characters should be omitted or encoded in this value.
     */
    fileData: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the certificate. It can be any combination of [a-z0-9._-]. This property is system-assigned if not specified.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialInboundBackChannelAuthHttpBasicCredential {
    /**
     * For GET requests, this field contains the encrypted password, if one exists.  For POST and PUT requests, if you wish to reuse the existing password, this field should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * User password.  To update the password, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    password?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialOutboundBackChannelAuth {
    digitalSignature?: pulumi.Input<boolean>;
    httpBasicCredentials?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionCredentialOutboundBackChannelAuthHttpBasicCredential>[]>;
    /**
     * The ID of the key pair used to authenticate with your partner's SOAP endpoint. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'SSL Server Certificates' in the PingFederate Administrative Console.
     */
    sslAuthKeyPairRef?: pulumi.Input<inputs.SpIdpConnectionCredentialOutboundBackChannelAuthSslAuthKeyPairRef>;
    type?: pulumi.Input<string>;
    validatePartnerCert?: pulumi.Input<boolean>;
}

export interface SpIdpConnectionCredentialOutboundBackChannelAuthHttpBasicCredential {
    /**
     * For GET requests, this field contains the encrypted password, if one exists.  For POST and PUT requests, if you wish to reuse the existing password, this field should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * User password.  To update the password, specify the plaintext value in this field.  This field will not be populated for GET requests.
     */
    password?: pulumi.Input<string>;
    /**
     * The username.
     */
    username?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialOutboundBackChannelAuthSslAuthKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialSecondaryDecryptionKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialSigningSetting {
    /**
     * The algorithm used to sign messages sent to this partner. The default is SHA1withDSA for DSA certs, SHA256withRSA for RSA certs, and SHA256withECDSA for EC certs. For RSA certs, SHA1withRSA, SHA384withRSA, and SHA512withRSA are also supported. For EC certs, SHA384withECDSA and SHA512withECDSA are also supported. If the connection is WS-Federation with JWT token type, then the possible values are RSA SHA256, RSA SHA384, RSA SHA512, ECDSA SHA256, ECDSA SHA384, ECDSA SHA512
     */
    algorithm?: pulumi.Input<string>;
    /**
     * The list of IDs of alternative key pairs used to sign messages sent to this partner. The ID of the key pair is also known as the alias and can be found by viewing the corresponding certificate under 'Signing & Decryption Keys & Certificates' in the PingFederate admin console. Requires PF 11.1+
     */
    alternativeSigningKeyPairRefs?: pulumi.Input<inputs.SpIdpConnectionCredentialSigningSettingAlternativeSigningKeyPairRefs>;
    /**
     * Determines whether the signing certificate is included in the signature <KeyInfo> element.
     */
    includeCertInSignature?: pulumi.Input<boolean>;
    /**
     * Determines whether the <KeyValue> element with the raw public key is included in the signature <KeyInfo> element.
     */
    includeRawKeyInSignature?: pulumi.Input<boolean>;
    /**
     * Settings related to the manner in which messages sent to the partner are digitally signed. Required for SP Connections.
     */
    signingKeyPairRef: pulumi.Input<inputs.SpIdpConnectionCredentialSigningSettingSigningKeyPairRef>;
}

export interface SpIdpConnectionCredentialSigningSettingAlternativeSigningKeyPairRefs {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionCredentialSigningSettingSigningKeyPairRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionExtendedProperty {
    /**
     * The extended property name.
     */
    keyName: pulumi.Input<string>;
    /**
     * A List of parameter values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SpIdpConnectionIdpBrowserSso {
    /**
     * A list of adapters that map to incoming assertions.
     */
    adapterMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMapping>[]>;
    /**
     * The settings for an artifact binding.
     */
    artifacts?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoArtifact>[]>;
    /**
     * Specify whether the incoming SAML assertions are signed rather than the entire SAML response being signed.
     */
    assertionsSigned?: pulumi.Input<boolean>;
    /**
     * The list of attributes that the IdP sends in the assertion.
     */
    attributeContracts?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAttributeContract>[]>;
    /**
     * A list of Authentication Policy Contracts that map to incoming assertions.
     */
    authenticationPolicyContractMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMapping>[]>;
    /**
     * A list of authentication context mappings between local and remote values. Applicable for SAML 2.0 and OIDC protocol connections.
     */
    authnContextMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthnContextMapping>[]>;
    /**
     * The SAML 2.0 decryption policy for browser-based SSO.
     */
    decryptionPolicies?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoDecryptionPolicy>[]>;
    /**
     * The default target URL for this connection. If defined, this overrides the default URL.
     */
    defaultTargetUrl?: pulumi.Input<string>;
    /**
     * The profiles that are enabled for browser-based SSO. SAML 2.0 supports all profiles whereas SAML 1.x IdP connections support both IdP and SP (non-standard) initiated SSO. This is required for SAMLx.x Connections.
     */
    enabledProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines the process in which users authenticated by the IdP are associated with user accounts local to the SP.
     */
    idpIdentityMapping: pulumi.Input<string>;
    /**
     * The SAML bindings that are enabled for browser-based SSO. This is required for SAML 2.0 connections when the enabled profiles contain the SP-initiated SSO profile or either SLO profile. For SAML 1.x based connections, it is not used for SP Connections and it is optional for IdP Connections.
     */
    incomingBindings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The message customizations for browser-based SSO. Depending on server settings, connection type, and protocol this may or may not be supported.
     */
    messageCustomizations?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoMessageCustomization>[]>;
    /**
     * The Authentication policy contract to map into for OAuth. The policy contract can subsequently be mapped into the OAuth persistent grant.
     */
    oauthAuthenticationPolicyContractRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoOauthAuthenticationPolicyContractRef>;
    /**
     * The OpenID Provider configuration settings. Required for an OIDC connection.
     */
    oidcProviderSettings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoOidcProviderSetting>[]>;
    /**
     * The browser-based SSO protocol to use.
     */
    protocol: pulumi.Input<string>;
    /**
     * Determines whether SAML authentication requests should be signed.
     */
    signAuthnRequests?: pulumi.Input<boolean>;
    /**
     * A list of possible endpoints to send SLO requests and responses.
     */
    sloServiceEndpoints?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSloServiceEndpoint>[]>;
    /**
     * Direct mapping from the IdP connection to the OAuth persistent grant.
     */
    ssoOAuthMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMapping>[]>;
    /**
     * The IdP SSO endpoints that define where to send your authentication requests. Only required for SP initiated SSO. This is required for SAML x.x and WS-FED Connections.
     */
    ssoServiceEndpoints?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoServiceEndpoint>[]>;
    /**
     * For WS-Federation connections, a whitelist of additional allowed domains and paths used to validate wreply for SLO, if enabled.
     */
    urlWhitelistEntries?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoUrlWhitelistEntry>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMapping {
    /**
     * Connection specific overridden adapter instance for mapping.
     */
    adapterOverrideSettings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSetting>[]>;
    /**
     * A list of mappings from attribute names to their fulfillment values.
     */
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAttributeContractFulfillment>[]>;
    /**
     * A list of custom configured data stores to look up attributes from.
     */
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSource>[]>;
    /**
     * The issuance criteria that this transaction must meet before the corresponding attribute contract is fulfilled.
     */
    issuanceCriteria?: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteria>;
    /**
     * A list of jdbc configured data stores to look up attributes from.
     */
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSource>[]>;
    /**
     * A list of ldap configured data stores to look up attributes from.
     */
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSource>[]>;
    /**
     * Restricts this mapping to specific virtual entity IDs.
     */
    restrictVirtualEntityIds?: pulumi.Input<boolean>;
    /**
     * The list of virtual server IDs that this mapping is restricted to.
     */
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Reference to the associated SP adapter.
     */
    spAdapterRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingSpAdapterRef>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSetting {
    attributeContracts?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContract>[]>;
    /**
     * Plugin instance configuration.
     */
    configuration: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfiguration>;
    /**
     * The ID of the plugin instance. The ID cannot be modified once the instance is created.
     * Note: Ignored when specifying a connection's adapter override.
     */
    id: pulumi.Input<string>;
    name: pulumi.Input<string>;
    parentRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingParentRef>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is created.
     * Note: Ignored when specifying a connection's adapter override.
     */
    pluginDescriptorRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingPluginDescriptorRef>;
    targetApplicationInfos?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingTargetApplicationInfo>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingAttributeContract {
    /**
     * A list of read-only attributes that are automatically populated by the SP adapter descriptor.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of additional attributes that can be returned by the SP adapter. The extended attributes are only used if the adapter supports them.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether this attribute contract is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfiguration {
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationSensitiveField>[]>;
    /**
     * List of configuration tables.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTable>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTable {
    /**
     * Whether this table is inherited from its parent instance. If true, the rows become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the table.
     */
    name: pulumi.Input<string>;
    /**
     * List of table rows.
     */
    rows?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRow>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRow {
    /**
     * Whether this row is the default.
     */
    defaultRow?: pulumi.Input<boolean>;
    /**
     * List of configuration fields.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowField>[]>;
    /**
     * List of sensitive configuration fields.
     */
    sensitiveFields?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowSensitiveField>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingConfigurationTableRowSensitiveField {
    /**
     * Whether this field is inherited from its parent instance. If true, the value/encrypted value properties become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * The name of the configuration field.
     */
    name: pulumi.Input<string>;
    /**
     * The value for the configuration field. For encrypted or hashed fields, GETs will not return this attribute. To update an encrypted or hashed field, specify the new value in this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingParentRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingPluginDescriptorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAdapterOverrideSettingTargetApplicationInfo {
    /**
     * The application icon URL.
     */
    applicationIconUrl?: pulumi.Input<string>;
    /**
     * The application name.
     */
    applicationName?: pulumi.Input<string>;
    /**
     * Specifies Whether target application information is inherited from its parent instance. If true, the rest of the properties in this model become read-only. The default value is false.
     */
    inherited?: pulumi.Input<boolean>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAdapterMappingSpAdapterRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoArtifact {
    lifetime: pulumi.Input<number>;
    resolverLocations: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoArtifactResolverLocation>[]>;
    sourceId?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoArtifactResolverLocation {
    index: pulumi.Input<number>;
    url: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAttributeContract {
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAttributeContractCoreAttribute>[]>;
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAttributeContractExtendedAttribute>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAttributeContractCoreAttribute {
    masked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAttributeContractExtendedAttribute {
    masked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMapping {
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingAttributeContractFulfillment>[]>;
    authenticationPolicyContractRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingAuthenticationPolicyContractRef>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSource>[]>;
    issuanceCriteria?: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSource>[]>;
    restrictVirtualServerIds?: pulumi.Input<boolean>;
    restrictedVirtualServerIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthenticationPolicyContractMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoAuthnContextMapping {
    local?: pulumi.Input<string>;
    remote?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoDecryptionPolicy {
    assertionEncrypted?: pulumi.Input<boolean>;
    attributesEncrypted?: pulumi.Input<boolean>;
    sloEncryptSubjectNameId?: pulumi.Input<boolean>;
    sloSubjectNameIdEncrypted?: pulumi.Input<boolean>;
    subjectNameIdEncrypted?: pulumi.Input<boolean>;
}

export interface SpIdpConnectionIdpBrowserSsoMessageCustomization {
    contextName?: pulumi.Input<string>;
    messageExpression?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoOauthAuthenticationPolicyContractRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoOidcProviderSetting {
    authenticationScheme?: pulumi.Input<string>;
    authenticationSigningAlgorithm?: pulumi.Input<string>;
    authorizationEndpoint: pulumi.Input<string>;
    jwksUrl: pulumi.Input<string>;
    loginType: pulumi.Input<string>;
    requestParameters?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoOidcProviderSettingRequestParameter>[]>;
    requestSigningAlgorithm?: pulumi.Input<string>;
    scopes: pulumi.Input<string>;
    tokenEndpoint?: pulumi.Input<string>;
    userInfoEndpoint?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoOidcProviderSettingRequestParameter {
    applicationEndpointOverride: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSloServiceEndpoint {
    binding: pulumi.Input<string>;
    responseUrl?: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMapping {
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingAttributeContractFulfillment>[]>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSource>[]>;
    issuanceCriteria?: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSource>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoOAuthMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoSsoServiceEndpoint {
    binding: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpBrowserSsoUrlWhitelistEntry {
    allowQueryAndFragment?: pulumi.Input<boolean>;
    requireHttps?: pulumi.Input<boolean>;
    validDomain?: pulumi.Input<string>;
    validPath?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMapping {
    accessTokenManagerMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMapping>[]>;
    idpOAuthAttributeContracts?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingIdpOAuthAttributeContract>[]>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMapping {
    accessTokenManagerRef: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingAccessTokenManagerRef>;
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingAttributeContractFulfillment>[]>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSource>[]>;
    issuanceCriteria?: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSource>[]>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingAccessTokenManagerRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingAccessTokenManagerMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingIdpOAuthAttributeContract {
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingIdpOAuthAttributeContractCoreAttribute>[]>;
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionIdpOauthGrantAttributeMappingIdpOAuthAttributeContractExtendedAttribute>[]>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingIdpOAuthAttributeContractCoreAttribute {
    masked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SpIdpConnectionIdpOauthGrantAttributeMappingIdpOAuthAttributeContractExtendedAttribute {
    masked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SpIdpConnectionMetadataReloadSetting {
    enableAutoMetadataUpdate?: pulumi.Input<boolean>;
    metadataUrlRef: pulumi.Input<inputs.SpIdpConnectionMetadataReloadSettingMetadataUrlRef>;
}

export interface SpIdpConnectionMetadataReloadSettingMetadataUrlRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionOidcClientCredential {
    clientId: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    encryptedSecret?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrust {
    attributeContracts: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustAttributeContract>[]>;
    generateLocalToken: pulumi.Input<boolean>;
    tokenGeneratorMappings?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMapping>[]>;
}

export interface SpIdpConnectionWsTrustAttributeContract {
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustAttributeContractCoreAttribute>[]>;
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustAttributeContractExtendedAttribute>[]>;
}

export interface SpIdpConnectionWsTrustAttributeContractCoreAttribute {
    masked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustAttributeContractExtendedAttribute {
    masked?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMapping {
    attributeContractFulfillments: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingAttributeContractFulfillment>[]>;
    customAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSource>[]>;
    defaultMapping?: pulumi.Input<boolean>;
    issuanceCriteria?: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteria>;
    jdbcAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSource>[]>;
    ldapAttributeSources?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSource>[]>;
    restrictedVirtualEntityIds?: pulumi.Input<pulumi.Input<string>[]>;
    spTokenGeneratorRef: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingSpTokenGeneratorRef>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.
     * Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The list of fields that can be used to filter a request to the custom data store.
     */
    filterFields: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceFilterField>[]>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.
     * Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingCustomAttributeSourceFilterField {
    /**
     * The name of this field.
     */
    name: pulumi.Input<string>;
    /**
     * The value of this field. Whether or not the value is required will be determined by plugin validation checks.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteria {
    /**
     * A list of conditional issuance criteria where existing attributes must satisfy their conditions against expected values in order for the transaction to continue.
     */
    conditionalCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteriaConditionalCriteria>[]>;
    /**
     * A list of expression issuance criteria where the OGNL expressions must evaluate to true in order for the transaction to continue.
     */
    expressionCriterias?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteriaExpressionCriteria>[]>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteriaConditionalCriteria {
    /**
     * The name of the attribute to use in this issuance criterion.
     */
    attributeName: pulumi.Input<string>;
    /**
     * The condition that will be applied to the source attribute's value and the expected value.
     */
    condition: pulumi.Input<string>;
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteriaConditionalCriteriaSource>;
    /**
     * The expected value of this issuance criterion.
     */
    value: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteriaConditionalCriteriaSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingIssuanceCriteriaExpressionCriteria {
    /**
     * The error result to return if this issuance criterion fails. This error result will show up in the PingFederate server logs.
     */
    errorResult?: pulumi.Input<string>;
    /**
     * The OGNL expression to evaluate.
     */
    expression: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSourceDataStoreRef>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    description?: pulumi.Input<string>;
    /**
     * The JDBC WHERE clause used to query your data store to locate a user record.
     */
    filter: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Lists the table structure that stores information within a database. Some databases, such as Oracle, require a schema for a JDBC query. Other databases, such as MySQL, do not require a schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The name of the database table. The name is used to construct the SQL query to retrieve data from the data store.
     */
    table: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingJdbcAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSource {
    /**
     * A list of mappings from attribute names to their fulfillment values. This field is only valid for the SP Connection's Browser SSO mappings
     */
    attributeContractFulfillments?: pulumi.Input<pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSourceAttributeContractFulfillment>[]>;
    /**
     * The base DN to search from. If not specified, the search will start at the LDAP's root.
     */
    baseDn?: pulumi.Input<string>;
    /**
     * The advanced settings for binary LDAP attributes.
     */
    binaryAttributeSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Reference to the associated data store.
     */
    dataStoreRef: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSourceDataStoreRef>;
    /**
     * The description of this attribute source. The description needs to be unique amongst the attribute sources for the mapping.<br>Note: Required for APC-to-SP Adapter Mappings
     */
    description?: pulumi.Input<string>;
    /**
     * The ID that defines this attribute source. Only alphanumeric characters allowed.<br>Note: Required for OpenID Connect policy attribute sources, OAuth IdP adapter mappings, OAuth access token mappings and APC-to-SP Adapter Mappings. IdP Connections will ignore this property since it only allows one attribute source to be defined per mapping. IdP-to-SP Adapter Mappings can contain multiple attribute sources.
     */
    id?: pulumi.Input<string>;
    /**
     * Set this to true to return transitive group memberships for the 'memberOf' attribute.  This only applies for Active Directory data sources.  All other data sources will be set to false.
     */
    memberOfNestedGroup?: pulumi.Input<boolean>;
    /**
     * A list of LDAP attributes returned from search and available for mapping.
     */
    searchAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LDAP filter that will be used to lookup the objects from the directory.
     */
    searchFilter: pulumi.Input<string>;
    /**
     * Determines the node depth of the query.
     */
    searchScope: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSourceAttributeContractFulfillment {
    /**
     * Contract key value for the source.
     */
    keyName: pulumi.Input<string>;
    /**
     * The attribute value source.
     */
    source: pulumi.Input<inputs.SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSourceAttributeContractFulfillmentSource>;
    /**
     * The value for this attribute.
     */
    value?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSourceAttributeContractFulfillmentSource {
    /**
     * The attribute source ID that refers to the attribute source that this key references. In some resources, the ID is optional and will be ignored. In these cases the ID should be omitted. If the source type is not an attribute source then the ID can be omitted.
     */
    id?: pulumi.Input<string>;
    /**
     * A key that is meant to reference a source from which an attribute can be retrieved. This model is usually paired with a value which, depending on the SourceType, can be a hardcoded value or a reference to an attribute name specific to that SourceType. Not all values are applicable - a validation error will be returned for incorrect values.
     */
    type: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingLdapAttributeSourceDataStoreRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}

export interface SpIdpConnectionWsTrustTokenGeneratorMappingSpTokenGeneratorRef {
    /**
     * The ID of the resource.
     */
    id: pulumi.Input<string>;
    /**
     * A read-only URL that references the resource. If the resource is not currently URL-accessible, this property will be null.
     */
    location?: pulumi.Input<string>;
}
