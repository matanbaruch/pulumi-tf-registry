// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLdapDataStore(args: GetLdapDataStoreArgs, opts?: pulumi.InvokeOptions): Promise<GetLdapDataStoreResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getLdapDataStore:getLdapDataStore", {
        "id": args.id,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLdapDataStore.
 */
export interface GetLdapDataStoreArgs {
    id?: string;
    name: string;
}

/**
 * A collection of values returned by getLdapDataStore.
 */
export interface GetLdapDataStoreResult {
    readonly binaryAttributes: string[];
    readonly bindAnonymously: boolean;
    readonly connectionTimeout: number;
    readonly createIfNecessary: boolean;
    readonly dataStoreId: string;
    readonly dnsTtl: number;
    readonly encryptedPassword: string;
    readonly followLdapReferrals: boolean;
    readonly hostnames: string[];
    readonly hostnamesTags: outputs.GetLdapDataStoreHostnamesTag[];
    readonly id: string;
    readonly ldapDnsSrvPrefix: string;
    readonly ldapType: string;
    readonly ldapsDnsSrvPrefix: string;
    readonly maskAttributeValues: boolean;
    readonly maxConnections: number;
    readonly maxWait: number;
    readonly minConnections: number;
    readonly name: string;
    readonly password: string;
    readonly readTimeout: number;
    readonly testOnBorrow: boolean;
    readonly testOnReturn: boolean;
    readonly timeBetweenEvictions: number;
    readonly useDnsSrvRecords: boolean;
    readonly useSsl: boolean;
    readonly userDn: string;
    readonly verifyHost: boolean;
}
export function getLdapDataStoreOutput(args: GetLdapDataStoreOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLdapDataStoreResult> {
    return pulumi.output(args).apply((a: any) => getLdapDataStore(a, opts))
}

/**
 * A collection of arguments for invoking getLdapDataStore.
 */
export interface GetLdapDataStoreOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
