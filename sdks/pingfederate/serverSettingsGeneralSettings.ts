// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ServerSettingsGeneralSettings extends pulumi.CustomResource {
    /**
     * Get an existing ServerSettingsGeneralSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerSettingsGeneralSettingsState, opts?: pulumi.CustomResourceOptions): ServerSettingsGeneralSettings {
        return new ServerSettingsGeneralSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/serverSettingsGeneralSettings:ServerSettingsGeneralSettings';

    /**
     * Returns true if the given object is an instance of ServerSettingsGeneralSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerSettingsGeneralSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerSettingsGeneralSettings.__pulumiType;
    }

    /**
     * Determines how long (in seconds) the result of testing a datastore connection is cached. The default is `300`.
     */
    public readonly datastoreValidationIntervalSecs!: pulumi.Output<number>;
    /**
     * Boolean that disables automatic connection validation when set to true. The default is `false`.
     */
    public readonly disableAutomaticConnectionValidation!: pulumi.Output<boolean>;
    /**
     * Determines the level of transaction logging for all identity provider connections. The default is `DONT_OVERRIDE`, in
     * which case the logging level will be determined by each individual IdP connection. Options are `DONT_OVERRIDE`, `NONE`,
     * `FULL`, `STANDARD`, `ENHANCED`.
     */
    public readonly idpConnectionTransactionLoggingOverride!: pulumi.Output<string>;
    /**
     * HTTP request header for retrieving correlation ID.
     */
    public readonly requestHeaderForCorrelationId!: pulumi.Output<string>;
    /**
     * Determines the level of transaction logging for all service provider connections. The default is `DONT_OVERRIDE`, in
     * which case the logging level will be determined by each individual SP connection. Options are `DONT_OVERRIDE`, `NONE`,
     * `FULL`, `STANDARD`, `ENHANCED`.
     */
    public readonly spConnectionTransactionLoggingOverride!: pulumi.Output<string>;

    /**
     * Create a ServerSettingsGeneralSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServerSettingsGeneralSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerSettingsGeneralSettingsArgs | ServerSettingsGeneralSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerSettingsGeneralSettingsState | undefined;
            resourceInputs["datastoreValidationIntervalSecs"] = state ? state.datastoreValidationIntervalSecs : undefined;
            resourceInputs["disableAutomaticConnectionValidation"] = state ? state.disableAutomaticConnectionValidation : undefined;
            resourceInputs["idpConnectionTransactionLoggingOverride"] = state ? state.idpConnectionTransactionLoggingOverride : undefined;
            resourceInputs["requestHeaderForCorrelationId"] = state ? state.requestHeaderForCorrelationId : undefined;
            resourceInputs["spConnectionTransactionLoggingOverride"] = state ? state.spConnectionTransactionLoggingOverride : undefined;
        } else {
            const args = argsOrState as ServerSettingsGeneralSettingsArgs | undefined;
            resourceInputs["datastoreValidationIntervalSecs"] = args ? args.datastoreValidationIntervalSecs : undefined;
            resourceInputs["disableAutomaticConnectionValidation"] = args ? args.disableAutomaticConnectionValidation : undefined;
            resourceInputs["idpConnectionTransactionLoggingOverride"] = args ? args.idpConnectionTransactionLoggingOverride : undefined;
            resourceInputs["requestHeaderForCorrelationId"] = args ? args.requestHeaderForCorrelationId : undefined;
            resourceInputs["spConnectionTransactionLoggingOverride"] = args ? args.spConnectionTransactionLoggingOverride : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerSettingsGeneralSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ServerSettingsGeneralSettings resources.
 */
export interface ServerSettingsGeneralSettingsState {
    /**
     * Determines how long (in seconds) the result of testing a datastore connection is cached. The default is `300`.
     */
    datastoreValidationIntervalSecs?: pulumi.Input<number>;
    /**
     * Boolean that disables automatic connection validation when set to true. The default is `false`.
     */
    disableAutomaticConnectionValidation?: pulumi.Input<boolean>;
    /**
     * Determines the level of transaction logging for all identity provider connections. The default is `DONT_OVERRIDE`, in
     * which case the logging level will be determined by each individual IdP connection. Options are `DONT_OVERRIDE`, `NONE`,
     * `FULL`, `STANDARD`, `ENHANCED`.
     */
    idpConnectionTransactionLoggingOverride?: pulumi.Input<string>;
    /**
     * HTTP request header for retrieving correlation ID.
     */
    requestHeaderForCorrelationId?: pulumi.Input<string>;
    /**
     * Determines the level of transaction logging for all service provider connections. The default is `DONT_OVERRIDE`, in
     * which case the logging level will be determined by each individual SP connection. Options are `DONT_OVERRIDE`, `NONE`,
     * `FULL`, `STANDARD`, `ENHANCED`.
     */
    spConnectionTransactionLoggingOverride?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerSettingsGeneralSettings resource.
 */
export interface ServerSettingsGeneralSettingsArgs {
    /**
     * Determines how long (in seconds) the result of testing a datastore connection is cached. The default is `300`.
     */
    datastoreValidationIntervalSecs?: pulumi.Input<number>;
    /**
     * Boolean that disables automatic connection validation when set to true. The default is `false`.
     */
    disableAutomaticConnectionValidation?: pulumi.Input<boolean>;
    /**
     * Determines the level of transaction logging for all identity provider connections. The default is `DONT_OVERRIDE`, in
     * which case the logging level will be determined by each individual IdP connection. Options are `DONT_OVERRIDE`, `NONE`,
     * `FULL`, `STANDARD`, `ENHANCED`.
     */
    idpConnectionTransactionLoggingOverride?: pulumi.Input<string>;
    /**
     * HTTP request header for retrieving correlation ID.
     */
    requestHeaderForCorrelationId?: pulumi.Input<string>;
    /**
     * Determines the level of transaction logging for all service provider connections. The default is `DONT_OVERRIDE`, in
     * which case the logging level will be determined by each individual SP connection. Options are `DONT_OVERRIDE`, `NONE`,
     * `FULL`, `STANDARD`, `ENHANCED`.
     */
    spConnectionTransactionLoggingOverride?: pulumi.Input<string>;
}
