// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OauthOpenidConnectPolicy extends pulumi.CustomResource {
    /**
     * Get an existing OauthOpenidConnectPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OauthOpenidConnectPolicyState, opts?: pulumi.CustomResourceOptions): OauthOpenidConnectPolicy {
        return new OauthOpenidConnectPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/oauthOpenidConnectPolicy:OauthOpenidConnectPolicy';

    /**
     * Returns true if the given object is an instance of OauthOpenidConnectPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OauthOpenidConnectPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OauthOpenidConnectPolicy.__pulumiType;
    }

    /**
     * The access token manager associated with this Open ID Connect policy.
     */
    public readonly accessTokenManagerRef!: pulumi.Output<outputs.OauthOpenidConnectPolicyAccessTokenManagerRef>;
    /**
     * The list of attributes that will be returned to OAuth clients in response to requests received at the PingFederate
     * UserInfo endpoint.
     */
    public readonly attributeContract!: pulumi.Output<outputs.OauthOpenidConnectPolicyAttributeContract | undefined>;
    /**
     * The attributes mapping from attribute sources to attribute targets.
     */
    public readonly attributeMapping!: pulumi.Output<outputs.OauthOpenidConnectPolicyAttributeMapping | undefined>;
    /**
     * The ID Token Lifetime, in minutes. The default value is 5.
     */
    public readonly idTokenLifetime!: pulumi.Output<number | undefined>;
    /**
     * Determines whether the State Hash should be included in the ID token.
     */
    public readonly includeShashInIdToken!: pulumi.Output<boolean | undefined>;
    /**
     * Determines whether a Session Reference Identifier is included in the ID token.
     */
    public readonly includeSriInIdToken!: pulumi.Output<boolean | undefined>;
    /**
     * @deprecated Deprecated
     */
    public readonly includeUserInIdToken!: pulumi.Output<boolean | undefined>;
    /**
     * Determines whether the User Info is always included in the ID token.
     */
    public readonly includeUserInfoInIdToken!: pulumi.Output<boolean | undefined>;
    /**
     * The name used for display in UI screens.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The policy ID used internally.
     */
    public readonly policyId!: pulumi.Output<string>;
    /**
     * Determines whether an ID Token should be returned when refresh grant is requested or not.
     */
    public readonly returnIdTokenOnRefreshGrant!: pulumi.Output<boolean | undefined>;
    /**
     * The attribute scope mappings from scopes to attribute names.
     */
    public readonly scopeAttributeMappings!: pulumi.Output<outputs.OauthOpenidConnectPolicyScopeAttributeMapping[] | undefined>;
    public readonly timeouts!: pulumi.Output<outputs.OauthOpenidConnectPolicyTimeouts | undefined>;

    /**
     * Create a OauthOpenidConnectPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OauthOpenidConnectPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OauthOpenidConnectPolicyArgs | OauthOpenidConnectPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OauthOpenidConnectPolicyState | undefined;
            resourceInputs["accessTokenManagerRef"] = state ? state.accessTokenManagerRef : undefined;
            resourceInputs["attributeContract"] = state ? state.attributeContract : undefined;
            resourceInputs["attributeMapping"] = state ? state.attributeMapping : undefined;
            resourceInputs["idTokenLifetime"] = state ? state.idTokenLifetime : undefined;
            resourceInputs["includeShashInIdToken"] = state ? state.includeShashInIdToken : undefined;
            resourceInputs["includeSriInIdToken"] = state ? state.includeSriInIdToken : undefined;
            resourceInputs["includeUserInIdToken"] = state ? state.includeUserInIdToken : undefined;
            resourceInputs["includeUserInfoInIdToken"] = state ? state.includeUserInfoInIdToken : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["returnIdTokenOnRefreshGrant"] = state ? state.returnIdTokenOnRefreshGrant : undefined;
            resourceInputs["scopeAttributeMappings"] = state ? state.scopeAttributeMappings : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
        } else {
            const args = argsOrState as OauthOpenidConnectPolicyArgs | undefined;
            if ((!args || args.accessTokenManagerRef === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessTokenManagerRef'");
            }
            if ((!args || args.policyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyId'");
            }
            resourceInputs["accessTokenManagerRef"] = args ? args.accessTokenManagerRef : undefined;
            resourceInputs["attributeContract"] = args ? args.attributeContract : undefined;
            resourceInputs["attributeMapping"] = args ? args.attributeMapping : undefined;
            resourceInputs["idTokenLifetime"] = args ? args.idTokenLifetime : undefined;
            resourceInputs["includeShashInIdToken"] = args ? args.includeShashInIdToken : undefined;
            resourceInputs["includeSriInIdToken"] = args ? args.includeSriInIdToken : undefined;
            resourceInputs["includeUserInIdToken"] = args ? args.includeUserInIdToken : undefined;
            resourceInputs["includeUserInfoInIdToken"] = args ? args.includeUserInfoInIdToken : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["returnIdTokenOnRefreshGrant"] = args ? args.returnIdTokenOnRefreshGrant : undefined;
            resourceInputs["scopeAttributeMappings"] = args ? args.scopeAttributeMappings : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OauthOpenidConnectPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OauthOpenidConnectPolicy resources.
 */
export interface OauthOpenidConnectPolicyState {
    /**
     * The access token manager associated with this Open ID Connect policy.
     */
    accessTokenManagerRef?: pulumi.Input<inputs.OauthOpenidConnectPolicyAccessTokenManagerRef>;
    /**
     * The list of attributes that will be returned to OAuth clients in response to requests received at the PingFederate
     * UserInfo endpoint.
     */
    attributeContract?: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeContract>;
    /**
     * The attributes mapping from attribute sources to attribute targets.
     */
    attributeMapping?: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMapping>;
    /**
     * The ID Token Lifetime, in minutes. The default value is 5.
     */
    idTokenLifetime?: pulumi.Input<number>;
    /**
     * Determines whether the State Hash should be included in the ID token.
     */
    includeShashInIdToken?: pulumi.Input<boolean>;
    /**
     * Determines whether a Session Reference Identifier is included in the ID token.
     */
    includeSriInIdToken?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    includeUserInIdToken?: pulumi.Input<boolean>;
    /**
     * Determines whether the User Info is always included in the ID token.
     */
    includeUserInfoInIdToken?: pulumi.Input<boolean>;
    /**
     * The name used for display in UI screens.
     */
    name?: pulumi.Input<string>;
    /**
     * The policy ID used internally.
     */
    policyId?: pulumi.Input<string>;
    /**
     * Determines whether an ID Token should be returned when refresh grant is requested or not.
     */
    returnIdTokenOnRefreshGrant?: pulumi.Input<boolean>;
    /**
     * The attribute scope mappings from scopes to attribute names.
     */
    scopeAttributeMappings?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyScopeAttributeMapping>[]>;
    timeouts?: pulumi.Input<inputs.OauthOpenidConnectPolicyTimeouts>;
}

/**
 * The set of arguments for constructing a OauthOpenidConnectPolicy resource.
 */
export interface OauthOpenidConnectPolicyArgs {
    /**
     * The access token manager associated with this Open ID Connect policy.
     */
    accessTokenManagerRef: pulumi.Input<inputs.OauthOpenidConnectPolicyAccessTokenManagerRef>;
    /**
     * The list of attributes that will be returned to OAuth clients in response to requests received at the PingFederate
     * UserInfo endpoint.
     */
    attributeContract?: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeContract>;
    /**
     * The attributes mapping from attribute sources to attribute targets.
     */
    attributeMapping?: pulumi.Input<inputs.OauthOpenidConnectPolicyAttributeMapping>;
    /**
     * The ID Token Lifetime, in minutes. The default value is 5.
     */
    idTokenLifetime?: pulumi.Input<number>;
    /**
     * Determines whether the State Hash should be included in the ID token.
     */
    includeShashInIdToken?: pulumi.Input<boolean>;
    /**
     * Determines whether a Session Reference Identifier is included in the ID token.
     */
    includeSriInIdToken?: pulumi.Input<boolean>;
    /**
     * @deprecated Deprecated
     */
    includeUserInIdToken?: pulumi.Input<boolean>;
    /**
     * Determines whether the User Info is always included in the ID token.
     */
    includeUserInfoInIdToken?: pulumi.Input<boolean>;
    /**
     * The name used for display in UI screens.
     */
    name?: pulumi.Input<string>;
    /**
     * The policy ID used internally.
     */
    policyId: pulumi.Input<string>;
    /**
     * Determines whether an ID Token should be returned when refresh grant is requested or not.
     */
    returnIdTokenOnRefreshGrant?: pulumi.Input<boolean>;
    /**
     * The attribute scope mappings from scopes to attribute names.
     */
    scopeAttributeMappings?: pulumi.Input<pulumi.Input<inputs.OauthOpenidConnectPolicyScopeAttributeMapping>[]>;
    timeouts?: pulumi.Input<inputs.OauthOpenidConnectPolicyTimeouts>;
}
