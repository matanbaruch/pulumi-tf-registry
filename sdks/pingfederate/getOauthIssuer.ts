// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getOauthIssuer(args: GetOauthIssuerArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthIssuerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getOauthIssuer:getOauthIssuer", {
        "issuerId": args.issuerId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOauthIssuer.
 */
export interface GetOauthIssuerArgs {
    issuerId: string;
}

/**
 * A collection of values returned by getOauthIssuer.
 */
export interface GetOauthIssuerResult {
    readonly description: string;
    readonly host: string;
    readonly id: string;
    readonly issuerId: string;
    readonly name: string;
    readonly path: string;
}
export function getOauthIssuerOutput(args: GetOauthIssuerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthIssuerResult> {
    return pulumi.output(args).apply((a: any) => getOauthIssuer(a, opts))
}

/**
 * A collection of arguments for invoking getOauthIssuer.
 */
export interface GetOauthIssuerOutputArgs {
    issuerId: pulumi.Input<string>;
}
