// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OauthIssuer extends pulumi.CustomResource {
    /**
     * Get an existing OauthIssuer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OauthIssuerState, opts?: pulumi.CustomResourceOptions): OauthIssuer {
        return new OauthIssuer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/oauthIssuer:OauthIssuer';

    /**
     * Returns true if the given object is an instance of OauthIssuer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OauthIssuer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OauthIssuer.__pulumiType;
    }

    /**
     * The description of this virtual issuer.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The hostname of this virtual issuer.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * The persistent, unique ID for the virtual issuer. It can be any combination of `[a-zA-Z0-9._-]`. This property is
     * system-assigned if not specified. This property cannot be changed after initial creation.
     */
    public readonly issuerId!: pulumi.Output<string>;
    /**
     * The name of this virtual issuer with a unique value.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The path of this virtual issuer. Path must start with a `/`, but cannot end with `/`.
     */
    public readonly path!: pulumi.Output<string | undefined>;

    /**
     * Create a OauthIssuer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OauthIssuerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OauthIssuerArgs | OauthIssuerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OauthIssuerState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["issuerId"] = state ? state.issuerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
        } else {
            const args = argsOrState as OauthIssuerArgs | undefined;
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["issuerId"] = args ? args.issuerId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OauthIssuer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OauthIssuer resources.
 */
export interface OauthIssuerState {
    /**
     * The description of this virtual issuer.
     */
    description?: pulumi.Input<string>;
    /**
     * The hostname of this virtual issuer.
     */
    host?: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the virtual issuer. It can be any combination of `[a-zA-Z0-9._-]`. This property is
     * system-assigned if not specified. This property cannot be changed after initial creation.
     */
    issuerId?: pulumi.Input<string>;
    /**
     * The name of this virtual issuer with a unique value.
     */
    name?: pulumi.Input<string>;
    /**
     * The path of this virtual issuer. Path must start with a `/`, but cannot end with `/`.
     */
    path?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OauthIssuer resource.
 */
export interface OauthIssuerArgs {
    /**
     * The description of this virtual issuer.
     */
    description?: pulumi.Input<string>;
    /**
     * The hostname of this virtual issuer.
     */
    host: pulumi.Input<string>;
    /**
     * The persistent, unique ID for the virtual issuer. It can be any combination of `[a-zA-Z0-9._-]`. This property is
     * system-assigned if not specified. This property cannot be changed after initial creation.
     */
    issuerId?: pulumi.Input<string>;
    /**
     * The name of this virtual issuer with a unique value.
     */
    name?: pulumi.Input<string>;
    /**
     * The path of this virtual issuer. Path must start with a `/`, but cannot end with `/`.
     */
    path?: pulumi.Input<string>;
}
