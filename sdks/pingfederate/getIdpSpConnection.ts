// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdpSpConnection(args: GetIdpSpConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetIdpSpConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getIdpSpConnection:getIdpSpConnection", {
        "connectionId": args.connectionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdpSpConnection.
 */
export interface GetIdpSpConnectionArgs {
    connectionId: string;
}

/**
 * A collection of values returned by getIdpSpConnection.
 */
export interface GetIdpSpConnectionResult {
    readonly active: boolean;
    readonly additionalAllowedEntitiesConfiguration: outputs.GetIdpSpConnectionAdditionalAllowedEntitiesConfiguration;
    readonly applicationIconUrl: string;
    readonly applicationName: string;
    readonly attributeQuery: outputs.GetIdpSpConnectionAttributeQuery;
    readonly baseUrl: string;
    readonly connectionId: string;
    readonly connectionTargetType: string;
    readonly contactInfo: outputs.GetIdpSpConnectionContactInfo;
    readonly creationDate: string;
    readonly credentials: outputs.GetIdpSpConnectionCredentials;
    readonly defaultVirtualEntityId: string;
    readonly entityId: string;
    readonly extendedProperties: {[key: string]: outputs.GetIdpSpConnectionExtendedProperties};
    readonly id: string;
    readonly licenseConnectionGroup: string;
    readonly loggingMode: string;
    readonly metadataReloadSettings: outputs.GetIdpSpConnectionMetadataReloadSettings;
    readonly name: string;
    readonly outboundProvision: outputs.GetIdpSpConnectionOutboundProvision;
    readonly spBrowserSso: outputs.GetIdpSpConnectionSpBrowserSso;
    readonly type: string;
    readonly virtualEntityIds: string[];
    readonly wsTrust: outputs.GetIdpSpConnectionWsTrust;
}
export function getIdpSpConnectionOutput(args: GetIdpSpConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdpSpConnectionResult> {
    return pulumi.output(args).apply((a: any) => getIdpSpConnection(a, opts))
}

/**
 * A collection of arguments for invoking getIdpSpConnection.
 */
export interface GetIdpSpConnectionOutputArgs {
    connectionId: pulumi.Input<string>;
}
