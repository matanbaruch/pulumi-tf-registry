// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPasswordCredentialValidator(args: GetPasswordCredentialValidatorArgs, opts?: pulumi.InvokeOptions): Promise<GetPasswordCredentialValidatorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getPasswordCredentialValidator:getPasswordCredentialValidator", {
        "validatorId": args.validatorId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPasswordCredentialValidator.
 */
export interface GetPasswordCredentialValidatorArgs {
    validatorId: string;
}

/**
 * A collection of values returned by getPasswordCredentialValidator.
 */
export interface GetPasswordCredentialValidatorResult {
    readonly attributeContract: outputs.GetPasswordCredentialValidatorAttributeContract;
    readonly configuration: outputs.GetPasswordCredentialValidatorConfiguration;
    readonly id: string;
    readonly name: string;
    readonly parentRef: outputs.GetPasswordCredentialValidatorParentRef;
    readonly pluginDescriptorRef: outputs.GetPasswordCredentialValidatorPluginDescriptorRef;
    readonly validatorId: string;
}
export function getPasswordCredentialValidatorOutput(args: GetPasswordCredentialValidatorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPasswordCredentialValidatorResult> {
    return pulumi.output(args).apply((a: any) => getPasswordCredentialValidator(a, opts))
}

/**
 * A collection of arguments for invoking getPasswordCredentialValidator.
 */
export interface GetPasswordCredentialValidatorOutputArgs {
    validatorId: pulumi.Input<string>;
}
