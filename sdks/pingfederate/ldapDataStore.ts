// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LdapDataStore extends pulumi.CustomResource {
    /**
     * Get an existing LdapDataStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LdapDataStoreState, opts?: pulumi.CustomResourceOptions): LdapDataStore {
        return new LdapDataStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/ldapDataStore:LdapDataStore';

    /**
     * Returns true if the given object is an instance of LdapDataStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LdapDataStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LdapDataStore.__pulumiType;
    }

    /**
     * The list of LDAP attributes to be handled as binary data.
     */
    public readonly binaryAttributes!: pulumi.Output<string[] | undefined>;
    /**
     * Whether username and password are required. The default value is false.
     */
    public readonly bindAnonymously!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum number of milliseconds that a connection attempt should be allowed to continue before returning an error. A
     * value of -1 causes the pool to wait indefinitely. Omitting this attribute will set the value to the default value.
     */
    public readonly connectionTimeout!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether temporary connections can be created when the Maximum Connections threshold is reached.
     */
    public readonly createIfNecessary!: pulumi.Output<boolean | undefined>;
    /**
     * The persistent, unique ID for the data store. It can be any combination of [a-zA-Z0-9._-]. This property is
     * system-assigned if not specified.
     */
    public readonly dataStoreId!: pulumi.Output<string>;
    /**
     * The maximum time in milliseconds that DNS information are cached. Omitting this attribute will set the value to the
     * default value.
     */
    public readonly dnsTtl!: pulumi.Output<number | undefined>;
    /**
     * The encrypted password credential required to access the data store. If you do not want to update the stored value, this
     * attribute should be passed back unchanged.
     */
    public readonly encryptedPassword!: pulumi.Output<string>;
    /**
     * Follow LDAP Referrals in the domain tree. The default value is false. This property does not apply to PingDirectory as
     * this functionality is configured in PingDirectory.
     */
    public readonly followLdapReferrals!: pulumi.Output<boolean | undefined>;
    /**
     * The default LDAP host names. This field is required if no mapping for host names and tags are specified.
     */
    public readonly hostnames!: pulumi.Output<string[] | undefined>;
    /**
     * The set of host names and associated tags for this LDAP data store.
     */
    public readonly hostnamesTags!: pulumi.Output<outputs.LdapDataStoreHostnamesTag[] | undefined>;
    /**
     * The prefix value used to discover LDAP DNS SRV record. Omitting this attribute will set the value to the default value.
     */
    public readonly ldapDnsSrvPrefix!: pulumi.Output<string | undefined>;
    /**
     * A type that allows PingFederate to configure many provisioning settings automatically. The 'UNBOUNDID_DS' type has been
     * deprecated, please use the 'PING_DIRECTORY' type instead.
     */
    public readonly ldapType!: pulumi.Output<string>;
    /**
     * The prefix value used to discover LDAPs DNS SRV record. Omitting this attribute will set the value to the default value.
     */
    public readonly ldapsDnsSrvPrefix!: pulumi.Output<string | undefined>;
    /**
     * Whether attribute values should be masked in the log.
     */
    public readonly maskAttributeValues!: pulumi.Output<boolean | undefined>;
    /**
     * The largest number of active connections that can remain in each pool without releasing extra ones. Omitting this
     * attribute will set the value to the default value.
     */
    public readonly maxConnections!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of milliseconds the pool waits for a connection to become available when trying to obtain a
     * connection from the pool. Omitting this attribute or setting a value of -1 causes the pool not to wait at all and to
     * either create a new connection or produce an error (when no connections are available).
     */
    public readonly maxWait!: pulumi.Output<number | undefined>;
    /**
     * The smallest number of connections that can remain in each pool, without creating extra ones. Omitting this attribute
     * will set the value to the default value.
     */
    public readonly minConnections!: pulumi.Output<number | undefined>;
    /**
     * The data store name with a unique value across all data sources. Omitting this attribute will set the value to a
     * combination of the hostname(s) and the principal.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The password credential required to access the data store. GETs will not return this attribute. To update this field,
     * specify the new value in this attribute.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The maximum number of milliseconds a connection waits for a response to be returned before producing an error. A value
     * of -1 causes the connection to wait indefinitely. Omitting this attribute will set the value to the default value.
     */
    public readonly readTimeout!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether objects are validated before being borrowed from the pool.
     */
    public readonly testOnBorrow!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether objects are validated before being returned to the pool.
     */
    public readonly testOnReturn!: pulumi.Output<boolean | undefined>;
    /**
     * The frequency, in milliseconds, that the evictor cleans up the connections in the pool. A value of -1 disables the
     * evictor. Omitting this attribute will set the value to the default value.
     */
    public readonly timeBetweenEvictions!: pulumi.Output<number | undefined>;
    /**
     * Use DNS SRV Records to discover LDAP server information. The default value is false.
     */
    public readonly useDnsSrvRecords!: pulumi.Output<boolean | undefined>;
    /**
     * Connects to the LDAP data store using secure SSL/TLS encryption (LDAPS). The default value is false.
     */
    public readonly useSsl!: pulumi.Output<boolean | undefined>;
    /**
     * The username credential required to access the data store.
     */
    public readonly userDn!: pulumi.Output<string | undefined>;
    /**
     * Verifies that the presented server certificate includes the address to which the client intended to establish a
     * connection. Omitting this attribute will set the value to true.
     */
    public readonly verifyHost!: pulumi.Output<boolean | undefined>;

    /**
     * Create a LdapDataStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LdapDataStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LdapDataStoreArgs | LdapDataStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LdapDataStoreState | undefined;
            resourceInputs["binaryAttributes"] = state ? state.binaryAttributes : undefined;
            resourceInputs["bindAnonymously"] = state ? state.bindAnonymously : undefined;
            resourceInputs["connectionTimeout"] = state ? state.connectionTimeout : undefined;
            resourceInputs["createIfNecessary"] = state ? state.createIfNecessary : undefined;
            resourceInputs["dataStoreId"] = state ? state.dataStoreId : undefined;
            resourceInputs["dnsTtl"] = state ? state.dnsTtl : undefined;
            resourceInputs["encryptedPassword"] = state ? state.encryptedPassword : undefined;
            resourceInputs["followLdapReferrals"] = state ? state.followLdapReferrals : undefined;
            resourceInputs["hostnames"] = state ? state.hostnames : undefined;
            resourceInputs["hostnamesTags"] = state ? state.hostnamesTags : undefined;
            resourceInputs["ldapDnsSrvPrefix"] = state ? state.ldapDnsSrvPrefix : undefined;
            resourceInputs["ldapType"] = state ? state.ldapType : undefined;
            resourceInputs["ldapsDnsSrvPrefix"] = state ? state.ldapsDnsSrvPrefix : undefined;
            resourceInputs["maskAttributeValues"] = state ? state.maskAttributeValues : undefined;
            resourceInputs["maxConnections"] = state ? state.maxConnections : undefined;
            resourceInputs["maxWait"] = state ? state.maxWait : undefined;
            resourceInputs["minConnections"] = state ? state.minConnections : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["readTimeout"] = state ? state.readTimeout : undefined;
            resourceInputs["testOnBorrow"] = state ? state.testOnBorrow : undefined;
            resourceInputs["testOnReturn"] = state ? state.testOnReturn : undefined;
            resourceInputs["timeBetweenEvictions"] = state ? state.timeBetweenEvictions : undefined;
            resourceInputs["useDnsSrvRecords"] = state ? state.useDnsSrvRecords : undefined;
            resourceInputs["useSsl"] = state ? state.useSsl : undefined;
            resourceInputs["userDn"] = state ? state.userDn : undefined;
            resourceInputs["verifyHost"] = state ? state.verifyHost : undefined;
        } else {
            const args = argsOrState as LdapDataStoreArgs | undefined;
            if ((!args || args.ldapType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ldapType'");
            }
            resourceInputs["binaryAttributes"] = args ? args.binaryAttributes : undefined;
            resourceInputs["bindAnonymously"] = args ? args.bindAnonymously : undefined;
            resourceInputs["connectionTimeout"] = args ? args.connectionTimeout : undefined;
            resourceInputs["createIfNecessary"] = args ? args.createIfNecessary : undefined;
            resourceInputs["dataStoreId"] = args ? args.dataStoreId : undefined;
            resourceInputs["dnsTtl"] = args ? args.dnsTtl : undefined;
            resourceInputs["encryptedPassword"] = args ? args.encryptedPassword : undefined;
            resourceInputs["followLdapReferrals"] = args ? args.followLdapReferrals : undefined;
            resourceInputs["hostnames"] = args ? args.hostnames : undefined;
            resourceInputs["hostnamesTags"] = args ? args.hostnamesTags : undefined;
            resourceInputs["ldapDnsSrvPrefix"] = args ? args.ldapDnsSrvPrefix : undefined;
            resourceInputs["ldapType"] = args ? args.ldapType : undefined;
            resourceInputs["ldapsDnsSrvPrefix"] = args ? args.ldapsDnsSrvPrefix : undefined;
            resourceInputs["maskAttributeValues"] = args ? args.maskAttributeValues : undefined;
            resourceInputs["maxConnections"] = args ? args.maxConnections : undefined;
            resourceInputs["maxWait"] = args ? args.maxWait : undefined;
            resourceInputs["minConnections"] = args ? args.minConnections : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["readTimeout"] = args ? args.readTimeout : undefined;
            resourceInputs["testOnBorrow"] = args ? args.testOnBorrow : undefined;
            resourceInputs["testOnReturn"] = args ? args.testOnReturn : undefined;
            resourceInputs["timeBetweenEvictions"] = args ? args.timeBetweenEvictions : undefined;
            resourceInputs["useDnsSrvRecords"] = args ? args.useDnsSrvRecords : undefined;
            resourceInputs["useSsl"] = args ? args.useSsl : undefined;
            resourceInputs["userDn"] = args ? args.userDn : undefined;
            resourceInputs["verifyHost"] = args ? args.verifyHost : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LdapDataStore.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LdapDataStore resources.
 */
export interface LdapDataStoreState {
    /**
     * The list of LDAP attributes to be handled as binary data.
     */
    binaryAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether username and password are required. The default value is false.
     */
    bindAnonymously?: pulumi.Input<boolean>;
    /**
     * The maximum number of milliseconds that a connection attempt should be allowed to continue before returning an error. A
     * value of -1 causes the pool to wait indefinitely. Omitting this attribute will set the value to the default value.
     */
    connectionTimeout?: pulumi.Input<number>;
    /**
     * Indicates whether temporary connections can be created when the Maximum Connections threshold is reached.
     */
    createIfNecessary?: pulumi.Input<boolean>;
    /**
     * The persistent, unique ID for the data store. It can be any combination of [a-zA-Z0-9._-]. This property is
     * system-assigned if not specified.
     */
    dataStoreId?: pulumi.Input<string>;
    /**
     * The maximum time in milliseconds that DNS information are cached. Omitting this attribute will set the value to the
     * default value.
     */
    dnsTtl?: pulumi.Input<number>;
    /**
     * The encrypted password credential required to access the data store. If you do not want to update the stored value, this
     * attribute should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * Follow LDAP Referrals in the domain tree. The default value is false. This property does not apply to PingDirectory as
     * this functionality is configured in PingDirectory.
     */
    followLdapReferrals?: pulumi.Input<boolean>;
    /**
     * The default LDAP host names. This field is required if no mapping for host names and tags are specified.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of host names and associated tags for this LDAP data store.
     */
    hostnamesTags?: pulumi.Input<pulumi.Input<inputs.LdapDataStoreHostnamesTag>[]>;
    /**
     * The prefix value used to discover LDAP DNS SRV record. Omitting this attribute will set the value to the default value.
     */
    ldapDnsSrvPrefix?: pulumi.Input<string>;
    /**
     * A type that allows PingFederate to configure many provisioning settings automatically. The 'UNBOUNDID_DS' type has been
     * deprecated, please use the 'PING_DIRECTORY' type instead.
     */
    ldapType?: pulumi.Input<string>;
    /**
     * The prefix value used to discover LDAPs DNS SRV record. Omitting this attribute will set the value to the default value.
     */
    ldapsDnsSrvPrefix?: pulumi.Input<string>;
    /**
     * Whether attribute values should be masked in the log.
     */
    maskAttributeValues?: pulumi.Input<boolean>;
    /**
     * The largest number of active connections that can remain in each pool without releasing extra ones. Omitting this
     * attribute will set the value to the default value.
     */
    maxConnections?: pulumi.Input<number>;
    /**
     * The maximum number of milliseconds the pool waits for a connection to become available when trying to obtain a
     * connection from the pool. Omitting this attribute or setting a value of -1 causes the pool not to wait at all and to
     * either create a new connection or produce an error (when no connections are available).
     */
    maxWait?: pulumi.Input<number>;
    /**
     * The smallest number of connections that can remain in each pool, without creating extra ones. Omitting this attribute
     * will set the value to the default value.
     */
    minConnections?: pulumi.Input<number>;
    /**
     * The data store name with a unique value across all data sources. Omitting this attribute will set the value to a
     * combination of the hostname(s) and the principal.
     */
    name?: pulumi.Input<string>;
    /**
     * The password credential required to access the data store. GETs will not return this attribute. To update this field,
     * specify the new value in this attribute.
     */
    password?: pulumi.Input<string>;
    /**
     * The maximum number of milliseconds a connection waits for a response to be returned before producing an error. A value
     * of -1 causes the connection to wait indefinitely. Omitting this attribute will set the value to the default value.
     */
    readTimeout?: pulumi.Input<number>;
    /**
     * Indicates whether objects are validated before being borrowed from the pool.
     */
    testOnBorrow?: pulumi.Input<boolean>;
    /**
     * Indicates whether objects are validated before being returned to the pool.
     */
    testOnReturn?: pulumi.Input<boolean>;
    /**
     * The frequency, in milliseconds, that the evictor cleans up the connections in the pool. A value of -1 disables the
     * evictor. Omitting this attribute will set the value to the default value.
     */
    timeBetweenEvictions?: pulumi.Input<number>;
    /**
     * Use DNS SRV Records to discover LDAP server information. The default value is false.
     */
    useDnsSrvRecords?: pulumi.Input<boolean>;
    /**
     * Connects to the LDAP data store using secure SSL/TLS encryption (LDAPS). The default value is false.
     */
    useSsl?: pulumi.Input<boolean>;
    /**
     * The username credential required to access the data store.
     */
    userDn?: pulumi.Input<string>;
    /**
     * Verifies that the presented server certificate includes the address to which the client intended to establish a
     * connection. Omitting this attribute will set the value to true.
     */
    verifyHost?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a LdapDataStore resource.
 */
export interface LdapDataStoreArgs {
    /**
     * The list of LDAP attributes to be handled as binary data.
     */
    binaryAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether username and password are required. The default value is false.
     */
    bindAnonymously?: pulumi.Input<boolean>;
    /**
     * The maximum number of milliseconds that a connection attempt should be allowed to continue before returning an error. A
     * value of -1 causes the pool to wait indefinitely. Omitting this attribute will set the value to the default value.
     */
    connectionTimeout?: pulumi.Input<number>;
    /**
     * Indicates whether temporary connections can be created when the Maximum Connections threshold is reached.
     */
    createIfNecessary?: pulumi.Input<boolean>;
    /**
     * The persistent, unique ID for the data store. It can be any combination of [a-zA-Z0-9._-]. This property is
     * system-assigned if not specified.
     */
    dataStoreId?: pulumi.Input<string>;
    /**
     * The maximum time in milliseconds that DNS information are cached. Omitting this attribute will set the value to the
     * default value.
     */
    dnsTtl?: pulumi.Input<number>;
    /**
     * The encrypted password credential required to access the data store. If you do not want to update the stored value, this
     * attribute should be passed back unchanged.
     */
    encryptedPassword?: pulumi.Input<string>;
    /**
     * Follow LDAP Referrals in the domain tree. The default value is false. This property does not apply to PingDirectory as
     * this functionality is configured in PingDirectory.
     */
    followLdapReferrals?: pulumi.Input<boolean>;
    /**
     * The default LDAP host names. This field is required if no mapping for host names and tags are specified.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The set of host names and associated tags for this LDAP data store.
     */
    hostnamesTags?: pulumi.Input<pulumi.Input<inputs.LdapDataStoreHostnamesTag>[]>;
    /**
     * The prefix value used to discover LDAP DNS SRV record. Omitting this attribute will set the value to the default value.
     */
    ldapDnsSrvPrefix?: pulumi.Input<string>;
    /**
     * A type that allows PingFederate to configure many provisioning settings automatically. The 'UNBOUNDID_DS' type has been
     * deprecated, please use the 'PING_DIRECTORY' type instead.
     */
    ldapType: pulumi.Input<string>;
    /**
     * The prefix value used to discover LDAPs DNS SRV record. Omitting this attribute will set the value to the default value.
     */
    ldapsDnsSrvPrefix?: pulumi.Input<string>;
    /**
     * Whether attribute values should be masked in the log.
     */
    maskAttributeValues?: pulumi.Input<boolean>;
    /**
     * The largest number of active connections that can remain in each pool without releasing extra ones. Omitting this
     * attribute will set the value to the default value.
     */
    maxConnections?: pulumi.Input<number>;
    /**
     * The maximum number of milliseconds the pool waits for a connection to become available when trying to obtain a
     * connection from the pool. Omitting this attribute or setting a value of -1 causes the pool not to wait at all and to
     * either create a new connection or produce an error (when no connections are available).
     */
    maxWait?: pulumi.Input<number>;
    /**
     * The smallest number of connections that can remain in each pool, without creating extra ones. Omitting this attribute
     * will set the value to the default value.
     */
    minConnections?: pulumi.Input<number>;
    /**
     * The data store name with a unique value across all data sources. Omitting this attribute will set the value to a
     * combination of the hostname(s) and the principal.
     */
    name?: pulumi.Input<string>;
    /**
     * The password credential required to access the data store. GETs will not return this attribute. To update this field,
     * specify the new value in this attribute.
     */
    password?: pulumi.Input<string>;
    /**
     * The maximum number of milliseconds a connection waits for a response to be returned before producing an error. A value
     * of -1 causes the connection to wait indefinitely. Omitting this attribute will set the value to the default value.
     */
    readTimeout?: pulumi.Input<number>;
    /**
     * Indicates whether objects are validated before being borrowed from the pool.
     */
    testOnBorrow?: pulumi.Input<boolean>;
    /**
     * Indicates whether objects are validated before being returned to the pool.
     */
    testOnReturn?: pulumi.Input<boolean>;
    /**
     * The frequency, in milliseconds, that the evictor cleans up the connections in the pool. A value of -1 disables the
     * evictor. Omitting this attribute will set the value to the default value.
     */
    timeBetweenEvictions?: pulumi.Input<number>;
    /**
     * Use DNS SRV Records to discover LDAP server information. The default value is false.
     */
    useDnsSrvRecords?: pulumi.Input<boolean>;
    /**
     * Connects to the LDAP data store using secure SSL/TLS encryption (LDAPS). The default value is false.
     */
    useSsl?: pulumi.Input<boolean>;
    /**
     * The username credential required to access the data store.
     */
    userDn?: pulumi.Input<string>;
    /**
     * Verifies that the presented server certificate includes the address to which the client intended to establish a
     * connection. Omitting this attribute will set the value to true.
     */
    verifyHost?: pulumi.Input<boolean>;
}
