// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LocalIdentityIdentityProfile extends pulumi.CustomResource {
    /**
     * Get an existing LocalIdentityIdentityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocalIdentityIdentityProfileState, opts?: pulumi.CustomResourceOptions): LocalIdentityIdentityProfile {
        return new LocalIdentityIdentityProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/localIdentityIdentityProfile:LocalIdentityIdentityProfile';

    /**
     * Returns true if the given object is an instance of LocalIdentityIdentityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocalIdentityIdentityProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalIdentityIdentityProfile.__pulumiType;
    }

    /**
     * The reference to the authentication policy contract to use for this local identity profile.
     */
    public readonly apcId!: pulumi.Output<outputs.LocalIdentityIdentityProfileApcId>;
    /**
     * The attribute update policy for authentication sources.
     */
    public readonly authSourceUpdatePolicy!: pulumi.Output<outputs.LocalIdentityIdentityProfileAuthSourceUpdatePolicy>;
    /**
     * The local identity authentication sources. Sources are unique.
     */
    public readonly authSources!: pulumi.Output<outputs.LocalIdentityIdentityProfileAuthSource[]>;
    /**
     * The local identity profile data store configuration.
     */
    public readonly dataStoreConfig!: pulumi.Output<outputs.LocalIdentityIdentityProfileDataStoreConfig | undefined>;
    /**
     * The local identity email verification configuration.
     */
    public readonly emailVerificationConfig!: pulumi.Output<outputs.LocalIdentityIdentityProfileEmailVerificationConfig>;
    /**
     * The local identity profile field configuration.
     */
    public readonly fieldConfig!: pulumi.Output<outputs.LocalIdentityIdentityProfileFieldConfig | undefined>;
    /**
     * The local identity profile name. Name is unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The local identity profile management configuration.
     */
    public readonly profileConfig!: pulumi.Output<outputs.LocalIdentityIdentityProfileProfileConfig | undefined>;
    /**
     * Whether the profile configuration is enabled or not. The default value is `false`.
     */
    public readonly profileEnabled!: pulumi.Output<boolean>;
    /**
     * The persistent, unique ID for the local identity profile. It can be any combination of `[a-zA-Z0-9._-]`.
     */
    public readonly profileId!: pulumi.Output<string>;
    /**
     * The local identity profile registration configuration.
     */
    public readonly registrationConfig!: pulumi.Output<outputs.LocalIdentityIdentityProfileRegistrationConfig | undefined>;
    /**
     * Whether the registration configuration is enabled or not. The default value is `false`.
     */
    public readonly registrationEnabled!: pulumi.Output<boolean>;

    /**
     * Create a LocalIdentityIdentityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalIdentityIdentityProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocalIdentityIdentityProfileArgs | LocalIdentityIdentityProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocalIdentityIdentityProfileState | undefined;
            resourceInputs["apcId"] = state ? state.apcId : undefined;
            resourceInputs["authSourceUpdatePolicy"] = state ? state.authSourceUpdatePolicy : undefined;
            resourceInputs["authSources"] = state ? state.authSources : undefined;
            resourceInputs["dataStoreConfig"] = state ? state.dataStoreConfig : undefined;
            resourceInputs["emailVerificationConfig"] = state ? state.emailVerificationConfig : undefined;
            resourceInputs["fieldConfig"] = state ? state.fieldConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["profileConfig"] = state ? state.profileConfig : undefined;
            resourceInputs["profileEnabled"] = state ? state.profileEnabled : undefined;
            resourceInputs["profileId"] = state ? state.profileId : undefined;
            resourceInputs["registrationConfig"] = state ? state.registrationConfig : undefined;
            resourceInputs["registrationEnabled"] = state ? state.registrationEnabled : undefined;
        } else {
            const args = argsOrState as LocalIdentityIdentityProfileArgs | undefined;
            if ((!args || args.apcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apcId'");
            }
            if ((!args || args.profileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'profileId'");
            }
            resourceInputs["apcId"] = args ? args.apcId : undefined;
            resourceInputs["authSourceUpdatePolicy"] = args ? args.authSourceUpdatePolicy : undefined;
            resourceInputs["authSources"] = args ? args.authSources : undefined;
            resourceInputs["dataStoreConfig"] = args ? args.dataStoreConfig : undefined;
            resourceInputs["emailVerificationConfig"] = args ? args.emailVerificationConfig : undefined;
            resourceInputs["fieldConfig"] = args ? args.fieldConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["profileConfig"] = args ? args.profileConfig : undefined;
            resourceInputs["profileEnabled"] = args ? args.profileEnabled : undefined;
            resourceInputs["profileId"] = args ? args.profileId : undefined;
            resourceInputs["registrationConfig"] = args ? args.registrationConfig : undefined;
            resourceInputs["registrationEnabled"] = args ? args.registrationEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocalIdentityIdentityProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LocalIdentityIdentityProfile resources.
 */
export interface LocalIdentityIdentityProfileState {
    /**
     * The reference to the authentication policy contract to use for this local identity profile.
     */
    apcId?: pulumi.Input<inputs.LocalIdentityIdentityProfileApcId>;
    /**
     * The attribute update policy for authentication sources.
     */
    authSourceUpdatePolicy?: pulumi.Input<inputs.LocalIdentityIdentityProfileAuthSourceUpdatePolicy>;
    /**
     * The local identity authentication sources. Sources are unique.
     */
    authSources?: pulumi.Input<pulumi.Input<inputs.LocalIdentityIdentityProfileAuthSource>[]>;
    /**
     * The local identity profile data store configuration.
     */
    dataStoreConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileDataStoreConfig>;
    /**
     * The local identity email verification configuration.
     */
    emailVerificationConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileEmailVerificationConfig>;
    /**
     * The local identity profile field configuration.
     */
    fieldConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileFieldConfig>;
    /**
     * The local identity profile name. Name is unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The local identity profile management configuration.
     */
    profileConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileProfileConfig>;
    /**
     * Whether the profile configuration is enabled or not. The default value is `false`.
     */
    profileEnabled?: pulumi.Input<boolean>;
    /**
     * The persistent, unique ID for the local identity profile. It can be any combination of `[a-zA-Z0-9._-]`.
     */
    profileId?: pulumi.Input<string>;
    /**
     * The local identity profile registration configuration.
     */
    registrationConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileRegistrationConfig>;
    /**
     * Whether the registration configuration is enabled or not. The default value is `false`.
     */
    registrationEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a LocalIdentityIdentityProfile resource.
 */
export interface LocalIdentityIdentityProfileArgs {
    /**
     * The reference to the authentication policy contract to use for this local identity profile.
     */
    apcId: pulumi.Input<inputs.LocalIdentityIdentityProfileApcId>;
    /**
     * The attribute update policy for authentication sources.
     */
    authSourceUpdatePolicy?: pulumi.Input<inputs.LocalIdentityIdentityProfileAuthSourceUpdatePolicy>;
    /**
     * The local identity authentication sources. Sources are unique.
     */
    authSources?: pulumi.Input<pulumi.Input<inputs.LocalIdentityIdentityProfileAuthSource>[]>;
    /**
     * The local identity profile data store configuration.
     */
    dataStoreConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileDataStoreConfig>;
    /**
     * The local identity email verification configuration.
     */
    emailVerificationConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileEmailVerificationConfig>;
    /**
     * The local identity profile field configuration.
     */
    fieldConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileFieldConfig>;
    /**
     * The local identity profile name. Name is unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The local identity profile management configuration.
     */
    profileConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileProfileConfig>;
    /**
     * Whether the profile configuration is enabled or not. The default value is `false`.
     */
    profileEnabled?: pulumi.Input<boolean>;
    /**
     * The persistent, unique ID for the local identity profile. It can be any combination of `[a-zA-Z0-9._-]`.
     */
    profileId: pulumi.Input<string>;
    /**
     * The local identity profile registration configuration.
     */
    registrationConfig?: pulumi.Input<inputs.LocalIdentityIdentityProfileRegistrationConfig>;
    /**
     * Whether the registration configuration is enabled or not. The default value is `false`.
     */
    registrationEnabled?: pulumi.Input<boolean>;
}
