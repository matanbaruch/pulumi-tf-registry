// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PingOneConnection extends pulumi.CustomResource {
    /**
     * Get an existing PingOneConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PingOneConnectionState, opts?: pulumi.CustomResourceOptions): PingOneConnection {
        return new PingOneConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/pingOneConnection:PingOneConnection';

    /**
     * Returns true if the given object is an instance of PingOneConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PingOneConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PingOneConnection.__pulumiType;
    }

    /**
     * Whether the PingOne Connection is active. Defaults to `true`.
     */
    public readonly active!: pulumi.Output<boolean>;
    /**
     * The persistent, unique ID of the connection.
     */
    public readonly connectionId!: pulumi.Output<string>;
    /**
     * The creation date of the PingOne connection. This field is read only.
     */
    public /*out*/ readonly creationDate!: pulumi.Output<string>;
    /**
     * The credential for the PingOne connection.
     */
    public readonly credential!: pulumi.Output<string>;
    /**
     * The ID of the PingOne credential. This field is read only.
     */
    public /*out*/ readonly credentialId!: pulumi.Output<string>;
    /**
     * The description of the PingOne Connection
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment of the PingOne credential. This field is read only.
     */
    public /*out*/ readonly environmentId!: pulumi.Output<string>;
    /**
     * The name of the PingOne Connection
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the organization associated with this PingOne connection. This field is read only.
     */
    public /*out*/ readonly organizationName!: pulumi.Output<string>;
    /**
     * The PingOne Authentication API endpoint. This field is read only.
     */
    public /*out*/ readonly pingOneAuthenticationApiEndpoint!: pulumi.Output<string>;
    /**
     * The ID of the PingOne connection. This field is read only.
     */
    public /*out*/ readonly pingOneConnectionId!: pulumi.Output<string>;
    /**
     * The PingOne Management API endpoint. This field is read only.
     */
    public /*out*/ readonly pingOneManagementApiEndpoint!: pulumi.Output<string>;
    /**
     * The region of the PingOne connection. This field is read only.
     */
    public /*out*/ readonly region!: pulumi.Output<string>;

    /**
     * Create a PingOneConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PingOneConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PingOneConnectionArgs | PingOneConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PingOneConnectionState | undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["connectionId"] = state ? state.connectionId : undefined;
            resourceInputs["creationDate"] = state ? state.creationDate : undefined;
            resourceInputs["credential"] = state ? state.credential : undefined;
            resourceInputs["credentialId"] = state ? state.credentialId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationName"] = state ? state.organizationName : undefined;
            resourceInputs["pingOneAuthenticationApiEndpoint"] = state ? state.pingOneAuthenticationApiEndpoint : undefined;
            resourceInputs["pingOneConnectionId"] = state ? state.pingOneConnectionId : undefined;
            resourceInputs["pingOneManagementApiEndpoint"] = state ? state.pingOneManagementApiEndpoint : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as PingOneConnectionArgs | undefined;
            if ((!args || args.credential === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credential'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["connectionId"] = args ? args.connectionId : undefined;
            resourceInputs["credential"] = args?.credential ? pulumi.secret(args.credential) : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["creationDate"] = undefined /*out*/;
            resourceInputs["credentialId"] = undefined /*out*/;
            resourceInputs["environmentId"] = undefined /*out*/;
            resourceInputs["organizationName"] = undefined /*out*/;
            resourceInputs["pingOneAuthenticationApiEndpoint"] = undefined /*out*/;
            resourceInputs["pingOneConnectionId"] = undefined /*out*/;
            resourceInputs["pingOneManagementApiEndpoint"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["credential"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PingOneConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PingOneConnection resources.
 */
export interface PingOneConnectionState {
    /**
     * Whether the PingOne Connection is active. Defaults to `true`.
     */
    active?: pulumi.Input<boolean>;
    /**
     * The persistent, unique ID of the connection.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * The creation date of the PingOne connection. This field is read only.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * The credential for the PingOne connection.
     */
    credential?: pulumi.Input<string>;
    /**
     * The ID of the PingOne credential. This field is read only.
     */
    credentialId?: pulumi.Input<string>;
    /**
     * The description of the PingOne Connection
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the environment of the PingOne credential. This field is read only.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The name of the PingOne Connection
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the organization associated with this PingOne connection. This field is read only.
     */
    organizationName?: pulumi.Input<string>;
    /**
     * The PingOne Authentication API endpoint. This field is read only.
     */
    pingOneAuthenticationApiEndpoint?: pulumi.Input<string>;
    /**
     * The ID of the PingOne connection. This field is read only.
     */
    pingOneConnectionId?: pulumi.Input<string>;
    /**
     * The PingOne Management API endpoint. This field is read only.
     */
    pingOneManagementApiEndpoint?: pulumi.Input<string>;
    /**
     * The region of the PingOne connection. This field is read only.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PingOneConnection resource.
 */
export interface PingOneConnectionArgs {
    /**
     * Whether the PingOne Connection is active. Defaults to `true`.
     */
    active?: pulumi.Input<boolean>;
    /**
     * The persistent, unique ID of the connection.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * The credential for the PingOne connection.
     */
    credential: pulumi.Input<string>;
    /**
     * The description of the PingOne Connection
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the PingOne Connection
     */
    name?: pulumi.Input<string>;
}
