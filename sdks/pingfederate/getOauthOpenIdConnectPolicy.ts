// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOauthOpenIdConnectPolicy(args: GetOauthOpenIdConnectPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetOauthOpenIdConnectPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getOauthOpenIdConnectPolicy:getOauthOpenIdConnectPolicy", {
        "includeSriInIdToken": args.includeSriInIdToken,
        "policyId": args.policyId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOauthOpenIdConnectPolicy.
 */
export interface GetOauthOpenIdConnectPolicyArgs {
    includeSriInIdToken?: boolean;
    policyId: string;
}

/**
 * A collection of values returned by getOauthOpenIdConnectPolicy.
 */
export interface GetOauthOpenIdConnectPolicyResult {
    readonly accessTokenManagerRef: outputs.GetOauthOpenIdConnectPolicyAccessTokenManagerRef;
    readonly attributeContract: outputs.GetOauthOpenIdConnectPolicyAttributeContract;
    readonly attributeMapping: outputs.GetOauthOpenIdConnectPolicyAttributeMapping;
    readonly id: string;
    readonly idTokenLifetime: number;
    readonly idTokenTypHeaderValue: string;
    readonly includeSHashInIdToken: boolean;
    readonly includeSriInIdToken: boolean;
    readonly includeUserInfoInIdToken: boolean;
    readonly includeX5tInIdToken: boolean;
    readonly name: string;
    readonly policyId: string;
    readonly reissueIdTokenInHybridFlow: boolean;
    readonly returnIdTokenOnRefreshGrant: boolean;
    readonly scopeAttributeMappings: {[key: string]: outputs.GetOauthOpenIdConnectPolicyScopeAttributeMappings};
}
export function getOauthOpenIdConnectPolicyOutput(args: GetOauthOpenIdConnectPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOauthOpenIdConnectPolicyResult> {
    return pulumi.output(args).apply((a: any) => getOauthOpenIdConnectPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getOauthOpenIdConnectPolicy.
 */
export interface GetOauthOpenIdConnectPolicyOutputArgs {
    includeSriInIdToken?: pulumi.Input<boolean>;
    policyId: pulumi.Input<string>;
}
