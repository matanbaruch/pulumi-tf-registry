// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AuthenticationPolicyContract extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationPolicyContract resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationPolicyContractState, opts?: pulumi.CustomResourceOptions): AuthenticationPolicyContract {
        return new AuthenticationPolicyContract(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/authenticationPolicyContract:AuthenticationPolicyContract';

    /**
     * Returns true if the given object is an instance of AuthenticationPolicyContract.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationPolicyContract {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationPolicyContract.__pulumiType;
    }

    /**
     * The persistent, unique ID for the authentication policy contract. It can be any combination of `[a-zA-Z0-9._-]`. This
     * property is system-assigned if not specified.
     */
    public readonly contractId!: pulumi.Output<string>;
    /**
     * A list of read-only assertion attributes (for example, subject) that are automatically populated by PingFederate.
     */
    public /*out*/ readonly coreAttributes!: pulumi.Output<outputs.AuthenticationPolicyContractCoreAttribute[]>;
    /**
     * A list of additional attributes as needed.
     */
    public readonly extendedAttributes!: pulumi.Output<outputs.AuthenticationPolicyContractExtendedAttribute[]>;
    /**
     * The Authentication Policy contract name. Name is unique.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a AuthenticationPolicyContract resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AuthenticationPolicyContractArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationPolicyContractArgs | AuthenticationPolicyContractState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationPolicyContractState | undefined;
            resourceInputs["contractId"] = state ? state.contractId : undefined;
            resourceInputs["coreAttributes"] = state ? state.coreAttributes : undefined;
            resourceInputs["extendedAttributes"] = state ? state.extendedAttributes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AuthenticationPolicyContractArgs | undefined;
            resourceInputs["contractId"] = args ? args.contractId : undefined;
            resourceInputs["extendedAttributes"] = args ? args.extendedAttributes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["coreAttributes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationPolicyContract.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationPolicyContract resources.
 */
export interface AuthenticationPolicyContractState {
    /**
     * The persistent, unique ID for the authentication policy contract. It can be any combination of `[a-zA-Z0-9._-]`. This
     * property is system-assigned if not specified.
     */
    contractId?: pulumi.Input<string>;
    /**
     * A list of read-only assertion attributes (for example, subject) that are automatically populated by PingFederate.
     */
    coreAttributes?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyContractCoreAttribute>[]>;
    /**
     * A list of additional attributes as needed.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyContractExtendedAttribute>[]>;
    /**
     * The Authentication Policy contract name. Name is unique.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthenticationPolicyContract resource.
 */
export interface AuthenticationPolicyContractArgs {
    /**
     * The persistent, unique ID for the authentication policy contract. It can be any combination of `[a-zA-Z0-9._-]`. This
     * property is system-assigned if not specified.
     */
    contractId?: pulumi.Input<string>;
    /**
     * A list of additional attributes as needed.
     */
    extendedAttributes?: pulumi.Input<pulumi.Input<inputs.AuthenticationPolicyContractExtendedAttribute>[]>;
    /**
     * The Authentication Policy contract name. Name is unique.
     */
    name?: pulumi.Input<string>;
}
