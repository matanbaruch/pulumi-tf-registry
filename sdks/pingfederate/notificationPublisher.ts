// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NotificationPublisher extends pulumi.CustomResource {
    /**
     * Get an existing NotificationPublisher resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationPublisherState, opts?: pulumi.CustomResourceOptions): NotificationPublisher {
        return new NotificationPublisher(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/notificationPublisher:NotificationPublisher';

    /**
     * Returns true if the given object is an instance of NotificationPublisher.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotificationPublisher {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotificationPublisher.__pulumiType;
    }

    /**
     * Plugin instance configuration.
     */
    public readonly configuration!: pulumi.Output<outputs.NotificationPublisherConfiguration>;
    /**
     * The plugin instance name. The name can be modified once the instance is created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent
     * instances. Note: This parent reference is required if this plugin instance is used as an overriding plugin (e.g.
     * connection adapter overrides)
     */
    public readonly parentRef!: pulumi.Output<outputs.NotificationPublisherParentRef | undefined>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is
     * created.
     */
    public readonly pluginDescriptorRef!: pulumi.Output<outputs.NotificationPublisherPluginDescriptorRef>;
    /**
     * The ID of the plugin instance. The ID cannot be modified once the instance is created.
     */
    public readonly publisherId!: pulumi.Output<string>;

    /**
     * Create a NotificationPublisher resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationPublisherArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NotificationPublisherArgs | NotificationPublisherState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NotificationPublisherState | undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentRef"] = state ? state.parentRef : undefined;
            resourceInputs["pluginDescriptorRef"] = state ? state.pluginDescriptorRef : undefined;
            resourceInputs["publisherId"] = state ? state.publisherId : undefined;
        } else {
            const args = argsOrState as NotificationPublisherArgs | undefined;
            if ((!args || args.configuration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configuration'");
            }
            if ((!args || args.pluginDescriptorRef === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pluginDescriptorRef'");
            }
            if ((!args || args.publisherId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publisherId'");
            }
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentRef"] = args ? args.parentRef : undefined;
            resourceInputs["pluginDescriptorRef"] = args ? args.pluginDescriptorRef : undefined;
            resourceInputs["publisherId"] = args ? args.publisherId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NotificationPublisher.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NotificationPublisher resources.
 */
export interface NotificationPublisherState {
    /**
     * Plugin instance configuration.
     */
    configuration?: pulumi.Input<inputs.NotificationPublisherConfiguration>;
    /**
     * The plugin instance name. The name can be modified once the instance is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent
     * instances. Note: This parent reference is required if this plugin instance is used as an overriding plugin (e.g.
     * connection adapter overrides)
     */
    parentRef?: pulumi.Input<inputs.NotificationPublisherParentRef>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is
     * created.
     */
    pluginDescriptorRef?: pulumi.Input<inputs.NotificationPublisherPluginDescriptorRef>;
    /**
     * The ID of the plugin instance. The ID cannot be modified once the instance is created.
     */
    publisherId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NotificationPublisher resource.
 */
export interface NotificationPublisherArgs {
    /**
     * Plugin instance configuration.
     */
    configuration: pulumi.Input<inputs.NotificationPublisherConfiguration>;
    /**
     * The plugin instance name. The name can be modified once the instance is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The reference to this plugin's parent instance. The parent reference is only accepted if the plugin type supports parent
     * instances. Note: This parent reference is required if this plugin instance is used as an overriding plugin (e.g.
     * connection adapter overrides)
     */
    parentRef?: pulumi.Input<inputs.NotificationPublisherParentRef>;
    /**
     * Reference to the plugin descriptor for this instance. The plugin descriptor cannot be modified once the instance is
     * created.
     */
    pluginDescriptorRef: pulumi.Input<inputs.NotificationPublisherPluginDescriptorRef>;
    /**
     * The ID of the plugin instance. The ID cannot be modified once the instance is created.
     */
    publisherId: pulumi.Input<string>;
}
