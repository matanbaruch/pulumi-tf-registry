// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AuthenticationApiSettings extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationApiSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationApiSettingsState, opts?: pulumi.CustomResourceOptions): AuthenticationApiSettings {
        return new AuthenticationApiSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pingfederate:index/authenticationApiSettings:AuthenticationApiSettings';

    /**
     * Returns true if the given object is an instance of AuthenticationApiSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationApiSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationApiSettings.__pulumiType;
    }

    /**
     * Enable Authentication API. The default is `false`.
     */
    public readonly apiEnabled!: pulumi.Output<boolean>;
    /**
     * Application for non authentication policy use cases
     */
    public readonly defaultApplicationRef!: pulumi.Output<outputs.AuthenticationApiSettingsDefaultApplicationRef | undefined>;
    /**
     * Enable API descriptions. The default is `false`.
     */
    public readonly enableApiDescriptions!: pulumi.Output<boolean>;
    /**
     * Includes request context in API responses. The default is `false`.
     */
    public readonly includeRequestContext!: pulumi.Output<boolean>;
    /**
     * Enable restrict access to redirectless mode. The default is `false`.
     */
    public readonly restrictAccessToRedirectlessMode!: pulumi.Output<boolean>;

    /**
     * Create a AuthenticationApiSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AuthenticationApiSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationApiSettingsArgs | AuthenticationApiSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationApiSettingsState | undefined;
            resourceInputs["apiEnabled"] = state ? state.apiEnabled : undefined;
            resourceInputs["defaultApplicationRef"] = state ? state.defaultApplicationRef : undefined;
            resourceInputs["enableApiDescriptions"] = state ? state.enableApiDescriptions : undefined;
            resourceInputs["includeRequestContext"] = state ? state.includeRequestContext : undefined;
            resourceInputs["restrictAccessToRedirectlessMode"] = state ? state.restrictAccessToRedirectlessMode : undefined;
        } else {
            const args = argsOrState as AuthenticationApiSettingsArgs | undefined;
            resourceInputs["apiEnabled"] = args ? args.apiEnabled : undefined;
            resourceInputs["defaultApplicationRef"] = args ? args.defaultApplicationRef : undefined;
            resourceInputs["enableApiDescriptions"] = args ? args.enableApiDescriptions : undefined;
            resourceInputs["includeRequestContext"] = args ? args.includeRequestContext : undefined;
            resourceInputs["restrictAccessToRedirectlessMode"] = args ? args.restrictAccessToRedirectlessMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationApiSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationApiSettings resources.
 */
export interface AuthenticationApiSettingsState {
    /**
     * Enable Authentication API. The default is `false`.
     */
    apiEnabled?: pulumi.Input<boolean>;
    /**
     * Application for non authentication policy use cases
     */
    defaultApplicationRef?: pulumi.Input<inputs.AuthenticationApiSettingsDefaultApplicationRef>;
    /**
     * Enable API descriptions. The default is `false`.
     */
    enableApiDescriptions?: pulumi.Input<boolean>;
    /**
     * Includes request context in API responses. The default is `false`.
     */
    includeRequestContext?: pulumi.Input<boolean>;
    /**
     * Enable restrict access to redirectless mode. The default is `false`.
     */
    restrictAccessToRedirectlessMode?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AuthenticationApiSettings resource.
 */
export interface AuthenticationApiSettingsArgs {
    /**
     * Enable Authentication API. The default is `false`.
     */
    apiEnabled?: pulumi.Input<boolean>;
    /**
     * Application for non authentication policy use cases
     */
    defaultApplicationRef?: pulumi.Input<inputs.AuthenticationApiSettingsDefaultApplicationRef>;
    /**
     * Enable API descriptions. The default is `false`.
     */
    enableApiDescriptions?: pulumi.Input<boolean>;
    /**
     * Includes request context in API responses. The default is `false`.
     */
    includeRequestContext?: pulumi.Input<boolean>;
    /**
     * Enable restrict access to redirectless mode. The default is `false`.
     */
    restrictAccessToRedirectlessMode?: pulumi.Input<boolean>;
}
