// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKeyPairSigningImport(args: GetKeyPairSigningImportArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyPairSigningImportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pingfederate:index/getKeyPairSigningImport:getKeyPairSigningImport", {
        "importId": args.importId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKeyPairSigningImport.
 */
export interface GetKeyPairSigningImportArgs {
    importId: string;
}

/**
 * A collection of values returned by getKeyPairSigningImport.
 */
export interface GetKeyPairSigningImportResult {
    readonly cryptoProvider: string;
    readonly expires: string;
    readonly id: string;
    readonly importId: string;
    readonly issuerDn: string;
    readonly keyAlgorithm: string;
    readonly keySize: number;
    readonly rotationSettings: outputs.GetKeyPairSigningImportRotationSettings;
    readonly serialNumber: string;
    readonly sha1Fingerprint: string;
    readonly sha256Fingerprint: string;
    readonly signatureAlgorithm: string;
    readonly status: string;
    readonly subjectAlternativeNames: string[];
    readonly subjectDn: string;
    readonly validFrom: string;
    readonly version: number;
}
export function getKeyPairSigningImportOutput(args: GetKeyPairSigningImportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyPairSigningImportResult> {
    return pulumi.output(args).apply((a: any) => getKeyPairSigningImport(a, opts))
}

/**
 * A collection of arguments for invoking getKeyPairSigningImport.
 */
export interface GetKeyPairSigningImportOutputArgs {
    importId: pulumi.Input<string>;
}
