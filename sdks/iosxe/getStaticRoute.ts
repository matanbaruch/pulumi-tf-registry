// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStaticRoute(args: GetStaticRouteArgs, opts?: pulumi.InvokeOptions): Promise<GetStaticRouteResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getStaticRoute:getStaticRoute", {
        "device": args.device,
        "mask": args.mask,
        "prefix": args.prefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStaticRoute.
 */
export interface GetStaticRouteArgs {
    device?: string;
    mask: string;
    prefix: string;
}

/**
 * A collection of values returned by getStaticRoute.
 */
export interface GetStaticRouteResult {
    readonly device?: string;
    readonly id: string;
    readonly mask: string;
    readonly nextHops: outputs.GetStaticRouteNextHop[];
    readonly prefix: string;
}
export function getStaticRouteOutput(args: GetStaticRouteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStaticRouteResult> {
    return pulumi.output(args).apply((a: any) => getStaticRoute(a, opts))
}

/**
 * A collection of arguments for invoking getStaticRoute.
 */
export interface GetStaticRouteOutputArgs {
    device?: pulumi.Input<string>;
    mask: pulumi.Input<string>;
    prefix: pulumi.Input<string>;
}
