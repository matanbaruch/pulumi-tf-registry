// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceNve extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceNve resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceNveState, opts?: pulumi.CustomResourceOptions): InterfaceNve {
        return new InterfaceNve(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/interfaceNve:InterfaceNve';

    /**
     * Returns true if the given object is an instance of InterfaceNve.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceNve {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceNve.__pulumiType;
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * Interface specific description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    public readonly hostReachabilityProtocolBgp!: pulumi.Output<boolean | undefined>;
    /**
     * - Range: `1`-`4096`
     */
    public readonly name!: pulumi.Output<number>;
    /**
     * Shutdown the selected interface
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Loopback interface - Range: `0`-`2147483647`
     */
    public readonly sourceInterfaceLoopback!: pulumi.Output<number | undefined>;
    /**
     * Configure VNI information
     */
    public readonly vniVrfs!: pulumi.Output<outputs.InterfaceNveVniVrf[] | undefined>;
    /**
     * Configure VNI information
     */
    public readonly vnis!: pulumi.Output<outputs.InterfaceNveVni[] | undefined>;

    /**
     * Create a InterfaceNve resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceNveArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceNveArgs | InterfaceNveState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceNveState | undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["hostReachabilityProtocolBgp"] = state ? state.hostReachabilityProtocolBgp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["sourceInterfaceLoopback"] = state ? state.sourceInterfaceLoopback : undefined;
            resourceInputs["vniVrfs"] = state ? state.vniVrfs : undefined;
            resourceInputs["vnis"] = state ? state.vnis : undefined;
        } else {
            const args = argsOrState as InterfaceNveArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["hostReachabilityProtocolBgp"] = args ? args.hostReachabilityProtocolBgp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["sourceInterfaceLoopback"] = args ? args.sourceInterfaceLoopback : undefined;
            resourceInputs["vniVrfs"] = args ? args.vniVrfs : undefined;
            resourceInputs["vnis"] = args ? args.vnis : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceNve.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceNve resources.
 */
export interface InterfaceNveState {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * Interface specific description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    hostReachabilityProtocolBgp?: pulumi.Input<boolean>;
    /**
     * - Range: `1`-`4096`
     */
    name?: pulumi.Input<number>;
    /**
     * Shutdown the selected interface
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Loopback interface - Range: `0`-`2147483647`
     */
    sourceInterfaceLoopback?: pulumi.Input<number>;
    /**
     * Configure VNI information
     */
    vniVrfs?: pulumi.Input<pulumi.Input<inputs.InterfaceNveVniVrf>[]>;
    /**
     * Configure VNI information
     */
    vnis?: pulumi.Input<pulumi.Input<inputs.InterfaceNveVni>[]>;
}

/**
 * The set of arguments for constructing a InterfaceNve resource.
 */
export interface InterfaceNveArgs {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * Interface specific description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    hostReachabilityProtocolBgp?: pulumi.Input<boolean>;
    /**
     * - Range: `1`-`4096`
     */
    name: pulumi.Input<number>;
    /**
     * Shutdown the selected interface
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Loopback interface - Range: `0`-`2147483647`
     */
    sourceInterfaceLoopback?: pulumi.Input<number>;
    /**
     * Configure VNI information
     */
    vniVrfs?: pulumi.Input<pulumi.Input<inputs.InterfaceNveVniVrf>[]>;
    /**
     * Configure VNI information
     */
    vnis?: pulumi.Input<pulumi.Input<inputs.InterfaceNveVni>[]>;
}
