// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class EvpnInstance extends pulumi.CustomResource {
    /**
     * Get an existing EvpnInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EvpnInstanceState, opts?: pulumi.CustomResourceOptions): EvpnInstance {
        return new EvpnInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/evpnInstance:EvpnInstance';

    /**
     * Returns true if the given object is an instance of EvpnInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EvpnInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EvpnInstance.__pulumiType;
    }

    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * evpn instance number - Range: `1`-`65535`
     */
    public readonly evpnInstanceNum!: pulumi.Output<number>;
    /**
     * Automatically set a route-target
     */
    public readonly vlanBasedAutoRouteTarget!: pulumi.Output<boolean | undefined>;
    /**
     * Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`
     */
    public readonly vlanBasedDefaultGatewayAdvertise!: pulumi.Output<string | undefined>;
    /**
     * Data encapsulation method - Choices: `mpls`, `vxlan`
     */
    public readonly vlanBasedEncapsulation!: pulumi.Output<string | undefined>;
    /**
     * Disable IP local learning from dataplane
     */
    public readonly vlanBasedIpLocalLearningDisable!: pulumi.Output<boolean | undefined>;
    /**
     * Enable IP local learning from dataplane
     */
    public readonly vlanBasedIpLocalLearningEnable!: pulumi.Output<boolean | undefined>;
    /**
     * ASN:nn or IP-address:nn
     */
    public readonly vlanBasedRd!: pulumi.Output<string | undefined>;
    /**
     * Re-originate route-type 5
     */
    public readonly vlanBasedReOriginateRouteType5!: pulumi.Output<boolean | undefined>;
    /**
     * Ingress replication
     */
    public readonly vlanBasedReplicationTypeIngress!: pulumi.Output<boolean | undefined>;
    /**
     * mp2mp replication
     */
    public readonly vlanBasedReplicationTypeMp2mp!: pulumi.Output<boolean | undefined>;
    /**
     * p2mp replication
     */
    public readonly vlanBasedReplicationTypeP2mp!: pulumi.Output<boolean | undefined>;
    /**
     * Static replication
     */
    public readonly vlanBasedReplicationTypeStatic!: pulumi.Output<boolean | undefined>;
    /**
     * ASN:nn or IP-address:nn
     */
    public readonly vlanBasedRouteTarget!: pulumi.Output<string | undefined>;
    /**
     * ASN:nn or IP-address:nn
     */
    public readonly vlanBasedRouteTargetBoth!: pulumi.Output<string | undefined>;
    /**
     * ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
     */
    public readonly vlanBasedRouteTargetExport!: pulumi.Output<string | undefined>;
    /**
     * ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
     */
    public readonly vlanBasedRouteTargetImport!: pulumi.Output<string | undefined>;

    /**
     * Create a EvpnInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvpnInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EvpnInstanceArgs | EvpnInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EvpnInstanceState | undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["evpnInstanceNum"] = state ? state.evpnInstanceNum : undefined;
            resourceInputs["vlanBasedAutoRouteTarget"] = state ? state.vlanBasedAutoRouteTarget : undefined;
            resourceInputs["vlanBasedDefaultGatewayAdvertise"] = state ? state.vlanBasedDefaultGatewayAdvertise : undefined;
            resourceInputs["vlanBasedEncapsulation"] = state ? state.vlanBasedEncapsulation : undefined;
            resourceInputs["vlanBasedIpLocalLearningDisable"] = state ? state.vlanBasedIpLocalLearningDisable : undefined;
            resourceInputs["vlanBasedIpLocalLearningEnable"] = state ? state.vlanBasedIpLocalLearningEnable : undefined;
            resourceInputs["vlanBasedRd"] = state ? state.vlanBasedRd : undefined;
            resourceInputs["vlanBasedReOriginateRouteType5"] = state ? state.vlanBasedReOriginateRouteType5 : undefined;
            resourceInputs["vlanBasedReplicationTypeIngress"] = state ? state.vlanBasedReplicationTypeIngress : undefined;
            resourceInputs["vlanBasedReplicationTypeMp2mp"] = state ? state.vlanBasedReplicationTypeMp2mp : undefined;
            resourceInputs["vlanBasedReplicationTypeP2mp"] = state ? state.vlanBasedReplicationTypeP2mp : undefined;
            resourceInputs["vlanBasedReplicationTypeStatic"] = state ? state.vlanBasedReplicationTypeStatic : undefined;
            resourceInputs["vlanBasedRouteTarget"] = state ? state.vlanBasedRouteTarget : undefined;
            resourceInputs["vlanBasedRouteTargetBoth"] = state ? state.vlanBasedRouteTargetBoth : undefined;
            resourceInputs["vlanBasedRouteTargetExport"] = state ? state.vlanBasedRouteTargetExport : undefined;
            resourceInputs["vlanBasedRouteTargetImport"] = state ? state.vlanBasedRouteTargetImport : undefined;
        } else {
            const args = argsOrState as EvpnInstanceArgs | undefined;
            if ((!args || args.evpnInstanceNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'evpnInstanceNum'");
            }
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["evpnInstanceNum"] = args ? args.evpnInstanceNum : undefined;
            resourceInputs["vlanBasedAutoRouteTarget"] = args ? args.vlanBasedAutoRouteTarget : undefined;
            resourceInputs["vlanBasedDefaultGatewayAdvertise"] = args ? args.vlanBasedDefaultGatewayAdvertise : undefined;
            resourceInputs["vlanBasedEncapsulation"] = args ? args.vlanBasedEncapsulation : undefined;
            resourceInputs["vlanBasedIpLocalLearningDisable"] = args ? args.vlanBasedIpLocalLearningDisable : undefined;
            resourceInputs["vlanBasedIpLocalLearningEnable"] = args ? args.vlanBasedIpLocalLearningEnable : undefined;
            resourceInputs["vlanBasedRd"] = args ? args.vlanBasedRd : undefined;
            resourceInputs["vlanBasedReOriginateRouteType5"] = args ? args.vlanBasedReOriginateRouteType5 : undefined;
            resourceInputs["vlanBasedReplicationTypeIngress"] = args ? args.vlanBasedReplicationTypeIngress : undefined;
            resourceInputs["vlanBasedReplicationTypeMp2mp"] = args ? args.vlanBasedReplicationTypeMp2mp : undefined;
            resourceInputs["vlanBasedReplicationTypeP2mp"] = args ? args.vlanBasedReplicationTypeP2mp : undefined;
            resourceInputs["vlanBasedReplicationTypeStatic"] = args ? args.vlanBasedReplicationTypeStatic : undefined;
            resourceInputs["vlanBasedRouteTarget"] = args ? args.vlanBasedRouteTarget : undefined;
            resourceInputs["vlanBasedRouteTargetBoth"] = args ? args.vlanBasedRouteTargetBoth : undefined;
            resourceInputs["vlanBasedRouteTargetExport"] = args ? args.vlanBasedRouteTargetExport : undefined;
            resourceInputs["vlanBasedRouteTargetImport"] = args ? args.vlanBasedRouteTargetImport : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EvpnInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering EvpnInstance resources.
 */
export interface EvpnInstanceState {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * evpn instance number - Range: `1`-`65535`
     */
    evpnInstanceNum?: pulumi.Input<number>;
    /**
     * Automatically set a route-target
     */
    vlanBasedAutoRouteTarget?: pulumi.Input<boolean>;
    /**
     * Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`
     */
    vlanBasedDefaultGatewayAdvertise?: pulumi.Input<string>;
    /**
     * Data encapsulation method - Choices: `mpls`, `vxlan`
     */
    vlanBasedEncapsulation?: pulumi.Input<string>;
    /**
     * Disable IP local learning from dataplane
     */
    vlanBasedIpLocalLearningDisable?: pulumi.Input<boolean>;
    /**
     * Enable IP local learning from dataplane
     */
    vlanBasedIpLocalLearningEnable?: pulumi.Input<boolean>;
    /**
     * ASN:nn or IP-address:nn
     */
    vlanBasedRd?: pulumi.Input<string>;
    /**
     * Re-originate route-type 5
     */
    vlanBasedReOriginateRouteType5?: pulumi.Input<boolean>;
    /**
     * Ingress replication
     */
    vlanBasedReplicationTypeIngress?: pulumi.Input<boolean>;
    /**
     * mp2mp replication
     */
    vlanBasedReplicationTypeMp2mp?: pulumi.Input<boolean>;
    /**
     * p2mp replication
     */
    vlanBasedReplicationTypeP2mp?: pulumi.Input<boolean>;
    /**
     * Static replication
     */
    vlanBasedReplicationTypeStatic?: pulumi.Input<boolean>;
    /**
     * ASN:nn or IP-address:nn
     */
    vlanBasedRouteTarget?: pulumi.Input<string>;
    /**
     * ASN:nn or IP-address:nn
     */
    vlanBasedRouteTargetBoth?: pulumi.Input<string>;
    /**
     * ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
     */
    vlanBasedRouteTargetExport?: pulumi.Input<string>;
    /**
     * ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
     */
    vlanBasedRouteTargetImport?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EvpnInstance resource.
 */
export interface EvpnInstanceArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * evpn instance number - Range: `1`-`65535`
     */
    evpnInstanceNum: pulumi.Input<number>;
    /**
     * Automatically set a route-target
     */
    vlanBasedAutoRouteTarget?: pulumi.Input<boolean>;
    /**
     * Advertise Default Gateway MAC/IP routes - Choices: `disable`, `enable`
     */
    vlanBasedDefaultGatewayAdvertise?: pulumi.Input<string>;
    /**
     * Data encapsulation method - Choices: `mpls`, `vxlan`
     */
    vlanBasedEncapsulation?: pulumi.Input<string>;
    /**
     * Disable IP local learning from dataplane
     */
    vlanBasedIpLocalLearningDisable?: pulumi.Input<boolean>;
    /**
     * Enable IP local learning from dataplane
     */
    vlanBasedIpLocalLearningEnable?: pulumi.Input<boolean>;
    /**
     * ASN:nn or IP-address:nn
     */
    vlanBasedRd?: pulumi.Input<string>;
    /**
     * Re-originate route-type 5
     */
    vlanBasedReOriginateRouteType5?: pulumi.Input<boolean>;
    /**
     * Ingress replication
     */
    vlanBasedReplicationTypeIngress?: pulumi.Input<boolean>;
    /**
     * mp2mp replication
     */
    vlanBasedReplicationTypeMp2mp?: pulumi.Input<boolean>;
    /**
     * p2mp replication
     */
    vlanBasedReplicationTypeP2mp?: pulumi.Input<boolean>;
    /**
     * Static replication
     */
    vlanBasedReplicationTypeStatic?: pulumi.Input<boolean>;
    /**
     * ASN:nn or IP-address:nn
     */
    vlanBasedRouteTarget?: pulumi.Input<string>;
    /**
     * ASN:nn or IP-address:nn
     */
    vlanBasedRouteTargetBoth?: pulumi.Input<string>;
    /**
     * ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
     */
    vlanBasedRouteTargetExport?: pulumi.Input<string>;
    /**
     * ASN:nn or IP-address:nn (DEPRECATED, use rt-value-entry)
     */
    vlanBasedRouteTargetImport?: pulumi.Input<string>;
}
