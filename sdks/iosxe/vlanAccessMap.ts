// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VlanAccessMap extends pulumi.CustomResource {
    /**
     * Get an existing VlanAccessMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VlanAccessMapState, opts?: pulumi.CustomResourceOptions): VlanAccessMap {
        return new VlanAccessMap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/vlanAccessMap:VlanAccessMap';

    /**
     * Returns true if the given object is an instance of VlanAccessMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VlanAccessMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VlanAccessMap.__pulumiType;
    }

    /**
     * Take the action - Choices: `drop`, `forward`
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    public readonly matchIpAddresses!: pulumi.Output<string[] | undefined>;
    /**
     * Match IPv6 address to access control.
     */
    public readonly matchIpv6Addresses!: pulumi.Output<string[] | undefined>;
    /**
     * Vlan access map tag
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
     */
    public readonly sequence!: pulumi.Output<number>;

    /**
     * Create a VlanAccessMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VlanAccessMapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VlanAccessMapArgs | VlanAccessMapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VlanAccessMapState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["matchIpAddresses"] = state ? state.matchIpAddresses : undefined;
            resourceInputs["matchIpv6Addresses"] = state ? state.matchIpv6Addresses : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sequence"] = state ? state.sequence : undefined;
        } else {
            const args = argsOrState as VlanAccessMapArgs | undefined;
            if ((!args || args.sequence === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sequence'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["matchIpAddresses"] = args ? args.matchIpAddresses : undefined;
            resourceInputs["matchIpv6Addresses"] = args ? args.matchIpv6Addresses : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sequence"] = args ? args.sequence : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VlanAccessMap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VlanAccessMap resources.
 */
export interface VlanAccessMapState {
    /**
     * Take the action - Choices: `drop`, `forward`
     */
    action?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    matchIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Match IPv6 address to access control.
     */
    matchIpv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Vlan access map tag
     */
    name?: pulumi.Input<string>;
    /**
     * Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
     */
    sequence?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a VlanAccessMap resource.
 */
export interface VlanAccessMapArgs {
    /**
     * Take the action - Choices: `drop`, `forward`
     */
    action?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    matchIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Match IPv6 address to access control.
     */
    matchIpv6Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Vlan access map tag
     */
    name?: pulumi.Input<string>;
    /**
     * Sequence to insert to/delete from existing vlan access-map entry - Range: `0`-`65535`
     */
    sequence: pulumi.Input<number>;
}
