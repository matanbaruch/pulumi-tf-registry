// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVtp(args?: GetVtpArgs, opts?: pulumi.InvokeOptions): Promise<GetVtpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getVtp:getVtp", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVtp.
 */
export interface GetVtpArgs {
    device?: string;
}

/**
 * A collection of values returned by getVtp.
 */
export interface GetVtpResult {
    readonly device?: string;
    readonly domain: string;
    readonly file: string;
    readonly id: string;
    readonly interface: string;
    readonly interfaceOnly: boolean;
    readonly modeClientMst: boolean;
    readonly modeClientUnknown: boolean;
    readonly modeClientVlan: boolean;
    readonly modeOffMst: boolean;
    readonly modeOffUnknown: boolean;
    readonly modeOffVlan: boolean;
    readonly modeServerMst: boolean;
    readonly modeServerUnknown: boolean;
    readonly modeServerVlan: boolean;
    readonly modeTransparentMst: boolean;
    readonly modeTransparentUnknown: boolean;
    readonly modeTransparentVlan: boolean;
    readonly password: string;
    readonly passwordHidden: boolean;
    readonly passwordSecret: boolean;
    readonly pruning: boolean;
    readonly version: number;
}
export function getVtpOutput(args?: GetVtpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVtpResult> {
    return pulumi.output(args).apply((a: any) => getVtp(a, opts))
}

/**
 * A collection of arguments for invoking getVtp.
 */
export interface GetVtpOutputArgs {
    device?: pulumi.Input<string>;
}
