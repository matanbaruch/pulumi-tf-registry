// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getEvpnInstance(args: GetEvpnInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetEvpnInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getEvpnInstance:getEvpnInstance", {
        "device": args.device,
        "evpnInstanceNum": args.evpnInstanceNum,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEvpnInstance.
 */
export interface GetEvpnInstanceArgs {
    device?: string;
    evpnInstanceNum: number;
}

/**
 * A collection of values returned by getEvpnInstance.
 */
export interface GetEvpnInstanceResult {
    readonly device?: string;
    readonly evpnInstanceNum: number;
    readonly id: string;
    readonly vlanBasedAutoRouteTarget: boolean;
    readonly vlanBasedDefaultGatewayAdvertise: string;
    readonly vlanBasedEncapsulation: string;
    readonly vlanBasedIpLocalLearningDisable: boolean;
    readonly vlanBasedIpLocalLearningEnable: boolean;
    readonly vlanBasedRd: string;
    readonly vlanBasedReOriginateRouteType5: boolean;
    readonly vlanBasedReplicationTypeIngress: boolean;
    readonly vlanBasedReplicationTypeMp2mp: boolean;
    readonly vlanBasedReplicationTypeP2mp: boolean;
    readonly vlanBasedReplicationTypeStatic: boolean;
    readonly vlanBasedRouteTarget: string;
    readonly vlanBasedRouteTargetBoth: string;
    readonly vlanBasedRouteTargetExport: string;
    readonly vlanBasedRouteTargetImport: string;
}
export function getEvpnInstanceOutput(args: GetEvpnInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEvpnInstanceResult> {
    return pulumi.output(args).apply((a: any) => getEvpnInstance(a, opts))
}

/**
 * A collection of arguments for invoking getEvpnInstance.
 */
export interface GetEvpnInstanceOutputArgs {
    device?: pulumi.Input<string>;
    evpnInstanceNum: pulumi.Input<number>;
}
