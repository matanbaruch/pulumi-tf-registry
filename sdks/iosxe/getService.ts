// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getService(args?: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getService:getService", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceArgs {
    device?: string;
}

/**
 * A collection of values returned by getService.
 */
export interface GetServiceResult {
    readonly callHome: boolean;
    readonly compressConfig: boolean;
    readonly device?: string;
    readonly dhcp: boolean;
    readonly id: string;
    readonly pad: boolean;
    readonly passwordEncryption: boolean;
    readonly passwordRecovery: boolean;
    readonly sequenceNumbers: boolean;
    readonly tcpKeepalivesIn: boolean;
    readonly tcpKeepalivesOut: boolean;
    readonly timestamps: boolean;
    readonly timestampsDebug: boolean;
    readonly timestampsDebugDatetime: boolean;
    readonly timestampsDebugDatetimeLocaltime: boolean;
    readonly timestampsDebugDatetimeMsec: boolean;
    readonly timestampsDebugDatetimeShowTimezone: boolean;
    readonly timestampsDebugDatetimeYear: boolean;
    readonly timestampsDebugUptime: boolean;
    readonly timestampsLog: boolean;
    readonly timestampsLogDatetime: boolean;
    readonly timestampsLogDatetimeLocaltime: boolean;
    readonly timestampsLogDatetimeMsec: boolean;
    readonly timestampsLogDatetimeShowTimezone: boolean;
    readonly timestampsLogDatetimeYear: boolean;
    readonly timestampsLogUptime: boolean;
}
export function getServiceOutput(args?: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply((a: any) => getService(a, opts))
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceOutputArgs {
    device?: pulumi.Input<string>;
}
