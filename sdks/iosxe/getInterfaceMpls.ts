// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getInterfaceMpls(args: GetInterfaceMplsArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceMplsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getInterfaceMpls:getInterfaceMpls", {
        "device": args.device,
        "name": args.name,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceMpls.
 */
export interface GetInterfaceMplsArgs {
    device?: string;
    name: string;
    type: string;
}

/**
 * A collection of values returned by getInterfaceMpls.
 */
export interface GetInterfaceMplsResult {
    readonly device?: string;
    readonly id: string;
    readonly ip: boolean;
    readonly mtu: string;
    readonly name: string;
    readonly type: string;
}
export function getInterfaceMplsOutput(args: GetInterfaceMplsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceMplsResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceMpls(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceMpls.
 */
export interface GetInterfaceMplsOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
