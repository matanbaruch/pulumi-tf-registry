// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAsPathAccessList(args: GetAsPathAccessListArgs, opts?: pulumi.InvokeOptions): Promise<GetAsPathAccessListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getAsPathAccessList:getAsPathAccessList", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAsPathAccessList.
 */
export interface GetAsPathAccessListArgs {
    device?: string;
    name: number;
}

/**
 * A collection of values returned by getAsPathAccessList.
 */
export interface GetAsPathAccessListResult {
    readonly device?: string;
    readonly entries: outputs.GetAsPathAccessListEntry[];
    readonly id: string;
    readonly name: number;
}
export function getAsPathAccessListOutput(args: GetAsPathAccessListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAsPathAccessListResult> {
    return pulumi.output(args).apply((a: any) => getAsPathAccessList(a, opts))
}

/**
 * A collection of arguments for invoking getAsPathAccessList.
 */
export interface GetAsPathAccessListOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<number>;
}
