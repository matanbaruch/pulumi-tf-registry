// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFlowMonitor(args: GetFlowMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getFlowMonitor:getFlowMonitor", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFlowMonitor.
 */
export interface GetFlowMonitorArgs {
    device?: string;
    name: string;
}

/**
 * A collection of values returned by getFlowMonitor.
 */
export interface GetFlowMonitorResult {
    readonly cacheTimeoutActive: number;
    readonly description: string;
    readonly device?: string;
    readonly exporters: outputs.GetFlowMonitorExporter[];
    readonly id: string;
    readonly name: string;
    readonly record: string;
}
export function getFlowMonitorOutput(args: GetFlowMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlowMonitorResult> {
    return pulumi.output(args).apply((a: any) => getFlowMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getFlowMonitor.
 */
export interface GetFlowMonitorOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
