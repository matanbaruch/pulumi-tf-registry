// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCryptoIkev2(args?: GetCryptoIkev2Args, opts?: pulumi.InvokeOptions): Promise<GetCryptoIkev2Result> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getCryptoIkev2:getCryptoIkev2", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCryptoIkev2.
 */
export interface GetCryptoIkev2Args {
    device?: string;
}

/**
 * A collection of values returned by getCryptoIkev2.
 */
export interface GetCryptoIkev2Result {
    readonly device?: string;
    readonly dpd: number;
    readonly dpdQuery: string;
    readonly dpdRetryInterval: number;
    readonly id: string;
    readonly natKeepalive: number;
}
export function getCryptoIkev2Output(args?: GetCryptoIkev2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCryptoIkev2Result> {
    return pulumi.output(args).apply((a: any) => getCryptoIkev2(a, opts))
}

/**
 * A collection of arguments for invoking getCryptoIkev2.
 */
export interface GetCryptoIkev2OutputArgs {
    device?: pulumi.Input<string>;
}
