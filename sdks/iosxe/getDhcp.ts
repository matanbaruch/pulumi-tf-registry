// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDhcp(args?: GetDhcpArgs, opts?: pulumi.InvokeOptions): Promise<GetDhcpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getDhcp:getDhcp", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDhcp.
 */
export interface GetDhcpArgs {
    device?: string;
}

/**
 * A collection of values returned by getDhcp.
 */
export interface GetDhcpResult {
    readonly compatibilitySuboptionLinkSelection: string;
    readonly compatibilitySuboptionServerOverride: string;
    readonly device?: string;
    readonly id: string;
    readonly relayInformationOptionDefault: boolean;
    readonly relayInformationOptionVpn: boolean;
    readonly relayInformationTrustAll: boolean;
    readonly snooping: boolean;
    readonly snoopingInformationOptionFormatRemoteIdHostname: boolean;
    readonly snoopingVlans: outputs.GetDhcpSnoopingVlan[];
}
export function getDhcpOutput(args?: GetDhcpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDhcpResult> {
    return pulumi.output(args).apply((a: any) => getDhcp(a, opts))
}

/**
 * A collection of arguments for invoking getDhcp.
 */
export interface GetDhcpOutputArgs {
    device?: pulumi.Input<string>;
}
