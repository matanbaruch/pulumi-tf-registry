// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CryptoIkev2Proposal extends pulumi.CustomResource {
    /**
     * Get an existing CryptoIkev2Proposal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CryptoIkev2ProposalState, opts?: pulumi.CustomResourceOptions): CryptoIkev2Proposal {
        return new CryptoIkev2Proposal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/cryptoIkev2Proposal:CryptoIkev2Proposal';

    /**
     * Returns true if the given object is an instance of CryptoIkev2Proposal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CryptoIkev2Proposal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CryptoIkev2Proposal.__pulumiType;
    }

    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * AES-CBC-128
     */
    public readonly encryptionAesCbc128!: pulumi.Output<boolean | undefined>;
    /**
     * AES-CBC-192
     */
    public readonly encryptionAesCbc192!: pulumi.Output<boolean | undefined>;
    /**
     * AES-CBC-256
     */
    public readonly encryptionAesCbc256!: pulumi.Output<boolean | undefined>;
    /**
     * Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
     */
    public readonly encryptionAesGcm128!: pulumi.Output<boolean | undefined>;
    /**
     * Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
     */
    public readonly encryptionAesGcm256!: pulumi.Output<boolean | undefined>;
    /**
     * 3DES
     */
    public readonly encryptionEn3des!: pulumi.Output<boolean | undefined>;
    /**
     * DH 3072 MODP
     */
    public readonly groupFifteen!: pulumi.Output<boolean | undefined>;
    /**
     * DH 2048 MODP
     */
    public readonly groupFourteen!: pulumi.Output<boolean | undefined>;
    /**
     * DH 256 ECP
     */
    public readonly groupNineteen!: pulumi.Output<boolean | undefined>;
    /**
     * DH 768 MODP
     */
    public readonly groupOne!: pulumi.Output<boolean | undefined>;
    /**
     * DH 4096 MODP
     */
    public readonly groupSixteen!: pulumi.Output<boolean | undefined>;
    /**
     * DH 384 ECP
     */
    public readonly groupTwenty!: pulumi.Output<boolean | undefined>;
    /**
     * DH 2048 (256 subgroup) MODP
     */
    public readonly groupTwentyFour!: pulumi.Output<boolean | undefined>;
    /**
     * DH 521 ECP
     */
    public readonly groupTwentyOne!: pulumi.Output<boolean | undefined>;
    /**
     * DH 1024 MODP
     */
    public readonly groupTwo!: pulumi.Output<boolean | undefined>;
    /**
     * Message Digest 5
     */
    public readonly integrityMd5!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard
     */
    public readonly integritySha1!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard 2 (256 bit)
     */
    public readonly integritySha256!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard 2 (384 bit)
     */
    public readonly integritySha384!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard 2 (512 bit)
     */
    public readonly integritySha512!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Message Digest 5
     */
    public readonly prfMd5!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard
     */
    public readonly prfSha1!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard 2 (256 bit)
     */
    public readonly prfSha256!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard 2 (384 bit)
     */
    public readonly prfSha384!: pulumi.Output<boolean | undefined>;
    /**
     * Secure Hash Standard 2 (512 bit)
     */
    public readonly prfSha512!: pulumi.Output<boolean | undefined>;

    /**
     * Create a CryptoIkev2Proposal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CryptoIkev2ProposalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CryptoIkev2ProposalArgs | CryptoIkev2ProposalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CryptoIkev2ProposalState | undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["encryptionAesCbc128"] = state ? state.encryptionAesCbc128 : undefined;
            resourceInputs["encryptionAesCbc192"] = state ? state.encryptionAesCbc192 : undefined;
            resourceInputs["encryptionAesCbc256"] = state ? state.encryptionAesCbc256 : undefined;
            resourceInputs["encryptionAesGcm128"] = state ? state.encryptionAesGcm128 : undefined;
            resourceInputs["encryptionAesGcm256"] = state ? state.encryptionAesGcm256 : undefined;
            resourceInputs["encryptionEn3des"] = state ? state.encryptionEn3des : undefined;
            resourceInputs["groupFifteen"] = state ? state.groupFifteen : undefined;
            resourceInputs["groupFourteen"] = state ? state.groupFourteen : undefined;
            resourceInputs["groupNineteen"] = state ? state.groupNineteen : undefined;
            resourceInputs["groupOne"] = state ? state.groupOne : undefined;
            resourceInputs["groupSixteen"] = state ? state.groupSixteen : undefined;
            resourceInputs["groupTwenty"] = state ? state.groupTwenty : undefined;
            resourceInputs["groupTwentyFour"] = state ? state.groupTwentyFour : undefined;
            resourceInputs["groupTwentyOne"] = state ? state.groupTwentyOne : undefined;
            resourceInputs["groupTwo"] = state ? state.groupTwo : undefined;
            resourceInputs["integrityMd5"] = state ? state.integrityMd5 : undefined;
            resourceInputs["integritySha1"] = state ? state.integritySha1 : undefined;
            resourceInputs["integritySha256"] = state ? state.integritySha256 : undefined;
            resourceInputs["integritySha384"] = state ? state.integritySha384 : undefined;
            resourceInputs["integritySha512"] = state ? state.integritySha512 : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prfMd5"] = state ? state.prfMd5 : undefined;
            resourceInputs["prfSha1"] = state ? state.prfSha1 : undefined;
            resourceInputs["prfSha256"] = state ? state.prfSha256 : undefined;
            resourceInputs["prfSha384"] = state ? state.prfSha384 : undefined;
            resourceInputs["prfSha512"] = state ? state.prfSha512 : undefined;
        } else {
            const args = argsOrState as CryptoIkev2ProposalArgs | undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["encryptionAesCbc128"] = args ? args.encryptionAesCbc128 : undefined;
            resourceInputs["encryptionAesCbc192"] = args ? args.encryptionAesCbc192 : undefined;
            resourceInputs["encryptionAesCbc256"] = args ? args.encryptionAesCbc256 : undefined;
            resourceInputs["encryptionAesGcm128"] = args ? args.encryptionAesGcm128 : undefined;
            resourceInputs["encryptionAesGcm256"] = args ? args.encryptionAesGcm256 : undefined;
            resourceInputs["encryptionEn3des"] = args ? args.encryptionEn3des : undefined;
            resourceInputs["groupFifteen"] = args ? args.groupFifteen : undefined;
            resourceInputs["groupFourteen"] = args ? args.groupFourteen : undefined;
            resourceInputs["groupNineteen"] = args ? args.groupNineteen : undefined;
            resourceInputs["groupOne"] = args ? args.groupOne : undefined;
            resourceInputs["groupSixteen"] = args ? args.groupSixteen : undefined;
            resourceInputs["groupTwenty"] = args ? args.groupTwenty : undefined;
            resourceInputs["groupTwentyFour"] = args ? args.groupTwentyFour : undefined;
            resourceInputs["groupTwentyOne"] = args ? args.groupTwentyOne : undefined;
            resourceInputs["groupTwo"] = args ? args.groupTwo : undefined;
            resourceInputs["integrityMd5"] = args ? args.integrityMd5 : undefined;
            resourceInputs["integritySha1"] = args ? args.integritySha1 : undefined;
            resourceInputs["integritySha256"] = args ? args.integritySha256 : undefined;
            resourceInputs["integritySha384"] = args ? args.integritySha384 : undefined;
            resourceInputs["integritySha512"] = args ? args.integritySha512 : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["prfMd5"] = args ? args.prfMd5 : undefined;
            resourceInputs["prfSha1"] = args ? args.prfSha1 : undefined;
            resourceInputs["prfSha256"] = args ? args.prfSha256 : undefined;
            resourceInputs["prfSha384"] = args ? args.prfSha384 : undefined;
            resourceInputs["prfSha512"] = args ? args.prfSha512 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CryptoIkev2Proposal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CryptoIkev2Proposal resources.
 */
export interface CryptoIkev2ProposalState {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * AES-CBC-128
     */
    encryptionAesCbc128?: pulumi.Input<boolean>;
    /**
     * AES-CBC-192
     */
    encryptionAesCbc192?: pulumi.Input<boolean>;
    /**
     * AES-CBC-256
     */
    encryptionAesCbc256?: pulumi.Input<boolean>;
    /**
     * Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
     */
    encryptionAesGcm128?: pulumi.Input<boolean>;
    /**
     * Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
     */
    encryptionAesGcm256?: pulumi.Input<boolean>;
    /**
     * 3DES
     */
    encryptionEn3des?: pulumi.Input<boolean>;
    /**
     * DH 3072 MODP
     */
    groupFifteen?: pulumi.Input<boolean>;
    /**
     * DH 2048 MODP
     */
    groupFourteen?: pulumi.Input<boolean>;
    /**
     * DH 256 ECP
     */
    groupNineteen?: pulumi.Input<boolean>;
    /**
     * DH 768 MODP
     */
    groupOne?: pulumi.Input<boolean>;
    /**
     * DH 4096 MODP
     */
    groupSixteen?: pulumi.Input<boolean>;
    /**
     * DH 384 ECP
     */
    groupTwenty?: pulumi.Input<boolean>;
    /**
     * DH 2048 (256 subgroup) MODP
     */
    groupTwentyFour?: pulumi.Input<boolean>;
    /**
     * DH 521 ECP
     */
    groupTwentyOne?: pulumi.Input<boolean>;
    /**
     * DH 1024 MODP
     */
    groupTwo?: pulumi.Input<boolean>;
    /**
     * Message Digest 5
     */
    integrityMd5?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard
     */
    integritySha1?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (256 bit)
     */
    integritySha256?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (384 bit)
     */
    integritySha384?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (512 bit)
     */
    integritySha512?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * Message Digest 5
     */
    prfMd5?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard
     */
    prfSha1?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (256 bit)
     */
    prfSha256?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (384 bit)
     */
    prfSha384?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (512 bit)
     */
    prfSha512?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a CryptoIkev2Proposal resource.
 */
export interface CryptoIkev2ProposalArgs {
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * AES-CBC-128
     */
    encryptionAesCbc128?: pulumi.Input<boolean>;
    /**
     * AES-CBC-192
     */
    encryptionAesCbc192?: pulumi.Input<boolean>;
    /**
     * AES-CBC-256
     */
    encryptionAesCbc256?: pulumi.Input<boolean>;
    /**
     * Combined-mode,128 bit key,16 byte ICV(Authentication Tag)
     */
    encryptionAesGcm128?: pulumi.Input<boolean>;
    /**
     * Combined-mode,256 bit key,16 byte ICV(Authentication Tag)
     */
    encryptionAesGcm256?: pulumi.Input<boolean>;
    /**
     * 3DES
     */
    encryptionEn3des?: pulumi.Input<boolean>;
    /**
     * DH 3072 MODP
     */
    groupFifteen?: pulumi.Input<boolean>;
    /**
     * DH 2048 MODP
     */
    groupFourteen?: pulumi.Input<boolean>;
    /**
     * DH 256 ECP
     */
    groupNineteen?: pulumi.Input<boolean>;
    /**
     * DH 768 MODP
     */
    groupOne?: pulumi.Input<boolean>;
    /**
     * DH 4096 MODP
     */
    groupSixteen?: pulumi.Input<boolean>;
    /**
     * DH 384 ECP
     */
    groupTwenty?: pulumi.Input<boolean>;
    /**
     * DH 2048 (256 subgroup) MODP
     */
    groupTwentyFour?: pulumi.Input<boolean>;
    /**
     * DH 521 ECP
     */
    groupTwentyOne?: pulumi.Input<boolean>;
    /**
     * DH 1024 MODP
     */
    groupTwo?: pulumi.Input<boolean>;
    /**
     * Message Digest 5
     */
    integrityMd5?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard
     */
    integritySha1?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (256 bit)
     */
    integritySha256?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (384 bit)
     */
    integritySha384?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (512 bit)
     */
    integritySha512?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    /**
     * Message Digest 5
     */
    prfMd5?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard
     */
    prfSha1?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (256 bit)
     */
    prfSha256?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (384 bit)
     */
    prfSha384?: pulumi.Input<boolean>;
    /**
     * Secure Hash Standard 2 (512 bit)
     */
    prfSha512?: pulumi.Input<boolean>;
}
