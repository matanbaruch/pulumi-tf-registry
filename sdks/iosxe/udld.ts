// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Udld extends pulumi.CustomResource {
    /**
     * Get an existing Udld resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UdldState, opts?: pulumi.CustomResourceOptions): Udld {
        return new Udld(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/udld:Udld';

    /**
     * Returns true if the given object is an instance of Udld.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Udld {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Udld.__pulumiType;
    }

    /**
     * Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured
     */
    public readonly aggressive!: pulumi.Output<boolean | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Enable UDLD protocol on fiber ports except where locally configured
     */
    public readonly enable!: pulumi.Output<boolean | undefined>;
    /**
     * Set UDLD message time period - Range: `1`-`90`
     */
    public readonly messageTime!: pulumi.Output<number | undefined>;
    /**
     * timer-interval(sec) - Range: `30`-`86400`
     */
    public readonly recoveryInterval!: pulumi.Output<number | undefined>;

    /**
     * Create a Udld resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UdldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UdldArgs | UdldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UdldState | undefined;
            resourceInputs["aggressive"] = state ? state.aggressive : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["messageTime"] = state ? state.messageTime : undefined;
            resourceInputs["recoveryInterval"] = state ? state.recoveryInterval : undefined;
        } else {
            const args = argsOrState as UdldArgs | undefined;
            resourceInputs["aggressive"] = args ? args.aggressive : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["messageTime"] = args ? args.messageTime : undefined;
            resourceInputs["recoveryInterval"] = args ? args.recoveryInterval : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Udld.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Udld resources.
 */
export interface UdldState {
    /**
     * Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured
     */
    aggressive?: pulumi.Input<boolean>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Enable UDLD protocol on fiber ports except where locally configured
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Set UDLD message time period - Range: `1`-`90`
     */
    messageTime?: pulumi.Input<number>;
    /**
     * timer-interval(sec) - Range: `30`-`86400`
     */
    recoveryInterval?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Udld resource.
 */
export interface UdldArgs {
    /**
     * Enable UDLD protocol in aggressive mode on fiber ports exceptwhere locally configured
     */
    aggressive?: pulumi.Input<boolean>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Enable UDLD protocol on fiber ports except where locally configured
     */
    enable?: pulumi.Input<boolean>;
    /**
     * Set UDLD message time period - Range: `1`-`90`
     */
    messageTime?: pulumi.Input<number>;
    /**
     * timer-interval(sec) - Range: `30`-`86400`
     */
    recoveryInterval?: pulumi.Input<number>;
}
