// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOspf(args: GetOspfArgs, opts?: pulumi.InvokeOptions): Promise<GetOspfResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getOspf:getOspf", {
        "device": args.device,
        "processId": args.processId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOspf.
 */
export interface GetOspfArgs {
    device?: string;
    processId: number;
}

/**
 * A collection of values returned by getOspf.
 */
export interface GetOspfResult {
    readonly areas: outputs.GetOspfArea[];
    readonly bfdAllInterfaces: boolean;
    readonly defaultInformationOriginate: boolean;
    readonly defaultInformationOriginateAlways: boolean;
    readonly defaultMetric: number;
    readonly device?: string;
    readonly distance: number;
    readonly domainTag: number;
    readonly id: string;
    readonly mplsLdpAutoconfig: boolean;
    readonly mplsLdpSync: boolean;
    readonly neighbors: outputs.GetOspfNeighbor[];
    readonly networks: outputs.GetOspfNetwork[];
    readonly passiveInterfaceDefault: boolean;
    readonly priority: number;
    readonly processId: number;
    readonly routerId: string;
    readonly shutdown: boolean;
    readonly summaryAddresses: outputs.GetOspfSummaryAddress[];
}
export function getOspfOutput(args: GetOspfOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOspfResult> {
    return pulumi.output(args).apply((a: any) => getOspf(a, opts))
}

/**
 * A collection of arguments for invoking getOspf.
 */
export interface GetOspfOutputArgs {
    device?: pulumi.Input<string>;
    processId: pulumi.Input<number>;
}
