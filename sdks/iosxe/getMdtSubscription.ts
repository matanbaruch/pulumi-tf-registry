// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMdtSubscription(args: GetMdtSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetMdtSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getMdtSubscription:getMdtSubscription", {
        "device": args.device,
        "subscriptionId": args.subscriptionId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMdtSubscription.
 */
export interface GetMdtSubscriptionArgs {
    device?: string;
    subscriptionId: number;
}

/**
 * A collection of values returned by getMdtSubscription.
 */
export interface GetMdtSubscriptionResult {
    readonly device?: string;
    readonly encoding: string;
    readonly filterXpath: string;
    readonly id: string;
    readonly receivers: outputs.GetMdtSubscriptionReceiver[];
    readonly sourceAddress: string;
    readonly sourceVrf: string;
    readonly stream: string;
    readonly subscriptionId: number;
    readonly updatePolicyOnChange: boolean;
    readonly updatePolicyPeriodic: number;
}
export function getMdtSubscriptionOutput(args: GetMdtSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMdtSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getMdtSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getMdtSubscription.
 */
export interface GetMdtSubscriptionOutputArgs {
    device?: pulumi.Input<string>;
    subscriptionId: pulumi.Input<number>;
}
