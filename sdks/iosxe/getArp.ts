// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArp(args?: GetArpArgs, opts?: pulumi.InvokeOptions): Promise<GetArpResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getArp:getArp", {
        "device": args.device,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArp.
 */
export interface GetArpArgs {
    device?: string;
}

/**
 * A collection of values returned by getArp.
 */
export interface GetArpResult {
    readonly device?: string;
    readonly entryLearn: number;
    readonly id: string;
    readonly incompleteEntries: number;
    readonly inspectionFilters: outputs.GetArpInspectionFilter[];
    readonly inspectionLogBufferEntries: number;
    readonly inspectionLogBufferLogsEntries: number;
    readonly inspectionLogBufferLogsInterval: number;
    readonly inspectionValidateAllowZeros: boolean;
    readonly inspectionValidateDstMac: boolean;
    readonly inspectionValidateIp: boolean;
    readonly inspectionValidateSrcMac: boolean;
    readonly inspectionVlan: string;
    readonly proxyDisable: boolean;
}
export function getArpOutput(args?: GetArpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetArpResult> {
    return pulumi.output(args).apply((a: any) => getArp(a, opts))
}

/**
 * A collection of arguments for invoking getArp.
 */
export interface GetArpOutputArgs {
    device?: pulumi.Input<string>;
}
