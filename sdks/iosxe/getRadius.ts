// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRadius(args: GetRadiusArgs, opts?: pulumi.InvokeOptions): Promise<GetRadiusResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getRadius:getRadius", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRadius.
 */
export interface GetRadiusArgs {
    device?: string;
    name: string;
}

/**
 * A collection of values returned by getRadius.
 */
export interface GetRadiusResult {
    readonly accountingPort: number;
    readonly authenticationPort: number;
    readonly automateTesterIgnoreAcctPort: boolean;
    readonly automateTesterProbeOnConfig: boolean;
    readonly automateTesterUsername: string;
    readonly device?: string;
    readonly id: string;
    readonly ipv4Address: string;
    readonly key: string;
    readonly name: string;
    readonly pacKey: string;
    readonly pacKeyEncryption: string;
    readonly retransmit: number;
    readonly timeout: number;
}
export function getRadiusOutput(args: GetRadiusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRadiusResult> {
    return pulumi.output(args).apply((a: any) => getRadius(a, opts))
}

/**
 * A collection of arguments for invoking getRadius.
 */
export interface GetRadiusOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
