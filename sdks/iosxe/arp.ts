// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Arp extends pulumi.CustomResource {
    /**
     * Get an existing Arp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArpState, opts?: pulumi.CustomResourceOptions): Arp {
        return new Arp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/arp:Arp';

    /**
     * Returns true if the given object is an instance of Arp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Arp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Arp.__pulumiType;
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Maximum learn entry limit - Range: `255`-`512000`
     */
    public readonly entryLearn!: pulumi.Output<number | undefined>;
    /**
     * Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
     */
    public readonly incompleteEntries!: pulumi.Output<number | undefined>;
    /**
     * Specify ARP acl to be applied
     */
    public readonly inspectionFilters!: pulumi.Output<outputs.ArpInspectionFilter[] | undefined>;
    /**
     * Number of entries for log buffer - Range: `0`-`1024`
     */
    public readonly inspectionLogBufferEntries!: pulumi.Output<number | undefined>;
    /**
     * Number of entries for log buffer - Range: `0`-`1024`
     */
    public readonly inspectionLogBufferLogsEntries!: pulumi.Output<number | undefined>;
    /**
     * Interval for controlling logging rate - Range: `0`-`86400`
     */
    public readonly inspectionLogBufferLogsInterval!: pulumi.Output<number | undefined>;
    /**
     * Allow 0.0.0.0 sender IP address
     */
    public readonly inspectionValidateAllowZeros!: pulumi.Output<boolean | undefined>;
    /**
     * Validate destination MAC address
     */
    public readonly inspectionValidateDstMac!: pulumi.Output<boolean | undefined>;
    /**
     * Validate IP addresses
     */
    public readonly inspectionValidateIp!: pulumi.Output<boolean | undefined>;
    /**
     * Validate source MAC address
     */
    public readonly inspectionValidateSrcMac!: pulumi.Output<boolean | undefined>;
    /**
     * Enable/Disable ARP Inspection on vlans
     */
    public readonly inspectionVlan!: pulumi.Output<string | undefined>;
    /**
     * Disable proxy ARP on all interfaces
     */
    public readonly proxyDisable!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Arp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ArpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArpArgs | ArpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArpState | undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["entryLearn"] = state ? state.entryLearn : undefined;
            resourceInputs["incompleteEntries"] = state ? state.incompleteEntries : undefined;
            resourceInputs["inspectionFilters"] = state ? state.inspectionFilters : undefined;
            resourceInputs["inspectionLogBufferEntries"] = state ? state.inspectionLogBufferEntries : undefined;
            resourceInputs["inspectionLogBufferLogsEntries"] = state ? state.inspectionLogBufferLogsEntries : undefined;
            resourceInputs["inspectionLogBufferLogsInterval"] = state ? state.inspectionLogBufferLogsInterval : undefined;
            resourceInputs["inspectionValidateAllowZeros"] = state ? state.inspectionValidateAllowZeros : undefined;
            resourceInputs["inspectionValidateDstMac"] = state ? state.inspectionValidateDstMac : undefined;
            resourceInputs["inspectionValidateIp"] = state ? state.inspectionValidateIp : undefined;
            resourceInputs["inspectionValidateSrcMac"] = state ? state.inspectionValidateSrcMac : undefined;
            resourceInputs["inspectionVlan"] = state ? state.inspectionVlan : undefined;
            resourceInputs["proxyDisable"] = state ? state.proxyDisable : undefined;
        } else {
            const args = argsOrState as ArpArgs | undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["entryLearn"] = args ? args.entryLearn : undefined;
            resourceInputs["incompleteEntries"] = args ? args.incompleteEntries : undefined;
            resourceInputs["inspectionFilters"] = args ? args.inspectionFilters : undefined;
            resourceInputs["inspectionLogBufferEntries"] = args ? args.inspectionLogBufferEntries : undefined;
            resourceInputs["inspectionLogBufferLogsEntries"] = args ? args.inspectionLogBufferLogsEntries : undefined;
            resourceInputs["inspectionLogBufferLogsInterval"] = args ? args.inspectionLogBufferLogsInterval : undefined;
            resourceInputs["inspectionValidateAllowZeros"] = args ? args.inspectionValidateAllowZeros : undefined;
            resourceInputs["inspectionValidateDstMac"] = args ? args.inspectionValidateDstMac : undefined;
            resourceInputs["inspectionValidateIp"] = args ? args.inspectionValidateIp : undefined;
            resourceInputs["inspectionValidateSrcMac"] = args ? args.inspectionValidateSrcMac : undefined;
            resourceInputs["inspectionVlan"] = args ? args.inspectionVlan : undefined;
            resourceInputs["proxyDisable"] = args ? args.proxyDisable : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Arp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Arp resources.
 */
export interface ArpState {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Maximum learn entry limit - Range: `255`-`512000`
     */
    entryLearn?: pulumi.Input<number>;
    /**
     * Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
     */
    incompleteEntries?: pulumi.Input<number>;
    /**
     * Specify ARP acl to be applied
     */
    inspectionFilters?: pulumi.Input<pulumi.Input<inputs.ArpInspectionFilter>[]>;
    /**
     * Number of entries for log buffer - Range: `0`-`1024`
     */
    inspectionLogBufferEntries?: pulumi.Input<number>;
    /**
     * Number of entries for log buffer - Range: `0`-`1024`
     */
    inspectionLogBufferLogsEntries?: pulumi.Input<number>;
    /**
     * Interval for controlling logging rate - Range: `0`-`86400`
     */
    inspectionLogBufferLogsInterval?: pulumi.Input<number>;
    /**
     * Allow 0.0.0.0 sender IP address
     */
    inspectionValidateAllowZeros?: pulumi.Input<boolean>;
    /**
     * Validate destination MAC address
     */
    inspectionValidateDstMac?: pulumi.Input<boolean>;
    /**
     * Validate IP addresses
     */
    inspectionValidateIp?: pulumi.Input<boolean>;
    /**
     * Validate source MAC address
     */
    inspectionValidateSrcMac?: pulumi.Input<boolean>;
    /**
     * Enable/Disable ARP Inspection on vlans
     */
    inspectionVlan?: pulumi.Input<string>;
    /**
     * Disable proxy ARP on all interfaces
     */
    proxyDisable?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Arp resource.
 */
export interface ArpArgs {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Maximum learn entry limit - Range: `255`-`512000`
     */
    entryLearn?: pulumi.Input<number>;
    /**
     * Specify the number of IP addresses to resolve - Range: `1`-`2147483647`
     */
    incompleteEntries?: pulumi.Input<number>;
    /**
     * Specify ARP acl to be applied
     */
    inspectionFilters?: pulumi.Input<pulumi.Input<inputs.ArpInspectionFilter>[]>;
    /**
     * Number of entries for log buffer - Range: `0`-`1024`
     */
    inspectionLogBufferEntries?: pulumi.Input<number>;
    /**
     * Number of entries for log buffer - Range: `0`-`1024`
     */
    inspectionLogBufferLogsEntries?: pulumi.Input<number>;
    /**
     * Interval for controlling logging rate - Range: `0`-`86400`
     */
    inspectionLogBufferLogsInterval?: pulumi.Input<number>;
    /**
     * Allow 0.0.0.0 sender IP address
     */
    inspectionValidateAllowZeros?: pulumi.Input<boolean>;
    /**
     * Validate destination MAC address
     */
    inspectionValidateDstMac?: pulumi.Input<boolean>;
    /**
     * Validate IP addresses
     */
    inspectionValidateIp?: pulumi.Input<boolean>;
    /**
     * Validate source MAC address
     */
    inspectionValidateSrcMac?: pulumi.Input<boolean>;
    /**
     * Enable/Disable ARP Inspection on vlans
     */
    inspectionVlan?: pulumi.Input<string>;
    /**
     * Disable proxy ARP on all interfaces
     */
    proxyDisable?: pulumi.Input<boolean>;
}
