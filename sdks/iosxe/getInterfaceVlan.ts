// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInterfaceVlan(args: GetInterfaceVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceVlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getInterfaceVlan:getInterfaceVlan", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceVlan.
 */
export interface GetInterfaceVlanArgs {
    device?: string;
    name: number;
}

/**
 * A collection of values returned by getInterfaceVlan.
 */
export interface GetInterfaceVlanResult {
    readonly autostate: boolean;
    readonly bfdEcho: boolean;
    readonly bfdEnable: boolean;
    readonly bfdInterval: number;
    readonly bfdIntervalMinRx: number;
    readonly bfdIntervalMultiplier: number;
    readonly bfdLocalAddress: string;
    readonly bfdTemplate: string;
    readonly description: string;
    readonly device?: string;
    readonly helperAddresses: outputs.GetInterfaceVlanHelperAddress[];
    readonly id: string;
    readonly ipAccessGroupIn: string;
    readonly ipAccessGroupInEnable: boolean;
    readonly ipAccessGroupOut: string;
    readonly ipAccessGroupOutEnable: boolean;
    readonly ipDhcpRelaySourceInterface: string;
    readonly ipProxyArp: boolean;
    readonly ipRedirects: boolean;
    readonly ipUnreachables: boolean;
    readonly ipv4Address: string;
    readonly ipv4AddressMask: string;
    readonly ipv6AddressAutoconfigDefault: boolean;
    readonly ipv6AddressDhcp: boolean;
    readonly ipv6Addresses: outputs.GetInterfaceVlanIpv6Address[];
    readonly ipv6Enable: boolean;
    readonly ipv6LinkLocalAddresses: outputs.GetInterfaceVlanIpv6LinkLocalAddress[];
    readonly ipv6Mtu: number;
    readonly ipv6NdRaSuppressAll: boolean;
    readonly loadInterval: number;
    readonly name: number;
    readonly shutdown: boolean;
    readonly unnumbered: string;
    readonly vrfForwarding: string;
}
export function getInterfaceVlanOutput(args: GetInterfaceVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceVlanResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceVlan(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceVlan.
 */
export interface GetInterfaceVlanOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<number>;
}
