// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class BgpIpv6UnicastNeighbor extends pulumi.CustomResource {
    /**
     * Get an existing BgpIpv6UnicastNeighbor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BgpIpv6UnicastNeighborState, opts?: pulumi.CustomResourceOptions): BgpIpv6UnicastNeighbor {
        return new BgpIpv6UnicastNeighbor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/bgpIpv6UnicastNeighbor:BgpIpv6UnicastNeighbor';

    /**
     * Returns true if the given object is an instance of BgpIpv6UnicastNeighbor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BgpIpv6UnicastNeighbor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BgpIpv6UnicastNeighbor.__pulumiType;
    }

    /**
     * Enable the address family for this neighbor - Default value: `true`
     */
    public readonly activate!: pulumi.Output<boolean>;
    public readonly asn!: pulumi.Output<string>;
    /**
     * Originate default route to this neighbor
     */
    public readonly defaultOriginate!: pulumi.Output<boolean | undefined>;
    /**
     * Route-map to specify criteria to originate default
     */
    public readonly defaultOriginateRouteMap!: pulumi.Output<string | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    public readonly ip!: pulumi.Output<string>;
    /**
     * Apply route map to neighbor
     */
    public readonly routeMaps!: pulumi.Output<outputs.BgpIpv6UnicastNeighborRouteMap[] | undefined>;
    /**
     * Configure a neighbor as Route Reflector client
     */
    public readonly routeReflectorClient!: pulumi.Output<boolean | undefined>;
    /**
     * - Choices: `both`, `extended`, `standard`
     */
    public readonly sendCommunity!: pulumi.Output<string | undefined>;
    /**
     * Per neighbor soft reconfiguration - Choices: `inbound`
     */
    public readonly softReconfiguration!: pulumi.Output<string | undefined>;

    /**
     * Create a BgpIpv6UnicastNeighbor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BgpIpv6UnicastNeighborArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BgpIpv6UnicastNeighborArgs | BgpIpv6UnicastNeighborState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BgpIpv6UnicastNeighborState | undefined;
            resourceInputs["activate"] = state ? state.activate : undefined;
            resourceInputs["asn"] = state ? state.asn : undefined;
            resourceInputs["defaultOriginate"] = state ? state.defaultOriginate : undefined;
            resourceInputs["defaultOriginateRouteMap"] = state ? state.defaultOriginateRouteMap : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["routeMaps"] = state ? state.routeMaps : undefined;
            resourceInputs["routeReflectorClient"] = state ? state.routeReflectorClient : undefined;
            resourceInputs["sendCommunity"] = state ? state.sendCommunity : undefined;
            resourceInputs["softReconfiguration"] = state ? state.softReconfiguration : undefined;
        } else {
            const args = argsOrState as BgpIpv6UnicastNeighborArgs | undefined;
            if ((!args || args.asn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asn'");
            }
            if ((!args || args.ip === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ip'");
            }
            resourceInputs["activate"] = args ? args.activate : undefined;
            resourceInputs["asn"] = args ? args.asn : undefined;
            resourceInputs["defaultOriginate"] = args ? args.defaultOriginate : undefined;
            resourceInputs["defaultOriginateRouteMap"] = args ? args.defaultOriginateRouteMap : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["routeMaps"] = args ? args.routeMaps : undefined;
            resourceInputs["routeReflectorClient"] = args ? args.routeReflectorClient : undefined;
            resourceInputs["sendCommunity"] = args ? args.sendCommunity : undefined;
            resourceInputs["softReconfiguration"] = args ? args.softReconfiguration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BgpIpv6UnicastNeighbor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering BgpIpv6UnicastNeighbor resources.
 */
export interface BgpIpv6UnicastNeighborState {
    /**
     * Enable the address family for this neighbor - Default value: `true`
     */
    activate?: pulumi.Input<boolean>;
    asn?: pulumi.Input<string>;
    /**
     * Originate default route to this neighbor
     */
    defaultOriginate?: pulumi.Input<boolean>;
    /**
     * Route-map to specify criteria to originate default
     */
    defaultOriginateRouteMap?: pulumi.Input<string>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    ip?: pulumi.Input<string>;
    /**
     * Apply route map to neighbor
     */
    routeMaps?: pulumi.Input<pulumi.Input<inputs.BgpIpv6UnicastNeighborRouteMap>[]>;
    /**
     * Configure a neighbor as Route Reflector client
     */
    routeReflectorClient?: pulumi.Input<boolean>;
    /**
     * - Choices: `both`, `extended`, `standard`
     */
    sendCommunity?: pulumi.Input<string>;
    /**
     * Per neighbor soft reconfiguration - Choices: `inbound`
     */
    softReconfiguration?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BgpIpv6UnicastNeighbor resource.
 */
export interface BgpIpv6UnicastNeighborArgs {
    /**
     * Enable the address family for this neighbor - Default value: `true`
     */
    activate?: pulumi.Input<boolean>;
    asn: pulumi.Input<string>;
    /**
     * Originate default route to this neighbor
     */
    defaultOriginate?: pulumi.Input<boolean>;
    /**
     * Route-map to specify criteria to originate default
     */
    defaultOriginateRouteMap?: pulumi.Input<string>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    /**
     * Apply route map to neighbor
     */
    routeMaps?: pulumi.Input<pulumi.Input<inputs.BgpIpv6UnicastNeighborRouteMap>[]>;
    /**
     * Configure a neighbor as Route Reflector client
     */
    routeReflectorClient?: pulumi.Input<boolean>;
    /**
     * - Choices: `both`, `extended`, `standard`
     */
    sendCommunity?: pulumi.Input<string>;
    /**
     * Per neighbor soft reconfiguration - Choices: `inbound`
     */
    softReconfiguration?: pulumi.Input<string>;
}
