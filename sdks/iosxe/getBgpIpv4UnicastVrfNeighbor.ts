// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBgpIpv4UnicastVrfNeighbor(args: GetBgpIpv4UnicastVrfNeighborArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpIpv4UnicastVrfNeighborResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getBgpIpv4UnicastVrfNeighbor:getBgpIpv4UnicastVrfNeighbor", {
        "asn": args.asn,
        "device": args.device,
        "ip": args.ip,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBgpIpv4UnicastVrfNeighbor.
 */
export interface GetBgpIpv4UnicastVrfNeighborArgs {
    asn: string;
    device?: string;
    ip: string;
    vrf: string;
}

/**
 * A collection of values returned by getBgpIpv4UnicastVrfNeighbor.
 */
export interface GetBgpIpv4UnicastVrfNeighborResult {
    readonly activate: boolean;
    readonly advertisementInterval: number;
    readonly asn: string;
    readonly clusterId: string;
    readonly defaultOriginate: boolean;
    readonly defaultOriginateRouteMap: string;
    readonly description: string;
    readonly device?: string;
    readonly disableConnectedCheck: boolean;
    readonly ebgpMultihop: boolean;
    readonly ebgpMultihopMaxHop: number;
    readonly fallOverBfd: boolean;
    readonly fallOverBfdCheckControlPlaneFailure: boolean;
    readonly fallOverBfdMultiHop: boolean;
    readonly fallOverBfdSingleHop: boolean;
    readonly fallOverBfdStrictMode: boolean;
    readonly fallOverDefaultRouteMap: string;
    readonly fallOverMaximumMetricRouteMap: string;
    readonly haModeGracefulRestart: boolean;
    readonly id: string;
    readonly ip: string;
    readonly localAs: string;
    readonly localAsDualAs: boolean;
    readonly localAsNoPrepend: boolean;
    readonly localAsReplaceAs: boolean;
    readonly logNeighborChangesDisable: boolean;
    readonly nextHopSelf: boolean;
    readonly nextHopSelfAll: boolean;
    readonly password: string;
    readonly passwordType: number;
    readonly remoteAs: string;
    readonly routeMaps: outputs.GetBgpIpv4UnicastVrfNeighborRouteMap[];
    readonly routeReflectorClient: boolean;
    readonly sendCommunity: string;
    readonly shutdown: boolean;
    readonly softReconfiguration: string;
    readonly timersHoldtime: number;
    readonly timersKeepaliveInterval: number;
    readonly timersMinimumNeighborHold: number;
    readonly ttlSecurityHops: number;
    readonly updateSourceLoopback: string;
    readonly version: number;
    readonly vrf: string;
}
export function getBgpIpv4UnicastVrfNeighborOutput(args: GetBgpIpv4UnicastVrfNeighborOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpIpv4UnicastVrfNeighborResult> {
    return pulumi.output(args).apply((a: any) => getBgpIpv4UnicastVrfNeighbor(a, opts))
}

/**
 * A collection of arguments for invoking getBgpIpv4UnicastVrfNeighbor.
 */
export interface GetBgpIpv4UnicastVrfNeighborOutputArgs {
    asn: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
    vrf: pulumi.Input<string>;
}
