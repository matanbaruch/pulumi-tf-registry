// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ClassMap extends pulumi.CustomResource {
    /**
     * Get an existing ClassMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClassMapState, opts?: pulumi.CustomResourceOptions): ClassMap {
        return new ClassMap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/classMap:ClassMap';

    /**
     * Returns true if the given object is an instance of ClassMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClassMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClassMap.__pulumiType;
    }

    /**
     * Class-Map description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * match name of service template activated on session
     */
    public readonly matchActivatedServiceTemplates!: pulumi.Output<outputs.ClassMapMatchActivatedServiceTemplate[] | undefined>;
    /**
     * authorized
     */
    public readonly matchAuthorizationStatusAuthorized!: pulumi.Output<boolean | undefined>;
    /**
     * unauthorized
     */
    public readonly matchAuthorizationStatusUnauthorized!: pulumi.Output<boolean | undefined>;
    /**
     * greater than
     */
    public readonly matchAuthorizingMethodPriorityGreaterThans!: pulumi.Output<number[] | undefined>;
    /**
     * Match DSCP in IP(v4) and IPv6 packets
     */
    public readonly matchDscps!: pulumi.Output<string[] | undefined>;
    /**
     * dot1x
     */
    public readonly matchMethodDot1x!: pulumi.Output<boolean | undefined>;
    /**
     * mab
     */
    public readonly matchMethodMab!: pulumi.Output<boolean | undefined>;
    /**
     * aaa timeout type
     */
    public readonly matchResultTypeAaaTimeout!: pulumi.Output<boolean | undefined>;
    /**
     * agent not found type
     */
    public readonly matchResultTypeMethodDot1xAgentNotFound!: pulumi.Output<boolean | undefined>;
    /**
     * failure type
     */
    public readonly matchResultTypeMethodDot1xAuthoritative!: pulumi.Output<boolean | undefined>;
    /**
     * method_timeout type
     */
    public readonly matchResultTypeMethodDot1xMethodTimeout!: pulumi.Output<boolean | undefined>;
    /**
     * failure type
     */
    public readonly matchResultTypeMethodMabAuthoritative!: pulumi.Output<boolean | undefined>;
    /**
     * name of the class map
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
     */
    public readonly prematch!: pulumi.Output<string>;
    /**
     * Domain name of the class map
     */
    public readonly subscriber!: pulumi.Output<boolean | undefined>;
    /**
     * type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
     * `stack`, `traffic`
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a ClassMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClassMapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClassMapArgs | ClassMapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClassMapState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["matchActivatedServiceTemplates"] = state ? state.matchActivatedServiceTemplates : undefined;
            resourceInputs["matchAuthorizationStatusAuthorized"] = state ? state.matchAuthorizationStatusAuthorized : undefined;
            resourceInputs["matchAuthorizationStatusUnauthorized"] = state ? state.matchAuthorizationStatusUnauthorized : undefined;
            resourceInputs["matchAuthorizingMethodPriorityGreaterThans"] = state ? state.matchAuthorizingMethodPriorityGreaterThans : undefined;
            resourceInputs["matchDscps"] = state ? state.matchDscps : undefined;
            resourceInputs["matchMethodDot1x"] = state ? state.matchMethodDot1x : undefined;
            resourceInputs["matchMethodMab"] = state ? state.matchMethodMab : undefined;
            resourceInputs["matchResultTypeAaaTimeout"] = state ? state.matchResultTypeAaaTimeout : undefined;
            resourceInputs["matchResultTypeMethodDot1xAgentNotFound"] = state ? state.matchResultTypeMethodDot1xAgentNotFound : undefined;
            resourceInputs["matchResultTypeMethodDot1xAuthoritative"] = state ? state.matchResultTypeMethodDot1xAuthoritative : undefined;
            resourceInputs["matchResultTypeMethodDot1xMethodTimeout"] = state ? state.matchResultTypeMethodDot1xMethodTimeout : undefined;
            resourceInputs["matchResultTypeMethodMabAuthoritative"] = state ? state.matchResultTypeMethodMabAuthoritative : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prematch"] = state ? state.prematch : undefined;
            resourceInputs["subscriber"] = state ? state.subscriber : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as ClassMapArgs | undefined;
            if ((!args || args.prematch === undefined) && !opts.urn) {
                throw new Error("Missing required property 'prematch'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["matchActivatedServiceTemplates"] = args ? args.matchActivatedServiceTemplates : undefined;
            resourceInputs["matchAuthorizationStatusAuthorized"] = args ? args.matchAuthorizationStatusAuthorized : undefined;
            resourceInputs["matchAuthorizationStatusUnauthorized"] = args ? args.matchAuthorizationStatusUnauthorized : undefined;
            resourceInputs["matchAuthorizingMethodPriorityGreaterThans"] = args ? args.matchAuthorizingMethodPriorityGreaterThans : undefined;
            resourceInputs["matchDscps"] = args ? args.matchDscps : undefined;
            resourceInputs["matchMethodDot1x"] = args ? args.matchMethodDot1x : undefined;
            resourceInputs["matchMethodMab"] = args ? args.matchMethodMab : undefined;
            resourceInputs["matchResultTypeAaaTimeout"] = args ? args.matchResultTypeAaaTimeout : undefined;
            resourceInputs["matchResultTypeMethodDot1xAgentNotFound"] = args ? args.matchResultTypeMethodDot1xAgentNotFound : undefined;
            resourceInputs["matchResultTypeMethodDot1xAuthoritative"] = args ? args.matchResultTypeMethodDot1xAuthoritative : undefined;
            resourceInputs["matchResultTypeMethodDot1xMethodTimeout"] = args ? args.matchResultTypeMethodDot1xMethodTimeout : undefined;
            resourceInputs["matchResultTypeMethodMabAuthoritative"] = args ? args.matchResultTypeMethodMabAuthoritative : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["prematch"] = args ? args.prematch : undefined;
            resourceInputs["subscriber"] = args ? args.subscriber : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClassMap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ClassMap resources.
 */
export interface ClassMapState {
    /**
     * Class-Map description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * match name of service template activated on session
     */
    matchActivatedServiceTemplates?: pulumi.Input<pulumi.Input<inputs.ClassMapMatchActivatedServiceTemplate>[]>;
    /**
     * authorized
     */
    matchAuthorizationStatusAuthorized?: pulumi.Input<boolean>;
    /**
     * unauthorized
     */
    matchAuthorizationStatusUnauthorized?: pulumi.Input<boolean>;
    /**
     * greater than
     */
    matchAuthorizingMethodPriorityGreaterThans?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Match DSCP in IP(v4) and IPv6 packets
     */
    matchDscps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * dot1x
     */
    matchMethodDot1x?: pulumi.Input<boolean>;
    /**
     * mab
     */
    matchMethodMab?: pulumi.Input<boolean>;
    /**
     * aaa timeout type
     */
    matchResultTypeAaaTimeout?: pulumi.Input<boolean>;
    /**
     * agent not found type
     */
    matchResultTypeMethodDot1xAgentNotFound?: pulumi.Input<boolean>;
    /**
     * failure type
     */
    matchResultTypeMethodDot1xAuthoritative?: pulumi.Input<boolean>;
    /**
     * method_timeout type
     */
    matchResultTypeMethodDot1xMethodTimeout?: pulumi.Input<boolean>;
    /**
     * failure type
     */
    matchResultTypeMethodMabAuthoritative?: pulumi.Input<boolean>;
    /**
     * name of the class map
     */
    name?: pulumi.Input<string>;
    /**
     * Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
     */
    prematch?: pulumi.Input<string>;
    /**
     * Domain name of the class map
     */
    subscriber?: pulumi.Input<boolean>;
    /**
     * type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
     * `stack`, `traffic`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClassMap resource.
 */
export interface ClassMapArgs {
    /**
     * Class-Map description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * match name of service template activated on session
     */
    matchActivatedServiceTemplates?: pulumi.Input<pulumi.Input<inputs.ClassMapMatchActivatedServiceTemplate>[]>;
    /**
     * authorized
     */
    matchAuthorizationStatusAuthorized?: pulumi.Input<boolean>;
    /**
     * unauthorized
     */
    matchAuthorizationStatusUnauthorized?: pulumi.Input<boolean>;
    /**
     * greater than
     */
    matchAuthorizingMethodPriorityGreaterThans?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Match DSCP in IP(v4) and IPv6 packets
     */
    matchDscps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * dot1x
     */
    matchMethodDot1x?: pulumi.Input<boolean>;
    /**
     * mab
     */
    matchMethodMab?: pulumi.Input<boolean>;
    /**
     * aaa timeout type
     */
    matchResultTypeAaaTimeout?: pulumi.Input<boolean>;
    /**
     * agent not found type
     */
    matchResultTypeMethodDot1xAgentNotFound?: pulumi.Input<boolean>;
    /**
     * failure type
     */
    matchResultTypeMethodDot1xAuthoritative?: pulumi.Input<boolean>;
    /**
     * method_timeout type
     */
    matchResultTypeMethodDot1xMethodTimeout?: pulumi.Input<boolean>;
    /**
     * failure type
     */
    matchResultTypeMethodMabAuthoritative?: pulumi.Input<boolean>;
    /**
     * name of the class map
     */
    name?: pulumi.Input<string>;
    /**
     * Logical-AND/Logical-OR of all matching statements under this class map - Choices: `match-all`, `match-any`, `match-none`
     */
    prematch: pulumi.Input<string>;
    /**
     * Domain name of the class map
     */
    subscriber?: pulumi.Input<boolean>;
    /**
     * type of the class-map - Choices: `access-control`, `appnav`, `control`, `inspect`, `multicast-flows`, `site-manager`,
     * `stack`, `traffic`
     */
    type?: pulumi.Input<string>;
}
