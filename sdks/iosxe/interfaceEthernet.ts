// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class InterfaceEthernet extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceEthernet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceEthernetState, opts?: pulumi.CustomResourceOptions): InterfaceEthernet {
        return new InterfaceEthernet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/interfaceEthernet:InterfaceEthernet';

    /**
     * Returns true if the given object is an instance of InterfaceEthernet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceEthernet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceEthernet.__pulumiType;
    }

    /**
     * Set ARP cache timeout - Range: `0`-`2147483`
     */
    public readonly arpTimeout!: pulumi.Output<number | undefined>;
    /**
     * Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
     * `single-host`
     */
    public readonly authenticationHostMode!: pulumi.Output<string | undefined>;
    /**
     * Authentication method dot1x allowed
     */
    public readonly authenticationOrderDot1x!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method mab allowed
     */
    public readonly authenticationOrderDot1xMab!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method webauth allowed
     */
    public readonly authenticationOrderDot1xWebauth!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method mab allowed
     */
    public readonly authenticationOrderMab!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method dot1x allowed
     */
    public readonly authenticationOrderMabDot1x!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method webauth allowed
     */
    public readonly authenticationOrderMabWebauth!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method webauth allowed
     */
    public readonly authenticationOrderWebauth!: pulumi.Output<boolean | undefined>;
    /**
     * Enable or Disable Reauthentication for this port
     */
    public readonly authenticationPeriodic!: pulumi.Output<boolean | undefined>;
    /**
     * set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
     */
    public readonly authenticationPortControl!: pulumi.Output<string | undefined>;
    /**
     * Authentication method dot1x allowed
     */
    public readonly authenticationPriorityDot1x!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method mab allowed
     */
    public readonly authenticationPriorityDot1xMab!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method webauth allowed
     */
    public readonly authenticationPriorityDot1xWebauth!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method mab allowed
     */
    public readonly authenticationPriorityMab!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method dot1x allowed
     */
    public readonly authenticationPriorityMabDot1x!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method webauth allowed
     */
    public readonly authenticationPriorityMabWebauth!: pulumi.Output<boolean | undefined>;
    /**
     * Authentication method webauth allowed
     */
    public readonly authenticationPriorityWebauth!: pulumi.Output<boolean | undefined>;
    /**
     * Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
     */
    public readonly authenticationTimerReauthenticate!: pulumi.Output<number | undefined>;
    /**
     * Obtain re-authentication timeout value from the server
     */
    public readonly authenticationTimerReauthenticateServer!: pulumi.Output<boolean | undefined>;
    /**
     * Configure classification for untrusted devices
     */
    public readonly autoQosClassify!: pulumi.Output<boolean | undefined>;
    /**
     * Configure QoS policing for untrusted devices
     */
    public readonly autoQosClassifyPolice!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the DSCP/CoS marking
     */
    public readonly autoQosTrust!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the CoS marking
     */
    public readonly autoQosTrustCos!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the DSCP marking
     */
    public readonly autoQosTrustDscp!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the QoS marking of the Cisco Telepresence System
     */
    public readonly autoQosVideoCts!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the QoS marking of the Ip Video Surveillance camera
     */
    public readonly autoQosVideoIpCamera!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the Qos marking of the Cisco Media Player
     */
    public readonly autoQosVideoMediaPlayer!: pulumi.Output<boolean | undefined>;
    /**
     * Configure AutoQoS for VoIP
     */
    public readonly autoQosVoip!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the QoS marking of Cisco IP Phone
     */
    public readonly autoQosVoipCiscoPhone!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the QoS marking of Cisco IP SoftPhone
     */
    public readonly autoQosVoipCiscoSoftphone!: pulumi.Output<boolean | undefined>;
    /**
     * Trust the DSCP/CoS marking
     */
    public readonly autoQosVoipTrust!: pulumi.Output<boolean | undefined>;
    /**
     * - Range: `1`-`200000000`
     */
    public readonly bandwidth!: pulumi.Output<number | undefined>;
    /**
     * Use echo adjunct as bfd detection mechanism
     */
    public readonly bfdEcho!: pulumi.Output<boolean | undefined>;
    /**
     * Enable BFD under the interface
     */
    public readonly bfdEnable!: pulumi.Output<boolean | undefined>;
    /**
     * - Range: `50`-`9999`
     */
    public readonly bfdInterval!: pulumi.Output<number | undefined>;
    /**
     * Minimum receive interval capability - Range: `50`-`9999`
     */
    public readonly bfdIntervalMinRx!: pulumi.Output<number | undefined>;
    /**
     * Multiplier value used to compute holddown - Range: `3`-`50`
     */
    public readonly bfdIntervalMultiplier!: pulumi.Output<number | undefined>;
    /**
     * The Source IP address to be used for BFD sessions over this interface.
     */
    public readonly bfdLocalAddress!: pulumi.Output<string | undefined>;
    /**
     * BFD template
     */
    public readonly bfdTemplate!: pulumi.Output<string | undefined>;
    /**
     * Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`
     */
    public readonly channelGroupMode!: pulumi.Output<string | undefined>;
    /**
     * - Range: `1`-`512`
     */
    public readonly channelGroupNumber!: pulumi.Output<number | undefined>;
    /**
     * Interface specific description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Max No. of Reauthentication Attempts - Range: `1`-`10`
     */
    public readonly dot1xMaxReauthReq!: pulumi.Output<number | undefined>;
    /**
     * Max No. of Retries - Range: `1`-`10`
     */
    public readonly dot1xMaxReq!: pulumi.Output<number | undefined>;
    /**
     * Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
     */
    public readonly dot1xPae!: pulumi.Output<string | undefined>;
    /**
     * Timeout for authenticator reply - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutAuthPeriod!: pulumi.Output<number | undefined>;
    /**
     * Timeout for authentication retries - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutHeldPeriod!: pulumi.Output<number | undefined>;
    /**
     * QuietPeriod in Seconds - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutQuietPeriod!: pulumi.Output<number | undefined>;
    /**
     * Ratelimit Period in seconds - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutRatelimitPeriod!: pulumi.Output<number | undefined>;
    /**
     * Timeout for Radius Retries - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutServerTimeout!: pulumi.Output<number | undefined>;
    /**
     * Timeout for EAPOL-start retries - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutStartPeriod!: pulumi.Output<number | undefined>;
    /**
     * Timeout for supplicant reply - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutSuppTimeout!: pulumi.Output<number | undefined>;
    /**
     * Timeout for supplicant retries - Range: `1`-`65535`
     */
    public readonly dot1xTimeoutTxPeriod!: pulumi.Output<number | undefined>;
    /**
     * - Range: `1`-`4094`
     */
    public readonly encapsulationDot1qVlanId!: pulumi.Output<number | undefined>;
    /**
     * Specify a destination address for UDP broadcasts
     */
    public readonly helperAddresses!: pulumi.Output<outputs.InterfaceEthernetHelperAddress[] | undefined>;
    public readonly ipAccessGroupIn!: pulumi.Output<string | undefined>;
    /**
     * inbound packets
     */
    public readonly ipAccessGroupInEnable!: pulumi.Output<boolean | undefined>;
    public readonly ipAccessGroupOut!: pulumi.Output<string | undefined>;
    /**
     * outbound packets
     */
    public readonly ipAccessGroupOutEnable!: pulumi.Output<boolean | undefined>;
    /**
     * Rate Limit - Range: `0`-`4294967295`
     */
    public readonly ipArpInspectionLimitRate!: pulumi.Output<number | undefined>;
    /**
     * Configure Trust state
     */
    public readonly ipArpInspectionTrust!: pulumi.Output<boolean | undefined>;
    /**
     * Set source interface for relayed messages
     */
    public readonly ipDhcpRelaySourceInterface!: pulumi.Output<string | undefined>;
    /**
     * DHCP Snooping trust config
     */
    public readonly ipDhcpSnoopingTrust!: pulumi.Output<boolean | undefined>;
    /**
     * Apply a Flow Monitor
     */
    public readonly ipFlowMonitors!: pulumi.Output<outputs.InterfaceEthernetIpFlowMonitor[] | undefined>;
    /**
     * Enable proxy ARP
     */
    public readonly ipProxyArp!: pulumi.Output<boolean | undefined>;
    /**
     * Enable sending ICMP Redirect messages
     */
    public readonly ipRedirects!: pulumi.Output<boolean | undefined>;
    /**
     * Enable sending ICMP Unreachable messages
     */
    public readonly ipUnreachables!: pulumi.Output<boolean | undefined>;
    public readonly ipv4Address!: pulumi.Output<string | undefined>;
    public readonly ipv4AddressMask!: pulumi.Output<string | undefined>;
    /**
     * Insert default route
     */
    public readonly ipv6AddressAutoconfigDefault!: pulumi.Output<boolean | undefined>;
    /**
     * Obtain IPv6 address from DHCP server
     */
    public readonly ipv6AddressDhcp!: pulumi.Output<boolean | undefined>;
    public readonly ipv6Addresses!: pulumi.Output<outputs.InterfaceEthernetIpv6Address[] | undefined>;
    /**
     * Enable IPv6 on interface
     */
    public readonly ipv6Enable!: pulumi.Output<boolean | undefined>;
    public readonly ipv6LinkLocalAddresses!: pulumi.Output<outputs.InterfaceEthernetIpv6LinkLocalAddress[] | undefined>;
    /**
     * Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
     */
    public readonly ipv6Mtu!: pulumi.Output<number | undefined>;
    /**
     * Suppress all IPv6 RA
     */
    public readonly ipv6NdRaSuppressAll!: pulumi.Output<boolean | undefined>;
    /**
     * Specify interval for load calculation for an interface - Range: `30`-`600`
     */
    public readonly loadInterval!: pulumi.Output<number | undefined>;
    /**
     * UPDOWN and CHANGE messages
     */
    public readonly loggingEventLinkStatusEnable!: pulumi.Output<boolean | undefined>;
    /**
     * MAC Authentication Bypass Interface Config Commands
     */
    public readonly mab!: pulumi.Output<boolean | undefined>;
    /**
     * Use EAP authentication for MAC Auth Bypass
     */
    public readonly mabEap!: pulumi.Output<boolean | undefined>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    public readonly mediaType!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Enable link autonegotiation
     */
    public readonly negotiationAuto!: pulumi.Output<boolean | undefined>;
    /**
     * Assign policy-map to the input of an interface
     */
    public readonly servicePolicyInput!: pulumi.Output<string | undefined>;
    /**
     * Assign policy-map to the output of an interface
     */
    public readonly servicePolicyOutput!: pulumi.Output<string | undefined>;
    /**
     * Shutdown the selected interface
     */
    public readonly shutdown!: pulumi.Output<boolean | undefined>;
    /**
     * Allow SNMP LINKUP and LINKDOWN traps
     */
    public readonly snmpTrapLinkStatus!: pulumi.Output<boolean | undefined>;
    public readonly sourceTemplates!: pulumi.Output<outputs.InterfaceEthernetSourceTemplate[] | undefined>;
    /**
     * Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`
     */
    public readonly spanningTreeGuard!: pulumi.Output<string | undefined>;
    /**
     * Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`
     */
    public readonly spanningTreeLinkType!: pulumi.Output<string | undefined>;
    /**
     * Enable portfast on the interface even in trunk mode
     */
    public readonly spanningTreePortfastTrunk!: pulumi.Output<boolean | undefined>;
    /**
     * 100 Mbps operation
     */
    public readonly speed100!: pulumi.Output<boolean | undefined>;
    /**
     * 1000 Mbps operation
     */
    public readonly speed1000!: pulumi.Output<boolean | undefined>;
    /**
     * 10000 Mbps operation
     */
    public readonly speed10000!: pulumi.Output<boolean | undefined>;
    /**
     * 100000 Mbps operation
     */
    public readonly speed100000!: pulumi.Output<boolean | undefined>;
    /**
     * 2500 Mbps operation
     */
    public readonly speed2500!: pulumi.Output<boolean | undefined>;
    /**
     * 25000 Mbps operation
     */
    public readonly speed25000!: pulumi.Output<boolean | undefined>;
    /**
     * 40000 Mbps operation
     */
    public readonly speed40000!: pulumi.Output<boolean | undefined>;
    /**
     * 5000 Mbps operation
     */
    public readonly speed5000!: pulumi.Output<boolean | undefined>;
    public readonly speedNonegotiate!: pulumi.Output<boolean | undefined>;
    public readonly switchport!: pulumi.Output<boolean | undefined>;
    /**
     * trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`
     */
    public readonly trustDevice!: pulumi.Output<string | undefined>;
    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Enable IP processing without an explicit address
     */
    public readonly unnumbered!: pulumi.Output<string | undefined>;
    /**
     * Configure forwarding table
     */
    public readonly vrfForwarding!: pulumi.Output<string | undefined>;

    /**
     * Create a InterfaceEthernet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceEthernetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceEthernetArgs | InterfaceEthernetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceEthernetState | undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["authenticationHostMode"] = state ? state.authenticationHostMode : undefined;
            resourceInputs["authenticationOrderDot1x"] = state ? state.authenticationOrderDot1x : undefined;
            resourceInputs["authenticationOrderDot1xMab"] = state ? state.authenticationOrderDot1xMab : undefined;
            resourceInputs["authenticationOrderDot1xWebauth"] = state ? state.authenticationOrderDot1xWebauth : undefined;
            resourceInputs["authenticationOrderMab"] = state ? state.authenticationOrderMab : undefined;
            resourceInputs["authenticationOrderMabDot1x"] = state ? state.authenticationOrderMabDot1x : undefined;
            resourceInputs["authenticationOrderMabWebauth"] = state ? state.authenticationOrderMabWebauth : undefined;
            resourceInputs["authenticationOrderWebauth"] = state ? state.authenticationOrderWebauth : undefined;
            resourceInputs["authenticationPeriodic"] = state ? state.authenticationPeriodic : undefined;
            resourceInputs["authenticationPortControl"] = state ? state.authenticationPortControl : undefined;
            resourceInputs["authenticationPriorityDot1x"] = state ? state.authenticationPriorityDot1x : undefined;
            resourceInputs["authenticationPriorityDot1xMab"] = state ? state.authenticationPriorityDot1xMab : undefined;
            resourceInputs["authenticationPriorityDot1xWebauth"] = state ? state.authenticationPriorityDot1xWebauth : undefined;
            resourceInputs["authenticationPriorityMab"] = state ? state.authenticationPriorityMab : undefined;
            resourceInputs["authenticationPriorityMabDot1x"] = state ? state.authenticationPriorityMabDot1x : undefined;
            resourceInputs["authenticationPriorityMabWebauth"] = state ? state.authenticationPriorityMabWebauth : undefined;
            resourceInputs["authenticationPriorityWebauth"] = state ? state.authenticationPriorityWebauth : undefined;
            resourceInputs["authenticationTimerReauthenticate"] = state ? state.authenticationTimerReauthenticate : undefined;
            resourceInputs["authenticationTimerReauthenticateServer"] = state ? state.authenticationTimerReauthenticateServer : undefined;
            resourceInputs["autoQosClassify"] = state ? state.autoQosClassify : undefined;
            resourceInputs["autoQosClassifyPolice"] = state ? state.autoQosClassifyPolice : undefined;
            resourceInputs["autoQosTrust"] = state ? state.autoQosTrust : undefined;
            resourceInputs["autoQosTrustCos"] = state ? state.autoQosTrustCos : undefined;
            resourceInputs["autoQosTrustDscp"] = state ? state.autoQosTrustDscp : undefined;
            resourceInputs["autoQosVideoCts"] = state ? state.autoQosVideoCts : undefined;
            resourceInputs["autoQosVideoIpCamera"] = state ? state.autoQosVideoIpCamera : undefined;
            resourceInputs["autoQosVideoMediaPlayer"] = state ? state.autoQosVideoMediaPlayer : undefined;
            resourceInputs["autoQosVoip"] = state ? state.autoQosVoip : undefined;
            resourceInputs["autoQosVoipCiscoPhone"] = state ? state.autoQosVoipCiscoPhone : undefined;
            resourceInputs["autoQosVoipCiscoSoftphone"] = state ? state.autoQosVoipCiscoSoftphone : undefined;
            resourceInputs["autoQosVoipTrust"] = state ? state.autoQosVoipTrust : undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["bfdEcho"] = state ? state.bfdEcho : undefined;
            resourceInputs["bfdEnable"] = state ? state.bfdEnable : undefined;
            resourceInputs["bfdInterval"] = state ? state.bfdInterval : undefined;
            resourceInputs["bfdIntervalMinRx"] = state ? state.bfdIntervalMinRx : undefined;
            resourceInputs["bfdIntervalMultiplier"] = state ? state.bfdIntervalMultiplier : undefined;
            resourceInputs["bfdLocalAddress"] = state ? state.bfdLocalAddress : undefined;
            resourceInputs["bfdTemplate"] = state ? state.bfdTemplate : undefined;
            resourceInputs["channelGroupMode"] = state ? state.channelGroupMode : undefined;
            resourceInputs["channelGroupNumber"] = state ? state.channelGroupNumber : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["dot1xMaxReauthReq"] = state ? state.dot1xMaxReauthReq : undefined;
            resourceInputs["dot1xMaxReq"] = state ? state.dot1xMaxReq : undefined;
            resourceInputs["dot1xPae"] = state ? state.dot1xPae : undefined;
            resourceInputs["dot1xTimeoutAuthPeriod"] = state ? state.dot1xTimeoutAuthPeriod : undefined;
            resourceInputs["dot1xTimeoutHeldPeriod"] = state ? state.dot1xTimeoutHeldPeriod : undefined;
            resourceInputs["dot1xTimeoutQuietPeriod"] = state ? state.dot1xTimeoutQuietPeriod : undefined;
            resourceInputs["dot1xTimeoutRatelimitPeriod"] = state ? state.dot1xTimeoutRatelimitPeriod : undefined;
            resourceInputs["dot1xTimeoutServerTimeout"] = state ? state.dot1xTimeoutServerTimeout : undefined;
            resourceInputs["dot1xTimeoutStartPeriod"] = state ? state.dot1xTimeoutStartPeriod : undefined;
            resourceInputs["dot1xTimeoutSuppTimeout"] = state ? state.dot1xTimeoutSuppTimeout : undefined;
            resourceInputs["dot1xTimeoutTxPeriod"] = state ? state.dot1xTimeoutTxPeriod : undefined;
            resourceInputs["encapsulationDot1qVlanId"] = state ? state.encapsulationDot1qVlanId : undefined;
            resourceInputs["helperAddresses"] = state ? state.helperAddresses : undefined;
            resourceInputs["ipAccessGroupIn"] = state ? state.ipAccessGroupIn : undefined;
            resourceInputs["ipAccessGroupInEnable"] = state ? state.ipAccessGroupInEnable : undefined;
            resourceInputs["ipAccessGroupOut"] = state ? state.ipAccessGroupOut : undefined;
            resourceInputs["ipAccessGroupOutEnable"] = state ? state.ipAccessGroupOutEnable : undefined;
            resourceInputs["ipArpInspectionLimitRate"] = state ? state.ipArpInspectionLimitRate : undefined;
            resourceInputs["ipArpInspectionTrust"] = state ? state.ipArpInspectionTrust : undefined;
            resourceInputs["ipDhcpRelaySourceInterface"] = state ? state.ipDhcpRelaySourceInterface : undefined;
            resourceInputs["ipDhcpSnoopingTrust"] = state ? state.ipDhcpSnoopingTrust : undefined;
            resourceInputs["ipFlowMonitors"] = state ? state.ipFlowMonitors : undefined;
            resourceInputs["ipProxyArp"] = state ? state.ipProxyArp : undefined;
            resourceInputs["ipRedirects"] = state ? state.ipRedirects : undefined;
            resourceInputs["ipUnreachables"] = state ? state.ipUnreachables : undefined;
            resourceInputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            resourceInputs["ipv4AddressMask"] = state ? state.ipv4AddressMask : undefined;
            resourceInputs["ipv6AddressAutoconfigDefault"] = state ? state.ipv6AddressAutoconfigDefault : undefined;
            resourceInputs["ipv6AddressDhcp"] = state ? state.ipv6AddressDhcp : undefined;
            resourceInputs["ipv6Addresses"] = state ? state.ipv6Addresses : undefined;
            resourceInputs["ipv6Enable"] = state ? state.ipv6Enable : undefined;
            resourceInputs["ipv6LinkLocalAddresses"] = state ? state.ipv6LinkLocalAddresses : undefined;
            resourceInputs["ipv6Mtu"] = state ? state.ipv6Mtu : undefined;
            resourceInputs["ipv6NdRaSuppressAll"] = state ? state.ipv6NdRaSuppressAll : undefined;
            resourceInputs["loadInterval"] = state ? state.loadInterval : undefined;
            resourceInputs["loggingEventLinkStatusEnable"] = state ? state.loggingEventLinkStatusEnable : undefined;
            resourceInputs["mab"] = state ? state.mab : undefined;
            resourceInputs["mabEap"] = state ? state.mabEap : undefined;
            resourceInputs["mediaType"] = state ? state.mediaType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["negotiationAuto"] = state ? state.negotiationAuto : undefined;
            resourceInputs["servicePolicyInput"] = state ? state.servicePolicyInput : undefined;
            resourceInputs["servicePolicyOutput"] = state ? state.servicePolicyOutput : undefined;
            resourceInputs["shutdown"] = state ? state.shutdown : undefined;
            resourceInputs["snmpTrapLinkStatus"] = state ? state.snmpTrapLinkStatus : undefined;
            resourceInputs["sourceTemplates"] = state ? state.sourceTemplates : undefined;
            resourceInputs["spanningTreeGuard"] = state ? state.spanningTreeGuard : undefined;
            resourceInputs["spanningTreeLinkType"] = state ? state.spanningTreeLinkType : undefined;
            resourceInputs["spanningTreePortfastTrunk"] = state ? state.spanningTreePortfastTrunk : undefined;
            resourceInputs["speed100"] = state ? state.speed100 : undefined;
            resourceInputs["speed1000"] = state ? state.speed1000 : undefined;
            resourceInputs["speed10000"] = state ? state.speed10000 : undefined;
            resourceInputs["speed100000"] = state ? state.speed100000 : undefined;
            resourceInputs["speed2500"] = state ? state.speed2500 : undefined;
            resourceInputs["speed25000"] = state ? state.speed25000 : undefined;
            resourceInputs["speed40000"] = state ? state.speed40000 : undefined;
            resourceInputs["speed5000"] = state ? state.speed5000 : undefined;
            resourceInputs["speedNonegotiate"] = state ? state.speedNonegotiate : undefined;
            resourceInputs["switchport"] = state ? state.switchport : undefined;
            resourceInputs["trustDevice"] = state ? state.trustDevice : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["unnumbered"] = state ? state.unnumbered : undefined;
            resourceInputs["vrfForwarding"] = state ? state.vrfForwarding : undefined;
        } else {
            const args = argsOrState as InterfaceEthernetArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["authenticationHostMode"] = args ? args.authenticationHostMode : undefined;
            resourceInputs["authenticationOrderDot1x"] = args ? args.authenticationOrderDot1x : undefined;
            resourceInputs["authenticationOrderDot1xMab"] = args ? args.authenticationOrderDot1xMab : undefined;
            resourceInputs["authenticationOrderDot1xWebauth"] = args ? args.authenticationOrderDot1xWebauth : undefined;
            resourceInputs["authenticationOrderMab"] = args ? args.authenticationOrderMab : undefined;
            resourceInputs["authenticationOrderMabDot1x"] = args ? args.authenticationOrderMabDot1x : undefined;
            resourceInputs["authenticationOrderMabWebauth"] = args ? args.authenticationOrderMabWebauth : undefined;
            resourceInputs["authenticationOrderWebauth"] = args ? args.authenticationOrderWebauth : undefined;
            resourceInputs["authenticationPeriodic"] = args ? args.authenticationPeriodic : undefined;
            resourceInputs["authenticationPortControl"] = args ? args.authenticationPortControl : undefined;
            resourceInputs["authenticationPriorityDot1x"] = args ? args.authenticationPriorityDot1x : undefined;
            resourceInputs["authenticationPriorityDot1xMab"] = args ? args.authenticationPriorityDot1xMab : undefined;
            resourceInputs["authenticationPriorityDot1xWebauth"] = args ? args.authenticationPriorityDot1xWebauth : undefined;
            resourceInputs["authenticationPriorityMab"] = args ? args.authenticationPriorityMab : undefined;
            resourceInputs["authenticationPriorityMabDot1x"] = args ? args.authenticationPriorityMabDot1x : undefined;
            resourceInputs["authenticationPriorityMabWebauth"] = args ? args.authenticationPriorityMabWebauth : undefined;
            resourceInputs["authenticationPriorityWebauth"] = args ? args.authenticationPriorityWebauth : undefined;
            resourceInputs["authenticationTimerReauthenticate"] = args ? args.authenticationTimerReauthenticate : undefined;
            resourceInputs["authenticationTimerReauthenticateServer"] = args ? args.authenticationTimerReauthenticateServer : undefined;
            resourceInputs["autoQosClassify"] = args ? args.autoQosClassify : undefined;
            resourceInputs["autoQosClassifyPolice"] = args ? args.autoQosClassifyPolice : undefined;
            resourceInputs["autoQosTrust"] = args ? args.autoQosTrust : undefined;
            resourceInputs["autoQosTrustCos"] = args ? args.autoQosTrustCos : undefined;
            resourceInputs["autoQosTrustDscp"] = args ? args.autoQosTrustDscp : undefined;
            resourceInputs["autoQosVideoCts"] = args ? args.autoQosVideoCts : undefined;
            resourceInputs["autoQosVideoIpCamera"] = args ? args.autoQosVideoIpCamera : undefined;
            resourceInputs["autoQosVideoMediaPlayer"] = args ? args.autoQosVideoMediaPlayer : undefined;
            resourceInputs["autoQosVoip"] = args ? args.autoQosVoip : undefined;
            resourceInputs["autoQosVoipCiscoPhone"] = args ? args.autoQosVoipCiscoPhone : undefined;
            resourceInputs["autoQosVoipCiscoSoftphone"] = args ? args.autoQosVoipCiscoSoftphone : undefined;
            resourceInputs["autoQosVoipTrust"] = args ? args.autoQosVoipTrust : undefined;
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["bfdEcho"] = args ? args.bfdEcho : undefined;
            resourceInputs["bfdEnable"] = args ? args.bfdEnable : undefined;
            resourceInputs["bfdInterval"] = args ? args.bfdInterval : undefined;
            resourceInputs["bfdIntervalMinRx"] = args ? args.bfdIntervalMinRx : undefined;
            resourceInputs["bfdIntervalMultiplier"] = args ? args.bfdIntervalMultiplier : undefined;
            resourceInputs["bfdLocalAddress"] = args ? args.bfdLocalAddress : undefined;
            resourceInputs["bfdTemplate"] = args ? args.bfdTemplate : undefined;
            resourceInputs["channelGroupMode"] = args ? args.channelGroupMode : undefined;
            resourceInputs["channelGroupNumber"] = args ? args.channelGroupNumber : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["dot1xMaxReauthReq"] = args ? args.dot1xMaxReauthReq : undefined;
            resourceInputs["dot1xMaxReq"] = args ? args.dot1xMaxReq : undefined;
            resourceInputs["dot1xPae"] = args ? args.dot1xPae : undefined;
            resourceInputs["dot1xTimeoutAuthPeriod"] = args ? args.dot1xTimeoutAuthPeriod : undefined;
            resourceInputs["dot1xTimeoutHeldPeriod"] = args ? args.dot1xTimeoutHeldPeriod : undefined;
            resourceInputs["dot1xTimeoutQuietPeriod"] = args ? args.dot1xTimeoutQuietPeriod : undefined;
            resourceInputs["dot1xTimeoutRatelimitPeriod"] = args ? args.dot1xTimeoutRatelimitPeriod : undefined;
            resourceInputs["dot1xTimeoutServerTimeout"] = args ? args.dot1xTimeoutServerTimeout : undefined;
            resourceInputs["dot1xTimeoutStartPeriod"] = args ? args.dot1xTimeoutStartPeriod : undefined;
            resourceInputs["dot1xTimeoutSuppTimeout"] = args ? args.dot1xTimeoutSuppTimeout : undefined;
            resourceInputs["dot1xTimeoutTxPeriod"] = args ? args.dot1xTimeoutTxPeriod : undefined;
            resourceInputs["encapsulationDot1qVlanId"] = args ? args.encapsulationDot1qVlanId : undefined;
            resourceInputs["helperAddresses"] = args ? args.helperAddresses : undefined;
            resourceInputs["ipAccessGroupIn"] = args ? args.ipAccessGroupIn : undefined;
            resourceInputs["ipAccessGroupInEnable"] = args ? args.ipAccessGroupInEnable : undefined;
            resourceInputs["ipAccessGroupOut"] = args ? args.ipAccessGroupOut : undefined;
            resourceInputs["ipAccessGroupOutEnable"] = args ? args.ipAccessGroupOutEnable : undefined;
            resourceInputs["ipArpInspectionLimitRate"] = args ? args.ipArpInspectionLimitRate : undefined;
            resourceInputs["ipArpInspectionTrust"] = args ? args.ipArpInspectionTrust : undefined;
            resourceInputs["ipDhcpRelaySourceInterface"] = args ? args.ipDhcpRelaySourceInterface : undefined;
            resourceInputs["ipDhcpSnoopingTrust"] = args ? args.ipDhcpSnoopingTrust : undefined;
            resourceInputs["ipFlowMonitors"] = args ? args.ipFlowMonitors : undefined;
            resourceInputs["ipProxyArp"] = args ? args.ipProxyArp : undefined;
            resourceInputs["ipRedirects"] = args ? args.ipRedirects : undefined;
            resourceInputs["ipUnreachables"] = args ? args.ipUnreachables : undefined;
            resourceInputs["ipv4Address"] = args ? args.ipv4Address : undefined;
            resourceInputs["ipv4AddressMask"] = args ? args.ipv4AddressMask : undefined;
            resourceInputs["ipv6AddressAutoconfigDefault"] = args ? args.ipv6AddressAutoconfigDefault : undefined;
            resourceInputs["ipv6AddressDhcp"] = args ? args.ipv6AddressDhcp : undefined;
            resourceInputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            resourceInputs["ipv6Enable"] = args ? args.ipv6Enable : undefined;
            resourceInputs["ipv6LinkLocalAddresses"] = args ? args.ipv6LinkLocalAddresses : undefined;
            resourceInputs["ipv6Mtu"] = args ? args.ipv6Mtu : undefined;
            resourceInputs["ipv6NdRaSuppressAll"] = args ? args.ipv6NdRaSuppressAll : undefined;
            resourceInputs["loadInterval"] = args ? args.loadInterval : undefined;
            resourceInputs["loggingEventLinkStatusEnable"] = args ? args.loggingEventLinkStatusEnable : undefined;
            resourceInputs["mab"] = args ? args.mab : undefined;
            resourceInputs["mabEap"] = args ? args.mabEap : undefined;
            resourceInputs["mediaType"] = args ? args.mediaType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["negotiationAuto"] = args ? args.negotiationAuto : undefined;
            resourceInputs["servicePolicyInput"] = args ? args.servicePolicyInput : undefined;
            resourceInputs["servicePolicyOutput"] = args ? args.servicePolicyOutput : undefined;
            resourceInputs["shutdown"] = args ? args.shutdown : undefined;
            resourceInputs["snmpTrapLinkStatus"] = args ? args.snmpTrapLinkStatus : undefined;
            resourceInputs["sourceTemplates"] = args ? args.sourceTemplates : undefined;
            resourceInputs["spanningTreeGuard"] = args ? args.spanningTreeGuard : undefined;
            resourceInputs["spanningTreeLinkType"] = args ? args.spanningTreeLinkType : undefined;
            resourceInputs["spanningTreePortfastTrunk"] = args ? args.spanningTreePortfastTrunk : undefined;
            resourceInputs["speed100"] = args ? args.speed100 : undefined;
            resourceInputs["speed1000"] = args ? args.speed1000 : undefined;
            resourceInputs["speed10000"] = args ? args.speed10000 : undefined;
            resourceInputs["speed100000"] = args ? args.speed100000 : undefined;
            resourceInputs["speed2500"] = args ? args.speed2500 : undefined;
            resourceInputs["speed25000"] = args ? args.speed25000 : undefined;
            resourceInputs["speed40000"] = args ? args.speed40000 : undefined;
            resourceInputs["speed5000"] = args ? args.speed5000 : undefined;
            resourceInputs["speedNonegotiate"] = args ? args.speedNonegotiate : undefined;
            resourceInputs["switchport"] = args ? args.switchport : undefined;
            resourceInputs["trustDevice"] = args ? args.trustDevice : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["unnumbered"] = args ? args.unnumbered : undefined;
            resourceInputs["vrfForwarding"] = args ? args.vrfForwarding : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceEthernet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceEthernet resources.
 */
export interface InterfaceEthernetState {
    /**
     * Set ARP cache timeout - Range: `0`-`2147483`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
     * `single-host`
     */
    authenticationHostMode?: pulumi.Input<string>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationOrderDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationOrderDot1xMab?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationOrderDot1xWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationOrderMab?: pulumi.Input<boolean>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationOrderMabDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationOrderMabWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationOrderWebauth?: pulumi.Input<boolean>;
    /**
     * Enable or Disable Reauthentication for this port
     */
    authenticationPeriodic?: pulumi.Input<boolean>;
    /**
     * set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
     */
    authenticationPortControl?: pulumi.Input<string>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationPriorityDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationPriorityDot1xMab?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationPriorityDot1xWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationPriorityMab?: pulumi.Input<boolean>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationPriorityMabDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationPriorityMabWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationPriorityWebauth?: pulumi.Input<boolean>;
    /**
     * Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
     */
    authenticationTimerReauthenticate?: pulumi.Input<number>;
    /**
     * Obtain re-authentication timeout value from the server
     */
    authenticationTimerReauthenticateServer?: pulumi.Input<boolean>;
    /**
     * Configure classification for untrusted devices
     */
    autoQosClassify?: pulumi.Input<boolean>;
    /**
     * Configure QoS policing for untrusted devices
     */
    autoQosClassifyPolice?: pulumi.Input<boolean>;
    /**
     * Trust the DSCP/CoS marking
     */
    autoQosTrust?: pulumi.Input<boolean>;
    /**
     * Trust the CoS marking
     */
    autoQosTrustCos?: pulumi.Input<boolean>;
    /**
     * Trust the DSCP marking
     */
    autoQosTrustDscp?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of the Cisco Telepresence System
     */
    autoQosVideoCts?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of the Ip Video Surveillance camera
     */
    autoQosVideoIpCamera?: pulumi.Input<boolean>;
    /**
     * Trust the Qos marking of the Cisco Media Player
     */
    autoQosVideoMediaPlayer?: pulumi.Input<boolean>;
    /**
     * Configure AutoQoS for VoIP
     */
    autoQosVoip?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of Cisco IP Phone
     */
    autoQosVoipCiscoPhone?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of Cisco IP SoftPhone
     */
    autoQosVoipCiscoSoftphone?: pulumi.Input<boolean>;
    /**
     * Trust the DSCP/CoS marking
     */
    autoQosVoipTrust?: pulumi.Input<boolean>;
    /**
     * - Range: `1`-`200000000`
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Use echo adjunct as bfd detection mechanism
     */
    bfdEcho?: pulumi.Input<boolean>;
    /**
     * Enable BFD under the interface
     */
    bfdEnable?: pulumi.Input<boolean>;
    /**
     * - Range: `50`-`9999`
     */
    bfdInterval?: pulumi.Input<number>;
    /**
     * Minimum receive interval capability - Range: `50`-`9999`
     */
    bfdIntervalMinRx?: pulumi.Input<number>;
    /**
     * Multiplier value used to compute holddown - Range: `3`-`50`
     */
    bfdIntervalMultiplier?: pulumi.Input<number>;
    /**
     * The Source IP address to be used for BFD sessions over this interface.
     */
    bfdLocalAddress?: pulumi.Input<string>;
    /**
     * BFD template
     */
    bfdTemplate?: pulumi.Input<string>;
    /**
     * Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`
     */
    channelGroupMode?: pulumi.Input<string>;
    /**
     * - Range: `1`-`512`
     */
    channelGroupNumber?: pulumi.Input<number>;
    /**
     * Interface specific description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Max No. of Reauthentication Attempts - Range: `1`-`10`
     */
    dot1xMaxReauthReq?: pulumi.Input<number>;
    /**
     * Max No. of Retries - Range: `1`-`10`
     */
    dot1xMaxReq?: pulumi.Input<number>;
    /**
     * Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
     */
    dot1xPae?: pulumi.Input<string>;
    /**
     * Timeout for authenticator reply - Range: `1`-`65535`
     */
    dot1xTimeoutAuthPeriod?: pulumi.Input<number>;
    /**
     * Timeout for authentication retries - Range: `1`-`65535`
     */
    dot1xTimeoutHeldPeriod?: pulumi.Input<number>;
    /**
     * QuietPeriod in Seconds - Range: `1`-`65535`
     */
    dot1xTimeoutQuietPeriod?: pulumi.Input<number>;
    /**
     * Ratelimit Period in seconds - Range: `1`-`65535`
     */
    dot1xTimeoutRatelimitPeriod?: pulumi.Input<number>;
    /**
     * Timeout for Radius Retries - Range: `1`-`65535`
     */
    dot1xTimeoutServerTimeout?: pulumi.Input<number>;
    /**
     * Timeout for EAPOL-start retries - Range: `1`-`65535`
     */
    dot1xTimeoutStartPeriod?: pulumi.Input<number>;
    /**
     * Timeout for supplicant reply - Range: `1`-`65535`
     */
    dot1xTimeoutSuppTimeout?: pulumi.Input<number>;
    /**
     * Timeout for supplicant retries - Range: `1`-`65535`
     */
    dot1xTimeoutTxPeriod?: pulumi.Input<number>;
    /**
     * - Range: `1`-`4094`
     */
    encapsulationDot1qVlanId?: pulumi.Input<number>;
    /**
     * Specify a destination address for UDP broadcasts
     */
    helperAddresses?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetHelperAddress>[]>;
    ipAccessGroupIn?: pulumi.Input<string>;
    /**
     * inbound packets
     */
    ipAccessGroupInEnable?: pulumi.Input<boolean>;
    ipAccessGroupOut?: pulumi.Input<string>;
    /**
     * outbound packets
     */
    ipAccessGroupOutEnable?: pulumi.Input<boolean>;
    /**
     * Rate Limit - Range: `0`-`4294967295`
     */
    ipArpInspectionLimitRate?: pulumi.Input<number>;
    /**
     * Configure Trust state
     */
    ipArpInspectionTrust?: pulumi.Input<boolean>;
    /**
     * Set source interface for relayed messages
     */
    ipDhcpRelaySourceInterface?: pulumi.Input<string>;
    /**
     * DHCP Snooping trust config
     */
    ipDhcpSnoopingTrust?: pulumi.Input<boolean>;
    /**
     * Apply a Flow Monitor
     */
    ipFlowMonitors?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIpFlowMonitor>[]>;
    /**
     * Enable proxy ARP
     */
    ipProxyArp?: pulumi.Input<boolean>;
    /**
     * Enable sending ICMP Redirect messages
     */
    ipRedirects?: pulumi.Input<boolean>;
    /**
     * Enable sending ICMP Unreachable messages
     */
    ipUnreachables?: pulumi.Input<boolean>;
    ipv4Address?: pulumi.Input<string>;
    ipv4AddressMask?: pulumi.Input<string>;
    /**
     * Insert default route
     */
    ipv6AddressAutoconfigDefault?: pulumi.Input<boolean>;
    /**
     * Obtain IPv6 address from DHCP server
     */
    ipv6AddressDhcp?: pulumi.Input<boolean>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIpv6Address>[]>;
    /**
     * Enable IPv6 on interface
     */
    ipv6Enable?: pulumi.Input<boolean>;
    ipv6LinkLocalAddresses?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIpv6LinkLocalAddress>[]>;
    /**
     * Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
     */
    ipv6Mtu?: pulumi.Input<number>;
    /**
     * Suppress all IPv6 RA
     */
    ipv6NdRaSuppressAll?: pulumi.Input<boolean>;
    /**
     * Specify interval for load calculation for an interface - Range: `30`-`600`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * UPDOWN and CHANGE messages
     */
    loggingEventLinkStatusEnable?: pulumi.Input<boolean>;
    /**
     * MAC Authentication Bypass Interface Config Commands
     */
    mab?: pulumi.Input<boolean>;
    /**
     * Use EAP authentication for MAC Auth Bypass
     */
    mabEap?: pulumi.Input<boolean>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Enable link autonegotiation
     */
    negotiationAuto?: pulumi.Input<boolean>;
    /**
     * Assign policy-map to the input of an interface
     */
    servicePolicyInput?: pulumi.Input<string>;
    /**
     * Assign policy-map to the output of an interface
     */
    servicePolicyOutput?: pulumi.Input<string>;
    /**
     * Shutdown the selected interface
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Allow SNMP LINKUP and LINKDOWN traps
     */
    snmpTrapLinkStatus?: pulumi.Input<boolean>;
    sourceTemplates?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetSourceTemplate>[]>;
    /**
     * Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`
     */
    spanningTreeGuard?: pulumi.Input<string>;
    /**
     * Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`
     */
    spanningTreeLinkType?: pulumi.Input<string>;
    /**
     * Enable portfast on the interface even in trunk mode
     */
    spanningTreePortfastTrunk?: pulumi.Input<boolean>;
    /**
     * 100 Mbps operation
     */
    speed100?: pulumi.Input<boolean>;
    /**
     * 1000 Mbps operation
     */
    speed1000?: pulumi.Input<boolean>;
    /**
     * 10000 Mbps operation
     */
    speed10000?: pulumi.Input<boolean>;
    /**
     * 100000 Mbps operation
     */
    speed100000?: pulumi.Input<boolean>;
    /**
     * 2500 Mbps operation
     */
    speed2500?: pulumi.Input<boolean>;
    /**
     * 25000 Mbps operation
     */
    speed25000?: pulumi.Input<boolean>;
    /**
     * 40000 Mbps operation
     */
    speed40000?: pulumi.Input<boolean>;
    /**
     * 5000 Mbps operation
     */
    speed5000?: pulumi.Input<boolean>;
    speedNonegotiate?: pulumi.Input<boolean>;
    switchport?: pulumi.Input<boolean>;
    /**
     * trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`
     */
    trustDevice?: pulumi.Input<string>;
    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`
     */
    type?: pulumi.Input<string>;
    /**
     * Enable IP processing without an explicit address
     */
    unnumbered?: pulumi.Input<string>;
    /**
     * Configure forwarding table
     */
    vrfForwarding?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceEthernet resource.
 */
export interface InterfaceEthernetArgs {
    /**
     * Set ARP cache timeout - Range: `0`-`2147483`
     */
    arpTimeout?: pulumi.Input<number>;
    /**
     * Set the Host mode for authentication on this interface - Choices: `multi-auth`, `multi-domain`, `multi-host`,
     * `single-host`
     */
    authenticationHostMode?: pulumi.Input<string>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationOrderDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationOrderDot1xMab?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationOrderDot1xWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationOrderMab?: pulumi.Input<boolean>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationOrderMabDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationOrderMabWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationOrderWebauth?: pulumi.Input<boolean>;
    /**
     * Enable or Disable Reauthentication for this port
     */
    authenticationPeriodic?: pulumi.Input<boolean>;
    /**
     * set the port-control value - Choices: `auto`, `force-authorized`, `force-unauthorized`
     */
    authenticationPortControl?: pulumi.Input<string>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationPriorityDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationPriorityDot1xMab?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationPriorityDot1xWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method mab allowed
     */
    authenticationPriorityMab?: pulumi.Input<boolean>;
    /**
     * Authentication method dot1x allowed
     */
    authenticationPriorityMabDot1x?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationPriorityMabWebauth?: pulumi.Input<boolean>;
    /**
     * Authentication method webauth allowed
     */
    authenticationPriorityWebauth?: pulumi.Input<boolean>;
    /**
     * Enter a value between 1 and 1073741823 - Range: `1`-`1073741823`
     */
    authenticationTimerReauthenticate?: pulumi.Input<number>;
    /**
     * Obtain re-authentication timeout value from the server
     */
    authenticationTimerReauthenticateServer?: pulumi.Input<boolean>;
    /**
     * Configure classification for untrusted devices
     */
    autoQosClassify?: pulumi.Input<boolean>;
    /**
     * Configure QoS policing for untrusted devices
     */
    autoQosClassifyPolice?: pulumi.Input<boolean>;
    /**
     * Trust the DSCP/CoS marking
     */
    autoQosTrust?: pulumi.Input<boolean>;
    /**
     * Trust the CoS marking
     */
    autoQosTrustCos?: pulumi.Input<boolean>;
    /**
     * Trust the DSCP marking
     */
    autoQosTrustDscp?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of the Cisco Telepresence System
     */
    autoQosVideoCts?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of the Ip Video Surveillance camera
     */
    autoQosVideoIpCamera?: pulumi.Input<boolean>;
    /**
     * Trust the Qos marking of the Cisco Media Player
     */
    autoQosVideoMediaPlayer?: pulumi.Input<boolean>;
    /**
     * Configure AutoQoS for VoIP
     */
    autoQosVoip?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of Cisco IP Phone
     */
    autoQosVoipCiscoPhone?: pulumi.Input<boolean>;
    /**
     * Trust the QoS marking of Cisco IP SoftPhone
     */
    autoQosVoipCiscoSoftphone?: pulumi.Input<boolean>;
    /**
     * Trust the DSCP/CoS marking
     */
    autoQosVoipTrust?: pulumi.Input<boolean>;
    /**
     * - Range: `1`-`200000000`
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Use echo adjunct as bfd detection mechanism
     */
    bfdEcho?: pulumi.Input<boolean>;
    /**
     * Enable BFD under the interface
     */
    bfdEnable?: pulumi.Input<boolean>;
    /**
     * - Range: `50`-`9999`
     */
    bfdInterval?: pulumi.Input<number>;
    /**
     * Minimum receive interval capability - Range: `50`-`9999`
     */
    bfdIntervalMinRx?: pulumi.Input<number>;
    /**
     * Multiplier value used to compute holddown - Range: `3`-`50`
     */
    bfdIntervalMultiplier?: pulumi.Input<number>;
    /**
     * The Source IP address to be used for BFD sessions over this interface.
     */
    bfdLocalAddress?: pulumi.Input<string>;
    /**
     * BFD template
     */
    bfdTemplate?: pulumi.Input<string>;
    /**
     * Etherchannel Mode of the interface - Choices: `active`, `auto`, `desirable`, `on`, `passive`
     */
    channelGroupMode?: pulumi.Input<string>;
    /**
     * - Range: `1`-`512`
     */
    channelGroupNumber?: pulumi.Input<number>;
    /**
     * Interface specific description
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Max No. of Reauthentication Attempts - Range: `1`-`10`
     */
    dot1xMaxReauthReq?: pulumi.Input<number>;
    /**
     * Max No. of Retries - Range: `1`-`10`
     */
    dot1xMaxReq?: pulumi.Input<number>;
    /**
     * Set 802.1x interface pae type - Choices: `authenticator`, `both`, `supplicant`
     */
    dot1xPae?: pulumi.Input<string>;
    /**
     * Timeout for authenticator reply - Range: `1`-`65535`
     */
    dot1xTimeoutAuthPeriod?: pulumi.Input<number>;
    /**
     * Timeout for authentication retries - Range: `1`-`65535`
     */
    dot1xTimeoutHeldPeriod?: pulumi.Input<number>;
    /**
     * QuietPeriod in Seconds - Range: `1`-`65535`
     */
    dot1xTimeoutQuietPeriod?: pulumi.Input<number>;
    /**
     * Ratelimit Period in seconds - Range: `1`-`65535`
     */
    dot1xTimeoutRatelimitPeriod?: pulumi.Input<number>;
    /**
     * Timeout for Radius Retries - Range: `1`-`65535`
     */
    dot1xTimeoutServerTimeout?: pulumi.Input<number>;
    /**
     * Timeout for EAPOL-start retries - Range: `1`-`65535`
     */
    dot1xTimeoutStartPeriod?: pulumi.Input<number>;
    /**
     * Timeout for supplicant reply - Range: `1`-`65535`
     */
    dot1xTimeoutSuppTimeout?: pulumi.Input<number>;
    /**
     * Timeout for supplicant retries - Range: `1`-`65535`
     */
    dot1xTimeoutTxPeriod?: pulumi.Input<number>;
    /**
     * - Range: `1`-`4094`
     */
    encapsulationDot1qVlanId?: pulumi.Input<number>;
    /**
     * Specify a destination address for UDP broadcasts
     */
    helperAddresses?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetHelperAddress>[]>;
    ipAccessGroupIn?: pulumi.Input<string>;
    /**
     * inbound packets
     */
    ipAccessGroupInEnable?: pulumi.Input<boolean>;
    ipAccessGroupOut?: pulumi.Input<string>;
    /**
     * outbound packets
     */
    ipAccessGroupOutEnable?: pulumi.Input<boolean>;
    /**
     * Rate Limit - Range: `0`-`4294967295`
     */
    ipArpInspectionLimitRate?: pulumi.Input<number>;
    /**
     * Configure Trust state
     */
    ipArpInspectionTrust?: pulumi.Input<boolean>;
    /**
     * Set source interface for relayed messages
     */
    ipDhcpRelaySourceInterface?: pulumi.Input<string>;
    /**
     * DHCP Snooping trust config
     */
    ipDhcpSnoopingTrust?: pulumi.Input<boolean>;
    /**
     * Apply a Flow Monitor
     */
    ipFlowMonitors?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIpFlowMonitor>[]>;
    /**
     * Enable proxy ARP
     */
    ipProxyArp?: pulumi.Input<boolean>;
    /**
     * Enable sending ICMP Redirect messages
     */
    ipRedirects?: pulumi.Input<boolean>;
    /**
     * Enable sending ICMP Unreachable messages
     */
    ipUnreachables?: pulumi.Input<boolean>;
    ipv4Address?: pulumi.Input<string>;
    ipv4AddressMask?: pulumi.Input<string>;
    /**
     * Insert default route
     */
    ipv6AddressAutoconfigDefault?: pulumi.Input<boolean>;
    /**
     * Obtain IPv6 address from DHCP server
     */
    ipv6AddressDhcp?: pulumi.Input<boolean>;
    ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIpv6Address>[]>;
    /**
     * Enable IPv6 on interface
     */
    ipv6Enable?: pulumi.Input<boolean>;
    ipv6LinkLocalAddresses?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetIpv6LinkLocalAddress>[]>;
    /**
     * Set IPv6 Maximum Transmission Unit - Range: `1280`-`9976`
     */
    ipv6Mtu?: pulumi.Input<number>;
    /**
     * Suppress all IPv6 RA
     */
    ipv6NdRaSuppressAll?: pulumi.Input<boolean>;
    /**
     * Specify interval for load calculation for an interface - Range: `30`-`600`
     */
    loadInterval?: pulumi.Input<number>;
    /**
     * UPDOWN and CHANGE messages
     */
    loggingEventLinkStatusEnable?: pulumi.Input<boolean>;
    /**
     * MAC Authentication Bypass Interface Config Commands
     */
    mab?: pulumi.Input<boolean>;
    /**
     * Use EAP authentication for MAC Auth Bypass
     */
    mabEap?: pulumi.Input<boolean>;
    /**
     * Media type - Choices: `auto-select`, `rj45`, `sfp`
     */
    mediaType?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Enable link autonegotiation
     */
    negotiationAuto?: pulumi.Input<boolean>;
    /**
     * Assign policy-map to the input of an interface
     */
    servicePolicyInput?: pulumi.Input<string>;
    /**
     * Assign policy-map to the output of an interface
     */
    servicePolicyOutput?: pulumi.Input<string>;
    /**
     * Shutdown the selected interface
     */
    shutdown?: pulumi.Input<boolean>;
    /**
     * Allow SNMP LINKUP and LINKDOWN traps
     */
    snmpTrapLinkStatus?: pulumi.Input<boolean>;
    sourceTemplates?: pulumi.Input<pulumi.Input<inputs.InterfaceEthernetSourceTemplate>[]>;
    /**
     * Change an interface's spanning tree guard mode - Choices: `loop`, `none`, `root`
     */
    spanningTreeGuard?: pulumi.Input<string>;
    /**
     * Specify a link type for spanning tree tree protocol use - Choices: `point-to-point`, `shared`
     */
    spanningTreeLinkType?: pulumi.Input<string>;
    /**
     * Enable portfast on the interface even in trunk mode
     */
    spanningTreePortfastTrunk?: pulumi.Input<boolean>;
    /**
     * 100 Mbps operation
     */
    speed100?: pulumi.Input<boolean>;
    /**
     * 1000 Mbps operation
     */
    speed1000?: pulumi.Input<boolean>;
    /**
     * 10000 Mbps operation
     */
    speed10000?: pulumi.Input<boolean>;
    /**
     * 100000 Mbps operation
     */
    speed100000?: pulumi.Input<boolean>;
    /**
     * 2500 Mbps operation
     */
    speed2500?: pulumi.Input<boolean>;
    /**
     * 25000 Mbps operation
     */
    speed25000?: pulumi.Input<boolean>;
    /**
     * 40000 Mbps operation
     */
    speed40000?: pulumi.Input<boolean>;
    /**
     * 5000 Mbps operation
     */
    speed5000?: pulumi.Input<boolean>;
    speedNonegotiate?: pulumi.Input<boolean>;
    switchport?: pulumi.Input<boolean>;
    /**
     * trusted device class - Choices: `cisco-phone`, `cts`, `ip-camera`, `media-player`
     */
    trustDevice?: pulumi.Input<string>;
    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`
     */
    type: pulumi.Input<string>;
    /**
     * Enable IP processing without an explicit address
     */
    unnumbered?: pulumi.Input<string>;
    /**
     * Configure forwarding table
     */
    vrfForwarding?: pulumi.Input<string>;
}
