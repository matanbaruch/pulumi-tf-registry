// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInterfaceNve(args: GetInterfaceNveArgs, opts?: pulumi.InvokeOptions): Promise<GetInterfaceNveResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getInterfaceNve:getInterfaceNve", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInterfaceNve.
 */
export interface GetInterfaceNveArgs {
    device?: string;
    name: number;
}

/**
 * A collection of values returned by getInterfaceNve.
 */
export interface GetInterfaceNveResult {
    readonly description: string;
    readonly device?: string;
    readonly hostReachabilityProtocolBgp: boolean;
    readonly id: string;
    readonly name: number;
    readonly shutdown: boolean;
    readonly sourceInterfaceLoopback: number;
    readonly vniVrfs: outputs.GetInterfaceNveVniVrf[];
    readonly vnis: outputs.GetInterfaceNveVni[];
}
export function getInterfaceNveOutput(args: GetInterfaceNveOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInterfaceNveResult> {
    return pulumi.output(args).apply((a: any) => getInterfaceNve(a, opts))
}

/**
 * A collection of arguments for invoking getInterfaceNve.
 */
export interface GetInterfaceNveOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<number>;
}
