// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class FlowRecord extends pulumi.CustomResource {
    /**
     * Get an existing FlowRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlowRecordState, opts?: pulumi.CustomResourceOptions): FlowRecord {
        return new FlowRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/flowRecord:FlowRecord';

    /**
     * Returns true if the given object is an instance of FlowRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlowRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlowRecord.__pulumiType;
    }

    /**
     * Total number of bytes (64 bit counter)
     */
    public readonly collectCounterBytesLong!: pulumi.Output<boolean | undefined>;
    /**
     * Total number of packets (64 bit counter)
     */
    public readonly collectCounterPacketsLong!: pulumi.Output<boolean | undefined>;
    /**
     * The output interface
     */
    public readonly collectInterfaceOutput!: pulumi.Output<boolean | undefined>;
    /**
     * Absolute time the first packet was seen (milliseconds)
     */
    public readonly collectTimestampAbsoluteFirst!: pulumi.Output<boolean | undefined>;
    /**
     * Absolute time the most recent packet was seen (milliseconds)
     */
    public readonly collectTimestampAbsoluteLast!: pulumi.Output<boolean | undefined>;
    /**
     * TCP flags
     */
    public readonly collectTransportTcpFlags!: pulumi.Output<boolean | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * Provide a description for this Flow Record
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Direction the flow was monitored in
     */
    public readonly matchFlowDirection!: pulumi.Output<boolean | undefined>;
    /**
     * The input interface
     */
    public readonly matchInterfaceInput!: pulumi.Output<boolean | undefined>;
    /**
     * IPv4 destination address
     */
    public readonly matchIpv4DestinationAddress!: pulumi.Output<boolean | undefined>;
    /**
     * IPv4 protocol
     */
    public readonly matchIpv4Protocol!: pulumi.Output<boolean | undefined>;
    /**
     * IPv4 source address
     */
    public readonly matchIpv4SourceAddress!: pulumi.Output<boolean | undefined>;
    /**
     * IPv4 type of service
     */
    public readonly matchIpv4Tos!: pulumi.Output<boolean | undefined>;
    /**
     * Transport destination port
     */
    public readonly matchTransportDestinationPort!: pulumi.Output<boolean | undefined>;
    /**
     * Transport source port
     */
    public readonly matchTransportSourcePort!: pulumi.Output<boolean | undefined>;
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a FlowRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FlowRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlowRecordArgs | FlowRecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlowRecordState | undefined;
            resourceInputs["collectCounterBytesLong"] = state ? state.collectCounterBytesLong : undefined;
            resourceInputs["collectCounterPacketsLong"] = state ? state.collectCounterPacketsLong : undefined;
            resourceInputs["collectInterfaceOutput"] = state ? state.collectInterfaceOutput : undefined;
            resourceInputs["collectTimestampAbsoluteFirst"] = state ? state.collectTimestampAbsoluteFirst : undefined;
            resourceInputs["collectTimestampAbsoluteLast"] = state ? state.collectTimestampAbsoluteLast : undefined;
            resourceInputs["collectTransportTcpFlags"] = state ? state.collectTransportTcpFlags : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["matchFlowDirection"] = state ? state.matchFlowDirection : undefined;
            resourceInputs["matchInterfaceInput"] = state ? state.matchInterfaceInput : undefined;
            resourceInputs["matchIpv4DestinationAddress"] = state ? state.matchIpv4DestinationAddress : undefined;
            resourceInputs["matchIpv4Protocol"] = state ? state.matchIpv4Protocol : undefined;
            resourceInputs["matchIpv4SourceAddress"] = state ? state.matchIpv4SourceAddress : undefined;
            resourceInputs["matchIpv4Tos"] = state ? state.matchIpv4Tos : undefined;
            resourceInputs["matchTransportDestinationPort"] = state ? state.matchTransportDestinationPort : undefined;
            resourceInputs["matchTransportSourcePort"] = state ? state.matchTransportSourcePort : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as FlowRecordArgs | undefined;
            resourceInputs["collectCounterBytesLong"] = args ? args.collectCounterBytesLong : undefined;
            resourceInputs["collectCounterPacketsLong"] = args ? args.collectCounterPacketsLong : undefined;
            resourceInputs["collectInterfaceOutput"] = args ? args.collectInterfaceOutput : undefined;
            resourceInputs["collectTimestampAbsoluteFirst"] = args ? args.collectTimestampAbsoluteFirst : undefined;
            resourceInputs["collectTimestampAbsoluteLast"] = args ? args.collectTimestampAbsoluteLast : undefined;
            resourceInputs["collectTransportTcpFlags"] = args ? args.collectTransportTcpFlags : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["matchFlowDirection"] = args ? args.matchFlowDirection : undefined;
            resourceInputs["matchInterfaceInput"] = args ? args.matchInterfaceInput : undefined;
            resourceInputs["matchIpv4DestinationAddress"] = args ? args.matchIpv4DestinationAddress : undefined;
            resourceInputs["matchIpv4Protocol"] = args ? args.matchIpv4Protocol : undefined;
            resourceInputs["matchIpv4SourceAddress"] = args ? args.matchIpv4SourceAddress : undefined;
            resourceInputs["matchIpv4Tos"] = args ? args.matchIpv4Tos : undefined;
            resourceInputs["matchTransportDestinationPort"] = args ? args.matchTransportDestinationPort : undefined;
            resourceInputs["matchTransportSourcePort"] = args ? args.matchTransportSourcePort : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlowRecord.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FlowRecord resources.
 */
export interface FlowRecordState {
    /**
     * Total number of bytes (64 bit counter)
     */
    collectCounterBytesLong?: pulumi.Input<boolean>;
    /**
     * Total number of packets (64 bit counter)
     */
    collectCounterPacketsLong?: pulumi.Input<boolean>;
    /**
     * The output interface
     */
    collectInterfaceOutput?: pulumi.Input<boolean>;
    /**
     * Absolute time the first packet was seen (milliseconds)
     */
    collectTimestampAbsoluteFirst?: pulumi.Input<boolean>;
    /**
     * Absolute time the most recent packet was seen (milliseconds)
     */
    collectTimestampAbsoluteLast?: pulumi.Input<boolean>;
    /**
     * TCP flags
     */
    collectTransportTcpFlags?: pulumi.Input<boolean>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * Provide a description for this Flow Record
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Direction the flow was monitored in
     */
    matchFlowDirection?: pulumi.Input<boolean>;
    /**
     * The input interface
     */
    matchInterfaceInput?: pulumi.Input<boolean>;
    /**
     * IPv4 destination address
     */
    matchIpv4DestinationAddress?: pulumi.Input<boolean>;
    /**
     * IPv4 protocol
     */
    matchIpv4Protocol?: pulumi.Input<boolean>;
    /**
     * IPv4 source address
     */
    matchIpv4SourceAddress?: pulumi.Input<boolean>;
    /**
     * IPv4 type of service
     */
    matchIpv4Tos?: pulumi.Input<boolean>;
    /**
     * Transport destination port
     */
    matchTransportDestinationPort?: pulumi.Input<boolean>;
    /**
     * Transport source port
     */
    matchTransportSourcePort?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlowRecord resource.
 */
export interface FlowRecordArgs {
    /**
     * Total number of bytes (64 bit counter)
     */
    collectCounterBytesLong?: pulumi.Input<boolean>;
    /**
     * Total number of packets (64 bit counter)
     */
    collectCounterPacketsLong?: pulumi.Input<boolean>;
    /**
     * The output interface
     */
    collectInterfaceOutput?: pulumi.Input<boolean>;
    /**
     * Absolute time the first packet was seen (milliseconds)
     */
    collectTimestampAbsoluteFirst?: pulumi.Input<boolean>;
    /**
     * Absolute time the most recent packet was seen (milliseconds)
     */
    collectTimestampAbsoluteLast?: pulumi.Input<boolean>;
    /**
     * TCP flags
     */
    collectTransportTcpFlags?: pulumi.Input<boolean>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * Provide a description for this Flow Record
     */
    description?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Direction the flow was monitored in
     */
    matchFlowDirection?: pulumi.Input<boolean>;
    /**
     * The input interface
     */
    matchInterfaceInput?: pulumi.Input<boolean>;
    /**
     * IPv4 destination address
     */
    matchIpv4DestinationAddress?: pulumi.Input<boolean>;
    /**
     * IPv4 protocol
     */
    matchIpv4Protocol?: pulumi.Input<boolean>;
    /**
     * IPv4 source address
     */
    matchIpv4SourceAddress?: pulumi.Input<boolean>;
    /**
     * IPv4 type of service
     */
    matchIpv4Tos?: pulumi.Input<boolean>;
    /**
     * Transport destination port
     */
    matchTransportDestinationPort?: pulumi.Input<boolean>;
    /**
     * Transport source port
     */
    matchTransportSourcePort?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
}
