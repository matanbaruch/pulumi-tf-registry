// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVlanAccessMap(args: GetVlanAccessMapArgs, opts?: pulumi.InvokeOptions): Promise<GetVlanAccessMapResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getVlanAccessMap:getVlanAccessMap", {
        "device": args.device,
        "name": args.name,
        "sequence": args.sequence,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVlanAccessMap.
 */
export interface GetVlanAccessMapArgs {
    device?: string;
    name: string;
    sequence: number;
}

/**
 * A collection of values returned by getVlanAccessMap.
 */
export interface GetVlanAccessMapResult {
    readonly action: string;
    readonly device?: string;
    readonly id: string;
    readonly matchIpAddresses: string[];
    readonly matchIpv6Addresses: string[];
    readonly name: string;
    readonly sequence: number;
}
export function getVlanAccessMapOutput(args: GetVlanAccessMapOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVlanAccessMapResult> {
    return pulumi.output(args).apply((a: any) => getVlanAccessMap(a, opts))
}

/**
 * A collection of arguments for invoking getVlanAccessMap.
 */
export interface GetVlanAccessMapOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    sequence: pulumi.Input<number>;
}
