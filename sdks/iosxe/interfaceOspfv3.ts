// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class InterfaceOspfv3 extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceOspfv3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterfaceOspfv3State, opts?: pulumi.CustomResourceOptions): InterfaceOspfv3 {
        return new InterfaceOspfv3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/interfaceOspfv3:InterfaceOspfv3';

    /**
     * Returns true if the given object is an instance of InterfaceOspfv3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterfaceOspfv3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceOspfv3.__pulumiType;
    }

    /**
     * Static route cost value of the interface - Range: `1`-`65535`
     */
    public readonly cost!: pulumi.Output<number | undefined>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify OSPF broadcast multi-access network
     */
    public readonly networkTypeBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Specify OSPF NBMA network
     */
    public readonly networkTypeNonBroadcast!: pulumi.Output<boolean | undefined>;
    /**
     * Specify OSPF point-to-multipoint network
     */
    public readonly networkTypePointToMultipoint!: pulumi.Output<boolean | undefined>;
    /**
     * Specify OSPF point-to-point network
     */
    public readonly networkTypePointToPoint!: pulumi.Output<boolean | undefined>;
    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
     * `Port-channel`, `Tunnel`
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a InterfaceOspfv3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterfaceOspfv3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterfaceOspfv3Args | InterfaceOspfv3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterfaceOspfv3State | undefined;
            resourceInputs["cost"] = state ? state.cost : undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkTypeBroadcast"] = state ? state.networkTypeBroadcast : undefined;
            resourceInputs["networkTypeNonBroadcast"] = state ? state.networkTypeNonBroadcast : undefined;
            resourceInputs["networkTypePointToMultipoint"] = state ? state.networkTypePointToMultipoint : undefined;
            resourceInputs["networkTypePointToPoint"] = state ? state.networkTypePointToPoint : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as InterfaceOspfv3Args | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["cost"] = args ? args.cost : undefined;
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkTypeBroadcast"] = args ? args.networkTypeBroadcast : undefined;
            resourceInputs["networkTypeNonBroadcast"] = args ? args.networkTypeNonBroadcast : undefined;
            resourceInputs["networkTypePointToMultipoint"] = args ? args.networkTypePointToMultipoint : undefined;
            resourceInputs["networkTypePointToPoint"] = args ? args.networkTypePointToPoint : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceOspfv3.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering InterfaceOspfv3 resources.
 */
export interface InterfaceOspfv3State {
    /**
     * Static route cost value of the interface - Range: `1`-`65535`
     */
    cost?: pulumi.Input<number>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Specify OSPF broadcast multi-access network
     */
    networkTypeBroadcast?: pulumi.Input<boolean>;
    /**
     * Specify OSPF NBMA network
     */
    networkTypeNonBroadcast?: pulumi.Input<boolean>;
    /**
     * Specify OSPF point-to-multipoint network
     */
    networkTypePointToMultipoint?: pulumi.Input<boolean>;
    /**
     * Specify OSPF point-to-point network
     */
    networkTypePointToPoint?: pulumi.Input<boolean>;
    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
     * `Port-channel`, `Tunnel`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterfaceOspfv3 resource.
 */
export interface InterfaceOspfv3Args {
    /**
     * Static route cost value of the interface - Range: `1`-`65535`
     */
    cost?: pulumi.Input<number>;
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Specify OSPF broadcast multi-access network
     */
    networkTypeBroadcast?: pulumi.Input<boolean>;
    /**
     * Specify OSPF NBMA network
     */
    networkTypeNonBroadcast?: pulumi.Input<boolean>;
    /**
     * Specify OSPF point-to-multipoint network
     */
    networkTypePointToMultipoint?: pulumi.Input<boolean>;
    /**
     * Specify OSPF point-to-point network
     */
    networkTypePointToPoint?: pulumi.Input<boolean>;
    /**
     * Interface type - Choices: `GigabitEthernet`, `TwoGigabitEthernet`, `FiveGigabitEthernet`, `TenGigabitEthernet`,
     * `TwentyFiveGigE`, `FortyGigabitEthernet`, `HundredGigE`, `TwoHundredGigE`, `FourHundredGigE`, `Loopback`, `Vlan`,
     * `Port-channel`, `Tunnel`
     */
    type: pulumi.Input<string>;
}
