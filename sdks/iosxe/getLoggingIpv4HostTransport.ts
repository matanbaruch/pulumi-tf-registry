// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getLoggingIpv4HostTransport(args: GetLoggingIpv4HostTransportArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingIpv4HostTransportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getLoggingIpv4HostTransport:getLoggingIpv4HostTransport", {
        "device": args.device,
        "ipv4Host": args.ipv4Host,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLoggingIpv4HostTransport.
 */
export interface GetLoggingIpv4HostTransportArgs {
    device?: string;
    ipv4Host: string;
}

/**
 * A collection of values returned by getLoggingIpv4HostTransport.
 */
export interface GetLoggingIpv4HostTransportResult {
    readonly device?: string;
    readonly id: string;
    readonly ipv4Host: string;
    readonly transportTcpPorts: outputs.GetLoggingIpv4HostTransportTransportTcpPort[];
    readonly transportTlsPorts: outputs.GetLoggingIpv4HostTransportTransportTlsPort[];
    readonly transportUdpPorts: outputs.GetLoggingIpv4HostTransportTransportUdpPort[];
}
export function getLoggingIpv4HostTransportOutput(args: GetLoggingIpv4HostTransportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoggingIpv4HostTransportResult> {
    return pulumi.output(args).apply((a: any) => getLoggingIpv4HostTransport(a, opts))
}

/**
 * A collection of arguments for invoking getLoggingIpv4HostTransport.
 */
export interface GetLoggingIpv4HostTransportOutputArgs {
    device?: pulumi.Input<string>;
    ipv4Host: pulumi.Input<string>;
}
