// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServiceTemplate(args: GetServiceTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceTemplateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getServiceTemplate:getServiceTemplate", {
        "device": args.device,
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServiceTemplate.
 */
export interface GetServiceTemplateArgs {
    device?: string;
    name: string;
}

/**
 * A collection of values returned by getServiceTemplate.
 */
export interface GetServiceTemplateResult {
    readonly absoluteTimer: number;
    readonly accessGroups: outputs.GetServiceTemplateAccessGroup[];
    readonly description: string;
    readonly device?: string;
    readonly dnsAclPreauth: string;
    readonly id: string;
    readonly inactivityTimer: number;
    readonly inactivityTimerProbe: boolean;
    readonly interfaceTemplates: outputs.GetServiceTemplateInterfaceTemplate[];
    readonly linksecPolicy: string;
    readonly mdnsServicePolicy: string;
    readonly name: string;
    readonly redirectAppendClientMac: string;
    readonly redirectAppendSwitchMac: string;
    readonly redirectUrl: string;
    readonly redirectUrlMatchAcl: string;
    readonly redirectUrlMatchAction: string;
    readonly servicePolicyQosInput: string;
    readonly servicePolicyQosOutput: string;
    readonly sgt: number;
    readonly tags: outputs.GetServiceTemplateTag[];
    readonly tunnelCapwapName: string;
    readonly vlan: number;
    readonly vnid: string;
    readonly voiceVlan: boolean;
}
export function getServiceTemplateOutput(args: GetServiceTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceTemplateResult> {
    return pulumi.output(args).apply((a: any) => getServiceTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getServiceTemplate.
 */
export interface GetServiceTemplateOutputArgs {
    device?: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
