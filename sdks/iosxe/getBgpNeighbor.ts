// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getBgpNeighbor(args: GetBgpNeighborArgs, opts?: pulumi.InvokeOptions): Promise<GetBgpNeighborResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getBgpNeighbor:getBgpNeighbor", {
        "asn": args.asn,
        "device": args.device,
        "ip": args.ip,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBgpNeighbor.
 */
export interface GetBgpNeighborArgs {
    asn: string;
    device?: string;
    ip: string;
}

/**
 * A collection of values returned by getBgpNeighbor.
 */
export interface GetBgpNeighborResult {
    readonly asn: string;
    readonly clusterId: string;
    readonly description: string;
    readonly device?: string;
    readonly disableConnectedCheck: boolean;
    readonly ebgpMultihop: boolean;
    readonly ebgpMultihopMaxHop: number;
    readonly fallOverBfd: boolean;
    readonly fallOverBfdCheckControlPlaneFailure: boolean;
    readonly fallOverBfdMultiHop: boolean;
    readonly fallOverBfdSingleHop: boolean;
    readonly fallOverBfdStrictMode: boolean;
    readonly fallOverDefaultEnable: boolean;
    readonly fallOverDefaultRouteMap: string;
    readonly fallOverMaximumMetricRouteMap: string;
    readonly id: string;
    readonly ip: string;
    readonly localAs: string;
    readonly localAsDualAs: boolean;
    readonly localAsNoPrepend: boolean;
    readonly localAsReplaceAs: boolean;
    readonly logNeighborChanges: boolean;
    readonly password: string;
    readonly passwordType: number;
    readonly remoteAs: string;
    readonly shutdown: boolean;
    readonly timersHoldtime: number;
    readonly timersKeepaliveInterval: number;
    readonly timersMinimumNeighborHold: number;
    readonly ttlSecurityHops: number;
    readonly updateSourceLoopback: string;
    readonly version: number;
}
export function getBgpNeighborOutput(args: GetBgpNeighborOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBgpNeighborResult> {
    return pulumi.output(args).apply((a: any) => getBgpNeighbor(a, opts))
}

/**
 * A collection of arguments for invoking getBgpNeighbor.
 */
export interface GetBgpNeighborOutputArgs {
    asn: pulumi.Input<string>;
    device?: pulumi.Input<string>;
    ip: pulumi.Input<string>;
}
