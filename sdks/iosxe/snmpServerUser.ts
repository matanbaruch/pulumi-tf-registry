// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SnmpServerUser extends pulumi.CustomResource {
    /**
     * Get an existing SnmpServerUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnmpServerUserState, opts?: pulumi.CustomResourceOptions): SnmpServerUser {
        return new SnmpServerUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'iosxe:index/snmpServerUser:SnmpServerUser';

    /**
     * Returns true if the given object is an instance of SnmpServerUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnmpServerUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnmpServerUser.__pulumiType;
    }

    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    public readonly deleteMode!: pulumi.Output<string | undefined>;
    /**
     * A device name from the provider configuration.
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * Group to which the user belongs
     */
    public readonly grpname!: pulumi.Output<string>;
    /**
     * Name of the user
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * Access-list name
     */
    public readonly v3AuthAccessAclName!: pulumi.Output<string | undefined>;
    /**
     * Specify IPv6 Named Access-List
     */
    public readonly v3AuthAccessIpv6Acl!: pulumi.Output<string | undefined>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    public readonly v3AuthAccessStandardAcl!: pulumi.Output<number | undefined>;
    /**
     * Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`
     */
    public readonly v3AuthAlgorithm!: pulumi.Output<string>;
    /**
     * Authentication password for user
     */
    public readonly v3AuthPassword!: pulumi.Output<string>;
    /**
     * Access-list name
     */
    public readonly v3AuthPrivAesAccessAclName!: pulumi.Output<string | undefined>;
    /**
     * Specify IPv6 Named Access-List
     */
    public readonly v3AuthPrivAesAccessIpv6Acl!: pulumi.Output<string | undefined>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    public readonly v3AuthPrivAesAccessStandardAcl!: pulumi.Output<number | undefined>;
    /**
     * - Choices: `128`, `192`, `256`
     */
    public readonly v3AuthPrivAesAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Authentication password for user
     */
    public readonly v3AuthPrivAesPassword!: pulumi.Output<string | undefined>;
    /**
     * Access-list name
     */
    public readonly v3AuthPrivDes3AccessAclName!: pulumi.Output<string | undefined>;
    /**
     * Specify IPv6 Named Access-List
     */
    public readonly v3AuthPrivDes3AccessIpv6Acl!: pulumi.Output<string | undefined>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    public readonly v3AuthPrivDes3AccessStandardAcl!: pulumi.Output<number | undefined>;
    /**
     * Authentication password for user
     */
    public readonly v3AuthPrivDes3Password!: pulumi.Output<string | undefined>;
    /**
     * Access-list name
     */
    public readonly v3AuthPrivDesAccessAclName!: pulumi.Output<string | undefined>;
    /**
     * Specify IPv6 Named Access-List
     */
    public readonly v3AuthPrivDesAccessIpv6Acl!: pulumi.Output<string | undefined>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    public readonly v3AuthPrivDesAccessStandardAcl!: pulumi.Output<number | undefined>;
    /**
     * Authentication password for user
     */
    public readonly v3AuthPrivDesPassword!: pulumi.Output<string | undefined>;

    /**
     * Create a SnmpServerUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnmpServerUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnmpServerUserArgs | SnmpServerUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnmpServerUserState | undefined;
            resourceInputs["deleteMode"] = state ? state.deleteMode : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["grpname"] = state ? state.grpname : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["v3AuthAccessAclName"] = state ? state.v3AuthAccessAclName : undefined;
            resourceInputs["v3AuthAccessIpv6Acl"] = state ? state.v3AuthAccessIpv6Acl : undefined;
            resourceInputs["v3AuthAccessStandardAcl"] = state ? state.v3AuthAccessStandardAcl : undefined;
            resourceInputs["v3AuthAlgorithm"] = state ? state.v3AuthAlgorithm : undefined;
            resourceInputs["v3AuthPassword"] = state ? state.v3AuthPassword : undefined;
            resourceInputs["v3AuthPrivAesAccessAclName"] = state ? state.v3AuthPrivAesAccessAclName : undefined;
            resourceInputs["v3AuthPrivAesAccessIpv6Acl"] = state ? state.v3AuthPrivAesAccessIpv6Acl : undefined;
            resourceInputs["v3AuthPrivAesAccessStandardAcl"] = state ? state.v3AuthPrivAesAccessStandardAcl : undefined;
            resourceInputs["v3AuthPrivAesAlgorithm"] = state ? state.v3AuthPrivAesAlgorithm : undefined;
            resourceInputs["v3AuthPrivAesPassword"] = state ? state.v3AuthPrivAesPassword : undefined;
            resourceInputs["v3AuthPrivDes3AccessAclName"] = state ? state.v3AuthPrivDes3AccessAclName : undefined;
            resourceInputs["v3AuthPrivDes3AccessIpv6Acl"] = state ? state.v3AuthPrivDes3AccessIpv6Acl : undefined;
            resourceInputs["v3AuthPrivDes3AccessStandardAcl"] = state ? state.v3AuthPrivDes3AccessStandardAcl : undefined;
            resourceInputs["v3AuthPrivDes3Password"] = state ? state.v3AuthPrivDes3Password : undefined;
            resourceInputs["v3AuthPrivDesAccessAclName"] = state ? state.v3AuthPrivDesAccessAclName : undefined;
            resourceInputs["v3AuthPrivDesAccessIpv6Acl"] = state ? state.v3AuthPrivDesAccessIpv6Acl : undefined;
            resourceInputs["v3AuthPrivDesAccessStandardAcl"] = state ? state.v3AuthPrivDesAccessStandardAcl : undefined;
            resourceInputs["v3AuthPrivDesPassword"] = state ? state.v3AuthPrivDesPassword : undefined;
        } else {
            const args = argsOrState as SnmpServerUserArgs | undefined;
            if ((!args || args.grpname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'grpname'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            if ((!args || args.v3AuthAlgorithm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'v3AuthAlgorithm'");
            }
            if ((!args || args.v3AuthPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'v3AuthPassword'");
            }
            resourceInputs["deleteMode"] = args ? args.deleteMode : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["grpname"] = args ? args.grpname : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["v3AuthAccessAclName"] = args ? args.v3AuthAccessAclName : undefined;
            resourceInputs["v3AuthAccessIpv6Acl"] = args ? args.v3AuthAccessIpv6Acl : undefined;
            resourceInputs["v3AuthAccessStandardAcl"] = args ? args.v3AuthAccessStandardAcl : undefined;
            resourceInputs["v3AuthAlgorithm"] = args ? args.v3AuthAlgorithm : undefined;
            resourceInputs["v3AuthPassword"] = args ? args.v3AuthPassword : undefined;
            resourceInputs["v3AuthPrivAesAccessAclName"] = args ? args.v3AuthPrivAesAccessAclName : undefined;
            resourceInputs["v3AuthPrivAesAccessIpv6Acl"] = args ? args.v3AuthPrivAesAccessIpv6Acl : undefined;
            resourceInputs["v3AuthPrivAesAccessStandardAcl"] = args ? args.v3AuthPrivAesAccessStandardAcl : undefined;
            resourceInputs["v3AuthPrivAesAlgorithm"] = args ? args.v3AuthPrivAesAlgorithm : undefined;
            resourceInputs["v3AuthPrivAesPassword"] = args ? args.v3AuthPrivAesPassword : undefined;
            resourceInputs["v3AuthPrivDes3AccessAclName"] = args ? args.v3AuthPrivDes3AccessAclName : undefined;
            resourceInputs["v3AuthPrivDes3AccessIpv6Acl"] = args ? args.v3AuthPrivDes3AccessIpv6Acl : undefined;
            resourceInputs["v3AuthPrivDes3AccessStandardAcl"] = args ? args.v3AuthPrivDes3AccessStandardAcl : undefined;
            resourceInputs["v3AuthPrivDes3Password"] = args ? args.v3AuthPrivDes3Password : undefined;
            resourceInputs["v3AuthPrivDesAccessAclName"] = args ? args.v3AuthPrivDesAccessAclName : undefined;
            resourceInputs["v3AuthPrivDesAccessIpv6Acl"] = args ? args.v3AuthPrivDesAccessIpv6Acl : undefined;
            resourceInputs["v3AuthPrivDesAccessStandardAcl"] = args ? args.v3AuthPrivDesAccessStandardAcl : undefined;
            resourceInputs["v3AuthPrivDesPassword"] = args ? args.v3AuthPrivDesPassword : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnmpServerUser.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SnmpServerUser resources.
 */
export interface SnmpServerUserState {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Group to which the user belongs
     */
    grpname?: pulumi.Input<string>;
    /**
     * Name of the user
     */
    username?: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthAccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthAccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthAccessStandardAcl?: pulumi.Input<number>;
    /**
     * Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`
     */
    v3AuthAlgorithm?: pulumi.Input<string>;
    /**
     * Authentication password for user
     */
    v3AuthPassword?: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthPrivAesAccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthPrivAesAccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthPrivAesAccessStandardAcl?: pulumi.Input<number>;
    /**
     * - Choices: `128`, `192`, `256`
     */
    v3AuthPrivAesAlgorithm?: pulumi.Input<string>;
    /**
     * Authentication password for user
     */
    v3AuthPrivAesPassword?: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthPrivDes3AccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthPrivDes3AccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthPrivDes3AccessStandardAcl?: pulumi.Input<number>;
    /**
     * Authentication password for user
     */
    v3AuthPrivDes3Password?: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthPrivDesAccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthPrivDesAccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthPrivDesAccessStandardAcl?: pulumi.Input<number>;
    /**
     * Authentication password for user
     */
    v3AuthPrivDesPassword?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SnmpServerUser resource.
 */
export interface SnmpServerUserArgs {
    /**
     * Configure behavior when deleting/destroying the resource. Either delete the entire object (YANG container) being
     * managed, or only delete the individual resource attributes configured explicitly and leave everything else as-is.
     * Default value is `all`. - Choices: `all`, `attributes`
     */
    deleteMode?: pulumi.Input<string>;
    /**
     * A device name from the provider configuration.
     */
    device?: pulumi.Input<string>;
    /**
     * Group to which the user belongs
     */
    grpname: pulumi.Input<string>;
    /**
     * Name of the user
     */
    username: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthAccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthAccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthAccessStandardAcl?: pulumi.Input<number>;
    /**
     * Use HMAC SHA/MD5 algorithm for authentication - Choices: `md5`, `sha`
     */
    v3AuthAlgorithm: pulumi.Input<string>;
    /**
     * Authentication password for user
     */
    v3AuthPassword: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthPrivAesAccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthPrivAesAccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthPrivAesAccessStandardAcl?: pulumi.Input<number>;
    /**
     * - Choices: `128`, `192`, `256`
     */
    v3AuthPrivAesAlgorithm?: pulumi.Input<string>;
    /**
     * Authentication password for user
     */
    v3AuthPrivAesPassword?: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthPrivDes3AccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthPrivDes3AccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthPrivDes3AccessStandardAcl?: pulumi.Input<number>;
    /**
     * Authentication password for user
     */
    v3AuthPrivDes3Password?: pulumi.Input<string>;
    /**
     * Access-list name
     */
    v3AuthPrivDesAccessAclName?: pulumi.Input<string>;
    /**
     * Specify IPv6 Named Access-List
     */
    v3AuthPrivDesAccessIpv6Acl?: pulumi.Input<string>;
    /**
     * Standard IP Access-list allowing access with this community string - Range: `1`-`99`
     */
    v3AuthPrivDesAccessStandardAcl?: pulumi.Input<number>;
    /**
     * Authentication password for user
     */
    v3AuthPrivDesPassword?: pulumi.Input<string>;
}
