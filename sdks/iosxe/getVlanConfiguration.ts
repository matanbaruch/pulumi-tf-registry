// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getVlanConfiguration(args: GetVlanConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetVlanConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("iosxe:index/getVlanConfiguration:getVlanConfiguration", {
        "device": args.device,
        "vlanId": args.vlanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVlanConfiguration.
 */
export interface GetVlanConfigurationArgs {
    device?: string;
    vlanId: number;
}

/**
 * A collection of values returned by getVlanConfiguration.
 */
export interface GetVlanConfigurationResult {
    readonly accessVfi: string;
    readonly device?: string;
    readonly evpnInstance: number;
    readonly evpnInstanceVni: number;
    readonly id: string;
    readonly vlanId: number;
    readonly vni: number;
}
export function getVlanConfigurationOutput(args: GetVlanConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVlanConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getVlanConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getVlanConfiguration.
 */
export interface GetVlanConfigurationOutputArgs {
    device?: pulumi.Input<string>;
    vlanId: pulumi.Input<number>;
}
