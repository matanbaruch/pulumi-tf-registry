// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFile(args: GetFileArgs, opts?: pulumi.InvokeOptions): Promise<GetFileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("archive:index/getFile:getFile", {
        "excludeSymlinkDirectories": args.excludeSymlinkDirectories,
        "excludes": args.excludes,
        "outputFileMode": args.outputFileMode,
        "outputPath": args.outputPath,
        "sourceContent": args.sourceContent,
        "sourceContentFilename": args.sourceContentFilename,
        "sourceDir": args.sourceDir,
        "sourceFile": args.sourceFile,
        "sources": args.sources,
        "type": args.type,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFile.
 */
export interface GetFileArgs {
    excludeSymlinkDirectories?: boolean;
    excludes?: string[];
    outputFileMode?: string;
    outputPath: string;
    sourceContent?: string;
    sourceContentFilename?: string;
    sourceDir?: string;
    sourceFile?: string;
    sources?: inputs.GetFileSource[];
    type: string;
}

/**
 * A collection of values returned by getFile.
 */
export interface GetFileResult {
    readonly excludeSymlinkDirectories?: boolean;
    readonly excludes?: string[];
    readonly id: string;
    readonly outputBase64sha256: string;
    readonly outputBase64sha512: string;
    readonly outputFileMode?: string;
    readonly outputMd5: string;
    readonly outputPath: string;
    readonly outputSha: string;
    readonly outputSha256: string;
    readonly outputSha512: string;
    readonly outputSize: number;
    readonly sourceContent?: string;
    readonly sourceContentFilename?: string;
    readonly sourceDir?: string;
    readonly sourceFile?: string;
    readonly sources?: outputs.GetFileSource[];
    readonly type: string;
}
export function getFileOutput(args: GetFileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFileResult> {
    return pulumi.output(args).apply((a: any) => getFile(a, opts))
}

/**
 * A collection of arguments for invoking getFile.
 */
export interface GetFileOutputArgs {
    excludeSymlinkDirectories?: pulumi.Input<boolean>;
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    outputFileMode?: pulumi.Input<string>;
    outputPath: pulumi.Input<string>;
    sourceContent?: pulumi.Input<string>;
    sourceContentFilename?: pulumi.Input<string>;
    sourceDir?: pulumi.Input<string>;
    sourceFile?: pulumi.Input<string>;
    sources?: pulumi.Input<pulumi.Input<inputs.GetFileSourceArgs>[]>;
    type: pulumi.Input<string>;
}
