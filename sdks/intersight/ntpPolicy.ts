// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NtpPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NtpPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NtpPolicyState, opts?: pulumi.CustomResourceOptions): NtpPolicy {
        return new NtpPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/ntpPolicy:NtpPolicy';

    /**
     * Returns true if the given object is an instance of NtpPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NtpPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NtpPolicy.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.NtpPolicyAncestor[]>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly applianceAccounts!: pulumi.Output<outputs.NtpPolicyApplianceAccount[]>;
    public readonly authenticatedNtpServers!: pulumi.Output<outputs.NtpPolicyAuthenticatedNtpServer[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * State of NTP service on the endpoint.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly ntpServers!: pulumi.Output<string[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.NtpPolicyOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.NtpPolicyParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.NtpPolicyPermissionResource[]>;
    /**
     * An array of relationships to policyAbstractConfigProfile resources.
     */
    public readonly profiles!: pulumi.Output<outputs.NtpPolicyProfile[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.NtpPolicyTag[]>;
    /**
     * Timezone of services on the endpoint. * `Pacific/Niue` - * `Africa/Abidjan` - * `Africa/Accra` - * `Africa/Addis_Ababa`
     * - * `Africa/Algiers` - * `Africa/Asmara` - * `Africa/Bamako` - * `Africa/Bangui` - * `Africa/Banjul` - * `Africa/Bissau`
     * - * `Africa/Blantyre` - * `Africa/Brazzaville` - * `Africa/Bujumbura` - * `Africa/Cairo` - * `Africa/Casablanca` - *
     * `Africa/Ceuta` - * `Africa/Conakry` - * `Africa/Dakar` - * `Africa/Dar_es_Salaam` - * `Africa/Djibouti` - *
     * `Africa/Douala` - * `Africa/El_Aaiun` - * `Africa/Freetown` - * `Africa/Gaborone` - * `Africa/Harare` - *
     * `Africa/Johannesburg` - * `Africa/Juba` - * `Africa/Kampala` - * `Africa/Khartoum` - * `Africa/Kigali` - *
     * `Africa/Kinshasa` - * `Africa/Lagos` - * `Africa/Libreville` - * `Africa/Lome` - * `Africa/Luanda` - *
     * `Africa/Lubumbashi` - * `Africa/Lusaka` - * `Africa/Malabo` - * `Africa/Maputo` - * `Africa/Maseru` - * `Africa/Mbabane`
     * - * `Africa/Mogadishu` - * `Africa/Monrovia` - * `Africa/Nairobi` - * `Africa/Ndjamena` - * `Africa/Niamey` - *
     * `Africa/Nouakchott` - * `Africa/Ouagadougou` - * `Africa/Porto-Novo` - * `Africa/Sao_Tome` - * `Africa/Tripoli` - *
     * `Africa/Tunis` - * `Africa/Windhoek` - * `America/Adak` - * `America/Anchorage` - * `America/Anguilla` - *
     * `America/Antigua` - * `America/Araguaina` - * `America/Argentina/Buenos_Aires` - * `America/Argentina/Catamarca` - *
     * `America/Argentina/Cordoba` - * `America/Argentina/Jujuy` - * `America/Argentina/La_Rioja` - *
     * `America/Argentina/Mendoza` - * `America/Argentina/Rio_Gallegos` - * `America/Argentina/Salta` - *
     * `America/Argentina/San_Juan` - * `America/Argentina/San_Luis` - * `America/Argentina/Tucuman` - *
     * `America/Argentina/Ushuaia` - * `America/Aruba` - * `America/Asuncion` - * `America/Atikokan` - * `America/Bahia` - *
     * `America/Bahia_Banderas` - * `America/Barbados` - * `America/Belem` - * `America/Belize` - * `America/Blanc-Sablon` - *
     * `America/Boa_Vista` - * `America/Bogota` - * `America/Boise` - * `America/Cambridge_Bay` - * `America/Campo_Grande` - *
     * `America/Cancun` - * `America/Caracas` - * `America/Cayenne` - * `America/Cayman` - * `America/Chicago` - *
     * `America/Chihuahua` - * `America/Costa_Rica` - * `America/Creston` - * `America/Cuiaba` - * `America/Curacao` - *
     * `America/Danmarkshavn` - * `America/Dawson` - * `America/Dawson_Creek` - * `America/Denver` - * `America/Detroit` - *
     * `America/Dominica` - * `America/Edmonton` - * `America/Eirunepe` - * `America/El_Salvador` - * `America/Fortaleza` - *
     * `America/Glace_Bay` - * `America/Godthab` - * `America/Goose_Bay` - * `America/Grand_Turk` - * `America/Grenada` - *
     * `America/Guadeloupe` - * `America/Guatemala` - * `America/Guayaquil` - * `America/Guyana` - * `America/Halifax` - *
     * `America/Havana` - * `America/Hermosillo` - * `America/Indiana/Indianapolis` - * `America/Indiana/Knox` - *
     * `America/Indiana/Marengo` - * `America/Indiana/Petersburg` - * `America/Indiana/Tell_City` - * `America/Indiana/Vevay` -
     * * `America/Indiana/Vincennes` - * `America/Indiana/Winamac` - * `America/Inuvik` - * `America/Iqaluit` - *
     * `America/Jamaica` - * `America/Juneau` - * `America/Kentucky/Louisville` - * `America/Kentucky/Monticello` - *
     * `America/Kralendijk` - * `America/La_Paz` - * `America/Lima` - * `America/Los_Angeles` - * `America/Lower_Princes` - *
     * `America/Maceio` - * `America/Managua` - * `America/Manaus` - * `America/Marigot` - * `America/Martinique` - *
     * `America/Matamoros` - * `America/Mazatlan` - * `America/Menominee` - * `America/Merida` - * `America/Metlakatla` - *
     * `America/Mexico_City` - * `America/Miquelon` - * `America/Moncton` - * `America/Monterrey` - * `America/Montevideo` - *
     * `America/Montreal` - * `America/Montserrat` - * `America/Nassau` - * `America/New_York` - * `America/Nipigon` - *
     * `America/Nome` - * `America/Noronha` - * `America/North_Dakota/Beulah` - * `America/North_Dakota/Center` - *
     * `America/North_Dakota/New_Salem` - * `America/Ojinaga` - * `America/Panama` - * `America/Pangnirtung` - *
     * `America/Paramaribo` - * `America/Phoenix` - * `America/Port-au-Prince` - * `America/Port_of_Spain` - *
     * `America/Porto_Velho` - * `America/Puerto_Rico` - * `America/Rainy_River` - * `America/Rankin_Inlet` - *
     * `America/Recife` - * `America/Regina` - * `America/Resolute` - * `America/Rio_Branco` - * `America/Santa_Isabel` - *
     * `America/Santarem` - * `America/Santiago` - * `America/Santo_Domingo` - * `America/Sao_Paulo` - * `America/Scoresbysund`
     * - * `America/Shiprock` - * `America/Sitka` - * `America/St_Barthelemy` - * `America/St_Johns` - * `America/St_Kitts` - *
     * `America/St_Lucia` - * `America/St_Thomas` - * `America/St_Vincent` - * `America/Swift_Current` - *
     * `America/Tegucigalpa` - * `America/Thule` - * `America/Thunder_Bay` - * `America/Tijuana` - * `America/Toronto` - *
     * `America/Tortola` - * `America/Vancouver` - * `America/Whitehorse` - * `America/Winnipeg` - * `America/Yakutat` - *
     * `America/Yellowknife` - * `Antarctica/Casey` - * `Antarctica/Davis` - * `Antarctica/DumontDUrville` - *
     * `Antarctica/Macquarie` - * `Antarctica/Mawson` - * `Antarctica/McMurdo` - * `Antarctica/Palmer` - * `Antarctica/Rothera`
     * - * `Antarctica/South_Pole` - * `Antarctica/Syowa` - * `Antarctica/Troll` - * `Antarctica/Vostok` - *
     * `Arctic/Longyearbyen` - * `Asia/Aden` - * `Asia/Almaty` - * `Asia/Amman` - * `Asia/Anadyr` - * `Asia/Aqtau` - *
     * `Asia/Aqtobe` - * `Asia/Ashgabat` - * `Asia/Baghdad` - * `Asia/Bahrain` - * `Asia/Baku` - * `Asia/Bangkok` - *
     * `Asia/Beirut` - * `Asia/Bishkek` - * `Asia/Brunei` - * `Asia/Calcutta` - * `Asia/Choibalsan` - * `Asia/Chongqing` - *
     * `Asia/Colombo` - * `Asia/Damascus` - * `Asia/Dhaka` - * `Asia/Dili` - * `Asia/Dubai` - * `Asia/Dushanbe` - * `Asia/Gaza`
     * - * `Asia/Harbin` - * `Asia/Hebron` - * `Asia/Ho_Chi_Minh` - * `Asia/Hong_Kong` - * `Asia/Hovd` - * `Asia/Irkutsk` - *
     * `Asia/Jakarta` - * `Asia/Jayapura` - * `Asia/Jerusalem` - * `Asia/Kabul` - * `Asia/Kamchatka` - * `Asia/Karachi` - *
     * `Asia/Kashgar` - * `Asia/Kathmandu` - * `Asia/Katmandu` - * `Asia/Khandyga` - * `Asia/Kolkata` - * `Asia/Krasnoyarsk` -
     * * `Asia/Kuala_Lumpur` - * `Asia/Kuching` - * `Asia/Kuwait` - * `Asia/Macau` - * `Asia/Magadan` - * `Asia/Makassar` - *
     * `Asia/Manila` - * `Asia/Muscat` - * `Asia/Nicosia` - * `Asia/Novokuznetsk` - * `Asia/Novosibirsk` - * `Asia/Omsk` - *
     * `Asia/Oral` - * `Asia/Phnom_Penh` - * `Asia/Pontianak` - * `Asia/Pyongyang` - * `Asia/Qatar` - * `Asia/Qyzylorda` - *
     * `Asia/Rangoon` - * `Asia/Riyadh` - * `Asia/Saigon` - * `Asia/Sakhalin` - * `Asia/Samarkand` - * `Asia/Seoul` - *
     * `Asia/Shanghai` - * `Asia/Singapore` - * `Asia/Taipei` - * `Asia/Tashkent` - * `Asia/Tbilisi` - * `Asia/Tehran` - *
     * `Asia/Thimphu` - * `Asia/Tokyo` - * `Asia/Ulaanbaatar` - * `Asia/Urumqi` - * `Asia/Ust-Nera` - * `Asia/Vientiane` - *
     * `Asia/Vladivostok` - * `Asia/Yakutsk` - * `Asia/Yekaterinburg` - * `Asia/Yerevan` - * `Atlantic/Azores` - *
     * `Atlantic/Bermuda` - * `Atlantic/Canary` - * `Atlantic/Cape_Verde` - * `Atlantic/Faroe` - * `Atlantic/Madeira` - *
     * `Atlantic/Reykjavik` - * `Atlantic/South_Georgia` - * `Atlantic/St_Helena` - * `Atlantic/Stanley` - *
     * `Australia/Adelaide` - * `Australia/Brisbane` - * `Australia/Broken_Hill` - * `Australia/Currie` - * `Australia/Darwin`
     * - * `Australia/Eucla` - * `Australia/Hobart` - * `Australia/Lindeman` - * `Australia/Lord_Howe` - *
     * `Australia/Melbourne` - * `Australia/Perth` - * `Australia/Sydney` - * `Etc/GMT` - * `Europe/Amsterdam` - *
     * `Europe/Andorra` - * `Europe/Athens` - * `Europe/Belgrade` - * `Europe/Berlin` - * `Europe/Bratislava` - *
     * `Europe/Brussels` - * `Europe/Bucharest` - * `Europe/Budapest` - * `Europe/Busingen` - * `Europe/Chisinau` - *
     * `Europe/Copenhagen` - * `Europe/Dublin` - * `Europe/Gibraltar` - * `Europe/Guernsey` - * `Europe/Helsinki` - *
     * `Europe/Isle_of_Man` - * `Europe/Istanbul` - * `Europe/Jersey` - * `Europe/Kaliningrad` - * `Europe/Kiev` - *
     * `Europe/Lisbon` - * `Europe/Ljubljana` - * `Europe/London` - * `Europe/Luxembourg` - * `Europe/Madrid` - *
     * `Europe/Malta` - * `Europe/Mariehamn` - * `Europe/Minsk` - * `Europe/Monaco` - * `Europe/Moscow` - * `Europe/Oslo` - *
     * `Europe/Paris` - * `Europe/Podgorica` - * `Europe/Prague` - * `Europe/Riga` - * `Europe/Rome` - * `Europe/Samara` - *
     * `Europe/San_Marino` - * `Europe/Sarajevo` - * `Europe/Simferopol` - * `Europe/Skopje` - * `Europe/Sofia` - *
     * `Europe/Stockholm` - * `Europe/Tallinn` - * `Europe/Tirane` - * `Europe/Uzhgorod` - * `Europe/Vaduz` - *
     * `Europe/Vatican` - * `Europe/Vienna` - * `Europe/Vilnius` - * `Europe/Volgograd` - * `Europe/Warsaw` - * `Europe/Zagreb`
     * - * `Europe/Zaporozhye` - * `Europe/Zurich` - * `Indian/Antananarivo` - * `Indian/Chagos` - * `Indian/Christmas` - *
     * `Indian/Cocos` - * `Indian/Comoro` - * `Indian/Kerguelen` - * `Indian/Mahe` - * `Indian/Maldives` - * `Indian/Mauritius`
     * - * `Indian/Mayotte` - * `Indian/Reunion` - * `Pacific/Apia` - * `Pacific/Auckland` - * `Pacific/Chatham` - *
     * `Pacific/Chuuk` - * `Pacific/Easter` - * `Pacific/Efate` - * `Pacific/Enderbury` - * `Pacific/Fakaofo` - *
     * `Pacific/Fiji` - * `Pacific/Funafuti` - * `Pacific/Galapagos` - * `Pacific/Gambier` - * `Pacific/Guadalcanal` - *
     * `Pacific/Guam` - * `Pacific/Honolulu` - * `Pacific/Johnston` - * `Pacific/Kiritimati` - * `Pacific/Kosrae` - *
     * `Pacific/Kwajalein` - * `Pacific/Majuro` - * `Pacific/Marquesas` - * `Pacific/Midway` - * `Pacific/Nauru` - *
     * `Pacific/Norfolk` - * `Pacific/Noumea` - * `Pacific/Pago_Pago` - * `Pacific/Palau` - * `Pacific/Pitcairn` - *
     * `Pacific/Pohnpei` - * `Pacific/Port_Moresby` - * `Pacific/Rarotonga` - * `Pacific/Saipan` - * `Pacific/Tahiti` - *
     * `Pacific/Tarawa` - * `Pacific/Tongatapu` - * `Pacific/Wake` - * `Pacific/Wallis` - * `UTC` -
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.NtpPolicyVersionContext[]>;

    /**
     * Create a NtpPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NtpPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NtpPolicyArgs | NtpPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NtpPolicyState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["applianceAccounts"] = state ? state.applianceAccounts : undefined;
            resourceInputs["authenticatedNtpServers"] = state ? state.authenticatedNtpServers : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ntpServers"] = state ? state.ntpServers : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["profiles"] = state ? state.profiles : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as NtpPolicyArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["applianceAccounts"] = args ? args.applianceAccounts : undefined;
            resourceInputs["authenticatedNtpServers"] = args ? args.authenticatedNtpServers : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ntpServers"] = args ? args.ntpServers : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["profiles"] = args ? args.profiles : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NtpPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering NtpPolicy resources.
 */
export interface NtpPolicyState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.NtpPolicyAncestor>[]>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    applianceAccounts?: pulumi.Input<pulumi.Input<inputs.NtpPolicyApplianceAccount>[]>;
    authenticatedNtpServers?: pulumi.Input<pulumi.Input<inputs.NtpPolicyAuthenticatedNtpServer>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * State of NTP service on the endpoint.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.NtpPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.NtpPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.NtpPolicyPermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractConfigProfile resources.
     */
    profiles?: pulumi.Input<pulumi.Input<inputs.NtpPolicyProfile>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.NtpPolicyTag>[]>;
    /**
     * Timezone of services on the endpoint. * `Pacific/Niue` - * `Africa/Abidjan` - * `Africa/Accra` - * `Africa/Addis_Ababa`
     * - * `Africa/Algiers` - * `Africa/Asmara` - * `Africa/Bamako` - * `Africa/Bangui` - * `Africa/Banjul` - * `Africa/Bissau`
     * - * `Africa/Blantyre` - * `Africa/Brazzaville` - * `Africa/Bujumbura` - * `Africa/Cairo` - * `Africa/Casablanca` - *
     * `Africa/Ceuta` - * `Africa/Conakry` - * `Africa/Dakar` - * `Africa/Dar_es_Salaam` - * `Africa/Djibouti` - *
     * `Africa/Douala` - * `Africa/El_Aaiun` - * `Africa/Freetown` - * `Africa/Gaborone` - * `Africa/Harare` - *
     * `Africa/Johannesburg` - * `Africa/Juba` - * `Africa/Kampala` - * `Africa/Khartoum` - * `Africa/Kigali` - *
     * `Africa/Kinshasa` - * `Africa/Lagos` - * `Africa/Libreville` - * `Africa/Lome` - * `Africa/Luanda` - *
     * `Africa/Lubumbashi` - * `Africa/Lusaka` - * `Africa/Malabo` - * `Africa/Maputo` - * `Africa/Maseru` - * `Africa/Mbabane`
     * - * `Africa/Mogadishu` - * `Africa/Monrovia` - * `Africa/Nairobi` - * `Africa/Ndjamena` - * `Africa/Niamey` - *
     * `Africa/Nouakchott` - * `Africa/Ouagadougou` - * `Africa/Porto-Novo` - * `Africa/Sao_Tome` - * `Africa/Tripoli` - *
     * `Africa/Tunis` - * `Africa/Windhoek` - * `America/Adak` - * `America/Anchorage` - * `America/Anguilla` - *
     * `America/Antigua` - * `America/Araguaina` - * `America/Argentina/Buenos_Aires` - * `America/Argentina/Catamarca` - *
     * `America/Argentina/Cordoba` - * `America/Argentina/Jujuy` - * `America/Argentina/La_Rioja` - *
     * `America/Argentina/Mendoza` - * `America/Argentina/Rio_Gallegos` - * `America/Argentina/Salta` - *
     * `America/Argentina/San_Juan` - * `America/Argentina/San_Luis` - * `America/Argentina/Tucuman` - *
     * `America/Argentina/Ushuaia` - * `America/Aruba` - * `America/Asuncion` - * `America/Atikokan` - * `America/Bahia` - *
     * `America/Bahia_Banderas` - * `America/Barbados` - * `America/Belem` - * `America/Belize` - * `America/Blanc-Sablon` - *
     * `America/Boa_Vista` - * `America/Bogota` - * `America/Boise` - * `America/Cambridge_Bay` - * `America/Campo_Grande` - *
     * `America/Cancun` - * `America/Caracas` - * `America/Cayenne` - * `America/Cayman` - * `America/Chicago` - *
     * `America/Chihuahua` - * `America/Costa_Rica` - * `America/Creston` - * `America/Cuiaba` - * `America/Curacao` - *
     * `America/Danmarkshavn` - * `America/Dawson` - * `America/Dawson_Creek` - * `America/Denver` - * `America/Detroit` - *
     * `America/Dominica` - * `America/Edmonton` - * `America/Eirunepe` - * `America/El_Salvador` - * `America/Fortaleza` - *
     * `America/Glace_Bay` - * `America/Godthab` - * `America/Goose_Bay` - * `America/Grand_Turk` - * `America/Grenada` - *
     * `America/Guadeloupe` - * `America/Guatemala` - * `America/Guayaquil` - * `America/Guyana` - * `America/Halifax` - *
     * `America/Havana` - * `America/Hermosillo` - * `America/Indiana/Indianapolis` - * `America/Indiana/Knox` - *
     * `America/Indiana/Marengo` - * `America/Indiana/Petersburg` - * `America/Indiana/Tell_City` - * `America/Indiana/Vevay` -
     * * `America/Indiana/Vincennes` - * `America/Indiana/Winamac` - * `America/Inuvik` - * `America/Iqaluit` - *
     * `America/Jamaica` - * `America/Juneau` - * `America/Kentucky/Louisville` - * `America/Kentucky/Monticello` - *
     * `America/Kralendijk` - * `America/La_Paz` - * `America/Lima` - * `America/Los_Angeles` - * `America/Lower_Princes` - *
     * `America/Maceio` - * `America/Managua` - * `America/Manaus` - * `America/Marigot` - * `America/Martinique` - *
     * `America/Matamoros` - * `America/Mazatlan` - * `America/Menominee` - * `America/Merida` - * `America/Metlakatla` - *
     * `America/Mexico_City` - * `America/Miquelon` - * `America/Moncton` - * `America/Monterrey` - * `America/Montevideo` - *
     * `America/Montreal` - * `America/Montserrat` - * `America/Nassau` - * `America/New_York` - * `America/Nipigon` - *
     * `America/Nome` - * `America/Noronha` - * `America/North_Dakota/Beulah` - * `America/North_Dakota/Center` - *
     * `America/North_Dakota/New_Salem` - * `America/Ojinaga` - * `America/Panama` - * `America/Pangnirtung` - *
     * `America/Paramaribo` - * `America/Phoenix` - * `America/Port-au-Prince` - * `America/Port_of_Spain` - *
     * `America/Porto_Velho` - * `America/Puerto_Rico` - * `America/Rainy_River` - * `America/Rankin_Inlet` - *
     * `America/Recife` - * `America/Regina` - * `America/Resolute` - * `America/Rio_Branco` - * `America/Santa_Isabel` - *
     * `America/Santarem` - * `America/Santiago` - * `America/Santo_Domingo` - * `America/Sao_Paulo` - * `America/Scoresbysund`
     * - * `America/Shiprock` - * `America/Sitka` - * `America/St_Barthelemy` - * `America/St_Johns` - * `America/St_Kitts` - *
     * `America/St_Lucia` - * `America/St_Thomas` - * `America/St_Vincent` - * `America/Swift_Current` - *
     * `America/Tegucigalpa` - * `America/Thule` - * `America/Thunder_Bay` - * `America/Tijuana` - * `America/Toronto` - *
     * `America/Tortola` - * `America/Vancouver` - * `America/Whitehorse` - * `America/Winnipeg` - * `America/Yakutat` - *
     * `America/Yellowknife` - * `Antarctica/Casey` - * `Antarctica/Davis` - * `Antarctica/DumontDUrville` - *
     * `Antarctica/Macquarie` - * `Antarctica/Mawson` - * `Antarctica/McMurdo` - * `Antarctica/Palmer` - * `Antarctica/Rothera`
     * - * `Antarctica/South_Pole` - * `Antarctica/Syowa` - * `Antarctica/Troll` - * `Antarctica/Vostok` - *
     * `Arctic/Longyearbyen` - * `Asia/Aden` - * `Asia/Almaty` - * `Asia/Amman` - * `Asia/Anadyr` - * `Asia/Aqtau` - *
     * `Asia/Aqtobe` - * `Asia/Ashgabat` - * `Asia/Baghdad` - * `Asia/Bahrain` - * `Asia/Baku` - * `Asia/Bangkok` - *
     * `Asia/Beirut` - * `Asia/Bishkek` - * `Asia/Brunei` - * `Asia/Calcutta` - * `Asia/Choibalsan` - * `Asia/Chongqing` - *
     * `Asia/Colombo` - * `Asia/Damascus` - * `Asia/Dhaka` - * `Asia/Dili` - * `Asia/Dubai` - * `Asia/Dushanbe` - * `Asia/Gaza`
     * - * `Asia/Harbin` - * `Asia/Hebron` - * `Asia/Ho_Chi_Minh` - * `Asia/Hong_Kong` - * `Asia/Hovd` - * `Asia/Irkutsk` - *
     * `Asia/Jakarta` - * `Asia/Jayapura` - * `Asia/Jerusalem` - * `Asia/Kabul` - * `Asia/Kamchatka` - * `Asia/Karachi` - *
     * `Asia/Kashgar` - * `Asia/Kathmandu` - * `Asia/Katmandu` - * `Asia/Khandyga` - * `Asia/Kolkata` - * `Asia/Krasnoyarsk` -
     * * `Asia/Kuala_Lumpur` - * `Asia/Kuching` - * `Asia/Kuwait` - * `Asia/Macau` - * `Asia/Magadan` - * `Asia/Makassar` - *
     * `Asia/Manila` - * `Asia/Muscat` - * `Asia/Nicosia` - * `Asia/Novokuznetsk` - * `Asia/Novosibirsk` - * `Asia/Omsk` - *
     * `Asia/Oral` - * `Asia/Phnom_Penh` - * `Asia/Pontianak` - * `Asia/Pyongyang` - * `Asia/Qatar` - * `Asia/Qyzylorda` - *
     * `Asia/Rangoon` - * `Asia/Riyadh` - * `Asia/Saigon` - * `Asia/Sakhalin` - * `Asia/Samarkand` - * `Asia/Seoul` - *
     * `Asia/Shanghai` - * `Asia/Singapore` - * `Asia/Taipei` - * `Asia/Tashkent` - * `Asia/Tbilisi` - * `Asia/Tehran` - *
     * `Asia/Thimphu` - * `Asia/Tokyo` - * `Asia/Ulaanbaatar` - * `Asia/Urumqi` - * `Asia/Ust-Nera` - * `Asia/Vientiane` - *
     * `Asia/Vladivostok` - * `Asia/Yakutsk` - * `Asia/Yekaterinburg` - * `Asia/Yerevan` - * `Atlantic/Azores` - *
     * `Atlantic/Bermuda` - * `Atlantic/Canary` - * `Atlantic/Cape_Verde` - * `Atlantic/Faroe` - * `Atlantic/Madeira` - *
     * `Atlantic/Reykjavik` - * `Atlantic/South_Georgia` - * `Atlantic/St_Helena` - * `Atlantic/Stanley` - *
     * `Australia/Adelaide` - * `Australia/Brisbane` - * `Australia/Broken_Hill` - * `Australia/Currie` - * `Australia/Darwin`
     * - * `Australia/Eucla` - * `Australia/Hobart` - * `Australia/Lindeman` - * `Australia/Lord_Howe` - *
     * `Australia/Melbourne` - * `Australia/Perth` - * `Australia/Sydney` - * `Etc/GMT` - * `Europe/Amsterdam` - *
     * `Europe/Andorra` - * `Europe/Athens` - * `Europe/Belgrade` - * `Europe/Berlin` - * `Europe/Bratislava` - *
     * `Europe/Brussels` - * `Europe/Bucharest` - * `Europe/Budapest` - * `Europe/Busingen` - * `Europe/Chisinau` - *
     * `Europe/Copenhagen` - * `Europe/Dublin` - * `Europe/Gibraltar` - * `Europe/Guernsey` - * `Europe/Helsinki` - *
     * `Europe/Isle_of_Man` - * `Europe/Istanbul` - * `Europe/Jersey` - * `Europe/Kaliningrad` - * `Europe/Kiev` - *
     * `Europe/Lisbon` - * `Europe/Ljubljana` - * `Europe/London` - * `Europe/Luxembourg` - * `Europe/Madrid` - *
     * `Europe/Malta` - * `Europe/Mariehamn` - * `Europe/Minsk` - * `Europe/Monaco` - * `Europe/Moscow` - * `Europe/Oslo` - *
     * `Europe/Paris` - * `Europe/Podgorica` - * `Europe/Prague` - * `Europe/Riga` - * `Europe/Rome` - * `Europe/Samara` - *
     * `Europe/San_Marino` - * `Europe/Sarajevo` - * `Europe/Simferopol` - * `Europe/Skopje` - * `Europe/Sofia` - *
     * `Europe/Stockholm` - * `Europe/Tallinn` - * `Europe/Tirane` - * `Europe/Uzhgorod` - * `Europe/Vaduz` - *
     * `Europe/Vatican` - * `Europe/Vienna` - * `Europe/Vilnius` - * `Europe/Volgograd` - * `Europe/Warsaw` - * `Europe/Zagreb`
     * - * `Europe/Zaporozhye` - * `Europe/Zurich` - * `Indian/Antananarivo` - * `Indian/Chagos` - * `Indian/Christmas` - *
     * `Indian/Cocos` - * `Indian/Comoro` - * `Indian/Kerguelen` - * `Indian/Mahe` - * `Indian/Maldives` - * `Indian/Mauritius`
     * - * `Indian/Mayotte` - * `Indian/Reunion` - * `Pacific/Apia` - * `Pacific/Auckland` - * `Pacific/Chatham` - *
     * `Pacific/Chuuk` - * `Pacific/Easter` - * `Pacific/Efate` - * `Pacific/Enderbury` - * `Pacific/Fakaofo` - *
     * `Pacific/Fiji` - * `Pacific/Funafuti` - * `Pacific/Galapagos` - * `Pacific/Gambier` - * `Pacific/Guadalcanal` - *
     * `Pacific/Guam` - * `Pacific/Honolulu` - * `Pacific/Johnston` - * `Pacific/Kiritimati` - * `Pacific/Kosrae` - *
     * `Pacific/Kwajalein` - * `Pacific/Majuro` - * `Pacific/Marquesas` - * `Pacific/Midway` - * `Pacific/Nauru` - *
     * `Pacific/Norfolk` - * `Pacific/Noumea` - * `Pacific/Pago_Pago` - * `Pacific/Palau` - * `Pacific/Pitcairn` - *
     * `Pacific/Pohnpei` - * `Pacific/Port_Moresby` - * `Pacific/Rarotonga` - * `Pacific/Saipan` - * `Pacific/Tahiti` - *
     * `Pacific/Tarawa` - * `Pacific/Tongatapu` - * `Pacific/Wake` - * `Pacific/Wallis` - * `UTC` -
     */
    timezone?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.NtpPolicyVersionContext>[]>;
}

/**
 * The set of arguments for constructing a NtpPolicy resource.
 */
export interface NtpPolicyArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.NtpPolicyAncestor>[]>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    applianceAccounts?: pulumi.Input<pulumi.Input<inputs.NtpPolicyApplianceAccount>[]>;
    authenticatedNtpServers?: pulumi.Input<pulumi.Input<inputs.NtpPolicyAuthenticatedNtpServer>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * State of NTP service on the endpoint.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.NtpPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.NtpPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.NtpPolicyPermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractConfigProfile resources.
     */
    profiles?: pulumi.Input<pulumi.Input<inputs.NtpPolicyProfile>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.NtpPolicyTag>[]>;
    /**
     * Timezone of services on the endpoint. * `Pacific/Niue` - * `Africa/Abidjan` - * `Africa/Accra` - * `Africa/Addis_Ababa`
     * - * `Africa/Algiers` - * `Africa/Asmara` - * `Africa/Bamako` - * `Africa/Bangui` - * `Africa/Banjul` - * `Africa/Bissau`
     * - * `Africa/Blantyre` - * `Africa/Brazzaville` - * `Africa/Bujumbura` - * `Africa/Cairo` - * `Africa/Casablanca` - *
     * `Africa/Ceuta` - * `Africa/Conakry` - * `Africa/Dakar` - * `Africa/Dar_es_Salaam` - * `Africa/Djibouti` - *
     * `Africa/Douala` - * `Africa/El_Aaiun` - * `Africa/Freetown` - * `Africa/Gaborone` - * `Africa/Harare` - *
     * `Africa/Johannesburg` - * `Africa/Juba` - * `Africa/Kampala` - * `Africa/Khartoum` - * `Africa/Kigali` - *
     * `Africa/Kinshasa` - * `Africa/Lagos` - * `Africa/Libreville` - * `Africa/Lome` - * `Africa/Luanda` - *
     * `Africa/Lubumbashi` - * `Africa/Lusaka` - * `Africa/Malabo` - * `Africa/Maputo` - * `Africa/Maseru` - * `Africa/Mbabane`
     * - * `Africa/Mogadishu` - * `Africa/Monrovia` - * `Africa/Nairobi` - * `Africa/Ndjamena` - * `Africa/Niamey` - *
     * `Africa/Nouakchott` - * `Africa/Ouagadougou` - * `Africa/Porto-Novo` - * `Africa/Sao_Tome` - * `Africa/Tripoli` - *
     * `Africa/Tunis` - * `Africa/Windhoek` - * `America/Adak` - * `America/Anchorage` - * `America/Anguilla` - *
     * `America/Antigua` - * `America/Araguaina` - * `America/Argentina/Buenos_Aires` - * `America/Argentina/Catamarca` - *
     * `America/Argentina/Cordoba` - * `America/Argentina/Jujuy` - * `America/Argentina/La_Rioja` - *
     * `America/Argentina/Mendoza` - * `America/Argentina/Rio_Gallegos` - * `America/Argentina/Salta` - *
     * `America/Argentina/San_Juan` - * `America/Argentina/San_Luis` - * `America/Argentina/Tucuman` - *
     * `America/Argentina/Ushuaia` - * `America/Aruba` - * `America/Asuncion` - * `America/Atikokan` - * `America/Bahia` - *
     * `America/Bahia_Banderas` - * `America/Barbados` - * `America/Belem` - * `America/Belize` - * `America/Blanc-Sablon` - *
     * `America/Boa_Vista` - * `America/Bogota` - * `America/Boise` - * `America/Cambridge_Bay` - * `America/Campo_Grande` - *
     * `America/Cancun` - * `America/Caracas` - * `America/Cayenne` - * `America/Cayman` - * `America/Chicago` - *
     * `America/Chihuahua` - * `America/Costa_Rica` - * `America/Creston` - * `America/Cuiaba` - * `America/Curacao` - *
     * `America/Danmarkshavn` - * `America/Dawson` - * `America/Dawson_Creek` - * `America/Denver` - * `America/Detroit` - *
     * `America/Dominica` - * `America/Edmonton` - * `America/Eirunepe` - * `America/El_Salvador` - * `America/Fortaleza` - *
     * `America/Glace_Bay` - * `America/Godthab` - * `America/Goose_Bay` - * `America/Grand_Turk` - * `America/Grenada` - *
     * `America/Guadeloupe` - * `America/Guatemala` - * `America/Guayaquil` - * `America/Guyana` - * `America/Halifax` - *
     * `America/Havana` - * `America/Hermosillo` - * `America/Indiana/Indianapolis` - * `America/Indiana/Knox` - *
     * `America/Indiana/Marengo` - * `America/Indiana/Petersburg` - * `America/Indiana/Tell_City` - * `America/Indiana/Vevay` -
     * * `America/Indiana/Vincennes` - * `America/Indiana/Winamac` - * `America/Inuvik` - * `America/Iqaluit` - *
     * `America/Jamaica` - * `America/Juneau` - * `America/Kentucky/Louisville` - * `America/Kentucky/Monticello` - *
     * `America/Kralendijk` - * `America/La_Paz` - * `America/Lima` - * `America/Los_Angeles` - * `America/Lower_Princes` - *
     * `America/Maceio` - * `America/Managua` - * `America/Manaus` - * `America/Marigot` - * `America/Martinique` - *
     * `America/Matamoros` - * `America/Mazatlan` - * `America/Menominee` - * `America/Merida` - * `America/Metlakatla` - *
     * `America/Mexico_City` - * `America/Miquelon` - * `America/Moncton` - * `America/Monterrey` - * `America/Montevideo` - *
     * `America/Montreal` - * `America/Montserrat` - * `America/Nassau` - * `America/New_York` - * `America/Nipigon` - *
     * `America/Nome` - * `America/Noronha` - * `America/North_Dakota/Beulah` - * `America/North_Dakota/Center` - *
     * `America/North_Dakota/New_Salem` - * `America/Ojinaga` - * `America/Panama` - * `America/Pangnirtung` - *
     * `America/Paramaribo` - * `America/Phoenix` - * `America/Port-au-Prince` - * `America/Port_of_Spain` - *
     * `America/Porto_Velho` - * `America/Puerto_Rico` - * `America/Rainy_River` - * `America/Rankin_Inlet` - *
     * `America/Recife` - * `America/Regina` - * `America/Resolute` - * `America/Rio_Branco` - * `America/Santa_Isabel` - *
     * `America/Santarem` - * `America/Santiago` - * `America/Santo_Domingo` - * `America/Sao_Paulo` - * `America/Scoresbysund`
     * - * `America/Shiprock` - * `America/Sitka` - * `America/St_Barthelemy` - * `America/St_Johns` - * `America/St_Kitts` - *
     * `America/St_Lucia` - * `America/St_Thomas` - * `America/St_Vincent` - * `America/Swift_Current` - *
     * `America/Tegucigalpa` - * `America/Thule` - * `America/Thunder_Bay` - * `America/Tijuana` - * `America/Toronto` - *
     * `America/Tortola` - * `America/Vancouver` - * `America/Whitehorse` - * `America/Winnipeg` - * `America/Yakutat` - *
     * `America/Yellowknife` - * `Antarctica/Casey` - * `Antarctica/Davis` - * `Antarctica/DumontDUrville` - *
     * `Antarctica/Macquarie` - * `Antarctica/Mawson` - * `Antarctica/McMurdo` - * `Antarctica/Palmer` - * `Antarctica/Rothera`
     * - * `Antarctica/South_Pole` - * `Antarctica/Syowa` - * `Antarctica/Troll` - * `Antarctica/Vostok` - *
     * `Arctic/Longyearbyen` - * `Asia/Aden` - * `Asia/Almaty` - * `Asia/Amman` - * `Asia/Anadyr` - * `Asia/Aqtau` - *
     * `Asia/Aqtobe` - * `Asia/Ashgabat` - * `Asia/Baghdad` - * `Asia/Bahrain` - * `Asia/Baku` - * `Asia/Bangkok` - *
     * `Asia/Beirut` - * `Asia/Bishkek` - * `Asia/Brunei` - * `Asia/Calcutta` - * `Asia/Choibalsan` - * `Asia/Chongqing` - *
     * `Asia/Colombo` - * `Asia/Damascus` - * `Asia/Dhaka` - * `Asia/Dili` - * `Asia/Dubai` - * `Asia/Dushanbe` - * `Asia/Gaza`
     * - * `Asia/Harbin` - * `Asia/Hebron` - * `Asia/Ho_Chi_Minh` - * `Asia/Hong_Kong` - * `Asia/Hovd` - * `Asia/Irkutsk` - *
     * `Asia/Jakarta` - * `Asia/Jayapura` - * `Asia/Jerusalem` - * `Asia/Kabul` - * `Asia/Kamchatka` - * `Asia/Karachi` - *
     * `Asia/Kashgar` - * `Asia/Kathmandu` - * `Asia/Katmandu` - * `Asia/Khandyga` - * `Asia/Kolkata` - * `Asia/Krasnoyarsk` -
     * * `Asia/Kuala_Lumpur` - * `Asia/Kuching` - * `Asia/Kuwait` - * `Asia/Macau` - * `Asia/Magadan` - * `Asia/Makassar` - *
     * `Asia/Manila` - * `Asia/Muscat` - * `Asia/Nicosia` - * `Asia/Novokuznetsk` - * `Asia/Novosibirsk` - * `Asia/Omsk` - *
     * `Asia/Oral` - * `Asia/Phnom_Penh` - * `Asia/Pontianak` - * `Asia/Pyongyang` - * `Asia/Qatar` - * `Asia/Qyzylorda` - *
     * `Asia/Rangoon` - * `Asia/Riyadh` - * `Asia/Saigon` - * `Asia/Sakhalin` - * `Asia/Samarkand` - * `Asia/Seoul` - *
     * `Asia/Shanghai` - * `Asia/Singapore` - * `Asia/Taipei` - * `Asia/Tashkent` - * `Asia/Tbilisi` - * `Asia/Tehran` - *
     * `Asia/Thimphu` - * `Asia/Tokyo` - * `Asia/Ulaanbaatar` - * `Asia/Urumqi` - * `Asia/Ust-Nera` - * `Asia/Vientiane` - *
     * `Asia/Vladivostok` - * `Asia/Yakutsk` - * `Asia/Yekaterinburg` - * `Asia/Yerevan` - * `Atlantic/Azores` - *
     * `Atlantic/Bermuda` - * `Atlantic/Canary` - * `Atlantic/Cape_Verde` - * `Atlantic/Faroe` - * `Atlantic/Madeira` - *
     * `Atlantic/Reykjavik` - * `Atlantic/South_Georgia` - * `Atlantic/St_Helena` - * `Atlantic/Stanley` - *
     * `Australia/Adelaide` - * `Australia/Brisbane` - * `Australia/Broken_Hill` - * `Australia/Currie` - * `Australia/Darwin`
     * - * `Australia/Eucla` - * `Australia/Hobart` - * `Australia/Lindeman` - * `Australia/Lord_Howe` - *
     * `Australia/Melbourne` - * `Australia/Perth` - * `Australia/Sydney` - * `Etc/GMT` - * `Europe/Amsterdam` - *
     * `Europe/Andorra` - * `Europe/Athens` - * `Europe/Belgrade` - * `Europe/Berlin` - * `Europe/Bratislava` - *
     * `Europe/Brussels` - * `Europe/Bucharest` - * `Europe/Budapest` - * `Europe/Busingen` - * `Europe/Chisinau` - *
     * `Europe/Copenhagen` - * `Europe/Dublin` - * `Europe/Gibraltar` - * `Europe/Guernsey` - * `Europe/Helsinki` - *
     * `Europe/Isle_of_Man` - * `Europe/Istanbul` - * `Europe/Jersey` - * `Europe/Kaliningrad` - * `Europe/Kiev` - *
     * `Europe/Lisbon` - * `Europe/Ljubljana` - * `Europe/London` - * `Europe/Luxembourg` - * `Europe/Madrid` - *
     * `Europe/Malta` - * `Europe/Mariehamn` - * `Europe/Minsk` - * `Europe/Monaco` - * `Europe/Moscow` - * `Europe/Oslo` - *
     * `Europe/Paris` - * `Europe/Podgorica` - * `Europe/Prague` - * `Europe/Riga` - * `Europe/Rome` - * `Europe/Samara` - *
     * `Europe/San_Marino` - * `Europe/Sarajevo` - * `Europe/Simferopol` - * `Europe/Skopje` - * `Europe/Sofia` - *
     * `Europe/Stockholm` - * `Europe/Tallinn` - * `Europe/Tirane` - * `Europe/Uzhgorod` - * `Europe/Vaduz` - *
     * `Europe/Vatican` - * `Europe/Vienna` - * `Europe/Vilnius` - * `Europe/Volgograd` - * `Europe/Warsaw` - * `Europe/Zagreb`
     * - * `Europe/Zaporozhye` - * `Europe/Zurich` - * `Indian/Antananarivo` - * `Indian/Chagos` - * `Indian/Christmas` - *
     * `Indian/Cocos` - * `Indian/Comoro` - * `Indian/Kerguelen` - * `Indian/Mahe` - * `Indian/Maldives` - * `Indian/Mauritius`
     * - * `Indian/Mayotte` - * `Indian/Reunion` - * `Pacific/Apia` - * `Pacific/Auckland` - * `Pacific/Chatham` - *
     * `Pacific/Chuuk` - * `Pacific/Easter` - * `Pacific/Efate` - * `Pacific/Enderbury` - * `Pacific/Fakaofo` - *
     * `Pacific/Fiji` - * `Pacific/Funafuti` - * `Pacific/Galapagos` - * `Pacific/Gambier` - * `Pacific/Guadalcanal` - *
     * `Pacific/Guam` - * `Pacific/Honolulu` - * `Pacific/Johnston` - * `Pacific/Kiritimati` - * `Pacific/Kosrae` - *
     * `Pacific/Kwajalein` - * `Pacific/Majuro` - * `Pacific/Marquesas` - * `Pacific/Midway` - * `Pacific/Nauru` - *
     * `Pacific/Norfolk` - * `Pacific/Noumea` - * `Pacific/Pago_Pago` - * `Pacific/Palau` - * `Pacific/Pitcairn` - *
     * `Pacific/Pohnpei` - * `Pacific/Port_Moresby` - * `Pacific/Rarotonga` - * `Pacific/Saipan` - * `Pacific/Tahiti` - *
     * `Pacific/Tarawa` - * `Pacific/Tongatapu` - * `Pacific/Wake` - * `Pacific/Wallis` - * `UTC` -
     */
    timezone?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.NtpPolicyVersionContext>[]>;
}
