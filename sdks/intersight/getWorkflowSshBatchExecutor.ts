// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkflowSshBatchExecutor(args?: GetWorkflowSshBatchExecutorArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowSshBatchExecutorResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getWorkflowSshBatchExecutor:getWorkflowSshBatchExecutor", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "batches": args.batches,
        "cancelActions": args.cancelActions,
        "classId": args.classId,
        "constraints": args.constraints,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "outcomes": args.outcomes,
        "output": args.output,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "retryFromFailedApi": args.retryFromFailedApi,
        "sharedScope": args.sharedScope,
        "skipOnCondition": args.skipOnCondition,
        "tags": args.tags,
        "taskDefinition": args.taskDefinition,
        "uiRenderingData": args.uiRenderingData,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkflowSshBatchExecutor.
 */
export interface GetWorkflowSshBatchExecutorArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetWorkflowSshBatchExecutorAncestor[];
    batches?: inputs.GetWorkflowSshBatchExecutorBatch[];
    cancelActions?: inputs.GetWorkflowSshBatchExecutorCancelAction[];
    classId?: string;
    constraints?: inputs.GetWorkflowSshBatchExecutorConstraints;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    outcomes?: string;
    output?: string;
    owners?: string[];
    parent?: inputs.GetWorkflowSshBatchExecutorParent;
    permissionResources?: inputs.GetWorkflowSshBatchExecutorPermissionResource[];
    retryFromFailedApi?: boolean;
    sharedScope?: string;
    skipOnCondition?: string;
    tags?: inputs.GetWorkflowSshBatchExecutorTag[];
    taskDefinition?: inputs.GetWorkflowSshBatchExecutorTaskDefinition;
    uiRenderingData?: string;
    versionContext?: inputs.GetWorkflowSshBatchExecutorVersionContext;
}

/**
 * A collection of values returned by getWorkflowSshBatchExecutor.
 */
export interface GetWorkflowSshBatchExecutorResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetWorkflowSshBatchExecutorAncestor[];
    readonly batches?: outputs.GetWorkflowSshBatchExecutorBatch[];
    readonly cancelActions?: outputs.GetWorkflowSshBatchExecutorCancelAction[];
    readonly classId?: string;
    readonly constraints?: outputs.GetWorkflowSshBatchExecutorConstraints;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly outcomes?: string;
    readonly output?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetWorkflowSshBatchExecutorParent;
    readonly permissionResources?: outputs.GetWorkflowSshBatchExecutorPermissionResource[];
    readonly results: outputs.GetWorkflowSshBatchExecutorResult[];
    readonly retryFromFailedApi?: boolean;
    readonly sharedScope?: string;
    readonly skipOnCondition?: string;
    readonly tags?: outputs.GetWorkflowSshBatchExecutorTag[];
    readonly taskDefinition?: outputs.GetWorkflowSshBatchExecutorTaskDefinition;
    readonly uiRenderingData?: string;
    readonly versionContext?: outputs.GetWorkflowSshBatchExecutorVersionContext;
}
export function getWorkflowSshBatchExecutorOutput(args?: GetWorkflowSshBatchExecutorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowSshBatchExecutorResult> {
    return pulumi.output(args).apply((a: any) => getWorkflowSshBatchExecutor(a, opts))
}

/**
 * A collection of arguments for invoking getWorkflowSshBatchExecutor.
 */
export interface GetWorkflowSshBatchExecutorOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetWorkflowSshBatchExecutorAncestorArgs>[]>;
    batches?: pulumi.Input<pulumi.Input<inputs.GetWorkflowSshBatchExecutorBatchArgs>[]>;
    cancelActions?: pulumi.Input<pulumi.Input<inputs.GetWorkflowSshBatchExecutorCancelActionArgs>[]>;
    classId?: pulumi.Input<string>;
    constraints?: pulumi.Input<inputs.GetWorkflowSshBatchExecutorConstraintsArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    outcomes?: pulumi.Input<string>;
    output?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetWorkflowSshBatchExecutorParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetWorkflowSshBatchExecutorPermissionResourceArgs>[]>;
    retryFromFailedApi?: pulumi.Input<boolean>;
    sharedScope?: pulumi.Input<string>;
    skipOnCondition?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetWorkflowSshBatchExecutorTagArgs>[]>;
    taskDefinition?: pulumi.Input<inputs.GetWorkflowSshBatchExecutorTaskDefinitionArgs>;
    uiRenderingData?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetWorkflowSshBatchExecutorVersionContextArgs>;
}
