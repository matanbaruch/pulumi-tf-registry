// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSoftwarerepositoryRelease(args?: GetSoftwarerepositoryReleaseArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwarerepositoryReleaseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getSoftwarerepositoryRelease:getSoftwarerepositoryRelease", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "releaseDate": args.releaseDate,
        "releaseNotesUrl": args.releaseNotesUrl,
        "sharedScope": args.sharedScope,
        "supportedModels": args.supportedModels,
        "tags": args.tags,
        "type": args.type,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSoftwarerepositoryRelease.
 */
export interface GetSoftwarerepositoryReleaseArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetSoftwarerepositoryReleaseAncestor[];
    catalog?: inputs.GetSoftwarerepositoryReleaseCatalog;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    nrVersion?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetSoftwarerepositoryReleaseParent;
    permissionResources?: inputs.GetSoftwarerepositoryReleasePermissionResource[];
    releaseDate?: string;
    releaseNotesUrl?: string;
    sharedScope?: string;
    supportedModels?: string[];
    tags?: inputs.GetSoftwarerepositoryReleaseTag[];
    type?: string;
    versionContext?: inputs.GetSoftwarerepositoryReleaseVersionContext;
}

/**
 * A collection of values returned by getSoftwarerepositoryRelease.
 */
export interface GetSoftwarerepositoryReleaseResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetSoftwarerepositoryReleaseAncestor[];
    readonly catalog?: outputs.GetSoftwarerepositoryReleaseCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nrVersion?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetSoftwarerepositoryReleaseParent;
    readonly permissionResources?: outputs.GetSoftwarerepositoryReleasePermissionResource[];
    readonly releaseDate?: string;
    readonly releaseNotesUrl?: string;
    readonly results: outputs.GetSoftwarerepositoryReleaseResult[];
    readonly sharedScope?: string;
    readonly supportedModels?: string[];
    readonly tags?: outputs.GetSoftwarerepositoryReleaseTag[];
    readonly type?: string;
    readonly versionContext?: outputs.GetSoftwarerepositoryReleaseVersionContext;
}
export function getSoftwarerepositoryReleaseOutput(args?: GetSoftwarerepositoryReleaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwarerepositoryReleaseResult> {
    return pulumi.output(args).apply((a: any) => getSoftwarerepositoryRelease(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwarerepositoryRelease.
 */
export interface GetSoftwarerepositoryReleaseOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetSoftwarerepositoryReleaseAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetSoftwarerepositoryReleaseCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetSoftwarerepositoryReleaseParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetSoftwarerepositoryReleasePermissionResourceArgs>[]>;
    releaseDate?: pulumi.Input<string>;
    releaseNotesUrl?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    supportedModels?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSoftwarerepositoryReleaseTagArgs>[]>;
    type?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetSoftwarerepositoryReleaseVersionContextArgs>;
}
