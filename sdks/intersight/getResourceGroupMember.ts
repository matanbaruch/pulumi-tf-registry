// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResourceGroupMember(args?: GetResourceGroupMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceGroupMemberResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getResourceGroupMember:getResourceGroupMember", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "group": args.group,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "resource": args.resource,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourceGroupMember.
 */
export interface GetResourceGroupMemberArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetResourceGroupMemberAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    group?: inputs.GetResourceGroupMemberGroup;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetResourceGroupMemberParent;
    permissionResources?: inputs.GetResourceGroupMemberPermissionResource[];
    resource?: inputs.GetResourceGroupMemberResource;
    sharedScope?: string;
    tags?: inputs.GetResourceGroupMemberTag[];
    versionContext?: inputs.GetResourceGroupMemberVersionContext;
}

/**
 * A collection of values returned by getResourceGroupMember.
 */
export interface GetResourceGroupMemberResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetResourceGroupMemberAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly group?: outputs.GetResourceGroupMemberGroup;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetResourceGroupMemberParent;
    readonly permissionResources?: outputs.GetResourceGroupMemberPermissionResource[];
    readonly resource?: outputs.GetResourceGroupMemberResource;
    readonly results: outputs.GetResourceGroupMemberResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetResourceGroupMemberTag[];
    readonly versionContext?: outputs.GetResourceGroupMemberVersionContext;
}
export function getResourceGroupMemberOutput(args?: GetResourceGroupMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceGroupMemberResult> {
    return pulumi.output(args).apply((a: any) => getResourceGroupMember(a, opts))
}

/**
 * A collection of arguments for invoking getResourceGroupMember.
 */
export interface GetResourceGroupMemberOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetResourceGroupMemberAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    group?: pulumi.Input<inputs.GetResourceGroupMemberGroupArgs>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetResourceGroupMemberParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetResourceGroupMemberPermissionResourceArgs>[]>;
    resource?: pulumi.Input<inputs.GetResourceGroupMemberResourceArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetResourceGroupMemberTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetResourceGroupMemberVersionContextArgs>;
}
