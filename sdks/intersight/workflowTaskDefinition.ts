// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WorkflowTaskDefinition extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowTaskDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowTaskDefinitionState, opts?: pulumi.CustomResourceOptions): WorkflowTaskDefinition {
        return new WorkflowTaskDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/workflowTaskDefinition:WorkflowTaskDefinition';

    /**
     * Returns true if the given object is an instance of WorkflowTaskDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowTaskDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowTaskDefinition.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.WorkflowTaskDefinitionAncestor[]>;
    /**
     * A reference to a workflowCatalog resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly catalogs!: pulumi.Output<outputs.WorkflowTaskDefinitionCatalog[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * A reference to a workflowTaskDefinition resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly clonedFroms!: pulumi.Output<outputs.WorkflowTaskDefinitionClonedFrom[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * When true this will be the task version that is used when a specific task definition version is not specified. The very
     * first task definition created with a name will be set as the default version, after that user can explicitly set any
     * version of the task definition as the default version.
     */
    public readonly defaultVersion!: pulumi.Output<boolean | undefined>;
    /**
     * A user friendly description about task on what operations are done as part of the task execution and any other specific
     * information about task input and output.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * An array of relationships to workflowTaskDefinition resources.
     */
    public readonly implementedTasks!: pulumi.Output<outputs.WorkflowTaskDefinitionImplementedTask[]>;
    /**
     * A reference to a workflowTaskDefinition resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly interfaceTasks!: pulumi.Output<outputs.WorkflowTaskDefinitionInterfaceTask[]>;
    /**
     * Type to capture all the internal properties for the task definition.
     */
    public readonly internalProperties!: pulumi.Output<outputs.WorkflowTaskDefinitionInternalProperty[]>;
    /**
     * A user friendly short name to identify the task definition. Label can only contain letters (a-z, A-Z), numbers (0-9),
     * hyphen (-), period (.), colon (:), space ( ), single quote ('), forward slash (/), or an underscore (_) and must be at
     * least 2 characters.
     */
    public readonly label!: pulumi.Output<string | undefined>;
    /**
     * License entitlement required to run this task. It is determined by license requirement of features. * `Base` - Base as a
     * License type. It is default license type. * `Essential` - Essential as a License type. * `Standard` - Standard as a
     * License type. * `Advantage` - Advantage as a License type. * `Premier` - Premier as a License type. * `IWO-Essential` -
     * IWO-Essential as a License type. * `IWO-Advantage` - IWO-Advantage as a License type. * `IWO-Premier` - IWO-Premier as a
     * License type. * `IKS-Advantage` - IKS-Advantage as a License type. * `INC-Premier-1GFixed` - Premier 1G Fixed license
     * tier for Intersight Nexus Cloud. * `INC-Premier-10GFixed` - Premier 10G Fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-100GFixed` - Premier 100G Fixed license tier for Intersight Nexus Cloud. * `INC-Premier-Mod4Slot` - Premier
     * Modular 4 slot license tier for Intersight Nexus Cloud. * `INC-Premier-Mod8Slot` - Premier Modular 8 slot license tier
     * for Intersight Nexus Cloud. * `INC-Premier-D2OpsFixed` - Premier D2Ops fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-D2OpsMod` - Premier D2Ops modular license tier for Intersight Nexus Cloud. *
     * `INC-Premier-CentralizedMod8Slot` - Premier modular license tier of switch type CentralizedMod8Slot for Intersight Nexus
     * Cloud. * `INC-Premier-DistributedMod8Slot` - Premier modular license tier of switch type DistributedMod8Slot for
     * Intersight Nexus Cloud. * `IntersightTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial
     * mode Intersight tiers. * `IWOTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode
     * IKS tiers. * `IKSTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode IWO tiers. *
     * `INCTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode Nexus tiers.
     */
    public readonly licenseEntitlement!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The name of the task definition. The name should follow this convention <Verb or Action><Category><Vendor><Product><Noun
     * or object> Verb or Action is a required portion of the name and this must be part of the pre-approved verb list.
     * Category is an optional field and this will refer to the broad category of the task referring to the type of resource or
     * endpoint. If there is no specific category then use "Generic" if required. Vendor is an optional field and this will
     * refer to the specific vendor this task applies to. If the task is generic and not tied to a vendor, then do not specify
     * anything. Product is an optional field, this will contain the vendor product and model when desired. Noun or object is a
     * required field and this will contain the noun or object on which the action is being performed. Name can only contain
     * letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.), colon (:), or an underscore (_). Examples SendEmail - This is
     * a task in Generic category for sending email. NewStorageVolume - This is a vendor agnostic task under Storage device
     * category for creating a new volume.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The version of the task definition so we can support multiple versions of a task definition.
     */
    public readonly nrVersion!: pulumi.Output<number | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.WorkflowTaskDefinitionParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.WorkflowTaskDefinitionPermissionResource[]>;
    /**
     * Type to capture all the properties for the task definition.
     */
    public readonly properties!: pulumi.Output<outputs.WorkflowTaskDefinitionProperty[]>;
    public readonly rollbackTasks!: pulumi.Output<outputs.WorkflowTaskDefinitionRollbackTask[]>;
    /**
     * If set to true, the task requires access to secure properties and uses an encryption token associated with a workflow
     * moid to encrypt or decrypt the secure properties.
     */
    public readonly securePropAccess!: pulumi.Output<boolean>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.WorkflowTaskDefinitionTag[]>;
    /**
     * A reference to a workflowTaskMetadata resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly taskMetadatas!: pulumi.Output<outputs.WorkflowTaskDefinitionTaskMetadata[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.WorkflowTaskDefinitionVersionContext[]>;

    /**
     * Create a WorkflowTaskDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkflowTaskDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkflowTaskDefinitionArgs | WorkflowTaskDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkflowTaskDefinitionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["catalogs"] = state ? state.catalogs : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clonedFroms"] = state ? state.clonedFroms : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["implementedTasks"] = state ? state.implementedTasks : undefined;
            resourceInputs["interfaceTasks"] = state ? state.interfaceTasks : undefined;
            resourceInputs["internalProperties"] = state ? state.internalProperties : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["licenseEntitlement"] = state ? state.licenseEntitlement : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nrVersion"] = state ? state.nrVersion : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["rollbackTasks"] = state ? state.rollbackTasks : undefined;
            resourceInputs["securePropAccess"] = state ? state.securePropAccess : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taskMetadatas"] = state ? state.taskMetadatas : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as WorkflowTaskDefinitionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["catalogs"] = args ? args.catalogs : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clonedFroms"] = args ? args.clonedFroms : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["defaultVersion"] = args ? args.defaultVersion : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["implementedTasks"] = args ? args.implementedTasks : undefined;
            resourceInputs["interfaceTasks"] = args ? args.interfaceTasks : undefined;
            resourceInputs["internalProperties"] = args ? args.internalProperties : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["licenseEntitlement"] = args ? args.licenseEntitlement : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nrVersion"] = args ? args.nrVersion : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["rollbackTasks"] = args ? args.rollbackTasks : undefined;
            resourceInputs["securePropAccess"] = args ? args.securePropAccess : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taskMetadatas"] = args ? args.taskMetadatas : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkflowTaskDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkflowTaskDefinition resources.
 */
export interface WorkflowTaskDefinitionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionAncestor>[]>;
    /**
     * A reference to a workflowCatalog resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    catalogs?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionCatalog>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a workflowTaskDefinition resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    clonedFroms?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionClonedFrom>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * When true this will be the task version that is used when a specific task definition version is not specified. The very
     * first task definition created with a name will be set as the default version, after that user can explicitly set any
     * version of the task definition as the default version.
     */
    defaultVersion?: pulumi.Input<boolean>;
    /**
     * A user friendly description about task on what operations are done as part of the task execution and any other specific
     * information about task input and output.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * An array of relationships to workflowTaskDefinition resources.
     */
    implementedTasks?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionImplementedTask>[]>;
    /**
     * A reference to a workflowTaskDefinition resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    interfaceTasks?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionInterfaceTask>[]>;
    /**
     * Type to capture all the internal properties for the task definition.
     */
    internalProperties?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionInternalProperty>[]>;
    /**
     * A user friendly short name to identify the task definition. Label can only contain letters (a-z, A-Z), numbers (0-9),
     * hyphen (-), period (.), colon (:), space ( ), single quote ('), forward slash (/), or an underscore (_) and must be at
     * least 2 characters.
     */
    label?: pulumi.Input<string>;
    /**
     * License entitlement required to run this task. It is determined by license requirement of features. * `Base` - Base as a
     * License type. It is default license type. * `Essential` - Essential as a License type. * `Standard` - Standard as a
     * License type. * `Advantage` - Advantage as a License type. * `Premier` - Premier as a License type. * `IWO-Essential` -
     * IWO-Essential as a License type. * `IWO-Advantage` - IWO-Advantage as a License type. * `IWO-Premier` - IWO-Premier as a
     * License type. * `IKS-Advantage` - IKS-Advantage as a License type. * `INC-Premier-1GFixed` - Premier 1G Fixed license
     * tier for Intersight Nexus Cloud. * `INC-Premier-10GFixed` - Premier 10G Fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-100GFixed` - Premier 100G Fixed license tier for Intersight Nexus Cloud. * `INC-Premier-Mod4Slot` - Premier
     * Modular 4 slot license tier for Intersight Nexus Cloud. * `INC-Premier-Mod8Slot` - Premier Modular 8 slot license tier
     * for Intersight Nexus Cloud. * `INC-Premier-D2OpsFixed` - Premier D2Ops fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-D2OpsMod` - Premier D2Ops modular license tier for Intersight Nexus Cloud. *
     * `INC-Premier-CentralizedMod8Slot` - Premier modular license tier of switch type CentralizedMod8Slot for Intersight Nexus
     * Cloud. * `INC-Premier-DistributedMod8Slot` - Premier modular license tier of switch type DistributedMod8Slot for
     * Intersight Nexus Cloud. * `IntersightTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial
     * mode Intersight tiers. * `IWOTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode
     * IKS tiers. * `IKSTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode IWO tiers. *
     * `INCTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode Nexus tiers.
     */
    licenseEntitlement?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the task definition. The name should follow this convention <Verb or Action><Category><Vendor><Product><Noun
     * or object> Verb or Action is a required portion of the name and this must be part of the pre-approved verb list.
     * Category is an optional field and this will refer to the broad category of the task referring to the type of resource or
     * endpoint. If there is no specific category then use "Generic" if required. Vendor is an optional field and this will
     * refer to the specific vendor this task applies to. If the task is generic and not tied to a vendor, then do not specify
     * anything. Product is an optional field, this will contain the vendor product and model when desired. Noun or object is a
     * required field and this will contain the noun or object on which the action is being performed. Name can only contain
     * letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.), colon (:), or an underscore (_). Examples SendEmail - This is
     * a task in Generic category for sending email. NewStorageVolume - This is a vendor agnostic task under Storage device
     * category for creating a new volume.
     */
    name?: pulumi.Input<string>;
    /**
     * The version of the task definition so we can support multiple versions of a task definition.
     */
    nrVersion?: pulumi.Input<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionPermissionResource>[]>;
    /**
     * Type to capture all the properties for the task definition.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionProperty>[]>;
    rollbackTasks?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionRollbackTask>[]>;
    /**
     * If set to true, the task requires access to secure properties and uses an encryption token associated with a workflow
     * moid to encrypt or decrypt the secure properties.
     */
    securePropAccess?: pulumi.Input<boolean>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionTag>[]>;
    /**
     * A reference to a workflowTaskMetadata resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    taskMetadatas?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionTaskMetadata>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionVersionContext>[]>;
}

/**
 * The set of arguments for constructing a WorkflowTaskDefinition resource.
 */
export interface WorkflowTaskDefinitionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionAncestor>[]>;
    /**
     * A reference to a workflowCatalog resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    catalogs?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionCatalog>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a workflowTaskDefinition resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    clonedFroms?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionClonedFrom>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * When true this will be the task version that is used when a specific task definition version is not specified. The very
     * first task definition created with a name will be set as the default version, after that user can explicitly set any
     * version of the task definition as the default version.
     */
    defaultVersion?: pulumi.Input<boolean>;
    /**
     * A user friendly description about task on what operations are done as part of the task execution and any other specific
     * information about task input and output.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * An array of relationships to workflowTaskDefinition resources.
     */
    implementedTasks?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionImplementedTask>[]>;
    /**
     * A reference to a workflowTaskDefinition resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    interfaceTasks?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionInterfaceTask>[]>;
    /**
     * Type to capture all the internal properties for the task definition.
     */
    internalProperties?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionInternalProperty>[]>;
    /**
     * A user friendly short name to identify the task definition. Label can only contain letters (a-z, A-Z), numbers (0-9),
     * hyphen (-), period (.), colon (:), space ( ), single quote ('), forward slash (/), or an underscore (_) and must be at
     * least 2 characters.
     */
    label?: pulumi.Input<string>;
    /**
     * License entitlement required to run this task. It is determined by license requirement of features. * `Base` - Base as a
     * License type. It is default license type. * `Essential` - Essential as a License type. * `Standard` - Standard as a
     * License type. * `Advantage` - Advantage as a License type. * `Premier` - Premier as a License type. * `IWO-Essential` -
     * IWO-Essential as a License type. * `IWO-Advantage` - IWO-Advantage as a License type. * `IWO-Premier` - IWO-Premier as a
     * License type. * `IKS-Advantage` - IKS-Advantage as a License type. * `INC-Premier-1GFixed` - Premier 1G Fixed license
     * tier for Intersight Nexus Cloud. * `INC-Premier-10GFixed` - Premier 10G Fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-100GFixed` - Premier 100G Fixed license tier for Intersight Nexus Cloud. * `INC-Premier-Mod4Slot` - Premier
     * Modular 4 slot license tier for Intersight Nexus Cloud. * `INC-Premier-Mod8Slot` - Premier Modular 8 slot license tier
     * for Intersight Nexus Cloud. * `INC-Premier-D2OpsFixed` - Premier D2Ops fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-D2OpsMod` - Premier D2Ops modular license tier for Intersight Nexus Cloud. *
     * `INC-Premier-CentralizedMod8Slot` - Premier modular license tier of switch type CentralizedMod8Slot for Intersight Nexus
     * Cloud. * `INC-Premier-DistributedMod8Slot` - Premier modular license tier of switch type DistributedMod8Slot for
     * Intersight Nexus Cloud. * `IntersightTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial
     * mode Intersight tiers. * `IWOTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode
     * IKS tiers. * `IKSTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode IWO tiers. *
     * `INCTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode Nexus tiers.
     */
    licenseEntitlement?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the task definition. The name should follow this convention <Verb or Action><Category><Vendor><Product><Noun
     * or object> Verb or Action is a required portion of the name and this must be part of the pre-approved verb list.
     * Category is an optional field and this will refer to the broad category of the task referring to the type of resource or
     * endpoint. If there is no specific category then use "Generic" if required. Vendor is an optional field and this will
     * refer to the specific vendor this task applies to. If the task is generic and not tied to a vendor, then do not specify
     * anything. Product is an optional field, this will contain the vendor product and model when desired. Noun or object is a
     * required field and this will contain the noun or object on which the action is being performed. Name can only contain
     * letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.), colon (:), or an underscore (_). Examples SendEmail - This is
     * a task in Generic category for sending email. NewStorageVolume - This is a vendor agnostic task under Storage device
     * category for creating a new volume.
     */
    name?: pulumi.Input<string>;
    /**
     * The version of the task definition so we can support multiple versions of a task definition.
     */
    nrVersion?: pulumi.Input<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionPermissionResource>[]>;
    /**
     * Type to capture all the properties for the task definition.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionProperty>[]>;
    rollbackTasks?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionRollbackTask>[]>;
    /**
     * If set to true, the task requires access to secure properties and uses an encryption token associated with a workflow
     * moid to encrypt or decrypt the secure properties.
     */
    securePropAccess?: pulumi.Input<boolean>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionTag>[]>;
    /**
     * A reference to a workflowTaskMetadata resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    taskMetadatas?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionTaskMetadata>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.WorkflowTaskDefinitionVersionContext>[]>;
}
