// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirmwareUpgradeImpact extends pulumi.CustomResource {
    /**
     * Get an existing FirmwareUpgradeImpact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirmwareUpgradeImpactState, opts?: pulumi.CustomResourceOptions): FirmwareUpgradeImpact {
        return new FirmwareUpgradeImpact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/firmwareUpgradeImpact:FirmwareUpgradeImpact';

    /**
     * Returns true if the given object is an instance of FirmwareUpgradeImpact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirmwareUpgradeImpact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirmwareUpgradeImpact.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.FirmwareUpgradeImpactAncestor[]>;
    /**
     * An array of relationships to equipmentChassis resources.
     */
    public readonly chassis!: pulumi.Output<outputs.FirmwareUpgradeImpactChassis[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    public readonly components!: pulumi.Output<string[]>;
    /**
     * Captures the status of an upgrade impact calculation. Indicates whether the calculation is complete, in progress or the
     * calculation is impossible due to the absence of the target image on the endpoint. * `Inprogress` - Upgrade impact
     * calculation is in progress. * `Completed` - Upgrade impact calculation is completed. * `Unavailable` - Upgrade impact is
     * not available since image is not present in FI.
     */
    public readonly computationState!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * An array of relationships to assetDeviceRegistration resources.
     */
    public readonly devices!: pulumi.Output<outputs.FirmwareUpgradeImpactDevice[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly distributables!: pulumi.Output<outputs.FirmwareUpgradeImpactDistributable[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    public readonly excludeComponents!: pulumi.Output<string[]>;
    public readonly impacts!: pulumi.Output<outputs.FirmwareUpgradeImpactImpact[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * An array of relationships to networkElement resources.
     */
    public readonly networkElements!: pulumi.Output<outputs.FirmwareUpgradeImpactNetworkElement[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.FirmwareUpgradeImpactParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.FirmwareUpgradeImpactPermissionResource[]>;
    /**
     * A reference to a softwarerepositoryRelease resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly releases!: pulumi.Output<outputs.FirmwareUpgradeImpactRelease[]>;
    /**
     * An array of relationships to computePhysical resources.
     */
    public readonly servers!: pulumi.Output<outputs.FirmwareUpgradeImpactServer[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * The summary on the component or components getting impacted by the upgrade. * `Basic` - Summary of a single instance
     * involved in the upgrade operation. * `Detail` - Summary of the collection of single instances for a complex component
     * involved in the upgrade operation. For example, in case of a server upgrade, a detailed summary indicates impact of all
     * the single instances which are part of the server, such as storage controller, drives, and BIOS.
     */
    public readonly summary!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.FirmwareUpgradeImpactTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.FirmwareUpgradeImpactVersionContext[]>;

    /**
     * Create a FirmwareUpgradeImpact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirmwareUpgradeImpactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirmwareUpgradeImpactArgs | FirmwareUpgradeImpactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirmwareUpgradeImpactState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["chassis"] = state ? state.chassis : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["components"] = state ? state.components : undefined;
            resourceInputs["computationState"] = state ? state.computationState : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["devices"] = state ? state.devices : undefined;
            resourceInputs["distributables"] = state ? state.distributables : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["excludeComponents"] = state ? state.excludeComponents : undefined;
            resourceInputs["impacts"] = state ? state.impacts : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["networkElements"] = state ? state.networkElements : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["releases"] = state ? state.releases : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["summary"] = state ? state.summary : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as FirmwareUpgradeImpactArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["chassis"] = args ? args.chassis : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["computationState"] = args ? args.computationState : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["devices"] = args ? args.devices : undefined;
            resourceInputs["distributables"] = args ? args.distributables : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["excludeComponents"] = args ? args.excludeComponents : undefined;
            resourceInputs["impacts"] = args ? args.impacts : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["networkElements"] = args ? args.networkElements : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["releases"] = args ? args.releases : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["summary"] = args ? args.summary : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirmwareUpgradeImpact.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirmwareUpgradeImpact resources.
 */
export interface FirmwareUpgradeImpactState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactAncestor>[]>;
    /**
     * An array of relationships to equipmentChassis resources.
     */
    chassis?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactChassis>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    components?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Captures the status of an upgrade impact calculation. Indicates whether the calculation is complete, in progress or the
     * calculation is impossible due to the absence of the target image on the endpoint. * `Inprogress` - Upgrade impact
     * calculation is in progress. * `Completed` - Upgrade impact calculation is completed. * `Unavailable` - Upgrade impact is
     * not available since image is not present in FI.
     */
    computationState?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An array of relationships to assetDeviceRegistration resources.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactDevice>[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    distributables?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactDistributable>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    excludeComponents?: pulumi.Input<pulumi.Input<string>[]>;
    impacts?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactImpact>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * An array of relationships to networkElement resources.
     */
    networkElements?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactNetworkElement>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactPermissionResource>[]>;
    /**
     * A reference to a softwarerepositoryRelease resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    releases?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactRelease>[]>;
    /**
     * An array of relationships to computePhysical resources.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactServer>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * The summary on the component or components getting impacted by the upgrade. * `Basic` - Summary of a single instance
     * involved in the upgrade operation. * `Detail` - Summary of the collection of single instances for a complex component
     * involved in the upgrade operation. For example, in case of a server upgrade, a detailed summary indicates impact of all
     * the single instances which are part of the server, such as storage controller, drives, and BIOS.
     */
    summary?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactVersionContext>[]>;
}

/**
 * The set of arguments for constructing a FirmwareUpgradeImpact resource.
 */
export interface FirmwareUpgradeImpactArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactAncestor>[]>;
    /**
     * An array of relationships to equipmentChassis resources.
     */
    chassis?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactChassis>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    components?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Captures the status of an upgrade impact calculation. Indicates whether the calculation is complete, in progress or the
     * calculation is impossible due to the absence of the target image on the endpoint. * `Inprogress` - Upgrade impact
     * calculation is in progress. * `Completed` - Upgrade impact calculation is completed. * `Unavailable` - Upgrade impact is
     * not available since image is not present in FI.
     */
    computationState?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An array of relationships to assetDeviceRegistration resources.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactDevice>[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    distributables?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactDistributable>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    excludeComponents?: pulumi.Input<pulumi.Input<string>[]>;
    impacts?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactImpact>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * An array of relationships to networkElement resources.
     */
    networkElements?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactNetworkElement>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactPermissionResource>[]>;
    /**
     * A reference to a softwarerepositoryRelease resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    releases?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactRelease>[]>;
    /**
     * An array of relationships to computePhysical resources.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactServer>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * The summary on the component or components getting impacted by the upgrade. * `Basic` - Summary of a single instance
     * involved in the upgrade operation. * `Detail` - Summary of the collection of single instances for a complex component
     * involved in the upgrade operation. For example, in case of a server upgrade, a detailed summary indicates impact of all
     * the single instances which are part of the server, such as storage controller, drives, and BIOS.
     */
    summary?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FirmwareUpgradeImpactVersionContext>[]>;
}
