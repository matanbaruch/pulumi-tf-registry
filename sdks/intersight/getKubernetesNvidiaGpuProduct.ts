// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesNvidiaGpuProduct(args?: GetKubernetesNvidiaGpuProductArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesNvidiaGpuProductResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKubernetesNvidiaGpuProduct:getKubernetesNvidiaGpuProduct", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "deviceId": args.deviceId,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "memorySize": args.memorySize,
        "migCapable": args.migCapable,
        "migProfiles": args.migProfiles,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "vendorId": args.vendorId,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesNvidiaGpuProduct.
 */
export interface GetKubernetesNvidiaGpuProductArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetKubernetesNvidiaGpuProductAncestor[];
    catalog?: inputs.GetKubernetesNvidiaGpuProductCatalog;
    classId?: string;
    createTime?: string;
    description?: string;
    deviceId?: number;
    domainGroupMoid?: string;
    id?: string;
    memorySize?: number;
    migCapable?: boolean;
    migProfiles?: string[];
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetKubernetesNvidiaGpuProductParent;
    permissionResources?: inputs.GetKubernetesNvidiaGpuProductPermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetKubernetesNvidiaGpuProductTag[];
    vendorId?: number;
    versionContext?: inputs.GetKubernetesNvidiaGpuProductVersionContext;
}

/**
 * A collection of values returned by getKubernetesNvidiaGpuProduct.
 */
export interface GetKubernetesNvidiaGpuProductResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKubernetesNvidiaGpuProductAncestor[];
    readonly catalog?: outputs.GetKubernetesNvidiaGpuProductCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly deviceId?: number;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly memorySize?: number;
    readonly migCapable?: boolean;
    readonly migProfiles?: string[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetKubernetesNvidiaGpuProductParent;
    readonly permissionResources?: outputs.GetKubernetesNvidiaGpuProductPermissionResource[];
    readonly results: outputs.GetKubernetesNvidiaGpuProductResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetKubernetesNvidiaGpuProductTag[];
    readonly vendorId?: number;
    readonly versionContext?: outputs.GetKubernetesNvidiaGpuProductVersionContext;
}
export function getKubernetesNvidiaGpuProductOutput(args?: GetKubernetesNvidiaGpuProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesNvidiaGpuProductResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesNvidiaGpuProduct(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesNvidiaGpuProduct.
 */
export interface GetKubernetesNvidiaGpuProductOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKubernetesNvidiaGpuProductAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetKubernetesNvidiaGpuProductCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<number>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    memorySize?: pulumi.Input<number>;
    migCapable?: pulumi.Input<boolean>;
    migProfiles?: pulumi.Input<pulumi.Input<string>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKubernetesNvidiaGpuProductParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKubernetesNvidiaGpuProductPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKubernetesNvidiaGpuProductTagArgs>[]>;
    vendorId?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetKubernetesNvidiaGpuProductVersionContextArgs>;
}
