// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKvmSession(args?: GetKvmSessionArgs, opts?: pulumi.InvokeOptions): Promise<GetKvmSessionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKvmSession:getKvmSession", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clientIpAddress": args.clientIpAddress,
        "createTime": args.createTime,
        "device": args.device,
        "domainGroupMoid": args.domainGroupMoid,
        "endTime": args.endTime,
        "id": args.id,
        "kvmLaunchUrlPath": args.kvmLaunchUrlPath,
        "kvmSessionId": args.kvmSessionId,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "oneTimePassword": args.oneTimePassword,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "role": args.role,
        "server": args.server,
        "session": args.session,
        "sharedScope": args.sharedScope,
        "ssoSupported": args.ssoSupported,
        "status": args.status,
        "tags": args.tags,
        "target": args.target,
        "targetName": args.targetName,
        "tunnel": args.tunnel,
        "user": args.user,
        "userIdOrEmail": args.userIdOrEmail,
        "username": args.username,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKvmSession.
 */
export interface GetKvmSessionArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetKvmSessionAncestor[];
    classId?: string;
    clientIpAddress?: string;
    createTime?: string;
    device?: inputs.GetKvmSessionDevice;
    domainGroupMoid?: string;
    endTime?: string;
    id?: string;
    kvmLaunchUrlPath?: string;
    kvmSessionId?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    oneTimePassword?: string;
    owners?: string[];
    parent?: inputs.GetKvmSessionParent;
    permissionResources?: inputs.GetKvmSessionPermissionResource[];
    role?: string;
    server?: inputs.GetKvmSessionServer;
    session?: inputs.GetKvmSessionSession;
    sharedScope?: string;
    ssoSupported?: boolean;
    status?: string;
    tags?: inputs.GetKvmSessionTag[];
    target?: inputs.GetKvmSessionTarget;
    targetName?: string;
    tunnel?: inputs.GetKvmSessionTunnel;
    user?: inputs.GetKvmSessionUser;
    userIdOrEmail?: string;
    username?: string;
    versionContext?: inputs.GetKvmSessionVersionContext;
}

/**
 * A collection of values returned by getKvmSession.
 */
export interface GetKvmSessionResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKvmSessionAncestor[];
    readonly classId?: string;
    readonly clientIpAddress?: string;
    readonly createTime?: string;
    readonly device?: outputs.GetKvmSessionDevice;
    readonly domainGroupMoid?: string;
    readonly endTime?: string;
    readonly id: string;
    readonly kvmLaunchUrlPath?: string;
    readonly kvmSessionId?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly oneTimePassword?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetKvmSessionParent;
    readonly permissionResources?: outputs.GetKvmSessionPermissionResource[];
    readonly results: outputs.GetKvmSessionResult[];
    readonly role?: string;
    readonly server?: outputs.GetKvmSessionServer;
    readonly session?: outputs.GetKvmSessionSession;
    readonly sharedScope?: string;
    readonly ssoSupported?: boolean;
    readonly status?: string;
    readonly tags?: outputs.GetKvmSessionTag[];
    readonly target?: outputs.GetKvmSessionTarget;
    readonly targetName?: string;
    readonly tunnel?: outputs.GetKvmSessionTunnel;
    readonly user?: outputs.GetKvmSessionUser;
    readonly userIdOrEmail?: string;
    readonly username?: string;
    readonly versionContext?: outputs.GetKvmSessionVersionContext;
}
export function getKvmSessionOutput(args?: GetKvmSessionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKvmSessionResult> {
    return pulumi.output(args).apply((a: any) => getKvmSession(a, opts))
}

/**
 * A collection of arguments for invoking getKvmSession.
 */
export interface GetKvmSessionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKvmSessionAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clientIpAddress?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    device?: pulumi.Input<inputs.GetKvmSessionDeviceArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    kvmLaunchUrlPath?: pulumi.Input<string>;
    kvmSessionId?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    oneTimePassword?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKvmSessionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKvmSessionPermissionResourceArgs>[]>;
    role?: pulumi.Input<string>;
    server?: pulumi.Input<inputs.GetKvmSessionServerArgs>;
    session?: pulumi.Input<inputs.GetKvmSessionSessionArgs>;
    sharedScope?: pulumi.Input<string>;
    ssoSupported?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKvmSessionTagArgs>[]>;
    target?: pulumi.Input<inputs.GetKvmSessionTargetArgs>;
    targetName?: pulumi.Input<string>;
    tunnel?: pulumi.Input<inputs.GetKvmSessionTunnelArgs>;
    user?: pulumi.Input<inputs.GetKvmSessionUserArgs>;
    userIdOrEmail?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetKvmSessionVersionContextArgs>;
}
