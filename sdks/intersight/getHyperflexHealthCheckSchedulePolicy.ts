// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexHealthCheckSchedulePolicy(args?: GetHyperflexHealthCheckSchedulePolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexHealthCheckSchedulePolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexHealthCheckSchedulePolicy:getHyperflexHealthCheckSchedulePolicy", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "lastScheduledOn": args.lastScheduledOn,
        "lastUnscheduledOn": args.lastUnscheduledOn,
        "modTime": args.modTime,
        "moid": args.moid,
        "nextExpectedExecution": args.nextExpectedExecution,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyEnabled": args.policyEnabled,
        "registeredDevice": args.registeredDevice,
        "scheduleInterval": args.scheduleInterval,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexHealthCheckSchedulePolicy.
 */
export interface GetHyperflexHealthCheckSchedulePolicyArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexHealthCheckSchedulePolicyAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    lastScheduledOn?: string;
    lastUnscheduledOn?: string;
    modTime?: string;
    moid?: string;
    nextExpectedExecution?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexHealthCheckSchedulePolicyParent;
    permissionResources?: inputs.GetHyperflexHealthCheckSchedulePolicyPermissionResource[];
    policyEnabled?: boolean;
    registeredDevice?: inputs.GetHyperflexHealthCheckSchedulePolicyRegisteredDevice;
    scheduleInterval?: number;
    sharedScope?: string;
    tags?: inputs.GetHyperflexHealthCheckSchedulePolicyTag[];
    uuid?: string;
    versionContext?: inputs.GetHyperflexHealthCheckSchedulePolicyVersionContext;
}

/**
 * A collection of values returned by getHyperflexHealthCheckSchedulePolicy.
 */
export interface GetHyperflexHealthCheckSchedulePolicyResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexHealthCheckSchedulePolicyAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly lastScheduledOn?: string;
    readonly lastUnscheduledOn?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nextExpectedExecution?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexHealthCheckSchedulePolicyParent;
    readonly permissionResources?: outputs.GetHyperflexHealthCheckSchedulePolicyPermissionResource[];
    readonly policyEnabled?: boolean;
    readonly registeredDevice?: outputs.GetHyperflexHealthCheckSchedulePolicyRegisteredDevice;
    readonly results: outputs.GetHyperflexHealthCheckSchedulePolicyResult[];
    readonly scheduleInterval?: number;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexHealthCheckSchedulePolicyTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexHealthCheckSchedulePolicyVersionContext;
}
export function getHyperflexHealthCheckSchedulePolicyOutput(args?: GetHyperflexHealthCheckSchedulePolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexHealthCheckSchedulePolicyResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexHealthCheckSchedulePolicy(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexHealthCheckSchedulePolicy.
 */
export interface GetHyperflexHealthCheckSchedulePolicyOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckSchedulePolicyAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lastScheduledOn?: pulumi.Input<string>;
    lastUnscheduledOn?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nextExpectedExecution?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexHealthCheckSchedulePolicyParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckSchedulePolicyPermissionResourceArgs>[]>;
    policyEnabled?: pulumi.Input<boolean>;
    registeredDevice?: pulumi.Input<inputs.GetHyperflexHealthCheckSchedulePolicyRegisteredDeviceArgs>;
    scheduleInterval?: pulumi.Input<number>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckSchedulePolicyTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexHealthCheckSchedulePolicyVersionContextArgs>;
}
