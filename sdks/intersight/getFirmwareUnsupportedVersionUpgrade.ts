// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirmwareUnsupportedVersionUpgrade(args?: GetFirmwareUnsupportedVersionUpgradeArgs, opts?: pulumi.InvokeOptions): Promise<GetFirmwareUnsupportedVersionUpgradeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFirmwareUnsupportedVersionUpgrade:getFirmwareUnsupportedVersionUpgrade", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "checksum": args.checksum,
        "classId": args.classId,
        "createTime": args.createTime,
        "device": args.device,
        "distributable": args.distributable,
        "domainGroupMoid": args.domainGroupMoid,
        "downloadError": args.downloadError,
        "downloadProgress": args.downloadProgress,
        "downloadRetries": args.downloadRetries,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "physicalIdentity": args.physicalIdentity,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "upgradeStatus": args.upgradeStatus,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirmwareUnsupportedVersionUpgrade.
 */
export interface GetFirmwareUnsupportedVersionUpgradeArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetFirmwareUnsupportedVersionUpgradeAncestor[];
    checksum?: inputs.GetFirmwareUnsupportedVersionUpgradeChecksum;
    classId?: string;
    createTime?: string;
    device?: inputs.GetFirmwareUnsupportedVersionUpgradeDevice;
    distributable?: inputs.GetFirmwareUnsupportedVersionUpgradeDistributable;
    domainGroupMoid?: string;
    downloadError?: string;
    downloadProgress?: number;
    downloadRetries?: number;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFirmwareUnsupportedVersionUpgradeParent;
    permissionResources?: inputs.GetFirmwareUnsupportedVersionUpgradePermissionResource[];
    physicalIdentity?: inputs.GetFirmwareUnsupportedVersionUpgradePhysicalIdentity;
    sharedScope?: string;
    tags?: inputs.GetFirmwareUnsupportedVersionUpgradeTag[];
    upgradeStatus?: string;
    versionContext?: inputs.GetFirmwareUnsupportedVersionUpgradeVersionContext;
}

/**
 * A collection of values returned by getFirmwareUnsupportedVersionUpgrade.
 */
export interface GetFirmwareUnsupportedVersionUpgradeResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFirmwareUnsupportedVersionUpgradeAncestor[];
    readonly checksum?: outputs.GetFirmwareUnsupportedVersionUpgradeChecksum;
    readonly classId?: string;
    readonly createTime?: string;
    readonly device?: outputs.GetFirmwareUnsupportedVersionUpgradeDevice;
    readonly distributable?: outputs.GetFirmwareUnsupportedVersionUpgradeDistributable;
    readonly domainGroupMoid?: string;
    readonly downloadError?: string;
    readonly downloadProgress?: number;
    readonly downloadRetries?: number;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFirmwareUnsupportedVersionUpgradeParent;
    readonly permissionResources?: outputs.GetFirmwareUnsupportedVersionUpgradePermissionResource[];
    readonly physicalIdentity?: outputs.GetFirmwareUnsupportedVersionUpgradePhysicalIdentity;
    readonly results: outputs.GetFirmwareUnsupportedVersionUpgradeResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetFirmwareUnsupportedVersionUpgradeTag[];
    readonly upgradeStatus?: string;
    readonly versionContext?: outputs.GetFirmwareUnsupportedVersionUpgradeVersionContext;
}
export function getFirmwareUnsupportedVersionUpgradeOutput(args?: GetFirmwareUnsupportedVersionUpgradeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirmwareUnsupportedVersionUpgradeResult> {
    return pulumi.output(args).apply((a: any) => getFirmwareUnsupportedVersionUpgrade(a, opts))
}

/**
 * A collection of arguments for invoking getFirmwareUnsupportedVersionUpgrade.
 */
export interface GetFirmwareUnsupportedVersionUpgradeOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeAncestorArgs>[]>;
    checksum?: pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeChecksumArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    device?: pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeDeviceArgs>;
    distributable?: pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeDistributableArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    downloadError?: pulumi.Input<string>;
    downloadProgress?: pulumi.Input<number>;
    downloadRetries?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradePermissionResourceArgs>[]>;
    physicalIdentity?: pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradePhysicalIdentityArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeTagArgs>[]>;
    upgradeStatus?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetFirmwareUnsupportedVersionUpgradeVersionContextArgs>;
}
