// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVnicVnicTemplate(args?: GetVnicVnicTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetVnicVnicTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getVnicVnicTemplate:getVnicVnicTemplate", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "cdn": args.cdn,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "enableOverride": args.enableOverride,
        "ethAdapterPolicy": args.ethAdapterPolicy,
        "ethNetworkPolicy": args.ethNetworkPolicy,
        "ethQosPolicy": args.ethQosPolicy,
        "fabricEthNetworkControlPolicy": args.fabricEthNetworkControlPolicy,
        "fabricEthNetworkGroupPolicies": args.fabricEthNetworkGroupPolicies,
        "failoverEnabled": args.failoverEnabled,
        "id": args.id,
        "iscsiBootPolicy": args.iscsiBootPolicy,
        "lcpUsageCount": args.lcpUsageCount,
        "macPool": args.macPool,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "peerVnicName": args.peerVnicName,
        "permissionResources": args.permissionResources,
        "pinGroupName": args.pinGroupName,
        "sharedScope": args.sharedScope,
        "sriovSettings": args.sriovSettings,
        "switchId": args.switchId,
        "tags": args.tags,
        "templateActions": args.templateActions,
        "usageCount": args.usageCount,
        "usnicSettings": args.usnicSettings,
        "versionContext": args.versionContext,
        "vmqSettings": args.vmqSettings,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVnicVnicTemplate.
 */
export interface GetVnicVnicTemplateArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetVnicVnicTemplateAncestor[];
    cdn?: inputs.GetVnicVnicTemplateCdn;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    enableOverride?: boolean;
    ethAdapterPolicy?: inputs.GetVnicVnicTemplateEthAdapterPolicy;
    ethNetworkPolicy?: inputs.GetVnicVnicTemplateEthNetworkPolicy;
    ethQosPolicy?: inputs.GetVnicVnicTemplateEthQosPolicy;
    fabricEthNetworkControlPolicy?: inputs.GetVnicVnicTemplateFabricEthNetworkControlPolicy;
    fabricEthNetworkGroupPolicies?: inputs.GetVnicVnicTemplateFabricEthNetworkGroupPolicy[];
    failoverEnabled?: boolean;
    id?: string;
    iscsiBootPolicy?: inputs.GetVnicVnicTemplateIscsiBootPolicy;
    lcpUsageCount?: number;
    macPool?: inputs.GetVnicVnicTemplateMacPool;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetVnicVnicTemplateOrganization;
    owners?: string[];
    parent?: inputs.GetVnicVnicTemplateParent;
    peerVnicName?: string;
    permissionResources?: inputs.GetVnicVnicTemplatePermissionResource[];
    pinGroupName?: string;
    sharedScope?: string;
    sriovSettings?: inputs.GetVnicVnicTemplateSriovSettings;
    switchId?: string;
    tags?: inputs.GetVnicVnicTemplateTag[];
    templateActions?: inputs.GetVnicVnicTemplateTemplateAction[];
    usageCount?: number;
    usnicSettings?: inputs.GetVnicVnicTemplateUsnicSettings;
    versionContext?: inputs.GetVnicVnicTemplateVersionContext;
    vmqSettings?: inputs.GetVnicVnicTemplateVmqSettings;
}

/**
 * A collection of values returned by getVnicVnicTemplate.
 */
export interface GetVnicVnicTemplateResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetVnicVnicTemplateAncestor[];
    readonly cdn?: outputs.GetVnicVnicTemplateCdn;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly enableOverride?: boolean;
    readonly ethAdapterPolicy?: outputs.GetVnicVnicTemplateEthAdapterPolicy;
    readonly ethNetworkPolicy?: outputs.GetVnicVnicTemplateEthNetworkPolicy;
    readonly ethQosPolicy?: outputs.GetVnicVnicTemplateEthQosPolicy;
    readonly fabricEthNetworkControlPolicy?: outputs.GetVnicVnicTemplateFabricEthNetworkControlPolicy;
    readonly fabricEthNetworkGroupPolicies?: outputs.GetVnicVnicTemplateFabricEthNetworkGroupPolicy[];
    readonly failoverEnabled?: boolean;
    readonly id: string;
    readonly iscsiBootPolicy?: outputs.GetVnicVnicTemplateIscsiBootPolicy;
    readonly lcpUsageCount?: number;
    readonly macPool?: outputs.GetVnicVnicTemplateMacPool;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetVnicVnicTemplateOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetVnicVnicTemplateParent;
    readonly peerVnicName?: string;
    readonly permissionResources?: outputs.GetVnicVnicTemplatePermissionResource[];
    readonly pinGroupName?: string;
    readonly results: outputs.GetVnicVnicTemplateResult[];
    readonly sharedScope?: string;
    readonly sriovSettings?: outputs.GetVnicVnicTemplateSriovSettings;
    readonly switchId?: string;
    readonly tags?: outputs.GetVnicVnicTemplateTag[];
    readonly templateActions?: outputs.GetVnicVnicTemplateTemplateAction[];
    readonly usageCount?: number;
    readonly usnicSettings?: outputs.GetVnicVnicTemplateUsnicSettings;
    readonly versionContext?: outputs.GetVnicVnicTemplateVersionContext;
    readonly vmqSettings?: outputs.GetVnicVnicTemplateVmqSettings;
}
export function getVnicVnicTemplateOutput(args?: GetVnicVnicTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVnicVnicTemplateResult> {
    return pulumi.output(args).apply((a: any) => getVnicVnicTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getVnicVnicTemplate.
 */
export interface GetVnicVnicTemplateOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetVnicVnicTemplateAncestorArgs>[]>;
    cdn?: pulumi.Input<inputs.GetVnicVnicTemplateCdnArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    enableOverride?: pulumi.Input<boolean>;
    ethAdapterPolicy?: pulumi.Input<inputs.GetVnicVnicTemplateEthAdapterPolicyArgs>;
    ethNetworkPolicy?: pulumi.Input<inputs.GetVnicVnicTemplateEthNetworkPolicyArgs>;
    ethQosPolicy?: pulumi.Input<inputs.GetVnicVnicTemplateEthQosPolicyArgs>;
    fabricEthNetworkControlPolicy?: pulumi.Input<inputs.GetVnicVnicTemplateFabricEthNetworkControlPolicyArgs>;
    fabricEthNetworkGroupPolicies?: pulumi.Input<pulumi.Input<inputs.GetVnicVnicTemplateFabricEthNetworkGroupPolicyArgs>[]>;
    failoverEnabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    iscsiBootPolicy?: pulumi.Input<inputs.GetVnicVnicTemplateIscsiBootPolicyArgs>;
    lcpUsageCount?: pulumi.Input<number>;
    macPool?: pulumi.Input<inputs.GetVnicVnicTemplateMacPoolArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetVnicVnicTemplateOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetVnicVnicTemplateParentArgs>;
    peerVnicName?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetVnicVnicTemplatePermissionResourceArgs>[]>;
    pinGroupName?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    sriovSettings?: pulumi.Input<inputs.GetVnicVnicTemplateSriovSettingsArgs>;
    switchId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetVnicVnicTemplateTagArgs>[]>;
    templateActions?: pulumi.Input<pulumi.Input<inputs.GetVnicVnicTemplateTemplateActionArgs>[]>;
    usageCount?: pulumi.Input<number>;
    usnicSettings?: pulumi.Input<inputs.GetVnicVnicTemplateUsnicSettingsArgs>;
    versionContext?: pulumi.Input<inputs.GetVnicVnicTemplateVersionContextArgs>;
    vmqSettings?: pulumi.Input<inputs.GetVnicVnicTemplateVmqSettingsArgs>;
}
