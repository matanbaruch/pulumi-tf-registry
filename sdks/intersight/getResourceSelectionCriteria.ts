// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResourceSelectionCriteria(args?: GetResourceSelectionCriteriaArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceSelectionCriteriaResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getResourceSelectionCriteria:getResourceSelectionCriteria", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "placeHolders": args.placeHolders,
        "selectors": args.selectors,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourceSelectionCriteria.
 */
export interface GetResourceSelectionCriteriaArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetResourceSelectionCriteriaAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetResourceSelectionCriteriaOrganization;
    owners?: string[];
    parent?: inputs.GetResourceSelectionCriteriaParent;
    permissionResources?: inputs.GetResourceSelectionCriteriaPermissionResource[];
    placeHolders?: string[];
    selectors?: inputs.GetResourceSelectionCriteriaSelector[];
    sharedScope?: string;
    tags?: inputs.GetResourceSelectionCriteriaTag[];
    versionContext?: inputs.GetResourceSelectionCriteriaVersionContext;
}

/**
 * A collection of values returned by getResourceSelectionCriteria.
 */
export interface GetResourceSelectionCriteriaResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetResourceSelectionCriteriaAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetResourceSelectionCriteriaOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetResourceSelectionCriteriaParent;
    readonly permissionResources?: outputs.GetResourceSelectionCriteriaPermissionResource[];
    readonly placeHolders?: string[];
    readonly results: outputs.GetResourceSelectionCriteriaResult[];
    readonly selectors?: outputs.GetResourceSelectionCriteriaSelector[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetResourceSelectionCriteriaTag[];
    readonly versionContext?: outputs.GetResourceSelectionCriteriaVersionContext;
}
export function getResourceSelectionCriteriaOutput(args?: GetResourceSelectionCriteriaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourceSelectionCriteriaResult> {
    return pulumi.output(args).apply((a: any) => getResourceSelectionCriteria(a, opts))
}

/**
 * A collection of arguments for invoking getResourceSelectionCriteria.
 */
export interface GetResourceSelectionCriteriaOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetResourceSelectionCriteriaAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetResourceSelectionCriteriaOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetResourceSelectionCriteriaParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetResourceSelectionCriteriaPermissionResourceArgs>[]>;
    placeHolders?: pulumi.Input<pulumi.Input<string>[]>;
    selectors?: pulumi.Input<pulumi.Input<inputs.GetResourceSelectionCriteriaSelectorArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetResourceSelectionCriteriaTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetResourceSelectionCriteriaVersionContextArgs>;
}
