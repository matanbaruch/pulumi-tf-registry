// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexTarget(args?: GetHyperflexTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexTargetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexTarget:getHyperflexTarget", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "authMethod": args.authMethod,
        "classId": args.classId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "initiatorGroupUuids": args.initiatorGroupUuids,
        "initiatorGroups": args.initiatorGroups,
        "inventorySource": args.inventorySource,
        "iqn": args.iqn,
        "lunUuids": args.lunUuids,
        "luns": args.luns,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrVersion": args.nrVersion,
        "numActiveInitiators": args.numActiveInitiators,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexTarget.
 */
export interface GetHyperflexTargetArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexTargetAncestor[];
    authMethod?: string;
    classId?: string;
    cluster?: inputs.GetHyperflexTargetCluster;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    initiatorGroupUuids?: string[];
    initiatorGroups?: inputs.GetHyperflexTargetInitiatorGroup[];
    inventorySource?: string;
    iqn?: string;
    lunUuids?: string[];
    luns?: inputs.GetHyperflexTargetLun[];
    modTime?: string;
    moid?: string;
    name?: string;
    nrVersion?: number;
    numActiveInitiators?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexTargetParent;
    permissionResources?: inputs.GetHyperflexTargetPermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetHyperflexTargetTag[];
    uuid?: string;
    versionContext?: inputs.GetHyperflexTargetVersionContext;
}

/**
 * A collection of values returned by getHyperflexTarget.
 */
export interface GetHyperflexTargetResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexTargetAncestor[];
    readonly authMethod?: string;
    readonly classId?: string;
    readonly cluster?: outputs.GetHyperflexTargetCluster;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly initiatorGroupUuids?: string[];
    readonly initiatorGroups?: outputs.GetHyperflexTargetInitiatorGroup[];
    readonly inventorySource?: string;
    readonly iqn?: string;
    readonly lunUuids?: string[];
    readonly luns?: outputs.GetHyperflexTargetLun[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrVersion?: number;
    readonly numActiveInitiators?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexTargetParent;
    readonly permissionResources?: outputs.GetHyperflexTargetPermissionResource[];
    readonly results: outputs.GetHyperflexTargetResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexTargetTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexTargetVersionContext;
}
export function getHyperflexTargetOutput(args?: GetHyperflexTargetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexTargetResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexTarget(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexTarget.
 */
export interface GetHyperflexTargetOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexTargetAncestorArgs>[]>;
    authMethod?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexTargetClusterArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    initiatorGroupUuids?: pulumi.Input<pulumi.Input<string>[]>;
    initiatorGroups?: pulumi.Input<pulumi.Input<inputs.GetHyperflexTargetInitiatorGroupArgs>[]>;
    inventorySource?: pulumi.Input<string>;
    iqn?: pulumi.Input<string>;
    lunUuids?: pulumi.Input<pulumi.Input<string>[]>;
    luns?: pulumi.Input<pulumi.Input<inputs.GetHyperflexTargetLunArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<number>;
    numActiveInitiators?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexTargetParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexTargetPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexTargetTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexTargetVersionContextArgs>;
}
