// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOpenapiTaskGenerationRequest(args?: GetOpenapiTaskGenerationRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetOpenapiTaskGenerationRequestResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getOpenapiTaskGenerationRequest:getOpenapiTaskGenerationRequest", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "endpointType": args.endpointType,
        "failedTasks": args.failedTasks,
        "headerParameters": args.headerParameters,
        "id": args.id,
        "isValidateRequest": args.isValidateRequest,
        "modTime": args.modTime,
        "moid": args.moid,
        "nrSource": args.nrSource,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "protocol": args.protocol,
        "queryParameters": args.queryParameters,
        "selectedApis": args.selectedApis,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "taskPrefix": args.taskPrefix,
        "taskTags": args.taskTags,
        "url": args.url,
        "versionContext": args.versionContext,
        "workflow": args.workflow,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOpenapiTaskGenerationRequest.
 */
export interface GetOpenapiTaskGenerationRequestArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetOpenapiTaskGenerationRequestAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    endpointType?: string;
    failedTasks?: inputs.GetOpenapiTaskGenerationRequestFailedTask[];
    headerParameters?: inputs.GetOpenapiTaskGenerationRequestHeaderParameter[];
    id?: string;
    isValidateRequest?: boolean;
    modTime?: string;
    moid?: string;
    nrSource?: inputs.GetOpenapiTaskGenerationRequestNrSource;
    objectType?: string;
    organization?: inputs.GetOpenapiTaskGenerationRequestOrganization;
    owners?: string[];
    parent?: inputs.GetOpenapiTaskGenerationRequestParent;
    permissionResources?: inputs.GetOpenapiTaskGenerationRequestPermissionResource[];
    protocol?: string;
    queryParameters?: inputs.GetOpenapiTaskGenerationRequestQueryParameter[];
    selectedApis?: inputs.GetOpenapiTaskGenerationRequestSelectedApi[];
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetOpenapiTaskGenerationRequestTag[];
    taskPrefix?: string;
    taskTags?: inputs.GetOpenapiTaskGenerationRequestTaskTag[];
    url?: string;
    versionContext?: inputs.GetOpenapiTaskGenerationRequestVersionContext;
    workflow?: inputs.GetOpenapiTaskGenerationRequestWorkflow;
}

/**
 * A collection of values returned by getOpenapiTaskGenerationRequest.
 */
export interface GetOpenapiTaskGenerationRequestResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetOpenapiTaskGenerationRequestAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly endpointType?: string;
    readonly failedTasks?: outputs.GetOpenapiTaskGenerationRequestFailedTask[];
    readonly headerParameters?: outputs.GetOpenapiTaskGenerationRequestHeaderParameter[];
    readonly id: string;
    readonly isValidateRequest?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nrSource?: outputs.GetOpenapiTaskGenerationRequestNrSource;
    readonly objectType?: string;
    readonly organization?: outputs.GetOpenapiTaskGenerationRequestOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetOpenapiTaskGenerationRequestParent;
    readonly permissionResources?: outputs.GetOpenapiTaskGenerationRequestPermissionResource[];
    readonly protocol?: string;
    readonly queryParameters?: outputs.GetOpenapiTaskGenerationRequestQueryParameter[];
    readonly results: outputs.GetOpenapiTaskGenerationRequestResult[];
    readonly selectedApis?: outputs.GetOpenapiTaskGenerationRequestSelectedApi[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetOpenapiTaskGenerationRequestTag[];
    readonly taskPrefix?: string;
    readonly taskTags?: outputs.GetOpenapiTaskGenerationRequestTaskTag[];
    readonly url?: string;
    readonly versionContext?: outputs.GetOpenapiTaskGenerationRequestVersionContext;
    readonly workflow?: outputs.GetOpenapiTaskGenerationRequestWorkflow;
}
export function getOpenapiTaskGenerationRequestOutput(args?: GetOpenapiTaskGenerationRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpenapiTaskGenerationRequestResult> {
    return pulumi.output(args).apply((a: any) => getOpenapiTaskGenerationRequest(a, opts))
}

/**
 * A collection of arguments for invoking getOpenapiTaskGenerationRequest.
 */
export interface GetOpenapiTaskGenerationRequestOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    endpointType?: pulumi.Input<string>;
    failedTasks?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestFailedTaskArgs>[]>;
    headerParameters?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestHeaderParameterArgs>[]>;
    id?: pulumi.Input<string>;
    isValidateRequest?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nrSource?: pulumi.Input<inputs.GetOpenapiTaskGenerationRequestNrSourceArgs>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetOpenapiTaskGenerationRequestOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetOpenapiTaskGenerationRequestParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestPermissionResourceArgs>[]>;
    protocol?: pulumi.Input<string>;
    queryParameters?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestQueryParameterArgs>[]>;
    selectedApis?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestSelectedApiArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestTagArgs>[]>;
    taskPrefix?: pulumi.Input<string>;
    taskTags?: pulumi.Input<pulumi.Input<inputs.GetOpenapiTaskGenerationRequestTaskTagArgs>[]>;
    url?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetOpenapiTaskGenerationRequestVersionContextArgs>;
    workflow?: pulumi.Input<inputs.GetOpenapiTaskGenerationRequestWorkflowArgs>;
}
