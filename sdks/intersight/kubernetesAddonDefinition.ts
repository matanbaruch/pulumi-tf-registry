// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubernetesAddonDefinition extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesAddonDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesAddonDefinitionState, opts?: pulumi.CustomResourceOptions): KubernetesAddonDefinition {
        return new KubernetesAddonDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/kubernetesAddonDefinition:KubernetesAddonDefinition';

    /**
     * Returns true if the given object is an instance of KubernetesAddonDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesAddonDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesAddonDefinition.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.KubernetesAddonDefinitionAncestor[]>;
    /**
     * A reference to a kubernetesCatalog resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly catalogs!: pulumi.Output<outputs.KubernetesAddonDefinitionCatalog[]>;
    /**
     * Description of the addon component.
     */
    public readonly chartUrl!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Default installation strategy for the release. * `None` - Unspecified install strategy. * `NoAction` - No install action
     * performed. * `InstallOnly` - Only install in green field. No action in case of failure or removal. * `Always` - Attempt
     * install if chart is not already installed.
     */
    public readonly defaultInstallStrategy!: pulumi.Output<string | undefined>;
    /**
     * Default namespace to install the release.
     */
    public readonly defaultNamespace!: pulumi.Output<string | undefined>;
    /**
     * Default upgrade strategy for the release. * `None` - Unspecified upgrade strategy. * `NoAction` - This choice enables No
     * upgrades to be performed. * `UpgradeOnly` - Attempt upgrade if chart or overrides options change, no action on upgrade
     * failure. * `ReinstallOnFailure` - Attempt upgrade first. Remove and install on upgrade failure. * `AlwaysReinstall` -
     * Always remove older release and reinstall.
     */
    public readonly defaultUpgradeStrategy!: pulumi.Output<string | undefined>;
    /**
     * Description of the addon component.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Digest used to verify the integrity of an addon.
     */
    public readonly digest!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Icon used to represent the addon in UI.
     */
    public readonly iconUrl!: pulumi.Output<string | undefined>;
    public readonly labels!: pulumi.Output<string[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of an addon component.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Version of the addon component.
     */
    public readonly nrVersion!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.KubernetesAddonDefinitionOrganization[]>;
    /**
     * Properties that can be overridden for an addon.
     */
    public readonly overrides!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.KubernetesAddonDefinitionParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.KubernetesAddonDefinitionPermissionResource[]>;
    public readonly platforms!: pulumi.Output<string[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.KubernetesAddonDefinitionTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.KubernetesAddonDefinitionVersionContext[]>;

    /**
     * Create a KubernetesAddonDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KubernetesAddonDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesAddonDefinitionArgs | KubernetesAddonDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesAddonDefinitionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["catalogs"] = state ? state.catalogs : undefined;
            resourceInputs["chartUrl"] = state ? state.chartUrl : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["defaultInstallStrategy"] = state ? state.defaultInstallStrategy : undefined;
            resourceInputs["defaultNamespace"] = state ? state.defaultNamespace : undefined;
            resourceInputs["defaultUpgradeStrategy"] = state ? state.defaultUpgradeStrategy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["digest"] = state ? state.digest : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["iconUrl"] = state ? state.iconUrl : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nrVersion"] = state ? state.nrVersion : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["overrides"] = state ? state.overrides : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["platforms"] = state ? state.platforms : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as KubernetesAddonDefinitionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["catalogs"] = args ? args.catalogs : undefined;
            resourceInputs["chartUrl"] = args ? args.chartUrl : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["defaultInstallStrategy"] = args ? args.defaultInstallStrategy : undefined;
            resourceInputs["defaultNamespace"] = args ? args.defaultNamespace : undefined;
            resourceInputs["defaultUpgradeStrategy"] = args ? args.defaultUpgradeStrategy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["digest"] = args ? args.digest : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["iconUrl"] = args ? args.iconUrl : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nrVersion"] = args ? args.nrVersion : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["overrides"] = args ? args.overrides : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["platforms"] = args ? args.platforms : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesAddonDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubernetesAddonDefinition resources.
 */
export interface KubernetesAddonDefinitionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionAncestor>[]>;
    /**
     * A reference to a kubernetesCatalog resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    catalogs?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionCatalog>[]>;
    /**
     * Description of the addon component.
     */
    chartUrl?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Default installation strategy for the release. * `None` - Unspecified install strategy. * `NoAction` - No install action
     * performed. * `InstallOnly` - Only install in green field. No action in case of failure or removal. * `Always` - Attempt
     * install if chart is not already installed.
     */
    defaultInstallStrategy?: pulumi.Input<string>;
    /**
     * Default namespace to install the release.
     */
    defaultNamespace?: pulumi.Input<string>;
    /**
     * Default upgrade strategy for the release. * `None` - Unspecified upgrade strategy. * `NoAction` - This choice enables No
     * upgrades to be performed. * `UpgradeOnly` - Attempt upgrade if chart or overrides options change, no action on upgrade
     * failure. * `ReinstallOnFailure` - Attempt upgrade first. Remove and install on upgrade failure. * `AlwaysReinstall` -
     * Always remove older release and reinstall.
     */
    defaultUpgradeStrategy?: pulumi.Input<string>;
    /**
     * Description of the addon component.
     */
    description?: pulumi.Input<string>;
    /**
     * Digest used to verify the integrity of an addon.
     */
    digest?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Icon used to represent the addon in UI.
     */
    iconUrl?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of an addon component.
     */
    name?: pulumi.Input<string>;
    /**
     * Version of the addon component.
     */
    nrVersion?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionOrganization>[]>;
    /**
     * Properties that can be overridden for an addon.
     */
    overrides?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionPermissionResource>[]>;
    platforms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionVersionContext>[]>;
}

/**
 * The set of arguments for constructing a KubernetesAddonDefinition resource.
 */
export interface KubernetesAddonDefinitionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionAncestor>[]>;
    /**
     * A reference to a kubernetesCatalog resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    catalogs?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionCatalog>[]>;
    /**
     * Description of the addon component.
     */
    chartUrl?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Default installation strategy for the release. * `None` - Unspecified install strategy. * `NoAction` - No install action
     * performed. * `InstallOnly` - Only install in green field. No action in case of failure or removal. * `Always` - Attempt
     * install if chart is not already installed.
     */
    defaultInstallStrategy?: pulumi.Input<string>;
    /**
     * Default namespace to install the release.
     */
    defaultNamespace?: pulumi.Input<string>;
    /**
     * Default upgrade strategy for the release. * `None` - Unspecified upgrade strategy. * `NoAction` - This choice enables No
     * upgrades to be performed. * `UpgradeOnly` - Attempt upgrade if chart or overrides options change, no action on upgrade
     * failure. * `ReinstallOnFailure` - Attempt upgrade first. Remove and install on upgrade failure. * `AlwaysReinstall` -
     * Always remove older release and reinstall.
     */
    defaultUpgradeStrategy?: pulumi.Input<string>;
    /**
     * Description of the addon component.
     */
    description?: pulumi.Input<string>;
    /**
     * Digest used to verify the integrity of an addon.
     */
    digest?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Icon used to represent the addon in UI.
     */
    iconUrl?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of an addon component.
     */
    name?: pulumi.Input<string>;
    /**
     * Version of the addon component.
     */
    nrVersion?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionOrganization>[]>;
    /**
     * Properties that can be overridden for an addon.
     */
    overrides?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionPermissionResource>[]>;
    platforms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesAddonDefinitionVersionContext>[]>;
}
