// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVnicLanConnectivityPolicyInventory(args?: GetVnicLanConnectivityPolicyInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetVnicLanConnectivityPolicyInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getVnicLanConnectivityPolicyInventory:getVnicLanConnectivityPolicyInventory", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "azureQosEnabled": args.azureQosEnabled,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "deviceMoId": args.deviceMoId,
        "domainGroupMoid": args.domainGroupMoid,
        "ethIfs": args.ethIfs,
        "id": args.id,
        "iqnAllocationType": args.iqnAllocationType,
        "iqnPool": args.iqnPool,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "placementMode": args.placementMode,
        "sharedScope": args.sharedScope,
        "staticIqnName": args.staticIqnName,
        "tags": args.tags,
        "targetMo": args.targetMo,
        "targetPlatform": args.targetPlatform,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVnicLanConnectivityPolicyInventory.
 */
export interface GetVnicLanConnectivityPolicyInventoryArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetVnicLanConnectivityPolicyInventoryAncestor[];
    azureQosEnabled?: boolean;
    classId?: string;
    createTime?: string;
    description?: string;
    deviceMoId?: string;
    domainGroupMoid?: string;
    ethIfs?: inputs.GetVnicLanConnectivityPolicyInventoryEthIf[];
    id?: string;
    iqnAllocationType?: string;
    iqnPool?: inputs.GetVnicLanConnectivityPolicyInventoryIqnPool;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetVnicLanConnectivityPolicyInventoryParent;
    permissionResources?: inputs.GetVnicLanConnectivityPolicyInventoryPermissionResource[];
    placementMode?: string;
    sharedScope?: string;
    staticIqnName?: string;
    tags?: inputs.GetVnicLanConnectivityPolicyInventoryTag[];
    targetMo?: inputs.GetVnicLanConnectivityPolicyInventoryTargetMo;
    targetPlatform?: string;
    versionContext?: inputs.GetVnicLanConnectivityPolicyInventoryVersionContext;
}

/**
 * A collection of values returned by getVnicLanConnectivityPolicyInventory.
 */
export interface GetVnicLanConnectivityPolicyInventoryResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetVnicLanConnectivityPolicyInventoryAncestor[];
    readonly azureQosEnabled?: boolean;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly deviceMoId?: string;
    readonly domainGroupMoid?: string;
    readonly ethIfs?: outputs.GetVnicLanConnectivityPolicyInventoryEthIf[];
    readonly id: string;
    readonly iqnAllocationType?: string;
    readonly iqnPool?: outputs.GetVnicLanConnectivityPolicyInventoryIqnPool;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetVnicLanConnectivityPolicyInventoryParent;
    readonly permissionResources?: outputs.GetVnicLanConnectivityPolicyInventoryPermissionResource[];
    readonly placementMode?: string;
    readonly results: outputs.GetVnicLanConnectivityPolicyInventoryResult[];
    readonly sharedScope?: string;
    readonly staticIqnName?: string;
    readonly tags?: outputs.GetVnicLanConnectivityPolicyInventoryTag[];
    readonly targetMo?: outputs.GetVnicLanConnectivityPolicyInventoryTargetMo;
    readonly targetPlatform?: string;
    readonly versionContext?: outputs.GetVnicLanConnectivityPolicyInventoryVersionContext;
}
export function getVnicLanConnectivityPolicyInventoryOutput(args?: GetVnicLanConnectivityPolicyInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVnicLanConnectivityPolicyInventoryResult> {
    return pulumi.output(args).apply((a: any) => getVnicLanConnectivityPolicyInventory(a, opts))
}

/**
 * A collection of arguments for invoking getVnicLanConnectivityPolicyInventory.
 */
export interface GetVnicLanConnectivityPolicyInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryAncestorArgs>[]>;
    azureQosEnabled?: pulumi.Input<boolean>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    ethIfs?: pulumi.Input<pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryEthIfArgs>[]>;
    id?: pulumi.Input<string>;
    iqnAllocationType?: pulumi.Input<string>;
    iqnPool?: pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryIqnPoolArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryPermissionResourceArgs>[]>;
    placementMode?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    staticIqnName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryTagArgs>[]>;
    targetMo?: pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryTargetMoArgs>;
    targetPlatform?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetVnicLanConnectivityPolicyInventoryVersionContextArgs>;
}
