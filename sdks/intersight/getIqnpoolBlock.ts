// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIqnpoolBlock(args?: GetIqnpoolBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetIqnpoolBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIqnpoolBlock:getIqnpoolBlock", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "freeBlockCount": args.freeBlockCount,
        "id": args.id,
        "iqnSuffixBlock": args.iqnSuffixBlock,
        "modTime": args.modTime,
        "moid": args.moid,
        "nextIdAllocator": args.nextIdAllocator,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "pool": args.pool,
        "prefix": args.prefix,
        "reservations": args.reservations,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIqnpoolBlock.
 */
export interface GetIqnpoolBlockArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIqnpoolBlockAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    freeBlockCount?: number;
    id?: string;
    iqnSuffixBlock?: inputs.GetIqnpoolBlockIqnSuffixBlock;
    modTime?: string;
    moid?: string;
    nextIdAllocator?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIqnpoolBlockParent;
    permissionResources?: inputs.GetIqnpoolBlockPermissionResource[];
    pool?: inputs.GetIqnpoolBlockPool;
    prefix?: string;
    reservations?: inputs.GetIqnpoolBlockReservation[];
    sharedScope?: string;
    tags?: inputs.GetIqnpoolBlockTag[];
    versionContext?: inputs.GetIqnpoolBlockVersionContext;
}

/**
 * A collection of values returned by getIqnpoolBlock.
 */
export interface GetIqnpoolBlockResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIqnpoolBlockAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly freeBlockCount?: number;
    readonly id: string;
    readonly iqnSuffixBlock?: outputs.GetIqnpoolBlockIqnSuffixBlock;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nextIdAllocator?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIqnpoolBlockParent;
    readonly permissionResources?: outputs.GetIqnpoolBlockPermissionResource[];
    readonly pool?: outputs.GetIqnpoolBlockPool;
    readonly prefix?: string;
    readonly reservations?: outputs.GetIqnpoolBlockReservation[];
    readonly results: outputs.GetIqnpoolBlockResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetIqnpoolBlockTag[];
    readonly versionContext?: outputs.GetIqnpoolBlockVersionContext;
}
export function getIqnpoolBlockOutput(args?: GetIqnpoolBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIqnpoolBlockResult> {
    return pulumi.output(args).apply((a: any) => getIqnpoolBlock(a, opts))
}

/**
 * A collection of arguments for invoking getIqnpoolBlock.
 */
export interface GetIqnpoolBlockOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIqnpoolBlockAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    freeBlockCount?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    iqnSuffixBlock?: pulumi.Input<inputs.GetIqnpoolBlockIqnSuffixBlockArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nextIdAllocator?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIqnpoolBlockParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIqnpoolBlockPermissionResourceArgs>[]>;
    pool?: pulumi.Input<inputs.GetIqnpoolBlockPoolArgs>;
    prefix?: pulumi.Input<string>;
    reservations?: pulumi.Input<pulumi.Input<inputs.GetIqnpoolBlockReservationArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIqnpoolBlockTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetIqnpoolBlockVersionContextArgs>;
}
