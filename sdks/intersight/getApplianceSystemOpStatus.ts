// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceSystemOpStatus(args?: GetApplianceSystemOpStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceSystemOpStatusResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceSystemOpStatus:getApplianceSystemOpStatus", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "appOpStatuses": args.appOpStatuses,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "groupOpStatuses": args.groupOpStatuses,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "operationalStatus": args.operationalStatus,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "systemInfo": args.systemInfo,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceSystemOpStatus.
 */
export interface GetApplianceSystemOpStatusArgs {
    account?: inputs.GetApplianceSystemOpStatusAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceSystemOpStatusAncestor[];
    appOpStatuses?: inputs.GetApplianceSystemOpStatusAppOpStatus[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    groupOpStatuses?: inputs.GetApplianceSystemOpStatusGroupOpStatus[];
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    operationalStatus?: string;
    owners?: string[];
    parent?: inputs.GetApplianceSystemOpStatusParent;
    permissionResources?: inputs.GetApplianceSystemOpStatusPermissionResource[];
    registeredDevice?: inputs.GetApplianceSystemOpStatusRegisteredDevice;
    sharedScope?: string;
    systemInfo?: inputs.GetApplianceSystemOpStatusSystemInfo;
    tags?: inputs.GetApplianceSystemOpStatusTag[];
    versionContext?: inputs.GetApplianceSystemOpStatusVersionContext;
}

/**
 * A collection of values returned by getApplianceSystemOpStatus.
 */
export interface GetApplianceSystemOpStatusResult {
    readonly account?: outputs.GetApplianceSystemOpStatusAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceSystemOpStatusAncestor[];
    readonly appOpStatuses?: outputs.GetApplianceSystemOpStatusAppOpStatus[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly groupOpStatuses?: outputs.GetApplianceSystemOpStatusGroupOpStatus[];
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly operationalStatus?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceSystemOpStatusParent;
    readonly permissionResources?: outputs.GetApplianceSystemOpStatusPermissionResource[];
    readonly registeredDevice?: outputs.GetApplianceSystemOpStatusRegisteredDevice;
    readonly results: outputs.GetApplianceSystemOpStatusResult[];
    readonly sharedScope?: string;
    readonly systemInfo?: outputs.GetApplianceSystemOpStatusSystemInfo;
    readonly tags?: outputs.GetApplianceSystemOpStatusTag[];
    readonly versionContext?: outputs.GetApplianceSystemOpStatusVersionContext;
}
export function getApplianceSystemOpStatusOutput(args?: GetApplianceSystemOpStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceSystemOpStatusResult> {
    return pulumi.output(args).apply((a: any) => getApplianceSystemOpStatus(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceSystemOpStatus.
 */
export interface GetApplianceSystemOpStatusOutputArgs {
    account?: pulumi.Input<inputs.GetApplianceSystemOpStatusAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceSystemOpStatusAncestorArgs>[]>;
    appOpStatuses?: pulumi.Input<pulumi.Input<inputs.GetApplianceSystemOpStatusAppOpStatusArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    groupOpStatuses?: pulumi.Input<pulumi.Input<inputs.GetApplianceSystemOpStatusGroupOpStatusArgs>[]>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    operationalStatus?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceSystemOpStatusParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceSystemOpStatusPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetApplianceSystemOpStatusRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    systemInfo?: pulumi.Input<inputs.GetApplianceSystemOpStatusSystemInfoArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceSystemOpStatusTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetApplianceSystemOpStatusVersionContextArgs>;
}
