// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceNodeInfo(args?: GetApplianceNodeInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceNodeInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceNodeInfo:getApplianceNodeInfo", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "hostname": args.hostname,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "nodeId": args.nodeId,
        "nodeIpV4Config": args.nodeIpV4Config,
        "nodeIpV6Config": args.nodeIpV6Config,
        "objectType": args.objectType,
        "operationalStatus": args.operationalStatus,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceNodeInfo.
 */
export interface GetApplianceNodeInfoArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceNodeInfoAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    hostname?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    nodeId?: number;
    nodeIpV4Config?: inputs.GetApplianceNodeInfoNodeIpV4Config;
    nodeIpV6Config?: inputs.GetApplianceNodeInfoNodeIpV6Config;
    objectType?: string;
    operationalStatus?: string;
    owners?: string[];
    parent?: inputs.GetApplianceNodeInfoParent;
    permissionResources?: inputs.GetApplianceNodeInfoPermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetApplianceNodeInfoTag[];
    versionContext?: inputs.GetApplianceNodeInfoVersionContext;
}

/**
 * A collection of values returned by getApplianceNodeInfo.
 */
export interface GetApplianceNodeInfoResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceNodeInfoAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly hostname?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nodeId?: number;
    readonly nodeIpV4Config?: outputs.GetApplianceNodeInfoNodeIpV4Config;
    readonly nodeIpV6Config?: outputs.GetApplianceNodeInfoNodeIpV6Config;
    readonly objectType?: string;
    readonly operationalStatus?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceNodeInfoParent;
    readonly permissionResources?: outputs.GetApplianceNodeInfoPermissionResource[];
    readonly results: outputs.GetApplianceNodeInfoResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetApplianceNodeInfoTag[];
    readonly versionContext?: outputs.GetApplianceNodeInfoVersionContext;
}
export function getApplianceNodeInfoOutput(args?: GetApplianceNodeInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceNodeInfoResult> {
    return pulumi.output(args).apply((a: any) => getApplianceNodeInfo(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceNodeInfo.
 */
export interface GetApplianceNodeInfoOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceNodeInfoAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nodeId?: pulumi.Input<number>;
    nodeIpV4Config?: pulumi.Input<inputs.GetApplianceNodeInfoNodeIpV4ConfigArgs>;
    nodeIpV6Config?: pulumi.Input<inputs.GetApplianceNodeInfoNodeIpV6ConfigArgs>;
    objectType?: pulumi.Input<string>;
    operationalStatus?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceNodeInfoParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceNodeInfoPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceNodeInfoTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetApplianceNodeInfoVersionContextArgs>;
}
