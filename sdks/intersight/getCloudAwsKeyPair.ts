// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudAwsKeyPair(args?: GetCloudAwsKeyPairArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudAwsKeyPairResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudAwsKeyPair:getCloudAwsKeyPair", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "awsBillingUnit": args.awsBillingUnit,
        "billingUnit": args.billingUnit,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "fingerPrint": args.fingerPrint,
        "id": args.id,
        "identity": args.identity,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "publicKey": args.publicKey,
        "regionInfo": args.regionInfo,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "zoneInfo": args.zoneInfo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudAwsKeyPair.
 */
export interface GetCloudAwsKeyPairArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCloudAwsKeyPairAncestor[];
    awsBillingUnit?: inputs.GetCloudAwsKeyPairAwsBillingUnit;
    billingUnit?: inputs.GetCloudAwsKeyPairBillingUnit;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    fingerPrint?: string;
    id?: string;
    identity?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudAwsKeyPairParent;
    permissionResources?: inputs.GetCloudAwsKeyPairPermissionResource[];
    publicKey?: string;
    regionInfo?: inputs.GetCloudAwsKeyPairRegionInfo;
    registeredDevice?: inputs.GetCloudAwsKeyPairRegisteredDevice;
    sharedScope?: string;
    tags?: inputs.GetCloudAwsKeyPairTag[];
    uuid?: string;
    versionContext?: inputs.GetCloudAwsKeyPairVersionContext;
    zoneInfo?: inputs.GetCloudAwsKeyPairZoneInfo;
}

/**
 * A collection of values returned by getCloudAwsKeyPair.
 */
export interface GetCloudAwsKeyPairResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCloudAwsKeyPairAncestor[];
    readonly awsBillingUnit?: outputs.GetCloudAwsKeyPairAwsBillingUnit;
    readonly billingUnit?: outputs.GetCloudAwsKeyPairBillingUnit;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly fingerPrint?: string;
    readonly id: string;
    readonly identity?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudAwsKeyPairParent;
    readonly permissionResources?: outputs.GetCloudAwsKeyPairPermissionResource[];
    readonly publicKey?: string;
    readonly regionInfo?: outputs.GetCloudAwsKeyPairRegionInfo;
    readonly registeredDevice?: outputs.GetCloudAwsKeyPairRegisteredDevice;
    readonly results: outputs.GetCloudAwsKeyPairResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetCloudAwsKeyPairTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetCloudAwsKeyPairVersionContext;
    readonly zoneInfo?: outputs.GetCloudAwsKeyPairZoneInfo;
}
export function getCloudAwsKeyPairOutput(args?: GetCloudAwsKeyPairOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudAwsKeyPairResult> {
    return pulumi.output(args).apply((a: any) => getCloudAwsKeyPair(a, opts))
}

/**
 * A collection of arguments for invoking getCloudAwsKeyPair.
 */
export interface GetCloudAwsKeyPairOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsKeyPairAncestorArgs>[]>;
    awsBillingUnit?: pulumi.Input<inputs.GetCloudAwsKeyPairAwsBillingUnitArgs>;
    billingUnit?: pulumi.Input<inputs.GetCloudAwsKeyPairBillingUnitArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    fingerPrint?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudAwsKeyPairParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsKeyPairPermissionResourceArgs>[]>;
    publicKey?: pulumi.Input<string>;
    regionInfo?: pulumi.Input<inputs.GetCloudAwsKeyPairRegionInfoArgs>;
    registeredDevice?: pulumi.Input<inputs.GetCloudAwsKeyPairRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsKeyPairTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetCloudAwsKeyPairVersionContextArgs>;
    zoneInfo?: pulumi.Input<inputs.GetCloudAwsKeyPairZoneInfoArgs>;
}
