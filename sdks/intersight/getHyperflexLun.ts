// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexLun(args?: GetHyperflexLunArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexLunResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexLun:getHyperflexLun", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "dsCapacityInBytes": args.dsCapacityInBytes,
        "dsName": args.dsName,
        "dsUuid": args.dsUuid,
        "hlu": args.hlu,
        "hostName": args.hostName,
        "id": args.id,
        "inventorySource": args.inventorySource,
        "isEncrypted": args.isEncrypted,
        "lunId": args.lunId,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "serialNo": args.serialNo,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "target": args.target,
        "totalCapacityInBytes": args.totalCapacityInBytes,
        "tuuid": args.tuuid,
        "usedCapacityInBytes": args.usedCapacityInBytes,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "volumeName": args.volumeName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexLun.
 */
export interface GetHyperflexLunArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexLunAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    dsCapacityInBytes?: number;
    dsName?: string;
    dsUuid?: string;
    hlu?: number;
    hostName?: string;
    id?: string;
    inventorySource?: string;
    isEncrypted?: boolean;
    lunId?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nrVersion?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexLunParent;
    permissionResources?: inputs.GetHyperflexLunPermissionResource[];
    serialNo?: string;
    sharedScope?: string;
    tags?: inputs.GetHyperflexLunTag[];
    target?: inputs.GetHyperflexLunTarget;
    totalCapacityInBytes?: number;
    tuuid?: string;
    usedCapacityInBytes?: number;
    uuid?: string;
    versionContext?: inputs.GetHyperflexLunVersionContext;
    volumeName?: string;
}

/**
 * A collection of values returned by getHyperflexLun.
 */
export interface GetHyperflexLunResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexLunAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly dsCapacityInBytes?: number;
    readonly dsName?: string;
    readonly dsUuid?: string;
    readonly hlu?: number;
    readonly hostName?: string;
    readonly id: string;
    readonly inventorySource?: string;
    readonly isEncrypted?: boolean;
    readonly lunId?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrVersion?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexLunParent;
    readonly permissionResources?: outputs.GetHyperflexLunPermissionResource[];
    readonly results: outputs.GetHyperflexLunResult[];
    readonly serialNo?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexLunTag[];
    readonly target?: outputs.GetHyperflexLunTarget;
    readonly totalCapacityInBytes?: number;
    readonly tuuid?: string;
    readonly usedCapacityInBytes?: number;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexLunVersionContext;
    readonly volumeName?: string;
}
export function getHyperflexLunOutput(args?: GetHyperflexLunOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexLunResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexLun(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexLun.
 */
export interface GetHyperflexLunOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexLunAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    dsCapacityInBytes?: pulumi.Input<number>;
    dsName?: pulumi.Input<string>;
    dsUuid?: pulumi.Input<string>;
    hlu?: pulumi.Input<number>;
    hostName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventorySource?: pulumi.Input<string>;
    isEncrypted?: pulumi.Input<boolean>;
    lunId?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexLunParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexLunPermissionResourceArgs>[]>;
    serialNo?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexLunTagArgs>[]>;
    target?: pulumi.Input<inputs.GetHyperflexLunTargetArgs>;
    totalCapacityInBytes?: pulumi.Input<number>;
    tuuid?: pulumi.Input<string>;
    usedCapacityInBytes?: pulumi.Input<number>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexLunVersionContextArgs>;
    volumeName?: pulumi.Input<string>;
}
