// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudSkuNetworkType(args?: GetCloudSkuNetworkTypeArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudSkuNetworkTypeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudSkuNetworkType:getCloudSkuNetworkType", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "basePrice": args.basePrice,
        "classId": args.classId,
        "createTime": args.createTime,
        "currency": args.currency,
        "customAttributes": args.customAttributes,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "isActive": args.isActive,
        "isAutoDiscovered": args.isAutoDiscovered,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platformType": args.platformType,
        "region": args.region,
        "regionId": args.regionId,
        "serviceCategory": args.serviceCategory,
        "serviceFamily": args.serviceFamily,
        "serviceName": args.serviceName,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "target": args.target,
        "unit": args.unit,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudSkuNetworkType.
 */
export interface GetCloudSkuNetworkTypeArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCloudSkuNetworkTypeAncestor[];
    basePrice?: number;
    classId?: string;
    createTime?: string;
    currency?: string;
    customAttributes?: inputs.GetCloudSkuNetworkTypeCustomAttribute[];
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    isActive?: boolean;
    isAutoDiscovered?: boolean;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudSkuNetworkTypeParent;
    permissionResources?: inputs.GetCloudSkuNetworkTypePermissionResource[];
    platformType?: string;
    region?: inputs.GetCloudSkuNetworkTypeRegion;
    regionId?: string;
    serviceCategory?: string;
    serviceFamily?: string;
    serviceName?: string;
    sharedScope?: string;
    tags?: inputs.GetCloudSkuNetworkTypeTag[];
    target?: inputs.GetCloudSkuNetworkTypeTarget;
    unit?: string;
    versionContext?: inputs.GetCloudSkuNetworkTypeVersionContext;
}

/**
 * A collection of values returned by getCloudSkuNetworkType.
 */
export interface GetCloudSkuNetworkTypeResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCloudSkuNetworkTypeAncestor[];
    readonly basePrice?: number;
    readonly classId?: string;
    readonly createTime?: string;
    readonly currency?: string;
    readonly customAttributes?: outputs.GetCloudSkuNetworkTypeCustomAttribute[];
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly isActive?: boolean;
    readonly isAutoDiscovered?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudSkuNetworkTypeParent;
    readonly permissionResources?: outputs.GetCloudSkuNetworkTypePermissionResource[];
    readonly platformType?: string;
    readonly region?: outputs.GetCloudSkuNetworkTypeRegion;
    readonly regionId?: string;
    readonly results: outputs.GetCloudSkuNetworkTypeResult[];
    readonly serviceCategory?: string;
    readonly serviceFamily?: string;
    readonly serviceName?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetCloudSkuNetworkTypeTag[];
    readonly target?: outputs.GetCloudSkuNetworkTypeTarget;
    readonly unit?: string;
    readonly versionContext?: outputs.GetCloudSkuNetworkTypeVersionContext;
}
export function getCloudSkuNetworkTypeOutput(args?: GetCloudSkuNetworkTypeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudSkuNetworkTypeResult> {
    return pulumi.output(args).apply((a: any) => getCloudSkuNetworkType(a, opts))
}

/**
 * A collection of arguments for invoking getCloudSkuNetworkType.
 */
export interface GetCloudSkuNetworkTypeOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudSkuNetworkTypeAncestorArgs>[]>;
    basePrice?: pulumi.Input<number>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    currency?: pulumi.Input<string>;
    customAttributes?: pulumi.Input<pulumi.Input<inputs.GetCloudSkuNetworkTypeCustomAttributeArgs>[]>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isActive?: pulumi.Input<boolean>;
    isAutoDiscovered?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudSkuNetworkTypeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudSkuNetworkTypePermissionResourceArgs>[]>;
    platformType?: pulumi.Input<string>;
    region?: pulumi.Input<inputs.GetCloudSkuNetworkTypeRegionArgs>;
    regionId?: pulumi.Input<string>;
    serviceCategory?: pulumi.Input<string>;
    serviceFamily?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudSkuNetworkTypeTagArgs>[]>;
    target?: pulumi.Input<inputs.GetCloudSkuNetworkTypeTargetArgs>;
    unit?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetCloudSkuNetworkTypeVersionContextArgs>;
}
