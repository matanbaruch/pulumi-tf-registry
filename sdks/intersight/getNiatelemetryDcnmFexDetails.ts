// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryDcnmFexDetails(args?: GetNiatelemetryDcnmFexDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryDcnmFexDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryDcnmFexDetails:getNiatelemetryDcnmFexDetails", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "productId": args.productId,
        "recordType": args.recordType,
        "recordVersion": args.recordVersion,
        "registeredDevice": args.registeredDevice,
        "serialNumber": args.serialNumber,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "vendorId": args.vendorId,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryDcnmFexDetails.
 */
export interface GetNiatelemetryDcnmFexDetailsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiatelemetryDcnmFexDetailsAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryDcnmFexDetailsParent;
    permissionResources?: inputs.GetNiatelemetryDcnmFexDetailsPermissionResource[];
    productId?: string;
    recordType?: string;
    recordVersion?: string;
    registeredDevice?: inputs.GetNiatelemetryDcnmFexDetailsRegisteredDevice;
    serialNumber?: string;
    sharedScope?: string;
    tags?: inputs.GetNiatelemetryDcnmFexDetailsTag[];
    vendorId?: string;
    versionContext?: inputs.GetNiatelemetryDcnmFexDetailsVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryDcnmFexDetails.
 */
export interface GetNiatelemetryDcnmFexDetailsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiatelemetryDcnmFexDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryDcnmFexDetailsParent;
    readonly permissionResources?: outputs.GetNiatelemetryDcnmFexDetailsPermissionResource[];
    readonly productId?: string;
    readonly recordType?: string;
    readonly recordVersion?: string;
    readonly registeredDevice?: outputs.GetNiatelemetryDcnmFexDetailsRegisteredDevice;
    readonly results: outputs.GetNiatelemetryDcnmFexDetailsResult[];
    readonly serialNumber?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetNiatelemetryDcnmFexDetailsTag[];
    readonly vendorId?: string;
    readonly versionContext?: outputs.GetNiatelemetryDcnmFexDetailsVersionContext;
}
export function getNiatelemetryDcnmFexDetailsOutput(args?: GetNiatelemetryDcnmFexDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryDcnmFexDetailsResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryDcnmFexDetails(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryDcnmFexDetails.
 */
export interface GetNiatelemetryDcnmFexDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryDcnmFexDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryDcnmFexDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryDcnmFexDetailsPermissionResourceArgs>[]>;
    productId?: pulumi.Input<string>;
    recordType?: pulumi.Input<string>;
    recordVersion?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetryDcnmFexDetailsRegisteredDeviceArgs>;
    serialNumber?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryDcnmFexDetailsTagArgs>[]>;
    vendorId?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryDcnmFexDetailsVersionContextArgs>;
}
