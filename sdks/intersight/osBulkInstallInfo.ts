// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OsBulkInstallInfo extends pulumi.CustomResource {
    /**
     * Get an existing OsBulkInstallInfo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OsBulkInstallInfoState, opts?: pulumi.CustomResourceOptions): OsBulkInstallInfo {
        return new OsBulkInstallInfo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/osBulkInstallInfo:OsBulkInstallInfo';

    /**
     * Returns true if the given object is an instance of OsBulkInstallInfo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OsBulkInstallInfo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OsBulkInstallInfo.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.OsBulkInstallInfoAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * A reference to a osConfigurationFile resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly configurationFiles!: pulumi.Output<outputs.OsBulkInstallInfoConfigurationFile[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The content of the entire CSV file is stored as value. The content can hold complete OS install parameters in two
     * sections. The first section holds generic information about the OS Install like OS Image, SCU Image etc. The second
     * section holds parameters which are specific to each server level data.
     */
    public readonly fileContent!: pulumi.Output<string | undefined>;
    /**
     * The global parameter of the CSV file.
     */
    public readonly globalConfigs!: pulumi.Output<outputs.OsBulkInstallInfoGlobalConfig[]>;
    /**
     * Indicates whether the value of the 'fileContent' property has been set.
     */
    public readonly isFileContentSet!: pulumi.Output<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The name of the CSV file, which holds the OS install parameters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * Denotes if the operating is pending, in_progress, completed_ok, completed_error. * `Pending` - The initial value of the
     * OperStatus. * `InProgress` - The OperStatus value will be InProgress during execution. * `CompletedOk` - The API is
     * successful with operation then OperStatus will be marked as CompletedOk. * `CompletedError` - The API is failed with
     * operation then OperStatus will be marked as CompletedError. * `CompletedWarning` - The API is completed with some
     * warning then OperStatus will be CompletedWarning.
     */
    public readonly operState!: pulumi.Output<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.OsBulkInstallInfoOrganization[]>;
    /**
     * A reference to a softwarerepositoryOperatingSystemFile resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    public readonly osImages!: pulumi.Output<outputs.OsBulkInstallInfoOsImage[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.OsBulkInstallInfoParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.OsBulkInstallInfoPermissionResource[]>;
    /**
     * A reference to a firmwareServerConfigurationUtilityDistributable resource. When the $expand query parameter is
     * specified, the referenced resource is returned inline.
     */
    public readonly scuImages!: pulumi.Output<outputs.OsBulkInstallInfoScuImage[]>;
    public readonly serverConfigs!: pulumi.Output<outputs.OsBulkInstallInfoServerConfig[]>;
    /**
     * An array of relationships to computePhysical resources.
     */
    public readonly servers!: pulumi.Output<outputs.OsBulkInstallInfoServer[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.OsBulkInstallInfoTag[]>;
    public readonly validationInfos!: pulumi.Output<outputs.OsBulkInstallInfoValidationInfo[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.OsBulkInstallInfoVersionContext[]>;

    /**
     * Create a OsBulkInstallInfo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OsBulkInstallInfoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OsBulkInstallInfoArgs | OsBulkInstallInfoState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OsBulkInstallInfoState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["configurationFiles"] = state ? state.configurationFiles : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["fileContent"] = state ? state.fileContent : undefined;
            resourceInputs["globalConfigs"] = state ? state.globalConfigs : undefined;
            resourceInputs["isFileContentSet"] = state ? state.isFileContentSet : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["operState"] = state ? state.operState : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["osImages"] = state ? state.osImages : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["scuImages"] = state ? state.scuImages : undefined;
            resourceInputs["serverConfigs"] = state ? state.serverConfigs : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["validationInfos"] = state ? state.validationInfos : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as OsBulkInstallInfoArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["configurationFiles"] = args ? args.configurationFiles : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["fileContent"] = args ? args.fileContent : undefined;
            resourceInputs["globalConfigs"] = args ? args.globalConfigs : undefined;
            resourceInputs["isFileContentSet"] = args ? args.isFileContentSet : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["operState"] = args ? args.operState : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["osImages"] = args ? args.osImages : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["scuImages"] = args ? args.scuImages : undefined;
            resourceInputs["serverConfigs"] = args ? args.serverConfigs : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["validationInfos"] = args ? args.validationInfos : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OsBulkInstallInfo.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OsBulkInstallInfo resources.
 */
export interface OsBulkInstallInfoState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a osConfigurationFile resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    configurationFiles?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoConfigurationFile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The content of the entire CSV file is stored as value. The content can hold complete OS install parameters in two
     * sections. The first section holds generic information about the OS Install like OS Image, SCU Image etc. The second
     * section holds parameters which are specific to each server level data.
     */
    fileContent?: pulumi.Input<string>;
    /**
     * The global parameter of the CSV file.
     */
    globalConfigs?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoGlobalConfig>[]>;
    /**
     * Indicates whether the value of the 'fileContent' property has been set.
     */
    isFileContentSet?: pulumi.Input<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the CSV file, which holds the OS install parameters.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Denotes if the operating is pending, in_progress, completed_ok, completed_error. * `Pending` - The initial value of the
     * OperStatus. * `InProgress` - The OperStatus value will be InProgress during execution. * `CompletedOk` - The API is
     * successful with operation then OperStatus will be marked as CompletedOk. * `CompletedError` - The API is failed with
     * operation then OperStatus will be marked as CompletedError. * `CompletedWarning` - The API is completed with some
     * warning then OperStatus will be CompletedWarning.
     */
    operState?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoOrganization>[]>;
    /**
     * A reference to a softwarerepositoryOperatingSystemFile resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    osImages?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoOsImage>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoPermissionResource>[]>;
    /**
     * A reference to a firmwareServerConfigurationUtilityDistributable resource. When the $expand query parameter is
     * specified, the referenced resource is returned inline.
     */
    scuImages?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoScuImage>[]>;
    serverConfigs?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoServerConfig>[]>;
    /**
     * An array of relationships to computePhysical resources.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoServer>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoTag>[]>;
    validationInfos?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoValidationInfo>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoVersionContext>[]>;
}

/**
 * The set of arguments for constructing a OsBulkInstallInfo resource.
 */
export interface OsBulkInstallInfoArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a osConfigurationFile resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    configurationFiles?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoConfigurationFile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The content of the entire CSV file is stored as value. The content can hold complete OS install parameters in two
     * sections. The first section holds generic information about the OS Install like OS Image, SCU Image etc. The second
     * section holds parameters which are specific to each server level data.
     */
    fileContent?: pulumi.Input<string>;
    /**
     * The global parameter of the CSV file.
     */
    globalConfigs?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoGlobalConfig>[]>;
    /**
     * Indicates whether the value of the 'fileContent' property has been set.
     */
    isFileContentSet?: pulumi.Input<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the CSV file, which holds the OS install parameters.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Denotes if the operating is pending, in_progress, completed_ok, completed_error. * `Pending` - The initial value of the
     * OperStatus. * `InProgress` - The OperStatus value will be InProgress during execution. * `CompletedOk` - The API is
     * successful with operation then OperStatus will be marked as CompletedOk. * `CompletedError` - The API is failed with
     * operation then OperStatus will be marked as CompletedError. * `CompletedWarning` - The API is completed with some
     * warning then OperStatus will be CompletedWarning.
     */
    operState?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoOrganization>[]>;
    /**
     * A reference to a softwarerepositoryOperatingSystemFile resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    osImages?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoOsImage>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoPermissionResource>[]>;
    /**
     * A reference to a firmwareServerConfigurationUtilityDistributable resource. When the $expand query parameter is
     * specified, the referenced resource is returned inline.
     */
    scuImages?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoScuImage>[]>;
    serverConfigs?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoServerConfig>[]>;
    /**
     * An array of relationships to computePhysical resources.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoServer>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoTag>[]>;
    validationInfos?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoValidationInfo>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.OsBulkInstallInfoVersionContext>[]>;
}
