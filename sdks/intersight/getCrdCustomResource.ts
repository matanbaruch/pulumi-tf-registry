// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCrdCustomResource(args?: GetCrdCustomResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetCrdCustomResourceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCrdCustomResource:getCrdCustomResource", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "dcLauncher": args.dcLauncher,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "image": args.image,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "namespace": args.namespace,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "port": args.port,
        "properties": args.properties,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "targetId": args.targetId,
        "targetMoid": args.targetMoid,
        "targetType": args.targetType,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCrdCustomResource.
 */
export interface GetCrdCustomResourceArgs {
    account?: inputs.GetCrdCustomResourceAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCrdCustomResourceAncestor[];
    classId?: string;
    createTime?: string;
    dcLauncher?: string;
    domainGroupMoid?: string;
    id?: string;
    image?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    namespace?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCrdCustomResourceParent;
    permissionResources?: inputs.GetCrdCustomResourcePermissionResource[];
    port?: number;
    properties?: inputs.GetCrdCustomResourceProperty[];
    sharedScope?: string;
    tags?: inputs.GetCrdCustomResourceTag[];
    targetId?: string;
    targetMoid?: string;
    targetType?: string;
    versionContext?: inputs.GetCrdCustomResourceVersionContext;
}

/**
 * A collection of values returned by getCrdCustomResource.
 */
export interface GetCrdCustomResourceResult {
    readonly account?: outputs.GetCrdCustomResourceAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCrdCustomResourceAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly dcLauncher?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly image?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly namespace?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCrdCustomResourceParent;
    readonly permissionResources?: outputs.GetCrdCustomResourcePermissionResource[];
    readonly port?: number;
    readonly properties?: outputs.GetCrdCustomResourceProperty[];
    readonly results: outputs.GetCrdCustomResourceResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetCrdCustomResourceTag[];
    readonly targetId?: string;
    readonly targetMoid?: string;
    readonly targetType?: string;
    readonly versionContext?: outputs.GetCrdCustomResourceVersionContext;
}
export function getCrdCustomResourceOutput(args?: GetCrdCustomResourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCrdCustomResourceResult> {
    return pulumi.output(args).apply((a: any) => getCrdCustomResource(a, opts))
}

/**
 * A collection of arguments for invoking getCrdCustomResource.
 */
export interface GetCrdCustomResourceOutputArgs {
    account?: pulumi.Input<inputs.GetCrdCustomResourceAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCrdCustomResourceAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dcLauncher?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    image?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCrdCustomResourceParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCrdCustomResourcePermissionResourceArgs>[]>;
    port?: pulumi.Input<number>;
    properties?: pulumi.Input<pulumi.Input<inputs.GetCrdCustomResourcePropertyArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCrdCustomResourceTagArgs>[]>;
    targetId?: pulumi.Input<string>;
    targetMoid?: pulumi.Input<string>;
    targetType?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetCrdCustomResourceVersionContextArgs>;
}
