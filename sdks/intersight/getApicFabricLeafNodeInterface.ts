// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApicFabricLeafNodeInterface(args?: GetApicFabricLeafNodeInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetApicFabricLeafNodeInterfaceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApicFabricLeafNodeInterface:getApicFabricLeafNodeInterface", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "fabricLeafNode": args.fabricLeafNode,
        "fabricLeafNodeDn": args.fabricLeafNodeDn,
        "fabricLeafNodeId": args.fabricLeafNodeId,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApicFabricLeafNodeInterface.
 */
export interface GetApicFabricLeafNodeInterfaceArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApicFabricLeafNodeInterfaceAncestor[];
    classId?: string;
    createTime?: string;
    dn?: string;
    domainGroupMoid?: string;
    fabricLeafNode?: inputs.GetApicFabricLeafNodeInterfaceFabricLeafNode;
    fabricLeafNodeDn?: string;
    fabricLeafNodeId?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApicFabricLeafNodeInterfaceParent;
    permissionResources?: inputs.GetApicFabricLeafNodeInterfacePermissionResource[];
    registeredDevice?: inputs.GetApicFabricLeafNodeInterfaceRegisteredDevice;
    sharedScope?: string;
    tags?: inputs.GetApicFabricLeafNodeInterfaceTag[];
    versionContext?: inputs.GetApicFabricLeafNodeInterfaceVersionContext;
}

/**
 * A collection of values returned by getApicFabricLeafNodeInterface.
 */
export interface GetApicFabricLeafNodeInterfaceResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApicFabricLeafNodeInterfaceAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly fabricLeafNode?: outputs.GetApicFabricLeafNodeInterfaceFabricLeafNode;
    readonly fabricLeafNodeDn?: string;
    readonly fabricLeafNodeId?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApicFabricLeafNodeInterfaceParent;
    readonly permissionResources?: outputs.GetApicFabricLeafNodeInterfacePermissionResource[];
    readonly registeredDevice?: outputs.GetApicFabricLeafNodeInterfaceRegisteredDevice;
    readonly results: outputs.GetApicFabricLeafNodeInterfaceResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetApicFabricLeafNodeInterfaceTag[];
    readonly versionContext?: outputs.GetApicFabricLeafNodeInterfaceVersionContext;
}
export function getApicFabricLeafNodeInterfaceOutput(args?: GetApicFabricLeafNodeInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApicFabricLeafNodeInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getApicFabricLeafNodeInterface(a, opts))
}

/**
 * A collection of arguments for invoking getApicFabricLeafNodeInterface.
 */
export interface GetApicFabricLeafNodeInterfaceOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApicFabricLeafNodeInterfaceAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    fabricLeafNode?: pulumi.Input<inputs.GetApicFabricLeafNodeInterfaceFabricLeafNodeArgs>;
    fabricLeafNodeDn?: pulumi.Input<string>;
    fabricLeafNodeId?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApicFabricLeafNodeInterfaceParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApicFabricLeafNodeInterfacePermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetApicFabricLeafNodeInterfaceRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApicFabricLeafNodeInterfaceTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetApicFabricLeafNodeInterfaceVersionContextArgs>;
}
