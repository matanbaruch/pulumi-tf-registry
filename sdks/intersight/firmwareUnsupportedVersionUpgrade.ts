// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirmwareUnsupportedVersionUpgrade extends pulumi.CustomResource {
    /**
     * Get an existing FirmwareUnsupportedVersionUpgrade resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirmwareUnsupportedVersionUpgradeState, opts?: pulumi.CustomResourceOptions): FirmwareUnsupportedVersionUpgrade {
        return new FirmwareUnsupportedVersionUpgrade(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/firmwareUnsupportedVersionUpgrade:FirmwareUnsupportedVersionUpgrade';

    /**
     * Returns true if the given object is an instance of FirmwareUnsupportedVersionUpgrade.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirmwareUnsupportedVersionUpgrade {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirmwareUnsupportedVersionUpgrade.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeAncestor[]>;
    /**
     * The checksum of the downloaded file as calculated by the download plugin after successfully downloading a file.
     */
    public readonly checksums!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeChecksum[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly devices!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeDevice[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly distributables!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeDistributable[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Any error encountered. Set to empty when download is in progress or completed.
     */
    public readonly downloadError!: pulumi.Output<string | undefined>;
    /**
     * The download progress of the file represented as a percentage between 0% and 100%. If progress reporting is not
     * possible, a value of -1 is sent.
     */
    public readonly downloadProgress!: pulumi.Output<number | undefined>;
    /**
     * The number of retries the plugin attempted before succeeding or failing the download.
     */
    public readonly downloadRetries!: pulumi.Output<number | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradePermissionResource[]>;
    /**
     * A reference to a equipmentPhysicalIdentity resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly physicalIdentities!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradePhysicalIdentity[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeTag[]>;
    /**
     * Workflow status of firmware upgrade. * `None` - Upgrade status is none when upgrade is in progress. * `Completed` -
     * Upgrade completed successfully. * `Failed` - Upgrade status is failed when upgrade has failed.
     */
    public readonly upgradeStatus!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.FirmwareUnsupportedVersionUpgradeVersionContext[]>;

    /**
     * Create a FirmwareUnsupportedVersionUpgrade resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirmwareUnsupportedVersionUpgradeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirmwareUnsupportedVersionUpgradeArgs | FirmwareUnsupportedVersionUpgradeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirmwareUnsupportedVersionUpgradeState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["checksums"] = state ? state.checksums : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["devices"] = state ? state.devices : undefined;
            resourceInputs["distributables"] = state ? state.distributables : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["downloadError"] = state ? state.downloadError : undefined;
            resourceInputs["downloadProgress"] = state ? state.downloadProgress : undefined;
            resourceInputs["downloadRetries"] = state ? state.downloadRetries : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["physicalIdentities"] = state ? state.physicalIdentities : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["upgradeStatus"] = state ? state.upgradeStatus : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as FirmwareUnsupportedVersionUpgradeArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["checksums"] = args ? args.checksums : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["devices"] = args ? args.devices : undefined;
            resourceInputs["distributables"] = args ? args.distributables : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["downloadError"] = args ? args.downloadError : undefined;
            resourceInputs["downloadProgress"] = args ? args.downloadProgress : undefined;
            resourceInputs["downloadRetries"] = args ? args.downloadRetries : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["physicalIdentities"] = args ? args.physicalIdentities : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["upgradeStatus"] = args ? args.upgradeStatus : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirmwareUnsupportedVersionUpgrade.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirmwareUnsupportedVersionUpgrade resources.
 */
export interface FirmwareUnsupportedVersionUpgradeState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeAncestor>[]>;
    /**
     * The checksum of the downloaded file as calculated by the download plugin after successfully downloading a file.
     */
    checksums?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeChecksum>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeDevice>[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    distributables?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeDistributable>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Any error encountered. Set to empty when download is in progress or completed.
     */
    downloadError?: pulumi.Input<string>;
    /**
     * The download progress of the file represented as a percentage between 0% and 100%. If progress reporting is not
     * possible, a value of -1 is sent.
     */
    downloadProgress?: pulumi.Input<number>;
    /**
     * The number of retries the plugin attempted before succeeding or failing the download.
     */
    downloadRetries?: pulumi.Input<number>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradePermissionResource>[]>;
    /**
     * A reference to a equipmentPhysicalIdentity resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    physicalIdentities?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradePhysicalIdentity>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeTag>[]>;
    /**
     * Workflow status of firmware upgrade. * `None` - Upgrade status is none when upgrade is in progress. * `Completed` -
     * Upgrade completed successfully. * `Failed` - Upgrade status is failed when upgrade has failed.
     */
    upgradeStatus?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeVersionContext>[]>;
}

/**
 * The set of arguments for constructing a FirmwareUnsupportedVersionUpgrade resource.
 */
export interface FirmwareUnsupportedVersionUpgradeArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeAncestor>[]>;
    /**
     * The checksum of the downloaded file as calculated by the download plugin after successfully downloading a file.
     */
    checksums?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeChecksum>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeDevice>[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    distributables?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeDistributable>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Any error encountered. Set to empty when download is in progress or completed.
     */
    downloadError?: pulumi.Input<string>;
    /**
     * The download progress of the file represented as a percentage between 0% and 100%. If progress reporting is not
     * possible, a value of -1 is sent.
     */
    downloadProgress?: pulumi.Input<number>;
    /**
     * The number of retries the plugin attempted before succeeding or failing the download.
     */
    downloadRetries?: pulumi.Input<number>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradePermissionResource>[]>;
    /**
     * A reference to a equipmentPhysicalIdentity resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    physicalIdentities?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradePhysicalIdentity>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeTag>[]>;
    /**
     * Workflow status of firmware upgrade. * `None` - Upgrade status is none when upgrade is in progress. * `Completed` -
     * Upgrade completed successfully. * `Failed` - Upgrade status is failed when upgrade has failed.
     */
    upgradeStatus?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FirmwareUnsupportedVersionUpgradeVersionContext>[]>;
}
