// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricSwitchProfile(args?: GetFabricSwitchProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricSwitchProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricSwitchProfile:getFabricSwitchProfile", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "actionParams": args.actionParams,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "assignedSwitch": args.assignedSwitch,
        "associatedSwitch": args.associatedSwitch,
        "classId": args.classId,
        "configChangeContext": args.configChangeContext,
        "configChangeDetails": args.configChangeDetails,
        "configChanges": args.configChanges,
        "configContext": args.configContext,
        "configResult": args.configResult,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyBuckets": args.policyBuckets,
        "runningWorkflows": args.runningWorkflows,
        "scheduledActions": args.scheduledActions,
        "sharedScope": args.sharedScope,
        "srcTemplate": args.srcTemplate,
        "switchClusterProfile": args.switchClusterProfile,
        "tags": args.tags,
        "type": args.type,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricSwitchProfile.
 */
export interface GetFabricSwitchProfileArgs {
    accountMoid?: string;
    action?: string;
    actionParams?: inputs.GetFabricSwitchProfileActionParam[];
    additionalProperties?: string;
    ancestors?: inputs.GetFabricSwitchProfileAncestor[];
    assignedSwitch?: inputs.GetFabricSwitchProfileAssignedSwitch;
    associatedSwitch?: inputs.GetFabricSwitchProfileAssociatedSwitch;
    classId?: string;
    configChangeContext?: inputs.GetFabricSwitchProfileConfigChangeContext;
    configChangeDetails?: inputs.GetFabricSwitchProfileConfigChangeDetail[];
    configChanges?: inputs.GetFabricSwitchProfileConfigChanges;
    configContext?: inputs.GetFabricSwitchProfileConfigContext;
    configResult?: inputs.GetFabricSwitchProfileConfigResult;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFabricSwitchProfileParent;
    permissionResources?: inputs.GetFabricSwitchProfilePermissionResource[];
    policyBuckets?: inputs.GetFabricSwitchProfilePolicyBucket[];
    runningWorkflows?: inputs.GetFabricSwitchProfileRunningWorkflow[];
    scheduledActions?: inputs.GetFabricSwitchProfileScheduledAction[];
    sharedScope?: string;
    srcTemplate?: inputs.GetFabricSwitchProfileSrcTemplate;
    switchClusterProfile?: inputs.GetFabricSwitchProfileSwitchClusterProfile;
    tags?: inputs.GetFabricSwitchProfileTag[];
    type?: string;
    versionContext?: inputs.GetFabricSwitchProfileVersionContext;
}

/**
 * A collection of values returned by getFabricSwitchProfile.
 */
export interface GetFabricSwitchProfileResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly actionParams?: outputs.GetFabricSwitchProfileActionParam[];
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFabricSwitchProfileAncestor[];
    readonly assignedSwitch?: outputs.GetFabricSwitchProfileAssignedSwitch;
    readonly associatedSwitch?: outputs.GetFabricSwitchProfileAssociatedSwitch;
    readonly classId?: string;
    readonly configChangeContext?: outputs.GetFabricSwitchProfileConfigChangeContext;
    readonly configChangeDetails?: outputs.GetFabricSwitchProfileConfigChangeDetail[];
    readonly configChanges?: outputs.GetFabricSwitchProfileConfigChanges;
    readonly configContext?: outputs.GetFabricSwitchProfileConfigContext;
    readonly configResult?: outputs.GetFabricSwitchProfileConfigResult;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricSwitchProfileParent;
    readonly permissionResources?: outputs.GetFabricSwitchProfilePermissionResource[];
    readonly policyBuckets?: outputs.GetFabricSwitchProfilePolicyBucket[];
    readonly results: outputs.GetFabricSwitchProfileResult[];
    readonly runningWorkflows?: outputs.GetFabricSwitchProfileRunningWorkflow[];
    readonly scheduledActions?: outputs.GetFabricSwitchProfileScheduledAction[];
    readonly sharedScope?: string;
    readonly srcTemplate?: outputs.GetFabricSwitchProfileSrcTemplate;
    readonly switchClusterProfile?: outputs.GetFabricSwitchProfileSwitchClusterProfile;
    readonly tags?: outputs.GetFabricSwitchProfileTag[];
    readonly type?: string;
    readonly versionContext?: outputs.GetFabricSwitchProfileVersionContext;
}
export function getFabricSwitchProfileOutput(args?: GetFabricSwitchProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricSwitchProfileResult> {
    return pulumi.output(args).apply((a: any) => getFabricSwitchProfile(a, opts))
}

/**
 * A collection of arguments for invoking getFabricSwitchProfile.
 */
export interface GetFabricSwitchProfileOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfileActionParamArgs>[]>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfileAncestorArgs>[]>;
    assignedSwitch?: pulumi.Input<inputs.GetFabricSwitchProfileAssignedSwitchArgs>;
    associatedSwitch?: pulumi.Input<inputs.GetFabricSwitchProfileAssociatedSwitchArgs>;
    classId?: pulumi.Input<string>;
    configChangeContext?: pulumi.Input<inputs.GetFabricSwitchProfileConfigChangeContextArgs>;
    configChangeDetails?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfileConfigChangeDetailArgs>[]>;
    configChanges?: pulumi.Input<inputs.GetFabricSwitchProfileConfigChangesArgs>;
    configContext?: pulumi.Input<inputs.GetFabricSwitchProfileConfigContextArgs>;
    configResult?: pulumi.Input<inputs.GetFabricSwitchProfileConfigResultArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricSwitchProfileParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfilePermissionResourceArgs>[]>;
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfilePolicyBucketArgs>[]>;
    runningWorkflows?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfileRunningWorkflowArgs>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfileScheduledActionArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    srcTemplate?: pulumi.Input<inputs.GetFabricSwitchProfileSrcTemplateArgs>;
    switchClusterProfile?: pulumi.Input<inputs.GetFabricSwitchProfileSwitchClusterProfileArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchProfileTagArgs>[]>;
    type?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetFabricSwitchProfileVersionContextArgs>;
}
