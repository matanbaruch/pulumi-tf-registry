// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VnicEthAdapterPolicy extends pulumi.CustomResource {
    /**
     * Get an existing VnicEthAdapterPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VnicEthAdapterPolicyState, opts?: pulumi.CustomResourceOptions): VnicEthAdapterPolicy {
        return new VnicEthAdapterPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/vnicEthAdapterPolicy:VnicEthAdapterPolicy';

    /**
     * Returns true if the given object is an instance of VnicEthAdapterPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VnicEthAdapterPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VnicEthAdapterPolicy.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * Enables advanced filtering on the interface.
     */
    public readonly advancedFilter!: pulumi.Output<boolean | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.VnicEthAdapterPolicyAncestor[]>;
    /**
     * Settings for Accelerated Receive Flow Steering to reduce the network latency and increase CPU cache efficiency.
     */
    public readonly arfsSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyArfsSetting[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * Completion Queue resource settings.
     */
    public readonly completionQueueSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyCompletionQueueSetting[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * GENEVE offload protocol allows you to create logical networks that span physical network boundaries by allowing any
     * information to be encoded in a packet and passed between tunnel endpoints.
     */
    public readonly geneveEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enables Interrupt Scaling on the interface.
     */
    public readonly interruptScaling!: pulumi.Output<boolean | undefined>;
    /**
     * Interrupt Settings for the virtual ethernet interface.
     */
    public readonly interruptSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyInterruptSetting[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network Virtualization using Generic Routing Encapsulation Settings.
     */
    public readonly nvgreSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyNvgreSetting[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.VnicEthAdapterPolicyOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.VnicEthAdapterPolicyParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.VnicEthAdapterPolicyPermissionResource[]>;
    /**
     * Settings for Precision Time Protocol which can provide precise time of day information and time-stampted inputs, as well
     * as scheduled and/or synchronized outputs for a variety of systems.
     */
    public readonly ptpSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyPtpSetting[]>;
    /**
     * Settings for RDMA over Converged Ethernet.
     */
    public readonly roceSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyRoceSetting[]>;
    /**
     * Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores.
     */
    public readonly rssHashSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyRssHashSetting[]>;
    /**
     * Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores.
     */
    public readonly rssSettings!: pulumi.Output<boolean | undefined>;
    /**
     * Receive Queue resouce settings.
     */
    public readonly rxQueueSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyRxQueueSetting[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.VnicEthAdapterPolicyTag[]>;
    /**
     * The TCP offload settings decide whether to offload the TCP related network functions from the CPU to the network
     * hardware or not.
     */
    public readonly tcpOffloadSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyTcpOffloadSetting[]>;
    /**
     * Transmit Queue resource settings.
     */
    public readonly txQueueSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyTxQueueSetting[]>;
    /**
     * Uplink Failback Timeout in seconds when uplink failover is enabled for a vNIC. After a vNIC has started using its
     * secondary interface, this setting controls how long the primary interface must be available before the system resumes
     * using the primary interface for the vNIC.
     */
    public readonly uplinkFailbackTimeout!: pulumi.Output<number | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.VnicEthAdapterPolicyVersionContext[]>;
    /**
     * Virtual Extensible LAN Protocol Settings.
     */
    public readonly vxlanSettings!: pulumi.Output<outputs.VnicEthAdapterPolicyVxlanSetting[]>;

    /**
     * Create a VnicEthAdapterPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VnicEthAdapterPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VnicEthAdapterPolicyArgs | VnicEthAdapterPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VnicEthAdapterPolicyState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["advancedFilter"] = state ? state.advancedFilter : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["arfsSettings"] = state ? state.arfsSettings : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["completionQueueSettings"] = state ? state.completionQueueSettings : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["geneveEnabled"] = state ? state.geneveEnabled : undefined;
            resourceInputs["interruptScaling"] = state ? state.interruptScaling : undefined;
            resourceInputs["interruptSettings"] = state ? state.interruptSettings : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nvgreSettings"] = state ? state.nvgreSettings : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["ptpSettings"] = state ? state.ptpSettings : undefined;
            resourceInputs["roceSettings"] = state ? state.roceSettings : undefined;
            resourceInputs["rssHashSettings"] = state ? state.rssHashSettings : undefined;
            resourceInputs["rssSettings"] = state ? state.rssSettings : undefined;
            resourceInputs["rxQueueSettings"] = state ? state.rxQueueSettings : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tcpOffloadSettings"] = state ? state.tcpOffloadSettings : undefined;
            resourceInputs["txQueueSettings"] = state ? state.txQueueSettings : undefined;
            resourceInputs["uplinkFailbackTimeout"] = state ? state.uplinkFailbackTimeout : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["vxlanSettings"] = state ? state.vxlanSettings : undefined;
        } else {
            const args = argsOrState as VnicEthAdapterPolicyArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["advancedFilter"] = args ? args.advancedFilter : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["arfsSettings"] = args ? args.arfsSettings : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["completionQueueSettings"] = args ? args.completionQueueSettings : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["geneveEnabled"] = args ? args.geneveEnabled : undefined;
            resourceInputs["interruptScaling"] = args ? args.interruptScaling : undefined;
            resourceInputs["interruptSettings"] = args ? args.interruptSettings : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nvgreSettings"] = args ? args.nvgreSettings : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["ptpSettings"] = args ? args.ptpSettings : undefined;
            resourceInputs["roceSettings"] = args ? args.roceSettings : undefined;
            resourceInputs["rssHashSettings"] = args ? args.rssHashSettings : undefined;
            resourceInputs["rssSettings"] = args ? args.rssSettings : undefined;
            resourceInputs["rxQueueSettings"] = args ? args.rxQueueSettings : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tcpOffloadSettings"] = args ? args.tcpOffloadSettings : undefined;
            resourceInputs["txQueueSettings"] = args ? args.txQueueSettings : undefined;
            resourceInputs["uplinkFailbackTimeout"] = args ? args.uplinkFailbackTimeout : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["vxlanSettings"] = args ? args.vxlanSettings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VnicEthAdapterPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VnicEthAdapterPolicy resources.
 */
export interface VnicEthAdapterPolicyState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * Enables advanced filtering on the interface.
     */
    advancedFilter?: pulumi.Input<boolean>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyAncestor>[]>;
    /**
     * Settings for Accelerated Receive Flow Steering to reduce the network latency and increase CPU cache efficiency.
     */
    arfsSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyArfsSetting>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Completion Queue resource settings.
     */
    completionQueueSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyCompletionQueueSetting>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * GENEVE offload protocol allows you to create logical networks that span physical network boundaries by allowing any
     * information to be encoded in a packet and passed between tunnel endpoints.
     */
    geneveEnabled?: pulumi.Input<boolean>;
    /**
     * Enables Interrupt Scaling on the interface.
     */
    interruptScaling?: pulumi.Input<boolean>;
    /**
     * Interrupt Settings for the virtual ethernet interface.
     */
    interruptSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyInterruptSetting>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Network Virtualization using Generic Routing Encapsulation Settings.
     */
    nvgreSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyNvgreSetting>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyPermissionResource>[]>;
    /**
     * Settings for Precision Time Protocol which can provide precise time of day information and time-stampted inputs, as well
     * as scheduled and/or synchronized outputs for a variety of systems.
     */
    ptpSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyPtpSetting>[]>;
    /**
     * Settings for RDMA over Converged Ethernet.
     */
    roceSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyRoceSetting>[]>;
    /**
     * Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores.
     */
    rssHashSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyRssHashSetting>[]>;
    /**
     * Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores.
     */
    rssSettings?: pulumi.Input<boolean>;
    /**
     * Receive Queue resouce settings.
     */
    rxQueueSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyRxQueueSetting>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyTag>[]>;
    /**
     * The TCP offload settings decide whether to offload the TCP related network functions from the CPU to the network
     * hardware or not.
     */
    tcpOffloadSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyTcpOffloadSetting>[]>;
    /**
     * Transmit Queue resource settings.
     */
    txQueueSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyTxQueueSetting>[]>;
    /**
     * Uplink Failback Timeout in seconds when uplink failover is enabled for a vNIC. After a vNIC has started using its
     * secondary interface, this setting controls how long the primary interface must be available before the system resumes
     * using the primary interface for the vNIC.
     */
    uplinkFailbackTimeout?: pulumi.Input<number>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyVersionContext>[]>;
    /**
     * Virtual Extensible LAN Protocol Settings.
     */
    vxlanSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyVxlanSetting>[]>;
}

/**
 * The set of arguments for constructing a VnicEthAdapterPolicy resource.
 */
export interface VnicEthAdapterPolicyArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * Enables advanced filtering on the interface.
     */
    advancedFilter?: pulumi.Input<boolean>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyAncestor>[]>;
    /**
     * Settings for Accelerated Receive Flow Steering to reduce the network latency and increase CPU cache efficiency.
     */
    arfsSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyArfsSetting>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Completion Queue resource settings.
     */
    completionQueueSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyCompletionQueueSetting>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * GENEVE offload protocol allows you to create logical networks that span physical network boundaries by allowing any
     * information to be encoded in a packet and passed between tunnel endpoints.
     */
    geneveEnabled?: pulumi.Input<boolean>;
    /**
     * Enables Interrupt Scaling on the interface.
     */
    interruptScaling?: pulumi.Input<boolean>;
    /**
     * Interrupt Settings for the virtual ethernet interface.
     */
    interruptSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyInterruptSetting>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Network Virtualization using Generic Routing Encapsulation Settings.
     */
    nvgreSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyNvgreSetting>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyPermissionResource>[]>;
    /**
     * Settings for Precision Time Protocol which can provide precise time of day information and time-stampted inputs, as well
     * as scheduled and/or synchronized outputs for a variety of systems.
     */
    ptpSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyPtpSetting>[]>;
    /**
     * Settings for RDMA over Converged Ethernet.
     */
    roceSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyRoceSetting>[]>;
    /**
     * Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores.
     */
    rssHashSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyRssHashSetting>[]>;
    /**
     * Receive Side Scaling allows the incoming traffic to be spread across multiple CPU cores.
     */
    rssSettings?: pulumi.Input<boolean>;
    /**
     * Receive Queue resouce settings.
     */
    rxQueueSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyRxQueueSetting>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyTag>[]>;
    /**
     * The TCP offload settings decide whether to offload the TCP related network functions from the CPU to the network
     * hardware or not.
     */
    tcpOffloadSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyTcpOffloadSetting>[]>;
    /**
     * Transmit Queue resource settings.
     */
    txQueueSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyTxQueueSetting>[]>;
    /**
     * Uplink Failback Timeout in seconds when uplink failover is enabled for a vNIC. After a vNIC has started using its
     * secondary interface, this setting controls how long the primary interface must be available before the system resumes
     * using the primary interface for the vNIC.
     */
    uplinkFailbackTimeout?: pulumi.Input<number>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyVersionContext>[]>;
    /**
     * Virtual Extensible LAN Protocol Settings.
     */
    vxlanSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthAdapterPolicyVxlanSetting>[]>;
}
