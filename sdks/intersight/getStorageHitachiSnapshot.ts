// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageHitachiSnapshot(args?: GetStorageHitachiSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageHitachiSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageHitachiSnapshot:getStorageHitachiSnapshot", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "array": args.array,
        "classId": args.classId,
        "concordanceRate": args.concordanceRate,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "isConsistencyGroup": args.isConsistencyGroup,
        "isMultistageable": args.isMultistageable,
        "isRedirectOnWrite": args.isRedirectOnWrite,
        "modTime": args.modTime,
        "moid": args.moid,
        "muNumber": args.muNumber,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "pvolLdevId": args.pvolLdevId,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "snapshotGroupName": args.snapshotGroupName,
        "snapshotPoolId": args.snapshotPoolId,
        "splitTime": args.splitTime,
        "status": args.status,
        "svolLdevId": args.svolLdevId,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageHitachiSnapshot.
 */
export interface GetStorageHitachiSnapshotArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageHitachiSnapshotAncestor[];
    array?: inputs.GetStorageHitachiSnapshotArray;
    classId?: string;
    concordanceRate?: number;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    isConsistencyGroup?: boolean;
    isMultistageable?: boolean;
    isRedirectOnWrite?: boolean;
    modTime?: string;
    moid?: string;
    muNumber?: number;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStorageHitachiSnapshotParent;
    permissionResources?: inputs.GetStorageHitachiSnapshotPermissionResource[];
    pvolLdevId?: number;
    registeredDevice?: inputs.GetStorageHitachiSnapshotRegisteredDevice;
    sharedScope?: string;
    snapshotGroupName?: string;
    snapshotPoolId?: number;
    splitTime?: string;
    status?: string;
    svolLdevId?: number;
    tags?: inputs.GetStorageHitachiSnapshotTag[];
    versionContext?: inputs.GetStorageHitachiSnapshotVersionContext;
}

/**
 * A collection of values returned by getStorageHitachiSnapshot.
 */
export interface GetStorageHitachiSnapshotResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageHitachiSnapshotAncestor[];
    readonly array?: outputs.GetStorageHitachiSnapshotArray;
    readonly classId?: string;
    readonly concordanceRate?: number;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly isConsistencyGroup?: boolean;
    readonly isMultistageable?: boolean;
    readonly isRedirectOnWrite?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly muNumber?: number;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageHitachiSnapshotParent;
    readonly permissionResources?: outputs.GetStorageHitachiSnapshotPermissionResource[];
    readonly pvolLdevId?: number;
    readonly registeredDevice?: outputs.GetStorageHitachiSnapshotRegisteredDevice;
    readonly results: outputs.GetStorageHitachiSnapshotResult[];
    readonly sharedScope?: string;
    readonly snapshotGroupName?: string;
    readonly snapshotPoolId?: number;
    readonly splitTime?: string;
    readonly status?: string;
    readonly svolLdevId?: number;
    readonly tags?: outputs.GetStorageHitachiSnapshotTag[];
    readonly versionContext?: outputs.GetStorageHitachiSnapshotVersionContext;
}
export function getStorageHitachiSnapshotOutput(args?: GetStorageHitachiSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageHitachiSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getStorageHitachiSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getStorageHitachiSnapshot.
 */
export interface GetStorageHitachiSnapshotOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiSnapshotAncestorArgs>[]>;
    array?: pulumi.Input<inputs.GetStorageHitachiSnapshotArrayArgs>;
    classId?: pulumi.Input<string>;
    concordanceRate?: pulumi.Input<number>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isConsistencyGroup?: pulumi.Input<boolean>;
    isMultistageable?: pulumi.Input<boolean>;
    isRedirectOnWrite?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    muNumber?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageHitachiSnapshotParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiSnapshotPermissionResourceArgs>[]>;
    pvolLdevId?: pulumi.Input<number>;
    registeredDevice?: pulumi.Input<inputs.GetStorageHitachiSnapshotRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    snapshotGroupName?: pulumi.Input<string>;
    snapshotPoolId?: pulumi.Input<number>;
    splitTime?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    svolLdevId?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiSnapshotTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetStorageHitachiSnapshotVersionContextArgs>;
}
