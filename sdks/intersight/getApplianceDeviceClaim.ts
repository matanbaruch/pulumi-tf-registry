// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceDeviceClaim(args?: GetApplianceDeviceClaimArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceDeviceClaimResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceDeviceClaim:getApplianceDeviceClaim", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "deviceId": args.deviceId,
        "domainGroupMoid": args.domainGroupMoid,
        "hostname": args.hostname,
        "id": args.id,
        "isPasswordSet": args.isPasswordSet,
        "isRenew": args.isRenew,
        "message": args.message,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "password": args.password,
        "permissionResources": args.permissionResources,
        "platformType": args.platformType,
        "requestId": args.requestId,
        "reservation": args.reservation,
        "securityToken": args.securityToken,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "username": args.username,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceDeviceClaim.
 */
export interface GetApplianceDeviceClaimArgs {
    account?: inputs.GetApplianceDeviceClaimAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceDeviceClaimAncestor[];
    classId?: string;
    createTime?: string;
    deviceId?: string;
    domainGroupMoid?: string;
    hostname?: string;
    id?: string;
    isPasswordSet?: boolean;
    isRenew?: boolean;
    message?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApplianceDeviceClaimParent;
    password?: string;
    permissionResources?: inputs.GetApplianceDeviceClaimPermissionResource[];
    platformType?: string;
    requestId?: string;
    reservation?: inputs.GetApplianceDeviceClaimReservation;
    securityToken?: string;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetApplianceDeviceClaimTag[];
    username?: string;
    versionContext?: inputs.GetApplianceDeviceClaimVersionContext;
}

/**
 * A collection of values returned by getApplianceDeviceClaim.
 */
export interface GetApplianceDeviceClaimResult {
    readonly account?: outputs.GetApplianceDeviceClaimAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceDeviceClaimAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly deviceId?: string;
    readonly domainGroupMoid?: string;
    readonly hostname?: string;
    readonly id: string;
    readonly isPasswordSet?: boolean;
    readonly isRenew?: boolean;
    readonly message?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceDeviceClaimParent;
    readonly password?: string;
    readonly permissionResources?: outputs.GetApplianceDeviceClaimPermissionResource[];
    readonly platformType?: string;
    readonly requestId?: string;
    readonly reservation?: outputs.GetApplianceDeviceClaimReservation;
    readonly results: outputs.GetApplianceDeviceClaimResult[];
    readonly securityToken?: string;
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetApplianceDeviceClaimTag[];
    readonly username?: string;
    readonly versionContext?: outputs.GetApplianceDeviceClaimVersionContext;
}
export function getApplianceDeviceClaimOutput(args?: GetApplianceDeviceClaimOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceDeviceClaimResult> {
    return pulumi.output(args).apply((a: any) => getApplianceDeviceClaim(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceDeviceClaim.
 */
export interface GetApplianceDeviceClaimOutputArgs {
    account?: pulumi.Input<inputs.GetApplianceDeviceClaimAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceDeviceClaimAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deviceId?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isPasswordSet?: pulumi.Input<boolean>;
    isRenew?: pulumi.Input<boolean>;
    message?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceDeviceClaimParentArgs>;
    password?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceDeviceClaimPermissionResourceArgs>[]>;
    platformType?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    reservation?: pulumi.Input<inputs.GetApplianceDeviceClaimReservationArgs>;
    securityToken?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceDeviceClaimTagArgs>[]>;
    username?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetApplianceDeviceClaimVersionContextArgs>;
}
