// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamAppRegistration(args?: GetIamAppRegistrationArgs, opts?: pulumi.InvokeOptions): Promise<GetIamAppRegistrationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamAppRegistration:getIamAppRegistration", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "adminStatus": args.adminStatus,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clientId": args.clientId,
        "clientName": args.clientName,
        "clientSecret": args.clientSecret,
        "clientType": args.clientType,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "expiryDateTime": args.expiryDateTime,
        "grantTypes": args.grantTypes,
        "id": args.id,
        "isNeverExpiring": args.isNeverExpiring,
        "lastUsedIp": args.lastUsedIp,
        "lastUsedTime": args.lastUsedTime,
        "modTime": args.modTime,
        "moid": args.moid,
        "oauthTokens": args.oauthTokens,
        "objectType": args.objectType,
        "operStatus": args.operStatus,
        "owners": args.owners,
        "parent": args.parent,
        "permission": args.permission,
        "permissionResources": args.permissionResources,
        "redirectUris": args.redirectUris,
        "renewClientSecret": args.renewClientSecret,
        "responseTypes": args.responseTypes,
        "revocationTimestamp": args.revocationTimestamp,
        "revoke": args.revoke,
        "roles": args.roles,
        "sharedScope": args.sharedScope,
        "showConsentScreen": args.showConsentScreen,
        "startTime": args.startTime,
        "tags": args.tags,
        "user": args.user,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamAppRegistration.
 */
export interface GetIamAppRegistrationArgs {
    account?: inputs.GetIamAppRegistrationAccount;
    accountMoid?: string;
    additionalProperties?: string;
    adminStatus?: string;
    ancestors?: inputs.GetIamAppRegistrationAncestor[];
    classId?: string;
    clientId?: string;
    clientName?: string;
    clientSecret?: string;
    clientType?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    expiryDateTime?: string;
    grantTypes?: string[];
    id?: string;
    isNeverExpiring?: boolean;
    lastUsedIp?: string;
    lastUsedTime?: string;
    modTime?: string;
    moid?: string;
    oauthTokens?: inputs.GetIamAppRegistrationOauthToken[];
    objectType?: string;
    operStatus?: string;
    owners?: string[];
    parent?: inputs.GetIamAppRegistrationParent;
    permission?: inputs.GetIamAppRegistrationPermission;
    permissionResources?: inputs.GetIamAppRegistrationPermissionResource[];
    redirectUris?: string[];
    renewClientSecret?: boolean;
    responseTypes?: string[];
    revocationTimestamp?: string;
    revoke?: boolean;
    roles?: inputs.GetIamAppRegistrationRole[];
    sharedScope?: string;
    showConsentScreen?: boolean;
    startTime?: string;
    tags?: inputs.GetIamAppRegistrationTag[];
    user?: inputs.GetIamAppRegistrationUser;
    versionContext?: inputs.GetIamAppRegistrationVersionContext;
}

/**
 * A collection of values returned by getIamAppRegistration.
 */
export interface GetIamAppRegistrationResult {
    readonly account?: outputs.GetIamAppRegistrationAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly adminStatus?: string;
    readonly ancestors?: outputs.GetIamAppRegistrationAncestor[];
    readonly classId?: string;
    readonly clientId?: string;
    readonly clientName?: string;
    readonly clientSecret?: string;
    readonly clientType?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly expiryDateTime?: string;
    readonly grantTypes?: string[];
    readonly id: string;
    readonly isNeverExpiring?: boolean;
    readonly lastUsedIp?: string;
    readonly lastUsedTime?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly oauthTokens?: outputs.GetIamAppRegistrationOauthToken[];
    readonly objectType?: string;
    readonly operStatus?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamAppRegistrationParent;
    readonly permission?: outputs.GetIamAppRegistrationPermission;
    readonly permissionResources?: outputs.GetIamAppRegistrationPermissionResource[];
    readonly redirectUris?: string[];
    readonly renewClientSecret?: boolean;
    readonly responseTypes?: string[];
    readonly results: outputs.GetIamAppRegistrationResult[];
    readonly revocationTimestamp?: string;
    readonly revoke?: boolean;
    readonly roles?: outputs.GetIamAppRegistrationRole[];
    readonly sharedScope?: string;
    readonly showConsentScreen?: boolean;
    readonly startTime?: string;
    readonly tags?: outputs.GetIamAppRegistrationTag[];
    readonly user?: outputs.GetIamAppRegistrationUser;
    readonly versionContext?: outputs.GetIamAppRegistrationVersionContext;
}
export function getIamAppRegistrationOutput(args?: GetIamAppRegistrationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamAppRegistrationResult> {
    return pulumi.output(args).apply((a: any) => getIamAppRegistration(a, opts))
}

/**
 * A collection of arguments for invoking getIamAppRegistration.
 */
export interface GetIamAppRegistrationOutputArgs {
    account?: pulumi.Input<inputs.GetIamAppRegistrationAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    adminStatus?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamAppRegistrationAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientName?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientType?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    expiryDateTime?: pulumi.Input<string>;
    grantTypes?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    isNeverExpiring?: pulumi.Input<boolean>;
    lastUsedIp?: pulumi.Input<string>;
    lastUsedTime?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    oauthTokens?: pulumi.Input<pulumi.Input<inputs.GetIamAppRegistrationOauthTokenArgs>[]>;
    objectType?: pulumi.Input<string>;
    operStatus?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamAppRegistrationParentArgs>;
    permission?: pulumi.Input<inputs.GetIamAppRegistrationPermissionArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamAppRegistrationPermissionResourceArgs>[]>;
    redirectUris?: pulumi.Input<pulumi.Input<string>[]>;
    renewClientSecret?: pulumi.Input<boolean>;
    responseTypes?: pulumi.Input<pulumi.Input<string>[]>;
    revocationTimestamp?: pulumi.Input<string>;
    revoke?: pulumi.Input<boolean>;
    roles?: pulumi.Input<pulumi.Input<inputs.GetIamAppRegistrationRoleArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    showConsentScreen?: pulumi.Input<boolean>;
    startTime?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamAppRegistrationTagArgs>[]>;
    user?: pulumi.Input<inputs.GetIamAppRegistrationUserArgs>;
    versionContext?: pulumi.Input<inputs.GetIamAppRegistrationVersionContextArgs>;
}
