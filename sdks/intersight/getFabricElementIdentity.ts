// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricElementIdentity(args?: GetFabricElementIdentityArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricElementIdentityResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricElementIdentity:getFabricElementIdentity", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "adminAction": args.adminAction,
        "adminActionState": args.adminActionState,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "customPermissionResources": args.customPermissionResources,
        "domain": args.domain,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "identifier": args.identifier,
        "lifecycleModTime": args.lifecycleModTime,
        "modTime": args.modTime,
        "model": args.model,
        "moid": args.moid,
        "name": args.name,
        "networkElement": args.networkElement,
        "nrLifecycle": args.nrLifecycle,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "partialDeploymentStatus": args.partialDeploymentStatus,
        "permissionResources": args.permissionResources,
        "postDeployActions": args.postDeployActions,
        "registeredDevice": args.registeredDevice,
        "replacementTarget": args.replacementTarget,
        "replacementType": args.replacementType,
        "serial": args.serial,
        "sharedScope": args.sharedScope,
        "switchId": args.switchId,
        "tags": args.tags,
        "vendor": args.vendor,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricElementIdentity.
 */
export interface GetFabricElementIdentityArgs {
    accountMoid?: string;
    additionalProperties?: string;
    adminAction?: string;
    adminActionState?: string;
    ancestors?: inputs.GetFabricElementIdentityAncestor[];
    classId?: string;
    createTime?: string;
    customPermissionResources?: inputs.GetFabricElementIdentityCustomPermissionResource[];
    domain?: string;
    domainGroupMoid?: string;
    id?: string;
    identifier?: number;
    lifecycleModTime?: string;
    modTime?: string;
    model?: string;
    moid?: string;
    name?: string;
    networkElement?: inputs.GetFabricElementIdentityNetworkElement;
    nrLifecycle?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFabricElementIdentityParent;
    partialDeploymentStatus?: string;
    permissionResources?: inputs.GetFabricElementIdentityPermissionResource[];
    postDeployActions?: string[];
    registeredDevice?: inputs.GetFabricElementIdentityRegisteredDevice;
    replacementTarget?: inputs.GetFabricElementIdentityReplacementTarget;
    replacementType?: string;
    serial?: string;
    sharedScope?: string;
    switchId?: string;
    tags?: inputs.GetFabricElementIdentityTag[];
    vendor?: string;
    versionContext?: inputs.GetFabricElementIdentityVersionContext;
}

/**
 * A collection of values returned by getFabricElementIdentity.
 */
export interface GetFabricElementIdentityResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly adminAction?: string;
    readonly adminActionState?: string;
    readonly ancestors?: outputs.GetFabricElementIdentityAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly customPermissionResources?: outputs.GetFabricElementIdentityCustomPermissionResource[];
    readonly domain?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly identifier?: number;
    readonly lifecycleModTime?: string;
    readonly modTime?: string;
    readonly model?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly networkElement?: outputs.GetFabricElementIdentityNetworkElement;
    readonly nrLifecycle?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricElementIdentityParent;
    readonly partialDeploymentStatus?: string;
    readonly permissionResources?: outputs.GetFabricElementIdentityPermissionResource[];
    readonly postDeployActions?: string[];
    readonly registeredDevice?: outputs.GetFabricElementIdentityRegisteredDevice;
    readonly replacementTarget?: outputs.GetFabricElementIdentityReplacementTarget;
    readonly replacementType?: string;
    readonly results: outputs.GetFabricElementIdentityResult[];
    readonly serial?: string;
    readonly sharedScope?: string;
    readonly switchId?: string;
    readonly tags?: outputs.GetFabricElementIdentityTag[];
    readonly vendor?: string;
    readonly versionContext?: outputs.GetFabricElementIdentityVersionContext;
}
export function getFabricElementIdentityOutput(args?: GetFabricElementIdentityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricElementIdentityResult> {
    return pulumi.output(args).apply((a: any) => getFabricElementIdentity(a, opts))
}

/**
 * A collection of arguments for invoking getFabricElementIdentity.
 */
export interface GetFabricElementIdentityOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    adminAction?: pulumi.Input<string>;
    adminActionState?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricElementIdentityAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    customPermissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricElementIdentityCustomPermissionResourceArgs>[]>;
    domain?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identifier?: pulumi.Input<number>;
    lifecycleModTime?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    networkElement?: pulumi.Input<inputs.GetFabricElementIdentityNetworkElementArgs>;
    nrLifecycle?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricElementIdentityParentArgs>;
    partialDeploymentStatus?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricElementIdentityPermissionResourceArgs>[]>;
    postDeployActions?: pulumi.Input<pulumi.Input<string>[]>;
    registeredDevice?: pulumi.Input<inputs.GetFabricElementIdentityRegisteredDeviceArgs>;
    replacementTarget?: pulumi.Input<inputs.GetFabricElementIdentityReplacementTargetArgs>;
    replacementType?: pulumi.Input<string>;
    serial?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    switchId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricElementIdentityTagArgs>[]>;
    vendor?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetFabricElementIdentityVersionContextArgs>;
}
