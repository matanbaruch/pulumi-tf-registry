// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiaapiApicFieldNotice(args?: GetNiaapiApicFieldNoticeArgs, opts?: pulumi.InvokeOptions): Promise<GetNiaapiApicFieldNoticeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiaapiApicFieldNotice:getNiaapiApicFieldNotice", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "bugid": args.bugid,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "fieldNoticeDesc": args.fieldNoticeDesc,
        "fieldNoticeId": args.fieldNoticeId,
        "fieldNoticeUrl": args.fieldNoticeUrl,
        "headline": args.headline,
        "hwpid": args.hwpid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "revisionInfos": args.revisionInfos,
        "sharedScope": args.sharedScope,
        "swRelease": args.swRelease,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "workaroundUrl": args.workaroundUrl,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiaapiApicFieldNotice.
 */
export interface GetNiaapiApicFieldNoticeArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiaapiApicFieldNoticeAncestor[];
    bugid?: string;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    fieldNoticeDesc?: string;
    fieldNoticeId?: string;
    fieldNoticeUrl?: string;
    headline?: string;
    hwpid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiaapiApicFieldNoticeParent;
    permissionResources?: inputs.GetNiaapiApicFieldNoticePermissionResource[];
    revisionInfos?: inputs.GetNiaapiApicFieldNoticeRevisionInfo[];
    sharedScope?: string;
    swRelease?: string;
    tags?: inputs.GetNiaapiApicFieldNoticeTag[];
    versionContext?: inputs.GetNiaapiApicFieldNoticeVersionContext;
    workaroundUrl?: string;
}

/**
 * A collection of values returned by getNiaapiApicFieldNotice.
 */
export interface GetNiaapiApicFieldNoticeResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiaapiApicFieldNoticeAncestor[];
    readonly bugid?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly fieldNoticeDesc?: string;
    readonly fieldNoticeId?: string;
    readonly fieldNoticeUrl?: string;
    readonly headline?: string;
    readonly hwpid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiaapiApicFieldNoticeParent;
    readonly permissionResources?: outputs.GetNiaapiApicFieldNoticePermissionResource[];
    readonly results: outputs.GetNiaapiApicFieldNoticeResult[];
    readonly revisionInfos?: outputs.GetNiaapiApicFieldNoticeRevisionInfo[];
    readonly sharedScope?: string;
    readonly swRelease?: string;
    readonly tags?: outputs.GetNiaapiApicFieldNoticeTag[];
    readonly versionContext?: outputs.GetNiaapiApicFieldNoticeVersionContext;
    readonly workaroundUrl?: string;
}
export function getNiaapiApicFieldNoticeOutput(args?: GetNiaapiApicFieldNoticeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiaapiApicFieldNoticeResult> {
    return pulumi.output(args).apply((a: any) => getNiaapiApicFieldNotice(a, opts))
}

/**
 * A collection of arguments for invoking getNiaapiApicFieldNotice.
 */
export interface GetNiaapiApicFieldNoticeOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiaapiApicFieldNoticeAncestorArgs>[]>;
    bugid?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    fieldNoticeDesc?: pulumi.Input<string>;
    fieldNoticeId?: pulumi.Input<string>;
    fieldNoticeUrl?: pulumi.Input<string>;
    headline?: pulumi.Input<string>;
    hwpid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiaapiApicFieldNoticeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiaapiApicFieldNoticePermissionResourceArgs>[]>;
    revisionInfos?: pulumi.Input<pulumi.Input<inputs.GetNiaapiApicFieldNoticeRevisionInfoArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    swRelease?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiaapiApicFieldNoticeTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetNiaapiApicFieldNoticeVersionContextArgs>;
    workaroundUrl?: pulumi.Input<string>;
}
