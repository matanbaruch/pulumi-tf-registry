// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMarketplaceUseCase(args?: GetMarketplaceUseCaseArgs, opts?: pulumi.InvokeOptions): Promise<GetMarketplaceUseCaseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getMarketplaceUseCase:getMarketplaceUseCase", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "dependencies": args.dependencies,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "locales": args.locales,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "uniqueName": args.uniqueName,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMarketplaceUseCase.
 */
export interface GetMarketplaceUseCaseArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetMarketplaceUseCaseAncestor[];
    catalog?: inputs.GetMarketplaceUseCaseCatalog;
    classId?: string;
    createTime?: string;
    dependencies?: inputs.GetMarketplaceUseCaseDependency[];
    domainGroupMoid?: string;
    id?: string;
    locales?: inputs.GetMarketplaceUseCaseLocale[];
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetMarketplaceUseCaseParent;
    permissionResources?: inputs.GetMarketplaceUseCasePermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetMarketplaceUseCaseTag[];
    uniqueName?: string;
    versionContext?: inputs.GetMarketplaceUseCaseVersionContext;
}

/**
 * A collection of values returned by getMarketplaceUseCase.
 */
export interface GetMarketplaceUseCaseResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetMarketplaceUseCaseAncestor[];
    readonly catalog?: outputs.GetMarketplaceUseCaseCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly dependencies?: outputs.GetMarketplaceUseCaseDependency[];
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly locales?: outputs.GetMarketplaceUseCaseLocale[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetMarketplaceUseCaseParent;
    readonly permissionResources?: outputs.GetMarketplaceUseCasePermissionResource[];
    readonly results: outputs.GetMarketplaceUseCaseResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetMarketplaceUseCaseTag[];
    readonly uniqueName?: string;
    readonly versionContext?: outputs.GetMarketplaceUseCaseVersionContext;
}
export function getMarketplaceUseCaseOutput(args?: GetMarketplaceUseCaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMarketplaceUseCaseResult> {
    return pulumi.output(args).apply((a: any) => getMarketplaceUseCase(a, opts))
}

/**
 * A collection of arguments for invoking getMarketplaceUseCase.
 */
export interface GetMarketplaceUseCaseOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetMarketplaceUseCaseAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetMarketplaceUseCaseCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dependencies?: pulumi.Input<pulumi.Input<inputs.GetMarketplaceUseCaseDependencyArgs>[]>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    locales?: pulumi.Input<pulumi.Input<inputs.GetMarketplaceUseCaseLocaleArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetMarketplaceUseCaseParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetMarketplaceUseCasePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetMarketplaceUseCaseTagArgs>[]>;
    uniqueName?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetMarketplaceUseCaseVersionContextArgs>;
}
