// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBulkMoCloner(args?: GetBulkMoClonerArgs, opts?: pulumi.InvokeOptions): Promise<GetBulkMoClonerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getBulkMoCloner:getBulkMoCloner", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "asyncResult": args.asyncResult,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "excludeProperties": args.excludeProperties,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "responses": args.responses,
        "sharedScope": args.sharedScope,
        "sources": args.sources,
        "tags": args.tags,
        "targets": args.targets,
        "versionContext": args.versionContext,
        "workflowNameSuffix": args.workflowNameSuffix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBulkMoCloner.
 */
export interface GetBulkMoClonerArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetBulkMoClonerAncestor[];
    asyncResult?: inputs.GetBulkMoClonerAsyncResult;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    excludeProperties?: string[];
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    organization?: inputs.GetBulkMoClonerOrganization;
    owners?: string[];
    parent?: inputs.GetBulkMoClonerParent;
    permissionResources?: inputs.GetBulkMoClonerPermissionResource[];
    responses?: inputs.GetBulkMoClonerResponse[];
    sharedScope?: string;
    sources?: inputs.GetBulkMoClonerSource[];
    tags?: inputs.GetBulkMoClonerTag[];
    targets?: inputs.GetBulkMoClonerTarget[];
    versionContext?: inputs.GetBulkMoClonerVersionContext;
    workflowNameSuffix?: string;
}

/**
 * A collection of values returned by getBulkMoCloner.
 */
export interface GetBulkMoClonerResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetBulkMoClonerAncestor[];
    readonly asyncResult?: outputs.GetBulkMoClonerAsyncResult;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly excludeProperties?: string[];
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetBulkMoClonerOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetBulkMoClonerParent;
    readonly permissionResources?: outputs.GetBulkMoClonerPermissionResource[];
    readonly responses?: outputs.GetBulkMoClonerResponse[];
    readonly results: outputs.GetBulkMoClonerResult[];
    readonly sharedScope?: string;
    readonly sources?: outputs.GetBulkMoClonerSource[];
    readonly tags?: outputs.GetBulkMoClonerTag[];
    readonly targets?: outputs.GetBulkMoClonerTarget[];
    readonly versionContext?: outputs.GetBulkMoClonerVersionContext;
    readonly workflowNameSuffix?: string;
}
export function getBulkMoClonerOutput(args?: GetBulkMoClonerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBulkMoClonerResult> {
    return pulumi.output(args).apply((a: any) => getBulkMoCloner(a, opts))
}

/**
 * A collection of arguments for invoking getBulkMoCloner.
 */
export interface GetBulkMoClonerOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetBulkMoClonerAncestorArgs>[]>;
    asyncResult?: pulumi.Input<inputs.GetBulkMoClonerAsyncResultArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    excludeProperties?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetBulkMoClonerOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetBulkMoClonerParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetBulkMoClonerPermissionResourceArgs>[]>;
    responses?: pulumi.Input<pulumi.Input<inputs.GetBulkMoClonerResponseArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    sources?: pulumi.Input<pulumi.Input<inputs.GetBulkMoClonerSourceArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetBulkMoClonerTagArgs>[]>;
    targets?: pulumi.Input<pulumi.Input<inputs.GetBulkMoClonerTargetArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetBulkMoClonerVersionContextArgs>;
    workflowNameSuffix?: pulumi.Input<string>;
}
