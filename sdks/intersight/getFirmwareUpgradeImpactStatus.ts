// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirmwareUpgradeImpactStatus(args?: GetFirmwareUpgradeImpactStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetFirmwareUpgradeImpactStatusResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFirmwareUpgradeImpactStatus:getFirmwareUpgradeImpactStatus", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "components": args.components,
        "computationState": args.computationState,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "excludeComponents": args.excludeComponents,
        "id": args.id,
        "impacts": args.impacts,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "summary": args.summary,
        "tags": args.tags,
        "upgrade": args.upgrade,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirmwareUpgradeImpactStatus.
 */
export interface GetFirmwareUpgradeImpactStatusArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetFirmwareUpgradeImpactStatusAncestor[];
    classId?: string;
    components?: string[];
    computationState?: string;
    createTime?: string;
    domainGroupMoid?: string;
    excludeComponents?: string[];
    id?: string;
    impacts?: inputs.GetFirmwareUpgradeImpactStatusImpact[];
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFirmwareUpgradeImpactStatusParent;
    permissionResources?: inputs.GetFirmwareUpgradeImpactStatusPermissionResource[];
    sharedScope?: string;
    summary?: string;
    tags?: inputs.GetFirmwareUpgradeImpactStatusTag[];
    upgrade?: inputs.GetFirmwareUpgradeImpactStatusUpgrade;
    versionContext?: inputs.GetFirmwareUpgradeImpactStatusVersionContext;
}

/**
 * A collection of values returned by getFirmwareUpgradeImpactStatus.
 */
export interface GetFirmwareUpgradeImpactStatusResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFirmwareUpgradeImpactStatusAncestor[];
    readonly classId?: string;
    readonly components?: string[];
    readonly computationState?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly excludeComponents?: string[];
    readonly id: string;
    readonly impacts?: outputs.GetFirmwareUpgradeImpactStatusImpact[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFirmwareUpgradeImpactStatusParent;
    readonly permissionResources?: outputs.GetFirmwareUpgradeImpactStatusPermissionResource[];
    readonly results: outputs.GetFirmwareUpgradeImpactStatusResult[];
    readonly sharedScope?: string;
    readonly summary?: string;
    readonly tags?: outputs.GetFirmwareUpgradeImpactStatusTag[];
    readonly upgrade?: outputs.GetFirmwareUpgradeImpactStatusUpgrade;
    readonly versionContext?: outputs.GetFirmwareUpgradeImpactStatusVersionContext;
}
export function getFirmwareUpgradeImpactStatusOutput(args?: GetFirmwareUpgradeImpactStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirmwareUpgradeImpactStatusResult> {
    return pulumi.output(args).apply((a: any) => getFirmwareUpgradeImpactStatus(a, opts))
}

/**
 * A collection of arguments for invoking getFirmwareUpgradeImpactStatus.
 */
export interface GetFirmwareUpgradeImpactStatusOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    components?: pulumi.Input<pulumi.Input<string>[]>;
    computationState?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    excludeComponents?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    impacts?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusImpactArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusTagArgs>[]>;
    upgrade?: pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusUpgradeArgs>;
    versionContext?: pulumi.Input<inputs.GetFirmwareUpgradeImpactStatusVersionContextArgs>;
}
