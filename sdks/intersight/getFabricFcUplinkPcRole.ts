// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricFcUplinkPcRole(args?: GetFabricFcUplinkPcRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricFcUplinkPcRoleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricFcUplinkPcRole:getFabricFcUplinkPcRole", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "adminSpeed": args.adminSpeed,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "fillPattern": args.fillPattern,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "pcId": args.pcId,
        "permissionResources": args.permissionResources,
        "portPolicy": args.portPolicy,
        "ports": args.ports,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "vsanId": args.vsanId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricFcUplinkPcRole.
 */
export interface GetFabricFcUplinkPcRoleArgs {
    accountMoid?: string;
    additionalProperties?: string;
    adminSpeed?: string;
    ancestors?: inputs.GetFabricFcUplinkPcRoleAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    fillPattern?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFabricFcUplinkPcRoleParent;
    pcId?: number;
    permissionResources?: inputs.GetFabricFcUplinkPcRolePermissionResource[];
    portPolicy?: inputs.GetFabricFcUplinkPcRolePortPolicy;
    ports?: inputs.GetFabricFcUplinkPcRolePort[];
    sharedScope?: string;
    tags?: inputs.GetFabricFcUplinkPcRoleTag[];
    versionContext?: inputs.GetFabricFcUplinkPcRoleVersionContext;
    vsanId?: number;
}

/**
 * A collection of values returned by getFabricFcUplinkPcRole.
 */
export interface GetFabricFcUplinkPcRoleResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly adminSpeed?: string;
    readonly ancestors?: outputs.GetFabricFcUplinkPcRoleAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly fillPattern?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricFcUplinkPcRoleParent;
    readonly pcId?: number;
    readonly permissionResources?: outputs.GetFabricFcUplinkPcRolePermissionResource[];
    readonly portPolicy?: outputs.GetFabricFcUplinkPcRolePortPolicy;
    readonly ports?: outputs.GetFabricFcUplinkPcRolePort[];
    readonly results: outputs.GetFabricFcUplinkPcRoleResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetFabricFcUplinkPcRoleTag[];
    readonly versionContext?: outputs.GetFabricFcUplinkPcRoleVersionContext;
    readonly vsanId?: number;
}
export function getFabricFcUplinkPcRoleOutput(args?: GetFabricFcUplinkPcRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricFcUplinkPcRoleResult> {
    return pulumi.output(args).apply((a: any) => getFabricFcUplinkPcRole(a, opts))
}

/**
 * A collection of arguments for invoking getFabricFcUplinkPcRole.
 */
export interface GetFabricFcUplinkPcRoleOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    adminSpeed?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricFcUplinkPcRoleAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    fillPattern?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricFcUplinkPcRoleParentArgs>;
    pcId?: pulumi.Input<number>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricFcUplinkPcRolePermissionResourceArgs>[]>;
    portPolicy?: pulumi.Input<inputs.GetFabricFcUplinkPcRolePortPolicyArgs>;
    ports?: pulumi.Input<pulumi.Input<inputs.GetFabricFcUplinkPcRolePortArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricFcUplinkPcRoleTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetFabricFcUplinkPcRoleVersionContextArgs>;
    vsanId?: pulumi.Input<number>;
}
