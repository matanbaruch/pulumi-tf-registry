// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexClusterHealthCheckExecutionSnapshot(args?: GetHyperflexClusterHealthCheckExecutionSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexClusterHealthCheckExecutionSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexClusterHealthCheckExecutionSnapshot:getHyperflexClusterHealthCheckExecutionSnapshot", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "executionContext": args.executionContext,
        "hxCluster": args.hxCluster,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "timestamp": args.timestamp,
        "versionContext": args.versionContext,
        "workflow": args.workflow,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexClusterHealthCheckExecutionSnapshot.
 */
export interface GetHyperflexClusterHealthCheckExecutionSnapshotArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    executionContext?: string;
    hxCluster?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotHxCluster;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotParent;
    permissionResources?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotPermissionResource[];
    registeredDevice?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotRegisteredDevice;
    sharedScope?: string;
    tags?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotTag[];
    timestamp?: string;
    versionContext?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotVersionContext;
    workflow?: inputs.GetHyperflexClusterHealthCheckExecutionSnapshotWorkflow;
}

/**
 * A collection of values returned by getHyperflexClusterHealthCheckExecutionSnapshot.
 */
export interface GetHyperflexClusterHealthCheckExecutionSnapshotResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly executionContext?: string;
    readonly hxCluster?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotHxCluster;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotParent;
    readonly permissionResources?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotPermissionResource[];
    readonly registeredDevice?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotRegisteredDevice;
    readonly results: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotTag[];
    readonly timestamp?: string;
    readonly versionContext?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotVersionContext;
    readonly workflow?: outputs.GetHyperflexClusterHealthCheckExecutionSnapshotWorkflow;
}
export function getHyperflexClusterHealthCheckExecutionSnapshotOutput(args?: GetHyperflexClusterHealthCheckExecutionSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexClusterHealthCheckExecutionSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexClusterHealthCheckExecutionSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexClusterHealthCheckExecutionSnapshot.
 */
export interface GetHyperflexClusterHealthCheckExecutionSnapshotOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    executionContext?: pulumi.Input<string>;
    hxCluster?: pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotHxClusterArgs>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotTagArgs>[]>;
    timestamp?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotVersionContextArgs>;
    workflow?: pulumi.Input<inputs.GetHyperflexClusterHealthCheckExecutionSnapshotWorkflowArgs>;
}
