// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IamIdp extends pulumi.CustomResource {
    /**
     * Get an existing IamIdp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamIdpState, opts?: pulumi.CustomResourceOptions): IamIdp {
        return new IamIdp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/iamIdp:IamIdp';

    /**
     * Returns true if the given object is an instance of IamIdp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamIdp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamIdp.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly accounts!: pulumi.Output<outputs.IamIdpAccount[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.IamIdpAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Email domain name of the user for this IdP. When a user enters an email during login in the Intersight home page, the
     * IdP is picked by matching this domain name with the email domain name for authentication.
     */
    public readonly domainName!: pulumi.Output<string | undefined>;
    public readonly domainNames!: pulumi.Output<string[]>;
    /**
     * Setting that indicates whether 'Single Logout (SLO)' has been enabled for this IdP.
     */
    public readonly enableSingleLogout!: pulumi.Output<boolean | undefined>;
    /**
     * The Entity ID of the IdP. In SAML, the entity ID uniquely identifies the IdP or Service Provider.
     */
    public readonly idpEntityId!: pulumi.Output<string>;
    /**
     * A reference to a iamLdapPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly ldapPolicies!: pulumi.Output<outputs.IamIdpLdapPolicy[]>;
    /**
     * SAML metadata of the IdP.
     */
    public readonly metadata!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The name of the Identity Provider, for example Cisco, Okta, or OneID.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.IamIdpParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.IamIdpPermissionResource[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * When users attempt the Account URL login with an unverified Domain Name, they get a warning stating that they are
     * logging in using an unverified Domain Name. Enable the slider if you do not wish to see the warning message.
     */
    public readonly skipWarning!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a iamSystem resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly systems!: pulumi.Output<outputs.IamIdpSystem[]>;
    public readonly tags!: pulumi.Output<outputs.IamIdpTag[]>;
    /**
     * Authentication protocol used by the IdP. * `saml` - Use SAML as the authentication protocol for sign-on. * `oidc` - Open
     * ID connect to be used as an authentication protocol for sign-on. * `local` - The local authentication method to be used
     * for sign-on. Local type is set to default for the Intersight Appliance IdP.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to iamUserPreference resources.
     */
    public readonly userPreferences!: pulumi.Output<outputs.IamIdpUserPreference[]>;
    /**
     * An array of relationships to iamUserSetting resources.
     */
    public readonly userSettings!: pulumi.Output<outputs.IamIdpUserSetting[]>;
    /**
     * An array of relationships to iamUserGroup resources.
     */
    public readonly usergroups!: pulumi.Output<outputs.IamIdpUsergroup[]>;
    /**
     * An array of relationships to iamUser resources.
     */
    public readonly users!: pulumi.Output<outputs.IamIdpUser[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.IamIdpVersionContext[]>;

    /**
     * Create a IamIdp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IamIdpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamIdpArgs | IamIdpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamIdpState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["accounts"] = state ? state.accounts : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["enableSingleLogout"] = state ? state.enableSingleLogout : undefined;
            resourceInputs["idpEntityId"] = state ? state.idpEntityId : undefined;
            resourceInputs["ldapPolicies"] = state ? state.ldapPolicies : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["skipWarning"] = state ? state.skipWarning : undefined;
            resourceInputs["systems"] = state ? state.systems : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userPreferences"] = state ? state.userPreferences : undefined;
            resourceInputs["userSettings"] = state ? state.userSettings : undefined;
            resourceInputs["usergroups"] = state ? state.usergroups : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as IamIdpArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["accounts"] = args ? args.accounts : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["enableSingleLogout"] = args ? args.enableSingleLogout : undefined;
            resourceInputs["idpEntityId"] = args ? args.idpEntityId : undefined;
            resourceInputs["ldapPolicies"] = args ? args.ldapPolicies : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["skipWarning"] = args ? args.skipWarning : undefined;
            resourceInputs["systems"] = args ? args.systems : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userPreferences"] = args ? args.userPreferences : undefined;
            resourceInputs["userSettings"] = args ? args.userSettings : undefined;
            resourceInputs["usergroups"] = args ? args.usergroups : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamIdp.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamIdp resources.
 */
export interface IamIdpState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.IamIdpAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.IamIdpAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Email domain name of the user for this IdP. When a user enters an email during login in the Intersight home page, the
     * IdP is picked by matching this domain name with the email domain name for authentication.
     */
    domainName?: pulumi.Input<string>;
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Setting that indicates whether 'Single Logout (SLO)' has been enabled for this IdP.
     */
    enableSingleLogout?: pulumi.Input<boolean>;
    /**
     * The Entity ID of the IdP. In SAML, the entity ID uniquely identifies the IdP or Service Provider.
     */
    idpEntityId?: pulumi.Input<string>;
    /**
     * A reference to a iamLdapPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    ldapPolicies?: pulumi.Input<pulumi.Input<inputs.IamIdpLdapPolicy>[]>;
    /**
     * SAML metadata of the IdP.
     */
    metadata?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the Identity Provider, for example Cisco, Okta, or OneID.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.IamIdpParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.IamIdpPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * When users attempt the Account URL login with an unverified Domain Name, they get a warning stating that they are
     * logging in using an unverified Domain Name. Enable the slider if you do not wish to see the warning message.
     */
    skipWarning?: pulumi.Input<boolean>;
    /**
     * A reference to a iamSystem resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    systems?: pulumi.Input<pulumi.Input<inputs.IamIdpSystem>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.IamIdpTag>[]>;
    /**
     * Authentication protocol used by the IdP. * `saml` - Use SAML as the authentication protocol for sign-on. * `oidc` - Open
     * ID connect to be used as an authentication protocol for sign-on. * `local` - The local authentication method to be used
     * for sign-on. Local type is set to default for the Intersight Appliance IdP.
     */
    type?: pulumi.Input<string>;
    /**
     * An array of relationships to iamUserPreference resources.
     */
    userPreferences?: pulumi.Input<pulumi.Input<inputs.IamIdpUserPreference>[]>;
    /**
     * An array of relationships to iamUserSetting resources.
     */
    userSettings?: pulumi.Input<pulumi.Input<inputs.IamIdpUserSetting>[]>;
    /**
     * An array of relationships to iamUserGroup resources.
     */
    usergroups?: pulumi.Input<pulumi.Input<inputs.IamIdpUsergroup>[]>;
    /**
     * An array of relationships to iamUser resources.
     */
    users?: pulumi.Input<pulumi.Input<inputs.IamIdpUser>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.IamIdpVersionContext>[]>;
}

/**
 * The set of arguments for constructing a IamIdp resource.
 */
export interface IamIdpArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.IamIdpAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.IamIdpAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Email domain name of the user for this IdP. When a user enters an email during login in the Intersight home page, the
     * IdP is picked by matching this domain name with the email domain name for authentication.
     */
    domainName?: pulumi.Input<string>;
    domainNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Setting that indicates whether 'Single Logout (SLO)' has been enabled for this IdP.
     */
    enableSingleLogout?: pulumi.Input<boolean>;
    /**
     * The Entity ID of the IdP. In SAML, the entity ID uniquely identifies the IdP or Service Provider.
     */
    idpEntityId?: pulumi.Input<string>;
    /**
     * A reference to a iamLdapPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    ldapPolicies?: pulumi.Input<pulumi.Input<inputs.IamIdpLdapPolicy>[]>;
    /**
     * SAML metadata of the IdP.
     */
    metadata?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the Identity Provider, for example Cisco, Okta, or OneID.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.IamIdpParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.IamIdpPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * When users attempt the Account URL login with an unverified Domain Name, they get a warning stating that they are
     * logging in using an unverified Domain Name. Enable the slider if you do not wish to see the warning message.
     */
    skipWarning?: pulumi.Input<boolean>;
    /**
     * A reference to a iamSystem resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    systems?: pulumi.Input<pulumi.Input<inputs.IamIdpSystem>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.IamIdpTag>[]>;
    /**
     * Authentication protocol used by the IdP. * `saml` - Use SAML as the authentication protocol for sign-on. * `oidc` - Open
     * ID connect to be used as an authentication protocol for sign-on. * `local` - The local authentication method to be used
     * for sign-on. Local type is set to default for the Intersight Appliance IdP.
     */
    type?: pulumi.Input<string>;
    /**
     * An array of relationships to iamUserPreference resources.
     */
    userPreferences?: pulumi.Input<pulumi.Input<inputs.IamIdpUserPreference>[]>;
    /**
     * An array of relationships to iamUserSetting resources.
     */
    userSettings?: pulumi.Input<pulumi.Input<inputs.IamIdpUserSetting>[]>;
    /**
     * An array of relationships to iamUserGroup resources.
     */
    usergroups?: pulumi.Input<pulumi.Input<inputs.IamIdpUsergroup>[]>;
    /**
     * An array of relationships to iamUser resources.
     */
    users?: pulumi.Input<pulumi.Input<inputs.IamIdpUser>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.IamIdpVersionContext>[]>;
}
