// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessPolicyInventory(args?: GetAccessPolicyInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getAccessPolicyInventory:getAccessPolicyInventory", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "addressType": args.addressType,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "configurationType": args.configurationType,
        "createTime": args.createTime,
        "description": args.description,
        "deviceMoId": args.deviceMoId,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inbandIpPool": args.inbandIpPool,
        "inbandVlan": args.inbandVlan,
        "inbandVrf": args.inbandVrf,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "outOfBandIpPool": args.outOfBandIpPool,
        "outOfBandVrf": args.outOfBandVrf,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "targetMo": args.targetMo,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessPolicyInventory.
 */
export interface GetAccessPolicyInventoryArgs {
    accountMoid?: string;
    additionalProperties?: string;
    addressType?: inputs.GetAccessPolicyInventoryAddressType;
    ancestors?: inputs.GetAccessPolicyInventoryAncestor[];
    classId?: string;
    configurationType?: inputs.GetAccessPolicyInventoryConfigurationType;
    createTime?: string;
    description?: string;
    deviceMoId?: string;
    domainGroupMoid?: string;
    id?: string;
    inbandIpPool?: inputs.GetAccessPolicyInventoryInbandIpPool;
    inbandVlan?: number;
    inbandVrf?: inputs.GetAccessPolicyInventoryInbandVrf;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    outOfBandIpPool?: inputs.GetAccessPolicyInventoryOutOfBandIpPool;
    outOfBandVrf?: inputs.GetAccessPolicyInventoryOutOfBandVrf;
    owners?: string[];
    parent?: inputs.GetAccessPolicyInventoryParent;
    permissionResources?: inputs.GetAccessPolicyInventoryPermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetAccessPolicyInventoryTag[];
    targetMo?: inputs.GetAccessPolicyInventoryTargetMo;
    versionContext?: inputs.GetAccessPolicyInventoryVersionContext;
}

/**
 * A collection of values returned by getAccessPolicyInventory.
 */
export interface GetAccessPolicyInventoryResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly addressType?: outputs.GetAccessPolicyInventoryAddressType;
    readonly ancestors?: outputs.GetAccessPolicyInventoryAncestor[];
    readonly classId?: string;
    readonly configurationType?: outputs.GetAccessPolicyInventoryConfigurationType;
    readonly createTime?: string;
    readonly description?: string;
    readonly deviceMoId?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inbandIpPool?: outputs.GetAccessPolicyInventoryInbandIpPool;
    readonly inbandVlan?: number;
    readonly inbandVrf?: outputs.GetAccessPolicyInventoryInbandVrf;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly outOfBandIpPool?: outputs.GetAccessPolicyInventoryOutOfBandIpPool;
    readonly outOfBandVrf?: outputs.GetAccessPolicyInventoryOutOfBandVrf;
    readonly owners?: string[];
    readonly parent?: outputs.GetAccessPolicyInventoryParent;
    readonly permissionResources?: outputs.GetAccessPolicyInventoryPermissionResource[];
    readonly results: outputs.GetAccessPolicyInventoryResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetAccessPolicyInventoryTag[];
    readonly targetMo?: outputs.GetAccessPolicyInventoryTargetMo;
    readonly versionContext?: outputs.GetAccessPolicyInventoryVersionContext;
}
export function getAccessPolicyInventoryOutput(args?: GetAccessPolicyInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPolicyInventoryResult> {
    return pulumi.output(args).apply((a: any) => getAccessPolicyInventory(a, opts))
}

/**
 * A collection of arguments for invoking getAccessPolicyInventory.
 */
export interface GetAccessPolicyInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    addressType?: pulumi.Input<inputs.GetAccessPolicyInventoryAddressTypeArgs>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetAccessPolicyInventoryAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    configurationType?: pulumi.Input<inputs.GetAccessPolicyInventoryConfigurationTypeArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inbandIpPool?: pulumi.Input<inputs.GetAccessPolicyInventoryInbandIpPoolArgs>;
    inbandVlan?: pulumi.Input<number>;
    inbandVrf?: pulumi.Input<inputs.GetAccessPolicyInventoryInbandVrfArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    outOfBandIpPool?: pulumi.Input<inputs.GetAccessPolicyInventoryOutOfBandIpPoolArgs>;
    outOfBandVrf?: pulumi.Input<inputs.GetAccessPolicyInventoryOutOfBandVrfArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetAccessPolicyInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetAccessPolicyInventoryPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetAccessPolicyInventoryTagArgs>[]>;
    targetMo?: pulumi.Input<inputs.GetAccessPolicyInventoryTargetMoArgs>;
    versionContext?: pulumi.Input<inputs.GetAccessPolicyInventoryVersionContextArgs>;
}
