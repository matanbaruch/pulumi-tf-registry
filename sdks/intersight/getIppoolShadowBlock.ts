// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIppoolShadowBlock(args?: GetIppoolShadowBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetIppoolShadowBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIppoolShadowBlock:getIppoolShadowBlock", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "freeBlockCount": args.freeBlockCount,
        "id": args.id,
        "ipType": args.ipType,
        "ipV4Block": args.ipV4Block,
        "ipV6Block": args.ipV6Block,
        "modTime": args.modTime,
        "moid": args.moid,
        "nextIdAllocator": args.nextIdAllocator,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "pool": args.pool,
        "reservations": args.reservations,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIppoolShadowBlock.
 */
export interface GetIppoolShadowBlockArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIppoolShadowBlockAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    freeBlockCount?: number;
    id?: string;
    ipType?: string;
    ipV4Block?: inputs.GetIppoolShadowBlockIpV4Block;
    ipV6Block?: inputs.GetIppoolShadowBlockIpV6Block;
    modTime?: string;
    moid?: string;
    nextIdAllocator?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIppoolShadowBlockParent;
    permissionResources?: inputs.GetIppoolShadowBlockPermissionResource[];
    pool?: inputs.GetIppoolShadowBlockPool;
    reservations?: inputs.GetIppoolShadowBlockReservation[];
    sharedScope?: string;
    tags?: inputs.GetIppoolShadowBlockTag[];
    versionContext?: inputs.GetIppoolShadowBlockVersionContext;
    vrf?: inputs.GetIppoolShadowBlockVrf;
}

/**
 * A collection of values returned by getIppoolShadowBlock.
 */
export interface GetIppoolShadowBlockResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIppoolShadowBlockAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly freeBlockCount?: number;
    readonly id: string;
    readonly ipType?: string;
    readonly ipV4Block?: outputs.GetIppoolShadowBlockIpV4Block;
    readonly ipV6Block?: outputs.GetIppoolShadowBlockIpV6Block;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nextIdAllocator?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIppoolShadowBlockParent;
    readonly permissionResources?: outputs.GetIppoolShadowBlockPermissionResource[];
    readonly pool?: outputs.GetIppoolShadowBlockPool;
    readonly reservations?: outputs.GetIppoolShadowBlockReservation[];
    readonly results: outputs.GetIppoolShadowBlockResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetIppoolShadowBlockTag[];
    readonly versionContext?: outputs.GetIppoolShadowBlockVersionContext;
    readonly vrf?: outputs.GetIppoolShadowBlockVrf;
}
export function getIppoolShadowBlockOutput(args?: GetIppoolShadowBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIppoolShadowBlockResult> {
    return pulumi.output(args).apply((a: any) => getIppoolShadowBlock(a, opts))
}

/**
 * A collection of arguments for invoking getIppoolShadowBlock.
 */
export interface GetIppoolShadowBlockOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIppoolShadowBlockAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    freeBlockCount?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    ipType?: pulumi.Input<string>;
    ipV4Block?: pulumi.Input<inputs.GetIppoolShadowBlockIpV4BlockArgs>;
    ipV6Block?: pulumi.Input<inputs.GetIppoolShadowBlockIpV6BlockArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nextIdAllocator?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIppoolShadowBlockParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIppoolShadowBlockPermissionResourceArgs>[]>;
    pool?: pulumi.Input<inputs.GetIppoolShadowBlockPoolArgs>;
    reservations?: pulumi.Input<pulumi.Input<inputs.GetIppoolShadowBlockReservationArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIppoolShadowBlockTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetIppoolShadowBlockVersionContextArgs>;
    vrf?: pulumi.Input<inputs.GetIppoolShadowBlockVrfArgs>;
}
