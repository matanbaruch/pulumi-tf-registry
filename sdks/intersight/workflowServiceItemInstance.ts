// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WorkflowServiceItemInstance extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowServiceItemInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowServiceItemInstanceState, opts?: pulumi.CustomResourceOptions): WorkflowServiceItemInstance {
        return new WorkflowServiceItemInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/workflowServiceItemInstance:WorkflowServiceItemInstance';

    /**
     * Returns true if the given object is an instance of WorkflowServiceItemInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowServiceItemInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowServiceItemInstance.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.WorkflowServiceItemInstanceAncestor[]>;
    /**
     * An array of relationships to workflowCatalogServiceRequest resources.
     */
    public readonly catalogServiceRequests!: pulumi.Output<outputs.WorkflowServiceItemInstanceCatalogServiceRequest[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The description for this service item instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * A reference to a iamIdpReference resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly idpReferences!: pulumi.Output<outputs.WorkflowServiceItemInstanceIdpReference[]>;
    /**
     * A reference to a iamIdp resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly idps!: pulumi.Output<outputs.WorkflowServiceItemInstanceIdp[]>;
    /**
     * A user friendly short name to identify the resource. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen
     * (-), period (.), colon (:), space ( ) or an underscore (_).
     */
    public readonly label!: pulumi.Output<string | undefined>;
    /**
     * Last status of the service item instance which will be reverted when an ongoing service item action instance is aborted.
     * * `NotCreated` - The service item is not yet created and it is in a draft mode. A service item instance can be deleted
     * in this state. * `InProgress` - An action is in progress and until that action has reached a final state, another action
     * cannot be started. * `Failed` - The last action on the service item instance failed and corrective measures need to be
     * taken to bring the service item instance back to valid state. * `Okay` - The last action on the service item instance
     * completed and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and
     * can be safely deleted. A service item instance in any other state after it has been created cannot be deleted until it
     * has been decommissioned.
     */
    public readonly lastStatus!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * A name of the service item instance. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.) or
     * an underscore (_).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.WorkflowServiceItemInstanceOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.WorkflowServiceItemInstanceParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.WorkflowServiceItemInstancePermissionResource[]>;
    /**
     * Lifecycle state of service item instance. * `Creating` - The service item is not yet created and creation action is in
     * progress. * `Created` - The service item is created. * `Decommissioning` - The service item is not yet decommissioned
     * and decommission action is in progress. * `Decommissioned` - The service item is decommisioned. * `Deleting` - The
     * service item is not yet deleted and deletion action is in progress. * `Deleted` - The service item is deleted. *
     * `Failed` - The service item action is failed to perform the operation.
     */
    public readonly resourcelifecycleStatus!: pulumi.Output<string>;
    /**
     * A reference to a workflowServiceItemDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly serviceItemDefinitions!: pulumi.Output<outputs.WorkflowServiceItemInstanceServiceItemDefinition[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Status of the service item instance which controls the actions that can be performed on this instance. * `NotCreated` -
     * The service item is not yet created and it is in a draft mode. A service item instance can be deleted in this state. *
     * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be
     * started. * `Failed` - The last action on the service item instance failed and corrective measures need to be taken to
     * bring the service item instance back to valid state. * `Okay` - The last action on the service item instance completed
     * and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and can be
     * safely deleted. A service item instance in any other state after it has been created cannot be deleted until it has been
     * decommissioned.
     */
    public readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.WorkflowServiceItemInstanceTag[]>;
    /**
     * The user identifier which indicates the user that started this workflow.
     */
    public readonly userIdOrEmail!: pulumi.Output<string>;
    /**
     * A reference to a iamUser resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly users!: pulumi.Output<outputs.WorkflowServiceItemInstanceUser[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.WorkflowServiceItemInstanceVersionContext[]>;

    /**
     * Create a WorkflowServiceItemInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkflowServiceItemInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkflowServiceItemInstanceArgs | WorkflowServiceItemInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkflowServiceItemInstanceState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["catalogServiceRequests"] = state ? state.catalogServiceRequests : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["idpReferences"] = state ? state.idpReferences : undefined;
            resourceInputs["idps"] = state ? state.idps : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["lastStatus"] = state ? state.lastStatus : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["resourcelifecycleStatus"] = state ? state.resourcelifecycleStatus : undefined;
            resourceInputs["serviceItemDefinitions"] = state ? state.serviceItemDefinitions : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userIdOrEmail"] = state ? state.userIdOrEmail : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as WorkflowServiceItemInstanceArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["catalogServiceRequests"] = args ? args.catalogServiceRequests : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["idpReferences"] = args ? args.idpReferences : undefined;
            resourceInputs["idps"] = args ? args.idps : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["lastStatus"] = args ? args.lastStatus : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["resourcelifecycleStatus"] = args ? args.resourcelifecycleStatus : undefined;
            resourceInputs["serviceItemDefinitions"] = args ? args.serviceItemDefinitions : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userIdOrEmail"] = args ? args.userIdOrEmail : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkflowServiceItemInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkflowServiceItemInstance resources.
 */
export interface WorkflowServiceItemInstanceState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceAncestor>[]>;
    /**
     * An array of relationships to workflowCatalogServiceRequest resources.
     */
    catalogServiceRequests?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceCatalogServiceRequest>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description for this service item instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamIdpReference resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    idpReferences?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceIdpReference>[]>;
    /**
     * A reference to a iamIdp resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    idps?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceIdp>[]>;
    /**
     * A user friendly short name to identify the resource. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen
     * (-), period (.), colon (:), space ( ) or an underscore (_).
     */
    label?: pulumi.Input<string>;
    /**
     * Last status of the service item instance which will be reverted when an ongoing service item action instance is aborted.
     * * `NotCreated` - The service item is not yet created and it is in a draft mode. A service item instance can be deleted
     * in this state. * `InProgress` - An action is in progress and until that action has reached a final state, another action
     * cannot be started. * `Failed` - The last action on the service item instance failed and corrective measures need to be
     * taken to bring the service item instance back to valid state. * `Okay` - The last action on the service item instance
     * completed and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and
     * can be safely deleted. A service item instance in any other state after it has been created cannot be deleted until it
     * has been decommissioned.
     */
    lastStatus?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * A name of the service item instance. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.) or
     * an underscore (_).
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstancePermissionResource>[]>;
    /**
     * Lifecycle state of service item instance. * `Creating` - The service item is not yet created and creation action is in
     * progress. * `Created` - The service item is created. * `Decommissioning` - The service item is not yet decommissioned
     * and decommission action is in progress. * `Decommissioned` - The service item is decommisioned. * `Deleting` - The
     * service item is not yet deleted and deletion action is in progress. * `Deleted` - The service item is deleted. *
     * `Failed` - The service item action is failed to perform the operation.
     */
    resourcelifecycleStatus?: pulumi.Input<string>;
    /**
     * A reference to a workflowServiceItemDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    serviceItemDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceServiceItemDefinition>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Status of the service item instance which controls the actions that can be performed on this instance. * `NotCreated` -
     * The service item is not yet created and it is in a draft mode. A service item instance can be deleted in this state. *
     * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be
     * started. * `Failed` - The last action on the service item instance failed and corrective measures need to be taken to
     * bring the service item instance back to valid state. * `Okay` - The last action on the service item instance completed
     * and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and can be
     * safely deleted. A service item instance in any other state after it has been created cannot be deleted until it has been
     * decommissioned.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceTag>[]>;
    /**
     * The user identifier which indicates the user that started this workflow.
     */
    userIdOrEmail?: pulumi.Input<string>;
    /**
     * A reference to a iamUser resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    users?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceUser>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceVersionContext>[]>;
}

/**
 * The set of arguments for constructing a WorkflowServiceItemInstance resource.
 */
export interface WorkflowServiceItemInstanceArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceAncestor>[]>;
    /**
     * An array of relationships to workflowCatalogServiceRequest resources.
     */
    catalogServiceRequests?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceCatalogServiceRequest>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description for this service item instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamIdpReference resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    idpReferences?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceIdpReference>[]>;
    /**
     * A reference to a iamIdp resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    idps?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceIdp>[]>;
    /**
     * A user friendly short name to identify the resource. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen
     * (-), period (.), colon (:), space ( ) or an underscore (_).
     */
    label?: pulumi.Input<string>;
    /**
     * Last status of the service item instance which will be reverted when an ongoing service item action instance is aborted.
     * * `NotCreated` - The service item is not yet created and it is in a draft mode. A service item instance can be deleted
     * in this state. * `InProgress` - An action is in progress and until that action has reached a final state, another action
     * cannot be started. * `Failed` - The last action on the service item instance failed and corrective measures need to be
     * taken to bring the service item instance back to valid state. * `Okay` - The last action on the service item instance
     * completed and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and
     * can be safely deleted. A service item instance in any other state after it has been created cannot be deleted until it
     * has been decommissioned.
     */
    lastStatus?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * A name of the service item instance. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.) or
     * an underscore (_).
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstancePermissionResource>[]>;
    /**
     * Lifecycle state of service item instance. * `Creating` - The service item is not yet created and creation action is in
     * progress. * `Created` - The service item is created. * `Decommissioning` - The service item is not yet decommissioned
     * and decommission action is in progress. * `Decommissioned` - The service item is decommisioned. * `Deleting` - The
     * service item is not yet deleted and deletion action is in progress. * `Deleted` - The service item is deleted. *
     * `Failed` - The service item action is failed to perform the operation.
     */
    resourcelifecycleStatus?: pulumi.Input<string>;
    /**
     * A reference to a workflowServiceItemDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    serviceItemDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceServiceItemDefinition>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Status of the service item instance which controls the actions that can be performed on this instance. * `NotCreated` -
     * The service item is not yet created and it is in a draft mode. A service item instance can be deleted in this state. *
     * `InProgress` - An action is in progress and until that action has reached a final state, another action cannot be
     * started. * `Failed` - The last action on the service item instance failed and corrective measures need to be taken to
     * bring the service item instance back to valid state. * `Okay` - The last action on the service item instance completed
     * and the service item instance is in Okay state. * `Decommissioned` - The service item is decommissioned and can be
     * safely deleted. A service item instance in any other state after it has been created cannot be deleted until it has been
     * decommissioned.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceTag>[]>;
    /**
     * The user identifier which indicates the user that started this workflow.
     */
    userIdOrEmail?: pulumi.Input<string>;
    /**
     * A reference to a iamUser resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    users?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceUser>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemInstanceVersionContext>[]>;
}
