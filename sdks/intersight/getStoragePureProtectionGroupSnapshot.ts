// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStoragePureProtectionGroupSnapshot(args?: GetStoragePureProtectionGroupSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetStoragePureProtectionGroupSnapshotResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStoragePureProtectionGroupSnapshot:getStoragePureProtectionGroupSnapshot", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "array": args.array,
        "classId": args.classId,
        "createTime": args.createTime,
        "createdTime": args.createdTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrSource": args.nrSource,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "protectionGroup": args.protectionGroup,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "size": args.size,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStoragePureProtectionGroupSnapshot.
 */
export interface GetStoragePureProtectionGroupSnapshotArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStoragePureProtectionGroupSnapshotAncestor[];
    array?: inputs.GetStoragePureProtectionGroupSnapshotArray;
    classId?: string;
    createTime?: string;
    createdTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nrSource?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStoragePureProtectionGroupSnapshotParent;
    permissionResources?: inputs.GetStoragePureProtectionGroupSnapshotPermissionResource[];
    protectionGroup?: inputs.GetStoragePureProtectionGroupSnapshotProtectionGroup;
    registeredDevice?: inputs.GetStoragePureProtectionGroupSnapshotRegisteredDevice;
    sharedScope?: string;
    size?: number;
    tags?: inputs.GetStoragePureProtectionGroupSnapshotTag[];
    versionContext?: inputs.GetStoragePureProtectionGroupSnapshotVersionContext;
}

/**
 * A collection of values returned by getStoragePureProtectionGroupSnapshot.
 */
export interface GetStoragePureProtectionGroupSnapshotResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStoragePureProtectionGroupSnapshotAncestor[];
    readonly array?: outputs.GetStoragePureProtectionGroupSnapshotArray;
    readonly classId?: string;
    readonly createTime?: string;
    readonly createdTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrSource?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStoragePureProtectionGroupSnapshotParent;
    readonly permissionResources?: outputs.GetStoragePureProtectionGroupSnapshotPermissionResource[];
    readonly protectionGroup?: outputs.GetStoragePureProtectionGroupSnapshotProtectionGroup;
    readonly registeredDevice?: outputs.GetStoragePureProtectionGroupSnapshotRegisteredDevice;
    readonly results: outputs.GetStoragePureProtectionGroupSnapshotResult[];
    readonly sharedScope?: string;
    readonly size?: number;
    readonly tags?: outputs.GetStoragePureProtectionGroupSnapshotTag[];
    readonly versionContext?: outputs.GetStoragePureProtectionGroupSnapshotVersionContext;
}
export function getStoragePureProtectionGroupSnapshotOutput(args?: GetStoragePureProtectionGroupSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStoragePureProtectionGroupSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getStoragePureProtectionGroupSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getStoragePureProtectionGroupSnapshot.
 */
export interface GetStoragePureProtectionGroupSnapshotOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotAncestorArgs>[]>;
    array?: pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotArrayArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    createdTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrSource?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotPermissionResourceArgs>[]>;
    protectionGroup?: pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotProtectionGroupArgs>;
    registeredDevice?: pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetStoragePureProtectionGroupSnapshotVersionContextArgs>;
}
