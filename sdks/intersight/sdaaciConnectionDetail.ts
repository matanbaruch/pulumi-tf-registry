// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SdaaciConnectionDetail extends pulumi.CustomResource {
    /**
     * Get an existing SdaaciConnectionDetail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SdaaciConnectionDetailState, opts?: pulumi.CustomResourceOptions): SdaaciConnectionDetail {
        return new SdaaciConnectionDetail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/sdaaciConnectionDetail:SdaaciConnectionDetail';

    /**
     * Returns true if the given object is an instance of SdaaciConnectionDetail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SdaaciConnectionDetail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SdaaciConnectionDetail.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.SdaaciConnectionDetailAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of this connection between two peers.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Id of the ip pool configured for this connection.
     */
    public readonly ipPool!: pulumi.Output<string | undefined>;
    /**
     * Id of layer 3 handoff configured between a border node and a border leaf.
     */
    public readonly layer3HandoffId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * A reference to a sdaaciConnection resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly nrConnections!: pulumi.Output<outputs.SdaaciConnectionDetailNrConnection[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.SdaaciConnectionDetailParent[]>;
    /**
     * Interface id configured on Peer A.
     */
    public readonly peerAinterface!: pulumi.Output<string | undefined>;
    /**
     * The IP Address of the device used as the local peer.
     */
    public readonly peerAipAddress!: pulumi.Output<string | undefined>;
    /**
     * Type of device used as Peer A for this peer connection.
     */
    public readonly peerAtype!: pulumi.Output<string | undefined>;
    /**
     * Interface id configured on Peer B.
     */
    public readonly peerBinterface!: pulumi.Output<string | undefined>;
    /**
     * The IP Address of the device used as the remote peer.
     */
    public readonly peerBipAddress!: pulumi.Output<string | undefined>;
    /**
     * Type of device used as Peer B for this peer connection.
     */
    public readonly peerBtype!: pulumi.Output<string | undefined>;
    /**
     * First peer of the connection.
     */
    public readonly peera!: pulumi.Output<string | undefined>;
    /**
     * Second Peer of the connection.
     */
    public readonly peerb!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.SdaaciConnectionDetailPermissionResource[]>;
    /**
     * Router id defined for this peer connection.
     */
    public readonly routerId!: pulumi.Output<string | undefined>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Connection status between the peers. * `NotConnected` - Connection Status NotConnected. * `Connected` - Connection
     * Status Connected.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.SdaaciConnectionDetailTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.SdaaciConnectionDetailVersionContext[]>;

    /**
     * Create a SdaaciConnectionDetail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SdaaciConnectionDetailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SdaaciConnectionDetailArgs | SdaaciConnectionDetailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SdaaciConnectionDetailState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["ipPool"] = state ? state.ipPool : undefined;
            resourceInputs["layer3HandoffId"] = state ? state.layer3HandoffId : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["nrConnections"] = state ? state.nrConnections : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["peerAinterface"] = state ? state.peerAinterface : undefined;
            resourceInputs["peerAipAddress"] = state ? state.peerAipAddress : undefined;
            resourceInputs["peerAtype"] = state ? state.peerAtype : undefined;
            resourceInputs["peerBinterface"] = state ? state.peerBinterface : undefined;
            resourceInputs["peerBipAddress"] = state ? state.peerBipAddress : undefined;
            resourceInputs["peerBtype"] = state ? state.peerBtype : undefined;
            resourceInputs["peera"] = state ? state.peera : undefined;
            resourceInputs["peerb"] = state ? state.peerb : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as SdaaciConnectionDetailArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["ipPool"] = args ? args.ipPool : undefined;
            resourceInputs["layer3HandoffId"] = args ? args.layer3HandoffId : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["nrConnections"] = args ? args.nrConnections : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["peerAinterface"] = args ? args.peerAinterface : undefined;
            resourceInputs["peerAipAddress"] = args ? args.peerAipAddress : undefined;
            resourceInputs["peerAtype"] = args ? args.peerAtype : undefined;
            resourceInputs["peerBinterface"] = args ? args.peerBinterface : undefined;
            resourceInputs["peerBipAddress"] = args ? args.peerBipAddress : undefined;
            resourceInputs["peerBtype"] = args ? args.peerBtype : undefined;
            resourceInputs["peera"] = args ? args.peera : undefined;
            resourceInputs["peerb"] = args ? args.peerb : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SdaaciConnectionDetail.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SdaaciConnectionDetail resources.
 */
export interface SdaaciConnectionDetailState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of this connection between two peers.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Id of the ip pool configured for this connection.
     */
    ipPool?: pulumi.Input<string>;
    /**
     * Id of layer 3 handoff configured between a border node and a border leaf.
     */
    layer3HandoffId?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * A reference to a sdaaciConnection resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    nrConnections?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailNrConnection>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailParent>[]>;
    /**
     * Interface id configured on Peer A.
     */
    peerAinterface?: pulumi.Input<string>;
    /**
     * The IP Address of the device used as the local peer.
     */
    peerAipAddress?: pulumi.Input<string>;
    /**
     * Type of device used as Peer A for this peer connection.
     */
    peerAtype?: pulumi.Input<string>;
    /**
     * Interface id configured on Peer B.
     */
    peerBinterface?: pulumi.Input<string>;
    /**
     * The IP Address of the device used as the remote peer.
     */
    peerBipAddress?: pulumi.Input<string>;
    /**
     * Type of device used as Peer B for this peer connection.
     */
    peerBtype?: pulumi.Input<string>;
    /**
     * First peer of the connection.
     */
    peera?: pulumi.Input<string>;
    /**
     * Second Peer of the connection.
     */
    peerb?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailPermissionResource>[]>;
    /**
     * Router id defined for this peer connection.
     */
    routerId?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Connection status between the peers. * `NotConnected` - Connection Status NotConnected. * `Connected` - Connection
     * Status Connected.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailVersionContext>[]>;
}

/**
 * The set of arguments for constructing a SdaaciConnectionDetail resource.
 */
export interface SdaaciConnectionDetailArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of this connection between two peers.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Id of the ip pool configured for this connection.
     */
    ipPool?: pulumi.Input<string>;
    /**
     * Id of layer 3 handoff configured between a border node and a border leaf.
     */
    layer3HandoffId?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * A reference to a sdaaciConnection resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    nrConnections?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailNrConnection>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailParent>[]>;
    /**
     * Interface id configured on Peer A.
     */
    peerAinterface?: pulumi.Input<string>;
    /**
     * The IP Address of the device used as the local peer.
     */
    peerAipAddress?: pulumi.Input<string>;
    /**
     * Type of device used as Peer A for this peer connection.
     */
    peerAtype?: pulumi.Input<string>;
    /**
     * Interface id configured on Peer B.
     */
    peerBinterface?: pulumi.Input<string>;
    /**
     * The IP Address of the device used as the remote peer.
     */
    peerBipAddress?: pulumi.Input<string>;
    /**
     * Type of device used as Peer B for this peer connection.
     */
    peerBtype?: pulumi.Input<string>;
    /**
     * First peer of the connection.
     */
    peera?: pulumi.Input<string>;
    /**
     * Second Peer of the connection.
     */
    peerb?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailPermissionResource>[]>;
    /**
     * Router id defined for this peer connection.
     */
    routerId?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Connection status between the peers. * `NotConnected` - Connection Status NotConnected. * `Connected` - Connection
     * Status Connected.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDetailVersionContext>[]>;
}
