// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageNetAppCloudTarget(args?: GetStorageNetAppCloudTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageNetAppCloudTargetResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageNetAppCloudTarget:getStorageNetAppCloudTarget", {
        "accessKey": args.accessKey,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "array": args.array,
        "authenticationType": args.authenticationType,
        "azureAccount": args.azureAccount,
        "capUrl": args.capUrl,
        "certificateValidationEnabled": args.certificateValidationEnabled,
        "classId": args.classId,
        "cloudStorages": args.cloudStorages,
        "container": args.container,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "ipspace": args.ipspace,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owner": args.owner,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "port": args.port,
        "providerType": args.providerType,
        "server": args.server,
        "sharedScope": args.sharedScope,
        "snapMirrorUse": args.snapMirrorUse,
        "sslEnabled": args.sslEnabled,
        "tags": args.tags,
        "used": args.used,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageNetAppCloudTarget.
 */
export interface GetStorageNetAppCloudTargetArgs {
    accessKey?: string;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageNetAppCloudTargetAncestor[];
    array?: inputs.GetStorageNetAppCloudTargetArray;
    authenticationType?: string;
    azureAccount?: string;
    capUrl?: string;
    certificateValidationEnabled?: boolean;
    classId?: string;
    cloudStorages?: string[];
    container?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    ipspace?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owner?: string;
    owners?: string[];
    parent?: inputs.GetStorageNetAppCloudTargetParent;
    permissionResources?: inputs.GetStorageNetAppCloudTargetPermissionResource[];
    port?: number;
    providerType?: string;
    server?: string;
    sharedScope?: string;
    snapMirrorUse?: string;
    sslEnabled?: boolean;
    tags?: inputs.GetStorageNetAppCloudTargetTag[];
    used?: number;
    uuid?: string;
    versionContext?: inputs.GetStorageNetAppCloudTargetVersionContext;
}

/**
 * A collection of values returned by getStorageNetAppCloudTarget.
 */
export interface GetStorageNetAppCloudTargetResult {
    readonly accessKey?: string;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageNetAppCloudTargetAncestor[];
    readonly array?: outputs.GetStorageNetAppCloudTargetArray;
    readonly authenticationType?: string;
    readonly azureAccount?: string;
    readonly capUrl?: string;
    readonly certificateValidationEnabled?: boolean;
    readonly classId?: string;
    readonly cloudStorages?: string[];
    readonly container?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly ipspace?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owner?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageNetAppCloudTargetParent;
    readonly permissionResources?: outputs.GetStorageNetAppCloudTargetPermissionResource[];
    readonly port?: number;
    readonly providerType?: string;
    readonly results: outputs.GetStorageNetAppCloudTargetResult[];
    readonly server?: string;
    readonly sharedScope?: string;
    readonly snapMirrorUse?: string;
    readonly sslEnabled?: boolean;
    readonly tags?: outputs.GetStorageNetAppCloudTargetTag[];
    readonly used?: number;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetStorageNetAppCloudTargetVersionContext;
}
export function getStorageNetAppCloudTargetOutput(args?: GetStorageNetAppCloudTargetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageNetAppCloudTargetResult> {
    return pulumi.output(args).apply((a: any) => getStorageNetAppCloudTarget(a, opts))
}

/**
 * A collection of arguments for invoking getStorageNetAppCloudTarget.
 */
export interface GetStorageNetAppCloudTargetOutputArgs {
    accessKey?: pulumi.Input<string>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppCloudTargetAncestorArgs>[]>;
    array?: pulumi.Input<inputs.GetStorageNetAppCloudTargetArrayArgs>;
    authenticationType?: pulumi.Input<string>;
    azureAccount?: pulumi.Input<string>;
    capUrl?: pulumi.Input<string>;
    certificateValidationEnabled?: pulumi.Input<boolean>;
    classId?: pulumi.Input<string>;
    cloudStorages?: pulumi.Input<pulumi.Input<string>[]>;
    container?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipspace?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageNetAppCloudTargetParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppCloudTargetPermissionResourceArgs>[]>;
    port?: pulumi.Input<number>;
    providerType?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    snapMirrorUse?: pulumi.Input<string>;
    sslEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppCloudTargetTagArgs>[]>;
    used?: pulumi.Input<number>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetStorageNetAppCloudTargetVersionContextArgs>;
}
