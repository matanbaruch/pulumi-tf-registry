// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FabricServerRole extends pulumi.CustomResource {
    /**
     * Get an existing FabricServerRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FabricServerRoleState, opts?: pulumi.CustomResourceOptions): FabricServerRole {
        return new FabricServerRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/fabricServerRole:FabricServerRole';

    /**
     * Returns true if the given object is an instance of FabricServerRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FabricServerRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FabricServerRole.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * Breakout port Identifier of the Switch Interface. When a port is not configured as a breakout port, the aggregatePortId
     * is set to 0, and unused. When a port is configured as a breakout port, the 'aggregatePortId' port number as labeled on
     * the equipment, e.g. the id of the port on the switch.
     */
    public readonly aggregatePortId!: pulumi.Output<number | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.FabricServerRoleAncestor[]>;
    /**
     * Auto negotiation configuration for server port. This configuration is required only for FEX Model N9K-C93180YC-FX3
     * connected with 100G speed port on UCS-FI-6536 and should be set as True.
     */
    public readonly autoNegotiationDisabled!: pulumi.Output<boolean | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Forward error correction configuration for server port. This configuration is required only for FEX Model
     * N9K-C93180YC-FX3 connected with 25G speed ports on UCS-FI-6454/UCS-FI-64108 and should be set as Cl74. * `Auto` -
     * Forward error correction option 'Auto'. * `Cl91` - Forward error correction option 'cl91'. * `Cl74` - Forward error
     * correction option 'cl74'.
     */
    public readonly fec!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.FabricServerRoleParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.FabricServerRolePermissionResource[]>;
    /**
     * Port Identifier of the Switch/FEX/Chassis Interface. When a port is not configured as a breakout port, the portId is the
     * port number as labeled on the equipment, e.g. the id of the port on the switch, FEX or chassis. When a port is
     * configured as a breakout port, the 'portId' represents the port id on the fanout side of the breakout cable.
     */
    public readonly portId!: pulumi.Output<number | undefined>;
    /**
     * A reference to a fabricPortPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly portPolicies!: pulumi.Output<outputs.FabricServerRolePortPolicy[]>;
    /**
     * Preferred device ID to be configured by user for the connected device. This ID must be specified together with the
     * 'PreferredDeviceType' property. This ID will only takes effect if the actual connected device matches the
     * 'PreferredDeviceType'. If the preferred ID is not available, the ID is automatically allocated and assigned by the
     * system. If different preferred IDs are specified for the ports connected to the same device, only the preferred ID (if
     * specified) of the port that is discovered first will be considered.
     */
    public readonly preferredDeviceId!: pulumi.Output<number | undefined>;
    /**
     * Device type for which preferred ID to be configured. If the actual connected device does not match the specified device
     * type, the system ignores the 'PreferredDeviceId' property. * `Auto` - Preferred Id will be ignored if specified with
     * this type. * `RackServer` - Connected device type is Rack Unit Server. * `Chassis` - Connected device type is Chassis.
     */
    public readonly preferredDeviceType!: pulumi.Output<string | undefined>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Slot Identifier of the Switch/FEX/Chassis Interface.
     */
    public readonly slotId!: pulumi.Output<number | undefined>;
    public readonly tags!: pulumi.Output<outputs.FabricServerRoleTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.FabricServerRoleVersionContext[]>;

    /**
     * Create a FabricServerRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FabricServerRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FabricServerRoleArgs | FabricServerRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FabricServerRoleState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["aggregatePortId"] = state ? state.aggregatePortId : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["autoNegotiationDisabled"] = state ? state.autoNegotiationDisabled : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["fec"] = state ? state.fec : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["portId"] = state ? state.portId : undefined;
            resourceInputs["portPolicies"] = state ? state.portPolicies : undefined;
            resourceInputs["preferredDeviceId"] = state ? state.preferredDeviceId : undefined;
            resourceInputs["preferredDeviceType"] = state ? state.preferredDeviceType : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["slotId"] = state ? state.slotId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as FabricServerRoleArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["aggregatePortId"] = args ? args.aggregatePortId : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["autoNegotiationDisabled"] = args ? args.autoNegotiationDisabled : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["fec"] = args ? args.fec : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["portId"] = args ? args.portId : undefined;
            resourceInputs["portPolicies"] = args ? args.portPolicies : undefined;
            resourceInputs["preferredDeviceId"] = args ? args.preferredDeviceId : undefined;
            resourceInputs["preferredDeviceType"] = args ? args.preferredDeviceType : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["slotId"] = args ? args.slotId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FabricServerRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FabricServerRole resources.
 */
export interface FabricServerRoleState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * Breakout port Identifier of the Switch Interface. When a port is not configured as a breakout port, the aggregatePortId
     * is set to 0, and unused. When a port is configured as a breakout port, the 'aggregatePortId' port number as labeled on
     * the equipment, e.g. the id of the port on the switch.
     */
    aggregatePortId?: pulumi.Input<number>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleAncestor>[]>;
    /**
     * Auto negotiation configuration for server port. This configuration is required only for FEX Model N9K-C93180YC-FX3
     * connected with 100G speed port on UCS-FI-6536 and should be set as True.
     */
    autoNegotiationDisabled?: pulumi.Input<boolean>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Forward error correction configuration for server port. This configuration is required only for FEX Model
     * N9K-C93180YC-FX3 connected with 25G speed ports on UCS-FI-6454/UCS-FI-64108 and should be set as Cl74. * `Auto` -
     * Forward error correction option 'Auto'. * `Cl91` - Forward error correction option 'cl91'. * `Cl74` - Forward error
     * correction option 'cl74'.
     */
    fec?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FabricServerRolePermissionResource>[]>;
    /**
     * Port Identifier of the Switch/FEX/Chassis Interface. When a port is not configured as a breakout port, the portId is the
     * port number as labeled on the equipment, e.g. the id of the port on the switch, FEX or chassis. When a port is
     * configured as a breakout port, the 'portId' represents the port id on the fanout side of the breakout cable.
     */
    portId?: pulumi.Input<number>;
    /**
     * A reference to a fabricPortPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    portPolicies?: pulumi.Input<pulumi.Input<inputs.FabricServerRolePortPolicy>[]>;
    /**
     * Preferred device ID to be configured by user for the connected device. This ID must be specified together with the
     * 'PreferredDeviceType' property. This ID will only takes effect if the actual connected device matches the
     * 'PreferredDeviceType'. If the preferred ID is not available, the ID is automatically allocated and assigned by the
     * system. If different preferred IDs are specified for the ports connected to the same device, only the preferred ID (if
     * specified) of the port that is discovered first will be considered.
     */
    preferredDeviceId?: pulumi.Input<number>;
    /**
     * Device type for which preferred ID to be configured. If the actual connected device does not match the specified device
     * type, the system ignores the 'PreferredDeviceId' property. * `Auto` - Preferred Id will be ignored if specified with
     * this type. * `RackServer` - Connected device type is Rack Unit Server. * `Chassis` - Connected device type is Chassis.
     */
    preferredDeviceType?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Slot Identifier of the Switch/FEX/Chassis Interface.
     */
    slotId?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleVersionContext>[]>;
}

/**
 * The set of arguments for constructing a FabricServerRole resource.
 */
export interface FabricServerRoleArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * Breakout port Identifier of the Switch Interface. When a port is not configured as a breakout port, the aggregatePortId
     * is set to 0, and unused. When a port is configured as a breakout port, the 'aggregatePortId' port number as labeled on
     * the equipment, e.g. the id of the port on the switch.
     */
    aggregatePortId?: pulumi.Input<number>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleAncestor>[]>;
    /**
     * Auto negotiation configuration for server port. This configuration is required only for FEX Model N9K-C93180YC-FX3
     * connected with 100G speed port on UCS-FI-6536 and should be set as True.
     */
    autoNegotiationDisabled?: pulumi.Input<boolean>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Forward error correction configuration for server port. This configuration is required only for FEX Model
     * N9K-C93180YC-FX3 connected with 25G speed ports on UCS-FI-6454/UCS-FI-64108 and should be set as Cl74. * `Auto` -
     * Forward error correction option 'Auto'. * `Cl91` - Forward error correction option 'cl91'. * `Cl74` - Forward error
     * correction option 'cl74'.
     */
    fec?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FabricServerRolePermissionResource>[]>;
    /**
     * Port Identifier of the Switch/FEX/Chassis Interface. When a port is not configured as a breakout port, the portId is the
     * port number as labeled on the equipment, e.g. the id of the port on the switch, FEX or chassis. When a port is
     * configured as a breakout port, the 'portId' represents the port id on the fanout side of the breakout cable.
     */
    portId?: pulumi.Input<number>;
    /**
     * A reference to a fabricPortPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    portPolicies?: pulumi.Input<pulumi.Input<inputs.FabricServerRolePortPolicy>[]>;
    /**
     * Preferred device ID to be configured by user for the connected device. This ID must be specified together with the
     * 'PreferredDeviceType' property. This ID will only takes effect if the actual connected device matches the
     * 'PreferredDeviceType'. If the preferred ID is not available, the ID is automatically allocated and assigned by the
     * system. If different preferred IDs are specified for the ports connected to the same device, only the preferred ID (if
     * specified) of the port that is discovered first will be considered.
     */
    preferredDeviceId?: pulumi.Input<number>;
    /**
     * Device type for which preferred ID to be configured. If the actual connected device does not match the specified device
     * type, the system ignores the 'PreferredDeviceId' property. * `Auto` - Preferred Id will be ignored if specified with
     * this type. * `RackServer` - Connected device type is Rack Unit Server. * `Chassis` - Connected device type is Chassis.
     */
    preferredDeviceType?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Slot Identifier of the Switch/FEX/Chassis Interface.
     */
    slotId?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FabricServerRoleVersionContext>[]>;
}
