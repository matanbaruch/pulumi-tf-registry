// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTamAdvisoryInstance(args?: GetTamAdvisoryInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetTamAdvisoryInstanceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getTamAdvisoryInstance:getTamAdvisoryInstance", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "advisory": args.advisory,
        "affectedObject": args.affectedObject,
        "affectedObjectMoid": args.affectedObjectMoid,
        "affectedObjectType": args.affectedObjectType,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "deviceRegistration": args.deviceRegistration,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "lastStateChangeTime": args.lastStateChangeTime,
        "lastVerifiedTime": args.lastVerifiedTime,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "state": args.state,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTamAdvisoryInstance.
 */
export interface GetTamAdvisoryInstanceArgs {
    accountMoid?: string;
    additionalProperties?: string;
    advisory?: inputs.GetTamAdvisoryInstanceAdvisory;
    affectedObject?: inputs.GetTamAdvisoryInstanceAffectedObject;
    affectedObjectMoid?: string;
    affectedObjectType?: string;
    ancestors?: inputs.GetTamAdvisoryInstanceAncestor[];
    classId?: string;
    createTime?: string;
    deviceRegistration?: inputs.GetTamAdvisoryInstanceDeviceRegistration;
    domainGroupMoid?: string;
    id?: string;
    lastStateChangeTime?: string;
    lastVerifiedTime?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetTamAdvisoryInstanceParent;
    permissionResources?: inputs.GetTamAdvisoryInstancePermissionResource[];
    sharedScope?: string;
    state?: string;
    tags?: inputs.GetTamAdvisoryInstanceTag[];
    versionContext?: inputs.GetTamAdvisoryInstanceVersionContext;
}

/**
 * A collection of values returned by getTamAdvisoryInstance.
 */
export interface GetTamAdvisoryInstanceResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly advisory?: outputs.GetTamAdvisoryInstanceAdvisory;
    readonly affectedObject?: outputs.GetTamAdvisoryInstanceAffectedObject;
    readonly affectedObjectMoid?: string;
    readonly affectedObjectType?: string;
    readonly ancestors?: outputs.GetTamAdvisoryInstanceAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly deviceRegistration?: outputs.GetTamAdvisoryInstanceDeviceRegistration;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly lastStateChangeTime?: string;
    readonly lastVerifiedTime?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetTamAdvisoryInstanceParent;
    readonly permissionResources?: outputs.GetTamAdvisoryInstancePermissionResource[];
    readonly results: outputs.GetTamAdvisoryInstanceResult[];
    readonly sharedScope?: string;
    readonly state?: string;
    readonly tags?: outputs.GetTamAdvisoryInstanceTag[];
    readonly versionContext?: outputs.GetTamAdvisoryInstanceVersionContext;
}
export function getTamAdvisoryInstanceOutput(args?: GetTamAdvisoryInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTamAdvisoryInstanceResult> {
    return pulumi.output(args).apply((a: any) => getTamAdvisoryInstance(a, opts))
}

/**
 * A collection of arguments for invoking getTamAdvisoryInstance.
 */
export interface GetTamAdvisoryInstanceOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    advisory?: pulumi.Input<inputs.GetTamAdvisoryInstanceAdvisoryArgs>;
    affectedObject?: pulumi.Input<inputs.GetTamAdvisoryInstanceAffectedObjectArgs>;
    affectedObjectMoid?: pulumi.Input<string>;
    affectedObjectType?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetTamAdvisoryInstanceAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deviceRegistration?: pulumi.Input<inputs.GetTamAdvisoryInstanceDeviceRegistrationArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lastStateChangeTime?: pulumi.Input<string>;
    lastVerifiedTime?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetTamAdvisoryInstanceParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetTamAdvisoryInstancePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetTamAdvisoryInstanceTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetTamAdvisoryInstanceVersionContextArgs>;
}
