// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAssetClusterMember(args?: GetAssetClusterMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetAssetClusterMemberResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getAssetClusterMember:getAssetClusterMember", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "apiVersion": args.apiVersion,
        "appPartitionNumber": args.appPartitionNumber,
        "classId": args.classId,
        "connectionId": args.connectionId,
        "connectionReason": args.connectionReason,
        "connectionStatus": args.connectionStatus,
        "connectionStatusLastChangeTime": args.connectionStatusLastChangeTime,
        "connectorVersion": args.connectorVersion,
        "createTime": args.createTime,
        "device": args.device,
        "deviceExternalIpAddress": args.deviceExternalIpAddress,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "leadership": args.leadership,
        "lockedLeader": args.lockedLeader,
        "memberIdentity": args.memberIdentity,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "parentClusterMemberIdentity": args.parentClusterMemberIdentity,
        "permissionResources": args.permissionResources,
        "proxyApp": args.proxyApp,
        "sharedScope": args.sharedScope,
        "sudi": args.sudi,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAssetClusterMember.
 */
export interface GetAssetClusterMemberArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetAssetClusterMemberAncestor[];
    apiVersion?: number;
    appPartitionNumber?: number;
    classId?: string;
    connectionId?: string;
    connectionReason?: string;
    connectionStatus?: string;
    connectionStatusLastChangeTime?: string;
    connectorVersion?: string;
    createTime?: string;
    device?: inputs.GetAssetClusterMemberDevice;
    deviceExternalIpAddress?: string;
    domainGroupMoid?: string;
    id?: string;
    leadership?: string;
    lockedLeader?: boolean;
    memberIdentity?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetAssetClusterMemberParent;
    parentClusterMemberIdentity?: string;
    permissionResources?: inputs.GetAssetClusterMemberPermissionResource[];
    proxyApp?: string;
    sharedScope?: string;
    sudi?: inputs.GetAssetClusterMemberSudi;
    tags?: inputs.GetAssetClusterMemberTag[];
    versionContext?: inputs.GetAssetClusterMemberVersionContext;
}

/**
 * A collection of values returned by getAssetClusterMember.
 */
export interface GetAssetClusterMemberResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetAssetClusterMemberAncestor[];
    readonly apiVersion?: number;
    readonly appPartitionNumber?: number;
    readonly classId?: string;
    readonly connectionId?: string;
    readonly connectionReason?: string;
    readonly connectionStatus?: string;
    readonly connectionStatusLastChangeTime?: string;
    readonly connectorVersion?: string;
    readonly createTime?: string;
    readonly device?: outputs.GetAssetClusterMemberDevice;
    readonly deviceExternalIpAddress?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly leadership?: string;
    readonly lockedLeader?: boolean;
    readonly memberIdentity?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetAssetClusterMemberParent;
    readonly parentClusterMemberIdentity?: string;
    readonly permissionResources?: outputs.GetAssetClusterMemberPermissionResource[];
    readonly proxyApp?: string;
    readonly results: outputs.GetAssetClusterMemberResult[];
    readonly sharedScope?: string;
    readonly sudi?: outputs.GetAssetClusterMemberSudi;
    readonly tags?: outputs.GetAssetClusterMemberTag[];
    readonly versionContext?: outputs.GetAssetClusterMemberVersionContext;
}
export function getAssetClusterMemberOutput(args?: GetAssetClusterMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAssetClusterMemberResult> {
    return pulumi.output(args).apply((a: any) => getAssetClusterMember(a, opts))
}

/**
 * A collection of arguments for invoking getAssetClusterMember.
 */
export interface GetAssetClusterMemberOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetAssetClusterMemberAncestorArgs>[]>;
    apiVersion?: pulumi.Input<number>;
    appPartitionNumber?: pulumi.Input<number>;
    classId?: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    connectionReason?: pulumi.Input<string>;
    connectionStatus?: pulumi.Input<string>;
    connectionStatusLastChangeTime?: pulumi.Input<string>;
    connectorVersion?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    device?: pulumi.Input<inputs.GetAssetClusterMemberDeviceArgs>;
    deviceExternalIpAddress?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    leadership?: pulumi.Input<string>;
    lockedLeader?: pulumi.Input<boolean>;
    memberIdentity?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetAssetClusterMemberParentArgs>;
    parentClusterMemberIdentity?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetAssetClusterMemberPermissionResourceArgs>[]>;
    proxyApp?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    sudi?: pulumi.Input<inputs.GetAssetClusterMemberSudiArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetAssetClusterMemberTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetAssetClusterMemberVersionContextArgs>;
}
