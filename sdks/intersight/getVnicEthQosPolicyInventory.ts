// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVnicEthQosPolicyInventory(args?: GetVnicEthQosPolicyInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetVnicEthQosPolicyInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getVnicEthQosPolicyInventory:getVnicEthQosPolicyInventory", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "burst": args.burst,
        "classId": args.classId,
        "cos": args.cos,
        "createTime": args.createTime,
        "description": args.description,
        "deviceMoId": args.deviceMoId,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "mtu": args.mtu,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "priority": args.priority,
        "rateLimit": args.rateLimit,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "targetMo": args.targetMo,
        "trustHostCos": args.trustHostCos,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVnicEthQosPolicyInventory.
 */
export interface GetVnicEthQosPolicyInventoryArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetVnicEthQosPolicyInventoryAncestor[];
    burst?: number;
    classId?: string;
    cos?: number;
    createTime?: string;
    description?: string;
    deviceMoId?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    mtu?: number;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetVnicEthQosPolicyInventoryParent;
    permissionResources?: inputs.GetVnicEthQosPolicyInventoryPermissionResource[];
    priority?: string;
    rateLimit?: number;
    sharedScope?: string;
    tags?: inputs.GetVnicEthQosPolicyInventoryTag[];
    targetMo?: inputs.GetVnicEthQosPolicyInventoryTargetMo;
    trustHostCos?: boolean;
    versionContext?: inputs.GetVnicEthQosPolicyInventoryVersionContext;
}

/**
 * A collection of values returned by getVnicEthQosPolicyInventory.
 */
export interface GetVnicEthQosPolicyInventoryResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetVnicEthQosPolicyInventoryAncestor[];
    readonly burst?: number;
    readonly classId?: string;
    readonly cos?: number;
    readonly createTime?: string;
    readonly description?: string;
    readonly deviceMoId?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly mtu?: number;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetVnicEthQosPolicyInventoryParent;
    readonly permissionResources?: outputs.GetVnicEthQosPolicyInventoryPermissionResource[];
    readonly priority?: string;
    readonly rateLimit?: number;
    readonly results: outputs.GetVnicEthQosPolicyInventoryResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetVnicEthQosPolicyInventoryTag[];
    readonly targetMo?: outputs.GetVnicEthQosPolicyInventoryTargetMo;
    readonly trustHostCos?: boolean;
    readonly versionContext?: outputs.GetVnicEthQosPolicyInventoryVersionContext;
}
export function getVnicEthQosPolicyInventoryOutput(args?: GetVnicEthQosPolicyInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVnicEthQosPolicyInventoryResult> {
    return pulumi.output(args).apply((a: any) => getVnicEthQosPolicyInventory(a, opts))
}

/**
 * A collection of arguments for invoking getVnicEthQosPolicyInventory.
 */
export interface GetVnicEthQosPolicyInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetVnicEthQosPolicyInventoryAncestorArgs>[]>;
    burst?: pulumi.Input<number>;
    classId?: pulumi.Input<string>;
    cos?: pulumi.Input<number>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    mtu?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetVnicEthQosPolicyInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetVnicEthQosPolicyInventoryPermissionResourceArgs>[]>;
    priority?: pulumi.Input<string>;
    rateLimit?: pulumi.Input<number>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetVnicEthQosPolicyInventoryTagArgs>[]>;
    targetMo?: pulumi.Input<inputs.GetVnicEthQosPolicyInventoryTargetMoArgs>;
    trustHostCos?: pulumi.Input<boolean>;
    versionContext?: pulumi.Input<inputs.GetVnicEthQosPolicyInventoryVersionContextArgs>;
}
