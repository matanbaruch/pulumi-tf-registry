// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HyperflexLocalCredentialPolicy extends pulumi.CustomResource {
    /**
     * Get an existing HyperflexLocalCredentialPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperflexLocalCredentialPolicyState, opts?: pulumi.CustomResourceOptions): HyperflexLocalCredentialPolicy {
        return new HyperflexLocalCredentialPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/hyperflexLocalCredentialPolicy:HyperflexLocalCredentialPolicy';

    /**
     * Returns true if the given object is an instance of HyperflexLocalCredentialPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HyperflexLocalCredentialPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HyperflexLocalCredentialPolicy.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to hyperflexClusterProfile resources.
     */
    public readonly clusterProfiles!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyClusterProfile[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Indicates if Hypervisor password is the factory set default password. For HyperFlex Data Platform versions 3.0 or
     * higher, enable this if the default password was not changed on the Hypervisor. It is required to supply a new custom
     * Hypervisor password that will be applied to the Hypervisor during deployment. For HyperFlex Data Platform versions prior
     * to 3.0 release, this setting has no effect and the default password will be used for initial install. The Hypervisor
     * password should be changed after deployment.
     */
    public readonly factoryHypervisorPassword!: pulumi.Output<boolean | undefined>;
    /**
     * HyperFlex storage controller VM password must contain a minimum of 10 characters, with at least 1 lowercase, 1
     * uppercase, 1 numeric, and 1 of these -_@#$%^&*! special characters.
     */
    public readonly hxdpRootPwd!: pulumi.Output<string | undefined>;
    /**
     * Hypervisor administrator username must contain only alphanumeric characters.
     */
    public readonly hypervisorAdmin!: pulumi.Output<string | undefined>;
    /**
     * The Hypervisor root password. For HyperFlex Data Platform 3.0 or later, if the factory default password was not manually
     * changed, you must set a new custom password. If the password was manually changed, you must not enable the factory
     * default password property and provide the current hypervisor password. Note - All HyperFlex nodes require the same
     * hypervisor password for installation. For HyperFlex Data Platform prior to 3.0, use the default password "Cisco123" for
     * newly manufactured HyperFlex servers. A custom password should only be entered if hypervisor credentials were manually
     * changed prior to deployment.
     */
    public readonly hypervisorAdminPwd!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the value of the 'deploymentPrivateKey' property has been set.
     */
    public readonly isDeploymentPrivateKeySet!: pulumi.Output<boolean>;
    /**
     * Indicates whether the value of the 'hxdpRootPwd' property has been set.
     */
    public readonly isHxdpRootPwdSet!: pulumi.Output<boolean>;
    /**
     * Indicates whether the value of the 'hypervisorAdminPwd' property has been set.
     */
    public readonly isHypervisorAdminPwdSet!: pulumi.Output<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyPermissionResource[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.HyperflexLocalCredentialPolicyVersionContext[]>;

    /**
     * Create a HyperflexLocalCredentialPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HyperflexLocalCredentialPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HyperflexLocalCredentialPolicyArgs | HyperflexLocalCredentialPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HyperflexLocalCredentialPolicyState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clusterProfiles"] = state ? state.clusterProfiles : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["factoryHypervisorPassword"] = state ? state.factoryHypervisorPassword : undefined;
            resourceInputs["hxdpRootPwd"] = state ? state.hxdpRootPwd : undefined;
            resourceInputs["hypervisorAdmin"] = state ? state.hypervisorAdmin : undefined;
            resourceInputs["hypervisorAdminPwd"] = state ? state.hypervisorAdminPwd : undefined;
            resourceInputs["isDeploymentPrivateKeySet"] = state ? state.isDeploymentPrivateKeySet : undefined;
            resourceInputs["isHxdpRootPwdSet"] = state ? state.isHxdpRootPwdSet : undefined;
            resourceInputs["isHypervisorAdminPwdSet"] = state ? state.isHypervisorAdminPwdSet : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as HyperflexLocalCredentialPolicyArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clusterProfiles"] = args ? args.clusterProfiles : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["factoryHypervisorPassword"] = args ? args.factoryHypervisorPassword : undefined;
            resourceInputs["hxdpRootPwd"] = args ? args.hxdpRootPwd : undefined;
            resourceInputs["hypervisorAdmin"] = args ? args.hypervisorAdmin : undefined;
            resourceInputs["hypervisorAdminPwd"] = args ? args.hypervisorAdminPwd : undefined;
            resourceInputs["isDeploymentPrivateKeySet"] = args ? args.isDeploymentPrivateKeySet : undefined;
            resourceInputs["isHxdpRootPwdSet"] = args ? args.isHxdpRootPwdSet : undefined;
            resourceInputs["isHypervisorAdminPwdSet"] = args ? args.isHypervisorAdminPwdSet : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HyperflexLocalCredentialPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HyperflexLocalCredentialPolicy resources.
 */
export interface HyperflexLocalCredentialPolicyState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to hyperflexClusterProfile resources.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyClusterProfile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Indicates if Hypervisor password is the factory set default password. For HyperFlex Data Platform versions 3.0 or
     * higher, enable this if the default password was not changed on the Hypervisor. It is required to supply a new custom
     * Hypervisor password that will be applied to the Hypervisor during deployment. For HyperFlex Data Platform versions prior
     * to 3.0 release, this setting has no effect and the default password will be used for initial install. The Hypervisor
     * password should be changed after deployment.
     */
    factoryHypervisorPassword?: pulumi.Input<boolean>;
    /**
     * HyperFlex storage controller VM password must contain a minimum of 10 characters, with at least 1 lowercase, 1
     * uppercase, 1 numeric, and 1 of these -_@#$%^&*! special characters.
     */
    hxdpRootPwd?: pulumi.Input<string>;
    /**
     * Hypervisor administrator username must contain only alphanumeric characters.
     */
    hypervisorAdmin?: pulumi.Input<string>;
    /**
     * The Hypervisor root password. For HyperFlex Data Platform 3.0 or later, if the factory default password was not manually
     * changed, you must set a new custom password. If the password was manually changed, you must not enable the factory
     * default password property and provide the current hypervisor password. Note - All HyperFlex nodes require the same
     * hypervisor password for installation. For HyperFlex Data Platform prior to 3.0, use the default password "Cisco123" for
     * newly manufactured HyperFlex servers. A custom password should only be entered if hypervisor credentials were manually
     * changed prior to deployment.
     */
    hypervisorAdminPwd?: pulumi.Input<string>;
    /**
     * Indicates whether the value of the 'deploymentPrivateKey' property has been set.
     */
    isDeploymentPrivateKeySet?: pulumi.Input<boolean>;
    /**
     * Indicates whether the value of the 'hxdpRootPwd' property has been set.
     */
    isHxdpRootPwdSet?: pulumi.Input<boolean>;
    /**
     * Indicates whether the value of the 'hypervisorAdminPwd' property has been set.
     */
    isHypervisorAdminPwdSet?: pulumi.Input<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyVersionContext>[]>;
}

/**
 * The set of arguments for constructing a HyperflexLocalCredentialPolicy resource.
 */
export interface HyperflexLocalCredentialPolicyArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to hyperflexClusterProfile resources.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyClusterProfile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Indicates if Hypervisor password is the factory set default password. For HyperFlex Data Platform versions 3.0 or
     * higher, enable this if the default password was not changed on the Hypervisor. It is required to supply a new custom
     * Hypervisor password that will be applied to the Hypervisor during deployment. For HyperFlex Data Platform versions prior
     * to 3.0 release, this setting has no effect and the default password will be used for initial install. The Hypervisor
     * password should be changed after deployment.
     */
    factoryHypervisorPassword?: pulumi.Input<boolean>;
    /**
     * HyperFlex storage controller VM password must contain a minimum of 10 characters, with at least 1 lowercase, 1
     * uppercase, 1 numeric, and 1 of these -_@#$%^&*! special characters.
     */
    hxdpRootPwd?: pulumi.Input<string>;
    /**
     * Hypervisor administrator username must contain only alphanumeric characters.
     */
    hypervisorAdmin?: pulumi.Input<string>;
    /**
     * The Hypervisor root password. For HyperFlex Data Platform 3.0 or later, if the factory default password was not manually
     * changed, you must set a new custom password. If the password was manually changed, you must not enable the factory
     * default password property and provide the current hypervisor password. Note - All HyperFlex nodes require the same
     * hypervisor password for installation. For HyperFlex Data Platform prior to 3.0, use the default password "Cisco123" for
     * newly manufactured HyperFlex servers. A custom password should only be entered if hypervisor credentials were manually
     * changed prior to deployment.
     */
    hypervisorAdminPwd?: pulumi.Input<string>;
    /**
     * Indicates whether the value of the 'deploymentPrivateKey' property has been set.
     */
    isDeploymentPrivateKeySet?: pulumi.Input<boolean>;
    /**
     * Indicates whether the value of the 'hxdpRootPwd' property has been set.
     */
    isHxdpRootPwdSet?: pulumi.Input<boolean>;
    /**
     * Indicates whether the value of the 'hypervisorAdminPwd' property has been set.
     */
    isHypervisorAdminPwdSet?: pulumi.Input<boolean>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexLocalCredentialPolicyVersionContext>[]>;
}
