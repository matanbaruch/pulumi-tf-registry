// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AssetTarget extends pulumi.CustomResource {
    /**
     * Get an existing AssetTarget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssetTargetState, opts?: pulumi.CustomResourceOptions): AssetTarget {
        return new AssetTarget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/assetTarget:AssetTarget';

    /**
     * Returns true if the given object is an instance of AssetTarget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AssetTarget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssetTarget.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly accounts!: pulumi.Output<outputs.AssetTargetAccount[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * AlarmSummary is a health score calculation and aggregation of alarm counts per severity of alarms which Intersight's
     * ability to manage the Target.
     */
    public readonly alarmSummaries!: pulumi.Output<outputs.AssetTargetAlarmSummary[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.AssetTargetAncestor[]>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly assists!: pulumi.Output<outputs.AssetTargetAssist[]>;
    /**
     * The name or email id of the user who claimed the target.
     */
    public readonly claimedByUserName!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    public readonly connections!: pulumi.Output<outputs.AssetTargetConnection[]>;
    /**
     * The Device Connector version for target types which are managed by via embedded Device Connector.
     */
    public readonly connectorVersion!: pulumi.Output<string>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly customPermissionResources!: pulumi.Output<outputs.AssetTargetCustomPermissionResource[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * ExternalIpAddress is applicable for targets which are managed via an Intersight Device Connector. The value is the IP
     * Address of the target as seen from Intersight. It is either the IP Address of the managed target's interface which has a
     * route to the internet or a NAT IP Address when the target is deployed in a private network.
     */
    public readonly externalIpAddress!: pulumi.Output<string>;
    public readonly ipAddresses!: pulumi.Output<string[]>;
    /**
     * The location from which Intersight manages the target. * `Unknown` - The management mechanism is not detected. Unknown
     * is used as a default by the implementation and is not an allowed user input. * `Intersight` - Management of a target is
     * performed directly from Intersight. Network connections are established from Intersight to a management interface of the
     * Target and authenticated using user provided credentials. * `IntersightAssist` - Management of a target is performed via
     * a selected Intersight Assist. Network connections are established from the Intersight Assist to a management interface
     * of the Target. * `DeviceConnector` - An Intersight Device Connector running within the Target establishes a connection
     * to Intersight and management of the target is performed via this connection.
     */
    public readonly managementLocation!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * A user provided name for the managed target.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.AssetTargetParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.AssetTargetPermissionResource[]>;
    public readonly productIds!: pulumi.Output<string[]>;
    /**
     * For targets which are managed by an embedded Intersight Device Connector, this field indicates that an administrator of
     * the target has disabled management operations of the Device Connector and only monitoring is permitted.
     */
    public readonly readOnly!: pulumi.Output<boolean>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly registeredDevices!: pulumi.Output<outputs.AssetTargetRegisteredDevice[]>;
    public readonly services!: pulumi.Output<outputs.AssetTargetService[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Status indicates if Intersight can establish a connection and authenticate with the managed target. Status does not
     * include information about the functional health of the target. * `` - The target details have been persisted but
     * Intersight has not yet attempted to connect to the target. * `Connected` - Intersight is able to establish a connection
     * to the target and initiate management activities. * `NotConnected` - Intersight is unable to establish a connection to
     * the target. * `ClaimInProgress` - Claim of the target is in progress. A connection to the target has not been fully
     * established. * `UnclaimInProgress` - Unclaim of the target is in progress. Intersight is able to connect to the target
     * and all management operations are supported. * `Unclaimed` - The device was un-claimed from the users account by an
     * Administrator of the device. Also indicates the failure to claim Targets of type HTTP Endpoint in Intersight. *
     * `Claimed` - Target of type HTTP Endpoint is successfully claimed in Intersight. Currently no validation is performed to
     * verify the Target connectivity from Intersight at the time of creation. However invoking API from Intersight
     * Orchestrator fails if this Target is not reachable from Intersight or if Target API credentials are incorrect.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * StatusErrorReason provides additional context for the Status.
     */
    public readonly statusErrorReason!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.AssetTargetTag[]>;
    public readonly targetIds!: pulumi.Output<string[]>;
    public readonly targetType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a iamTrustPoint resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly trustPoints!: pulumi.Output<outputs.AssetTargetTrustPoint[]>;
    /**
     * The vendor of the managed target.
     */
    public readonly vendor!: pulumi.Output<string>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.AssetTargetVersionContext[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    public readonly waitForCompletion!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly workflowInfos!: pulumi.Output<outputs.AssetTargetWorkflowInfo[]>;

    /**
     * Create a AssetTarget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssetTargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssetTargetArgs | AssetTargetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AssetTargetState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["accounts"] = state ? state.accounts : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["alarmSummaries"] = state ? state.alarmSummaries : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["assists"] = state ? state.assists : undefined;
            resourceInputs["claimedByUserName"] = state ? state.claimedByUserName : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["connections"] = state ? state.connections : undefined;
            resourceInputs["connectorVersion"] = state ? state.connectorVersion : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customPermissionResources"] = state ? state.customPermissionResources : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["externalIpAddress"] = state ? state.externalIpAddress : undefined;
            resourceInputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            resourceInputs["managementLocation"] = state ? state.managementLocation : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["productIds"] = state ? state.productIds : undefined;
            resourceInputs["readOnly"] = state ? state.readOnly : undefined;
            resourceInputs["registeredDevices"] = state ? state.registeredDevices : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusErrorReason"] = state ? state.statusErrorReason : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetIds"] = state ? state.targetIds : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
            resourceInputs["trustPoints"] = state ? state.trustPoints : undefined;
            resourceInputs["vendor"] = state ? state.vendor : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = state ? state.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = state ? state.workflowInfos : undefined;
        } else {
            const args = argsOrState as AssetTargetArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["accounts"] = args ? args.accounts : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["alarmSummaries"] = args ? args.alarmSummaries : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["assists"] = args ? args.assists : undefined;
            resourceInputs["claimedByUserName"] = args ? args.claimedByUserName : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["connections"] = args ? args.connections : undefined;
            resourceInputs["connectorVersion"] = args ? args.connectorVersion : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["customPermissionResources"] = args ? args.customPermissionResources : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["externalIpAddress"] = args ? args.externalIpAddress : undefined;
            resourceInputs["ipAddresses"] = args ? args.ipAddresses : undefined;
            resourceInputs["managementLocation"] = args ? args.managementLocation : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["productIds"] = args ? args.productIds : undefined;
            resourceInputs["readOnly"] = args ? args.readOnly : undefined;
            resourceInputs["registeredDevices"] = args ? args.registeredDevices : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["statusErrorReason"] = args ? args.statusErrorReason : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetIds"] = args ? args.targetIds : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["trustPoints"] = args ? args.trustPoints : undefined;
            resourceInputs["vendor"] = args ? args.vendor : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = args ? args.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = args ? args.workflowInfos : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AssetTarget.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AssetTarget resources.
 */
export interface AssetTargetState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.AssetTargetAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * AlarmSummary is a health score calculation and aggregation of alarm counts per severity of alarms which Intersight's
     * ability to manage the Target.
     */
    alarmSummaries?: pulumi.Input<pulumi.Input<inputs.AssetTargetAlarmSummary>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.AssetTargetAncestor>[]>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    assists?: pulumi.Input<pulumi.Input<inputs.AssetTargetAssist>[]>;
    /**
     * The name or email id of the user who claimed the target.
     */
    claimedByUserName?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    connections?: pulumi.Input<pulumi.Input<inputs.AssetTargetConnection>[]>;
    /**
     * The Device Connector version for target types which are managed by via embedded Device Connector.
     */
    connectorVersion?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    customPermissionResources?: pulumi.Input<pulumi.Input<inputs.AssetTargetCustomPermissionResource>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * ExternalIpAddress is applicable for targets which are managed via an Intersight Device Connector. The value is the IP
     * Address of the target as seen from Intersight. It is either the IP Address of the managed target's interface which has a
     * route to the internet or a NAT IP Address when the target is deployed in a private network.
     */
    externalIpAddress?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The location from which Intersight manages the target. * `Unknown` - The management mechanism is not detected. Unknown
     * is used as a default by the implementation and is not an allowed user input. * `Intersight` - Management of a target is
     * performed directly from Intersight. Network connections are established from Intersight to a management interface of the
     * Target and authenticated using user provided credentials. * `IntersightAssist` - Management of a target is performed via
     * a selected Intersight Assist. Network connections are established from the Intersight Assist to a management interface
     * of the Target. * `DeviceConnector` - An Intersight Device Connector running within the Target establishes a connection
     * to Intersight and management of the target is performed via this connection.
     */
    managementLocation?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * A user provided name for the managed target.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.AssetTargetParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.AssetTargetPermissionResource>[]>;
    productIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * For targets which are managed by an embedded Intersight Device Connector, this field indicates that an administrator of
     * the target has disabled management operations of the Device Connector and only monitoring is permitted.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    registeredDevices?: pulumi.Input<pulumi.Input<inputs.AssetTargetRegisteredDevice>[]>;
    services?: pulumi.Input<pulumi.Input<inputs.AssetTargetService>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Status indicates if Intersight can establish a connection and authenticate with the managed target. Status does not
     * include information about the functional health of the target. * `` - The target details have been persisted but
     * Intersight has not yet attempted to connect to the target. * `Connected` - Intersight is able to establish a connection
     * to the target and initiate management activities. * `NotConnected` - Intersight is unable to establish a connection to
     * the target. * `ClaimInProgress` - Claim of the target is in progress. A connection to the target has not been fully
     * established. * `UnclaimInProgress` - Unclaim of the target is in progress. Intersight is able to connect to the target
     * and all management operations are supported. * `Unclaimed` - The device was un-claimed from the users account by an
     * Administrator of the device. Also indicates the failure to claim Targets of type HTTP Endpoint in Intersight. *
     * `Claimed` - Target of type HTTP Endpoint is successfully claimed in Intersight. Currently no validation is performed to
     * verify the Target connectivity from Intersight at the time of creation. However invoking API from Intersight
     * Orchestrator fails if this Target is not reachable from Intersight or if Target API credentials are incorrect.
     */
    status?: pulumi.Input<string>;
    /**
     * StatusErrorReason provides additional context for the Status.
     */
    statusErrorReason?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AssetTargetTag>[]>;
    targetIds?: pulumi.Input<pulumi.Input<string>[]>;
    targetType?: pulumi.Input<string>;
    /**
     * A reference to a iamTrustPoint resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    trustPoints?: pulumi.Input<pulumi.Input<inputs.AssetTargetTrustPoint>[]>;
    /**
     * The vendor of the managed target.
     */
    vendor?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.AssetTargetVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.AssetTargetWorkflowInfo>[]>;
}

/**
 * The set of arguments for constructing a AssetTarget resource.
 */
export interface AssetTargetArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.AssetTargetAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * AlarmSummary is a health score calculation and aggregation of alarm counts per severity of alarms which Intersight's
     * ability to manage the Target.
     */
    alarmSummaries?: pulumi.Input<pulumi.Input<inputs.AssetTargetAlarmSummary>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.AssetTargetAncestor>[]>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    assists?: pulumi.Input<pulumi.Input<inputs.AssetTargetAssist>[]>;
    /**
     * The name or email id of the user who claimed the target.
     */
    claimedByUserName?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    connections?: pulumi.Input<pulumi.Input<inputs.AssetTargetConnection>[]>;
    /**
     * The Device Connector version for target types which are managed by via embedded Device Connector.
     */
    connectorVersion?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    customPermissionResources?: pulumi.Input<pulumi.Input<inputs.AssetTargetCustomPermissionResource>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * ExternalIpAddress is applicable for targets which are managed via an Intersight Device Connector. The value is the IP
     * Address of the target as seen from Intersight. It is either the IP Address of the managed target's interface which has a
     * route to the internet or a NAT IP Address when the target is deployed in a private network.
     */
    externalIpAddress?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The location from which Intersight manages the target. * `Unknown` - The management mechanism is not detected. Unknown
     * is used as a default by the implementation and is not an allowed user input. * `Intersight` - Management of a target is
     * performed directly from Intersight. Network connections are established from Intersight to a management interface of the
     * Target and authenticated using user provided credentials. * `IntersightAssist` - Management of a target is performed via
     * a selected Intersight Assist. Network connections are established from the Intersight Assist to a management interface
     * of the Target. * `DeviceConnector` - An Intersight Device Connector running within the Target establishes a connection
     * to Intersight and management of the target is performed via this connection.
     */
    managementLocation?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * A user provided name for the managed target.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.AssetTargetParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.AssetTargetPermissionResource>[]>;
    productIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * For targets which are managed by an embedded Intersight Device Connector, this field indicates that an administrator of
     * the target has disabled management operations of the Device Connector and only monitoring is permitted.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    registeredDevices?: pulumi.Input<pulumi.Input<inputs.AssetTargetRegisteredDevice>[]>;
    services?: pulumi.Input<pulumi.Input<inputs.AssetTargetService>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Status indicates if Intersight can establish a connection and authenticate with the managed target. Status does not
     * include information about the functional health of the target. * `` - The target details have been persisted but
     * Intersight has not yet attempted to connect to the target. * `Connected` - Intersight is able to establish a connection
     * to the target and initiate management activities. * `NotConnected` - Intersight is unable to establish a connection to
     * the target. * `ClaimInProgress` - Claim of the target is in progress. A connection to the target has not been fully
     * established. * `UnclaimInProgress` - Unclaim of the target is in progress. Intersight is able to connect to the target
     * and all management operations are supported. * `Unclaimed` - The device was un-claimed from the users account by an
     * Administrator of the device. Also indicates the failure to claim Targets of type HTTP Endpoint in Intersight. *
     * `Claimed` - Target of type HTTP Endpoint is successfully claimed in Intersight. Currently no validation is performed to
     * verify the Target connectivity from Intersight at the time of creation. However invoking API from Intersight
     * Orchestrator fails if this Target is not reachable from Intersight or if Target API credentials are incorrect.
     */
    status?: pulumi.Input<string>;
    /**
     * StatusErrorReason provides additional context for the Status.
     */
    statusErrorReason?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AssetTargetTag>[]>;
    targetIds?: pulumi.Input<pulumi.Input<string>[]>;
    targetType?: pulumi.Input<string>;
    /**
     * A reference to a iamTrustPoint resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    trustPoints?: pulumi.Input<pulumi.Input<inputs.AssetTargetTrustPoint>[]>;
    /**
     * The vendor of the managed target.
     */
    vendor?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.AssetTargetVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.AssetTargetWorkflowInfo>[]>;
}
