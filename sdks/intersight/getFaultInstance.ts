// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFaultInstance(args?: GetFaultInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetFaultInstanceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFaultInstance:getFaultInstance", {
        "accountMoid": args.accountMoid,
        "acknowledged": args.acknowledged,
        "additionalProperties": args.additionalProperties,
        "affectedDn": args.affectedDn,
        "affectedMo": args.affectedMo,
        "affectedMoId": args.affectedMoId,
        "affectedMoType": args.affectedMoType,
        "ancestorMo": args.ancestorMo,
        "ancestorMoId": args.ancestorMoId,
        "ancestorMoType": args.ancestorMoType,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "code": args.code,
        "createTime": args.createTime,
        "creationTime": args.creationTime,
        "description": args.description,
        "deviceMoId": args.deviceMoId,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inventoryDeviceInfo": args.inventoryDeviceInfo,
        "lastTransitionTime": args.lastTransitionTime,
        "modTime": args.modTime,
        "moid": args.moid,
        "numOccurrences": args.numOccurrences,
        "objectType": args.objectType,
        "originalSeverity": args.originalSeverity,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "previousSeverity": args.previousSeverity,
        "registeredDevice": args.registeredDevice,
        "rn": args.rn,
        "rule": args.rule,
        "severity": args.severity,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFaultInstance.
 */
export interface GetFaultInstanceArgs {
    accountMoid?: string;
    acknowledged?: string;
    additionalProperties?: string;
    affectedDn?: string;
    affectedMo?: inputs.GetFaultInstanceAffectedMo;
    affectedMoId?: string;
    affectedMoType?: string;
    ancestorMo?: inputs.GetFaultInstanceAncestorMo;
    ancestorMoId?: string;
    ancestorMoType?: string;
    ancestors?: inputs.GetFaultInstanceAncestor[];
    classId?: string;
    code?: string;
    createTime?: string;
    creationTime?: string;
    description?: string;
    deviceMoId?: string;
    dn?: string;
    domainGroupMoid?: string;
    id?: string;
    inventoryDeviceInfo?: inputs.GetFaultInstanceInventoryDeviceInfo;
    lastTransitionTime?: string;
    modTime?: string;
    moid?: string;
    numOccurrences?: number;
    objectType?: string;
    originalSeverity?: string;
    owners?: string[];
    parent?: inputs.GetFaultInstanceParent;
    permissionResources?: inputs.GetFaultInstancePermissionResource[];
    previousSeverity?: string;
    registeredDevice?: inputs.GetFaultInstanceRegisteredDevice;
    rn?: string;
    rule?: string;
    severity?: string;
    sharedScope?: string;
    tags?: inputs.GetFaultInstanceTag[];
    versionContext?: inputs.GetFaultInstanceVersionContext;
}

/**
 * A collection of values returned by getFaultInstance.
 */
export interface GetFaultInstanceResult {
    readonly accountMoid?: string;
    readonly acknowledged?: string;
    readonly additionalProperties?: string;
    readonly affectedDn?: string;
    readonly affectedMo?: outputs.GetFaultInstanceAffectedMo;
    readonly affectedMoId?: string;
    readonly affectedMoType?: string;
    readonly ancestorMo?: outputs.GetFaultInstanceAncestorMo;
    readonly ancestorMoId?: string;
    readonly ancestorMoType?: string;
    readonly ancestors?: outputs.GetFaultInstanceAncestor[];
    readonly classId?: string;
    readonly code?: string;
    readonly createTime?: string;
    readonly creationTime?: string;
    readonly description?: string;
    readonly deviceMoId?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inventoryDeviceInfo?: outputs.GetFaultInstanceInventoryDeviceInfo;
    readonly lastTransitionTime?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly numOccurrences?: number;
    readonly objectType?: string;
    readonly originalSeverity?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFaultInstanceParent;
    readonly permissionResources?: outputs.GetFaultInstancePermissionResource[];
    readonly previousSeverity?: string;
    readonly registeredDevice?: outputs.GetFaultInstanceRegisteredDevice;
    readonly results: outputs.GetFaultInstanceResult[];
    readonly rn?: string;
    readonly rule?: string;
    readonly severity?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetFaultInstanceTag[];
    readonly versionContext?: outputs.GetFaultInstanceVersionContext;
}
export function getFaultInstanceOutput(args?: GetFaultInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFaultInstanceResult> {
    return pulumi.output(args).apply((a: any) => getFaultInstance(a, opts))
}

/**
 * A collection of arguments for invoking getFaultInstance.
 */
export interface GetFaultInstanceOutputArgs {
    accountMoid?: pulumi.Input<string>;
    acknowledged?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    affectedDn?: pulumi.Input<string>;
    affectedMo?: pulumi.Input<inputs.GetFaultInstanceAffectedMoArgs>;
    affectedMoId?: pulumi.Input<string>;
    affectedMoType?: pulumi.Input<string>;
    ancestorMo?: pulumi.Input<inputs.GetFaultInstanceAncestorMoArgs>;
    ancestorMoId?: pulumi.Input<string>;
    ancestorMoType?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFaultInstanceAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    code?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventoryDeviceInfo?: pulumi.Input<inputs.GetFaultInstanceInventoryDeviceInfoArgs>;
    lastTransitionTime?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    numOccurrences?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    originalSeverity?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFaultInstanceParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFaultInstancePermissionResourceArgs>[]>;
    previousSeverity?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetFaultInstanceRegisteredDeviceArgs>;
    rn?: pulumi.Input<string>;
    rule?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFaultInstanceTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetFaultInstanceVersionContextArgs>;
}
