// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getOsBulkInstallInfo(args?: GetOsBulkInstallInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetOsBulkInstallInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getOsBulkInstallInfo:getOsBulkInstallInfo", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "configurationFile": args.configurationFile,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "fileContent": args.fileContent,
        "globalConfig": args.globalConfig,
        "id": args.id,
        "isFileContentSet": args.isFileContentSet,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "operState": args.operState,
        "organization": args.organization,
        "osImage": args.osImage,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "scuImage": args.scuImage,
        "serverConfigs": args.serverConfigs,
        "servers": args.servers,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "validationInfos": args.validationInfos,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getOsBulkInstallInfo.
 */
export interface GetOsBulkInstallInfoArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetOsBulkInstallInfoAncestor[];
    classId?: string;
    configurationFile?: inputs.GetOsBulkInstallInfoConfigurationFile;
    createTime?: string;
    domainGroupMoid?: string;
    fileContent?: string;
    globalConfig?: inputs.GetOsBulkInstallInfoGlobalConfig;
    id?: string;
    isFileContentSet?: boolean;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    operState?: string;
    organization?: inputs.GetOsBulkInstallInfoOrganization;
    osImage?: inputs.GetOsBulkInstallInfoOsImage;
    owners?: string[];
    parent?: inputs.GetOsBulkInstallInfoParent;
    permissionResources?: inputs.GetOsBulkInstallInfoPermissionResource[];
    scuImage?: inputs.GetOsBulkInstallInfoScuImage;
    serverConfigs?: inputs.GetOsBulkInstallInfoServerConfig[];
    servers?: inputs.GetOsBulkInstallInfoServer[];
    sharedScope?: string;
    tags?: inputs.GetOsBulkInstallInfoTag[];
    validationInfos?: inputs.GetOsBulkInstallInfoValidationInfo[];
    versionContext?: inputs.GetOsBulkInstallInfoVersionContext;
}

/**
 * A collection of values returned by getOsBulkInstallInfo.
 */
export interface GetOsBulkInstallInfoResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetOsBulkInstallInfoAncestor[];
    readonly classId?: string;
    readonly configurationFile?: outputs.GetOsBulkInstallInfoConfigurationFile;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly fileContent?: string;
    readonly globalConfig?: outputs.GetOsBulkInstallInfoGlobalConfig;
    readonly id: string;
    readonly isFileContentSet?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly operState?: string;
    readonly organization?: outputs.GetOsBulkInstallInfoOrganization;
    readonly osImage?: outputs.GetOsBulkInstallInfoOsImage;
    readonly owners?: string[];
    readonly parent?: outputs.GetOsBulkInstallInfoParent;
    readonly permissionResources?: outputs.GetOsBulkInstallInfoPermissionResource[];
    readonly results: outputs.GetOsBulkInstallInfoResult[];
    readonly scuImage?: outputs.GetOsBulkInstallInfoScuImage;
    readonly serverConfigs?: outputs.GetOsBulkInstallInfoServerConfig[];
    readonly servers?: outputs.GetOsBulkInstallInfoServer[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetOsBulkInstallInfoTag[];
    readonly validationInfos?: outputs.GetOsBulkInstallInfoValidationInfo[];
    readonly versionContext?: outputs.GetOsBulkInstallInfoVersionContext;
}
export function getOsBulkInstallInfoOutput(args?: GetOsBulkInstallInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOsBulkInstallInfoResult> {
    return pulumi.output(args).apply((a: any) => getOsBulkInstallInfo(a, opts))
}

/**
 * A collection of arguments for invoking getOsBulkInstallInfo.
 */
export interface GetOsBulkInstallInfoOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetOsBulkInstallInfoAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    configurationFile?: pulumi.Input<inputs.GetOsBulkInstallInfoConfigurationFileArgs>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    fileContent?: pulumi.Input<string>;
    globalConfig?: pulumi.Input<inputs.GetOsBulkInstallInfoGlobalConfigArgs>;
    id?: pulumi.Input<string>;
    isFileContentSet?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    operState?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetOsBulkInstallInfoOrganizationArgs>;
    osImage?: pulumi.Input<inputs.GetOsBulkInstallInfoOsImageArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetOsBulkInstallInfoParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetOsBulkInstallInfoPermissionResourceArgs>[]>;
    scuImage?: pulumi.Input<inputs.GetOsBulkInstallInfoScuImageArgs>;
    serverConfigs?: pulumi.Input<pulumi.Input<inputs.GetOsBulkInstallInfoServerConfigArgs>[]>;
    servers?: pulumi.Input<pulumi.Input<inputs.GetOsBulkInstallInfoServerArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetOsBulkInstallInfoTagArgs>[]>;
    validationInfos?: pulumi.Input<pulumi.Input<inputs.GetOsBulkInstallInfoValidationInfoArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetOsBulkInstallInfoVersionContextArgs>;
}
