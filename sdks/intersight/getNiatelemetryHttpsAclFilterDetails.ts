// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryHttpsAclFilterDetails(args?: GetNiatelemetryHttpsAclFilterDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryHttpsAclFilterDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryHttpsAclFilterDetails:getNiatelemetryHttpsAclFilterDetails", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "destFromPort": args.destFromPort,
        "destToPort": args.destToPort,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "filterName": args.filterName,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "prot": args.prot,
        "recordType": args.recordType,
        "recordVersion": args.recordVersion,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "siteName": args.siteName,
        "srcFromPort": args.srcFromPort,
        "srcToPort": args.srcToPort,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryHttpsAclFilterDetails.
 */
export interface GetNiatelemetryHttpsAclFilterDetailsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiatelemetryHttpsAclFilterDetailsAncestor[];
    classId?: string;
    createTime?: string;
    destFromPort?: string;
    destToPort?: string;
    dn?: string;
    domainGroupMoid?: string;
    filterName?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryHttpsAclFilterDetailsParent;
    permissionResources?: inputs.GetNiatelemetryHttpsAclFilterDetailsPermissionResource[];
    prot?: string;
    recordType?: string;
    recordVersion?: string;
    registeredDevice?: inputs.GetNiatelemetryHttpsAclFilterDetailsRegisteredDevice;
    sharedScope?: string;
    siteName?: string;
    srcFromPort?: string;
    srcToPort?: string;
    tags?: inputs.GetNiatelemetryHttpsAclFilterDetailsTag[];
    versionContext?: inputs.GetNiatelemetryHttpsAclFilterDetailsVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryHttpsAclFilterDetails.
 */
export interface GetNiatelemetryHttpsAclFilterDetailsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiatelemetryHttpsAclFilterDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly destFromPort?: string;
    readonly destToPort?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly filterName?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryHttpsAclFilterDetailsParent;
    readonly permissionResources?: outputs.GetNiatelemetryHttpsAclFilterDetailsPermissionResource[];
    readonly prot?: string;
    readonly recordType?: string;
    readonly recordVersion?: string;
    readonly registeredDevice?: outputs.GetNiatelemetryHttpsAclFilterDetailsRegisteredDevice;
    readonly results: outputs.GetNiatelemetryHttpsAclFilterDetailsResult[];
    readonly sharedScope?: string;
    readonly siteName?: string;
    readonly srcFromPort?: string;
    readonly srcToPort?: string;
    readonly tags?: outputs.GetNiatelemetryHttpsAclFilterDetailsTag[];
    readonly versionContext?: outputs.GetNiatelemetryHttpsAclFilterDetailsVersionContext;
}
export function getNiatelemetryHttpsAclFilterDetailsOutput(args?: GetNiatelemetryHttpsAclFilterDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryHttpsAclFilterDetailsResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryHttpsAclFilterDetails(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryHttpsAclFilterDetails.
 */
export interface GetNiatelemetryHttpsAclFilterDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryHttpsAclFilterDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    destFromPort?: pulumi.Input<string>;
    destToPort?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    filterName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryHttpsAclFilterDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryHttpsAclFilterDetailsPermissionResourceArgs>[]>;
    prot?: pulumi.Input<string>;
    recordType?: pulumi.Input<string>;
    recordVersion?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetryHttpsAclFilterDetailsRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    siteName?: pulumi.Input<string>;
    srcFromPort?: pulumi.Input<string>;
    srcToPort?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryHttpsAclFilterDetailsTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryHttpsAclFilterDetailsVersionContextArgs>;
}
