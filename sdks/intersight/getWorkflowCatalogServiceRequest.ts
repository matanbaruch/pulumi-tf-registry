// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkflowCatalogServiceRequest(args?: GetWorkflowCatalogServiceRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowCatalogServiceRequestResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getWorkflowCatalogServiceRequest:getWorkflowCatalogServiceRequest", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalogItemDefinition": args.catalogItemDefinition,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "endTime": args.endTime,
        "id": args.id,
        "idp": args.idp,
        "idpReference": args.idpReference,
        "input": args.input,
        "label": args.label,
        "messages": args.messages,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "operation": args.operation,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "selectionCriteriaInputs": args.selectionCriteriaInputs,
        "serviceItemActionInstances": args.serviceItemActionInstances,
        "serviceItemInstances": args.serviceItemInstances,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "user": args.user,
        "userIdOrEmail": args.userIdOrEmail,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkflowCatalogServiceRequest.
 */
export interface GetWorkflowCatalogServiceRequestArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetWorkflowCatalogServiceRequestAncestor[];
    catalogItemDefinition?: inputs.GetWorkflowCatalogServiceRequestCatalogItemDefinition;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    endTime?: string;
    id?: string;
    idp?: inputs.GetWorkflowCatalogServiceRequestIdp;
    idpReference?: inputs.GetWorkflowCatalogServiceRequestIdpReference;
    input?: string;
    label?: string;
    messages?: inputs.GetWorkflowCatalogServiceRequestMessage[];
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    operation?: inputs.GetWorkflowCatalogServiceRequestOperation;
    organization?: inputs.GetWorkflowCatalogServiceRequestOrganization;
    owners?: string[];
    parent?: inputs.GetWorkflowCatalogServiceRequestParent;
    permissionResources?: inputs.GetWorkflowCatalogServiceRequestPermissionResource[];
    selectionCriteriaInputs?: inputs.GetWorkflowCatalogServiceRequestSelectionCriteriaInput[];
    serviceItemActionInstances?: inputs.GetWorkflowCatalogServiceRequestServiceItemActionInstance[];
    serviceItemInstances?: inputs.GetWorkflowCatalogServiceRequestServiceItemInstance[];
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetWorkflowCatalogServiceRequestTag[];
    user?: inputs.GetWorkflowCatalogServiceRequestUser;
    userIdOrEmail?: string;
    versionContext?: inputs.GetWorkflowCatalogServiceRequestVersionContext;
}

/**
 * A collection of values returned by getWorkflowCatalogServiceRequest.
 */
export interface GetWorkflowCatalogServiceRequestResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetWorkflowCatalogServiceRequestAncestor[];
    readonly catalogItemDefinition?: outputs.GetWorkflowCatalogServiceRequestCatalogItemDefinition;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly endTime?: string;
    readonly id: string;
    readonly idp?: outputs.GetWorkflowCatalogServiceRequestIdp;
    readonly idpReference?: outputs.GetWorkflowCatalogServiceRequestIdpReference;
    readonly input?: string;
    readonly label?: string;
    readonly messages?: outputs.GetWorkflowCatalogServiceRequestMessage[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly operation?: outputs.GetWorkflowCatalogServiceRequestOperation;
    readonly organization?: outputs.GetWorkflowCatalogServiceRequestOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetWorkflowCatalogServiceRequestParent;
    readonly permissionResources?: outputs.GetWorkflowCatalogServiceRequestPermissionResource[];
    readonly results: outputs.GetWorkflowCatalogServiceRequestResult[];
    readonly selectionCriteriaInputs?: outputs.GetWorkflowCatalogServiceRequestSelectionCriteriaInput[];
    readonly serviceItemActionInstances?: outputs.GetWorkflowCatalogServiceRequestServiceItemActionInstance[];
    readonly serviceItemInstances?: outputs.GetWorkflowCatalogServiceRequestServiceItemInstance[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetWorkflowCatalogServiceRequestTag[];
    readonly user?: outputs.GetWorkflowCatalogServiceRequestUser;
    readonly userIdOrEmail?: string;
    readonly versionContext?: outputs.GetWorkflowCatalogServiceRequestVersionContext;
}
export function getWorkflowCatalogServiceRequestOutput(args?: GetWorkflowCatalogServiceRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowCatalogServiceRequestResult> {
    return pulumi.output(args).apply((a: any) => getWorkflowCatalogServiceRequest(a, opts))
}

/**
 * A collection of arguments for invoking getWorkflowCatalogServiceRequest.
 */
export interface GetWorkflowCatalogServiceRequestOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestAncestorArgs>[]>;
    catalogItemDefinition?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestCatalogItemDefinitionArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    idp?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestIdpArgs>;
    idpReference?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestIdpReferenceArgs>;
    input?: pulumi.Input<string>;
    label?: pulumi.Input<string>;
    messages?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestMessageArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    operation?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestOperationArgs>;
    organization?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestPermissionResourceArgs>[]>;
    selectionCriteriaInputs?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestSelectionCriteriaInputArgs>[]>;
    serviceItemActionInstances?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestServiceItemActionInstanceArgs>[]>;
    serviceItemInstances?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestServiceItemInstanceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetWorkflowCatalogServiceRequestTagArgs>[]>;
    user?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestUserArgs>;
    userIdOrEmail?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetWorkflowCatalogServiceRequestVersionContextArgs>;
}
