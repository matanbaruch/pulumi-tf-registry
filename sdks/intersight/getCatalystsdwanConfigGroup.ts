// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCatalystsdwanConfigGroup(args?: GetCatalystsdwanConfigGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetCatalystsdwanConfigGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCatalystsdwanConfigGroup:getCatalystsdwanConfigGroup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "configGroupId": args.configGroupId,
        "createTime": args.createTime,
        "devices": args.devices,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "numberOfDevices": args.numberOfDevices,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "solution": args.solution,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCatalystsdwanConfigGroup.
 */
export interface GetCatalystsdwanConfigGroupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCatalystsdwanConfigGroupAncestor[];
    classId?: string;
    configGroupId?: string;
    createTime?: string;
    devices?: string[];
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    numberOfDevices?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCatalystsdwanConfigGroupParent;
    permissionResources?: inputs.GetCatalystsdwanConfigGroupPermissionResource[];
    registeredDevice?: inputs.GetCatalystsdwanConfigGroupRegisteredDevice;
    sharedScope?: string;
    solution?: string;
    tags?: inputs.GetCatalystsdwanConfigGroupTag[];
    versionContext?: inputs.GetCatalystsdwanConfigGroupVersionContext;
}

/**
 * A collection of values returned by getCatalystsdwanConfigGroup.
 */
export interface GetCatalystsdwanConfigGroupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCatalystsdwanConfigGroupAncestor[];
    readonly classId?: string;
    readonly configGroupId?: string;
    readonly createTime?: string;
    readonly devices?: string[];
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly numberOfDevices?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCatalystsdwanConfigGroupParent;
    readonly permissionResources?: outputs.GetCatalystsdwanConfigGroupPermissionResource[];
    readonly registeredDevice?: outputs.GetCatalystsdwanConfigGroupRegisteredDevice;
    readonly results: outputs.GetCatalystsdwanConfigGroupResult[];
    readonly sharedScope?: string;
    readonly solution?: string;
    readonly tags?: outputs.GetCatalystsdwanConfigGroupTag[];
    readonly versionContext?: outputs.GetCatalystsdwanConfigGroupVersionContext;
}
export function getCatalystsdwanConfigGroupOutput(args?: GetCatalystsdwanConfigGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCatalystsdwanConfigGroupResult> {
    return pulumi.output(args).apply((a: any) => getCatalystsdwanConfigGroup(a, opts))
}

/**
 * A collection of arguments for invoking getCatalystsdwanConfigGroup.
 */
export interface GetCatalystsdwanConfigGroupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCatalystsdwanConfigGroupAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    configGroupId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    devices?: pulumi.Input<pulumi.Input<string>[]>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numberOfDevices?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCatalystsdwanConfigGroupParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCatalystsdwanConfigGroupPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetCatalystsdwanConfigGroupRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    solution?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCatalystsdwanConfigGroupTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetCatalystsdwanConfigGroupVersionContextArgs>;
}
