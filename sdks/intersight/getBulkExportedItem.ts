// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBulkExportedItem(args?: GetBulkExportedItemArgs, opts?: pulumi.InvokeOptions): Promise<GetBulkExportedItemResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getBulkExportedItem:getBulkExportedItem", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "excludePeers": args.excludePeers,
        "excludeRelations": args.excludeRelations,
        "export": args.export,
        "exportTags": args.exportTags,
        "fileName": args.fileName,
        "id": args.id,
        "includeOrgIdentity": args.includeOrgIdentity,
        "item": args.item,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "parentItem": args.parentItem,
        "permissionResources": args.permissionResources,
        "relatedItems": args.relatedItems,
        "serviceName": args.serviceName,
        "serviceVersion": args.serviceVersion,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "statusMessage": args.statusMessage,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBulkExportedItem.
 */
export interface GetBulkExportedItemArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetBulkExportedItemAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    excludePeers?: string[];
    excludeRelations?: boolean;
    export?: inputs.GetBulkExportedItemExport;
    exportTags?: boolean;
    fileName?: string;
    id?: string;
    includeOrgIdentity?: boolean;
    item?: inputs.GetBulkExportedItemItem;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetBulkExportedItemParent;
    parentItem?: inputs.GetBulkExportedItemParentItem;
    permissionResources?: inputs.GetBulkExportedItemPermissionResource[];
    relatedItems?: inputs.GetBulkExportedItemRelatedItem[];
    serviceName?: string;
    serviceVersion?: string;
    sharedScope?: string;
    status?: string;
    statusMessage?: string;
    tags?: inputs.GetBulkExportedItemTag[];
    versionContext?: inputs.GetBulkExportedItemVersionContext;
}

/**
 * A collection of values returned by getBulkExportedItem.
 */
export interface GetBulkExportedItemResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetBulkExportedItemAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly excludePeers?: string[];
    readonly excludeRelations?: boolean;
    readonly export?: outputs.GetBulkExportedItemExport;
    readonly exportTags?: boolean;
    readonly fileName?: string;
    readonly id: string;
    readonly includeOrgIdentity?: boolean;
    readonly item?: outputs.GetBulkExportedItemItem;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetBulkExportedItemParent;
    readonly parentItem?: outputs.GetBulkExportedItemParentItem;
    readonly permissionResources?: outputs.GetBulkExportedItemPermissionResource[];
    readonly relatedItems?: outputs.GetBulkExportedItemRelatedItem[];
    readonly results: outputs.GetBulkExportedItemResult[];
    readonly serviceName?: string;
    readonly serviceVersion?: string;
    readonly sharedScope?: string;
    readonly status?: string;
    readonly statusMessage?: string;
    readonly tags?: outputs.GetBulkExportedItemTag[];
    readonly versionContext?: outputs.GetBulkExportedItemVersionContext;
}
export function getBulkExportedItemOutput(args?: GetBulkExportedItemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBulkExportedItemResult> {
    return pulumi.output(args).apply((a: any) => getBulkExportedItem(a, opts))
}

/**
 * A collection of arguments for invoking getBulkExportedItem.
 */
export interface GetBulkExportedItemOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetBulkExportedItemAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    excludePeers?: pulumi.Input<pulumi.Input<string>[]>;
    excludeRelations?: pulumi.Input<boolean>;
    export?: pulumi.Input<inputs.GetBulkExportedItemExportArgs>;
    exportTags?: pulumi.Input<boolean>;
    fileName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    includeOrgIdentity?: pulumi.Input<boolean>;
    item?: pulumi.Input<inputs.GetBulkExportedItemItemArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetBulkExportedItemParentArgs>;
    parentItem?: pulumi.Input<inputs.GetBulkExportedItemParentItemArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetBulkExportedItemPermissionResourceArgs>[]>;
    relatedItems?: pulumi.Input<pulumi.Input<inputs.GetBulkExportedItemRelatedItemArgs>[]>;
    serviceName?: pulumi.Input<string>;
    serviceVersion?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetBulkExportedItemTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetBulkExportedItemVersionContextArgs>;
}
