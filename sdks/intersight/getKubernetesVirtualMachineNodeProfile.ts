// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesVirtualMachineNodeProfile(args?: GetKubernetesVirtualMachineNodeProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesVirtualMachineNodeProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKubernetesVirtualMachineNodeProfile:getKubernetesVirtualMachineNodeProfile", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "actionParams": args.actionParams,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "cloudProvider": args.cloudProvider,
        "configContext": args.configContext,
        "configResult": args.configResult,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "interfaces": args.interfaces,
        "ipAddresses": args.ipAddresses,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nodeGroup": args.nodeGroup,
        "nodeIp": args.nodeIp,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyBuckets": args.policyBuckets,
        "scheduledActions": args.scheduledActions,
        "sharedScope": args.sharedScope,
        "srcTemplate": args.srcTemplate,
        "tags": args.tags,
        "target": args.target,
        "type": args.type,
        "versionContext": args.versionContext,
        "virtualMachine": args.virtualMachine,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesVirtualMachineNodeProfile.
 */
export interface GetKubernetesVirtualMachineNodeProfileArgs {
    accountMoid?: string;
    action?: string;
    actionParams?: inputs.GetKubernetesVirtualMachineNodeProfileActionParam[];
    additionalProperties?: string;
    ancestors?: inputs.GetKubernetesVirtualMachineNodeProfileAncestor[];
    classId?: string;
    cloudProvider?: string;
    configContext?: inputs.GetKubernetesVirtualMachineNodeProfileConfigContext;
    configResult?: inputs.GetKubernetesVirtualMachineNodeProfileConfigResult;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    interfaces?: inputs.GetKubernetesVirtualMachineNodeProfileInterface[];
    ipAddresses?: inputs.GetKubernetesVirtualMachineNodeProfileIpAddress[];
    modTime?: string;
    moid?: string;
    name?: string;
    nodeGroup?: inputs.GetKubernetesVirtualMachineNodeProfileNodeGroup;
    nodeIp?: inputs.GetKubernetesVirtualMachineNodeProfileNodeIp;
    nrVersion?: inputs.GetKubernetesVirtualMachineNodeProfileNrVersion;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetKubernetesVirtualMachineNodeProfileParent;
    permissionResources?: inputs.GetKubernetesVirtualMachineNodeProfilePermissionResource[];
    policyBuckets?: inputs.GetKubernetesVirtualMachineNodeProfilePolicyBucket[];
    scheduledActions?: inputs.GetKubernetesVirtualMachineNodeProfileScheduledAction[];
    sharedScope?: string;
    srcTemplate?: inputs.GetKubernetesVirtualMachineNodeProfileSrcTemplate;
    tags?: inputs.GetKubernetesVirtualMachineNodeProfileTag[];
    target?: inputs.GetKubernetesVirtualMachineNodeProfileTarget;
    type?: string;
    versionContext?: inputs.GetKubernetesVirtualMachineNodeProfileVersionContext;
    virtualMachine?: inputs.GetKubernetesVirtualMachineNodeProfileVirtualMachine;
}

/**
 * A collection of values returned by getKubernetesVirtualMachineNodeProfile.
 */
export interface GetKubernetesVirtualMachineNodeProfileResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly actionParams?: outputs.GetKubernetesVirtualMachineNodeProfileActionParam[];
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKubernetesVirtualMachineNodeProfileAncestor[];
    readonly classId?: string;
    readonly cloudProvider?: string;
    readonly configContext?: outputs.GetKubernetesVirtualMachineNodeProfileConfigContext;
    readonly configResult?: outputs.GetKubernetesVirtualMachineNodeProfileConfigResult;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly interfaces?: outputs.GetKubernetesVirtualMachineNodeProfileInterface[];
    readonly ipAddresses?: outputs.GetKubernetesVirtualMachineNodeProfileIpAddress[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nodeGroup?: outputs.GetKubernetesVirtualMachineNodeProfileNodeGroup;
    readonly nodeIp?: outputs.GetKubernetesVirtualMachineNodeProfileNodeIp;
    readonly nrVersion?: outputs.GetKubernetesVirtualMachineNodeProfileNrVersion;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetKubernetesVirtualMachineNodeProfileParent;
    readonly permissionResources?: outputs.GetKubernetesVirtualMachineNodeProfilePermissionResource[];
    readonly policyBuckets?: outputs.GetKubernetesVirtualMachineNodeProfilePolicyBucket[];
    readonly results: outputs.GetKubernetesVirtualMachineNodeProfileResult[];
    readonly scheduledActions?: outputs.GetKubernetesVirtualMachineNodeProfileScheduledAction[];
    readonly sharedScope?: string;
    readonly srcTemplate?: outputs.GetKubernetesVirtualMachineNodeProfileSrcTemplate;
    readonly tags?: outputs.GetKubernetesVirtualMachineNodeProfileTag[];
    readonly target?: outputs.GetKubernetesVirtualMachineNodeProfileTarget;
    readonly type?: string;
    readonly versionContext?: outputs.GetKubernetesVirtualMachineNodeProfileVersionContext;
    readonly virtualMachine?: outputs.GetKubernetesVirtualMachineNodeProfileVirtualMachine;
}
export function getKubernetesVirtualMachineNodeProfileOutput(args?: GetKubernetesVirtualMachineNodeProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesVirtualMachineNodeProfileResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesVirtualMachineNodeProfile(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesVirtualMachineNodeProfile.
 */
export interface GetKubernetesVirtualMachineNodeProfileOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileActionParamArgs>[]>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    cloudProvider?: pulumi.Input<string>;
    configContext?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileConfigContextArgs>;
    configResult?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileConfigResultArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interfaces?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileInterfaceArgs>[]>;
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileIpAddressArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nodeGroup?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileNodeGroupArgs>;
    nodeIp?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileNodeIpArgs>;
    nrVersion?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileNrVersionArgs>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfilePermissionResourceArgs>[]>;
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfilePolicyBucketArgs>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileScheduledActionArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    srcTemplate?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileSrcTemplateArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileTagArgs>[]>;
    target?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileTargetArgs>;
    type?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileVersionContextArgs>;
    virtualMachine?: pulumi.Input<inputs.GetKubernetesVirtualMachineNodeProfileVirtualMachineArgs>;
}
