// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getInventoryGenericInventory(args?: GetInventoryGenericInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetInventoryGenericInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getInventoryGenericInventory:getInventoryGenericInventory", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "deviceMoId": args.deviceMoId,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inventoryDeviceInfo": args.inventoryDeviceInfo,
        "inventoryGenericInventoryHolder": args.inventoryGenericInventoryHolder,
        "key": args.key,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "rn": args.rn,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "type": args.type,
        "value": args.value,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getInventoryGenericInventory.
 */
export interface GetInventoryGenericInventoryArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetInventoryGenericInventoryAncestor[];
    classId?: string;
    createTime?: string;
    deviceMoId?: string;
    dn?: string;
    domainGroupMoid?: string;
    id?: string;
    inventoryDeviceInfo?: inputs.GetInventoryGenericInventoryInventoryDeviceInfo;
    inventoryGenericInventoryHolder?: inputs.GetInventoryGenericInventoryInventoryGenericInventoryHolder;
    key?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetInventoryGenericInventoryParent;
    permissionResources?: inputs.GetInventoryGenericInventoryPermissionResource[];
    registeredDevice?: inputs.GetInventoryGenericInventoryRegisteredDevice;
    rn?: string;
    sharedScope?: string;
    tags?: inputs.GetInventoryGenericInventoryTag[];
    type?: string;
    value?: string;
    versionContext?: inputs.GetInventoryGenericInventoryVersionContext;
}

/**
 * A collection of values returned by getInventoryGenericInventory.
 */
export interface GetInventoryGenericInventoryResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetInventoryGenericInventoryAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly deviceMoId?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inventoryDeviceInfo?: outputs.GetInventoryGenericInventoryInventoryDeviceInfo;
    readonly inventoryGenericInventoryHolder?: outputs.GetInventoryGenericInventoryInventoryGenericInventoryHolder;
    readonly key?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetInventoryGenericInventoryParent;
    readonly permissionResources?: outputs.GetInventoryGenericInventoryPermissionResource[];
    readonly registeredDevice?: outputs.GetInventoryGenericInventoryRegisteredDevice;
    readonly results: outputs.GetInventoryGenericInventoryResult[];
    readonly rn?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetInventoryGenericInventoryTag[];
    readonly type?: string;
    readonly value?: string;
    readonly versionContext?: outputs.GetInventoryGenericInventoryVersionContext;
}
export function getInventoryGenericInventoryOutput(args?: GetInventoryGenericInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInventoryGenericInventoryResult> {
    return pulumi.output(args).apply((a: any) => getInventoryGenericInventory(a, opts))
}

/**
 * A collection of arguments for invoking getInventoryGenericInventory.
 */
export interface GetInventoryGenericInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetInventoryGenericInventoryAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventoryDeviceInfo?: pulumi.Input<inputs.GetInventoryGenericInventoryInventoryDeviceInfoArgs>;
    inventoryGenericInventoryHolder?: pulumi.Input<inputs.GetInventoryGenericInventoryInventoryGenericInventoryHolderArgs>;
    key?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetInventoryGenericInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetInventoryGenericInventoryPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetInventoryGenericInventoryRegisteredDeviceArgs>;
    rn?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetInventoryGenericInventoryTagArgs>[]>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetInventoryGenericInventoryVersionContextArgs>;
}
