// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamSharingRule(args?: GetIamSharingRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetIamSharingRuleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamSharingRule:getIamSharingRule", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedResource": args.sharedResource,
        "sharedScope": args.sharedScope,
        "sharedWithResource": args.sharedWithResource,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamSharingRule.
 */
export interface GetIamSharingRuleArgs {
    account?: inputs.GetIamSharingRuleAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamSharingRuleAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamSharingRuleParent;
    permissionResources?: inputs.GetIamSharingRulePermissionResource[];
    sharedResource?: inputs.GetIamSharingRuleSharedResource;
    sharedScope?: string;
    sharedWithResource?: inputs.GetIamSharingRuleSharedWithResource;
    tags?: inputs.GetIamSharingRuleTag[];
    versionContext?: inputs.GetIamSharingRuleVersionContext;
}

/**
 * A collection of values returned by getIamSharingRule.
 */
export interface GetIamSharingRuleResult {
    readonly account?: outputs.GetIamSharingRuleAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamSharingRuleAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamSharingRuleParent;
    readonly permissionResources?: outputs.GetIamSharingRulePermissionResource[];
    readonly results: outputs.GetIamSharingRuleResult[];
    readonly sharedResource?: outputs.GetIamSharingRuleSharedResource;
    readonly sharedScope?: string;
    readonly sharedWithResource?: outputs.GetIamSharingRuleSharedWithResource;
    readonly tags?: outputs.GetIamSharingRuleTag[];
    readonly versionContext?: outputs.GetIamSharingRuleVersionContext;
}
export function getIamSharingRuleOutput(args?: GetIamSharingRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamSharingRuleResult> {
    return pulumi.output(args).apply((a: any) => getIamSharingRule(a, opts))
}

/**
 * A collection of arguments for invoking getIamSharingRule.
 */
export interface GetIamSharingRuleOutputArgs {
    account?: pulumi.Input<inputs.GetIamSharingRuleAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamSharingRuleAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamSharingRuleParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamSharingRulePermissionResourceArgs>[]>;
    sharedResource?: pulumi.Input<inputs.GetIamSharingRuleSharedResourceArgs>;
    sharedScope?: pulumi.Input<string>;
    sharedWithResource?: pulumi.Input<inputs.GetIamSharingRuleSharedWithResourceArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamSharingRuleTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetIamSharingRuleVersionContextArgs>;
}
