// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRecoveryOnDemandBackup(args?: GetRecoveryOnDemandBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetRecoveryOnDemandBackupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getRecoveryOnDemandBackup:getRecoveryOnDemandBackup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "configResult": args.configResult,
        "createTime": args.createTime,
        "description": args.description,
        "deviceId": args.deviceId,
        "domainGroupMoid": args.domainGroupMoid,
        "fileNamePrefix": args.fileNamePrefix,
        "id": args.id,
        "isPasswordSet": args.isPasswordSet,
        "locationType": args.locationType,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "password": args.password,
        "path": args.path,
        "permissionResources": args.permissionResources,
        "protocol": args.protocol,
        "retentionCount": args.retentionCount,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "userName": args.userName,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecoveryOnDemandBackup.
 */
export interface GetRecoveryOnDemandBackupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetRecoveryOnDemandBackupAncestor[];
    classId?: string;
    configResult?: inputs.GetRecoveryOnDemandBackupConfigResult;
    createTime?: string;
    description?: string;
    deviceId?: inputs.GetRecoveryOnDemandBackupDeviceId;
    domainGroupMoid?: string;
    fileNamePrefix?: string;
    id?: string;
    isPasswordSet?: boolean;
    locationType?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetRecoveryOnDemandBackupOrganization;
    owners?: string[];
    parent?: inputs.GetRecoveryOnDemandBackupParent;
    password?: string;
    path?: string;
    permissionResources?: inputs.GetRecoveryOnDemandBackupPermissionResource[];
    protocol?: string;
    retentionCount?: number;
    sharedScope?: string;
    tags?: inputs.GetRecoveryOnDemandBackupTag[];
    userName?: string;
    versionContext?: inputs.GetRecoveryOnDemandBackupVersionContext;
}

/**
 * A collection of values returned by getRecoveryOnDemandBackup.
 */
export interface GetRecoveryOnDemandBackupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetRecoveryOnDemandBackupAncestor[];
    readonly classId?: string;
    readonly configResult?: outputs.GetRecoveryOnDemandBackupConfigResult;
    readonly createTime?: string;
    readonly description?: string;
    readonly deviceId?: outputs.GetRecoveryOnDemandBackupDeviceId;
    readonly domainGroupMoid?: string;
    readonly fileNamePrefix?: string;
    readonly id: string;
    readonly isPasswordSet?: boolean;
    readonly locationType?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetRecoveryOnDemandBackupOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetRecoveryOnDemandBackupParent;
    readonly password?: string;
    readonly path?: string;
    readonly permissionResources?: outputs.GetRecoveryOnDemandBackupPermissionResource[];
    readonly protocol?: string;
    readonly results: outputs.GetRecoveryOnDemandBackupResult[];
    readonly retentionCount?: number;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetRecoveryOnDemandBackupTag[];
    readonly userName?: string;
    readonly versionContext?: outputs.GetRecoveryOnDemandBackupVersionContext;
}
export function getRecoveryOnDemandBackupOutput(args?: GetRecoveryOnDemandBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecoveryOnDemandBackupResult> {
    return pulumi.output(args).apply((a: any) => getRecoveryOnDemandBackup(a, opts))
}

/**
 * A collection of arguments for invoking getRecoveryOnDemandBackup.
 */
export interface GetRecoveryOnDemandBackupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetRecoveryOnDemandBackupAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    configResult?: pulumi.Input<inputs.GetRecoveryOnDemandBackupConfigResultArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<inputs.GetRecoveryOnDemandBackupDeviceIdArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    fileNamePrefix?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isPasswordSet?: pulumi.Input<boolean>;
    locationType?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetRecoveryOnDemandBackupOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetRecoveryOnDemandBackupParentArgs>;
    password?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetRecoveryOnDemandBackupPermissionResourceArgs>[]>;
    protocol?: pulumi.Input<string>;
    retentionCount?: pulumi.Input<number>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetRecoveryOnDemandBackupTagArgs>[]>;
    userName?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetRecoveryOnDemandBackupVersionContextArgs>;
}
