// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexClusterReplicationNetworkPolicy(args?: GetHyperflexClusterReplicationNetworkPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexClusterReplicationNetworkPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexClusterReplicationNetworkPolicy:getHyperflexClusterReplicationNetworkPolicy", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clusterProfiles": args.clusterProfiles,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "replicationBandwidthMbps": args.replicationBandwidthMbps,
        "replicationIpranges": args.replicationIpranges,
        "replicationMtu": args.replicationMtu,
        "replicationVlan": args.replicationVlan,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexClusterReplicationNetworkPolicy.
 */
export interface GetHyperflexClusterReplicationNetworkPolicyArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexClusterReplicationNetworkPolicyAncestor[];
    classId?: string;
    clusterProfiles?: inputs.GetHyperflexClusterReplicationNetworkPolicyClusterProfile[];
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetHyperflexClusterReplicationNetworkPolicyOrganization;
    owners?: string[];
    parent?: inputs.GetHyperflexClusterReplicationNetworkPolicyParent;
    permissionResources?: inputs.GetHyperflexClusterReplicationNetworkPolicyPermissionResource[];
    replicationBandwidthMbps?: number;
    replicationIpranges?: inputs.GetHyperflexClusterReplicationNetworkPolicyReplicationIprange[];
    replicationMtu?: number;
    replicationVlan?: inputs.GetHyperflexClusterReplicationNetworkPolicyReplicationVlan;
    sharedScope?: string;
    tags?: inputs.GetHyperflexClusterReplicationNetworkPolicyTag[];
    versionContext?: inputs.GetHyperflexClusterReplicationNetworkPolicyVersionContext;
}

/**
 * A collection of values returned by getHyperflexClusterReplicationNetworkPolicy.
 */
export interface GetHyperflexClusterReplicationNetworkPolicyResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexClusterReplicationNetworkPolicyAncestor[];
    readonly classId?: string;
    readonly clusterProfiles?: outputs.GetHyperflexClusterReplicationNetworkPolicyClusterProfile[];
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetHyperflexClusterReplicationNetworkPolicyOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexClusterReplicationNetworkPolicyParent;
    readonly permissionResources?: outputs.GetHyperflexClusterReplicationNetworkPolicyPermissionResource[];
    readonly replicationBandwidthMbps?: number;
    readonly replicationIpranges?: outputs.GetHyperflexClusterReplicationNetworkPolicyReplicationIprange[];
    readonly replicationMtu?: number;
    readonly replicationVlan?: outputs.GetHyperflexClusterReplicationNetworkPolicyReplicationVlan;
    readonly results: outputs.GetHyperflexClusterReplicationNetworkPolicyResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexClusterReplicationNetworkPolicyTag[];
    readonly versionContext?: outputs.GetHyperflexClusterReplicationNetworkPolicyVersionContext;
}
export function getHyperflexClusterReplicationNetworkPolicyOutput(args?: GetHyperflexClusterReplicationNetworkPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexClusterReplicationNetworkPolicyResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexClusterReplicationNetworkPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexClusterReplicationNetworkPolicy.
 */
export interface GetHyperflexClusterReplicationNetworkPolicyOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyClusterProfileArgs>[]>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyPermissionResourceArgs>[]>;
    replicationBandwidthMbps?: pulumi.Input<number>;
    replicationIpranges?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyReplicationIprangeArgs>[]>;
    replicationMtu?: pulumi.Input<number>;
    replicationVlan?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyReplicationVlanArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyVersionContextArgs>;
}
