// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSchedulerTaskSchedule(args?: GetSchedulerTaskScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetSchedulerTaskScheduleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getSchedulerTaskSchedule:getSchedulerTaskSchedule", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "associatedObject": args.associatedObject,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "lastAction": args.lastAction,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "scheduleParams": args.scheduleParams,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "suspendEndTime": args.suspendEndTime,
        "tags": args.tags,
        "taskRequest": args.taskRequest,
        "type": args.type,
        "versionContext": args.versionContext,
        "workflowDefinition": args.workflowDefinition,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSchedulerTaskSchedule.
 */
export interface GetSchedulerTaskScheduleArgs {
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetSchedulerTaskScheduleAncestor[];
    associatedObject?: inputs.GetSchedulerTaskScheduleAssociatedObject;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    lastAction?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetSchedulerTaskScheduleParent;
    permissionResources?: inputs.GetSchedulerTaskSchedulePermissionResource[];
    scheduleParams?: inputs.GetSchedulerTaskScheduleScheduleParams;
    sharedScope?: string;
    status?: inputs.GetSchedulerTaskScheduleStatus;
    suspendEndTime?: string;
    tags?: inputs.GetSchedulerTaskScheduleTag[];
    taskRequest?: inputs.GetSchedulerTaskScheduleTaskRequest;
    type?: string;
    versionContext?: inputs.GetSchedulerTaskScheduleVersionContext;
    workflowDefinition?: inputs.GetSchedulerTaskScheduleWorkflowDefinition;
}

/**
 * A collection of values returned by getSchedulerTaskSchedule.
 */
export interface GetSchedulerTaskScheduleResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetSchedulerTaskScheduleAncestor[];
    readonly associatedObject?: outputs.GetSchedulerTaskScheduleAssociatedObject;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly lastAction?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetSchedulerTaskScheduleParent;
    readonly permissionResources?: outputs.GetSchedulerTaskSchedulePermissionResource[];
    readonly results: outputs.GetSchedulerTaskScheduleResult[];
    readonly scheduleParams?: outputs.GetSchedulerTaskScheduleScheduleParams;
    readonly sharedScope?: string;
    readonly status?: outputs.GetSchedulerTaskScheduleStatus;
    readonly suspendEndTime?: string;
    readonly tags?: outputs.GetSchedulerTaskScheduleTag[];
    readonly taskRequest?: outputs.GetSchedulerTaskScheduleTaskRequest;
    readonly type?: string;
    readonly versionContext?: outputs.GetSchedulerTaskScheduleVersionContext;
    readonly workflowDefinition?: outputs.GetSchedulerTaskScheduleWorkflowDefinition;
}
export function getSchedulerTaskScheduleOutput(args?: GetSchedulerTaskScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSchedulerTaskScheduleResult> {
    return pulumi.output(args).apply((a: any) => getSchedulerTaskSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getSchedulerTaskSchedule.
 */
export interface GetSchedulerTaskScheduleOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetSchedulerTaskScheduleAncestorArgs>[]>;
    associatedObject?: pulumi.Input<inputs.GetSchedulerTaskScheduleAssociatedObjectArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lastAction?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetSchedulerTaskScheduleParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetSchedulerTaskSchedulePermissionResourceArgs>[]>;
    scheduleParams?: pulumi.Input<inputs.GetSchedulerTaskScheduleScheduleParamsArgs>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<inputs.GetSchedulerTaskScheduleStatusArgs>;
    suspendEndTime?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSchedulerTaskScheduleTagArgs>[]>;
    taskRequest?: pulumi.Input<inputs.GetSchedulerTaskScheduleTaskRequestArgs>;
    type?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetSchedulerTaskScheduleVersionContextArgs>;
    workflowDefinition?: pulumi.Input<inputs.GetSchedulerTaskScheduleWorkflowDefinitionArgs>;
}
