// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamLocalUserPassword(args?: GetIamLocalUserPasswordArgs, opts?: pulumi.InvokeOptions): Promise<GetIamLocalUserPasswordResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamLocalUserPassword:getIamLocalUserPassword", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "currentPassword": args.currentPassword,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "initialPassword": args.initialPassword,
        "isCurrentPasswordSet": args.isCurrentPasswordSet,
        "isInitialPasswordSet": args.isInitialPasswordSet,
        "isNewPasswordSet": args.isNewPasswordSet,
        "modTime": args.modTime,
        "moid": args.moid,
        "needPasswordReset": args.needPasswordReset,
        "newPassword": args.newPassword,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "user": args.user,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamLocalUserPassword.
 */
export interface GetIamLocalUserPasswordArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamLocalUserPasswordAncestor[];
    classId?: string;
    createTime?: string;
    currentPassword?: string;
    domainGroupMoid?: string;
    id?: string;
    initialPassword?: string;
    isCurrentPasswordSet?: boolean;
    isInitialPasswordSet?: boolean;
    isNewPasswordSet?: boolean;
    modTime?: string;
    moid?: string;
    needPasswordReset?: boolean;
    newPassword?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamLocalUserPasswordParent;
    permissionResources?: inputs.GetIamLocalUserPasswordPermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetIamLocalUserPasswordTag[];
    user?: inputs.GetIamLocalUserPasswordUser;
    versionContext?: inputs.GetIamLocalUserPasswordVersionContext;
}

/**
 * A collection of values returned by getIamLocalUserPassword.
 */
export interface GetIamLocalUserPasswordResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamLocalUserPasswordAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly currentPassword?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly initialPassword?: string;
    readonly isCurrentPasswordSet?: boolean;
    readonly isInitialPasswordSet?: boolean;
    readonly isNewPasswordSet?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly needPasswordReset?: boolean;
    readonly newPassword?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamLocalUserPasswordParent;
    readonly permissionResources?: outputs.GetIamLocalUserPasswordPermissionResource[];
    readonly results: outputs.GetIamLocalUserPasswordResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetIamLocalUserPasswordTag[];
    readonly user?: outputs.GetIamLocalUserPasswordUser;
    readonly versionContext?: outputs.GetIamLocalUserPasswordVersionContext;
}
export function getIamLocalUserPasswordOutput(args?: GetIamLocalUserPasswordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamLocalUserPasswordResult> {
    return pulumi.output(args).apply((a: any) => getIamLocalUserPassword(a, opts))
}

/**
 * A collection of arguments for invoking getIamLocalUserPassword.
 */
export interface GetIamLocalUserPasswordOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamLocalUserPasswordAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    currentPassword?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    initialPassword?: pulumi.Input<string>;
    isCurrentPasswordSet?: pulumi.Input<boolean>;
    isInitialPasswordSet?: pulumi.Input<boolean>;
    isNewPasswordSet?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    needPasswordReset?: pulumi.Input<boolean>;
    newPassword?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamLocalUserPasswordParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamLocalUserPasswordPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamLocalUserPasswordTagArgs>[]>;
    user?: pulumi.Input<inputs.GetIamLocalUserPasswordUserArgs>;
    versionContext?: pulumi.Input<inputs.GetIamLocalUserPasswordVersionContextArgs>;
}
