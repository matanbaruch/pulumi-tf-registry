// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageHitachiExternalPathGroup(args?: GetStorageHitachiExternalPathGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageHitachiExternalPathGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageHitachiExternalPathGroup:getStorageHitachiExternalPathGroup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "array": args.array,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "externalParityGroups": args.externalParityGroups,
        "externalPaths": args.externalPaths,
        "externalProductId": args.externalProductId,
        "externalSerialNumber": args.externalSerialNumber,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageHitachiExternalPathGroup.
 */
export interface GetStorageHitachiExternalPathGroupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageHitachiExternalPathGroupAncestor[];
    array?: inputs.GetStorageHitachiExternalPathGroupArray;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    externalParityGroups?: inputs.GetStorageHitachiExternalPathGroupExternalParityGroup[];
    externalPaths?: inputs.GetStorageHitachiExternalPathGroupExternalPath[];
    externalProductId?: string;
    externalSerialNumber?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStorageHitachiExternalPathGroupParent;
    permissionResources?: inputs.GetStorageHitachiExternalPathGroupPermissionResource[];
    registeredDevice?: inputs.GetStorageHitachiExternalPathGroupRegisteredDevice;
    sharedScope?: string;
    tags?: inputs.GetStorageHitachiExternalPathGroupTag[];
    versionContext?: inputs.GetStorageHitachiExternalPathGroupVersionContext;
}

/**
 * A collection of values returned by getStorageHitachiExternalPathGroup.
 */
export interface GetStorageHitachiExternalPathGroupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageHitachiExternalPathGroupAncestor[];
    readonly array?: outputs.GetStorageHitachiExternalPathGroupArray;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly externalParityGroups?: outputs.GetStorageHitachiExternalPathGroupExternalParityGroup[];
    readonly externalPaths?: outputs.GetStorageHitachiExternalPathGroupExternalPath[];
    readonly externalProductId?: string;
    readonly externalSerialNumber?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageHitachiExternalPathGroupParent;
    readonly permissionResources?: outputs.GetStorageHitachiExternalPathGroupPermissionResource[];
    readonly registeredDevice?: outputs.GetStorageHitachiExternalPathGroupRegisteredDevice;
    readonly results: outputs.GetStorageHitachiExternalPathGroupResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetStorageHitachiExternalPathGroupTag[];
    readonly versionContext?: outputs.GetStorageHitachiExternalPathGroupVersionContext;
}
export function getStorageHitachiExternalPathGroupOutput(args?: GetStorageHitachiExternalPathGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageHitachiExternalPathGroupResult> {
    return pulumi.output(args).apply((a: any) => getStorageHitachiExternalPathGroup(a, opts))
}

/**
 * A collection of arguments for invoking getStorageHitachiExternalPathGroup.
 */
export interface GetStorageHitachiExternalPathGroupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiExternalPathGroupAncestorArgs>[]>;
    array?: pulumi.Input<inputs.GetStorageHitachiExternalPathGroupArrayArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    externalParityGroups?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiExternalPathGroupExternalParityGroupArgs>[]>;
    externalPaths?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiExternalPathGroupExternalPathArgs>[]>;
    externalProductId?: pulumi.Input<string>;
    externalSerialNumber?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageHitachiExternalPathGroupParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiExternalPathGroupPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetStorageHitachiExternalPathGroupRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageHitachiExternalPathGroupTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetStorageHitachiExternalPathGroupVersionContextArgs>;
}
