// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBulkResult(args?: GetBulkResultArgs, opts?: pulumi.InvokeOptions): Promise<GetBulkResultResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getBulkResult:getBulkResult", {
        "accountMoid": args.accountMoid,
        "actionOnError": args.actionOnError,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "completionTime": args.completionTime,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "moCloner": args.moCloner,
        "moDeepCloner": args.moDeepCloner,
        "moMerger": args.moMerger,
        "modTime": args.modTime,
        "moid": args.moid,
        "numSubRequests": args.numSubRequests,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "request": args.request,
        "requestReceivedTime": args.requestReceivedTime,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "statusMessage": args.statusMessage,
        "tags": args.tags,
        "uri": args.uri,
        "versionContext": args.versionContext,
        "workflowInfo": args.workflowInfo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBulkResult.
 */
export interface GetBulkResultArgs {
    accountMoid?: string;
    actionOnError?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetBulkResultAncestor[];
    classId?: string;
    completionTime?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    moCloner?: inputs.GetBulkResultMoCloner;
    moDeepCloner?: inputs.GetBulkResultMoDeepCloner;
    moMerger?: inputs.GetBulkResultMoMerger;
    modTime?: string;
    moid?: string;
    numSubRequests?: number;
    objectType?: string;
    organization?: inputs.GetBulkResultOrganization;
    owners?: string[];
    parent?: inputs.GetBulkResultParent;
    permissionResources?: inputs.GetBulkResultPermissionResource[];
    request?: string;
    requestReceivedTime?: string;
    sharedScope?: string;
    status?: string;
    statusMessage?: string;
    tags?: inputs.GetBulkResultTag[];
    uri?: string;
    versionContext?: inputs.GetBulkResultVersionContext;
    workflowInfo?: inputs.GetBulkResultWorkflowInfo;
}

/**
 * A collection of values returned by getBulkResult.
 */
export interface GetBulkResultResult {
    readonly accountMoid?: string;
    readonly actionOnError?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetBulkResultAncestor[];
    readonly classId?: string;
    readonly completionTime?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly moCloner?: outputs.GetBulkResultMoCloner;
    readonly moDeepCloner?: outputs.GetBulkResultMoDeepCloner;
    readonly moMerger?: outputs.GetBulkResultMoMerger;
    readonly modTime?: string;
    readonly moid?: string;
    readonly numSubRequests?: number;
    readonly objectType?: string;
    readonly organization?: outputs.GetBulkResultOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetBulkResultParent;
    readonly permissionResources?: outputs.GetBulkResultPermissionResource[];
    readonly request?: string;
    readonly requestReceivedTime?: string;
    readonly results: outputs.GetBulkResultResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly statusMessage?: string;
    readonly tags?: outputs.GetBulkResultTag[];
    readonly uri?: string;
    readonly versionContext?: outputs.GetBulkResultVersionContext;
    readonly workflowInfo?: outputs.GetBulkResultWorkflowInfo;
}
export function getBulkResultOutput(args?: GetBulkResultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBulkResultResult> {
    return pulumi.output(args).apply((a: any) => getBulkResult(a, opts))
}

/**
 * A collection of arguments for invoking getBulkResult.
 */
export interface GetBulkResultOutputArgs {
    accountMoid?: pulumi.Input<string>;
    actionOnError?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetBulkResultAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    completionTime?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    moCloner?: pulumi.Input<inputs.GetBulkResultMoClonerArgs>;
    moDeepCloner?: pulumi.Input<inputs.GetBulkResultMoDeepClonerArgs>;
    moMerger?: pulumi.Input<inputs.GetBulkResultMoMergerArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    numSubRequests?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetBulkResultOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetBulkResultParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetBulkResultPermissionResourceArgs>[]>;
    request?: pulumi.Input<string>;
    requestReceivedTime?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetBulkResultTagArgs>[]>;
    uri?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetBulkResultVersionContextArgs>;
    workflowInfo?: pulumi.Input<inputs.GetBulkResultWorkflowInfoArgs>;
}
