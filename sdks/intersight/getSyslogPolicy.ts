// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSyslogPolicy(args?: GetSyslogPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSyslogPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getSyslogPolicy:getSyslogPolicy", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "localClients": args.localClients,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "profiles": args.profiles,
        "remoteClients": args.remoteClients,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSyslogPolicy.
 */
export interface GetSyslogPolicyArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetSyslogPolicyAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    localClients?: inputs.GetSyslogPolicyLocalClient[];
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetSyslogPolicyOrganization;
    owners?: string[];
    parent?: inputs.GetSyslogPolicyParent;
    permissionResources?: inputs.GetSyslogPolicyPermissionResource[];
    profiles?: inputs.GetSyslogPolicyProfile[];
    remoteClients?: inputs.GetSyslogPolicyRemoteClient[];
    sharedScope?: string;
    tags?: inputs.GetSyslogPolicyTag[];
    versionContext?: inputs.GetSyslogPolicyVersionContext;
}

/**
 * A collection of values returned by getSyslogPolicy.
 */
export interface GetSyslogPolicyResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetSyslogPolicyAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly localClients?: outputs.GetSyslogPolicyLocalClient[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetSyslogPolicyOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetSyslogPolicyParent;
    readonly permissionResources?: outputs.GetSyslogPolicyPermissionResource[];
    readonly profiles?: outputs.GetSyslogPolicyProfile[];
    readonly remoteClients?: outputs.GetSyslogPolicyRemoteClient[];
    readonly results: outputs.GetSyslogPolicyResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetSyslogPolicyTag[];
    readonly versionContext?: outputs.GetSyslogPolicyVersionContext;
}
export function getSyslogPolicyOutput(args?: GetSyslogPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSyslogPolicyResult> {
    return pulumi.output(args).apply((a: any) => getSyslogPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSyslogPolicy.
 */
export interface GetSyslogPolicyOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetSyslogPolicyAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    localClients?: pulumi.Input<pulumi.Input<inputs.GetSyslogPolicyLocalClientArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetSyslogPolicyOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetSyslogPolicyParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetSyslogPolicyPermissionResourceArgs>[]>;
    profiles?: pulumi.Input<pulumi.Input<inputs.GetSyslogPolicyProfileArgs>[]>;
    remoteClients?: pulumi.Input<pulumi.Input<inputs.GetSyslogPolicyRemoteClientArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSyslogPolicyTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetSyslogPolicyVersionContextArgs>;
}
