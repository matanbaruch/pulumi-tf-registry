// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceBackupPolicy(args?: GetApplianceBackupPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceBackupPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceBackupPolicy:getApplianceBackupPolicy", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "backupTime": args.backupTime,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "filename": args.filename,
        "id": args.id,
        "isPasswordSet": args.isPasswordSet,
        "manualBackup": args.manualBackup,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "password": args.password,
        "permissionResources": args.permissionResources,
        "protocol": args.protocol,
        "remoteHost": args.remoteHost,
        "remotePath": args.remotePath,
        "remotePort": args.remotePort,
        "retentionCount": args.retentionCount,
        "retentionPolicyEnabled": args.retentionPolicyEnabled,
        "schedule": args.schedule,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "username": args.username,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceBackupPolicy.
 */
export interface GetApplianceBackupPolicyArgs {
    account?: inputs.GetApplianceBackupPolicyAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceBackupPolicyAncestor[];
    backupTime?: string;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    filename?: string;
    id?: string;
    isPasswordSet?: boolean;
    manualBackup?: boolean;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApplianceBackupPolicyParent;
    password?: string;
    permissionResources?: inputs.GetApplianceBackupPolicyPermissionResource[];
    protocol?: string;
    remoteHost?: string;
    remotePath?: string;
    remotePort?: number;
    retentionCount?: number;
    retentionPolicyEnabled?: boolean;
    schedule?: inputs.GetApplianceBackupPolicySchedule;
    sharedScope?: string;
    tags?: inputs.GetApplianceBackupPolicyTag[];
    username?: string;
    versionContext?: inputs.GetApplianceBackupPolicyVersionContext;
}

/**
 * A collection of values returned by getApplianceBackupPolicy.
 */
export interface GetApplianceBackupPolicyResult {
    readonly account?: outputs.GetApplianceBackupPolicyAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceBackupPolicyAncestor[];
    readonly backupTime?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly filename?: string;
    readonly id: string;
    readonly isPasswordSet?: boolean;
    readonly manualBackup?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceBackupPolicyParent;
    readonly password?: string;
    readonly permissionResources?: outputs.GetApplianceBackupPolicyPermissionResource[];
    readonly protocol?: string;
    readonly remoteHost?: string;
    readonly remotePath?: string;
    readonly remotePort?: number;
    readonly results: outputs.GetApplianceBackupPolicyResult[];
    readonly retentionCount?: number;
    readonly retentionPolicyEnabled?: boolean;
    readonly schedule?: outputs.GetApplianceBackupPolicySchedule;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetApplianceBackupPolicyTag[];
    readonly username?: string;
    readonly versionContext?: outputs.GetApplianceBackupPolicyVersionContext;
}
export function getApplianceBackupPolicyOutput(args?: GetApplianceBackupPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceBackupPolicyResult> {
    return pulumi.output(args).apply((a: any) => getApplianceBackupPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceBackupPolicy.
 */
export interface GetApplianceBackupPolicyOutputArgs {
    account?: pulumi.Input<inputs.GetApplianceBackupPolicyAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceBackupPolicyAncestorArgs>[]>;
    backupTime?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    filename?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isPasswordSet?: pulumi.Input<boolean>;
    manualBackup?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceBackupPolicyParentArgs>;
    password?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceBackupPolicyPermissionResourceArgs>[]>;
    protocol?: pulumi.Input<string>;
    remoteHost?: pulumi.Input<string>;
    remotePath?: pulumi.Input<string>;
    remotePort?: pulumi.Input<number>;
    retentionCount?: pulumi.Input<number>;
    retentionPolicyEnabled?: pulumi.Input<boolean>;
    schedule?: pulumi.Input<inputs.GetApplianceBackupPolicyScheduleArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceBackupPolicyTagArgs>[]>;
    username?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetApplianceBackupPolicyVersionContextArgs>;
}
