// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexDatastoreStatistic(args?: GetHyperflexDatastoreStatisticArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexDatastoreStatisticResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexDatastoreStatistic:getHyperflexDatastoreStatistic", {
        "accessibilitySummary": args.accessibilitySummary,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "creationTime": args.creationTime,
        "dataProtectionPeer": args.dataProtectionPeer,
        "datastoreKind": args.datastoreKind,
        "datastoreStatus": args.datastoreStatus,
        "domainGroupMoid": args.domainGroupMoid,
        "dsconfig": args.dsconfig,
        "freeCapacityInBytes": args.freeCapacityInBytes,
        "hostMountStatuses": args.hostMountStatuses,
        "id": args.id,
        "isEncrypted": args.isEncrypted,
        "lastAccessTime": args.lastAccessTime,
        "lastModifiedTime": args.lastModifiedTime,
        "modTime": args.modTime,
        "moid": args.moid,
        "mountSummary": args.mountSummary,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "parentUuid": args.parentUuid,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "site": args.site,
        "srcCluster": args.srcCluster,
        "tags": args.tags,
        "tgtCluster": args.tgtCluster,
        "totalCapacityInBytes": args.totalCapacityInBytes,
        "unCompressedUsedBytes": args.unCompressedUsedBytes,
        "unsharedUsedBytes": args.unsharedUsedBytes,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexDatastoreStatistic.
 */
export interface GetHyperflexDatastoreStatisticArgs {
    accessibilitySummary?: string;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexDatastoreStatisticAncestor[];
    classId?: string;
    createTime?: string;
    creationTime?: string;
    dataProtectionPeer?: inputs.GetHyperflexDatastoreStatisticDataProtectionPeer;
    datastoreKind?: string;
    datastoreStatus?: string;
    domainGroupMoid?: string;
    dsconfig?: inputs.GetHyperflexDatastoreStatisticDsconfig;
    freeCapacityInBytes?: number;
    hostMountStatuses?: inputs.GetHyperflexDatastoreStatisticHostMountStatus[];
    id?: string;
    isEncrypted?: boolean;
    lastAccessTime?: string;
    lastModifiedTime?: string;
    modTime?: string;
    moid?: string;
    mountSummary?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexDatastoreStatisticParent;
    parentUuid?: string;
    permissionResources?: inputs.GetHyperflexDatastoreStatisticPermissionResource[];
    sharedScope?: string;
    site?: inputs.GetHyperflexDatastoreStatisticSite;
    srcCluster?: inputs.GetHyperflexDatastoreStatisticSrcCluster;
    tags?: inputs.GetHyperflexDatastoreStatisticTag[];
    tgtCluster?: inputs.GetHyperflexDatastoreStatisticTgtCluster;
    totalCapacityInBytes?: number;
    unCompressedUsedBytes?: number;
    unsharedUsedBytes?: number;
    uuid?: string;
    versionContext?: inputs.GetHyperflexDatastoreStatisticVersionContext;
}

/**
 * A collection of values returned by getHyperflexDatastoreStatistic.
 */
export interface GetHyperflexDatastoreStatisticResult {
    readonly accessibilitySummary?: string;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexDatastoreStatisticAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly creationTime?: string;
    readonly dataProtectionPeer?: outputs.GetHyperflexDatastoreStatisticDataProtectionPeer;
    readonly datastoreKind?: string;
    readonly datastoreStatus?: string;
    readonly domainGroupMoid?: string;
    readonly dsconfig?: outputs.GetHyperflexDatastoreStatisticDsconfig;
    readonly freeCapacityInBytes?: number;
    readonly hostMountStatuses?: outputs.GetHyperflexDatastoreStatisticHostMountStatus[];
    readonly id: string;
    readonly isEncrypted?: boolean;
    readonly lastAccessTime?: string;
    readonly lastModifiedTime?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly mountSummary?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexDatastoreStatisticParent;
    readonly parentUuid?: string;
    readonly permissionResources?: outputs.GetHyperflexDatastoreStatisticPermissionResource[];
    readonly results: outputs.GetHyperflexDatastoreStatisticResult[];
    readonly sharedScope?: string;
    readonly site?: outputs.GetHyperflexDatastoreStatisticSite;
    readonly srcCluster?: outputs.GetHyperflexDatastoreStatisticSrcCluster;
    readonly tags?: outputs.GetHyperflexDatastoreStatisticTag[];
    readonly tgtCluster?: outputs.GetHyperflexDatastoreStatisticTgtCluster;
    readonly totalCapacityInBytes?: number;
    readonly unCompressedUsedBytes?: number;
    readonly unsharedUsedBytes?: number;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexDatastoreStatisticVersionContext;
}
export function getHyperflexDatastoreStatisticOutput(args?: GetHyperflexDatastoreStatisticOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexDatastoreStatisticResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexDatastoreStatistic(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexDatastoreStatistic.
 */
export interface GetHyperflexDatastoreStatisticOutputArgs {
    accessibilitySummary?: pulumi.Input<string>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexDatastoreStatisticAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    creationTime?: pulumi.Input<string>;
    dataProtectionPeer?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticDataProtectionPeerArgs>;
    datastoreKind?: pulumi.Input<string>;
    datastoreStatus?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    dsconfig?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticDsconfigArgs>;
    freeCapacityInBytes?: pulumi.Input<number>;
    hostMountStatuses?: pulumi.Input<pulumi.Input<inputs.GetHyperflexDatastoreStatisticHostMountStatusArgs>[]>;
    id?: pulumi.Input<string>;
    isEncrypted?: pulumi.Input<boolean>;
    lastAccessTime?: pulumi.Input<string>;
    lastModifiedTime?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    mountSummary?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticParentArgs>;
    parentUuid?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexDatastoreStatisticPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    site?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticSiteArgs>;
    srcCluster?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticSrcClusterArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexDatastoreStatisticTagArgs>[]>;
    tgtCluster?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticTgtClusterArgs>;
    totalCapacityInBytes?: pulumi.Input<number>;
    unCompressedUsedBytes?: pulumi.Input<number>;
    unsharedUsedBytes?: pulumi.Input<number>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexDatastoreStatisticVersionContextArgs>;
}
