// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPartnerintegrationInventory(args?: GetPartnerintegrationInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetPartnerintegrationInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getPartnerintegrationInventory:getPartnerintegrationInventory", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "buildFlags": args.buildFlags,
        "buildStartTime": args.buildStartTime,
        "buildStatus": args.buildStatus,
        "classId": args.classId,
        "createTime": args.createTime,
        "deployStartTime": args.deployStartTime,
        "deployStatus": args.deployStatus,
        "docIssues": args.docIssues,
        "domainGroupMoid": args.domainGroupMoid,
        "etls": args.etls,
        "id": args.id,
        "imageName": args.imageName,
        "logs": args.logs,
        "metrics": args.metrics,
        "modTime": args.modTime,
        "models": args.models,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "pythonSdkUrl": args.pythonSdkUrl,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPartnerintegrationInventory.
 */
export interface GetPartnerintegrationInventoryArgs {
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetPartnerintegrationInventoryAncestor[];
    buildFlags?: string;
    buildStartTime?: string;
    buildStatus?: string;
    classId?: string;
    createTime?: string;
    deployStartTime?: string;
    deployStatus?: string;
    docIssues?: inputs.GetPartnerintegrationInventoryDocIssue[];
    domainGroupMoid?: string;
    etls?: inputs.GetPartnerintegrationInventoryEtl[];
    id?: string;
    imageName?: string;
    logs?: inputs.GetPartnerintegrationInventoryLog[];
    metrics?: inputs.GetPartnerintegrationInventoryMetrics;
    modTime?: string;
    models?: inputs.GetPartnerintegrationInventoryModel[];
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetPartnerintegrationInventoryOrganization;
    owners?: string[];
    parent?: inputs.GetPartnerintegrationInventoryParent;
    permissionResources?: inputs.GetPartnerintegrationInventoryPermissionResource[];
    pythonSdkUrl?: string;
    sharedScope?: string;
    tags?: inputs.GetPartnerintegrationInventoryTag[];
    versionContext?: inputs.GetPartnerintegrationInventoryVersionContext;
}

/**
 * A collection of values returned by getPartnerintegrationInventory.
 */
export interface GetPartnerintegrationInventoryResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetPartnerintegrationInventoryAncestor[];
    readonly buildFlags?: string;
    readonly buildStartTime?: string;
    readonly buildStatus?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly deployStartTime?: string;
    readonly deployStatus?: string;
    readonly docIssues?: outputs.GetPartnerintegrationInventoryDocIssue[];
    readonly domainGroupMoid?: string;
    readonly etls?: outputs.GetPartnerintegrationInventoryEtl[];
    readonly id: string;
    readonly imageName?: string;
    readonly logs?: outputs.GetPartnerintegrationInventoryLog[];
    readonly metrics?: outputs.GetPartnerintegrationInventoryMetrics;
    readonly modTime?: string;
    readonly models?: outputs.GetPartnerintegrationInventoryModel[];
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetPartnerintegrationInventoryOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetPartnerintegrationInventoryParent;
    readonly permissionResources?: outputs.GetPartnerintegrationInventoryPermissionResource[];
    readonly pythonSdkUrl?: string;
    readonly results: outputs.GetPartnerintegrationInventoryResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetPartnerintegrationInventoryTag[];
    readonly versionContext?: outputs.GetPartnerintegrationInventoryVersionContext;
}
export function getPartnerintegrationInventoryOutput(args?: GetPartnerintegrationInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPartnerintegrationInventoryResult> {
    return pulumi.output(args).apply((a: any) => getPartnerintegrationInventory(a, opts))
}

/**
 * A collection of arguments for invoking getPartnerintegrationInventory.
 */
export interface GetPartnerintegrationInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryAncestorArgs>[]>;
    buildFlags?: pulumi.Input<string>;
    buildStartTime?: pulumi.Input<string>;
    buildStatus?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deployStartTime?: pulumi.Input<string>;
    deployStatus?: pulumi.Input<string>;
    docIssues?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryDocIssueArgs>[]>;
    domainGroupMoid?: pulumi.Input<string>;
    etls?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryEtlArgs>[]>;
    id?: pulumi.Input<string>;
    imageName?: pulumi.Input<string>;
    logs?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryLogArgs>[]>;
    metrics?: pulumi.Input<inputs.GetPartnerintegrationInventoryMetricsArgs>;
    modTime?: pulumi.Input<string>;
    models?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryModelArgs>[]>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetPartnerintegrationInventoryOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetPartnerintegrationInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryPermissionResourceArgs>[]>;
    pythonSdkUrl?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationInventoryTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetPartnerintegrationInventoryVersionContextArgs>;
}
