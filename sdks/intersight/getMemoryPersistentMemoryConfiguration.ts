// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMemoryPersistentMemoryConfiguration(args?: GetMemoryPersistentMemoryConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMemoryPersistentMemoryConfigurationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getMemoryPersistentMemoryConfiguration:getMemoryPersistentMemoryConfiguration", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "computeBoard": args.computeBoard,
        "createTime": args.createTime,
        "deviceMoId": args.deviceMoId,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inventoryDeviceInfo": args.inventoryDeviceInfo,
        "memoryCapacity": args.memoryCapacity,
        "modTime": args.modTime,
        "moid": args.moid,
        "numOfModules": args.numOfModules,
        "numOfRegions": args.numOfRegions,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "persistentMemoryCapacity": args.persistentMemoryCapacity,
        "persistentMemoryConfigResult": args.persistentMemoryConfigResult,
        "persistentMemoryRegions": args.persistentMemoryRegions,
        "registeredDevice": args.registeredDevice,
        "reservedCapacity": args.reservedCapacity,
        "rn": args.rn,
        "securityState": args.securityState,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "totalCapacity": args.totalCapacity,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMemoryPersistentMemoryConfiguration.
 */
export interface GetMemoryPersistentMemoryConfigurationArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetMemoryPersistentMemoryConfigurationAncestor[];
    classId?: string;
    computeBoard?: inputs.GetMemoryPersistentMemoryConfigurationComputeBoard;
    createTime?: string;
    deviceMoId?: string;
    dn?: string;
    domainGroupMoid?: string;
    id?: string;
    inventoryDeviceInfo?: inputs.GetMemoryPersistentMemoryConfigurationInventoryDeviceInfo;
    memoryCapacity?: string;
    modTime?: string;
    moid?: string;
    numOfModules?: string;
    numOfRegions?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetMemoryPersistentMemoryConfigurationParent;
    permissionResources?: inputs.GetMemoryPersistentMemoryConfigurationPermissionResource[];
    persistentMemoryCapacity?: string;
    persistentMemoryConfigResult?: inputs.GetMemoryPersistentMemoryConfigurationPersistentMemoryConfigResult;
    persistentMemoryRegions?: inputs.GetMemoryPersistentMemoryConfigurationPersistentMemoryRegion[];
    registeredDevice?: inputs.GetMemoryPersistentMemoryConfigurationRegisteredDevice;
    reservedCapacity?: string;
    rn?: string;
    securityState?: string;
    sharedScope?: string;
    tags?: inputs.GetMemoryPersistentMemoryConfigurationTag[];
    totalCapacity?: string;
    versionContext?: inputs.GetMemoryPersistentMemoryConfigurationVersionContext;
}

/**
 * A collection of values returned by getMemoryPersistentMemoryConfiguration.
 */
export interface GetMemoryPersistentMemoryConfigurationResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetMemoryPersistentMemoryConfigurationAncestor[];
    readonly classId?: string;
    readonly computeBoard?: outputs.GetMemoryPersistentMemoryConfigurationComputeBoard;
    readonly createTime?: string;
    readonly deviceMoId?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inventoryDeviceInfo?: outputs.GetMemoryPersistentMemoryConfigurationInventoryDeviceInfo;
    readonly memoryCapacity?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly numOfModules?: string;
    readonly numOfRegions?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetMemoryPersistentMemoryConfigurationParent;
    readonly permissionResources?: outputs.GetMemoryPersistentMemoryConfigurationPermissionResource[];
    readonly persistentMemoryCapacity?: string;
    readonly persistentMemoryConfigResult?: outputs.GetMemoryPersistentMemoryConfigurationPersistentMemoryConfigResult;
    readonly persistentMemoryRegions?: outputs.GetMemoryPersistentMemoryConfigurationPersistentMemoryRegion[];
    readonly registeredDevice?: outputs.GetMemoryPersistentMemoryConfigurationRegisteredDevice;
    readonly reservedCapacity?: string;
    readonly results: outputs.GetMemoryPersistentMemoryConfigurationResult[];
    readonly rn?: string;
    readonly securityState?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetMemoryPersistentMemoryConfigurationTag[];
    readonly totalCapacity?: string;
    readonly versionContext?: outputs.GetMemoryPersistentMemoryConfigurationVersionContext;
}
export function getMemoryPersistentMemoryConfigurationOutput(args?: GetMemoryPersistentMemoryConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMemoryPersistentMemoryConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getMemoryPersistentMemoryConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getMemoryPersistentMemoryConfiguration.
 */
export interface GetMemoryPersistentMemoryConfigurationOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    computeBoard?: pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationComputeBoardArgs>;
    createTime?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventoryDeviceInfo?: pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationInventoryDeviceInfoArgs>;
    memoryCapacity?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    numOfModules?: pulumi.Input<string>;
    numOfRegions?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationPermissionResourceArgs>[]>;
    persistentMemoryCapacity?: pulumi.Input<string>;
    persistentMemoryConfigResult?: pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationPersistentMemoryConfigResultArgs>;
    persistentMemoryRegions?: pulumi.Input<pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationPersistentMemoryRegionArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationRegisteredDeviceArgs>;
    reservedCapacity?: pulumi.Input<string>;
    rn?: pulumi.Input<string>;
    securityState?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationTagArgs>[]>;
    totalCapacity?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetMemoryPersistentMemoryConfigurationVersionContextArgs>;
}
