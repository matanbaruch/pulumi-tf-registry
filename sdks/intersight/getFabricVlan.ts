// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricVlan(args?: GetFabricVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricVlanResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricVlan:getFabricVlan", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "autoAllowOnUplinks": args.autoAllowOnUplinks,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "ethNetworkPolicy": args.ethNetworkPolicy,
        "id": args.id,
        "isNative": args.isNative,
        "modTime": args.modTime,
        "moid": args.moid,
        "multicastPolicy": args.multicastPolicy,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "primaryVlanId": args.primaryVlanId,
        "sharedScope": args.sharedScope,
        "sharingType": args.sharingType,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "vlanId": args.vlanId,
        "vlanSet": args.vlanSet,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricVlan.
 */
export interface GetFabricVlanArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetFabricVlanAncestor[];
    autoAllowOnUplinks?: boolean;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    ethNetworkPolicy?: inputs.GetFabricVlanEthNetworkPolicy;
    id?: string;
    isNative?: boolean;
    modTime?: string;
    moid?: string;
    multicastPolicy?: inputs.GetFabricVlanMulticastPolicy;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFabricVlanParent;
    permissionResources?: inputs.GetFabricVlanPermissionResource[];
    primaryVlanId?: number;
    sharedScope?: string;
    sharingType?: string;
    tags?: inputs.GetFabricVlanTag[];
    versionContext?: inputs.GetFabricVlanVersionContext;
    vlanId?: number;
    vlanSet?: inputs.GetFabricVlanVlanSet;
}

/**
 * A collection of values returned by getFabricVlan.
 */
export interface GetFabricVlanResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFabricVlanAncestor[];
    readonly autoAllowOnUplinks?: boolean;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly ethNetworkPolicy?: outputs.GetFabricVlanEthNetworkPolicy;
    readonly id: string;
    readonly isNative?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly multicastPolicy?: outputs.GetFabricVlanMulticastPolicy;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricVlanParent;
    readonly permissionResources?: outputs.GetFabricVlanPermissionResource[];
    readonly primaryVlanId?: number;
    readonly results: outputs.GetFabricVlanResult[];
    readonly sharedScope?: string;
    readonly sharingType?: string;
    readonly tags?: outputs.GetFabricVlanTag[];
    readonly versionContext?: outputs.GetFabricVlanVersionContext;
    readonly vlanId?: number;
    readonly vlanSet?: outputs.GetFabricVlanVlanSet;
}
export function getFabricVlanOutput(args?: GetFabricVlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricVlanResult> {
    return pulumi.output(args).apply((a: any) => getFabricVlan(a, opts))
}

/**
 * A collection of arguments for invoking getFabricVlan.
 */
export interface GetFabricVlanOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricVlanAncestorArgs>[]>;
    autoAllowOnUplinks?: pulumi.Input<boolean>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    ethNetworkPolicy?: pulumi.Input<inputs.GetFabricVlanEthNetworkPolicyArgs>;
    id?: pulumi.Input<string>;
    isNative?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    multicastPolicy?: pulumi.Input<inputs.GetFabricVlanMulticastPolicyArgs>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricVlanParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricVlanPermissionResourceArgs>[]>;
    primaryVlanId?: pulumi.Input<number>;
    sharedScope?: pulumi.Input<string>;
    sharingType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricVlanTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetFabricVlanVersionContextArgs>;
    vlanId?: pulumi.Input<number>;
    vlanSet?: pulumi.Input<inputs.GetFabricVlanVlanSetArgs>;
}
