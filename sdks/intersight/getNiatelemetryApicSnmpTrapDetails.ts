// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryApicSnmpTrapDetails(args?: GetNiatelemetryApicSnmpTrapDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryApicSnmpTrapDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryApicSnmpTrapDetails:getNiatelemetryApicSnmpTrapDetails", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "recordType": args.recordType,
        "recordVersion": args.recordVersion,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "siteName": args.siteName,
        "tags": args.tags,
        "v3SecLevel": args.v3SecLevel,
        "ver": args.ver,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryApicSnmpTrapDetails.
 */
export interface GetNiatelemetryApicSnmpTrapDetailsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiatelemetryApicSnmpTrapDetailsAncestor[];
    classId?: string;
    createTime?: string;
    dn?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryApicSnmpTrapDetailsParent;
    permissionResources?: inputs.GetNiatelemetryApicSnmpTrapDetailsPermissionResource[];
    recordType?: string;
    recordVersion?: string;
    registeredDevice?: inputs.GetNiatelemetryApicSnmpTrapDetailsRegisteredDevice;
    sharedScope?: string;
    siteName?: string;
    tags?: inputs.GetNiatelemetryApicSnmpTrapDetailsTag[];
    v3SecLevel?: string;
    ver?: string;
    versionContext?: inputs.GetNiatelemetryApicSnmpTrapDetailsVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryApicSnmpTrapDetails.
 */
export interface GetNiatelemetryApicSnmpTrapDetailsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiatelemetryApicSnmpTrapDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryApicSnmpTrapDetailsParent;
    readonly permissionResources?: outputs.GetNiatelemetryApicSnmpTrapDetailsPermissionResource[];
    readonly recordType?: string;
    readonly recordVersion?: string;
    readonly registeredDevice?: outputs.GetNiatelemetryApicSnmpTrapDetailsRegisteredDevice;
    readonly results: outputs.GetNiatelemetryApicSnmpTrapDetailsResult[];
    readonly sharedScope?: string;
    readonly siteName?: string;
    readonly tags?: outputs.GetNiatelemetryApicSnmpTrapDetailsTag[];
    readonly v3SecLevel?: string;
    readonly ver?: string;
    readonly versionContext?: outputs.GetNiatelemetryApicSnmpTrapDetailsVersionContext;
}
export function getNiatelemetryApicSnmpTrapDetailsOutput(args?: GetNiatelemetryApicSnmpTrapDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryApicSnmpTrapDetailsResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryApicSnmpTrapDetails(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryApicSnmpTrapDetails.
 */
export interface GetNiatelemetryApicSnmpTrapDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryApicSnmpTrapDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryApicSnmpTrapDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryApicSnmpTrapDetailsPermissionResourceArgs>[]>;
    recordType?: pulumi.Input<string>;
    recordVersion?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetryApicSnmpTrapDetailsRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    siteName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryApicSnmpTrapDetailsTagArgs>[]>;
    v3SecLevel?: pulumi.Input<string>;
    ver?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryApicSnmpTrapDetailsVersionContextArgs>;
}
