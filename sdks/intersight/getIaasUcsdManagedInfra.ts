// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIaasUcsdManagedInfra(args?: GetIaasUcsdManagedInfraArgs, opts?: pulumi.InvokeOptions): Promise<GetIaasUcsdManagedInfraResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIaasUcsdManagedInfra:getIaasUcsdManagedInfra", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "advancedCatalogCount": args.advancedCatalogCount,
        "ancestors": args.ancestors,
        "bmCatalogCount": args.bmCatalogCount,
        "classId": args.classId,
        "containerCatalogCount": args.containerCatalogCount,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "esxiHostCount": args.esxiHostCount,
        "externalGroupCount": args.externalGroupCount,
        "guid": args.guid,
        "hypervHostCount": args.hypervHostCount,
        "id": args.id,
        "localGroupCount": args.localGroupCount,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "standardCatalogCount": args.standardCatalogCount,
        "tags": args.tags,
        "userCount": args.userCount,
        "vdcCount": args.vdcCount,
        "versionContext": args.versionContext,
        "vmCount": args.vmCount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIaasUcsdManagedInfra.
 */
export interface GetIaasUcsdManagedInfraArgs {
    accountMoid?: string;
    additionalProperties?: string;
    advancedCatalogCount?: number;
    ancestors?: inputs.GetIaasUcsdManagedInfraAncestor[];
    bmCatalogCount?: number;
    classId?: string;
    containerCatalogCount?: number;
    createTime?: string;
    domainGroupMoid?: string;
    esxiHostCount?: number;
    externalGroupCount?: number;
    guid?: inputs.GetIaasUcsdManagedInfraGuid;
    hypervHostCount?: number;
    id?: string;
    localGroupCount?: number;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIaasUcsdManagedInfraParent;
    permissionResources?: inputs.GetIaasUcsdManagedInfraPermissionResource[];
    sharedScope?: string;
    standardCatalogCount?: number;
    tags?: inputs.GetIaasUcsdManagedInfraTag[];
    userCount?: number;
    vdcCount?: number;
    versionContext?: inputs.GetIaasUcsdManagedInfraVersionContext;
    vmCount?: number;
}

/**
 * A collection of values returned by getIaasUcsdManagedInfra.
 */
export interface GetIaasUcsdManagedInfraResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly advancedCatalogCount?: number;
    readonly ancestors?: outputs.GetIaasUcsdManagedInfraAncestor[];
    readonly bmCatalogCount?: number;
    readonly classId?: string;
    readonly containerCatalogCount?: number;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly esxiHostCount?: number;
    readonly externalGroupCount?: number;
    readonly guid?: outputs.GetIaasUcsdManagedInfraGuid;
    readonly hypervHostCount?: number;
    readonly id: string;
    readonly localGroupCount?: number;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIaasUcsdManagedInfraParent;
    readonly permissionResources?: outputs.GetIaasUcsdManagedInfraPermissionResource[];
    readonly results: outputs.GetIaasUcsdManagedInfraResult[];
    readonly sharedScope?: string;
    readonly standardCatalogCount?: number;
    readonly tags?: outputs.GetIaasUcsdManagedInfraTag[];
    readonly userCount?: number;
    readonly vdcCount?: number;
    readonly versionContext?: outputs.GetIaasUcsdManagedInfraVersionContext;
    readonly vmCount?: number;
}
export function getIaasUcsdManagedInfraOutput(args?: GetIaasUcsdManagedInfraOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIaasUcsdManagedInfraResult> {
    return pulumi.output(args).apply((a: any) => getIaasUcsdManagedInfra(a, opts))
}

/**
 * A collection of arguments for invoking getIaasUcsdManagedInfra.
 */
export interface GetIaasUcsdManagedInfraOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    advancedCatalogCount?: pulumi.Input<number>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIaasUcsdManagedInfraAncestorArgs>[]>;
    bmCatalogCount?: pulumi.Input<number>;
    classId?: pulumi.Input<string>;
    containerCatalogCount?: pulumi.Input<number>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    esxiHostCount?: pulumi.Input<number>;
    externalGroupCount?: pulumi.Input<number>;
    guid?: pulumi.Input<inputs.GetIaasUcsdManagedInfraGuidArgs>;
    hypervHostCount?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    localGroupCount?: pulumi.Input<number>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIaasUcsdManagedInfraParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIaasUcsdManagedInfraPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    standardCatalogCount?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIaasUcsdManagedInfraTagArgs>[]>;
    userCount?: pulumi.Input<number>;
    vdcCount?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetIaasUcsdManagedInfraVersionContextArgs>;
    vmCount?: pulumi.Input<number>;
}
