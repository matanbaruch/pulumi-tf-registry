// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexHealth(args?: GetHyperflexHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexHealthResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexHealth:getHyperflexHealth", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "arbitrationServiceState": args.arbitrationServiceState,
        "classId": args.classId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "dataReplicationCompliance": args.dataReplicationCompliance,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "resiliencyDetails": args.resiliencyDetails,
        "sharedScope": args.sharedScope,
        "state": args.state,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "zkHealth": args.zkHealth,
        "zoneResiliencyLists": args.zoneResiliencyLists,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexHealth.
 */
export interface GetHyperflexHealthArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexHealthAncestor[];
    arbitrationServiceState?: string;
    classId?: string;
    cluster?: inputs.GetHyperflexHealthCluster;
    createTime?: string;
    dataReplicationCompliance?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexHealthParent;
    permissionResources?: inputs.GetHyperflexHealthPermissionResource[];
    resiliencyDetails?: inputs.GetHyperflexHealthResiliencyDetails;
    sharedScope?: string;
    state?: string;
    tags?: inputs.GetHyperflexHealthTag[];
    uuid?: string;
    versionContext?: inputs.GetHyperflexHealthVersionContext;
    zkHealth?: string;
    zoneResiliencyLists?: inputs.GetHyperflexHealthZoneResiliencyList[];
}

/**
 * A collection of values returned by getHyperflexHealth.
 */
export interface GetHyperflexHealthResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexHealthAncestor[];
    readonly arbitrationServiceState?: string;
    readonly classId?: string;
    readonly cluster?: outputs.GetHyperflexHealthCluster;
    readonly createTime?: string;
    readonly dataReplicationCompliance?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexHealthParent;
    readonly permissionResources?: outputs.GetHyperflexHealthPermissionResource[];
    readonly resiliencyDetails?: outputs.GetHyperflexHealthResiliencyDetails;
    readonly results: outputs.GetHyperflexHealthResult[];
    readonly sharedScope?: string;
    readonly state?: string;
    readonly tags?: outputs.GetHyperflexHealthTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexHealthVersionContext;
    readonly zkHealth?: string;
    readonly zoneResiliencyLists?: outputs.GetHyperflexHealthZoneResiliencyList[];
}
export function getHyperflexHealthOutput(args?: GetHyperflexHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexHealthResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexHealth(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexHealth.
 */
export interface GetHyperflexHealthOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthAncestorArgs>[]>;
    arbitrationServiceState?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexHealthClusterArgs>;
    createTime?: pulumi.Input<string>;
    dataReplicationCompliance?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexHealthParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthPermissionResourceArgs>[]>;
    resiliencyDetails?: pulumi.Input<inputs.GetHyperflexHealthResiliencyDetailsArgs>;
    sharedScope?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexHealthVersionContextArgs>;
    zkHealth?: pulumi.Input<string>;
    zoneResiliencyLists?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthZoneResiliencyListArgs>[]>;
}
