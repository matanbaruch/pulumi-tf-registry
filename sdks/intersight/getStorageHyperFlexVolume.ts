// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageHyperFlexVolume(args?: GetStorageHyperFlexVolumeArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageHyperFlexVolumeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageHyperFlexVolume:getStorageHyperFlexVolume", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "capacity": args.capacity,
        "classId": args.classId,
        "clientId": args.clientId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "lastModifiedTime": args.lastModifiedTime,
        "lunUuid": args.lunUuid,
        "modTime": args.modTime,
        "moid": args.moid,
        "naaId": args.naaId,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "serialNumber": args.serialNumber,
        "sharedScope": args.sharedScope,
        "size": args.size,
        "storageContainer": args.storageContainer,
        "storageUtilization": args.storageUtilization,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "volumeAccessMode": args.volumeAccessMode,
        "volumeMode": args.volumeMode,
        "volumeType": args.volumeType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageHyperFlexVolume.
 */
export interface GetStorageHyperFlexVolumeArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageHyperFlexVolumeAncestor[];
    capacity?: number;
    classId?: string;
    clientId?: string;
    cluster?: inputs.GetStorageHyperFlexVolumeCluster;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    lastModifiedTime?: string;
    lunUuid?: string;
    modTime?: string;
    moid?: string;
    naaId?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStorageHyperFlexVolumeParent;
    permissionResources?: inputs.GetStorageHyperFlexVolumePermissionResource[];
    registeredDevice?: inputs.GetStorageHyperFlexVolumeRegisteredDevice;
    serialNumber?: string;
    sharedScope?: string;
    size?: number;
    storageContainer?: inputs.GetStorageHyperFlexVolumeStorageContainer;
    storageUtilization?: inputs.GetStorageHyperFlexVolumeStorageUtilization;
    tags?: inputs.GetStorageHyperFlexVolumeTag[];
    uuid?: string;
    versionContext?: inputs.GetStorageHyperFlexVolumeVersionContext;
    volumeAccessMode?: string;
    volumeMode?: string;
    volumeType?: string;
}

/**
 * A collection of values returned by getStorageHyperFlexVolume.
 */
export interface GetStorageHyperFlexVolumeResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageHyperFlexVolumeAncestor[];
    readonly capacity?: number;
    readonly classId?: string;
    readonly clientId?: string;
    readonly cluster?: outputs.GetStorageHyperFlexVolumeCluster;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly lastModifiedTime?: string;
    readonly lunUuid?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly naaId?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageHyperFlexVolumeParent;
    readonly permissionResources?: outputs.GetStorageHyperFlexVolumePermissionResource[];
    readonly registeredDevice?: outputs.GetStorageHyperFlexVolumeRegisteredDevice;
    readonly results: outputs.GetStorageHyperFlexVolumeResult[];
    readonly serialNumber?: string;
    readonly sharedScope?: string;
    readonly size?: number;
    readonly storageContainer?: outputs.GetStorageHyperFlexVolumeStorageContainer;
    readonly storageUtilization?: outputs.GetStorageHyperFlexVolumeStorageUtilization;
    readonly tags?: outputs.GetStorageHyperFlexVolumeTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetStorageHyperFlexVolumeVersionContext;
    readonly volumeAccessMode?: string;
    readonly volumeMode?: string;
    readonly volumeType?: string;
}
export function getStorageHyperFlexVolumeOutput(args?: GetStorageHyperFlexVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageHyperFlexVolumeResult> {
    return pulumi.output(args).apply((a: any) => getStorageHyperFlexVolume(a, opts))
}

/**
 * A collection of arguments for invoking getStorageHyperFlexVolume.
 */
export interface GetStorageHyperFlexVolumeOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageHyperFlexVolumeAncestorArgs>[]>;
    capacity?: pulumi.Input<number>;
    classId?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetStorageHyperFlexVolumeClusterArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lastModifiedTime?: pulumi.Input<string>;
    lunUuid?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    naaId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageHyperFlexVolumeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageHyperFlexVolumePermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetStorageHyperFlexVolumeRegisteredDeviceArgs>;
    serialNumber?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    storageContainer?: pulumi.Input<inputs.GetStorageHyperFlexVolumeStorageContainerArgs>;
    storageUtilization?: pulumi.Input<inputs.GetStorageHyperFlexVolumeStorageUtilizationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageHyperFlexVolumeTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetStorageHyperFlexVolumeVersionContextArgs>;
    volumeAccessMode?: pulumi.Input<string>;
    volumeMode?: pulumi.Input<string>;
    volumeType?: pulumi.Input<string>;
}
