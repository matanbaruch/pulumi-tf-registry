// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBulkExport(args?: GetBulkExportArgs, opts?: pulumi.InvokeOptions): Promise<GetBulkExportResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getBulkExport:getBulkExport", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "excludePeers": args.excludePeers,
        "excludeRelations": args.excludeRelations,
        "exportTags": args.exportTags,
        "exportedItems": args.exportedItems,
        "exportedObjects": args.exportedObjects,
        "id": args.id,
        "importOrder": args.importOrder,
        "includeOrgIdentity": args.includeOrgIdentity,
        "items": args.items,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionId": args.permissionId,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "statusMessage": args.statusMessage,
        "tags": args.tags,
        "userId": args.userId,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBulkExport.
 */
export interface GetBulkExportArgs {
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetBulkExportAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    excludePeers?: string[];
    excludeRelations?: boolean;
    exportTags?: boolean;
    exportedItems?: inputs.GetBulkExportExportedItem[];
    exportedObjects?: inputs.GetBulkExportExportedObject[];
    id?: string;
    importOrder?: string;
    includeOrgIdentity?: boolean;
    items?: inputs.GetBulkExportItem[];
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetBulkExportOrganization;
    owners?: string[];
    parent?: inputs.GetBulkExportParent;
    permissionId?: string;
    permissionResources?: inputs.GetBulkExportPermissionResource[];
    sharedScope?: string;
    status?: string;
    statusMessage?: string;
    tags?: inputs.GetBulkExportTag[];
    userId?: string;
    versionContext?: inputs.GetBulkExportVersionContext;
}

/**
 * A collection of values returned by getBulkExport.
 */
export interface GetBulkExportResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetBulkExportAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly excludePeers?: string[];
    readonly excludeRelations?: boolean;
    readonly exportTags?: boolean;
    readonly exportedItems?: outputs.GetBulkExportExportedItem[];
    readonly exportedObjects?: outputs.GetBulkExportExportedObject[];
    readonly id: string;
    readonly importOrder?: string;
    readonly includeOrgIdentity?: boolean;
    readonly items?: outputs.GetBulkExportItem[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetBulkExportOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetBulkExportParent;
    readonly permissionId?: string;
    readonly permissionResources?: outputs.GetBulkExportPermissionResource[];
    readonly results: outputs.GetBulkExportResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly statusMessage?: string;
    readonly tags?: outputs.GetBulkExportTag[];
    readonly userId?: string;
    readonly versionContext?: outputs.GetBulkExportVersionContext;
}
export function getBulkExportOutput(args?: GetBulkExportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBulkExportResult> {
    return pulumi.output(args).apply((a: any) => getBulkExport(a, opts))
}

/**
 * A collection of arguments for invoking getBulkExport.
 */
export interface GetBulkExportOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetBulkExportAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    excludePeers?: pulumi.Input<pulumi.Input<string>[]>;
    excludeRelations?: pulumi.Input<boolean>;
    exportTags?: pulumi.Input<boolean>;
    exportedItems?: pulumi.Input<pulumi.Input<inputs.GetBulkExportExportedItemArgs>[]>;
    exportedObjects?: pulumi.Input<pulumi.Input<inputs.GetBulkExportExportedObjectArgs>[]>;
    id?: pulumi.Input<string>;
    importOrder?: pulumi.Input<string>;
    includeOrgIdentity?: pulumi.Input<boolean>;
    items?: pulumi.Input<pulumi.Input<inputs.GetBulkExportItemArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetBulkExportOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetBulkExportParentArgs>;
    permissionId?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetBulkExportPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetBulkExportTagArgs>[]>;
    userId?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetBulkExportVersionContextArgs>;
}
