// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getPartnerintegrationLogs(args?: GetPartnerintegrationLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetPartnerintegrationLogsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getPartnerintegrationLogs:getPartnerintegrationLogs", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inventory": args.inventory,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "stage": args.stage,
        "stderrs": args.stderrs,
        "stdouts": args.stdouts,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPartnerintegrationLogs.
 */
export interface GetPartnerintegrationLogsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetPartnerintegrationLogsAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    inventory?: inputs.GetPartnerintegrationLogsInventory;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetPartnerintegrationLogsParent;
    permissionResources?: inputs.GetPartnerintegrationLogsPermissionResource[];
    sharedScope?: string;
    stage?: string;
    stderrs?: string[];
    stdouts?: string[];
    tags?: inputs.GetPartnerintegrationLogsTag[];
    versionContext?: inputs.GetPartnerintegrationLogsVersionContext;
}

/**
 * A collection of values returned by getPartnerintegrationLogs.
 */
export interface GetPartnerintegrationLogsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetPartnerintegrationLogsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inventory?: outputs.GetPartnerintegrationLogsInventory;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetPartnerintegrationLogsParent;
    readonly permissionResources?: outputs.GetPartnerintegrationLogsPermissionResource[];
    readonly results: outputs.GetPartnerintegrationLogsResult[];
    readonly sharedScope?: string;
    readonly stage?: string;
    readonly stderrs?: string[];
    readonly stdouts?: string[];
    readonly tags?: outputs.GetPartnerintegrationLogsTag[];
    readonly versionContext?: outputs.GetPartnerintegrationLogsVersionContext;
}
export function getPartnerintegrationLogsOutput(args?: GetPartnerintegrationLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPartnerintegrationLogsResult> {
    return pulumi.output(args).apply((a: any) => getPartnerintegrationLogs(a, opts))
}

/**
 * A collection of arguments for invoking getPartnerintegrationLogs.
 */
export interface GetPartnerintegrationLogsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationLogsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventory?: pulumi.Input<inputs.GetPartnerintegrationLogsInventoryArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetPartnerintegrationLogsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationLogsPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    stage?: pulumi.Input<string>;
    stderrs?: pulumi.Input<pulumi.Input<string>[]>;
    stdouts?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetPartnerintegrationLogsTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetPartnerintegrationLogsVersionContextArgs>;
}
