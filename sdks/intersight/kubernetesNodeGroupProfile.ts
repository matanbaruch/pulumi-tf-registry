// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubernetesNodeGroupProfile extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesNodeGroupProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesNodeGroupProfileState, opts?: pulumi.CustomResourceOptions): KubernetesNodeGroupProfile {
        return new KubernetesNodeGroupProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/kubernetesNodeGroupProfile:KubernetesNodeGroupProfile';

    /**
     * Returns true if the given object is an instance of KubernetesNodeGroupProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesNodeGroupProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesNodeGroupProfile.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    public readonly actionParams!: pulumi.Output<outputs.KubernetesNodeGroupProfileActionParam[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.KubernetesNodeGroupProfileAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * A reference to a kubernetesClusterProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly clusterProfiles!: pulumi.Output<outputs.KubernetesNodeGroupProfileClusterProfile[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    public readonly configContexts!: pulumi.Output<outputs.KubernetesNodeGroupProfileConfigContext[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Current number of nodes in this node group at any given point in time.
     */
    public readonly currentsize!: pulumi.Output<number>;
    /**
     * Description of the profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Desired number of nodes in this node group, same as minsize initially and is updated by the auto-scaler.
     */
    public readonly desiredsize!: pulumi.Output<number | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    public readonly gpuConfigs!: pulumi.Output<outputs.KubernetesNodeGroupProfileGpuConfig[]>;
    /**
     * A reference to a kubernetesBaseInfrastructureProvider resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    public readonly infraProviders!: pulumi.Output<outputs.KubernetesNodeGroupProfileInfraProvider[]>;
    /**
     * An array of relationships to ippoolPool resources.
     */
    public readonly ipPools!: pulumi.Output<outputs.KubernetesNodeGroupProfileIpPool[]>;
    /**
     * A reference to a kubernetesVersionPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly kubernetesVersions!: pulumi.Output<outputs.KubernetesNodeGroupProfileKubernetesVersion[]>;
    public readonly labels!: pulumi.Output<outputs.KubernetesNodeGroupProfileLabel[]>;
    /**
     * Maximum number of nodes this node group can scale up to during repair, replacement or upgrade operations.
     */
    public readonly maxsize!: pulumi.Output<number | undefined>;
    /**
     * Minimum number of available nodes this node group can scale down to during repair, replacement or upgrade operations.
     */
    public readonly minsize!: pulumi.Output<number | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the profile instance or profile template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The node type ControlPlane, Worker or ControlPlaneWorker. * `Worker` - Node will be marked as a worker node. *
     * `ControlPlane` - Node will be marked as a control plane node. * `ControlPlaneWorker` - Node will be both a controle
     * plane and a worker.
     */
    public readonly nodeType!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to kubernetesNodeProfile resources.
     */
    public readonly nodes!: pulumi.Output<outputs.KubernetesNodeGroupProfileNode[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.KubernetesNodeGroupProfileParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.KubernetesNodeGroupProfilePermissionResource[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    public readonly policyBuckets!: pulumi.Output<outputs.KubernetesNodeGroupProfilePolicyBucket[]>;
    public readonly scheduledActions!: pulumi.Output<outputs.KubernetesNodeGroupProfileScheduledAction[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly srcTemplates!: pulumi.Output<outputs.KubernetesNodeGroupProfileSrcTemplate[]>;
    public readonly tags!: pulumi.Output<outputs.KubernetesNodeGroupProfileTag[]>;
    public readonly taints!: pulumi.Output<outputs.KubernetesNodeGroupProfileTaint[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.KubernetesNodeGroupProfileVersionContext[]>;

    /**
     * Create a KubernetesNodeGroupProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KubernetesNodeGroupProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesNodeGroupProfileArgs | KubernetesNodeGroupProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesNodeGroupProfileState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["actionParams"] = state ? state.actionParams : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clusterProfiles"] = state ? state.clusterProfiles : undefined;
            resourceInputs["configContexts"] = state ? state.configContexts : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["currentsize"] = state ? state.currentsize : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["desiredsize"] = state ? state.desiredsize : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["gpuConfigs"] = state ? state.gpuConfigs : undefined;
            resourceInputs["infraProviders"] = state ? state.infraProviders : undefined;
            resourceInputs["ipPools"] = state ? state.ipPools : undefined;
            resourceInputs["kubernetesVersions"] = state ? state.kubernetesVersions : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["maxsize"] = state ? state.maxsize : undefined;
            resourceInputs["minsize"] = state ? state.minsize : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeType"] = state ? state.nodeType : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["policyBuckets"] = state ? state.policyBuckets : undefined;
            resourceInputs["scheduledActions"] = state ? state.scheduledActions : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["srcTemplates"] = state ? state.srcTemplates : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taints"] = state ? state.taints : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as KubernetesNodeGroupProfileArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["actionParams"] = args ? args.actionParams : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clusterProfiles"] = args ? args.clusterProfiles : undefined;
            resourceInputs["configContexts"] = args ? args.configContexts : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["currentsize"] = args ? args.currentsize : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["desiredsize"] = args ? args.desiredsize : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["gpuConfigs"] = args ? args.gpuConfigs : undefined;
            resourceInputs["infraProviders"] = args ? args.infraProviders : undefined;
            resourceInputs["ipPools"] = args ? args.ipPools : undefined;
            resourceInputs["kubernetesVersions"] = args ? args.kubernetesVersions : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["maxsize"] = args ? args.maxsize : undefined;
            resourceInputs["minsize"] = args ? args.minsize : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeType"] = args ? args.nodeType : undefined;
            resourceInputs["nodes"] = args ? args.nodes : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["policyBuckets"] = args ? args.policyBuckets : undefined;
            resourceInputs["scheduledActions"] = args ? args.scheduledActions : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["srcTemplates"] = args ? args.srcTemplates : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taints"] = args ? args.taints : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesNodeGroupProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubernetesNodeGroupProfile resources.
 */
export interface KubernetesNodeGroupProfileState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileActionParam>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesClusterProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileClusterProfile>[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    configContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileConfigContext>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Current number of nodes in this node group at any given point in time.
     */
    currentsize?: pulumi.Input<number>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Desired number of nodes in this node group, same as minsize initially and is updated by the auto-scaler.
     */
    desiredsize?: pulumi.Input<number>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    gpuConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileGpuConfig>[]>;
    /**
     * A reference to a kubernetesBaseInfrastructureProvider resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    infraProviders?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileInfraProvider>[]>;
    /**
     * An array of relationships to ippoolPool resources.
     */
    ipPools?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileIpPool>[]>;
    /**
     * A reference to a kubernetesVersionPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    kubernetesVersions?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileKubernetesVersion>[]>;
    labels?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileLabel>[]>;
    /**
     * Maximum number of nodes this node group can scale up to during repair, replacement or upgrade operations.
     */
    maxsize?: pulumi.Input<number>;
    /**
     * Minimum number of available nodes this node group can scale down to during repair, replacement or upgrade operations.
     */
    minsize?: pulumi.Input<number>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the profile instance or profile template.
     */
    name?: pulumi.Input<string>;
    /**
     * The node type ControlPlane, Worker or ControlPlaneWorker. * `Worker` - Node will be marked as a worker node. *
     * `ControlPlane` - Node will be marked as a control plane node. * `ControlPlaneWorker` - Node will be both a controle
     * plane and a worker.
     */
    nodeType?: pulumi.Input<string>;
    /**
     * An array of relationships to kubernetesNodeProfile resources.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileNode>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfilePermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfilePolicyBucket>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileScheduledAction>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileSrcTemplate>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileTag>[]>;
    taints?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileTaint>[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    type?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileVersionContext>[]>;
}

/**
 * The set of arguments for constructing a KubernetesNodeGroupProfile resource.
 */
export interface KubernetesNodeGroupProfileArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileActionParam>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesClusterProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileClusterProfile>[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    configContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileConfigContext>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Current number of nodes in this node group at any given point in time.
     */
    currentsize?: pulumi.Input<number>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Desired number of nodes in this node group, same as minsize initially and is updated by the auto-scaler.
     */
    desiredsize?: pulumi.Input<number>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    gpuConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileGpuConfig>[]>;
    /**
     * A reference to a kubernetesBaseInfrastructureProvider resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    infraProviders?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileInfraProvider>[]>;
    /**
     * An array of relationships to ippoolPool resources.
     */
    ipPools?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileIpPool>[]>;
    /**
     * A reference to a kubernetesVersionPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    kubernetesVersions?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileKubernetesVersion>[]>;
    labels?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileLabel>[]>;
    /**
     * Maximum number of nodes this node group can scale up to during repair, replacement or upgrade operations.
     */
    maxsize?: pulumi.Input<number>;
    /**
     * Minimum number of available nodes this node group can scale down to during repair, replacement or upgrade operations.
     */
    minsize?: pulumi.Input<number>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the profile instance or profile template.
     */
    name?: pulumi.Input<string>;
    /**
     * The node type ControlPlane, Worker or ControlPlaneWorker. * `Worker` - Node will be marked as a worker node. *
     * `ControlPlane` - Node will be marked as a control plane node. * `ControlPlaneWorker` - Node will be both a controle
     * plane and a worker.
     */
    nodeType?: pulumi.Input<string>;
    /**
     * An array of relationships to kubernetesNodeProfile resources.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileNode>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfilePermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfilePolicyBucket>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileScheduledAction>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileSrcTemplate>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileTag>[]>;
    taints?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileTaint>[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    type?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupProfileVersionContext>[]>;
}
