// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFirmwareChassisUpgrade(args?: GetFirmwareChassisUpgradeArgs, opts?: pulumi.InvokeOptions): Promise<GetFirmwareChassisUpgradeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFirmwareChassisUpgrade:getFirmwareChassisUpgrade", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "chassis": args.chassis,
        "classId": args.classId,
        "createTime": args.createTime,
        "device": args.device,
        "directDownload": args.directDownload,
        "distributable": args.distributable,
        "domainGroupMoid": args.domainGroupMoid,
        "excludeComponentLists": args.excludeComponentLists,
        "fileServer": args.fileServer,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "networkShare": args.networkShare,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "release": args.release,
        "sharedScope": args.sharedScope,
        "skipEstimateImpact": args.skipEstimateImpact,
        "status": args.status,
        "tags": args.tags,
        "upgradeImpact": args.upgradeImpact,
        "upgradeStatus": args.upgradeStatus,
        "upgradeType": args.upgradeType,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFirmwareChassisUpgrade.
 */
export interface GetFirmwareChassisUpgradeArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetFirmwareChassisUpgradeAncestor[];
    chassis?: inputs.GetFirmwareChassisUpgradeChassis;
    classId?: string;
    createTime?: string;
    device?: inputs.GetFirmwareChassisUpgradeDevice;
    directDownload?: inputs.GetFirmwareChassisUpgradeDirectDownload;
    distributable?: inputs.GetFirmwareChassisUpgradeDistributable;
    domainGroupMoid?: string;
    excludeComponentLists?: string[];
    fileServer?: inputs.GetFirmwareChassisUpgradeFileServer;
    id?: string;
    modTime?: string;
    moid?: string;
    networkShare?: inputs.GetFirmwareChassisUpgradeNetworkShare;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFirmwareChassisUpgradeParent;
    permissionResources?: inputs.GetFirmwareChassisUpgradePermissionResource[];
    release?: inputs.GetFirmwareChassisUpgradeRelease;
    sharedScope?: string;
    skipEstimateImpact?: boolean;
    status?: string;
    tags?: inputs.GetFirmwareChassisUpgradeTag[];
    upgradeImpact?: inputs.GetFirmwareChassisUpgradeUpgradeImpact;
    upgradeStatus?: inputs.GetFirmwareChassisUpgradeUpgradeStatus;
    upgradeType?: string;
    versionContext?: inputs.GetFirmwareChassisUpgradeVersionContext;
}

/**
 * A collection of values returned by getFirmwareChassisUpgrade.
 */
export interface GetFirmwareChassisUpgradeResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFirmwareChassisUpgradeAncestor[];
    readonly chassis?: outputs.GetFirmwareChassisUpgradeChassis;
    readonly classId?: string;
    readonly createTime?: string;
    readonly device?: outputs.GetFirmwareChassisUpgradeDevice;
    readonly directDownload?: outputs.GetFirmwareChassisUpgradeDirectDownload;
    readonly distributable?: outputs.GetFirmwareChassisUpgradeDistributable;
    readonly domainGroupMoid?: string;
    readonly excludeComponentLists?: string[];
    readonly fileServer?: outputs.GetFirmwareChassisUpgradeFileServer;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly networkShare?: outputs.GetFirmwareChassisUpgradeNetworkShare;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFirmwareChassisUpgradeParent;
    readonly permissionResources?: outputs.GetFirmwareChassisUpgradePermissionResource[];
    readonly release?: outputs.GetFirmwareChassisUpgradeRelease;
    readonly results: outputs.GetFirmwareChassisUpgradeResult[];
    readonly sharedScope?: string;
    readonly skipEstimateImpact?: boolean;
    readonly status?: string;
    readonly tags?: outputs.GetFirmwareChassisUpgradeTag[];
    readonly upgradeImpact?: outputs.GetFirmwareChassisUpgradeUpgradeImpact;
    readonly upgradeStatus?: outputs.GetFirmwareChassisUpgradeUpgradeStatus;
    readonly upgradeType?: string;
    readonly versionContext?: outputs.GetFirmwareChassisUpgradeVersionContext;
}
export function getFirmwareChassisUpgradeOutput(args?: GetFirmwareChassisUpgradeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFirmwareChassisUpgradeResult> {
    return pulumi.output(args).apply((a: any) => getFirmwareChassisUpgrade(a, opts))
}

/**
 * A collection of arguments for invoking getFirmwareChassisUpgrade.
 */
export interface GetFirmwareChassisUpgradeOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFirmwareChassisUpgradeAncestorArgs>[]>;
    chassis?: pulumi.Input<inputs.GetFirmwareChassisUpgradeChassisArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    device?: pulumi.Input<inputs.GetFirmwareChassisUpgradeDeviceArgs>;
    directDownload?: pulumi.Input<inputs.GetFirmwareChassisUpgradeDirectDownloadArgs>;
    distributable?: pulumi.Input<inputs.GetFirmwareChassisUpgradeDistributableArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    excludeComponentLists?: pulumi.Input<pulumi.Input<string>[]>;
    fileServer?: pulumi.Input<inputs.GetFirmwareChassisUpgradeFileServerArgs>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    networkShare?: pulumi.Input<inputs.GetFirmwareChassisUpgradeNetworkShareArgs>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFirmwareChassisUpgradeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFirmwareChassisUpgradePermissionResourceArgs>[]>;
    release?: pulumi.Input<inputs.GetFirmwareChassisUpgradeReleaseArgs>;
    sharedScope?: pulumi.Input<string>;
    skipEstimateImpact?: pulumi.Input<boolean>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFirmwareChassisUpgradeTagArgs>[]>;
    upgradeImpact?: pulumi.Input<inputs.GetFirmwareChassisUpgradeUpgradeImpactArgs>;
    upgradeStatus?: pulumi.Input<inputs.GetFirmwareChassisUpgradeUpgradeStatusArgs>;
    upgradeType?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetFirmwareChassisUpgradeVersionContextArgs>;
}
