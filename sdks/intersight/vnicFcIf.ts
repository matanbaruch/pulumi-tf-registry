// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VnicFcIf extends pulumi.CustomResource {
    /**
     * Get an existing VnicFcIf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VnicFcIfState, opts?: pulumi.CustomResourceOptions): VnicFcIf {
        return new VnicFcIf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/vnicFcIf:VnicFcIf';

    /**
     * Returns true if the given object is an instance of VnicFcIf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VnicFcIf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VnicFcIf.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.VnicFcIfAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * A reference to a vnicFcAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly fcAdapterPolicies!: pulumi.Output<outputs.VnicFcIfFcAdapterPolicy[]>;
    /**
     * A reference to a vnicFcNetworkPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly fcNetworkPolicies!: pulumi.Output<outputs.VnicFcIfFcNetworkPolicy[]>;
    /**
     * A reference to a vnicFcQosPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly fcQosPolicies!: pulumi.Output<outputs.VnicFcIfFcQosPolicy[]>;
    /**
     * An array of relationships to fabricFcZonePolicy resources.
     */
    public readonly fcZonePolicies!: pulumi.Output<outputs.VnicFcIfFcZonePolicy[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the virtual fibre channel interface.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the
     * Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The order should start from zero with no
     * overlaps. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on
     * each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1340, VIC 1380 and VIC 1385 which
     * have two.
     */
    public readonly order!: pulumi.Output<number | undefined>;
    public readonly overriddenLists!: pulumi.Output<string[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.VnicFcIfParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.VnicFcIfPermissionResource[]>;
    /**
     * Enables retention of LUN ID associations in memory until they are manually cleared.
     */
    public readonly persistentBindings!: pulumi.Output<boolean | undefined>;
    /**
     * Pingroup name associated to vfc for static pinning. SCP deploy will resolve pingroup name and fetches the correspoding
     * uplink port/port channel to pin the vfc traffic.
     */
    public readonly pinGroupName!: pulumi.Output<string | undefined>;
    /**
     * Placement Settings for the virtual interface.
     */
    public readonly placements!: pulumi.Output<outputs.VnicFcIfPlacement[]>;
    /**
     * A reference to a policyAbstractConfigProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly profiles!: pulumi.Output<outputs.VnicFcIfProfile[]>;
    /**
     * A reference to a vnicSanConnectivityPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly sanConnectivityPolicies!: pulumi.Output<outputs.VnicFcIfSanConnectivityPolicy[]>;
    /**
     * A reference to a vnicFcIf resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly scpVhbas!: pulumi.Output<outputs.VnicFcIfScpVhba[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * An array of relationships to vnicFcIf resources.
     */
    public readonly spVhbas!: pulumi.Output<outputs.VnicFcIfSpVhba[]>;
    /**
     * A reference to a vnicVhbaTemplate resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly srcTemplates!: pulumi.Output<outputs.VnicFcIfSrcTemplate[]>;
    /**
     * The WWPN address must be in hexadecimal format xx:xx:xx:xx:xx:xx:xx:xx. Allowed ranges are 20:00:00:00:00:00:00:00 to
     * 20:FF:FF:FF:FF:FF:FF:FF or from 50:00:00:00:00:00:00:00 to 5F:FF:FF:FF:FF:FF:FF:FF. To ensure uniqueness of WWN's in the
     * SAN fabric, you are strongly encouraged to use the WWN prefix - 20:00:00:25:B5:xx:xx:xx.
     */
    public readonly staticWwpnAddress!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.VnicFcIfTag[]>;
    public readonly templateActions!: pulumi.Output<outputs.VnicFcIfTemplateAction[]>;
    public readonly templateSyncErrors!: pulumi.Output<outputs.VnicFcIfTemplateSyncError[]>;
    /**
     * The sync status of the current MO wrt the attached Template MO. * `None` - The Enum value represents that the object is
     * not attached to any template. * `OK` - The Enum value represents that the object values are in sync with attached
     * template. * `Scheduled` - The Enum value represents that the object sync from attached template is scheduled from
     * template. * `InProgress` - The Enum value represents that the object sync with the attached template is in progress. *
     * `OutOfSync` - The Enum value represents that the object values are not in sync with attached template.
     */
    public readonly templateSyncStatus!: pulumi.Output<string>;
    /**
     * VHBA Type configuration for SAN Connectivity Policy. This configuration is supported only on Cisco VIC 14XX series and
     * higher series of adapters. * `fc-initiator` - The default value set for vHBA Type Configuration. Fc-initiator specifies
     * vHBA as a consumer of storage. Enables SCSI commands to transfer data and status information between host and target
     * storage systems. * `fc-nvme-initiator` - Fc-nvme-initiator specifies vHBA as a consumer of storage. Enables NVMe-based
     * message commands to transfer data and status information between host and target storage systems. * `fc-nvme-target` -
     * Fc-nvme-target specifies vHBA as a provider of storage volumes to initiators. Enables NVMe-based message commands to
     * transfer data and status information between host and target storage systems. Currently tech-preview, only enabled with
     * an asynchronous driver. * `fc-target` - Fc-target specifies vHBA as a provider of storage volumes to initiators. Enables
     * SCSI commands to transfer data and status information between host and target storage systems. fc-target is enabled only
     * with an asynchronous driver.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.VnicFcIfVersionContext[]>;
    /**
     * This should be the same as the channel number of the vfc created on switch in order to set up the data path. The
     * property is applicable only for FI attached servers where a vfc is created on the switch for every vHBA.
     */
    public readonly vifId!: pulumi.Output<number>;
    /**
     * The WWPN address that is assigned to the vHBA based on the wwn pool that has been assigned to the SAN Connectivity
     * Policy.
     */
    public readonly wwpn!: pulumi.Output<string>;
    /**
     * Type of allocation selected to assign a WWPN address to the vhba. * `POOL` - The user selects a pool from which the
     * mac/wwn address will be leased for the Virtual Interface. * `STATIC` - The user assigns a static mac/wwn address for the
     * Virtual Interface.
     */
    public readonly wwpnAddressType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a fcpoolLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly wwpnLeases!: pulumi.Output<outputs.VnicFcIfWwpnLease[]>;
    /**
     * A reference to a fcpoolPool resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly wwpnPools!: pulumi.Output<outputs.VnicFcIfWwpnPool[]>;

    /**
     * Create a VnicFcIf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VnicFcIfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VnicFcIfArgs | VnicFcIfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VnicFcIfState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["fcAdapterPolicies"] = state ? state.fcAdapterPolicies : undefined;
            resourceInputs["fcNetworkPolicies"] = state ? state.fcNetworkPolicies : undefined;
            resourceInputs["fcQosPolicies"] = state ? state.fcQosPolicies : undefined;
            resourceInputs["fcZonePolicies"] = state ? state.fcZonePolicies : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["overriddenLists"] = state ? state.overriddenLists : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["persistentBindings"] = state ? state.persistentBindings : undefined;
            resourceInputs["pinGroupName"] = state ? state.pinGroupName : undefined;
            resourceInputs["placements"] = state ? state.placements : undefined;
            resourceInputs["profiles"] = state ? state.profiles : undefined;
            resourceInputs["sanConnectivityPolicies"] = state ? state.sanConnectivityPolicies : undefined;
            resourceInputs["scpVhbas"] = state ? state.scpVhbas : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["spVhbas"] = state ? state.spVhbas : undefined;
            resourceInputs["srcTemplates"] = state ? state.srcTemplates : undefined;
            resourceInputs["staticWwpnAddress"] = state ? state.staticWwpnAddress : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateActions"] = state ? state.templateActions : undefined;
            resourceInputs["templateSyncErrors"] = state ? state.templateSyncErrors : undefined;
            resourceInputs["templateSyncStatus"] = state ? state.templateSyncStatus : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["vifId"] = state ? state.vifId : undefined;
            resourceInputs["wwpn"] = state ? state.wwpn : undefined;
            resourceInputs["wwpnAddressType"] = state ? state.wwpnAddressType : undefined;
            resourceInputs["wwpnLeases"] = state ? state.wwpnLeases : undefined;
            resourceInputs["wwpnPools"] = state ? state.wwpnPools : undefined;
        } else {
            const args = argsOrState as VnicFcIfArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["fcAdapterPolicies"] = args ? args.fcAdapterPolicies : undefined;
            resourceInputs["fcNetworkPolicies"] = args ? args.fcNetworkPolicies : undefined;
            resourceInputs["fcQosPolicies"] = args ? args.fcQosPolicies : undefined;
            resourceInputs["fcZonePolicies"] = args ? args.fcZonePolicies : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["overriddenLists"] = args ? args.overriddenLists : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["persistentBindings"] = args ? args.persistentBindings : undefined;
            resourceInputs["pinGroupName"] = args ? args.pinGroupName : undefined;
            resourceInputs["placements"] = args ? args.placements : undefined;
            resourceInputs["profiles"] = args ? args.profiles : undefined;
            resourceInputs["sanConnectivityPolicies"] = args ? args.sanConnectivityPolicies : undefined;
            resourceInputs["scpVhbas"] = args ? args.scpVhbas : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["spVhbas"] = args ? args.spVhbas : undefined;
            resourceInputs["srcTemplates"] = args ? args.srcTemplates : undefined;
            resourceInputs["staticWwpnAddress"] = args ? args.staticWwpnAddress : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateActions"] = args ? args.templateActions : undefined;
            resourceInputs["templateSyncErrors"] = args ? args.templateSyncErrors : undefined;
            resourceInputs["templateSyncStatus"] = args ? args.templateSyncStatus : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["vifId"] = args ? args.vifId : undefined;
            resourceInputs["wwpn"] = args ? args.wwpn : undefined;
            resourceInputs["wwpnAddressType"] = args ? args.wwpnAddressType : undefined;
            resourceInputs["wwpnLeases"] = args ? args.wwpnLeases : undefined;
            resourceInputs["wwpnPools"] = args ? args.wwpnPools : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VnicFcIf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VnicFcIf resources.
 */
export interface VnicFcIfState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicFcIfAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a vnicFcAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fcAdapterPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcAdapterPolicy>[]>;
    /**
     * A reference to a vnicFcNetworkPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fcNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcNetworkPolicy>[]>;
    /**
     * A reference to a vnicFcQosPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fcQosPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcQosPolicy>[]>;
    /**
     * An array of relationships to fabricFcZonePolicy resources.
     */
    fcZonePolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcZonePolicy>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the virtual fibre channel interface.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the
     * Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The order should start from zero with no
     * overlaps. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on
     * each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1340, VIC 1380 and VIC 1385 which
     * have two.
     */
    order?: pulumi.Input<number>;
    overriddenLists?: pulumi.Input<pulumi.Input<string>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicFcIfParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicFcIfPermissionResource>[]>;
    /**
     * Enables retention of LUN ID associations in memory until they are manually cleared.
     */
    persistentBindings?: pulumi.Input<boolean>;
    /**
     * Pingroup name associated to vfc for static pinning. SCP deploy will resolve pingroup name and fetches the correspoding
     * uplink port/port channel to pin the vfc traffic.
     */
    pinGroupName?: pulumi.Input<string>;
    /**
     * Placement Settings for the virtual interface.
     */
    placements?: pulumi.Input<pulumi.Input<inputs.VnicFcIfPlacement>[]>;
    /**
     * A reference to a policyAbstractConfigProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    profiles?: pulumi.Input<pulumi.Input<inputs.VnicFcIfProfile>[]>;
    /**
     * A reference to a vnicSanConnectivityPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    sanConnectivityPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfSanConnectivityPolicy>[]>;
    /**
     * A reference to a vnicFcIf resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    scpVhbas?: pulumi.Input<pulumi.Input<inputs.VnicFcIfScpVhba>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * An array of relationships to vnicFcIf resources.
     */
    spVhbas?: pulumi.Input<pulumi.Input<inputs.VnicFcIfSpVhba>[]>;
    /**
     * A reference to a vnicVhbaTemplate resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.VnicFcIfSrcTemplate>[]>;
    /**
     * The WWPN address must be in hexadecimal format xx:xx:xx:xx:xx:xx:xx:xx. Allowed ranges are 20:00:00:00:00:00:00:00 to
     * 20:FF:FF:FF:FF:FF:FF:FF or from 50:00:00:00:00:00:00:00 to 5F:FF:FF:FF:FF:FF:FF:FF. To ensure uniqueness of WWN's in the
     * SAN fabric, you are strongly encouraged to use the WWN prefix - 20:00:00:25:B5:xx:xx:xx.
     */
    staticWwpnAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicFcIfTag>[]>;
    templateActions?: pulumi.Input<pulumi.Input<inputs.VnicFcIfTemplateAction>[]>;
    templateSyncErrors?: pulumi.Input<pulumi.Input<inputs.VnicFcIfTemplateSyncError>[]>;
    /**
     * The sync status of the current MO wrt the attached Template MO. * `None` - The Enum value represents that the object is
     * not attached to any template. * `OK` - The Enum value represents that the object values are in sync with attached
     * template. * `Scheduled` - The Enum value represents that the object sync from attached template is scheduled from
     * template. * `InProgress` - The Enum value represents that the object sync with the attached template is in progress. *
     * `OutOfSync` - The Enum value represents that the object values are not in sync with attached template.
     */
    templateSyncStatus?: pulumi.Input<string>;
    /**
     * VHBA Type configuration for SAN Connectivity Policy. This configuration is supported only on Cisco VIC 14XX series and
     * higher series of adapters. * `fc-initiator` - The default value set for vHBA Type Configuration. Fc-initiator specifies
     * vHBA as a consumer of storage. Enables SCSI commands to transfer data and status information between host and target
     * storage systems. * `fc-nvme-initiator` - Fc-nvme-initiator specifies vHBA as a consumer of storage. Enables NVMe-based
     * message commands to transfer data and status information between host and target storage systems. * `fc-nvme-target` -
     * Fc-nvme-target specifies vHBA as a provider of storage volumes to initiators. Enables NVMe-based message commands to
     * transfer data and status information between host and target storage systems. Currently tech-preview, only enabled with
     * an asynchronous driver. * `fc-target` - Fc-target specifies vHBA as a provider of storage volumes to initiators. Enables
     * SCSI commands to transfer data and status information between host and target storage systems. fc-target is enabled only
     * with an asynchronous driver.
     */
    type?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicFcIfVersionContext>[]>;
    /**
     * This should be the same as the channel number of the vfc created on switch in order to set up the data path. The
     * property is applicable only for FI attached servers where a vfc is created on the switch for every vHBA.
     */
    vifId?: pulumi.Input<number>;
    /**
     * The WWPN address that is assigned to the vHBA based on the wwn pool that has been assigned to the SAN Connectivity
     * Policy.
     */
    wwpn?: pulumi.Input<string>;
    /**
     * Type of allocation selected to assign a WWPN address to the vhba. * `POOL` - The user selects a pool from which the
     * mac/wwn address will be leased for the Virtual Interface. * `STATIC` - The user assigns a static mac/wwn address for the
     * Virtual Interface.
     */
    wwpnAddressType?: pulumi.Input<string>;
    /**
     * A reference to a fcpoolLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    wwpnLeases?: pulumi.Input<pulumi.Input<inputs.VnicFcIfWwpnLease>[]>;
    /**
     * A reference to a fcpoolPool resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    wwpnPools?: pulumi.Input<pulumi.Input<inputs.VnicFcIfWwpnPool>[]>;
}

/**
 * The set of arguments for constructing a VnicFcIf resource.
 */
export interface VnicFcIfArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicFcIfAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a vnicFcAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fcAdapterPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcAdapterPolicy>[]>;
    /**
     * A reference to a vnicFcNetworkPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fcNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcNetworkPolicy>[]>;
    /**
     * A reference to a vnicFcQosPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fcQosPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcQosPolicy>[]>;
    /**
     * An array of relationships to fabricFcZonePolicy resources.
     */
    fcZonePolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfFcZonePolicy>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the virtual fibre channel interface.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the
     * Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The order should start from zero with no
     * overlaps. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on
     * each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1340, VIC 1380 and VIC 1385 which
     * have two.
     */
    order?: pulumi.Input<number>;
    overriddenLists?: pulumi.Input<pulumi.Input<string>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicFcIfParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicFcIfPermissionResource>[]>;
    /**
     * Enables retention of LUN ID associations in memory until they are manually cleared.
     */
    persistentBindings?: pulumi.Input<boolean>;
    /**
     * Pingroup name associated to vfc for static pinning. SCP deploy will resolve pingroup name and fetches the correspoding
     * uplink port/port channel to pin the vfc traffic.
     */
    pinGroupName?: pulumi.Input<string>;
    /**
     * Placement Settings for the virtual interface.
     */
    placements?: pulumi.Input<pulumi.Input<inputs.VnicFcIfPlacement>[]>;
    /**
     * A reference to a policyAbstractConfigProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    profiles?: pulumi.Input<pulumi.Input<inputs.VnicFcIfProfile>[]>;
    /**
     * A reference to a vnicSanConnectivityPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    sanConnectivityPolicies?: pulumi.Input<pulumi.Input<inputs.VnicFcIfSanConnectivityPolicy>[]>;
    /**
     * A reference to a vnicFcIf resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    scpVhbas?: pulumi.Input<pulumi.Input<inputs.VnicFcIfScpVhba>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * An array of relationships to vnicFcIf resources.
     */
    spVhbas?: pulumi.Input<pulumi.Input<inputs.VnicFcIfSpVhba>[]>;
    /**
     * A reference to a vnicVhbaTemplate resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.VnicFcIfSrcTemplate>[]>;
    /**
     * The WWPN address must be in hexadecimal format xx:xx:xx:xx:xx:xx:xx:xx. Allowed ranges are 20:00:00:00:00:00:00:00 to
     * 20:FF:FF:FF:FF:FF:FF:FF or from 50:00:00:00:00:00:00:00 to 5F:FF:FF:FF:FF:FF:FF:FF. To ensure uniqueness of WWN's in the
     * SAN fabric, you are strongly encouraged to use the WWN prefix - 20:00:00:25:B5:xx:xx:xx.
     */
    staticWwpnAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicFcIfTag>[]>;
    templateActions?: pulumi.Input<pulumi.Input<inputs.VnicFcIfTemplateAction>[]>;
    templateSyncErrors?: pulumi.Input<pulumi.Input<inputs.VnicFcIfTemplateSyncError>[]>;
    /**
     * The sync status of the current MO wrt the attached Template MO. * `None` - The Enum value represents that the object is
     * not attached to any template. * `OK` - The Enum value represents that the object values are in sync with attached
     * template. * `Scheduled` - The Enum value represents that the object sync from attached template is scheduled from
     * template. * `InProgress` - The Enum value represents that the object sync with the attached template is in progress. *
     * `OutOfSync` - The Enum value represents that the object values are not in sync with attached template.
     */
    templateSyncStatus?: pulumi.Input<string>;
    /**
     * VHBA Type configuration for SAN Connectivity Policy. This configuration is supported only on Cisco VIC 14XX series and
     * higher series of adapters. * `fc-initiator` - The default value set for vHBA Type Configuration. Fc-initiator specifies
     * vHBA as a consumer of storage. Enables SCSI commands to transfer data and status information between host and target
     * storage systems. * `fc-nvme-initiator` - Fc-nvme-initiator specifies vHBA as a consumer of storage. Enables NVMe-based
     * message commands to transfer data and status information between host and target storage systems. * `fc-nvme-target` -
     * Fc-nvme-target specifies vHBA as a provider of storage volumes to initiators. Enables NVMe-based message commands to
     * transfer data and status information between host and target storage systems. Currently tech-preview, only enabled with
     * an asynchronous driver. * `fc-target` - Fc-target specifies vHBA as a provider of storage volumes to initiators. Enables
     * SCSI commands to transfer data and status information between host and target storage systems. fc-target is enabled only
     * with an asynchronous driver.
     */
    type?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicFcIfVersionContext>[]>;
    /**
     * This should be the same as the channel number of the vfc created on switch in order to set up the data path. The
     * property is applicable only for FI attached servers where a vfc is created on the switch for every vHBA.
     */
    vifId?: pulumi.Input<number>;
    /**
     * The WWPN address that is assigned to the vHBA based on the wwn pool that has been assigned to the SAN Connectivity
     * Policy.
     */
    wwpn?: pulumi.Input<string>;
    /**
     * Type of allocation selected to assign a WWPN address to the vhba. * `POOL` - The user selects a pool from which the
     * mac/wwn address will be leased for the Virtual Interface. * `STATIC` - The user assigns a static mac/wwn address for the
     * Virtual Interface.
     */
    wwpnAddressType?: pulumi.Input<string>;
    /**
     * A reference to a fcpoolLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    wwpnLeases?: pulumi.Input<pulumi.Input<inputs.VnicFcIfWwpnLease>[]>;
    /**
     * A reference to a fcpoolPool resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    wwpnPools?: pulumi.Input<pulumi.Input<inputs.VnicFcIfWwpnPool>[]>;
}
