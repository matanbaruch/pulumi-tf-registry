// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRecommendationPurchaseOrderEstimate(args?: GetRecommendationPurchaseOrderEstimateArgs, opts?: pulumi.InvokeOptions): Promise<GetRecommendationPurchaseOrderEstimateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getRecommendationPurchaseOrderEstimate:getRecommendationPurchaseOrderEstimate", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clusterExpansion": args.clusterExpansion,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "estimateId": args.estimateId,
        "estimateOwner": args.estimateOwner,
        "id": args.id,
        "lastUpdatedTime": args.lastUpdatedTime,
        "message": args.message,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "requirementMet": args.requirementMet,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "totalCost": args.totalCost,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecommendationPurchaseOrderEstimate.
 */
export interface GetRecommendationPurchaseOrderEstimateArgs {
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetRecommendationPurchaseOrderEstimateAncestor[];
    classId?: string;
    clusterExpansion?: inputs.GetRecommendationPurchaseOrderEstimateClusterExpansion;
    createTime?: string;
    domainGroupMoid?: string;
    estimateId?: string;
    estimateOwner?: inputs.GetRecommendationPurchaseOrderEstimateEstimateOwner;
    id?: string;
    lastUpdatedTime?: string;
    message?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetRecommendationPurchaseOrderEstimateParent;
    permissionResources?: inputs.GetRecommendationPurchaseOrderEstimatePermissionResource[];
    requirementMet?: boolean;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetRecommendationPurchaseOrderEstimateTag[];
    totalCost?: number;
    versionContext?: inputs.GetRecommendationPurchaseOrderEstimateVersionContext;
}

/**
 * A collection of values returned by getRecommendationPurchaseOrderEstimate.
 */
export interface GetRecommendationPurchaseOrderEstimateResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetRecommendationPurchaseOrderEstimateAncestor[];
    readonly classId?: string;
    readonly clusterExpansion?: outputs.GetRecommendationPurchaseOrderEstimateClusterExpansion;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly estimateId?: string;
    readonly estimateOwner?: outputs.GetRecommendationPurchaseOrderEstimateEstimateOwner;
    readonly id: string;
    readonly lastUpdatedTime?: string;
    readonly message?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetRecommendationPurchaseOrderEstimateParent;
    readonly permissionResources?: outputs.GetRecommendationPurchaseOrderEstimatePermissionResource[];
    readonly requirementMet?: boolean;
    readonly results: outputs.GetRecommendationPurchaseOrderEstimateResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetRecommendationPurchaseOrderEstimateTag[];
    readonly totalCost?: number;
    readonly versionContext?: outputs.GetRecommendationPurchaseOrderEstimateVersionContext;
}
export function getRecommendationPurchaseOrderEstimateOutput(args?: GetRecommendationPurchaseOrderEstimateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecommendationPurchaseOrderEstimateResult> {
    return pulumi.output(args).apply((a: any) => getRecommendationPurchaseOrderEstimate(a, opts))
}

/**
 * A collection of arguments for invoking getRecommendationPurchaseOrderEstimate.
 */
export interface GetRecommendationPurchaseOrderEstimateOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimateAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clusterExpansion?: pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimateClusterExpansionArgs>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    estimateId?: pulumi.Input<string>;
    estimateOwner?: pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimateEstimateOwnerArgs>;
    id?: pulumi.Input<string>;
    lastUpdatedTime?: pulumi.Input<string>;
    message?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimateParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimatePermissionResourceArgs>[]>;
    requirementMet?: pulumi.Input<boolean>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimateTagArgs>[]>;
    totalCost?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetRecommendationPurchaseOrderEstimateVersionContextArgs>;
}
