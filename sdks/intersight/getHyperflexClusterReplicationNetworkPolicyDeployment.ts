// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexClusterReplicationNetworkPolicyDeployment(args?: GetHyperflexClusterReplicationNetworkPolicyDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexClusterReplicationNetworkPolicyDeploymentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexClusterReplicationNetworkPolicyDeployment:getHyperflexClusterReplicationNetworkPolicyDeployment", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "cluster": args.cluster,
        "clusterUuid": args.clusterUuid,
        "createTime": args.createTime,
        "description": args.description,
        "discovered": args.discovered,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyMoid": args.policyMoid,
        "profileMoid": args.profileMoid,
        "replicationBandwidthMbps": args.replicationBandwidthMbps,
        "replicationIpranges": args.replicationIpranges,
        "replicationMtu": args.replicationMtu,
        "replicationVlan": args.replicationVlan,
        "requestId": args.requestId,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexClusterReplicationNetworkPolicyDeployment.
 */
export interface GetHyperflexClusterReplicationNetworkPolicyDeploymentArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentAncestor[];
    classId?: string;
    cluster?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentCluster;
    clusterUuid?: string;
    createTime?: string;
    description?: string;
    discovered?: boolean;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentOrganization;
    owners?: string[];
    parent?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentParent;
    permissionResources?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentPermissionResource[];
    policyMoid?: string;
    profileMoid?: string;
    replicationBandwidthMbps?: number;
    replicationIpranges?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentReplicationIprange[];
    replicationMtu?: number;
    replicationVlan?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentReplicationVlan;
    requestId?: string;
    sharedScope?: string;
    tags?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentTag[];
    versionContext?: inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentVersionContext;
}

/**
 * A collection of values returned by getHyperflexClusterReplicationNetworkPolicyDeployment.
 */
export interface GetHyperflexClusterReplicationNetworkPolicyDeploymentResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentAncestor[];
    readonly classId?: string;
    readonly cluster?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentCluster;
    readonly clusterUuid?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly discovered?: boolean;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentParent;
    readonly permissionResources?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentPermissionResource[];
    readonly policyMoid?: string;
    readonly profileMoid?: string;
    readonly replicationBandwidthMbps?: number;
    readonly replicationIpranges?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentReplicationIprange[];
    readonly replicationMtu?: number;
    readonly replicationVlan?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentReplicationVlan;
    readonly requestId?: string;
    readonly results: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentTag[];
    readonly versionContext?: outputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentVersionContext;
}
export function getHyperflexClusterReplicationNetworkPolicyDeploymentOutput(args?: GetHyperflexClusterReplicationNetworkPolicyDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexClusterReplicationNetworkPolicyDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexClusterReplicationNetworkPolicyDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexClusterReplicationNetworkPolicyDeployment.
 */
export interface GetHyperflexClusterReplicationNetworkPolicyDeploymentOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentClusterArgs>;
    clusterUuid?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    discovered?: pulumi.Input<boolean>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentPermissionResourceArgs>[]>;
    policyMoid?: pulumi.Input<string>;
    profileMoid?: pulumi.Input<string>;
    replicationBandwidthMbps?: pulumi.Input<number>;
    replicationIpranges?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentReplicationIprangeArgs>[]>;
    replicationMtu?: pulumi.Input<number>;
    replicationVlan?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentReplicationVlanArgs>;
    requestId?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetHyperflexClusterReplicationNetworkPolicyDeploymentVersionContextArgs>;
}
