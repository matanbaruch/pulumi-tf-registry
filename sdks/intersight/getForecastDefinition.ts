// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getForecastDefinition(args?: GetForecastDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetForecastDefinitionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getForecastDefinition:getForecastDefinition", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "alertThresholdInPercentage": args.alertThresholdInPercentage,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "dataSource": args.dataSource,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "metricName": args.metricName,
        "minNumOfDaysOfData": args.minNumOfDaysOfData,
        "modTime": args.modTime,
        "moid": args.moid,
        "numOfDaysOfHistoricalData": args.numOfDaysOfHistoricalData,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platformType": args.platformType,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getForecastDefinition.
 */
export interface GetForecastDefinitionArgs {
    accountMoid?: string;
    additionalProperties?: string;
    alertThresholdInPercentage?: number;
    ancestors?: inputs.GetForecastDefinitionAncestor[];
    catalog?: inputs.GetForecastDefinitionCatalog;
    classId?: string;
    createTime?: string;
    dataSource?: string;
    domainGroupMoid?: string;
    id?: string;
    metricName?: string;
    minNumOfDaysOfData?: number;
    modTime?: string;
    moid?: string;
    numOfDaysOfHistoricalData?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetForecastDefinitionParent;
    permissionResources?: inputs.GetForecastDefinitionPermissionResource[];
    platformType?: string;
    sharedScope?: string;
    tags?: inputs.GetForecastDefinitionTag[];
    versionContext?: inputs.GetForecastDefinitionVersionContext;
}

/**
 * A collection of values returned by getForecastDefinition.
 */
export interface GetForecastDefinitionResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly alertThresholdInPercentage?: number;
    readonly ancestors?: outputs.GetForecastDefinitionAncestor[];
    readonly catalog?: outputs.GetForecastDefinitionCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly dataSource?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly metricName?: string;
    readonly minNumOfDaysOfData?: number;
    readonly modTime?: string;
    readonly moid?: string;
    readonly numOfDaysOfHistoricalData?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetForecastDefinitionParent;
    readonly permissionResources?: outputs.GetForecastDefinitionPermissionResource[];
    readonly platformType?: string;
    readonly results: outputs.GetForecastDefinitionResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetForecastDefinitionTag[];
    readonly versionContext?: outputs.GetForecastDefinitionVersionContext;
}
export function getForecastDefinitionOutput(args?: GetForecastDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetForecastDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getForecastDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getForecastDefinition.
 */
export interface GetForecastDefinitionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    alertThresholdInPercentage?: pulumi.Input<number>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetForecastDefinitionAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetForecastDefinitionCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dataSource?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    metricName?: pulumi.Input<string>;
    minNumOfDaysOfData?: pulumi.Input<number>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    numOfDaysOfHistoricalData?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetForecastDefinitionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetForecastDefinitionPermissionResourceArgs>[]>;
    platformType?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetForecastDefinitionTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetForecastDefinitionVersionContextArgs>;
}
