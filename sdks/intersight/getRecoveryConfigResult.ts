// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRecoveryConfigResult(args?: GetRecoveryConfigResultArgs, opts?: pulumi.InvokeOptions): Promise<GetRecoveryConfigResultResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getRecoveryConfigResult:getRecoveryConfigResult", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "appliedPolicies": args.appliedPolicies,
        "backupProfile": args.backupProfile,
        "classId": args.classId,
        "configStage": args.configStage,
        "configState": args.configState,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "resultEntries": args.resultEntries,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "validationState": args.validationState,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRecoveryConfigResult.
 */
export interface GetRecoveryConfigResultArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetRecoveryConfigResultAncestor[];
    appliedPolicies?: inputs.GetRecoveryConfigResultAppliedPolicy[];
    backupProfile?: inputs.GetRecoveryConfigResultBackupProfile;
    classId?: string;
    configStage?: string;
    configState?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetRecoveryConfigResultParent;
    permissionResources?: inputs.GetRecoveryConfigResultPermissionResource[];
    resultEntries?: inputs.GetRecoveryConfigResultResultEntry[];
    sharedScope?: string;
    tags?: inputs.GetRecoveryConfigResultTag[];
    validationState?: string;
    versionContext?: inputs.GetRecoveryConfigResultVersionContext;
}

/**
 * A collection of values returned by getRecoveryConfigResult.
 */
export interface GetRecoveryConfigResultResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetRecoveryConfigResultAncestor[];
    readonly appliedPolicies?: outputs.GetRecoveryConfigResultAppliedPolicy[];
    readonly backupProfile?: outputs.GetRecoveryConfigResultBackupProfile;
    readonly classId?: string;
    readonly configStage?: string;
    readonly configState?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetRecoveryConfigResultParent;
    readonly permissionResources?: outputs.GetRecoveryConfigResultPermissionResource[];
    readonly resultEntries?: outputs.GetRecoveryConfigResultResultEntry[];
    readonly results: outputs.GetRecoveryConfigResultResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetRecoveryConfigResultTag[];
    readonly validationState?: string;
    readonly versionContext?: outputs.GetRecoveryConfigResultVersionContext;
}
export function getRecoveryConfigResultOutput(args?: GetRecoveryConfigResultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecoveryConfigResultResult> {
    return pulumi.output(args).apply((a: any) => getRecoveryConfigResult(a, opts))
}

/**
 * A collection of arguments for invoking getRecoveryConfigResult.
 */
export interface GetRecoveryConfigResultOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetRecoveryConfigResultAncestorArgs>[]>;
    appliedPolicies?: pulumi.Input<pulumi.Input<inputs.GetRecoveryConfigResultAppliedPolicyArgs>[]>;
    backupProfile?: pulumi.Input<inputs.GetRecoveryConfigResultBackupProfileArgs>;
    classId?: pulumi.Input<string>;
    configStage?: pulumi.Input<string>;
    configState?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetRecoveryConfigResultParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetRecoveryConfigResultPermissionResourceArgs>[]>;
    resultEntries?: pulumi.Input<pulumi.Input<inputs.GetRecoveryConfigResultResultEntryArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetRecoveryConfigResultTagArgs>[]>;
    validationState?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetRecoveryConfigResultVersionContextArgs>;
}
