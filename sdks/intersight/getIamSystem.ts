// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamSystem(args?: GetIamSystemArgs, opts?: pulumi.InvokeOptions): Promise<GetIamSystemResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamSystem:getIamSystem", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "endPointPrivileges": args.endPointPrivileges,
        "endPointRoles": args.endPointRoles,
        "id": args.id,
        "idp": args.idp,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "privilegeSets": args.privilegeSets,
        "privileges": args.privileges,
        "roles": args.roles,
        "serviceProvider": args.serviceProvider,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamSystem.
 */
export interface GetIamSystemArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamSystemAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    endPointPrivileges?: inputs.GetIamSystemEndPointPrivilege[];
    endPointRoles?: inputs.GetIamSystemEndPointRole[];
    id?: string;
    idp?: inputs.GetIamSystemIdp;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamSystemParent;
    permissionResources?: inputs.GetIamSystemPermissionResource[];
    privilegeSets?: inputs.GetIamSystemPrivilegeSet[];
    privileges?: inputs.GetIamSystemPrivilege[];
    roles?: inputs.GetIamSystemRole[];
    serviceProvider?: inputs.GetIamSystemServiceProvider;
    sharedScope?: string;
    tags?: inputs.GetIamSystemTag[];
    versionContext?: inputs.GetIamSystemVersionContext;
}

/**
 * A collection of values returned by getIamSystem.
 */
export interface GetIamSystemResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamSystemAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly endPointPrivileges?: outputs.GetIamSystemEndPointPrivilege[];
    readonly endPointRoles?: outputs.GetIamSystemEndPointRole[];
    readonly id: string;
    readonly idp?: outputs.GetIamSystemIdp;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamSystemParent;
    readonly permissionResources?: outputs.GetIamSystemPermissionResource[];
    readonly privilegeSets?: outputs.GetIamSystemPrivilegeSet[];
    readonly privileges?: outputs.GetIamSystemPrivilege[];
    readonly results: outputs.GetIamSystemResult[];
    readonly roles?: outputs.GetIamSystemRole[];
    readonly serviceProvider?: outputs.GetIamSystemServiceProvider;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetIamSystemTag[];
    readonly versionContext?: outputs.GetIamSystemVersionContext;
}
export function getIamSystemOutput(args?: GetIamSystemOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamSystemResult> {
    return pulumi.output(args).apply((a: any) => getIamSystem(a, opts))
}

/**
 * A collection of arguments for invoking getIamSystem.
 */
export interface GetIamSystemOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamSystemAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    endPointPrivileges?: pulumi.Input<pulumi.Input<inputs.GetIamSystemEndPointPrivilegeArgs>[]>;
    endPointRoles?: pulumi.Input<pulumi.Input<inputs.GetIamSystemEndPointRoleArgs>[]>;
    id?: pulumi.Input<string>;
    idp?: pulumi.Input<inputs.GetIamSystemIdpArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamSystemParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamSystemPermissionResourceArgs>[]>;
    privilegeSets?: pulumi.Input<pulumi.Input<inputs.GetIamSystemPrivilegeSetArgs>[]>;
    privileges?: pulumi.Input<pulumi.Input<inputs.GetIamSystemPrivilegeArgs>[]>;
    roles?: pulumi.Input<pulumi.Input<inputs.GetIamSystemRoleArgs>[]>;
    serviceProvider?: pulumi.Input<inputs.GetIamSystemServiceProviderArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamSystemTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetIamSystemVersionContextArgs>;
}
