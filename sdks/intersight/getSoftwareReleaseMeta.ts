// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSoftwareReleaseMeta(args?: GetSoftwareReleaseMetaArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareReleaseMetaResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getSoftwareReleaseMeta:getSoftwareReleaseMeta", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "image": args.image,
        "imageType": args.imageType,
        "latestFileName": args.latestFileName,
        "latestVersion": args.latestVersion,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "softwareTypeId": args.softwareTypeId,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSoftwareReleaseMeta.
 */
export interface GetSoftwareReleaseMetaArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetSoftwareReleaseMetaAncestor[];
    catalog?: inputs.GetSoftwareReleaseMetaCatalog;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    image?: inputs.GetSoftwareReleaseMetaImage;
    imageType?: string;
    latestFileName?: string;
    latestVersion?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetSoftwareReleaseMetaParent;
    permissionResources?: inputs.GetSoftwareReleaseMetaPermissionResource[];
    sharedScope?: string;
    softwareTypeId?: string;
    tags?: inputs.GetSoftwareReleaseMetaTag[];
    versionContext?: inputs.GetSoftwareReleaseMetaVersionContext;
}

/**
 * A collection of values returned by getSoftwareReleaseMeta.
 */
export interface GetSoftwareReleaseMetaResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetSoftwareReleaseMetaAncestor[];
    readonly catalog?: outputs.GetSoftwareReleaseMetaCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly image?: outputs.GetSoftwareReleaseMetaImage;
    readonly imageType?: string;
    readonly latestFileName?: string;
    readonly latestVersion?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetSoftwareReleaseMetaParent;
    readonly permissionResources?: outputs.GetSoftwareReleaseMetaPermissionResource[];
    readonly results: outputs.GetSoftwareReleaseMetaResult[];
    readonly sharedScope?: string;
    readonly softwareTypeId?: string;
    readonly tags?: outputs.GetSoftwareReleaseMetaTag[];
    readonly versionContext?: outputs.GetSoftwareReleaseMetaVersionContext;
}
export function getSoftwareReleaseMetaOutput(args?: GetSoftwareReleaseMetaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwareReleaseMetaResult> {
    return pulumi.output(args).apply((a: any) => getSoftwareReleaseMeta(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwareReleaseMeta.
 */
export interface GetSoftwareReleaseMetaOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetSoftwareReleaseMetaAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetSoftwareReleaseMetaCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    image?: pulumi.Input<inputs.GetSoftwareReleaseMetaImageArgs>;
    imageType?: pulumi.Input<string>;
    latestFileName?: pulumi.Input<string>;
    latestVersion?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetSoftwareReleaseMetaParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetSoftwareReleaseMetaPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    softwareTypeId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSoftwareReleaseMetaTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetSoftwareReleaseMetaVersionContextArgs>;
}
