// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricSwitchClusterProfile(args?: GetFabricSwitchClusterProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricSwitchClusterProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricSwitchClusterProfile:getFabricSwitchClusterProfile", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clusterAssignments": args.clusterAssignments,
        "configContext": args.configContext,
        "createTime": args.createTime,
        "deployStatus": args.deployStatus,
        "deployedSwitches": args.deployedSwitches,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "srcTemplate": args.srcTemplate,
        "switchProfiles": args.switchProfiles,
        "switchProfilesCount": args.switchProfilesCount,
        "tags": args.tags,
        "type": args.type,
        "userLabel": args.userLabel,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricSwitchClusterProfile.
 */
export interface GetFabricSwitchClusterProfileArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetFabricSwitchClusterProfileAncestor[];
    classId?: string;
    clusterAssignments?: inputs.GetFabricSwitchClusterProfileClusterAssignment[];
    configContext?: inputs.GetFabricSwitchClusterProfileConfigContext;
    createTime?: string;
    deployStatus?: string;
    deployedSwitches?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetFabricSwitchClusterProfileOrganization;
    owners?: string[];
    parent?: inputs.GetFabricSwitchClusterProfileParent;
    permissionResources?: inputs.GetFabricSwitchClusterProfilePermissionResource[];
    sharedScope?: string;
    srcTemplate?: inputs.GetFabricSwitchClusterProfileSrcTemplate;
    switchProfiles?: inputs.GetFabricSwitchClusterProfileSwitchProfile[];
    switchProfilesCount?: number;
    tags?: inputs.GetFabricSwitchClusterProfileTag[];
    type?: string;
    userLabel?: string;
    versionContext?: inputs.GetFabricSwitchClusterProfileVersionContext;
}

/**
 * A collection of values returned by getFabricSwitchClusterProfile.
 */
export interface GetFabricSwitchClusterProfileResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFabricSwitchClusterProfileAncestor[];
    readonly classId?: string;
    readonly clusterAssignments?: outputs.GetFabricSwitchClusterProfileClusterAssignment[];
    readonly configContext?: outputs.GetFabricSwitchClusterProfileConfigContext;
    readonly createTime?: string;
    readonly deployStatus?: string;
    readonly deployedSwitches?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetFabricSwitchClusterProfileOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricSwitchClusterProfileParent;
    readonly permissionResources?: outputs.GetFabricSwitchClusterProfilePermissionResource[];
    readonly results: outputs.GetFabricSwitchClusterProfileResult[];
    readonly sharedScope?: string;
    readonly srcTemplate?: outputs.GetFabricSwitchClusterProfileSrcTemplate;
    readonly switchProfiles?: outputs.GetFabricSwitchClusterProfileSwitchProfile[];
    readonly switchProfilesCount?: number;
    readonly tags?: outputs.GetFabricSwitchClusterProfileTag[];
    readonly type?: string;
    readonly userLabel?: string;
    readonly versionContext?: outputs.GetFabricSwitchClusterProfileVersionContext;
}
export function getFabricSwitchClusterProfileOutput(args?: GetFabricSwitchClusterProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricSwitchClusterProfileResult> {
    return pulumi.output(args).apply((a: any) => getFabricSwitchClusterProfile(a, opts))
}

/**
 * A collection of arguments for invoking getFabricSwitchClusterProfile.
 */
export interface GetFabricSwitchClusterProfileOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchClusterProfileAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clusterAssignments?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchClusterProfileClusterAssignmentArgs>[]>;
    configContext?: pulumi.Input<inputs.GetFabricSwitchClusterProfileConfigContextArgs>;
    createTime?: pulumi.Input<string>;
    deployStatus?: pulumi.Input<string>;
    deployedSwitches?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetFabricSwitchClusterProfileOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricSwitchClusterProfileParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchClusterProfilePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    srcTemplate?: pulumi.Input<inputs.GetFabricSwitchClusterProfileSrcTemplateArgs>;
    switchProfiles?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchClusterProfileSwitchProfileArgs>[]>;
    switchProfilesCount?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricSwitchClusterProfileTagArgs>[]>;
    type?: pulumi.Input<string>;
    userLabel?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetFabricSwitchClusterProfileVersionContextArgs>;
}
