// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexInitiatorGroup(args?: GetHyperflexInitiatorGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexInitiatorGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexInitiatorGroup:getHyperflexInitiatorGroup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "initiatorCount": args.initiatorCount,
        "initiators": args.initiators,
        "inventorySource": args.inventorySource,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "storageUtilization": args.storageUtilization,
        "tags": args.tags,
        "targetUuids": args.targetUuids,
        "targets": args.targets,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexInitiatorGroup.
 */
export interface GetHyperflexInitiatorGroupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexInitiatorGroupAncestor[];
    classId?: string;
    cluster?: inputs.GetHyperflexInitiatorGroupCluster;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    initiatorCount?: number;
    initiators?: inputs.GetHyperflexInitiatorGroupInitiator[];
    inventorySource?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nrVersion?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexInitiatorGroupParent;
    permissionResources?: inputs.GetHyperflexInitiatorGroupPermissionResource[];
    sharedScope?: string;
    storageUtilization?: inputs.GetHyperflexInitiatorGroupStorageUtilization;
    tags?: inputs.GetHyperflexInitiatorGroupTag[];
    targetUuids?: string[];
    targets?: inputs.GetHyperflexInitiatorGroupTarget[];
    uuid?: string;
    versionContext?: inputs.GetHyperflexInitiatorGroupVersionContext;
}

/**
 * A collection of values returned by getHyperflexInitiatorGroup.
 */
export interface GetHyperflexInitiatorGroupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexInitiatorGroupAncestor[];
    readonly classId?: string;
    readonly cluster?: outputs.GetHyperflexInitiatorGroupCluster;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly initiatorCount?: number;
    readonly initiators?: outputs.GetHyperflexInitiatorGroupInitiator[];
    readonly inventorySource?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrVersion?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexInitiatorGroupParent;
    readonly permissionResources?: outputs.GetHyperflexInitiatorGroupPermissionResource[];
    readonly results: outputs.GetHyperflexInitiatorGroupResult[];
    readonly sharedScope?: string;
    readonly storageUtilization?: outputs.GetHyperflexInitiatorGroupStorageUtilization;
    readonly tags?: outputs.GetHyperflexInitiatorGroupTag[];
    readonly targetUuids?: string[];
    readonly targets?: outputs.GetHyperflexInitiatorGroupTarget[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexInitiatorGroupVersionContext;
}
export function getHyperflexInitiatorGroupOutput(args?: GetHyperflexInitiatorGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexInitiatorGroupResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexInitiatorGroup(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexInitiatorGroup.
 */
export interface GetHyperflexInitiatorGroupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexInitiatorGroupAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexInitiatorGroupClusterArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    initiatorCount?: pulumi.Input<number>;
    initiators?: pulumi.Input<pulumi.Input<inputs.GetHyperflexInitiatorGroupInitiatorArgs>[]>;
    inventorySource?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexInitiatorGroupParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexInitiatorGroupPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    storageUtilization?: pulumi.Input<inputs.GetHyperflexInitiatorGroupStorageUtilizationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexInitiatorGroupTagArgs>[]>;
    targetUuids?: pulumi.Input<pulumi.Input<string>[]>;
    targets?: pulumi.Input<pulumi.Input<inputs.GetHyperflexInitiatorGroupTargetArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexInitiatorGroupVersionContextArgs>;
}
