// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryApicCoreFileDetails(args?: GetNiatelemetryApicCoreFileDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryApicCoreFileDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryApicCoreFileDetails:getNiatelemetryApicCoreFileDetails", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "annotation": args.annotation,
        "childAction": args.childAction,
        "classId": args.classId,
        "collectionTime": args.collectionTime,
        "createTime": args.createTime,
        "dataType": args.dataType,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "exportFileUri": args.exportFileUri,
        "exportStatus": args.exportStatus,
        "exportStatusStr": args.exportStatusStr,
        "exportTechSupFileUri": args.exportTechSupFileUri,
        "exportedToController": args.exportedToController,
        "extMngdBy": args.extMngdBy,
        "fileSize": args.fileSize,
        "hostName": args.hostName,
        "id": args.id,
        "lcOwn": args.lcOwn,
        "modTime": args.modTime,
        "modTs": args.modTs,
        "moid": args.moid,
        "nodeId": args.nodeId,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "polName": args.polName,
        "recordType": args.recordType,
        "recordVersion": args.recordVersion,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "siteName": args.siteName,
        "status": args.status,
        "tags": args.tags,
        "uid": args.uid,
        "userdom": args.userdom,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryApicCoreFileDetails.
 */
export interface GetNiatelemetryApicCoreFileDetailsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiatelemetryApicCoreFileDetailsAncestor[];
    annotation?: string;
    childAction?: string;
    classId?: string;
    collectionTime?: string;
    createTime?: string;
    dataType?: string;
    dn?: string;
    domainGroupMoid?: string;
    exportFileUri?: string;
    exportStatus?: string;
    exportStatusStr?: number;
    exportTechSupFileUri?: string;
    exportedToController?: string;
    extMngdBy?: string;
    fileSize?: number;
    hostName?: string;
    id?: string;
    lcOwn?: string;
    modTime?: string;
    modTs?: number;
    moid?: string;
    nodeId?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryApicCoreFileDetailsParent;
    permissionResources?: inputs.GetNiatelemetryApicCoreFileDetailsPermissionResource[];
    polName?: string;
    recordType?: string;
    recordVersion?: string;
    registeredDevice?: inputs.GetNiatelemetryApicCoreFileDetailsRegisteredDevice;
    sharedScope?: string;
    siteName?: string;
    status?: string;
    tags?: inputs.GetNiatelemetryApicCoreFileDetailsTag[];
    uid?: string;
    userdom?: string;
    versionContext?: inputs.GetNiatelemetryApicCoreFileDetailsVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryApicCoreFileDetails.
 */
export interface GetNiatelemetryApicCoreFileDetailsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiatelemetryApicCoreFileDetailsAncestor[];
    readonly annotation?: string;
    readonly childAction?: string;
    readonly classId?: string;
    readonly collectionTime?: string;
    readonly createTime?: string;
    readonly dataType?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly exportFileUri?: string;
    readonly exportStatus?: string;
    readonly exportStatusStr?: number;
    readonly exportTechSupFileUri?: string;
    readonly exportedToController?: string;
    readonly extMngdBy?: string;
    readonly fileSize?: number;
    readonly hostName?: string;
    readonly id: string;
    readonly lcOwn?: string;
    readonly modTime?: string;
    readonly modTs?: number;
    readonly moid?: string;
    readonly nodeId?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryApicCoreFileDetailsParent;
    readonly permissionResources?: outputs.GetNiatelemetryApicCoreFileDetailsPermissionResource[];
    readonly polName?: string;
    readonly recordType?: string;
    readonly recordVersion?: string;
    readonly registeredDevice?: outputs.GetNiatelemetryApicCoreFileDetailsRegisteredDevice;
    readonly results: outputs.GetNiatelemetryApicCoreFileDetailsResult[];
    readonly sharedScope?: string;
    readonly siteName?: string;
    readonly status?: string;
    readonly tags?: outputs.GetNiatelemetryApicCoreFileDetailsTag[];
    readonly uid?: string;
    readonly userdom?: string;
    readonly versionContext?: outputs.GetNiatelemetryApicCoreFileDetailsVersionContext;
}
export function getNiatelemetryApicCoreFileDetailsOutput(args?: GetNiatelemetryApicCoreFileDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryApicCoreFileDetailsResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryApicCoreFileDetails(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryApicCoreFileDetails.
 */
export interface GetNiatelemetryApicCoreFileDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryApicCoreFileDetailsAncestorArgs>[]>;
    annotation?: pulumi.Input<string>;
    childAction?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    collectionTime?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dataType?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    exportFileUri?: pulumi.Input<string>;
    exportStatus?: pulumi.Input<string>;
    exportStatusStr?: pulumi.Input<number>;
    exportTechSupFileUri?: pulumi.Input<string>;
    exportedToController?: pulumi.Input<string>;
    extMngdBy?: pulumi.Input<string>;
    fileSize?: pulumi.Input<number>;
    hostName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lcOwn?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    modTs?: pulumi.Input<number>;
    moid?: pulumi.Input<string>;
    nodeId?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryApicCoreFileDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryApicCoreFileDetailsPermissionResourceArgs>[]>;
    polName?: pulumi.Input<string>;
    recordType?: pulumi.Input<string>;
    recordVersion?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetryApicCoreFileDetailsRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    siteName?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryApicCoreFileDetailsTagArgs>[]>;
    uid?: pulumi.Input<string>;
    userdom?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryApicCoreFileDetailsVersionContextArgs>;
}
