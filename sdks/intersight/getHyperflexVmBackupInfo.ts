// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexVmBackupInfo(args?: GetHyperflexVmBackupInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexVmBackupInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexVmBackupInfo:getHyperflexVmBackupInfo", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "backupStatus": args.backupStatus,
        "classId": args.classId,
        "clusterEntityReference": args.clusterEntityReference,
        "clusterIdProtectionInfoMaps": args.clusterIdProtectionInfoMaps,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "error": args.error,
        "id": args.id,
        "localSnapshotRetentionCount": args.localSnapshotRetentionCount,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "powerOn": args.powerOn,
        "protectionStatus": args.protectionStatus,
        "schedules": args.schedules,
        "sharedScope": args.sharedScope,
        "snapshotRetentionCount": args.snapshotRetentionCount,
        "srcBackupCluster": args.srcBackupCluster,
        "srcCluster": args.srcCluster,
        "srcClusterName": args.srcClusterName,
        "tags": args.tags,
        "tgtCluster": args.tgtCluster,
        "tgtClusterName": args.tgtClusterName,
        "versionContext": args.versionContext,
        "vmEntityReference": args.vmEntityReference,
        "vmInfo": args.vmInfo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexVmBackupInfo.
 */
export interface GetHyperflexVmBackupInfoArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexVmBackupInfoAncestor[];
    backupStatus?: string;
    classId?: string;
    clusterEntityReference?: inputs.GetHyperflexVmBackupInfoClusterEntityReference;
    clusterIdProtectionInfoMaps?: inputs.GetHyperflexVmBackupInfoClusterIdProtectionInfoMap[];
    createTime?: string;
    domainGroupMoid?: string;
    error?: inputs.GetHyperflexVmBackupInfoError;
    id?: string;
    localSnapshotRetentionCount?: number;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexVmBackupInfoParent;
    permissionResources?: inputs.GetHyperflexVmBackupInfoPermissionResource[];
    powerOn?: boolean;
    protectionStatus?: string;
    schedules?: inputs.GetHyperflexVmBackupInfoSchedule[];
    sharedScope?: string;
    snapshotRetentionCount?: number;
    srcBackupCluster?: inputs.GetHyperflexVmBackupInfoSrcBackupCluster;
    srcCluster?: inputs.GetHyperflexVmBackupInfoSrcCluster;
    srcClusterName?: string;
    tags?: inputs.GetHyperflexVmBackupInfoTag[];
    tgtCluster?: inputs.GetHyperflexVmBackupInfoTgtCluster;
    tgtClusterName?: string;
    versionContext?: inputs.GetHyperflexVmBackupInfoVersionContext;
    vmEntityReference?: inputs.GetHyperflexVmBackupInfoVmEntityReference;
    vmInfo?: inputs.GetHyperflexVmBackupInfoVmInfo;
}

/**
 * A collection of values returned by getHyperflexVmBackupInfo.
 */
export interface GetHyperflexVmBackupInfoResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexVmBackupInfoAncestor[];
    readonly backupStatus?: string;
    readonly classId?: string;
    readonly clusterEntityReference?: outputs.GetHyperflexVmBackupInfoClusterEntityReference;
    readonly clusterIdProtectionInfoMaps?: outputs.GetHyperflexVmBackupInfoClusterIdProtectionInfoMap[];
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly error?: outputs.GetHyperflexVmBackupInfoError;
    readonly id: string;
    readonly localSnapshotRetentionCount?: number;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexVmBackupInfoParent;
    readonly permissionResources?: outputs.GetHyperflexVmBackupInfoPermissionResource[];
    readonly powerOn?: boolean;
    readonly protectionStatus?: string;
    readonly results: outputs.GetHyperflexVmBackupInfoResult[];
    readonly schedules?: outputs.GetHyperflexVmBackupInfoSchedule[];
    readonly sharedScope?: string;
    readonly snapshotRetentionCount?: number;
    readonly srcBackupCluster?: outputs.GetHyperflexVmBackupInfoSrcBackupCluster;
    readonly srcCluster?: outputs.GetHyperflexVmBackupInfoSrcCluster;
    readonly srcClusterName?: string;
    readonly tags?: outputs.GetHyperflexVmBackupInfoTag[];
    readonly tgtCluster?: outputs.GetHyperflexVmBackupInfoTgtCluster;
    readonly tgtClusterName?: string;
    readonly versionContext?: outputs.GetHyperflexVmBackupInfoVersionContext;
    readonly vmEntityReference?: outputs.GetHyperflexVmBackupInfoVmEntityReference;
    readonly vmInfo?: outputs.GetHyperflexVmBackupInfoVmInfo;
}
export function getHyperflexVmBackupInfoOutput(args?: GetHyperflexVmBackupInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexVmBackupInfoResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexVmBackupInfo(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexVmBackupInfo.
 */
export interface GetHyperflexVmBackupInfoOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexVmBackupInfoAncestorArgs>[]>;
    backupStatus?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    clusterEntityReference?: pulumi.Input<inputs.GetHyperflexVmBackupInfoClusterEntityReferenceArgs>;
    clusterIdProtectionInfoMaps?: pulumi.Input<pulumi.Input<inputs.GetHyperflexVmBackupInfoClusterIdProtectionInfoMapArgs>[]>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    error?: pulumi.Input<inputs.GetHyperflexVmBackupInfoErrorArgs>;
    id?: pulumi.Input<string>;
    localSnapshotRetentionCount?: pulumi.Input<number>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexVmBackupInfoParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexVmBackupInfoPermissionResourceArgs>[]>;
    powerOn?: pulumi.Input<boolean>;
    protectionStatus?: pulumi.Input<string>;
    schedules?: pulumi.Input<pulumi.Input<inputs.GetHyperflexVmBackupInfoScheduleArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    snapshotRetentionCount?: pulumi.Input<number>;
    srcBackupCluster?: pulumi.Input<inputs.GetHyperflexVmBackupInfoSrcBackupClusterArgs>;
    srcCluster?: pulumi.Input<inputs.GetHyperflexVmBackupInfoSrcClusterArgs>;
    srcClusterName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexVmBackupInfoTagArgs>[]>;
    tgtCluster?: pulumi.Input<inputs.GetHyperflexVmBackupInfoTgtClusterArgs>;
    tgtClusterName?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexVmBackupInfoVersionContextArgs>;
    vmEntityReference?: pulumi.Input<inputs.GetHyperflexVmBackupInfoVmEntityReferenceArgs>;
    vmInfo?: pulumi.Input<inputs.GetHyperflexVmBackupInfoVmInfoArgs>;
}
