// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServicenowChangeRequest(args?: GetServicenowChangeRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetServicenowChangeRequestResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getServicenowChangeRequest:getServicenowChangeRequest", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "approval": args.approval,
        "assignedTo": args.assignedTo,
        "assignedToDisplayValue": args.assignedToDisplayValue,
        "changeModel": args.changeModel,
        "changeModelDisplayValue": args.changeModelDisplayValue,
        "changeRequestNumber": args.changeRequestNumber,
        "classId": args.classId,
        "comments": args.comments,
        "createTime": args.createTime,
        "createdBy": args.createdBy,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "dueDate": args.dueDate,
        "endDate": args.endDate,
        "id": args.id,
        "impact": args.impact,
        "impactDisplayValue": args.impactDisplayValue,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "priority": args.priority,
        "priorityDisplayValue": args.priorityDisplayValue,
        "registeredDevice": args.registeredDevice,
        "risk": args.risk,
        "sharedScope": args.sharedScope,
        "shortDescription": args.shortDescription,
        "startDate": args.startDate,
        "sysId": args.sysId,
        "tags": args.tags,
        "type": args.type,
        "updatedBy": args.updatedBy,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServicenowChangeRequest.
 */
export interface GetServicenowChangeRequestArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetServicenowChangeRequestAncestor[];
    approval?: string;
    assignedTo?: string;
    assignedToDisplayValue?: string;
    changeModel?: string;
    changeModelDisplayValue?: string;
    changeRequestNumber?: string;
    classId?: string;
    comments?: string;
    createTime?: string;
    createdBy?: string;
    description?: string;
    domainGroupMoid?: string;
    dueDate?: string;
    endDate?: string;
    id?: string;
    impact?: string;
    impactDisplayValue?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetServicenowChangeRequestParent;
    permissionResources?: inputs.GetServicenowChangeRequestPermissionResource[];
    priority?: string;
    priorityDisplayValue?: string;
    registeredDevice?: inputs.GetServicenowChangeRequestRegisteredDevice;
    risk?: string;
    sharedScope?: string;
    shortDescription?: string;
    startDate?: string;
    sysId?: string;
    tags?: inputs.GetServicenowChangeRequestTag[];
    type?: string;
    updatedBy?: string;
    versionContext?: inputs.GetServicenowChangeRequestVersionContext;
}

/**
 * A collection of values returned by getServicenowChangeRequest.
 */
export interface GetServicenowChangeRequestResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetServicenowChangeRequestAncestor[];
    readonly approval?: string;
    readonly assignedTo?: string;
    readonly assignedToDisplayValue?: string;
    readonly changeModel?: string;
    readonly changeModelDisplayValue?: string;
    readonly changeRequestNumber?: string;
    readonly classId?: string;
    readonly comments?: string;
    readonly createTime?: string;
    readonly createdBy?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly dueDate?: string;
    readonly endDate?: string;
    readonly id: string;
    readonly impact?: string;
    readonly impactDisplayValue?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetServicenowChangeRequestParent;
    readonly permissionResources?: outputs.GetServicenowChangeRequestPermissionResource[];
    readonly priority?: string;
    readonly priorityDisplayValue?: string;
    readonly registeredDevice?: outputs.GetServicenowChangeRequestRegisteredDevice;
    readonly results: outputs.GetServicenowChangeRequestResult[];
    readonly risk?: string;
    readonly sharedScope?: string;
    readonly shortDescription?: string;
    readonly startDate?: string;
    readonly sysId?: string;
    readonly tags?: outputs.GetServicenowChangeRequestTag[];
    readonly type?: string;
    readonly updatedBy?: string;
    readonly versionContext?: outputs.GetServicenowChangeRequestVersionContext;
}
export function getServicenowChangeRequestOutput(args?: GetServicenowChangeRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServicenowChangeRequestResult> {
    return pulumi.output(args).apply((a: any) => getServicenowChangeRequest(a, opts))
}

/**
 * A collection of arguments for invoking getServicenowChangeRequest.
 */
export interface GetServicenowChangeRequestOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetServicenowChangeRequestAncestorArgs>[]>;
    approval?: pulumi.Input<string>;
    assignedTo?: pulumi.Input<string>;
    assignedToDisplayValue?: pulumi.Input<string>;
    changeModel?: pulumi.Input<string>;
    changeModelDisplayValue?: pulumi.Input<string>;
    changeRequestNumber?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    dueDate?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    impact?: pulumi.Input<string>;
    impactDisplayValue?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetServicenowChangeRequestParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetServicenowChangeRequestPermissionResourceArgs>[]>;
    priority?: pulumi.Input<string>;
    priorityDisplayValue?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetServicenowChangeRequestRegisteredDeviceArgs>;
    risk?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    shortDescription?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    sysId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetServicenowChangeRequestTagArgs>[]>;
    type?: pulumi.Input<string>;
    updatedBy?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetServicenowChangeRequestVersionContextArgs>;
}
