// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesAciCniProfile(args?: GetKubernetesAciCniProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesAciCniProfileResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKubernetesAciCniProfile:getKubernetesAciCniProfile", {
        "aaepName": args.aaepName,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clusterAciAllocations": args.clusterAciAllocations,
        "clusterProfiles": args.clusterProfiles,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "extSvcDynSubnetStart": args.extSvcDynSubnetStart,
        "extSvcStaticSubnetStart": args.extSvcStaticSubnetStart,
        "id": args.id,
        "infraVlanId": args.infraVlanId,
        "l3OutNetworkName": args.l3OutNetworkName,
        "l3OutPolicyName": args.l3OutPolicyName,
        "l3OutTenant": args.l3OutTenant,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nestedVmmDomain": args.nestedVmmDomain,
        "nodeSvcSubnetStart": args.nodeSvcSubnetStart,
        "nodeVlanRangeEnd": args.nodeVlanRangeEnd,
        "nodeVlanRangeStart": args.nodeVlanRangeStart,
        "numberOfKubernetesClusters": args.numberOfKubernetesClusters,
        "objectType": args.objectType,
        "opflexMulticastAddressRange": args.opflexMulticastAddressRange,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "podSubnetStart": args.podSubnetStart,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "srcTemplate": args.srcTemplate,
        "svcSubnetStart": args.svcSubnetStart,
        "tags": args.tags,
        "type": args.type,
        "versionContext": args.versionContext,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesAciCniProfile.
 */
export interface GetKubernetesAciCniProfileArgs {
    aaepName?: string;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetKubernetesAciCniProfileAncestor[];
    classId?: string;
    clusterAciAllocations?: inputs.GetKubernetesAciCniProfileClusterAciAllocation[];
    clusterProfiles?: inputs.GetKubernetesAciCniProfileClusterProfile[];
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    extSvcDynSubnetStart?: string;
    extSvcStaticSubnetStart?: string;
    id?: string;
    infraVlanId?: number;
    l3OutNetworkName?: string;
    l3OutPolicyName?: string;
    l3OutTenant?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nestedVmmDomain?: string;
    nodeSvcSubnetStart?: string;
    nodeVlanRangeEnd?: number;
    nodeVlanRangeStart?: number;
    numberOfKubernetesClusters?: number;
    objectType?: string;
    opflexMulticastAddressRange?: string;
    organization?: inputs.GetKubernetesAciCniProfileOrganization;
    owners?: string[];
    parent?: inputs.GetKubernetesAciCniProfileParent;
    permissionResources?: inputs.GetKubernetesAciCniProfilePermissionResource[];
    podSubnetStart?: string;
    registeredDevice?: inputs.GetKubernetesAciCniProfileRegisteredDevice;
    sharedScope?: string;
    srcTemplate?: inputs.GetKubernetesAciCniProfileSrcTemplate;
    svcSubnetStart?: string;
    tags?: inputs.GetKubernetesAciCniProfileTag[];
    type?: string;
    versionContext?: inputs.GetKubernetesAciCniProfileVersionContext;
    vrf?: string;
}

/**
 * A collection of values returned by getKubernetesAciCniProfile.
 */
export interface GetKubernetesAciCniProfileResult {
    readonly aaepName?: string;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKubernetesAciCniProfileAncestor[];
    readonly classId?: string;
    readonly clusterAciAllocations?: outputs.GetKubernetesAciCniProfileClusterAciAllocation[];
    readonly clusterProfiles?: outputs.GetKubernetesAciCniProfileClusterProfile[];
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly extSvcDynSubnetStart?: string;
    readonly extSvcStaticSubnetStart?: string;
    readonly id: string;
    readonly infraVlanId?: number;
    readonly l3OutNetworkName?: string;
    readonly l3OutPolicyName?: string;
    readonly l3OutTenant?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nestedVmmDomain?: string;
    readonly nodeSvcSubnetStart?: string;
    readonly nodeVlanRangeEnd?: number;
    readonly nodeVlanRangeStart?: number;
    readonly numberOfKubernetesClusters?: number;
    readonly objectType?: string;
    readonly opflexMulticastAddressRange?: string;
    readonly organization?: outputs.GetKubernetesAciCniProfileOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetKubernetesAciCniProfileParent;
    readonly permissionResources?: outputs.GetKubernetesAciCniProfilePermissionResource[];
    readonly podSubnetStart?: string;
    readonly registeredDevice?: outputs.GetKubernetesAciCniProfileRegisteredDevice;
    readonly results: outputs.GetKubernetesAciCniProfileResult[];
    readonly sharedScope?: string;
    readonly srcTemplate?: outputs.GetKubernetesAciCniProfileSrcTemplate;
    readonly svcSubnetStart?: string;
    readonly tags?: outputs.GetKubernetesAciCniProfileTag[];
    readonly type?: string;
    readonly versionContext?: outputs.GetKubernetesAciCniProfileVersionContext;
    readonly vrf?: string;
}
export function getKubernetesAciCniProfileOutput(args?: GetKubernetesAciCniProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesAciCniProfileResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesAciCniProfile(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesAciCniProfile.
 */
export interface GetKubernetesAciCniProfileOutputArgs {
    aaepName?: pulumi.Input<string>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAciCniProfileAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clusterAciAllocations?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAciCniProfileClusterAciAllocationArgs>[]>;
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAciCniProfileClusterProfileArgs>[]>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    extSvcDynSubnetStart?: pulumi.Input<string>;
    extSvcStaticSubnetStart?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    infraVlanId?: pulumi.Input<number>;
    l3OutNetworkName?: pulumi.Input<string>;
    l3OutPolicyName?: pulumi.Input<string>;
    l3OutTenant?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nestedVmmDomain?: pulumi.Input<string>;
    nodeSvcSubnetStart?: pulumi.Input<string>;
    nodeVlanRangeEnd?: pulumi.Input<number>;
    nodeVlanRangeStart?: pulumi.Input<number>;
    numberOfKubernetesClusters?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    opflexMulticastAddressRange?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetKubernetesAciCniProfileOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKubernetesAciCniProfileParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAciCniProfilePermissionResourceArgs>[]>;
    podSubnetStart?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetKubernetesAciCniProfileRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    srcTemplate?: pulumi.Input<inputs.GetKubernetesAciCniProfileSrcTemplateArgs>;
    svcSubnetStart?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAciCniProfileTagArgs>[]>;
    type?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetKubernetesAciCniProfileVersionContextArgs>;
    vrf?: pulumi.Input<string>;
}
