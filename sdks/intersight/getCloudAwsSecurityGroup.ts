// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudAwsSecurityGroup(args?: GetCloudAwsSecurityGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudAwsSecurityGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudAwsSecurityGroup:getCloudAwsSecurityGroup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "awsBillingUnit": args.awsBillingUnit,
        "billingUnit": args.billingUnit,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "egressRules": args.egressRules,
        "id": args.id,
        "identity": args.identity,
        "ingressRules": args.ingressRules,
        "location": args.location,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "regionInfo": args.regionInfo,
        "registeredDevice": args.registeredDevice,
        "securityGroupTags": args.securityGroupTags,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "zoneInfo": args.zoneInfo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudAwsSecurityGroup.
 */
export interface GetCloudAwsSecurityGroupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCloudAwsSecurityGroupAncestor[];
    awsBillingUnit?: inputs.GetCloudAwsSecurityGroupAwsBillingUnit;
    billingUnit?: inputs.GetCloudAwsSecurityGroupBillingUnit;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    egressRules?: inputs.GetCloudAwsSecurityGroupEgressRule[];
    id?: string;
    identity?: string;
    ingressRules?: inputs.GetCloudAwsSecurityGroupIngressRule[];
    location?: inputs.GetCloudAwsSecurityGroupLocation;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudAwsSecurityGroupParent;
    permissionResources?: inputs.GetCloudAwsSecurityGroupPermissionResource[];
    regionInfo?: inputs.GetCloudAwsSecurityGroupRegionInfo;
    registeredDevice?: inputs.GetCloudAwsSecurityGroupRegisteredDevice;
    securityGroupTags?: inputs.GetCloudAwsSecurityGroupSecurityGroupTag[];
    sharedScope?: string;
    tags?: inputs.GetCloudAwsSecurityGroupTag[];
    uuid?: string;
    versionContext?: inputs.GetCloudAwsSecurityGroupVersionContext;
    zoneInfo?: inputs.GetCloudAwsSecurityGroupZoneInfo;
}

/**
 * A collection of values returned by getCloudAwsSecurityGroup.
 */
export interface GetCloudAwsSecurityGroupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCloudAwsSecurityGroupAncestor[];
    readonly awsBillingUnit?: outputs.GetCloudAwsSecurityGroupAwsBillingUnit;
    readonly billingUnit?: outputs.GetCloudAwsSecurityGroupBillingUnit;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly egressRules?: outputs.GetCloudAwsSecurityGroupEgressRule[];
    readonly id: string;
    readonly identity?: string;
    readonly ingressRules?: outputs.GetCloudAwsSecurityGroupIngressRule[];
    readonly location?: outputs.GetCloudAwsSecurityGroupLocation;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudAwsSecurityGroupParent;
    readonly permissionResources?: outputs.GetCloudAwsSecurityGroupPermissionResource[];
    readonly regionInfo?: outputs.GetCloudAwsSecurityGroupRegionInfo;
    readonly registeredDevice?: outputs.GetCloudAwsSecurityGroupRegisteredDevice;
    readonly results: outputs.GetCloudAwsSecurityGroupResult[];
    readonly securityGroupTags?: outputs.GetCloudAwsSecurityGroupSecurityGroupTag[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetCloudAwsSecurityGroupTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetCloudAwsSecurityGroupVersionContext;
    readonly zoneInfo?: outputs.GetCloudAwsSecurityGroupZoneInfo;
}
export function getCloudAwsSecurityGroupOutput(args?: GetCloudAwsSecurityGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudAwsSecurityGroupResult> {
    return pulumi.output(args).apply((a: any) => getCloudAwsSecurityGroup(a, opts))
}

/**
 * A collection of arguments for invoking getCloudAwsSecurityGroup.
 */
export interface GetCloudAwsSecurityGroupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsSecurityGroupAncestorArgs>[]>;
    awsBillingUnit?: pulumi.Input<inputs.GetCloudAwsSecurityGroupAwsBillingUnitArgs>;
    billingUnit?: pulumi.Input<inputs.GetCloudAwsSecurityGroupBillingUnitArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    egressRules?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsSecurityGroupEgressRuleArgs>[]>;
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    ingressRules?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsSecurityGroupIngressRuleArgs>[]>;
    location?: pulumi.Input<inputs.GetCloudAwsSecurityGroupLocationArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudAwsSecurityGroupParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsSecurityGroupPermissionResourceArgs>[]>;
    regionInfo?: pulumi.Input<inputs.GetCloudAwsSecurityGroupRegionInfoArgs>;
    registeredDevice?: pulumi.Input<inputs.GetCloudAwsSecurityGroupRegisteredDeviceArgs>;
    securityGroupTags?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsSecurityGroupSecurityGroupTagArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsSecurityGroupTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetCloudAwsSecurityGroupVersionContextArgs>;
    zoneInfo?: pulumi.Input<inputs.GetCloudAwsSecurityGroupZoneInfoArgs>;
}
