// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexHypervisorVirtualMachine(args?: GetHyperflexHypervisorVirtualMachineArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexHypervisorVirtualMachineResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexHypervisorVirtualMachine:getHyperflexHypervisorVirtualMachine", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "bootTime": args.bootTime,
        "capacity": args.capacity,
        "classId": args.classId,
        "cluster": args.cluster,
        "connectionState": args.connectionState,
        "cpuUtilization": args.cpuUtilization,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "guestInfo": args.guestInfo,
        "guestOsState": args.guestOsState,
        "host": args.host,
        "hostUuid": args.hostUuid,
        "hypervisorType": args.hypervisorType,
        "id": args.id,
        "identity": args.identity,
        "ip": args.ip,
        "ipAddresses": args.ipAddresses,
        "memoryCapacity": args.memoryCapacity,
        "memoryUtilization": args.memoryUtilization,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrProvider": args.nrProvider,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "path": args.path,
        "permissionResources": args.permissionResources,
        "platformInstanceId": args.platformInstanceId,
        "powerState": args.powerState,
        "processorCapacity": args.processorCapacity,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "state": args.state,
        "storageProvisionedInBytes": args.storageProvisionedInBytes,
        "storageUsedInBytes": args.storageUsedInBytes,
        "tags": args.tags,
        "template": args.template,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "vmCreationTime": args.vmCreationTime,
        "vmInstanceUuid": args.vmInstanceUuid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexHypervisorVirtualMachine.
 */
export interface GetHyperflexHypervisorVirtualMachineArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexHypervisorVirtualMachineAncestor[];
    bootTime?: string;
    capacity?: inputs.GetHyperflexHypervisorVirtualMachineCapacity;
    classId?: string;
    cluster?: inputs.GetHyperflexHypervisorVirtualMachineCluster;
    connectionState?: string;
    cpuUtilization?: number;
    createTime?: string;
    domainGroupMoid?: string;
    guestInfo?: inputs.GetHyperflexHypervisorVirtualMachineGuestInfo;
    guestOsState?: string;
    host?: inputs.GetHyperflexHypervisorVirtualMachineHost;
    hostUuid?: string;
    hypervisorType?: string;
    id?: string;
    identity?: string;
    ip?: inputs.GetHyperflexHypervisorVirtualMachineIp;
    ipAddresses?: string[];
    memoryCapacity?: inputs.GetHyperflexHypervisorVirtualMachineMemoryCapacity;
    memoryUtilization?: number;
    modTime?: string;
    moid?: string;
    name?: string;
    nrProvider?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexHypervisorVirtualMachineParent;
    path?: string;
    permissionResources?: inputs.GetHyperflexHypervisorVirtualMachinePermissionResource[];
    platformInstanceId?: string;
    powerState?: string;
    processorCapacity?: inputs.GetHyperflexHypervisorVirtualMachineProcessorCapacity;
    registeredDevice?: inputs.GetHyperflexHypervisorVirtualMachineRegisteredDevice;
    sharedScope?: string;
    state?: string;
    storageProvisionedInBytes?: number;
    storageUsedInBytes?: number;
    tags?: inputs.GetHyperflexHypervisorVirtualMachineTag[];
    template?: boolean;
    uuid?: string;
    versionContext?: inputs.GetHyperflexHypervisorVirtualMachineVersionContext;
    vmCreationTime?: string;
    vmInstanceUuid?: string;
}

/**
 * A collection of values returned by getHyperflexHypervisorVirtualMachine.
 */
export interface GetHyperflexHypervisorVirtualMachineResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexHypervisorVirtualMachineAncestor[];
    readonly bootTime?: string;
    readonly capacity?: outputs.GetHyperflexHypervisorVirtualMachineCapacity;
    readonly classId?: string;
    readonly cluster?: outputs.GetHyperflexHypervisorVirtualMachineCluster;
    readonly connectionState?: string;
    readonly cpuUtilization?: number;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly guestInfo?: outputs.GetHyperflexHypervisorVirtualMachineGuestInfo;
    readonly guestOsState?: string;
    readonly host?: outputs.GetHyperflexHypervisorVirtualMachineHost;
    readonly hostUuid?: string;
    readonly hypervisorType?: string;
    readonly id: string;
    readonly identity?: string;
    readonly ip?: outputs.GetHyperflexHypervisorVirtualMachineIp;
    readonly ipAddresses?: string[];
    readonly memoryCapacity?: outputs.GetHyperflexHypervisorVirtualMachineMemoryCapacity;
    readonly memoryUtilization?: number;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrProvider?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexHypervisorVirtualMachineParent;
    readonly path?: string;
    readonly permissionResources?: outputs.GetHyperflexHypervisorVirtualMachinePermissionResource[];
    readonly platformInstanceId?: string;
    readonly powerState?: string;
    readonly processorCapacity?: outputs.GetHyperflexHypervisorVirtualMachineProcessorCapacity;
    readonly registeredDevice?: outputs.GetHyperflexHypervisorVirtualMachineRegisteredDevice;
    readonly results: outputs.GetHyperflexHypervisorVirtualMachineResult[];
    readonly sharedScope?: string;
    readonly state?: string;
    readonly storageProvisionedInBytes?: number;
    readonly storageUsedInBytes?: number;
    readonly tags?: outputs.GetHyperflexHypervisorVirtualMachineTag[];
    readonly template?: boolean;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexHypervisorVirtualMachineVersionContext;
    readonly vmCreationTime?: string;
    readonly vmInstanceUuid?: string;
}
export function getHyperflexHypervisorVirtualMachineOutput(args?: GetHyperflexHypervisorVirtualMachineOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexHypervisorVirtualMachineResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexHypervisorVirtualMachine(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexHypervisorVirtualMachine.
 */
export interface GetHyperflexHypervisorVirtualMachineOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineAncestorArgs>[]>;
    bootTime?: pulumi.Input<string>;
    capacity?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineCapacityArgs>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineClusterArgs>;
    connectionState?: pulumi.Input<string>;
    cpuUtilization?: pulumi.Input<number>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    guestInfo?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineGuestInfoArgs>;
    guestOsState?: pulumi.Input<string>;
    host?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineHostArgs>;
    hostUuid?: pulumi.Input<string>;
    hypervisorType?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    ip?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineIpArgs>;
    ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    memoryCapacity?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineMemoryCapacityArgs>;
    memoryUtilization?: pulumi.Input<number>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrProvider?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineParentArgs>;
    path?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachinePermissionResourceArgs>[]>;
    platformInstanceId?: pulumi.Input<string>;
    powerState?: pulumi.Input<string>;
    processorCapacity?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineProcessorCapacityArgs>;
    registeredDevice?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    storageProvisionedInBytes?: pulumi.Input<number>;
    storageUsedInBytes?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineTagArgs>[]>;
    template?: pulumi.Input<boolean>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexHypervisorVirtualMachineVersionContextArgs>;
    vmCreationTime?: pulumi.Input<string>;
    vmInstanceUuid?: pulumi.Input<string>;
}
