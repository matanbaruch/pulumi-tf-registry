// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getChassisProfileTemplate(args?: GetChassisProfileTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetChassisProfileTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getChassisProfileTemplate:getChassisProfileTemplate", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "actionParams": args.actionParams,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "configContext": args.configContext,
        "configResult": args.configResult,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "iomProfiles": args.iomProfiles,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyBuckets": args.policyBuckets,
        "scheduledActions": args.scheduledActions,
        "sharedScope": args.sharedScope,
        "srcTemplate": args.srcTemplate,
        "tags": args.tags,
        "targetPlatform": args.targetPlatform,
        "type": args.type,
        "usage": args.usage,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getChassisProfileTemplate.
 */
export interface GetChassisProfileTemplateArgs {
    accountMoid?: string;
    action?: string;
    actionParams?: inputs.GetChassisProfileTemplateActionParam[];
    additionalProperties?: string;
    ancestors?: inputs.GetChassisProfileTemplateAncestor[];
    classId?: string;
    configContext?: inputs.GetChassisProfileTemplateConfigContext;
    configResult?: inputs.GetChassisProfileTemplateConfigResult;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    iomProfiles?: inputs.GetChassisProfileTemplateIomProfile[];
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetChassisProfileTemplateOrganization;
    owners?: string[];
    parent?: inputs.GetChassisProfileTemplateParent;
    permissionResources?: inputs.GetChassisProfileTemplatePermissionResource[];
    policyBuckets?: inputs.GetChassisProfileTemplatePolicyBucket[];
    scheduledActions?: inputs.GetChassisProfileTemplateScheduledAction[];
    sharedScope?: string;
    srcTemplate?: inputs.GetChassisProfileTemplateSrcTemplate;
    tags?: inputs.GetChassisProfileTemplateTag[];
    targetPlatform?: string;
    type?: string;
    usage?: number;
    versionContext?: inputs.GetChassisProfileTemplateVersionContext;
}

/**
 * A collection of values returned by getChassisProfileTemplate.
 */
export interface GetChassisProfileTemplateResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly actionParams?: outputs.GetChassisProfileTemplateActionParam[];
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetChassisProfileTemplateAncestor[];
    readonly classId?: string;
    readonly configContext?: outputs.GetChassisProfileTemplateConfigContext;
    readonly configResult?: outputs.GetChassisProfileTemplateConfigResult;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly iomProfiles?: outputs.GetChassisProfileTemplateIomProfile[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetChassisProfileTemplateOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetChassisProfileTemplateParent;
    readonly permissionResources?: outputs.GetChassisProfileTemplatePermissionResource[];
    readonly policyBuckets?: outputs.GetChassisProfileTemplatePolicyBucket[];
    readonly results: outputs.GetChassisProfileTemplateResult[];
    readonly scheduledActions?: outputs.GetChassisProfileTemplateScheduledAction[];
    readonly sharedScope?: string;
    readonly srcTemplate?: outputs.GetChassisProfileTemplateSrcTemplate;
    readonly tags?: outputs.GetChassisProfileTemplateTag[];
    readonly targetPlatform?: string;
    readonly type?: string;
    readonly usage?: number;
    readonly versionContext?: outputs.GetChassisProfileTemplateVersionContext;
}
export function getChassisProfileTemplateOutput(args?: GetChassisProfileTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetChassisProfileTemplateResult> {
    return pulumi.output(args).apply((a: any) => getChassisProfileTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getChassisProfileTemplate.
 */
export interface GetChassisProfileTemplateOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplateActionParamArgs>[]>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplateAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    configContext?: pulumi.Input<inputs.GetChassisProfileTemplateConfigContextArgs>;
    configResult?: pulumi.Input<inputs.GetChassisProfileTemplateConfigResultArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    iomProfiles?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplateIomProfileArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetChassisProfileTemplateOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetChassisProfileTemplateParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplatePermissionResourceArgs>[]>;
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplatePolicyBucketArgs>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplateScheduledActionArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    srcTemplate?: pulumi.Input<inputs.GetChassisProfileTemplateSrcTemplateArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetChassisProfileTemplateTagArgs>[]>;
    targetPlatform?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    usage?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetChassisProfileTemplateVersionContextArgs>;
}
