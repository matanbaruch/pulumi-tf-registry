// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VnicIscsiBootPolicy extends pulumi.CustomResource {
    /**
     * Get an existing VnicIscsiBootPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VnicIscsiBootPolicyState, opts?: pulumi.CustomResourceOptions): VnicIscsiBootPolicy {
        return new VnicIscsiBootPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/vnicIscsiBootPolicy:VnicIscsiBootPolicy';

    /**
     * Returns true if the given object is an instance of VnicIscsiBootPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VnicIscsiBootPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VnicIscsiBootPolicy.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.VnicIscsiBootPolicyAncestor[]>;
    /**
     * Auto target interface that is represented via the Initiator name or the DHCP vendor ID. The vendor ID can be up to 32
     * alphanumeric characters.
     */
    public readonly autoTargetvendorName!: pulumi.Output<string | undefined>;
    /**
     * CHAP authentication parameters for iSCSI Target.
     */
    public readonly chaps!: pulumi.Output<outputs.VnicIscsiBootPolicyChap[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * A reference to a ippoolPool resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly initiatorIpPools!: pulumi.Output<outputs.VnicIscsiBootPolicyInitiatorIpPool[]>;
    /**
     * Source Type of Initiator IP Address - Auto/Static/Pool. * `DHCP` - The IP address is assigned using DHCP, if available.
     * * `Static` - Static IPv4 address is assigned to the iSCSI boot interface based on the information entered in this area.
     * * `Pool` - An IPv4 address is assigned to the iSCSI boot interface from the management IP address pool.
     */
    public readonly initiatorIpSource!: pulumi.Output<string | undefined>;
    /**
     * Static IP address provided for iSCSI Initiator.
     */
    public readonly initiatorStaticIpV4Address!: pulumi.Output<string | undefined>;
    /**
     * IPV4 configurations such as Netmask, Gateway and DNS for iSCSI Initiator.
     */
    public readonly initiatorStaticIpV4Configs!: pulumi.Output<outputs.VnicIscsiBootPolicyInitiatorStaticIpV4Config[]>;
    /**
     * A reference to a vnicIscsiAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly iscsiAdapterPolicies!: pulumi.Output<outputs.VnicIscsiBootPolicyIscsiAdapterPolicy[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Mutual CHAP authentication parameters for iSCSI Initiator. Two-way CHAP mechanism.
     */
    public readonly mutualChaps!: pulumi.Output<outputs.VnicIscsiBootPolicyMutualChap[]>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.VnicIscsiBootPolicyOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.VnicIscsiBootPolicyParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.VnicIscsiBootPolicyPermissionResource[]>;
    /**
     * A reference to a vnicIscsiStaticTargetPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly primaryTargetPolicies!: pulumi.Output<outputs.VnicIscsiBootPolicyPrimaryTargetPolicy[]>;
    /**
     * A reference to a vnicIscsiStaticTargetPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly secondaryTargetPolicies!: pulumi.Output<outputs.VnicIscsiBootPolicySecondaryTargetPolicy[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.VnicIscsiBootPolicyTag[]>;
    /**
     * Source Type of Targets - Auto/Static. * `Static` - Type indicates that static target interface is assigned to iSCSI
     * boot. * `Auto` - Type indicates that the system selects the target interface automatically during iSCSI boot.
     */
    public readonly targetSourceType!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.VnicIscsiBootPolicyVersionContext[]>;

    /**
     * Create a VnicIscsiBootPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VnicIscsiBootPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VnicIscsiBootPolicyArgs | VnicIscsiBootPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VnicIscsiBootPolicyState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["autoTargetvendorName"] = state ? state.autoTargetvendorName : undefined;
            resourceInputs["chaps"] = state ? state.chaps : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["initiatorIpPools"] = state ? state.initiatorIpPools : undefined;
            resourceInputs["initiatorIpSource"] = state ? state.initiatorIpSource : undefined;
            resourceInputs["initiatorStaticIpV4Address"] = state ? state.initiatorStaticIpV4Address : undefined;
            resourceInputs["initiatorStaticIpV4Configs"] = state ? state.initiatorStaticIpV4Configs : undefined;
            resourceInputs["iscsiAdapterPolicies"] = state ? state.iscsiAdapterPolicies : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["mutualChaps"] = state ? state.mutualChaps : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["primaryTargetPolicies"] = state ? state.primaryTargetPolicies : undefined;
            resourceInputs["secondaryTargetPolicies"] = state ? state.secondaryTargetPolicies : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetSourceType"] = state ? state.targetSourceType : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as VnicIscsiBootPolicyArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["autoTargetvendorName"] = args ? args.autoTargetvendorName : undefined;
            resourceInputs["chaps"] = args ? args.chaps : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["initiatorIpPools"] = args ? args.initiatorIpPools : undefined;
            resourceInputs["initiatorIpSource"] = args ? args.initiatorIpSource : undefined;
            resourceInputs["initiatorStaticIpV4Address"] = args ? args.initiatorStaticIpV4Address : undefined;
            resourceInputs["initiatorStaticIpV4Configs"] = args ? args.initiatorStaticIpV4Configs : undefined;
            resourceInputs["iscsiAdapterPolicies"] = args ? args.iscsiAdapterPolicies : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["mutualChaps"] = args ? args.mutualChaps : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["primaryTargetPolicies"] = args ? args.primaryTargetPolicies : undefined;
            resourceInputs["secondaryTargetPolicies"] = args ? args.secondaryTargetPolicies : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetSourceType"] = args ? args.targetSourceType : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VnicIscsiBootPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VnicIscsiBootPolicy resources.
 */
export interface VnicIscsiBootPolicyState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyAncestor>[]>;
    /**
     * Auto target interface that is represented via the Initiator name or the DHCP vendor ID. The vendor ID can be up to 32
     * alphanumeric characters.
     */
    autoTargetvendorName?: pulumi.Input<string>;
    /**
     * CHAP authentication parameters for iSCSI Target.
     */
    chaps?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyChap>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a ippoolPool resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    initiatorIpPools?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyInitiatorIpPool>[]>;
    /**
     * Source Type of Initiator IP Address - Auto/Static/Pool. * `DHCP` - The IP address is assigned using DHCP, if available.
     * * `Static` - Static IPv4 address is assigned to the iSCSI boot interface based on the information entered in this area.
     * * `Pool` - An IPv4 address is assigned to the iSCSI boot interface from the management IP address pool.
     */
    initiatorIpSource?: pulumi.Input<string>;
    /**
     * Static IP address provided for iSCSI Initiator.
     */
    initiatorStaticIpV4Address?: pulumi.Input<string>;
    /**
     * IPV4 configurations such as Netmask, Gateway and DNS for iSCSI Initiator.
     */
    initiatorStaticIpV4Configs?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyInitiatorStaticIpV4Config>[]>;
    /**
     * A reference to a vnicIscsiAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    iscsiAdapterPolicies?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyIscsiAdapterPolicy>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Mutual CHAP authentication parameters for iSCSI Initiator. Two-way CHAP mechanism.
     */
    mutualChaps?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyMutualChap>[]>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyPermissionResource>[]>;
    /**
     * A reference to a vnicIscsiStaticTargetPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    primaryTargetPolicies?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyPrimaryTargetPolicy>[]>;
    /**
     * A reference to a vnicIscsiStaticTargetPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    secondaryTargetPolicies?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicySecondaryTargetPolicy>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyTag>[]>;
    /**
     * Source Type of Targets - Auto/Static. * `Static` - Type indicates that static target interface is assigned to iSCSI
     * boot. * `Auto` - Type indicates that the system selects the target interface automatically during iSCSI boot.
     */
    targetSourceType?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyVersionContext>[]>;
}

/**
 * The set of arguments for constructing a VnicIscsiBootPolicy resource.
 */
export interface VnicIscsiBootPolicyArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyAncestor>[]>;
    /**
     * Auto target interface that is represented via the Initiator name or the DHCP vendor ID. The vendor ID can be up to 32
     * alphanumeric characters.
     */
    autoTargetvendorName?: pulumi.Input<string>;
    /**
     * CHAP authentication parameters for iSCSI Target.
     */
    chaps?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyChap>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a ippoolPool resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    initiatorIpPools?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyInitiatorIpPool>[]>;
    /**
     * Source Type of Initiator IP Address - Auto/Static/Pool. * `DHCP` - The IP address is assigned using DHCP, if available.
     * * `Static` - Static IPv4 address is assigned to the iSCSI boot interface based on the information entered in this area.
     * * `Pool` - An IPv4 address is assigned to the iSCSI boot interface from the management IP address pool.
     */
    initiatorIpSource?: pulumi.Input<string>;
    /**
     * Static IP address provided for iSCSI Initiator.
     */
    initiatorStaticIpV4Address?: pulumi.Input<string>;
    /**
     * IPV4 configurations such as Netmask, Gateway and DNS for iSCSI Initiator.
     */
    initiatorStaticIpV4Configs?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyInitiatorStaticIpV4Config>[]>;
    /**
     * A reference to a vnicIscsiAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    iscsiAdapterPolicies?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyIscsiAdapterPolicy>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Mutual CHAP authentication parameters for iSCSI Initiator. Two-way CHAP mechanism.
     */
    mutualChaps?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyMutualChap>[]>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyPermissionResource>[]>;
    /**
     * A reference to a vnicIscsiStaticTargetPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    primaryTargetPolicies?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyPrimaryTargetPolicy>[]>;
    /**
     * A reference to a vnicIscsiStaticTargetPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    secondaryTargetPolicies?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicySecondaryTargetPolicy>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyTag>[]>;
    /**
     * Source Type of Targets - Auto/Static. * `Static` - Type indicates that static target interface is assigned to iSCSI
     * boot. * `Auto` - Type indicates that the system selects the target interface automatically during iSCSI boot.
     */
    targetSourceType?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicIscsiBootPolicyVersionContext>[]>;
}
