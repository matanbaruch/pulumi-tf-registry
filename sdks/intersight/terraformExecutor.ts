// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class TerraformExecutor extends pulumi.CustomResource {
    /**
     * Get an existing TerraformExecutor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TerraformExecutorState, opts?: pulumi.CustomResourceOptions): TerraformExecutor {
        return new TerraformExecutor(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/terraformExecutor:TerraformExecutor';

    /**
     * Returns true if the given object is an instance of TerraformExecutor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TerraformExecutor {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TerraformExecutor.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly accounts!: pulumi.Output<outputs.TerraformExecutorAccount[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.TerraformExecutorAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    public readonly cloudResources!: pulumi.Output<outputs.TerraformExecutorCloudResource[]>;
    /**
     * Command to be executed during update operation.
     */
    public readonly command!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly operation!: pulumi.Output<string | undefined>;
    public readonly output!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.TerraformExecutorParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.TerraformExecutorPermissionResource[]>;
    public readonly platformType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly registeredDevices!: pulumi.Output<outputs.TerraformExecutorRegisteredDevice[]>;
    public readonly runStates!: pulumi.Output<outputs.TerraformExecutorRunState[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly sourceFolderName!: pulumi.Output<string | undefined>;
    /**
     * Relative folder Path where 'sourceFolderName' is located.
     */
    public readonly sourceFolderPath!: pulumi.Output<string | undefined>;
    /**
     * Flag indicates whether workflow is internal/external.
     */
    public readonly sourceLocation!: pulumi.Output<string | undefined>;
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly stderr!: pulumi.Output<string | undefined>;
    public readonly stdout!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.TerraformExecutorTag[]>;
    /**
     * TaskId of a pontem workflow is same as the MO.
     */
    public readonly taskId!: pulumi.Output<string | undefined>;
    public readonly variables!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.TerraformExecutorVersionContext[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    public readonly waitForCompletion!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly workflowInfos!: pulumi.Output<outputs.TerraformExecutorWorkflowInfo[]>;

    /**
     * Create a TerraformExecutor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TerraformExecutorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TerraformExecutorArgs | TerraformExecutorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TerraformExecutorState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["accounts"] = state ? state.accounts : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["cloudResources"] = state ? state.cloudResources : undefined;
            resourceInputs["command"] = state ? state.command : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["operation"] = state ? state.operation : undefined;
            resourceInputs["output"] = state ? state.output : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["platformType"] = state ? state.platformType : undefined;
            resourceInputs["registeredDevices"] = state ? state.registeredDevices : undefined;
            resourceInputs["runStates"] = state ? state.runStates : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["sourceFolderName"] = state ? state.sourceFolderName : undefined;
            resourceInputs["sourceFolderPath"] = state ? state.sourceFolderPath : undefined;
            resourceInputs["sourceLocation"] = state ? state.sourceLocation : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["stderr"] = state ? state.stderr : undefined;
            resourceInputs["stdout"] = state ? state.stdout : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
            resourceInputs["variables"] = state ? state.variables : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = state ? state.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = state ? state.workflowInfos : undefined;
        } else {
            const args = argsOrState as TerraformExecutorArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["accounts"] = args ? args.accounts : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["cloudResources"] = args ? args.cloudResources : undefined;
            resourceInputs["command"] = args ? args.command : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["operation"] = args ? args.operation : undefined;
            resourceInputs["output"] = args ? args.output : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["platformType"] = args ? args.platformType : undefined;
            resourceInputs["registeredDevices"] = args ? args.registeredDevices : undefined;
            resourceInputs["runStates"] = args ? args.runStates : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["sourceFolderName"] = args ? args.sourceFolderName : undefined;
            resourceInputs["sourceFolderPath"] = args ? args.sourceFolderPath : undefined;
            resourceInputs["sourceLocation"] = args ? args.sourceLocation : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["stderr"] = args ? args.stderr : undefined;
            resourceInputs["stdout"] = args ? args.stdout : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["taskId"] = args ? args.taskId : undefined;
            resourceInputs["variables"] = args ? args.variables : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = args ? args.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = args ? args.workflowInfos : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TerraformExecutor.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TerraformExecutor resources.
 */
export interface TerraformExecutorState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    cloudResources?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorCloudResource>[]>;
    /**
     * Command to be executed during update operation.
     */
    command?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    operation?: pulumi.Input<string>;
    output?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorPermissionResource>[]>;
    platformType?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    registeredDevices?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorRegisteredDevice>[]>;
    runStates?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorRunState>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    sourceFolderName?: pulumi.Input<string>;
    /**
     * Relative folder Path where 'sourceFolderName' is located.
     */
    sourceFolderPath?: pulumi.Input<string>;
    /**
     * Flag indicates whether workflow is internal/external.
     */
    sourceLocation?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    stderr?: pulumi.Input<string>;
    stdout?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorTag>[]>;
    /**
     * TaskId of a pontem workflow is same as the MO.
     */
    taskId?: pulumi.Input<string>;
    variables?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorWorkflowInfo>[]>;
}

/**
 * The set of arguments for constructing a TerraformExecutor resource.
 */
export interface TerraformExecutorArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    cloudResources?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorCloudResource>[]>;
    /**
     * Command to be executed during update operation.
     */
    command?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    operation?: pulumi.Input<string>;
    output?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorPermissionResource>[]>;
    platformType?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    registeredDevices?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorRegisteredDevice>[]>;
    runStates?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorRunState>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    sourceFolderName?: pulumi.Input<string>;
    /**
     * Relative folder Path where 'sourceFolderName' is located.
     */
    sourceFolderPath?: pulumi.Input<string>;
    /**
     * Flag indicates whether workflow is internal/external.
     */
    sourceLocation?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    stderr?: pulumi.Input<string>;
    stdout?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorTag>[]>;
    /**
     * TaskId of a pontem workflow is same as the MO.
     */
    taskId?: pulumi.Input<string>;
    variables?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.TerraformExecutorWorkflowInfo>[]>;
}
