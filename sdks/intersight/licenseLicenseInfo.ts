// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LicenseLicenseInfo extends pulumi.CustomResource {
    /**
     * Get an existing LicenseLicenseInfo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LicenseLicenseInfoState, opts?: pulumi.CustomResourceOptions): LicenseLicenseInfo {
        return new LicenseLicenseInfo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/licenseLicenseInfo:LicenseLicenseInfo';

    /**
     * Returns true if the given object is an instance of LicenseLicenseInfo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LicenseLicenseInfo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LicenseLicenseInfo.__pulumiType;
    }

    /**
     * A reference to a licenseAccountLicenseData resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly accountLicenseDatas!: pulumi.Output<outputs.LicenseLicenseInfoAccountLicenseData[]>;
    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * The license administrative state. Set this property to 'true' to activate the license entitlements.
     */
    public readonly activeAdmin!: pulumi.Output<boolean>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.LicenseLicenseInfoAncestor[]>;
    /**
     * The total balance we have for licenses.
     */
    public readonly balance!: pulumi.Output<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The number of days left for licenseState to stay in TrialPeriod or OutOfCompliance state.
     */
    public readonly daysLeft!: pulumi.Output<number>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The date and time when the trial period expires. The value of the 'endTime' property is set when the account enters the
     * TrialPeriod or OutOfCompliance state.
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * The entitlement mode reported by Cisco Smart Software Manager.
     */
    public readonly enforceMode!: pulumi.Output<string>;
    /**
     * The detailed error message when there is any error related to this licensing entitlement.
     */
    public readonly errorDesc!: pulumi.Output<string>;
    /**
     * The default Trial or Grace period customer is entitled to.
     */
    public readonly evaluationPeriod!: pulumi.Output<number | undefined>;
    /**
     * The date and time when the next expiration time of license subscription.
     */
    public readonly expireTime!: pulumi.Output<string>;
    /**
     * The number of days the trial Trial or Grace period is extended. The trial or grace period can be extended once.
     */
    public readonly extraEvaluation!: pulumi.Output<number | undefined>;
    /**
     * The total number of license consumed in the Intersight account.
     */
    public readonly licenseCount!: pulumi.Output<number>;
    /**
     * The total number of license purchased from cisco.
     */
    public readonly licenseCountPurchased!: pulumi.Output<number>;
    /**
     * The license state defined by Intersight. The value may be one of NotLicensed, TrialPeriod, OutOfCompliance, Compliance,
     * GraceExpired, or TrialExpired. * `NotLicensed` - The license token is neither activated nor registered. * `GraceExpired`
     * - The license grace period has expired. * `TrialPeriod` - The 90 days of trial period. * `OutOfCompliance` - The license
     * is out of compliance. * `Compliance` - The license is in compliance. * `TrialExpired` - The trial period of 90 days has
     * expired.
     */
    public readonly licenseState!: pulumi.Output<string>;
    /**
     * The name of the Intersight license entitlement. For example, this property may be set to 'Essential'. * `Base` - Base as
     * a License type. It is default license type. * `Essential` - Essential as a License type. * `Standard` - Standard as a
     * License type. * `Advantage` - Advantage as a License type. * `Premier` - Premier as a License type. * `IWO-Essential` -
     * IWO-Essential as a License type. * `IWO-Advantage` - IWO-Advantage as a License type. * `IWO-Premier` - IWO-Premier as a
     * License type. * `IKS-Advantage` - IKS-Advantage as a License type. * `INC-Premier-1GFixed` - Premier 1G Fixed license
     * tier for Intersight Nexus Cloud. * `INC-Premier-10GFixed` - Premier 10G Fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-100GFixed` - Premier 100G Fixed license tier for Intersight Nexus Cloud. * `INC-Premier-Mod4Slot` - Premier
     * Modular 4 slot license tier for Intersight Nexus Cloud. * `INC-Premier-Mod8Slot` - Premier Modular 8 slot license tier
     * for Intersight Nexus Cloud. * `INC-Premier-D2OpsFixed` - Premier D2Ops fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-D2OpsMod` - Premier D2Ops modular license tier for Intersight Nexus Cloud. *
     * `INC-Premier-CentralizedMod8Slot` - Premier modular license tier of switch type CentralizedMod8Slot for Intersight Nexus
     * Cloud. * `INC-Premier-DistributedMod8Slot` - Premier modular license tier of switch type DistributedMod8Slot for
     * Intersight Nexus Cloud. * `IntersightTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial
     * mode Intersight tiers. * `IWOTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode
     * IKS tiers. * `IKSTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode IWO tiers. *
     * `INCTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode Nexus tiers.
     */
    public readonly licenseType!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The total number of substituted licenses added or removed.
     */
    public readonly netSubstitution!: pulumi.Output<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.LicenseLicenseInfoParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.LicenseLicenseInfoPermissionResource[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * The date and time when the licenseState entered the TrialPeriod or OutOfCompliance state.
     */
    public readonly startTime!: pulumi.Output<string>;
    /**
     * The id of license subscription.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    public readonly substitutedLicenses!: pulumi.Output<outputs.LicenseLicenseInfoSubstitutedLicense[]>;
    public readonly tags!: pulumi.Output<outputs.LicenseLicenseInfoTag[]>;
    /**
     * The administrative state of the trial license. When the LicenseState is set to 'NotLicensed', 'trialAdmin' can be set to
     * true to start the trial period, i.e. licenseState is set to be TrialPeriod.
     */
    public readonly trialAdmin!: pulumi.Output<boolean>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.LicenseLicenseInfoVersionContext[]>;

    /**
     * Create a LicenseLicenseInfo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LicenseLicenseInfoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LicenseLicenseInfoArgs | LicenseLicenseInfoState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LicenseLicenseInfoState | undefined;
            resourceInputs["accountLicenseDatas"] = state ? state.accountLicenseDatas : undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["activeAdmin"] = state ? state.activeAdmin : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["balance"] = state ? state.balance : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["daysLeft"] = state ? state.daysLeft : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["enforceMode"] = state ? state.enforceMode : undefined;
            resourceInputs["errorDesc"] = state ? state.errorDesc : undefined;
            resourceInputs["evaluationPeriod"] = state ? state.evaluationPeriod : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["extraEvaluation"] = state ? state.extraEvaluation : undefined;
            resourceInputs["licenseCount"] = state ? state.licenseCount : undefined;
            resourceInputs["licenseCountPurchased"] = state ? state.licenseCountPurchased : undefined;
            resourceInputs["licenseState"] = state ? state.licenseState : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["netSubstitution"] = state ? state.netSubstitution : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            resourceInputs["substitutedLicenses"] = state ? state.substitutedLicenses : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trialAdmin"] = state ? state.trialAdmin : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as LicenseLicenseInfoArgs | undefined;
            resourceInputs["accountLicenseDatas"] = args ? args.accountLicenseDatas : undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["activeAdmin"] = args ? args.activeAdmin : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["balance"] = args ? args.balance : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["daysLeft"] = args ? args.daysLeft : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["enforceMode"] = args ? args.enforceMode : undefined;
            resourceInputs["errorDesc"] = args ? args.errorDesc : undefined;
            resourceInputs["evaluationPeriod"] = args ? args.evaluationPeriod : undefined;
            resourceInputs["expireTime"] = args ? args.expireTime : undefined;
            resourceInputs["extraEvaluation"] = args ? args.extraEvaluation : undefined;
            resourceInputs["licenseCount"] = args ? args.licenseCount : undefined;
            resourceInputs["licenseCountPurchased"] = args ? args.licenseCountPurchased : undefined;
            resourceInputs["licenseState"] = args ? args.licenseState : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["netSubstitution"] = args ? args.netSubstitution : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["substitutedLicenses"] = args ? args.substitutedLicenses : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trialAdmin"] = args ? args.trialAdmin : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LicenseLicenseInfo.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LicenseLicenseInfo resources.
 */
export interface LicenseLicenseInfoState {
    /**
     * A reference to a licenseAccountLicenseData resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    accountLicenseDatas?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoAccountLicenseData>[]>;
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * The license administrative state. Set this property to 'true' to activate the license entitlements.
     */
    activeAdmin?: pulumi.Input<boolean>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoAncestor>[]>;
    /**
     * The total balance we have for licenses.
     */
    balance?: pulumi.Input<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The number of days left for licenseState to stay in TrialPeriod or OutOfCompliance state.
     */
    daysLeft?: pulumi.Input<number>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The date and time when the trial period expires. The value of the 'endTime' property is set when the account enters the
     * TrialPeriod or OutOfCompliance state.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The entitlement mode reported by Cisco Smart Software Manager.
     */
    enforceMode?: pulumi.Input<string>;
    /**
     * The detailed error message when there is any error related to this licensing entitlement.
     */
    errorDesc?: pulumi.Input<string>;
    /**
     * The default Trial or Grace period customer is entitled to.
     */
    evaluationPeriod?: pulumi.Input<number>;
    /**
     * The date and time when the next expiration time of license subscription.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * The number of days the trial Trial or Grace period is extended. The trial or grace period can be extended once.
     */
    extraEvaluation?: pulumi.Input<number>;
    /**
     * The total number of license consumed in the Intersight account.
     */
    licenseCount?: pulumi.Input<number>;
    /**
     * The total number of license purchased from cisco.
     */
    licenseCountPurchased?: pulumi.Input<number>;
    /**
     * The license state defined by Intersight. The value may be one of NotLicensed, TrialPeriod, OutOfCompliance, Compliance,
     * GraceExpired, or TrialExpired. * `NotLicensed` - The license token is neither activated nor registered. * `GraceExpired`
     * - The license grace period has expired. * `TrialPeriod` - The 90 days of trial period. * `OutOfCompliance` - The license
     * is out of compliance. * `Compliance` - The license is in compliance. * `TrialExpired` - The trial period of 90 days has
     * expired.
     */
    licenseState?: pulumi.Input<string>;
    /**
     * The name of the Intersight license entitlement. For example, this property may be set to 'Essential'. * `Base` - Base as
     * a License type. It is default license type. * `Essential` - Essential as a License type. * `Standard` - Standard as a
     * License type. * `Advantage` - Advantage as a License type. * `Premier` - Premier as a License type. * `IWO-Essential` -
     * IWO-Essential as a License type. * `IWO-Advantage` - IWO-Advantage as a License type. * `IWO-Premier` - IWO-Premier as a
     * License type. * `IKS-Advantage` - IKS-Advantage as a License type. * `INC-Premier-1GFixed` - Premier 1G Fixed license
     * tier for Intersight Nexus Cloud. * `INC-Premier-10GFixed` - Premier 10G Fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-100GFixed` - Premier 100G Fixed license tier for Intersight Nexus Cloud. * `INC-Premier-Mod4Slot` - Premier
     * Modular 4 slot license tier for Intersight Nexus Cloud. * `INC-Premier-Mod8Slot` - Premier Modular 8 slot license tier
     * for Intersight Nexus Cloud. * `INC-Premier-D2OpsFixed` - Premier D2Ops fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-D2OpsMod` - Premier D2Ops modular license tier for Intersight Nexus Cloud. *
     * `INC-Premier-CentralizedMod8Slot` - Premier modular license tier of switch type CentralizedMod8Slot for Intersight Nexus
     * Cloud. * `INC-Premier-DistributedMod8Slot` - Premier modular license tier of switch type DistributedMod8Slot for
     * Intersight Nexus Cloud. * `IntersightTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial
     * mode Intersight tiers. * `IWOTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode
     * IKS tiers. * `IKSTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode IWO tiers. *
     * `INCTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode Nexus tiers.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The total number of substituted licenses added or removed.
     */
    netSubstitution?: pulumi.Input<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * The date and time when the licenseState entered the TrialPeriod or OutOfCompliance state.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The id of license subscription.
     */
    subscriptionId?: pulumi.Input<string>;
    substitutedLicenses?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoSubstitutedLicense>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoTag>[]>;
    /**
     * The administrative state of the trial license. When the LicenseState is set to 'NotLicensed', 'trialAdmin' can be set to
     * true to start the trial period, i.e. licenseState is set to be TrialPeriod.
     */
    trialAdmin?: pulumi.Input<boolean>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoVersionContext>[]>;
}

/**
 * The set of arguments for constructing a LicenseLicenseInfo resource.
 */
export interface LicenseLicenseInfoArgs {
    /**
     * A reference to a licenseAccountLicenseData resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    accountLicenseDatas?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoAccountLicenseData>[]>;
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * The license administrative state. Set this property to 'true' to activate the license entitlements.
     */
    activeAdmin?: pulumi.Input<boolean>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoAncestor>[]>;
    /**
     * The total balance we have for licenses.
     */
    balance?: pulumi.Input<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The number of days left for licenseState to stay in TrialPeriod or OutOfCompliance state.
     */
    daysLeft?: pulumi.Input<number>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The date and time when the trial period expires. The value of the 'endTime' property is set when the account enters the
     * TrialPeriod or OutOfCompliance state.
     */
    endTime?: pulumi.Input<string>;
    /**
     * The entitlement mode reported by Cisco Smart Software Manager.
     */
    enforceMode?: pulumi.Input<string>;
    /**
     * The detailed error message when there is any error related to this licensing entitlement.
     */
    errorDesc?: pulumi.Input<string>;
    /**
     * The default Trial or Grace period customer is entitled to.
     */
    evaluationPeriod?: pulumi.Input<number>;
    /**
     * The date and time when the next expiration time of license subscription.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * The number of days the trial Trial or Grace period is extended. The trial or grace period can be extended once.
     */
    extraEvaluation?: pulumi.Input<number>;
    /**
     * The total number of license consumed in the Intersight account.
     */
    licenseCount?: pulumi.Input<number>;
    /**
     * The total number of license purchased from cisco.
     */
    licenseCountPurchased?: pulumi.Input<number>;
    /**
     * The license state defined by Intersight. The value may be one of NotLicensed, TrialPeriod, OutOfCompliance, Compliance,
     * GraceExpired, or TrialExpired. * `NotLicensed` - The license token is neither activated nor registered. * `GraceExpired`
     * - The license grace period has expired. * `TrialPeriod` - The 90 days of trial period. * `OutOfCompliance` - The license
     * is out of compliance. * `Compliance` - The license is in compliance. * `TrialExpired` - The trial period of 90 days has
     * expired.
     */
    licenseState?: pulumi.Input<string>;
    /**
     * The name of the Intersight license entitlement. For example, this property may be set to 'Essential'. * `Base` - Base as
     * a License type. It is default license type. * `Essential` - Essential as a License type. * `Standard` - Standard as a
     * License type. * `Advantage` - Advantage as a License type. * `Premier` - Premier as a License type. * `IWO-Essential` -
     * IWO-Essential as a License type. * `IWO-Advantage` - IWO-Advantage as a License type. * `IWO-Premier` - IWO-Premier as a
     * License type. * `IKS-Advantage` - IKS-Advantage as a License type. * `INC-Premier-1GFixed` - Premier 1G Fixed license
     * tier for Intersight Nexus Cloud. * `INC-Premier-10GFixed` - Premier 10G Fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-100GFixed` - Premier 100G Fixed license tier for Intersight Nexus Cloud. * `INC-Premier-Mod4Slot` - Premier
     * Modular 4 slot license tier for Intersight Nexus Cloud. * `INC-Premier-Mod8Slot` - Premier Modular 8 slot license tier
     * for Intersight Nexus Cloud. * `INC-Premier-D2OpsFixed` - Premier D2Ops fixed license tier for Intersight Nexus Cloud. *
     * `INC-Premier-D2OpsMod` - Premier D2Ops modular license tier for Intersight Nexus Cloud. *
     * `INC-Premier-CentralizedMod8Slot` - Premier modular license tier of switch type CentralizedMod8Slot for Intersight Nexus
     * Cloud. * `INC-Premier-DistributedMod8Slot` - Premier modular license tier of switch type DistributedMod8Slot for
     * Intersight Nexus Cloud. * `IntersightTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial
     * mode Intersight tiers. * `IWOTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode
     * IKS tiers. * `IKSTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode IWO tiers. *
     * `INCTrial` - Virtual dummy license type to indicate trial. Used for UI display of trial mode Nexus tiers.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The total number of substituted licenses added or removed.
     */
    netSubstitution?: pulumi.Input<number>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * The date and time when the licenseState entered the TrialPeriod or OutOfCompliance state.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The id of license subscription.
     */
    subscriptionId?: pulumi.Input<string>;
    substitutedLicenses?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoSubstitutedLicense>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoTag>[]>;
    /**
     * The administrative state of the trial license. When the LicenseState is set to 'NotLicensed', 'trialAdmin' can be set to
     * true to start the trial period, i.e. licenseState is set to be TrialPeriod.
     */
    trialAdmin?: pulumi.Input<boolean>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.LicenseLicenseInfoVersionContext>[]>;
}
