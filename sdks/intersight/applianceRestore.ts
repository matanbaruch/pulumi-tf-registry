// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplianceRestore extends pulumi.CustomResource {
    /**
     * Get an existing ApplianceRestore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplianceRestoreState, opts?: pulumi.CustomResourceOptions): ApplianceRestore {
        return new ApplianceRestore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/applianceRestore:ApplianceRestore';

    /**
     * Returns true if the given object is an instance of ApplianceRestore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplianceRestore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplianceRestore.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly accounts!: pulumi.Output<outputs.ApplianceRestoreAccount[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.ApplianceRestoreAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Elapsed time in seconds since the restore process has started.
     */
    public readonly elapsedTime!: pulumi.Output<number>;
    /**
     * End date and time of the restore process.
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * Backup filename to backup or restore.
     */
    public readonly filename!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether the value of the 'password' property has been set.
     */
    public readonly isPasswordSet!: pulumi.Output<boolean>;
    public readonly messages!: pulumi.Output<string[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.ApplianceRestoreParent[]>;
    /**
     * Password for authenticating with the file server.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.ApplianceRestorePermissionResource[]>;
    /**
     * Communication protocol used by the file server (e.g. scp, sftp, or CIFS). * `scp` - Secure Copy Protocol (SCP) to access
     * the file server. * `sftp` - SSH File Transfer Protocol (SFTP) to access file server. * `cifs` - Common Internet File
     * System (CIFS) Protocol to access file server.
     */
    public readonly protocol!: pulumi.Output<string | undefined>;
    /**
     * Hostname of the remote file server.
     */
    public readonly remoteHost!: pulumi.Output<string | undefined>;
    /**
     * File server directory or share name to copy the file.
     */
    public readonly remotePath!: pulumi.Output<string | undefined>;
    /**
     * Remote TCP port on the file server (e.g. 22 for scp).
     */
    public readonly remotePort!: pulumi.Output<number | undefined>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Start date and time of the restore process.
     */
    public readonly startTime!: pulumi.Output<string>;
    /**
     * Status of the restore managed object. * `Started` - Backup or restore process has started. * `Created` - Backup or
     * restore is in created state. * `Failed` - Backup or restore process has failed. * `Completed` - Backup or restore
     * process has completed. * `Copied` - Backup file has been copied. * `Cleanup Failed` - Cleanup of the old backup has
     * failed.
     */
    public readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ApplianceRestoreTag[]>;
    /**
     * Username to authenticate the fileserver.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.ApplianceRestoreVersionContext[]>;

    /**
     * Create a ApplianceRestore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplianceRestoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplianceRestoreArgs | ApplianceRestoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplianceRestoreState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["accounts"] = state ? state.accounts : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["elapsedTime"] = state ? state.elapsedTime : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["filename"] = state ? state.filename : undefined;
            resourceInputs["isPasswordSet"] = state ? state.isPasswordSet : undefined;
            resourceInputs["messages"] = state ? state.messages : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["remoteHost"] = state ? state.remoteHost : undefined;
            resourceInputs["remotePath"] = state ? state.remotePath : undefined;
            resourceInputs["remotePort"] = state ? state.remotePort : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as ApplianceRestoreArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["accounts"] = args ? args.accounts : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["elapsedTime"] = args ? args.elapsedTime : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["filename"] = args ? args.filename : undefined;
            resourceInputs["isPasswordSet"] = args ? args.isPasswordSet : undefined;
            resourceInputs["messages"] = args ? args.messages : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["remoteHost"] = args ? args.remoteHost : undefined;
            resourceInputs["remotePath"] = args ? args.remotePath : undefined;
            resourceInputs["remotePort"] = args ? args.remotePort : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplianceRestore.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ApplianceRestore resources.
 */
export interface ApplianceRestoreState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Elapsed time in seconds since the restore process has started.
     */
    elapsedTime?: pulumi.Input<number>;
    /**
     * End date and time of the restore process.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Backup filename to backup or restore.
     */
    filename?: pulumi.Input<string>;
    /**
     * Indicates whether the value of the 'password' property has been set.
     */
    isPasswordSet?: pulumi.Input<boolean>;
    messages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreParent>[]>;
    /**
     * Password for authenticating with the file server.
     */
    password?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.ApplianceRestorePermissionResource>[]>;
    /**
     * Communication protocol used by the file server (e.g. scp, sftp, or CIFS). * `scp` - Secure Copy Protocol (SCP) to access
     * the file server. * `sftp` - SSH File Transfer Protocol (SFTP) to access file server. * `cifs` - Common Internet File
     * System (CIFS) Protocol to access file server.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Hostname of the remote file server.
     */
    remoteHost?: pulumi.Input<string>;
    /**
     * File server directory or share name to copy the file.
     */
    remotePath?: pulumi.Input<string>;
    /**
     * Remote TCP port on the file server (e.g. 22 for scp).
     */
    remotePort?: pulumi.Input<number>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Start date and time of the restore process.
     */
    startTime?: pulumi.Input<string>;
    /**
     * Status of the restore managed object. * `Started` - Backup or restore process has started. * `Created` - Backup or
     * restore is in created state. * `Failed` - Backup or restore process has failed. * `Completed` - Backup or restore
     * process has completed. * `Copied` - Backup file has been copied. * `Cleanup Failed` - Cleanup of the old backup has
     * failed.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreTag>[]>;
    /**
     * Username to authenticate the fileserver.
     */
    username?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreVersionContext>[]>;
}

/**
 * The set of arguments for constructing a ApplianceRestore resource.
 */
export interface ApplianceRestoreArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a iamAccount resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    accounts?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreAccount>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Elapsed time in seconds since the restore process has started.
     */
    elapsedTime?: pulumi.Input<number>;
    /**
     * End date and time of the restore process.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Backup filename to backup or restore.
     */
    filename?: pulumi.Input<string>;
    /**
     * Indicates whether the value of the 'password' property has been set.
     */
    isPasswordSet?: pulumi.Input<boolean>;
    messages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreParent>[]>;
    /**
     * Password for authenticating with the file server.
     */
    password?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.ApplianceRestorePermissionResource>[]>;
    /**
     * Communication protocol used by the file server (e.g. scp, sftp, or CIFS). * `scp` - Secure Copy Protocol (SCP) to access
     * the file server. * `sftp` - SSH File Transfer Protocol (SFTP) to access file server. * `cifs` - Common Internet File
     * System (CIFS) Protocol to access file server.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Hostname of the remote file server.
     */
    remoteHost?: pulumi.Input<string>;
    /**
     * File server directory or share name to copy the file.
     */
    remotePath?: pulumi.Input<string>;
    /**
     * Remote TCP port on the file server (e.g. 22 for scp).
     */
    remotePort?: pulumi.Input<number>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Start date and time of the restore process.
     */
    startTime?: pulumi.Input<string>;
    /**
     * Status of the restore managed object. * `Started` - Backup or restore process has started. * `Created` - Backup or
     * restore is in created state. * `Failed` - Backup or restore process has failed. * `Completed` - Backup or restore
     * process has completed. * `Copied` - Backup file has been copied. * `Cleanup Failed` - Cleanup of the old backup has
     * failed.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreTag>[]>;
    /**
     * Username to authenticate the fileserver.
     */
    username?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.ApplianceRestoreVersionContext>[]>;
}
