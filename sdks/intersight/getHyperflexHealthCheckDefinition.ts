// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexHealthCheckDefinition(args?: GetHyperflexHealthCheckDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexHealthCheckDefinitionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexHealthCheckDefinition:getHyperflexHealthCheckDefinition", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "category": args.category,
        "classId": args.classId,
        "commonCauses": args.commonCauses,
        "configuration": args.configuration,
        "createTime": args.createTime,
        "defaultHealthCheckScriptInfo": args.defaultHealthCheckScriptInfo,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "healthCheckScriptInfos": args.healthCheckScriptInfos,
        "healthImpact": args.healthImpact,
        "id": args.id,
        "internalName": args.internalName,
        "minimumHyperFlexVersion": args.minimumHyperFlexVersion,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "reference": args.reference,
        "resolution": args.resolution,
        "scriptExecutionMode": args.scriptExecutionMode,
        "scriptExecutionOnComputeNodes": args.scriptExecutionOnComputeNodes,
        "sharedScope": args.sharedScope,
        "supportedHypervisorType": args.supportedHypervisorType,
        "tags": args.tags,
        "targetExecutionType": args.targetExecutionType,
        "timeout": args.timeout,
        "unsupportedHyperFlexVersions": args.unsupportedHyperFlexVersions,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexHealthCheckDefinition.
 */
export interface GetHyperflexHealthCheckDefinitionArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexHealthCheckDefinitionAncestor[];
    category?: string;
    classId?: string;
    commonCauses?: string;
    configuration?: string;
    createTime?: string;
    defaultHealthCheckScriptInfo?: inputs.GetHyperflexHealthCheckDefinitionDefaultHealthCheckScriptInfo;
    description?: string;
    domainGroupMoid?: string;
    healthCheckScriptInfos?: inputs.GetHyperflexHealthCheckDefinitionHealthCheckScriptInfo[];
    healthImpact?: string;
    id?: string;
    internalName?: string;
    minimumHyperFlexVersion?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexHealthCheckDefinitionParent;
    permissionResources?: inputs.GetHyperflexHealthCheckDefinitionPermissionResource[];
    reference?: string;
    resolution?: string;
    scriptExecutionMode?: string;
    scriptExecutionOnComputeNodes?: boolean;
    sharedScope?: string;
    supportedHypervisorType?: string;
    tags?: inputs.GetHyperflexHealthCheckDefinitionTag[];
    targetExecutionType?: string;
    timeout?: number;
    unsupportedHyperFlexVersions?: string[];
    versionContext?: inputs.GetHyperflexHealthCheckDefinitionVersionContext;
}

/**
 * A collection of values returned by getHyperflexHealthCheckDefinition.
 */
export interface GetHyperflexHealthCheckDefinitionResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexHealthCheckDefinitionAncestor[];
    readonly category?: string;
    readonly classId?: string;
    readonly commonCauses?: string;
    readonly configuration?: string;
    readonly createTime?: string;
    readonly defaultHealthCheckScriptInfo?: outputs.GetHyperflexHealthCheckDefinitionDefaultHealthCheckScriptInfo;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly healthCheckScriptInfos?: outputs.GetHyperflexHealthCheckDefinitionHealthCheckScriptInfo[];
    readonly healthImpact?: string;
    readonly id: string;
    readonly internalName?: string;
    readonly minimumHyperFlexVersion?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexHealthCheckDefinitionParent;
    readonly permissionResources?: outputs.GetHyperflexHealthCheckDefinitionPermissionResource[];
    readonly reference?: string;
    readonly resolution?: string;
    readonly results: outputs.GetHyperflexHealthCheckDefinitionResult[];
    readonly scriptExecutionMode?: string;
    readonly scriptExecutionOnComputeNodes?: boolean;
    readonly sharedScope?: string;
    readonly supportedHypervisorType?: string;
    readonly tags?: outputs.GetHyperflexHealthCheckDefinitionTag[];
    readonly targetExecutionType?: string;
    readonly timeout?: number;
    readonly unsupportedHyperFlexVersions?: string[];
    readonly versionContext?: outputs.GetHyperflexHealthCheckDefinitionVersionContext;
}
export function getHyperflexHealthCheckDefinitionOutput(args?: GetHyperflexHealthCheckDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexHealthCheckDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexHealthCheckDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexHealthCheckDefinition.
 */
export interface GetHyperflexHealthCheckDefinitionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionAncestorArgs>[]>;
    category?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    commonCauses?: pulumi.Input<string>;
    configuration?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    defaultHealthCheckScriptInfo?: pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionDefaultHealthCheckScriptInfoArgs>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    healthCheckScriptInfos?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionHealthCheckScriptInfoArgs>[]>;
    healthImpact?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    internalName?: pulumi.Input<string>;
    minimumHyperFlexVersion?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionPermissionResourceArgs>[]>;
    reference?: pulumi.Input<string>;
    resolution?: pulumi.Input<string>;
    scriptExecutionMode?: pulumi.Input<string>;
    scriptExecutionOnComputeNodes?: pulumi.Input<boolean>;
    sharedScope?: pulumi.Input<string>;
    supportedHypervisorType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionTagArgs>[]>;
    targetExecutionType?: pulumi.Input<string>;
    timeout?: pulumi.Input<number>;
    unsupportedHyperFlexVersions?: pulumi.Input<pulumi.Input<string>[]>;
    versionContext?: pulumi.Input<inputs.GetHyperflexHealthCheckDefinitionVersionContextArgs>;
}
