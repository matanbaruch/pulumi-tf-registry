// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FabricSpanSession extends pulumi.CustomResource {
    /**
     * Get an existing FabricSpanSession resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FabricSpanSessionState, opts?: pulumi.CustomResourceOptions): FabricSpanSession {
        return new FabricSpanSession(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/fabricSpanSession:FabricSpanSession';

    /**
     * Returns true if the given object is an instance of FabricSpanSession.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FabricSpanSession {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FabricSpanSession.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * Admin state to enable or disable the SPAN session. * `Disabled` - Admin configured Disabled State. * `Enabled` - Admin
     * configured Enabled State.
     */
    public readonly adminState!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.FabricSpanSessionAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The configured state of SPAN configuration. If the configuration fails to deploy to the Fabric Interconnect, it can be
     * redeployed by toggling the admin state. * `None` - Nil value when no action has been triggered by the user. * `Applied`
     * - User configured settings are in applied state. * `Applying` - User settings are being applied on the target server. *
     * `Failed` - User configured settings could not be applied.
     */
    public readonly configState!: pulumi.Output<string>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * An array of relationships to fabricAbstractSpanDestPort resources.
     */
    public readonly destPorts!: pulumi.Output<outputs.FabricSpanSessionDestPort[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the SPAN session. The name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.) or an
     * underscore (_).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A reference to a networkElement resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly networkElements!: pulumi.Output<outputs.FabricSpanSessionNetworkElement[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * Operational state of the SPAN session. * `Unknown` - SPAN session operational state is Unknown. * `Up` - SPAN session
     * operational state is Up. * `Down` - SPAN session operational state is Down. * `Error` - SPAN session operational state
     * is Error.
     */
    public readonly operState!: pulumi.Output<string>;
    /**
     * Operational state reason of the SPAN session. * `Unknown` - Unknown operational state. * `Active` - Active and
     * operational SPAN session. * `NoHardwareResource` - No hardware resources available. * `NoOperationalSrcDst` - No
     * operational SPAN source or destination. * `GenericError` - Generic operational error. * `NoSourcesConfigured` - No
     * source interfaces configured. * `NoDestinationConfigured` - No destination port configured. *
     * `NoSourceDestinationConfigured` - No source or destination interface configured. * `SessionAdminShut` - Session is
     * administratively disabled. * `WrongDestinationMode` - Wrong Destination mode configured. * `WrongSourceMode` - Wrong
     * Source mode configured. * `TunnelMisconfDown` - Tunnel Misconfigured or Down. * `NoFlowIdSpecified` - No Flow ID
     * specified for ERSPAN.
     */
    public readonly operStateReason!: pulumi.Output<string>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.FabricSpanSessionParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.FabricSpanSessionPermissionResource[]>;
    /**
     * Session ID identifies the SPAN session on the Fabric Interconnect.
     */
    public readonly sessionId!: pulumi.Output<number>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Count of total number of sources in the SPAN session.
     */
    public readonly sourceCount!: pulumi.Output<number>;
    /**
     * An array of relationships to fabricAbstractSpanSourcePortChannel resources.
     */
    public readonly sourcePortChannels!: pulumi.Output<outputs.FabricSpanSessionSourcePortChannel[]>;
    /**
     * An array of relationships to fabricAbstractSpanSourcePort resources.
     */
    public readonly sourcePorts!: pulumi.Output<outputs.FabricSpanSessionSourcePort[]>;
    /**
     * An array of relationships to fabricAbstractSpanSourceVirtualIf resources.
     */
    public readonly sourceVirtualIfs!: pulumi.Output<outputs.FabricSpanSessionSourceVirtualIf[]>;
    /**
     * An array of relationships to fabricSpanSourceVlan resources.
     */
    public readonly sourceVlans!: pulumi.Output<outputs.FabricSpanSessionSourceVlan[]>;
    /**
     * Admin state to enable or disable spanning control packets. * `Disabled` - Admin configured Disabled State. * `Enabled` -
     * Admin configured Enabled State.
     */
    public readonly spanControlPackets!: pulumi.Output<string | undefined>;
    /**
     * Switch ID (A or B) corresponding to network element. * `A` - Switch Identifier of Fabric Interconnect A. * `B` - Switch
     * Identifier of Fabric Interconnect B.
     */
    public readonly switchId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.FabricSpanSessionTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.FabricSpanSessionVersionContext[]>;

    /**
     * Create a FabricSpanSession resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FabricSpanSessionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FabricSpanSessionArgs | FabricSpanSessionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FabricSpanSessionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["adminState"] = state ? state.adminState : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["configState"] = state ? state.configState : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["destPorts"] = state ? state.destPorts : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkElements"] = state ? state.networkElements : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["operState"] = state ? state.operState : undefined;
            resourceInputs["operStateReason"] = state ? state.operStateReason : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sessionId"] = state ? state.sessionId : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["sourceCount"] = state ? state.sourceCount : undefined;
            resourceInputs["sourcePortChannels"] = state ? state.sourcePortChannels : undefined;
            resourceInputs["sourcePorts"] = state ? state.sourcePorts : undefined;
            resourceInputs["sourceVirtualIfs"] = state ? state.sourceVirtualIfs : undefined;
            resourceInputs["sourceVlans"] = state ? state.sourceVlans : undefined;
            resourceInputs["spanControlPackets"] = state ? state.spanControlPackets : undefined;
            resourceInputs["switchId"] = state ? state.switchId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as FabricSpanSessionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["adminState"] = args ? args.adminState : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["configState"] = args ? args.configState : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["destPorts"] = args ? args.destPorts : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkElements"] = args ? args.networkElements : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["operState"] = args ? args.operState : undefined;
            resourceInputs["operStateReason"] = args ? args.operStateReason : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sessionId"] = args ? args.sessionId : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["sourceCount"] = args ? args.sourceCount : undefined;
            resourceInputs["sourcePortChannels"] = args ? args.sourcePortChannels : undefined;
            resourceInputs["sourcePorts"] = args ? args.sourcePorts : undefined;
            resourceInputs["sourceVirtualIfs"] = args ? args.sourceVirtualIfs : undefined;
            resourceInputs["sourceVlans"] = args ? args.sourceVlans : undefined;
            resourceInputs["spanControlPackets"] = args ? args.spanControlPackets : undefined;
            resourceInputs["switchId"] = args ? args.switchId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FabricSpanSession.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FabricSpanSession resources.
 */
export interface FabricSpanSessionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * Admin state to enable or disable the SPAN session. * `Disabled` - Admin configured Disabled State. * `Enabled` - Admin
     * configured Enabled State.
     */
    adminState?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The configured state of SPAN configuration. If the configuration fails to deploy to the Fabric Interconnect, it can be
     * redeployed by toggling the admin state. * `None` - Nil value when no action has been triggered by the user. * `Applied`
     * - User configured settings are in applied state. * `Applying` - User settings are being applied on the target server. *
     * `Failed` - User configured settings could not be applied.
     */
    configState?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An array of relationships to fabricAbstractSpanDestPort resources.
     */
    destPorts?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionDestPort>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the SPAN session. The name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.) or an
     * underscore (_).
     */
    name?: pulumi.Input<string>;
    /**
     * A reference to a networkElement resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    networkElements?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionNetworkElement>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Operational state of the SPAN session. * `Unknown` - SPAN session operational state is Unknown. * `Up` - SPAN session
     * operational state is Up. * `Down` - SPAN session operational state is Down. * `Error` - SPAN session operational state
     * is Error.
     */
    operState?: pulumi.Input<string>;
    /**
     * Operational state reason of the SPAN session. * `Unknown` - Unknown operational state. * `Active` - Active and
     * operational SPAN session. * `NoHardwareResource` - No hardware resources available. * `NoOperationalSrcDst` - No
     * operational SPAN source or destination. * `GenericError` - Generic operational error. * `NoSourcesConfigured` - No
     * source interfaces configured. * `NoDestinationConfigured` - No destination port configured. *
     * `NoSourceDestinationConfigured` - No source or destination interface configured. * `SessionAdminShut` - Session is
     * administratively disabled. * `WrongDestinationMode` - Wrong Destination mode configured. * `WrongSourceMode` - Wrong
     * Source mode configured. * `TunnelMisconfDown` - Tunnel Misconfigured or Down. * `NoFlowIdSpecified` - No Flow ID
     * specified for ERSPAN.
     */
    operStateReason?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionPermissionResource>[]>;
    /**
     * Session ID identifies the SPAN session on the Fabric Interconnect.
     */
    sessionId?: pulumi.Input<number>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Count of total number of sources in the SPAN session.
     */
    sourceCount?: pulumi.Input<number>;
    /**
     * An array of relationships to fabricAbstractSpanSourcePortChannel resources.
     */
    sourcePortChannels?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourcePortChannel>[]>;
    /**
     * An array of relationships to fabricAbstractSpanSourcePort resources.
     */
    sourcePorts?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourcePort>[]>;
    /**
     * An array of relationships to fabricAbstractSpanSourceVirtualIf resources.
     */
    sourceVirtualIfs?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourceVirtualIf>[]>;
    /**
     * An array of relationships to fabricSpanSourceVlan resources.
     */
    sourceVlans?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourceVlan>[]>;
    /**
     * Admin state to enable or disable spanning control packets. * `Disabled` - Admin configured Disabled State. * `Enabled` -
     * Admin configured Enabled State.
     */
    spanControlPackets?: pulumi.Input<string>;
    /**
     * Switch ID (A or B) corresponding to network element. * `A` - Switch Identifier of Fabric Interconnect A. * `B` - Switch
     * Identifier of Fabric Interconnect B.
     */
    switchId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionVersionContext>[]>;
}

/**
 * The set of arguments for constructing a FabricSpanSession resource.
 */
export interface FabricSpanSessionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * Admin state to enable or disable the SPAN session. * `Disabled` - Admin configured Disabled State. * `Enabled` - Admin
     * configured Enabled State.
     */
    adminState?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The configured state of SPAN configuration. If the configuration fails to deploy to the Fabric Interconnect, it can be
     * redeployed by toggling the admin state. * `None` - Nil value when no action has been triggered by the user. * `Applied`
     * - User configured settings are in applied state. * `Applying` - User settings are being applied on the target server. *
     * `Failed` - User configured settings could not be applied.
     */
    configState?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * An array of relationships to fabricAbstractSpanDestPort resources.
     */
    destPorts?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionDestPort>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the SPAN session. The name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.) or an
     * underscore (_).
     */
    name?: pulumi.Input<string>;
    /**
     * A reference to a networkElement resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    networkElements?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionNetworkElement>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Operational state of the SPAN session. * `Unknown` - SPAN session operational state is Unknown. * `Up` - SPAN session
     * operational state is Up. * `Down` - SPAN session operational state is Down. * `Error` - SPAN session operational state
     * is Error.
     */
    operState?: pulumi.Input<string>;
    /**
     * Operational state reason of the SPAN session. * `Unknown` - Unknown operational state. * `Active` - Active and
     * operational SPAN session. * `NoHardwareResource` - No hardware resources available. * `NoOperationalSrcDst` - No
     * operational SPAN source or destination. * `GenericError` - Generic operational error. * `NoSourcesConfigured` - No
     * source interfaces configured. * `NoDestinationConfigured` - No destination port configured. *
     * `NoSourceDestinationConfigured` - No source or destination interface configured. * `SessionAdminShut` - Session is
     * administratively disabled. * `WrongDestinationMode` - Wrong Destination mode configured. * `WrongSourceMode` - Wrong
     * Source mode configured. * `TunnelMisconfDown` - Tunnel Misconfigured or Down. * `NoFlowIdSpecified` - No Flow ID
     * specified for ERSPAN.
     */
    operStateReason?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionPermissionResource>[]>;
    /**
     * Session ID identifies the SPAN session on the Fabric Interconnect.
     */
    sessionId?: pulumi.Input<number>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Count of total number of sources in the SPAN session.
     */
    sourceCount?: pulumi.Input<number>;
    /**
     * An array of relationships to fabricAbstractSpanSourcePortChannel resources.
     */
    sourcePortChannels?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourcePortChannel>[]>;
    /**
     * An array of relationships to fabricAbstractSpanSourcePort resources.
     */
    sourcePorts?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourcePort>[]>;
    /**
     * An array of relationships to fabricAbstractSpanSourceVirtualIf resources.
     */
    sourceVirtualIfs?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourceVirtualIf>[]>;
    /**
     * An array of relationships to fabricSpanSourceVlan resources.
     */
    sourceVlans?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionSourceVlan>[]>;
    /**
     * Admin state to enable or disable spanning control packets. * `Disabled` - Admin configured Disabled State. * `Enabled` -
     * Admin configured Enabled State.
     */
    spanControlPackets?: pulumi.Input<string>;
    /**
     * Switch ID (A or B) corresponding to network element. * `A` - Switch Identifier of Fabric Interconnect A. * `B` - Switch
     * Identifier of Fabric Interconnect B.
     */
    switchId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FabricSpanSessionVersionContext>[]>;
}
