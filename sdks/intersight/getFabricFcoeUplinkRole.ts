// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricFcoeUplinkRole(args?: GetFabricFcoeUplinkRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricFcoeUplinkRoleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricFcoeUplinkRole:getFabricFcoeUplinkRole", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "adminSpeed": args.adminSpeed,
        "aggregatePortId": args.aggregatePortId,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "fec": args.fec,
        "id": args.id,
        "linkControlPolicy": args.linkControlPolicy,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "portId": args.portId,
        "portPolicy": args.portPolicy,
        "sharedScope": args.sharedScope,
        "slotId": args.slotId,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricFcoeUplinkRole.
 */
export interface GetFabricFcoeUplinkRoleArgs {
    accountMoid?: string;
    additionalProperties?: string;
    adminSpeed?: string;
    aggregatePortId?: number;
    ancestors?: inputs.GetFabricFcoeUplinkRoleAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    fec?: string;
    id?: string;
    linkControlPolicy?: inputs.GetFabricFcoeUplinkRoleLinkControlPolicy;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFabricFcoeUplinkRoleParent;
    permissionResources?: inputs.GetFabricFcoeUplinkRolePermissionResource[];
    portId?: number;
    portPolicy?: inputs.GetFabricFcoeUplinkRolePortPolicy;
    sharedScope?: string;
    slotId?: number;
    tags?: inputs.GetFabricFcoeUplinkRoleTag[];
    versionContext?: inputs.GetFabricFcoeUplinkRoleVersionContext;
}

/**
 * A collection of values returned by getFabricFcoeUplinkRole.
 */
export interface GetFabricFcoeUplinkRoleResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly adminSpeed?: string;
    readonly aggregatePortId?: number;
    readonly ancestors?: outputs.GetFabricFcoeUplinkRoleAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly fec?: string;
    readonly id: string;
    readonly linkControlPolicy?: outputs.GetFabricFcoeUplinkRoleLinkControlPolicy;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricFcoeUplinkRoleParent;
    readonly permissionResources?: outputs.GetFabricFcoeUplinkRolePermissionResource[];
    readonly portId?: number;
    readonly portPolicy?: outputs.GetFabricFcoeUplinkRolePortPolicy;
    readonly results: outputs.GetFabricFcoeUplinkRoleResult[];
    readonly sharedScope?: string;
    readonly slotId?: number;
    readonly tags?: outputs.GetFabricFcoeUplinkRoleTag[];
    readonly versionContext?: outputs.GetFabricFcoeUplinkRoleVersionContext;
}
export function getFabricFcoeUplinkRoleOutput(args?: GetFabricFcoeUplinkRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricFcoeUplinkRoleResult> {
    return pulumi.output(args).apply((a: any) => getFabricFcoeUplinkRole(a, opts))
}

/**
 * A collection of arguments for invoking getFabricFcoeUplinkRole.
 */
export interface GetFabricFcoeUplinkRoleOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    adminSpeed?: pulumi.Input<string>;
    aggregatePortId?: pulumi.Input<number>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricFcoeUplinkRoleAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    fec?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    linkControlPolicy?: pulumi.Input<inputs.GetFabricFcoeUplinkRoleLinkControlPolicyArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricFcoeUplinkRoleParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricFcoeUplinkRolePermissionResourceArgs>[]>;
    portId?: pulumi.Input<number>;
    portPolicy?: pulumi.Input<inputs.GetFabricFcoeUplinkRolePortPolicyArgs>;
    sharedScope?: pulumi.Input<string>;
    slotId?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricFcoeUplinkRoleTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetFabricFcoeUplinkRoleVersionContextArgs>;
}
