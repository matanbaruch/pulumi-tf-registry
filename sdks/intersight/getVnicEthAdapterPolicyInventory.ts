// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVnicEthAdapterPolicyInventory(args?: GetVnicEthAdapterPolicyInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetVnicEthAdapterPolicyInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getVnicEthAdapterPolicyInventory:getVnicEthAdapterPolicyInventory", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "advancedFilter": args.advancedFilter,
        "ancestors": args.ancestors,
        "arfsSettings": args.arfsSettings,
        "classId": args.classId,
        "completionQueueSettings": args.completionQueueSettings,
        "createTime": args.createTime,
        "description": args.description,
        "deviceMoId": args.deviceMoId,
        "domainGroupMoid": args.domainGroupMoid,
        "geneveEnabled": args.geneveEnabled,
        "id": args.id,
        "interruptScaling": args.interruptScaling,
        "interruptSettings": args.interruptSettings,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nvgreSettings": args.nvgreSettings,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "ptpSettings": args.ptpSettings,
        "roceSettings": args.roceSettings,
        "rssHashSettings": args.rssHashSettings,
        "rssSettings": args.rssSettings,
        "rxQueueSettings": args.rxQueueSettings,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "targetMo": args.targetMo,
        "tcpOffloadSettings": args.tcpOffloadSettings,
        "txQueueSettings": args.txQueueSettings,
        "uplinkFailbackTimeout": args.uplinkFailbackTimeout,
        "versionContext": args.versionContext,
        "vxlanSettings": args.vxlanSettings,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVnicEthAdapterPolicyInventory.
 */
export interface GetVnicEthAdapterPolicyInventoryArgs {
    accountMoid?: string;
    additionalProperties?: string;
    advancedFilter?: boolean;
    ancestors?: inputs.GetVnicEthAdapterPolicyInventoryAncestor[];
    arfsSettings?: inputs.GetVnicEthAdapterPolicyInventoryArfsSettings;
    classId?: string;
    completionQueueSettings?: inputs.GetVnicEthAdapterPolicyInventoryCompletionQueueSettings;
    createTime?: string;
    description?: string;
    deviceMoId?: string;
    domainGroupMoid?: string;
    geneveEnabled?: boolean;
    id?: string;
    interruptScaling?: boolean;
    interruptSettings?: inputs.GetVnicEthAdapterPolicyInventoryInterruptSettings;
    modTime?: string;
    moid?: string;
    name?: string;
    nvgreSettings?: inputs.GetVnicEthAdapterPolicyInventoryNvgreSettings;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetVnicEthAdapterPolicyInventoryParent;
    permissionResources?: inputs.GetVnicEthAdapterPolicyInventoryPermissionResource[];
    ptpSettings?: inputs.GetVnicEthAdapterPolicyInventoryPtpSettings;
    roceSettings?: inputs.GetVnicEthAdapterPolicyInventoryRoceSettings;
    rssHashSettings?: inputs.GetVnicEthAdapterPolicyInventoryRssHashSettings;
    rssSettings?: boolean;
    rxQueueSettings?: inputs.GetVnicEthAdapterPolicyInventoryRxQueueSettings;
    sharedScope?: string;
    tags?: inputs.GetVnicEthAdapterPolicyInventoryTag[];
    targetMo?: inputs.GetVnicEthAdapterPolicyInventoryTargetMo;
    tcpOffloadSettings?: inputs.GetVnicEthAdapterPolicyInventoryTcpOffloadSettings;
    txQueueSettings?: inputs.GetVnicEthAdapterPolicyInventoryTxQueueSettings;
    uplinkFailbackTimeout?: number;
    versionContext?: inputs.GetVnicEthAdapterPolicyInventoryVersionContext;
    vxlanSettings?: inputs.GetVnicEthAdapterPolicyInventoryVxlanSettings;
}

/**
 * A collection of values returned by getVnicEthAdapterPolicyInventory.
 */
export interface GetVnicEthAdapterPolicyInventoryResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly advancedFilter?: boolean;
    readonly ancestors?: outputs.GetVnicEthAdapterPolicyInventoryAncestor[];
    readonly arfsSettings?: outputs.GetVnicEthAdapterPolicyInventoryArfsSettings;
    readonly classId?: string;
    readonly completionQueueSettings?: outputs.GetVnicEthAdapterPolicyInventoryCompletionQueueSettings;
    readonly createTime?: string;
    readonly description?: string;
    readonly deviceMoId?: string;
    readonly domainGroupMoid?: string;
    readonly geneveEnabled?: boolean;
    readonly id: string;
    readonly interruptScaling?: boolean;
    readonly interruptSettings?: outputs.GetVnicEthAdapterPolicyInventoryInterruptSettings;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nvgreSettings?: outputs.GetVnicEthAdapterPolicyInventoryNvgreSettings;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetVnicEthAdapterPolicyInventoryParent;
    readonly permissionResources?: outputs.GetVnicEthAdapterPolicyInventoryPermissionResource[];
    readonly ptpSettings?: outputs.GetVnicEthAdapterPolicyInventoryPtpSettings;
    readonly results: outputs.GetVnicEthAdapterPolicyInventoryResult[];
    readonly roceSettings?: outputs.GetVnicEthAdapterPolicyInventoryRoceSettings;
    readonly rssHashSettings?: outputs.GetVnicEthAdapterPolicyInventoryRssHashSettings;
    readonly rssSettings?: boolean;
    readonly rxQueueSettings?: outputs.GetVnicEthAdapterPolicyInventoryRxQueueSettings;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetVnicEthAdapterPolicyInventoryTag[];
    readonly targetMo?: outputs.GetVnicEthAdapterPolicyInventoryTargetMo;
    readonly tcpOffloadSettings?: outputs.GetVnicEthAdapterPolicyInventoryTcpOffloadSettings;
    readonly txQueueSettings?: outputs.GetVnicEthAdapterPolicyInventoryTxQueueSettings;
    readonly uplinkFailbackTimeout?: number;
    readonly versionContext?: outputs.GetVnicEthAdapterPolicyInventoryVersionContext;
    readonly vxlanSettings?: outputs.GetVnicEthAdapterPolicyInventoryVxlanSettings;
}
export function getVnicEthAdapterPolicyInventoryOutput(args?: GetVnicEthAdapterPolicyInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVnicEthAdapterPolicyInventoryResult> {
    return pulumi.output(args).apply((a: any) => getVnicEthAdapterPolicyInventory(a, opts))
}

/**
 * A collection of arguments for invoking getVnicEthAdapterPolicyInventory.
 */
export interface GetVnicEthAdapterPolicyInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    advancedFilter?: pulumi.Input<boolean>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryAncestorArgs>[]>;
    arfsSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryArfsSettingsArgs>;
    classId?: pulumi.Input<string>;
    completionQueueSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryCompletionQueueSettingsArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    geneveEnabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    interruptScaling?: pulumi.Input<boolean>;
    interruptSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryInterruptSettingsArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nvgreSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryNvgreSettingsArgs>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryPermissionResourceArgs>[]>;
    ptpSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryPtpSettingsArgs>;
    roceSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryRoceSettingsArgs>;
    rssHashSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryRssHashSettingsArgs>;
    rssSettings?: pulumi.Input<boolean>;
    rxQueueSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryRxQueueSettingsArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryTagArgs>[]>;
    targetMo?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryTargetMoArgs>;
    tcpOffloadSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryTcpOffloadSettingsArgs>;
    txQueueSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryTxQueueSettingsArgs>;
    uplinkFailbackTimeout?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryVersionContextArgs>;
    vxlanSettings?: pulumi.Input<inputs.GetVnicEthAdapterPolicyInventoryVxlanSettingsArgs>;
}
