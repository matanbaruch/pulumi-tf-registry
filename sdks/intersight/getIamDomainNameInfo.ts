// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamDomainNameInfo(args?: GetIamDomainNameInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetIamDomainNameInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamDomainNameInfo:getIamDomainNameInfo", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "domainName": args.domainName,
        "failureDetails": args.failureDetails,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "recordExpiryTime": args.recordExpiryTime,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "txtRecord": args.txtRecord,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamDomainNameInfo.
 */
export interface GetIamDomainNameInfoArgs {
    account?: inputs.GetIamDomainNameInfoAccount;
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamDomainNameInfoAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    domainName?: string;
    failureDetails?: inputs.GetIamDomainNameInfoFailureDetails;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamDomainNameInfoParent;
    permissionResources?: inputs.GetIamDomainNameInfoPermissionResource[];
    recordExpiryTime?: string;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetIamDomainNameInfoTag[];
    txtRecord?: string;
    versionContext?: inputs.GetIamDomainNameInfoVersionContext;
}

/**
 * A collection of values returned by getIamDomainNameInfo.
 */
export interface GetIamDomainNameInfoResult {
    readonly account?: outputs.GetIamDomainNameInfoAccount;
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamDomainNameInfoAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly domainName?: string;
    readonly failureDetails?: outputs.GetIamDomainNameInfoFailureDetails;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamDomainNameInfoParent;
    readonly permissionResources?: outputs.GetIamDomainNameInfoPermissionResource[];
    readonly recordExpiryTime?: string;
    readonly results: outputs.GetIamDomainNameInfoResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetIamDomainNameInfoTag[];
    readonly txtRecord?: string;
    readonly versionContext?: outputs.GetIamDomainNameInfoVersionContext;
}
export function getIamDomainNameInfoOutput(args?: GetIamDomainNameInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamDomainNameInfoResult> {
    return pulumi.output(args).apply((a: any) => getIamDomainNameInfo(a, opts))
}

/**
 * A collection of arguments for invoking getIamDomainNameInfo.
 */
export interface GetIamDomainNameInfoOutputArgs {
    account?: pulumi.Input<inputs.GetIamDomainNameInfoAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamDomainNameInfoAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    domainName?: pulumi.Input<string>;
    failureDetails?: pulumi.Input<inputs.GetIamDomainNameInfoFailureDetailsArgs>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamDomainNameInfoParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamDomainNameInfoPermissionResourceArgs>[]>;
    recordExpiryTime?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamDomainNameInfoTagArgs>[]>;
    txtRecord?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetIamDomainNameInfoVersionContextArgs>;
}
