// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamBannerMessage(args?: GetIamBannerMessageArgs, opts?: pulumi.InvokeOptions): Promise<GetIamBannerMessageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamBannerMessage:getIamBannerMessage", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "bannerContents": args.bannerContents,
        "bannerDisplay": args.bannerDisplay,
        "bannerTitle": args.bannerTitle,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamBannerMessage.
 */
export interface GetIamBannerMessageArgs {
    account?: inputs.GetIamBannerMessageAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamBannerMessageAncestor[];
    bannerContents?: string;
    bannerDisplay?: boolean;
    bannerTitle?: string;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamBannerMessageParent;
    permissionResources?: inputs.GetIamBannerMessagePermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetIamBannerMessageTag[];
    versionContext?: inputs.GetIamBannerMessageVersionContext;
}

/**
 * A collection of values returned by getIamBannerMessage.
 */
export interface GetIamBannerMessageResult {
    readonly account?: outputs.GetIamBannerMessageAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamBannerMessageAncestor[];
    readonly bannerContents?: string;
    readonly bannerDisplay?: boolean;
    readonly bannerTitle?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamBannerMessageParent;
    readonly permissionResources?: outputs.GetIamBannerMessagePermissionResource[];
    readonly results: outputs.GetIamBannerMessageResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetIamBannerMessageTag[];
    readonly versionContext?: outputs.GetIamBannerMessageVersionContext;
}
export function getIamBannerMessageOutput(args?: GetIamBannerMessageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamBannerMessageResult> {
    return pulumi.output(args).apply((a: any) => getIamBannerMessage(a, opts))
}

/**
 * A collection of arguments for invoking getIamBannerMessage.
 */
export interface GetIamBannerMessageOutputArgs {
    account?: pulumi.Input<inputs.GetIamBannerMessageAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamBannerMessageAncestorArgs>[]>;
    bannerContents?: pulumi.Input<string>;
    bannerDisplay?: pulumi.Input<boolean>;
    bannerTitle?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamBannerMessageParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamBannerMessagePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamBannerMessageTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetIamBannerMessageVersionContextArgs>;
}
