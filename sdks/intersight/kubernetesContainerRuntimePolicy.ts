// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubernetesContainerRuntimePolicy extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesContainerRuntimePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesContainerRuntimePolicyState, opts?: pulumi.CustomResourceOptions): KubernetesContainerRuntimePolicy {
        return new KubernetesContainerRuntimePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/kubernetesContainerRuntimePolicy:KubernetesContainerRuntimePolicy';

    /**
     * Returns true if the given object is an instance of KubernetesContainerRuntimePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesContainerRuntimePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesContainerRuntimePolicy.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to kubernetesClusterProfile resources.
     */
    public readonly clusterProfiles!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyClusterProfile[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Bridge IP (--bip) including Prefix (e.g., 172.17.0.5/24) that Docker will use for the default bridge network (docker0).
     * Containers will connect to this if no other network is configured, not used by kubernetes pods because their network is
     * managed by CNI. However this address space must not collide with other CIDRs on your networks, including the cluster's
     * Service CIDR, Pod Network CIDR and IP Pools.
     */
    public readonly dockerBridgeNetworkCidr!: pulumi.Output<string | undefined>;
    /**
     * The HTTP proxy configuration for docker. Refer to https://docs.docker.com/network/proxy/ for details. Deprecated, assign
     * a HttpProxyPolicy to the ClusterProfile ContainerRuntimeProxyPolicy field instead.
     */
    public readonly dockerHttpProxies!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyDockerHttpProxy[]>;
    /**
     * The https proxy configuration for docker. Refer to https://docs.docker.com/network/proxy/ for details. Deprecated,
     * assign a HttpProxyPolicy to the ClusterProfile ContainerRuntimeProxyPolicy field instead.
     */
    public readonly dockerHttpsProxies!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyDockerHttpsProxy[]>;
    public readonly dockerNoProxies!: pulumi.Output<string[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyPermissionResource[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.KubernetesContainerRuntimePolicyVersionContext[]>;

    /**
     * Create a KubernetesContainerRuntimePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KubernetesContainerRuntimePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesContainerRuntimePolicyArgs | KubernetesContainerRuntimePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesContainerRuntimePolicyState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clusterProfiles"] = state ? state.clusterProfiles : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dockerBridgeNetworkCidr"] = state ? state.dockerBridgeNetworkCidr : undefined;
            resourceInputs["dockerHttpProxies"] = state ? state.dockerHttpProxies : undefined;
            resourceInputs["dockerHttpsProxies"] = state ? state.dockerHttpsProxies : undefined;
            resourceInputs["dockerNoProxies"] = state ? state.dockerNoProxies : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as KubernetesContainerRuntimePolicyArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clusterProfiles"] = args ? args.clusterProfiles : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dockerBridgeNetworkCidr"] = args ? args.dockerBridgeNetworkCidr : undefined;
            resourceInputs["dockerHttpProxies"] = args ? args.dockerHttpProxies : undefined;
            resourceInputs["dockerHttpsProxies"] = args ? args.dockerHttpsProxies : undefined;
            resourceInputs["dockerNoProxies"] = args ? args.dockerNoProxies : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesContainerRuntimePolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubernetesContainerRuntimePolicy resources.
 */
export interface KubernetesContainerRuntimePolicyState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to kubernetesClusterProfile resources.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyClusterProfile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Bridge IP (--bip) including Prefix (e.g., 172.17.0.5/24) that Docker will use for the default bridge network (docker0).
     * Containers will connect to this if no other network is configured, not used by kubernetes pods because their network is
     * managed by CNI. However this address space must not collide with other CIDRs on your networks, including the cluster's
     * Service CIDR, Pod Network CIDR and IP Pools.
     */
    dockerBridgeNetworkCidr?: pulumi.Input<string>;
    /**
     * The HTTP proxy configuration for docker. Refer to https://docs.docker.com/network/proxy/ for details. Deprecated, assign
     * a HttpProxyPolicy to the ClusterProfile ContainerRuntimeProxyPolicy field instead.
     */
    dockerHttpProxies?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyDockerHttpProxy>[]>;
    /**
     * The https proxy configuration for docker. Refer to https://docs.docker.com/network/proxy/ for details. Deprecated,
     * assign a HttpProxyPolicy to the ClusterProfile ContainerRuntimeProxyPolicy field instead.
     */
    dockerHttpsProxies?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyDockerHttpsProxy>[]>;
    dockerNoProxies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyVersionContext>[]>;
}

/**
 * The set of arguments for constructing a KubernetesContainerRuntimePolicy resource.
 */
export interface KubernetesContainerRuntimePolicyArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to kubernetesClusterProfile resources.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyClusterProfile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * Bridge IP (--bip) including Prefix (e.g., 172.17.0.5/24) that Docker will use for the default bridge network (docker0).
     * Containers will connect to this if no other network is configured, not used by kubernetes pods because their network is
     * managed by CNI. However this address space must not collide with other CIDRs on your networks, including the cluster's
     * Service CIDR, Pod Network CIDR and IP Pools.
     */
    dockerBridgeNetworkCidr?: pulumi.Input<string>;
    /**
     * The HTTP proxy configuration for docker. Refer to https://docs.docker.com/network/proxy/ for details. Deprecated, assign
     * a HttpProxyPolicy to the ClusterProfile ContainerRuntimeProxyPolicy field instead.
     */
    dockerHttpProxies?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyDockerHttpProxy>[]>;
    /**
     * The https proxy configuration for docker. Refer to https://docs.docker.com/network/proxy/ for details. Deprecated,
     * assign a HttpProxyPolicy to the ClusterProfile ContainerRuntimeProxyPolicy field instead.
     */
    dockerHttpsProxies?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyDockerHttpsProxy>[]>;
    dockerNoProxies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesContainerRuntimePolicyVersionContext>[]>;
}
