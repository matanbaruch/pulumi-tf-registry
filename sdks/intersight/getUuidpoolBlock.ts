// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getUuidpoolBlock(args?: GetUuidpoolBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetUuidpoolBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getUuidpoolBlock:getUuidpoolBlock", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "freeBlockCount": args.freeBlockCount,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "nextIdAllocator": args.nextIdAllocator,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "pool": args.pool,
        "prefix": args.prefix,
        "reservations": args.reservations,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "uuidSuffixBlock": args.uuidSuffixBlock,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUuidpoolBlock.
 */
export interface GetUuidpoolBlockArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetUuidpoolBlockAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    freeBlockCount?: number;
    id?: string;
    modTime?: string;
    moid?: string;
    nextIdAllocator?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetUuidpoolBlockParent;
    permissionResources?: inputs.GetUuidpoolBlockPermissionResource[];
    pool?: inputs.GetUuidpoolBlockPool;
    prefix?: string;
    reservations?: inputs.GetUuidpoolBlockReservation[];
    sharedScope?: string;
    tags?: inputs.GetUuidpoolBlockTag[];
    uuidSuffixBlock?: inputs.GetUuidpoolBlockUuidSuffixBlock;
    versionContext?: inputs.GetUuidpoolBlockVersionContext;
}

/**
 * A collection of values returned by getUuidpoolBlock.
 */
export interface GetUuidpoolBlockResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetUuidpoolBlockAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly freeBlockCount?: number;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nextIdAllocator?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetUuidpoolBlockParent;
    readonly permissionResources?: outputs.GetUuidpoolBlockPermissionResource[];
    readonly pool?: outputs.GetUuidpoolBlockPool;
    readonly prefix?: string;
    readonly reservations?: outputs.GetUuidpoolBlockReservation[];
    readonly results: outputs.GetUuidpoolBlockResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetUuidpoolBlockTag[];
    readonly uuidSuffixBlock?: outputs.GetUuidpoolBlockUuidSuffixBlock;
    readonly versionContext?: outputs.GetUuidpoolBlockVersionContext;
}
export function getUuidpoolBlockOutput(args?: GetUuidpoolBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUuidpoolBlockResult> {
    return pulumi.output(args).apply((a: any) => getUuidpoolBlock(a, opts))
}

/**
 * A collection of arguments for invoking getUuidpoolBlock.
 */
export interface GetUuidpoolBlockOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetUuidpoolBlockAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    freeBlockCount?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nextIdAllocator?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetUuidpoolBlockParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetUuidpoolBlockPermissionResourceArgs>[]>;
    pool?: pulumi.Input<inputs.GetUuidpoolBlockPoolArgs>;
    prefix?: pulumi.Input<string>;
    reservations?: pulumi.Input<pulumi.Input<inputs.GetUuidpoolBlockReservationArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetUuidpoolBlockTagArgs>[]>;
    uuidSuffixBlock?: pulumi.Input<inputs.GetUuidpoolBlockUuidSuffixBlockArgs>;
    versionContext?: pulumi.Input<inputs.GetUuidpoolBlockVersionContextArgs>;
}
