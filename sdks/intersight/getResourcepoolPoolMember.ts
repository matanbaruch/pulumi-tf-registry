// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getResourcepoolPoolMember(args?: GetResourcepoolPoolMemberArgs, opts?: pulumi.InvokeOptions): Promise<GetResourcepoolPoolMemberResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getResourcepoolPoolMember:getResourcepoolPoolMember", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "assigned": args.assigned,
        "assignedToEntities": args.assignedToEntities,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "features": args.features,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "peer": args.peer,
        "permissionResources": args.permissionResources,
        "pool": args.pool,
        "resource": args.resource,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getResourcepoolPoolMember.
 */
export interface GetResourcepoolPoolMemberArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetResourcepoolPoolMemberAncestor[];
    assigned?: boolean;
    assignedToEntities?: inputs.GetResourcepoolPoolMemberAssignedToEntity[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    features?: string[];
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetResourcepoolPoolMemberParent;
    peer?: inputs.GetResourcepoolPoolMemberPeer;
    permissionResources?: inputs.GetResourcepoolPoolMemberPermissionResource[];
    pool?: inputs.GetResourcepoolPoolMemberPool;
    resource?: inputs.GetResourcepoolPoolMemberResource;
    sharedScope?: string;
    tags?: inputs.GetResourcepoolPoolMemberTag[];
    versionContext?: inputs.GetResourcepoolPoolMemberVersionContext;
}

/**
 * A collection of values returned by getResourcepoolPoolMember.
 */
export interface GetResourcepoolPoolMemberResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetResourcepoolPoolMemberAncestor[];
    readonly assigned?: boolean;
    readonly assignedToEntities?: outputs.GetResourcepoolPoolMemberAssignedToEntity[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly features?: string[];
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetResourcepoolPoolMemberParent;
    readonly peer?: outputs.GetResourcepoolPoolMemberPeer;
    readonly permissionResources?: outputs.GetResourcepoolPoolMemberPermissionResource[];
    readonly pool?: outputs.GetResourcepoolPoolMemberPool;
    readonly resource?: outputs.GetResourcepoolPoolMemberResource;
    readonly results: outputs.GetResourcepoolPoolMemberResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetResourcepoolPoolMemberTag[];
    readonly versionContext?: outputs.GetResourcepoolPoolMemberVersionContext;
}
export function getResourcepoolPoolMemberOutput(args?: GetResourcepoolPoolMemberOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResourcepoolPoolMemberResult> {
    return pulumi.output(args).apply((a: any) => getResourcepoolPoolMember(a, opts))
}

/**
 * A collection of arguments for invoking getResourcepoolPoolMember.
 */
export interface GetResourcepoolPoolMemberOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetResourcepoolPoolMemberAncestorArgs>[]>;
    assigned?: pulumi.Input<boolean>;
    assignedToEntities?: pulumi.Input<pulumi.Input<inputs.GetResourcepoolPoolMemberAssignedToEntityArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    features?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetResourcepoolPoolMemberParentArgs>;
    peer?: pulumi.Input<inputs.GetResourcepoolPoolMemberPeerArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetResourcepoolPoolMemberPermissionResourceArgs>[]>;
    pool?: pulumi.Input<inputs.GetResourcepoolPoolMemberPoolArgs>;
    resource?: pulumi.Input<inputs.GetResourcepoolPoolMemberResourceArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetResourcepoolPoolMemberTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetResourcepoolPoolMemberVersionContextArgs>;
}
