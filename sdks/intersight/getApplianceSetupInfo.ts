// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceSetupInfo(args?: GetApplianceSetupInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceSetupInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceSetupInfo:getApplianceSetupInfo", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "buildType": args.buildType,
        "capabilities": args.capabilities,
        "classId": args.classId,
        "cloudUrl": args.cloudUrl,
        "createTime": args.createTime,
        "deploymentMode": args.deploymentMode,
        "domainGroupMoid": args.domainGroupMoid,
        "endTime": args.endTime,
        "id": args.id,
        "latestVersion": args.latestVersion,
        "minCpu": args.minCpu,
        "minRam": args.minRam,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "setupStates": args.setupStates,
        "sharedScope": args.sharedScope,
        "startTime": args.startTime,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceSetupInfo.
 */
export interface GetApplianceSetupInfoArgs {
    account?: inputs.GetApplianceSetupInfoAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceSetupInfoAncestor[];
    buildType?: string;
    capabilities?: inputs.GetApplianceSetupInfoCapability[];
    classId?: string;
    cloudUrl?: string;
    createTime?: string;
    deploymentMode?: string;
    domainGroupMoid?: string;
    endTime?: string;
    id?: string;
    latestVersion?: string;
    minCpu?: number;
    minRam?: number;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApplianceSetupInfoParent;
    permissionResources?: inputs.GetApplianceSetupInfoPermissionResource[];
    setupStates?: string[];
    sharedScope?: string;
    startTime?: string;
    tags?: inputs.GetApplianceSetupInfoTag[];
    versionContext?: inputs.GetApplianceSetupInfoVersionContext;
}

/**
 * A collection of values returned by getApplianceSetupInfo.
 */
export interface GetApplianceSetupInfoResult {
    readonly account?: outputs.GetApplianceSetupInfoAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceSetupInfoAncestor[];
    readonly buildType?: string;
    readonly capabilities?: outputs.GetApplianceSetupInfoCapability[];
    readonly classId?: string;
    readonly cloudUrl?: string;
    readonly createTime?: string;
    readonly deploymentMode?: string;
    readonly domainGroupMoid?: string;
    readonly endTime?: string;
    readonly id: string;
    readonly latestVersion?: string;
    readonly minCpu?: number;
    readonly minRam?: number;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceSetupInfoParent;
    readonly permissionResources?: outputs.GetApplianceSetupInfoPermissionResource[];
    readonly results: outputs.GetApplianceSetupInfoResult[];
    readonly setupStates?: string[];
    readonly sharedScope?: string;
    readonly startTime?: string;
    readonly tags?: outputs.GetApplianceSetupInfoTag[];
    readonly versionContext?: outputs.GetApplianceSetupInfoVersionContext;
}
export function getApplianceSetupInfoOutput(args?: GetApplianceSetupInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceSetupInfoResult> {
    return pulumi.output(args).apply((a: any) => getApplianceSetupInfo(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceSetupInfo.
 */
export interface GetApplianceSetupInfoOutputArgs {
    account?: pulumi.Input<inputs.GetApplianceSetupInfoAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceSetupInfoAncestorArgs>[]>;
    buildType?: pulumi.Input<string>;
    capabilities?: pulumi.Input<pulumi.Input<inputs.GetApplianceSetupInfoCapabilityArgs>[]>;
    classId?: pulumi.Input<string>;
    cloudUrl?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deploymentMode?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    endTime?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    latestVersion?: pulumi.Input<string>;
    minCpu?: pulumi.Input<number>;
    minRam?: pulumi.Input<number>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceSetupInfoParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceSetupInfoPermissionResourceArgs>[]>;
    setupStates?: pulumi.Input<pulumi.Input<string>[]>;
    sharedScope?: pulumi.Input<string>;
    startTime?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceSetupInfoTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetApplianceSetupInfoVersionContextArgs>;
}
