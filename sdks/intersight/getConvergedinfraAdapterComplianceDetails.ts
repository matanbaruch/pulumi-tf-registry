// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConvergedinfraAdapterComplianceDetails(args?: GetConvergedinfraAdapterComplianceDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetConvergedinfraAdapterComplianceDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getConvergedinfraAdapterComplianceDetails:getConvergedinfraAdapterComplianceDetails", {
        "accountMoid": args.accountMoid,
        "adapter": args.adapter,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "driverName": args.driverName,
        "driverVersion": args.driverVersion,
        "firmware": args.firmware,
        "hclStatus": args.hclStatus,
        "hclStatusReason": args.hclStatusReason,
        "id": args.id,
        "modTime": args.modTime,
        "model": args.model,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "reason": args.reason,
        "serverComplianceDetails": args.serverComplianceDetails,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "storageCompliances": args.storageCompliances,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConvergedinfraAdapterComplianceDetails.
 */
export interface GetConvergedinfraAdapterComplianceDetailsArgs {
    accountMoid?: string;
    adapter?: inputs.GetConvergedinfraAdapterComplianceDetailsAdapter;
    additionalProperties?: string;
    ancestors?: inputs.GetConvergedinfraAdapterComplianceDetailsAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    driverName?: string;
    driverVersion?: string;
    firmware?: string;
    hclStatus?: string;
    hclStatusReason?: string;
    id?: string;
    modTime?: string;
    model?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetConvergedinfraAdapterComplianceDetailsParent;
    permissionResources?: inputs.GetConvergedinfraAdapterComplianceDetailsPermissionResource[];
    reason?: string;
    serverComplianceDetails?: inputs.GetConvergedinfraAdapterComplianceDetailsServerComplianceDetails;
    sharedScope?: string;
    status?: string;
    storageCompliances?: inputs.GetConvergedinfraAdapterComplianceDetailsStorageCompliance[];
    tags?: inputs.GetConvergedinfraAdapterComplianceDetailsTag[];
    versionContext?: inputs.GetConvergedinfraAdapterComplianceDetailsVersionContext;
}

/**
 * A collection of values returned by getConvergedinfraAdapterComplianceDetails.
 */
export interface GetConvergedinfraAdapterComplianceDetailsResult {
    readonly accountMoid?: string;
    readonly adapter?: outputs.GetConvergedinfraAdapterComplianceDetailsAdapter;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetConvergedinfraAdapterComplianceDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly driverName?: string;
    readonly driverVersion?: string;
    readonly firmware?: string;
    readonly hclStatus?: string;
    readonly hclStatusReason?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly model?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetConvergedinfraAdapterComplianceDetailsParent;
    readonly permissionResources?: outputs.GetConvergedinfraAdapterComplianceDetailsPermissionResource[];
    readonly reason?: string;
    readonly results: outputs.GetConvergedinfraAdapterComplianceDetailsResult[];
    readonly serverComplianceDetails?: outputs.GetConvergedinfraAdapterComplianceDetailsServerComplianceDetails;
    readonly sharedScope?: string;
    readonly status?: string;
    readonly storageCompliances?: outputs.GetConvergedinfraAdapterComplianceDetailsStorageCompliance[];
    readonly tags?: outputs.GetConvergedinfraAdapterComplianceDetailsTag[];
    readonly versionContext?: outputs.GetConvergedinfraAdapterComplianceDetailsVersionContext;
}
export function getConvergedinfraAdapterComplianceDetailsOutput(args?: GetConvergedinfraAdapterComplianceDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConvergedinfraAdapterComplianceDetailsResult> {
    return pulumi.output(args).apply((a: any) => getConvergedinfraAdapterComplianceDetails(a, opts))
}

/**
 * A collection of arguments for invoking getConvergedinfraAdapterComplianceDetails.
 */
export interface GetConvergedinfraAdapterComplianceDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    adapter?: pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsAdapterArgs>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    driverName?: pulumi.Input<string>;
    driverVersion?: pulumi.Input<string>;
    firmware?: pulumi.Input<string>;
    hclStatus?: pulumi.Input<string>;
    hclStatusReason?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsPermissionResourceArgs>[]>;
    reason?: pulumi.Input<string>;
    serverComplianceDetails?: pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsServerComplianceDetailsArgs>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storageCompliances?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsStorageComplianceArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetConvergedinfraAdapterComplianceDetailsVersionContextArgs>;
}
