// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudAwsNetworkInterface(args?: GetCloudAwsNetworkInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudAwsNetworkInterfaceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudAwsNetworkInterface:getCloudAwsNetworkInterface", {
        "accountMoid": args.accountMoid,
        "adapterType": args.adapterType,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "awsSubnet": args.awsSubnet,
        "billingUnit": args.billingUnit,
        "cidr": args.cidr,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "identity": args.identity,
        "instanceAttachment": args.instanceAttachment,
        "macAddress": args.macAddress,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nicCreateTime": args.nicCreateTime,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "privateDnsName": args.privateDnsName,
        "privateIpAddresses": args.privateIpAddresses,
        "publicDnsName": args.publicDnsName,
        "publicIpAddresses": args.publicIpAddresses,
        "regionInfo": args.regionInfo,
        "registeredDevice": args.registeredDevice,
        "securityGroups": args.securityGroups,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "zoneInfo": args.zoneInfo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudAwsNetworkInterface.
 */
export interface GetCloudAwsNetworkInterfaceArgs {
    accountMoid?: string;
    adapterType?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCloudAwsNetworkInterfaceAncestor[];
    awsSubnet?: inputs.GetCloudAwsNetworkInterfaceAwsSubnet;
    billingUnit?: inputs.GetCloudAwsNetworkInterfaceBillingUnit;
    cidr?: string;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    identity?: string;
    instanceAttachment?: inputs.GetCloudAwsNetworkInterfaceInstanceAttachment;
    macAddress?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nicCreateTime?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudAwsNetworkInterfaceParent;
    permissionResources?: inputs.GetCloudAwsNetworkInterfacePermissionResource[];
    privateDnsName?: string;
    privateIpAddresses?: string[];
    publicDnsName?: string;
    publicIpAddresses?: string[];
    regionInfo?: inputs.GetCloudAwsNetworkInterfaceRegionInfo;
    registeredDevice?: inputs.GetCloudAwsNetworkInterfaceRegisteredDevice;
    securityGroups?: string[];
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetCloudAwsNetworkInterfaceTag[];
    versionContext?: inputs.GetCloudAwsNetworkInterfaceVersionContext;
    zoneInfo?: inputs.GetCloudAwsNetworkInterfaceZoneInfo;
}

/**
 * A collection of values returned by getCloudAwsNetworkInterface.
 */
export interface GetCloudAwsNetworkInterfaceResult {
    readonly accountMoid?: string;
    readonly adapterType?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCloudAwsNetworkInterfaceAncestor[];
    readonly awsSubnet?: outputs.GetCloudAwsNetworkInterfaceAwsSubnet;
    readonly billingUnit?: outputs.GetCloudAwsNetworkInterfaceBillingUnit;
    readonly cidr?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly identity?: string;
    readonly instanceAttachment?: outputs.GetCloudAwsNetworkInterfaceInstanceAttachment;
    readonly macAddress?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nicCreateTime?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudAwsNetworkInterfaceParent;
    readonly permissionResources?: outputs.GetCloudAwsNetworkInterfacePermissionResource[];
    readonly privateDnsName?: string;
    readonly privateIpAddresses?: string[];
    readonly publicDnsName?: string;
    readonly publicIpAddresses?: string[];
    readonly regionInfo?: outputs.GetCloudAwsNetworkInterfaceRegionInfo;
    readonly registeredDevice?: outputs.GetCloudAwsNetworkInterfaceRegisteredDevice;
    readonly results: outputs.GetCloudAwsNetworkInterfaceResult[];
    readonly securityGroups?: string[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetCloudAwsNetworkInterfaceTag[];
    readonly versionContext?: outputs.GetCloudAwsNetworkInterfaceVersionContext;
    readonly zoneInfo?: outputs.GetCloudAwsNetworkInterfaceZoneInfo;
}
export function getCloudAwsNetworkInterfaceOutput(args?: GetCloudAwsNetworkInterfaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudAwsNetworkInterfaceResult> {
    return pulumi.output(args).apply((a: any) => getCloudAwsNetworkInterface(a, opts))
}

/**
 * A collection of arguments for invoking getCloudAwsNetworkInterface.
 */
export interface GetCloudAwsNetworkInterfaceOutputArgs {
    accountMoid?: pulumi.Input<string>;
    adapterType?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsNetworkInterfaceAncestorArgs>[]>;
    awsSubnet?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceAwsSubnetArgs>;
    billingUnit?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceBillingUnitArgs>;
    cidr?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    instanceAttachment?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceInstanceAttachmentArgs>;
    macAddress?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nicCreateTime?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsNetworkInterfacePermissionResourceArgs>[]>;
    privateDnsName?: pulumi.Input<string>;
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    publicDnsName?: pulumi.Input<string>;
    publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    regionInfo?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceRegionInfoArgs>;
    registeredDevice?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceRegisteredDeviceArgs>;
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsNetworkInterfaceTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceVersionContextArgs>;
    zoneInfo?: pulumi.Input<inputs.GetCloudAwsNetworkInterfaceZoneInfoArgs>;
}
