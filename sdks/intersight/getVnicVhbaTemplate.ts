// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVnicVhbaTemplate(args?: GetVnicVhbaTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetVnicVhbaTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getVnicVhbaTemplate:getVnicVhbaTemplate", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "enableOverride": args.enableOverride,
        "fcAdapterPolicy": args.fcAdapterPolicy,
        "fcNetworkPolicy": args.fcNetworkPolicy,
        "fcQosPolicy": args.fcQosPolicy,
        "fcZonePolicies": args.fcZonePolicies,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "peerVhbaName": args.peerVhbaName,
        "permissionResources": args.permissionResources,
        "persistentBindings": args.persistentBindings,
        "pinGroupName": args.pinGroupName,
        "scpUsageCount": args.scpUsageCount,
        "sharedScope": args.sharedScope,
        "switchId": args.switchId,
        "tags": args.tags,
        "templateActions": args.templateActions,
        "type": args.type,
        "usageCount": args.usageCount,
        "versionContext": args.versionContext,
        "wwpnPool": args.wwpnPool,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getVnicVhbaTemplate.
 */
export interface GetVnicVhbaTemplateArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetVnicVhbaTemplateAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    enableOverride?: boolean;
    fcAdapterPolicy?: inputs.GetVnicVhbaTemplateFcAdapterPolicy;
    fcNetworkPolicy?: inputs.GetVnicVhbaTemplateFcNetworkPolicy;
    fcQosPolicy?: inputs.GetVnicVhbaTemplateFcQosPolicy;
    fcZonePolicies?: inputs.GetVnicVhbaTemplateFcZonePolicy[];
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetVnicVhbaTemplateOrganization;
    owners?: string[];
    parent?: inputs.GetVnicVhbaTemplateParent;
    peerVhbaName?: string;
    permissionResources?: inputs.GetVnicVhbaTemplatePermissionResource[];
    persistentBindings?: boolean;
    pinGroupName?: string;
    scpUsageCount?: number;
    sharedScope?: string;
    switchId?: string;
    tags?: inputs.GetVnicVhbaTemplateTag[];
    templateActions?: inputs.GetVnicVhbaTemplateTemplateAction[];
    type?: string;
    usageCount?: number;
    versionContext?: inputs.GetVnicVhbaTemplateVersionContext;
    wwpnPool?: inputs.GetVnicVhbaTemplateWwpnPool;
}

/**
 * A collection of values returned by getVnicVhbaTemplate.
 */
export interface GetVnicVhbaTemplateResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetVnicVhbaTemplateAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly enableOverride?: boolean;
    readonly fcAdapterPolicy?: outputs.GetVnicVhbaTemplateFcAdapterPolicy;
    readonly fcNetworkPolicy?: outputs.GetVnicVhbaTemplateFcNetworkPolicy;
    readonly fcQosPolicy?: outputs.GetVnicVhbaTemplateFcQosPolicy;
    readonly fcZonePolicies?: outputs.GetVnicVhbaTemplateFcZonePolicy[];
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetVnicVhbaTemplateOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetVnicVhbaTemplateParent;
    readonly peerVhbaName?: string;
    readonly permissionResources?: outputs.GetVnicVhbaTemplatePermissionResource[];
    readonly persistentBindings?: boolean;
    readonly pinGroupName?: string;
    readonly results: outputs.GetVnicVhbaTemplateResult[];
    readonly scpUsageCount?: number;
    readonly sharedScope?: string;
    readonly switchId?: string;
    readonly tags?: outputs.GetVnicVhbaTemplateTag[];
    readonly templateActions?: outputs.GetVnicVhbaTemplateTemplateAction[];
    readonly type?: string;
    readonly usageCount?: number;
    readonly versionContext?: outputs.GetVnicVhbaTemplateVersionContext;
    readonly wwpnPool?: outputs.GetVnicVhbaTemplateWwpnPool;
}
export function getVnicVhbaTemplateOutput(args?: GetVnicVhbaTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVnicVhbaTemplateResult> {
    return pulumi.output(args).apply((a: any) => getVnicVhbaTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getVnicVhbaTemplate.
 */
export interface GetVnicVhbaTemplateOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetVnicVhbaTemplateAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    enableOverride?: pulumi.Input<boolean>;
    fcAdapterPolicy?: pulumi.Input<inputs.GetVnicVhbaTemplateFcAdapterPolicyArgs>;
    fcNetworkPolicy?: pulumi.Input<inputs.GetVnicVhbaTemplateFcNetworkPolicyArgs>;
    fcQosPolicy?: pulumi.Input<inputs.GetVnicVhbaTemplateFcQosPolicyArgs>;
    fcZonePolicies?: pulumi.Input<pulumi.Input<inputs.GetVnicVhbaTemplateFcZonePolicyArgs>[]>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetVnicVhbaTemplateOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetVnicVhbaTemplateParentArgs>;
    peerVhbaName?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetVnicVhbaTemplatePermissionResourceArgs>[]>;
    persistentBindings?: pulumi.Input<boolean>;
    pinGroupName?: pulumi.Input<string>;
    scpUsageCount?: pulumi.Input<number>;
    sharedScope?: pulumi.Input<string>;
    switchId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetVnicVhbaTemplateTagArgs>[]>;
    templateActions?: pulumi.Input<pulumi.Input<inputs.GetVnicVhbaTemplateTemplateActionArgs>[]>;
    type?: pulumi.Input<string>;
    usageCount?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetVnicVhbaTemplateVersionContextArgs>;
    wwpnPool?: pulumi.Input<inputs.GetVnicVhbaTemplateWwpnPoolArgs>;
}
