// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAccessIpAddress(args?: GetAccessIpAddressArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessIpAddressResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getAccessIpAddress:getAccessIpAddress", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "ipv4Address": args.ipv4Address,
        "ipv4Lease": args.ipv4Lease,
        "ipv6Address": args.ipv6Address,
        "ipv6Lease": args.ipv6Lease,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "oobIpv4Address": args.oobIpv4Address,
        "oobIpv4Lease": args.oobIpv4Lease,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "profile": args.profile,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAccessIpAddress.
 */
export interface GetAccessIpAddressArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetAccessIpAddressAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    ipv4Address?: string;
    ipv4Lease?: inputs.GetAccessIpAddressIpv4Lease;
    ipv6Address?: string;
    ipv6Lease?: inputs.GetAccessIpAddressIpv6Lease;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    oobIpv4Address?: string;
    oobIpv4Lease?: inputs.GetAccessIpAddressOobIpv4Lease;
    owners?: string[];
    parent?: inputs.GetAccessIpAddressParent;
    permissionResources?: inputs.GetAccessIpAddressPermissionResource[];
    profile?: inputs.GetAccessIpAddressProfile;
    sharedScope?: string;
    tags?: inputs.GetAccessIpAddressTag[];
    versionContext?: inputs.GetAccessIpAddressVersionContext;
}

/**
 * A collection of values returned by getAccessIpAddress.
 */
export interface GetAccessIpAddressResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetAccessIpAddressAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly ipv4Address?: string;
    readonly ipv4Lease?: outputs.GetAccessIpAddressIpv4Lease;
    readonly ipv6Address?: string;
    readonly ipv6Lease?: outputs.GetAccessIpAddressIpv6Lease;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly oobIpv4Address?: string;
    readonly oobIpv4Lease?: outputs.GetAccessIpAddressOobIpv4Lease;
    readonly owners?: string[];
    readonly parent?: outputs.GetAccessIpAddressParent;
    readonly permissionResources?: outputs.GetAccessIpAddressPermissionResource[];
    readonly profile?: outputs.GetAccessIpAddressProfile;
    readonly results: outputs.GetAccessIpAddressResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetAccessIpAddressTag[];
    readonly versionContext?: outputs.GetAccessIpAddressVersionContext;
}
export function getAccessIpAddressOutput(args?: GetAccessIpAddressOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessIpAddressResult> {
    return pulumi.output(args).apply((a: any) => getAccessIpAddress(a, opts))
}

/**
 * A collection of arguments for invoking getAccessIpAddress.
 */
export interface GetAccessIpAddressOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetAccessIpAddressAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    ipv4Address?: pulumi.Input<string>;
    ipv4Lease?: pulumi.Input<inputs.GetAccessIpAddressIpv4LeaseArgs>;
    ipv6Address?: pulumi.Input<string>;
    ipv6Lease?: pulumi.Input<inputs.GetAccessIpAddressIpv6LeaseArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    oobIpv4Address?: pulumi.Input<string>;
    oobIpv4Lease?: pulumi.Input<inputs.GetAccessIpAddressOobIpv4LeaseArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetAccessIpAddressParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetAccessIpAddressPermissionResourceArgs>[]>;
    profile?: pulumi.Input<inputs.GetAccessIpAddressProfileArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetAccessIpAddressTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetAccessIpAddressVersionContextArgs>;
}
