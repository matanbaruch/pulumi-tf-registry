// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class VnicEthIf extends pulumi.CustomResource {
    /**
     * Get an existing VnicEthIf resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VnicEthIfState, opts?: pulumi.CustomResourceOptions): VnicEthIf {
        return new VnicEthIf(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/vnicEthIf:VnicEthIf';

    /**
     * Returns true if the given object is an instance of VnicEthIf.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VnicEthIf {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VnicEthIf.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.VnicEthIfAncestor[]>;
    /**
     * Consistent Device Naming configuration for the virtual NIC.
     */
    public readonly cdns!: pulumi.Output<outputs.VnicEthIfCdn[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * A reference to a vnicEthAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly ethAdapterPolicies!: pulumi.Output<outputs.VnicEthIfEthAdapterPolicy[]>;
    /**
     * A reference to a vnicEthNetworkPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly ethNetworkPolicies!: pulumi.Output<outputs.VnicEthIfEthNetworkPolicy[]>;
    /**
     * A reference to a vnicEthQosPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly ethQosPolicies!: pulumi.Output<outputs.VnicEthIfEthQosPolicy[]>;
    /**
     * A reference to a fabricEthNetworkControlPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly fabricEthNetworkControlPolicies!: pulumi.Output<outputs.VnicEthIfFabricEthNetworkControlPolicy[]>;
    /**
     * An array of relationships to fabricEthNetworkGroupPolicy resources.
     */
    public readonly fabricEthNetworkGroupPolicies!: pulumi.Output<outputs.VnicEthIfFabricEthNetworkGroupPolicy[]>;
    /**
     * Enabling failover ensures that traffic from the vNIC automatically fails over to the secondary Fabric Interconnect, in
     * case the specified Fabric Interconnect path goes down. Failover applies only to Cisco VICs that are connected to a
     * Fabric Interconnect cluster.
     */
    public readonly failoverEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a ippoolIpLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly ipLeases!: pulumi.Output<outputs.VnicEthIfIpLease[]>;
    /**
     * A reference to a vnicIscsiBootPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly iscsiBootPolicies!: pulumi.Output<outputs.VnicEthIfIscsiBootPolicy[]>;
    /**
     * Static/Pool/DHCP Type of IP address allocated to the vNIC. It is derived from iSCSI boot policy IP Address type. *
     * `None` - Type indicates that there is no IP associated to an vnic. * `DHCP` - The IP address is assigned using DHCP, if
     * available. * `Static` - Static IPv4 address is assigned to the iSCSI boot interface based on the information entered in
     * this area. * `Pool` - An IPv4 address is assigned to the iSCSI boot interface from the management IP address pool.
     */
    public readonly iscsiIpV4AddressAllocationType!: pulumi.Output<string>;
    /**
     * IPV4 configurations such as Netmask, Gateway and DNS for iSCSI vNIC.
     */
    public readonly iscsiIpV4Configs!: pulumi.Output<outputs.VnicEthIfIscsiIpV4Config[]>;
    /**
     * IP address associated to the vNIC.
     */
    public readonly iscsiIpv4Address!: pulumi.Output<string>;
    /**
     * A reference to a vnicLanConnectivityPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly lanConnectivityPolicies!: pulumi.Output<outputs.VnicEthIfLanConnectivityPolicy[]>;
    /**
     * A reference to a vnicEthIf resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly lcpVnics!: pulumi.Output<outputs.VnicEthIfLcpVnic[]>;
    /**
     * The MAC address that is assigned to the vNIC based on the MAC pool that has been assigned to the LAN Connectivity
     * Policy.
     */
    public readonly macAddress!: pulumi.Output<string>;
    /**
     * Type of allocation selected to assign a MAC address for the vnic. * `POOL` - The user selects a pool from which the
     * mac/wwn address will be leased for the Virtual Interface. * `STATIC` - The user assigns a static mac/wwn address for the
     * Virtual Interface.
     */
    public readonly macAddressType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a macpoolLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly macLeases!: pulumi.Output<outputs.VnicEthIfMacLease[]>;
    /**
     * A reference to a macpoolPool resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly macPools!: pulumi.Output<outputs.VnicEthIfMacPool[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the virtual ethernet interface.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the
     * Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The order should start from zero with no
     * overlaps. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on
     * each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1340, VIC 1380 and VIC 1385 which
     * have two.
     */
    public readonly order!: pulumi.Output<number | undefined>;
    public readonly overriddenLists!: pulumi.Output<string[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.VnicEthIfParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.VnicEthIfPermissionResource[]>;
    /**
     * Pingroup name associated to vNIC for static pinning. LCP deploy will resolve pingroup name and fetches the correspoding
     * uplink port/port channel to pin the vNIC traffic.
     */
    public readonly pinGroupName!: pulumi.Output<string | undefined>;
    /**
     * Placement Settings for the virtual interface.
     */
    public readonly placements!: pulumi.Output<outputs.VnicEthIfPlacement[]>;
    /**
     * A reference to a policyAbstractConfigProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly profiles!: pulumi.Output<outputs.VnicEthIfProfile[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * An array of relationships to vnicEthIf resources.
     */
    public readonly spVnics!: pulumi.Output<outputs.VnicEthIfSpVnic[]>;
    /**
     * A reference to a vnicVnicTemplate resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly srcTemplates!: pulumi.Output<outputs.VnicEthIfSrcTemplate[]>;
    /**
     * Single Root Input Output Virtualization (SR-IOV) Settings that enable one physical ethernet socket to appear as multiple
     * NICs to the hypervisor.
     */
    public readonly sriovSettings!: pulumi.Output<outputs.VnicEthIfSriovSetting[]>;
    /**
     * The Standby VIF Id is applicable for failover enabled vNICS. It should be the same as the channel number of the standby
     * vethernet created on switch in order to set up the standby data path.
     */
    public readonly standbyVifId!: pulumi.Output<number>;
    /**
     * The MAC address must be in hexadecimal format xx:xx:xx:xx:xx:xx. To ensure uniqueness of MACs in the LAN fabric, you are
     * strongly encouraged to use the following MAC prefix 00:25:B5:xx:xx:xx.
     */
    public readonly staticMacAddress!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.VnicEthIfTag[]>;
    public readonly templateActions!: pulumi.Output<outputs.VnicEthIfTemplateAction[]>;
    public readonly templateSyncErrors!: pulumi.Output<outputs.VnicEthIfTemplateSyncError[]>;
    /**
     * The sync status of the current MO wrt the attached Template MO. * `None` - The Enum value represents that the object is
     * not attached to any template. * `OK` - The Enum value represents that the object values are in sync with attached
     * template. * `Scheduled` - The Enum value represents that the object sync from attached template is scheduled from
     * template. * `InProgress` - The Enum value represents that the object sync with the attached template is in progress. *
     * `OutOfSync` - The Enum value represents that the object values are not in sync with attached template.
     */
    public readonly templateSyncStatus!: pulumi.Output<string>;
    /**
     * User Space NIC Settings that enable low-latency and higher throughput by bypassing the kernel layer when
     * sending/receiving packets.
     */
    public readonly usnicSettings!: pulumi.Output<outputs.VnicEthIfUsnicSetting[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.VnicEthIfVersionContext[]>;
    /**
     * The Vif Id should be same as the channel number of the vethernet created on switch in order to set up the data path. The
     * property is applicable only for FI attached servers where a vethernet is created on the switch for every vNIC.
     */
    public readonly vifId!: pulumi.Output<number>;
    /**
     * Virtual Machine Queue Settings for the virtual interface that allow efficient transfer of network traffic to the guest
     * OS.
     */
    public readonly vmqSettings!: pulumi.Output<outputs.VnicEthIfVmqSetting[]>;

    /**
     * Create a VnicEthIf resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VnicEthIfArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VnicEthIfArgs | VnicEthIfState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VnicEthIfState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["cdns"] = state ? state.cdns : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["ethAdapterPolicies"] = state ? state.ethAdapterPolicies : undefined;
            resourceInputs["ethNetworkPolicies"] = state ? state.ethNetworkPolicies : undefined;
            resourceInputs["ethQosPolicies"] = state ? state.ethQosPolicies : undefined;
            resourceInputs["fabricEthNetworkControlPolicies"] = state ? state.fabricEthNetworkControlPolicies : undefined;
            resourceInputs["fabricEthNetworkGroupPolicies"] = state ? state.fabricEthNetworkGroupPolicies : undefined;
            resourceInputs["failoverEnabled"] = state ? state.failoverEnabled : undefined;
            resourceInputs["ipLeases"] = state ? state.ipLeases : undefined;
            resourceInputs["iscsiBootPolicies"] = state ? state.iscsiBootPolicies : undefined;
            resourceInputs["iscsiIpV4AddressAllocationType"] = state ? state.iscsiIpV4AddressAllocationType : undefined;
            resourceInputs["iscsiIpV4Configs"] = state ? state.iscsiIpV4Configs : undefined;
            resourceInputs["iscsiIpv4Address"] = state ? state.iscsiIpv4Address : undefined;
            resourceInputs["lanConnectivityPolicies"] = state ? state.lanConnectivityPolicies : undefined;
            resourceInputs["lcpVnics"] = state ? state.lcpVnics : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["macAddressType"] = state ? state.macAddressType : undefined;
            resourceInputs["macLeases"] = state ? state.macLeases : undefined;
            resourceInputs["macPools"] = state ? state.macPools : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["overriddenLists"] = state ? state.overriddenLists : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["pinGroupName"] = state ? state.pinGroupName : undefined;
            resourceInputs["placements"] = state ? state.placements : undefined;
            resourceInputs["profiles"] = state ? state.profiles : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["spVnics"] = state ? state.spVnics : undefined;
            resourceInputs["srcTemplates"] = state ? state.srcTemplates : undefined;
            resourceInputs["sriovSettings"] = state ? state.sriovSettings : undefined;
            resourceInputs["standbyVifId"] = state ? state.standbyVifId : undefined;
            resourceInputs["staticMacAddress"] = state ? state.staticMacAddress : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["templateActions"] = state ? state.templateActions : undefined;
            resourceInputs["templateSyncErrors"] = state ? state.templateSyncErrors : undefined;
            resourceInputs["templateSyncStatus"] = state ? state.templateSyncStatus : undefined;
            resourceInputs["usnicSettings"] = state ? state.usnicSettings : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["vifId"] = state ? state.vifId : undefined;
            resourceInputs["vmqSettings"] = state ? state.vmqSettings : undefined;
        } else {
            const args = argsOrState as VnicEthIfArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["cdns"] = args ? args.cdns : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["ethAdapterPolicies"] = args ? args.ethAdapterPolicies : undefined;
            resourceInputs["ethNetworkPolicies"] = args ? args.ethNetworkPolicies : undefined;
            resourceInputs["ethQosPolicies"] = args ? args.ethQosPolicies : undefined;
            resourceInputs["fabricEthNetworkControlPolicies"] = args ? args.fabricEthNetworkControlPolicies : undefined;
            resourceInputs["fabricEthNetworkGroupPolicies"] = args ? args.fabricEthNetworkGroupPolicies : undefined;
            resourceInputs["failoverEnabled"] = args ? args.failoverEnabled : undefined;
            resourceInputs["ipLeases"] = args ? args.ipLeases : undefined;
            resourceInputs["iscsiBootPolicies"] = args ? args.iscsiBootPolicies : undefined;
            resourceInputs["iscsiIpV4AddressAllocationType"] = args ? args.iscsiIpV4AddressAllocationType : undefined;
            resourceInputs["iscsiIpV4Configs"] = args ? args.iscsiIpV4Configs : undefined;
            resourceInputs["iscsiIpv4Address"] = args ? args.iscsiIpv4Address : undefined;
            resourceInputs["lanConnectivityPolicies"] = args ? args.lanConnectivityPolicies : undefined;
            resourceInputs["lcpVnics"] = args ? args.lcpVnics : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["macAddressType"] = args ? args.macAddressType : undefined;
            resourceInputs["macLeases"] = args ? args.macLeases : undefined;
            resourceInputs["macPools"] = args ? args.macPools : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["overriddenLists"] = args ? args.overriddenLists : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["pinGroupName"] = args ? args.pinGroupName : undefined;
            resourceInputs["placements"] = args ? args.placements : undefined;
            resourceInputs["profiles"] = args ? args.profiles : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["spVnics"] = args ? args.spVnics : undefined;
            resourceInputs["srcTemplates"] = args ? args.srcTemplates : undefined;
            resourceInputs["sriovSettings"] = args ? args.sriovSettings : undefined;
            resourceInputs["standbyVifId"] = args ? args.standbyVifId : undefined;
            resourceInputs["staticMacAddress"] = args ? args.staticMacAddress : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["templateActions"] = args ? args.templateActions : undefined;
            resourceInputs["templateSyncErrors"] = args ? args.templateSyncErrors : undefined;
            resourceInputs["templateSyncStatus"] = args ? args.templateSyncStatus : undefined;
            resourceInputs["usnicSettings"] = args ? args.usnicSettings : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["vifId"] = args ? args.vifId : undefined;
            resourceInputs["vmqSettings"] = args ? args.vmqSettings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VnicEthIf.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering VnicEthIf resources.
 */
export interface VnicEthIfState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicEthIfAncestor>[]>;
    /**
     * Consistent Device Naming configuration for the virtual NIC.
     */
    cdns?: pulumi.Input<pulumi.Input<inputs.VnicEthIfCdn>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a vnicEthAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    ethAdapterPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfEthAdapterPolicy>[]>;
    /**
     * A reference to a vnicEthNetworkPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    ethNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfEthNetworkPolicy>[]>;
    /**
     * A reference to a vnicEthQosPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    ethQosPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfEthQosPolicy>[]>;
    /**
     * A reference to a fabricEthNetworkControlPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    fabricEthNetworkControlPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfFabricEthNetworkControlPolicy>[]>;
    /**
     * An array of relationships to fabricEthNetworkGroupPolicy resources.
     */
    fabricEthNetworkGroupPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfFabricEthNetworkGroupPolicy>[]>;
    /**
     * Enabling failover ensures that traffic from the vNIC automatically fails over to the secondary Fabric Interconnect, in
     * case the specified Fabric Interconnect path goes down. Failover applies only to Cisco VICs that are connected to a
     * Fabric Interconnect cluster.
     */
    failoverEnabled?: pulumi.Input<boolean>;
    /**
     * A reference to a ippoolIpLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    ipLeases?: pulumi.Input<pulumi.Input<inputs.VnicEthIfIpLease>[]>;
    /**
     * A reference to a vnicIscsiBootPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    iscsiBootPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfIscsiBootPolicy>[]>;
    /**
     * Static/Pool/DHCP Type of IP address allocated to the vNIC. It is derived from iSCSI boot policy IP Address type. *
     * `None` - Type indicates that there is no IP associated to an vnic. * `DHCP` - The IP address is assigned using DHCP, if
     * available. * `Static` - Static IPv4 address is assigned to the iSCSI boot interface based on the information entered in
     * this area. * `Pool` - An IPv4 address is assigned to the iSCSI boot interface from the management IP address pool.
     */
    iscsiIpV4AddressAllocationType?: pulumi.Input<string>;
    /**
     * IPV4 configurations such as Netmask, Gateway and DNS for iSCSI vNIC.
     */
    iscsiIpV4Configs?: pulumi.Input<pulumi.Input<inputs.VnicEthIfIscsiIpV4Config>[]>;
    /**
     * IP address associated to the vNIC.
     */
    iscsiIpv4Address?: pulumi.Input<string>;
    /**
     * A reference to a vnicLanConnectivityPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    lanConnectivityPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfLanConnectivityPolicy>[]>;
    /**
     * A reference to a vnicEthIf resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    lcpVnics?: pulumi.Input<pulumi.Input<inputs.VnicEthIfLcpVnic>[]>;
    /**
     * The MAC address that is assigned to the vNIC based on the MAC pool that has been assigned to the LAN Connectivity
     * Policy.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Type of allocation selected to assign a MAC address for the vnic. * `POOL` - The user selects a pool from which the
     * mac/wwn address will be leased for the Virtual Interface. * `STATIC` - The user assigns a static mac/wwn address for the
     * Virtual Interface.
     */
    macAddressType?: pulumi.Input<string>;
    /**
     * A reference to a macpoolLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    macLeases?: pulumi.Input<pulumi.Input<inputs.VnicEthIfMacLease>[]>;
    /**
     * A reference to a macpoolPool resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    macPools?: pulumi.Input<pulumi.Input<inputs.VnicEthIfMacPool>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the virtual ethernet interface.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the
     * Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The order should start from zero with no
     * overlaps. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on
     * each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1340, VIC 1380 and VIC 1385 which
     * have two.
     */
    order?: pulumi.Input<number>;
    overriddenLists?: pulumi.Input<pulumi.Input<string>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicEthIfParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicEthIfPermissionResource>[]>;
    /**
     * Pingroup name associated to vNIC for static pinning. LCP deploy will resolve pingroup name and fetches the correspoding
     * uplink port/port channel to pin the vNIC traffic.
     */
    pinGroupName?: pulumi.Input<string>;
    /**
     * Placement Settings for the virtual interface.
     */
    placements?: pulumi.Input<pulumi.Input<inputs.VnicEthIfPlacement>[]>;
    /**
     * A reference to a policyAbstractConfigProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    profiles?: pulumi.Input<pulumi.Input<inputs.VnicEthIfProfile>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * An array of relationships to vnicEthIf resources.
     */
    spVnics?: pulumi.Input<pulumi.Input<inputs.VnicEthIfSpVnic>[]>;
    /**
     * A reference to a vnicVnicTemplate resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.VnicEthIfSrcTemplate>[]>;
    /**
     * Single Root Input Output Virtualization (SR-IOV) Settings that enable one physical ethernet socket to appear as multiple
     * NICs to the hypervisor.
     */
    sriovSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthIfSriovSetting>[]>;
    /**
     * The Standby VIF Id is applicable for failover enabled vNICS. It should be the same as the channel number of the standby
     * vethernet created on switch in order to set up the standby data path.
     */
    standbyVifId?: pulumi.Input<number>;
    /**
     * The MAC address must be in hexadecimal format xx:xx:xx:xx:xx:xx. To ensure uniqueness of MACs in the LAN fabric, you are
     * strongly encouraged to use the following MAC prefix 00:25:B5:xx:xx:xx.
     */
    staticMacAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicEthIfTag>[]>;
    templateActions?: pulumi.Input<pulumi.Input<inputs.VnicEthIfTemplateAction>[]>;
    templateSyncErrors?: pulumi.Input<pulumi.Input<inputs.VnicEthIfTemplateSyncError>[]>;
    /**
     * The sync status of the current MO wrt the attached Template MO. * `None` - The Enum value represents that the object is
     * not attached to any template. * `OK` - The Enum value represents that the object values are in sync with attached
     * template. * `Scheduled` - The Enum value represents that the object sync from attached template is scheduled from
     * template. * `InProgress` - The Enum value represents that the object sync with the attached template is in progress. *
     * `OutOfSync` - The Enum value represents that the object values are not in sync with attached template.
     */
    templateSyncStatus?: pulumi.Input<string>;
    /**
     * User Space NIC Settings that enable low-latency and higher throughput by bypassing the kernel layer when
     * sending/receiving packets.
     */
    usnicSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthIfUsnicSetting>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicEthIfVersionContext>[]>;
    /**
     * The Vif Id should be same as the channel number of the vethernet created on switch in order to set up the data path. The
     * property is applicable only for FI attached servers where a vethernet is created on the switch for every vNIC.
     */
    vifId?: pulumi.Input<number>;
    /**
     * Virtual Machine Queue Settings for the virtual interface that allow efficient transfer of network traffic to the guest
     * OS.
     */
    vmqSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthIfVmqSetting>[]>;
}

/**
 * The set of arguments for constructing a VnicEthIf resource.
 */
export interface VnicEthIfArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.VnicEthIfAncestor>[]>;
    /**
     * Consistent Device Naming configuration for the virtual NIC.
     */
    cdns?: pulumi.Input<pulumi.Input<inputs.VnicEthIfCdn>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a vnicEthAdapterPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    ethAdapterPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfEthAdapterPolicy>[]>;
    /**
     * A reference to a vnicEthNetworkPolicy resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    ethNetworkPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfEthNetworkPolicy>[]>;
    /**
     * A reference to a vnicEthQosPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    ethQosPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfEthQosPolicy>[]>;
    /**
     * A reference to a fabricEthNetworkControlPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    fabricEthNetworkControlPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfFabricEthNetworkControlPolicy>[]>;
    /**
     * An array of relationships to fabricEthNetworkGroupPolicy resources.
     */
    fabricEthNetworkGroupPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfFabricEthNetworkGroupPolicy>[]>;
    /**
     * Enabling failover ensures that traffic from the vNIC automatically fails over to the secondary Fabric Interconnect, in
     * case the specified Fabric Interconnect path goes down. Failover applies only to Cisco VICs that are connected to a
     * Fabric Interconnect cluster.
     */
    failoverEnabled?: pulumi.Input<boolean>;
    /**
     * A reference to a ippoolIpLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    ipLeases?: pulumi.Input<pulumi.Input<inputs.VnicEthIfIpLease>[]>;
    /**
     * A reference to a vnicIscsiBootPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    iscsiBootPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfIscsiBootPolicy>[]>;
    /**
     * Static/Pool/DHCP Type of IP address allocated to the vNIC. It is derived from iSCSI boot policy IP Address type. *
     * `None` - Type indicates that there is no IP associated to an vnic. * `DHCP` - The IP address is assigned using DHCP, if
     * available. * `Static` - Static IPv4 address is assigned to the iSCSI boot interface based on the information entered in
     * this area. * `Pool` - An IPv4 address is assigned to the iSCSI boot interface from the management IP address pool.
     */
    iscsiIpV4AddressAllocationType?: pulumi.Input<string>;
    /**
     * IPV4 configurations such as Netmask, Gateway and DNS for iSCSI vNIC.
     */
    iscsiIpV4Configs?: pulumi.Input<pulumi.Input<inputs.VnicEthIfIscsiIpV4Config>[]>;
    /**
     * IP address associated to the vNIC.
     */
    iscsiIpv4Address?: pulumi.Input<string>;
    /**
     * A reference to a vnicLanConnectivityPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    lanConnectivityPolicies?: pulumi.Input<pulumi.Input<inputs.VnicEthIfLanConnectivityPolicy>[]>;
    /**
     * A reference to a vnicEthIf resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    lcpVnics?: pulumi.Input<pulumi.Input<inputs.VnicEthIfLcpVnic>[]>;
    /**
     * The MAC address that is assigned to the vNIC based on the MAC pool that has been assigned to the LAN Connectivity
     * Policy.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Type of allocation selected to assign a MAC address for the vnic. * `POOL` - The user selects a pool from which the
     * mac/wwn address will be leased for the Virtual Interface. * `STATIC` - The user assigns a static mac/wwn address for the
     * Virtual Interface.
     */
    macAddressType?: pulumi.Input<string>;
    /**
     * A reference to a macpoolLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    macLeases?: pulumi.Input<pulumi.Input<inputs.VnicEthIfMacLease>[]>;
    /**
     * A reference to a macpoolPool resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    macPools?: pulumi.Input<pulumi.Input<inputs.VnicEthIfMacPool>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the virtual ethernet interface.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * The order in which the virtual interface is brought up. The order assigned to an interface should be unique for all the
     * Ethernet and Fibre-Channel interfaces on each PCI link on a VIC adapter. The order should start from zero with no
     * overlaps. The maximum value of PCI order is limited by the number of virtual interfaces (Ethernet and Fibre-Channel) on
     * each PCI link on a VIC adapter. All VIC adapters have a single PCI link except VIC 1340, VIC 1380 and VIC 1385 which
     * have two.
     */
    order?: pulumi.Input<number>;
    overriddenLists?: pulumi.Input<pulumi.Input<string>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.VnicEthIfParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.VnicEthIfPermissionResource>[]>;
    /**
     * Pingroup name associated to vNIC for static pinning. LCP deploy will resolve pingroup name and fetches the correspoding
     * uplink port/port channel to pin the vNIC traffic.
     */
    pinGroupName?: pulumi.Input<string>;
    /**
     * Placement Settings for the virtual interface.
     */
    placements?: pulumi.Input<pulumi.Input<inputs.VnicEthIfPlacement>[]>;
    /**
     * A reference to a policyAbstractConfigProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    profiles?: pulumi.Input<pulumi.Input<inputs.VnicEthIfProfile>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * An array of relationships to vnicEthIf resources.
     */
    spVnics?: pulumi.Input<pulumi.Input<inputs.VnicEthIfSpVnic>[]>;
    /**
     * A reference to a vnicVnicTemplate resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.VnicEthIfSrcTemplate>[]>;
    /**
     * Single Root Input Output Virtualization (SR-IOV) Settings that enable one physical ethernet socket to appear as multiple
     * NICs to the hypervisor.
     */
    sriovSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthIfSriovSetting>[]>;
    /**
     * The Standby VIF Id is applicable for failover enabled vNICS. It should be the same as the channel number of the standby
     * vethernet created on switch in order to set up the standby data path.
     */
    standbyVifId?: pulumi.Input<number>;
    /**
     * The MAC address must be in hexadecimal format xx:xx:xx:xx:xx:xx. To ensure uniqueness of MACs in the LAN fabric, you are
     * strongly encouraged to use the following MAC prefix 00:25:B5:xx:xx:xx.
     */
    staticMacAddress?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.VnicEthIfTag>[]>;
    templateActions?: pulumi.Input<pulumi.Input<inputs.VnicEthIfTemplateAction>[]>;
    templateSyncErrors?: pulumi.Input<pulumi.Input<inputs.VnicEthIfTemplateSyncError>[]>;
    /**
     * The sync status of the current MO wrt the attached Template MO. * `None` - The Enum value represents that the object is
     * not attached to any template. * `OK` - The Enum value represents that the object values are in sync with attached
     * template. * `Scheduled` - The Enum value represents that the object sync from attached template is scheduled from
     * template. * `InProgress` - The Enum value represents that the object sync with the attached template is in progress. *
     * `OutOfSync` - The Enum value represents that the object values are not in sync with attached template.
     */
    templateSyncStatus?: pulumi.Input<string>;
    /**
     * User Space NIC Settings that enable low-latency and higher throughput by bypassing the kernel layer when
     * sending/receiving packets.
     */
    usnicSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthIfUsnicSetting>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.VnicEthIfVersionContext>[]>;
    /**
     * The Vif Id should be same as the channel number of the vethernet created on switch in order to set up the data path. The
     * property is applicable only for FI attached servers where a vethernet is created on the switch for every vNIC.
     */
    vifId?: pulumi.Input<number>;
    /**
     * Virtual Machine Queue Settings for the virtual interface that allow efficient transfer of network traffic to the guest
     * OS.
     */
    vmqSettings?: pulumi.Input<pulumi.Input<inputs.VnicEthIfVmqSetting>[]>;
}
