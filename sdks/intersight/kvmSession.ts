// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KvmSession extends pulumi.CustomResource {
    /**
     * Get an existing KvmSession resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KvmSessionState, opts?: pulumi.CustomResourceOptions): KvmSession {
        return new KvmSession(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/kvmSession:KvmSession';

    /**
     * Returns true if the given object is an instance of KvmSession.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KvmSession {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KvmSession.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.KvmSessionAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The user agent IP address from which the session is launched.
     */
    public readonly clientIpAddress!: pulumi.Output<string>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly devices!: pulumi.Output<outputs.KvmSessionDevice[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The time at which the session ended.
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * One time URL that is used to launch the vKVM console.
     */
    public readonly kvmLaunchUrlPath!: pulumi.Output<string | undefined>;
    /**
     * Unique ID of the KVM Session URI.
     */
    public readonly kvmSessionId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * Temporary one-time password for vKVM access.
     */
    public readonly oneTimePassword!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.KvmSessionParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.KvmSessionPermissionResource[]>;
    /**
     * Role of the user who launched the session.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * A reference to a computePhysical resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly servers!: pulumi.Output<outputs.KvmSessionServer[]>;
    /**
     * A reference to a sessionAbstractSession resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly sessions!: pulumi.Output<outputs.KvmSessionSession[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Indicates if vKVM SSO is supported on the server.
     */
    public readonly ssoSupported!: pulumi.Output<boolean>;
    /**
     * The status of the session. * `Active` - The session is currently active. * `Ended` - The session has ended normally. *
     * `Terminated` - The session was terminated by an admin.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.KvmSessionTag[]>;
    /**
     * Name of target on which session is initiated.
     */
    public readonly targetName!: pulumi.Output<string>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly targets!: pulumi.Output<outputs.KvmSessionTarget[]>;
    /**
     * A reference to a kvmTunnel resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly tunnels!: pulumi.Output<outputs.KvmSessionTunnel[]>;
    /**
     * User ID or E-mail Address of the user who launched the session.
     */
    public readonly userIdOrEmail!: pulumi.Output<string>;
    /**
     * Username used for vKVM access.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * A reference to a iamUser resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly users!: pulumi.Output<outputs.KvmSessionUser[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.KvmSessionVersionContext[]>;

    /**
     * Create a KvmSession resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KvmSessionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KvmSessionArgs | KvmSessionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KvmSessionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clientIpAddress"] = state ? state.clientIpAddress : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["devices"] = state ? state.devices : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["kvmLaunchUrlPath"] = state ? state.kvmLaunchUrlPath : undefined;
            resourceInputs["kvmSessionId"] = state ? state.kvmSessionId : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["oneTimePassword"] = state ? state.oneTimePassword : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sessions"] = state ? state.sessions : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["ssoSupported"] = state ? state.ssoSupported : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetName"] = state ? state.targetName : undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
            resourceInputs["tunnels"] = state ? state.tunnels : undefined;
            resourceInputs["userIdOrEmail"] = state ? state.userIdOrEmail : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["users"] = state ? state.users : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as KvmSessionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clientIpAddress"] = args ? args.clientIpAddress : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["devices"] = args ? args.devices : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["kvmLaunchUrlPath"] = args ? args.kvmLaunchUrlPath : undefined;
            resourceInputs["kvmSessionId"] = args ? args.kvmSessionId : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["oneTimePassword"] = args ? args.oneTimePassword : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sessions"] = args ? args.sessions : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["ssoSupported"] = args ? args.ssoSupported : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetName"] = args ? args.targetName : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["tunnels"] = args ? args.tunnels : undefined;
            resourceInputs["userIdOrEmail"] = args ? args.userIdOrEmail : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["users"] = args ? args.users : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KvmSession.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KvmSession resources.
 */
export interface KvmSessionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KvmSessionAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The user agent IP address from which the session is launched.
     */
    clientIpAddress?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.KvmSessionDevice>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time at which the session ended.
     */
    endTime?: pulumi.Input<string>;
    /**
     * One time URL that is used to launch the vKVM console.
     */
    kvmLaunchUrlPath?: pulumi.Input<string>;
    /**
     * Unique ID of the KVM Session URI.
     */
    kvmSessionId?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Temporary one-time password for vKVM access.
     */
    oneTimePassword?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KvmSessionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KvmSessionPermissionResource>[]>;
    /**
     * Role of the user who launched the session.
     */
    role?: pulumi.Input<string>;
    /**
     * A reference to a computePhysical resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.KvmSessionServer>[]>;
    /**
     * A reference to a sessionAbstractSession resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    sessions?: pulumi.Input<pulumi.Input<inputs.KvmSessionSession>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Indicates if vKVM SSO is supported on the server.
     */
    ssoSupported?: pulumi.Input<boolean>;
    /**
     * The status of the session. * `Active` - The session is currently active. * `Ended` - The session has ended normally. *
     * `Terminated` - The session was terminated by an admin.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.KvmSessionTag>[]>;
    /**
     * Name of target on which session is initiated.
     */
    targetName?: pulumi.Input<string>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.KvmSessionTarget>[]>;
    /**
     * A reference to a kvmTunnel resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    tunnels?: pulumi.Input<pulumi.Input<inputs.KvmSessionTunnel>[]>;
    /**
     * User ID or E-mail Address of the user who launched the session.
     */
    userIdOrEmail?: pulumi.Input<string>;
    /**
     * Username used for vKVM access.
     */
    username?: pulumi.Input<string>;
    /**
     * A reference to a iamUser resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    users?: pulumi.Input<pulumi.Input<inputs.KvmSessionUser>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KvmSessionVersionContext>[]>;
}

/**
 * The set of arguments for constructing a KvmSession resource.
 */
export interface KvmSessionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KvmSessionAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The user agent IP address from which the session is launched.
     */
    clientIpAddress?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.KvmSessionDevice>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time at which the session ended.
     */
    endTime?: pulumi.Input<string>;
    /**
     * One time URL that is used to launch the vKVM console.
     */
    kvmLaunchUrlPath?: pulumi.Input<string>;
    /**
     * Unique ID of the KVM Session URI.
     */
    kvmSessionId?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Temporary one-time password for vKVM access.
     */
    oneTimePassword?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KvmSessionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KvmSessionPermissionResource>[]>;
    /**
     * Role of the user who launched the session.
     */
    role?: pulumi.Input<string>;
    /**
     * A reference to a computePhysical resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.KvmSessionServer>[]>;
    /**
     * A reference to a sessionAbstractSession resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    sessions?: pulumi.Input<pulumi.Input<inputs.KvmSessionSession>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Indicates if vKVM SSO is supported on the server.
     */
    ssoSupported?: pulumi.Input<boolean>;
    /**
     * The status of the session. * `Active` - The session is currently active. * `Ended` - The session has ended normally. *
     * `Terminated` - The session was terminated by an admin.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.KvmSessionTag>[]>;
    /**
     * Name of target on which session is initiated.
     */
    targetName?: pulumi.Input<string>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.KvmSessionTarget>[]>;
    /**
     * A reference to a kvmTunnel resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    tunnels?: pulumi.Input<pulumi.Input<inputs.KvmSessionTunnel>[]>;
    /**
     * User ID or E-mail Address of the user who launched the session.
     */
    userIdOrEmail?: pulumi.Input<string>;
    /**
     * Username used for vKVM access.
     */
    username?: pulumi.Input<string>;
    /**
     * A reference to a iamUser resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    users?: pulumi.Input<pulumi.Input<inputs.KvmSessionUser>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KvmSessionVersionContext>[]>;
}
