// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDeviceconnectorPolicy(args?: GetDeviceconnectorPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceconnectorPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getDeviceconnectorPolicy:getDeviceconnectorPolicy", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "lockoutEnabled": args.lockoutEnabled,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "profiles": args.profiles,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getDeviceconnectorPolicy.
 */
export interface GetDeviceconnectorPolicyArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetDeviceconnectorPolicyAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    lockoutEnabled?: boolean;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetDeviceconnectorPolicyOrganization;
    owners?: string[];
    parent?: inputs.GetDeviceconnectorPolicyParent;
    permissionResources?: inputs.GetDeviceconnectorPolicyPermissionResource[];
    profiles?: inputs.GetDeviceconnectorPolicyProfile[];
    sharedScope?: string;
    tags?: inputs.GetDeviceconnectorPolicyTag[];
    versionContext?: inputs.GetDeviceconnectorPolicyVersionContext;
}

/**
 * A collection of values returned by getDeviceconnectorPolicy.
 */
export interface GetDeviceconnectorPolicyResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetDeviceconnectorPolicyAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly lockoutEnabled?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetDeviceconnectorPolicyOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetDeviceconnectorPolicyParent;
    readonly permissionResources?: outputs.GetDeviceconnectorPolicyPermissionResource[];
    readonly profiles?: outputs.GetDeviceconnectorPolicyProfile[];
    readonly results: outputs.GetDeviceconnectorPolicyResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetDeviceconnectorPolicyTag[];
    readonly versionContext?: outputs.GetDeviceconnectorPolicyVersionContext;
}
export function getDeviceconnectorPolicyOutput(args?: GetDeviceconnectorPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeviceconnectorPolicyResult> {
    return pulumi.output(args).apply((a: any) => getDeviceconnectorPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getDeviceconnectorPolicy.
 */
export interface GetDeviceconnectorPolicyOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetDeviceconnectorPolicyAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    lockoutEnabled?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetDeviceconnectorPolicyOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetDeviceconnectorPolicyParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetDeviceconnectorPolicyPermissionResourceArgs>[]>;
    profiles?: pulumi.Input<pulumi.Input<inputs.GetDeviceconnectorPolicyProfileArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetDeviceconnectorPolicyTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetDeviceconnectorPolicyVersionContextArgs>;
}
