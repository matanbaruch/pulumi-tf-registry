// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexSoftwareDistributionComponent(args?: GetHyperflexSoftwareDistributionComponentArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexSoftwareDistributionComponentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexSoftwareDistributionComponent:getHyperflexSoftwareDistributionComponent", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "bucketName": args.bucketName,
        "classId": args.classId,
        "componentId": args.componentId,
        "componentName": args.componentName,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "filePath": args.filePath,
        "filesToDownloads": args.filesToDownloads,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "softwareDistributionVersion": args.softwareDistributionVersion,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexSoftwareDistributionComponent.
 */
export interface GetHyperflexSoftwareDistributionComponentArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexSoftwareDistributionComponentAncestor[];
    bucketName?: string;
    classId?: string;
    componentId?: string;
    componentName?: string;
    createTime?: string;
    domainGroupMoid?: string;
    filePath?: string;
    filesToDownloads?: string[];
    id?: string;
    modTime?: string;
    moid?: string;
    nrVersion?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexSoftwareDistributionComponentParent;
    permissionResources?: inputs.GetHyperflexSoftwareDistributionComponentPermissionResource[];
    sharedScope?: string;
    softwareDistributionVersion?: inputs.GetHyperflexSoftwareDistributionComponentSoftwareDistributionVersion;
    tags?: inputs.GetHyperflexSoftwareDistributionComponentTag[];
    versionContext?: inputs.GetHyperflexSoftwareDistributionComponentVersionContext;
}

/**
 * A collection of values returned by getHyperflexSoftwareDistributionComponent.
 */
export interface GetHyperflexSoftwareDistributionComponentResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexSoftwareDistributionComponentAncestor[];
    readonly bucketName?: string;
    readonly classId?: string;
    readonly componentId?: string;
    readonly componentName?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly filePath?: string;
    readonly filesToDownloads?: string[];
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nrVersion?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexSoftwareDistributionComponentParent;
    readonly permissionResources?: outputs.GetHyperflexSoftwareDistributionComponentPermissionResource[];
    readonly results: outputs.GetHyperflexSoftwareDistributionComponentResult[];
    readonly sharedScope?: string;
    readonly softwareDistributionVersion?: outputs.GetHyperflexSoftwareDistributionComponentSoftwareDistributionVersion;
    readonly tags?: outputs.GetHyperflexSoftwareDistributionComponentTag[];
    readonly versionContext?: outputs.GetHyperflexSoftwareDistributionComponentVersionContext;
}
export function getHyperflexSoftwareDistributionComponentOutput(args?: GetHyperflexSoftwareDistributionComponentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexSoftwareDistributionComponentResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexSoftwareDistributionComponent(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexSoftwareDistributionComponent.
 */
export interface GetHyperflexSoftwareDistributionComponentOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexSoftwareDistributionComponentAncestorArgs>[]>;
    bucketName?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    componentId?: pulumi.Input<string>;
    componentName?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    filePath?: pulumi.Input<string>;
    filesToDownloads?: pulumi.Input<pulumi.Input<string>[]>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexSoftwareDistributionComponentParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexSoftwareDistributionComponentPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    softwareDistributionVersion?: pulumi.Input<inputs.GetHyperflexSoftwareDistributionComponentSoftwareDistributionVersionArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexSoftwareDistributionComponentTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetHyperflexSoftwareDistributionComponentVersionContextArgs>;
}
