// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBiosBootMode(args?: GetBiosBootModeArgs, opts?: pulumi.InvokeOptions): Promise<GetBiosBootModeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getBiosBootMode:getBiosBootMode", {
        "accountMoid": args.accountMoid,
        "actualBootMode": args.actualBootMode,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "computeBlade": args.computeBlade,
        "computeRackUnit": args.computeRackUnit,
        "createTime": args.createTime,
        "deviceMoId": args.deviceMoId,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inventoryDeviceInfo": args.inventoryDeviceInfo,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "rn": args.rn,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBiosBootMode.
 */
export interface GetBiosBootModeArgs {
    accountMoid?: string;
    actualBootMode?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetBiosBootModeAncestor[];
    classId?: string;
    computeBlade?: inputs.GetBiosBootModeComputeBlade;
    computeRackUnit?: inputs.GetBiosBootModeComputeRackUnit;
    createTime?: string;
    deviceMoId?: string;
    dn?: string;
    domainGroupMoid?: string;
    id?: string;
    inventoryDeviceInfo?: inputs.GetBiosBootModeInventoryDeviceInfo;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetBiosBootModeParent;
    permissionResources?: inputs.GetBiosBootModePermissionResource[];
    registeredDevice?: inputs.GetBiosBootModeRegisteredDevice;
    rn?: string;
    sharedScope?: string;
    tags?: inputs.GetBiosBootModeTag[];
    versionContext?: inputs.GetBiosBootModeVersionContext;
}

/**
 * A collection of values returned by getBiosBootMode.
 */
export interface GetBiosBootModeResult {
    readonly accountMoid?: string;
    readonly actualBootMode?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetBiosBootModeAncestor[];
    readonly classId?: string;
    readonly computeBlade?: outputs.GetBiosBootModeComputeBlade;
    readonly computeRackUnit?: outputs.GetBiosBootModeComputeRackUnit;
    readonly createTime?: string;
    readonly deviceMoId?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inventoryDeviceInfo?: outputs.GetBiosBootModeInventoryDeviceInfo;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetBiosBootModeParent;
    readonly permissionResources?: outputs.GetBiosBootModePermissionResource[];
    readonly registeredDevice?: outputs.GetBiosBootModeRegisteredDevice;
    readonly results: outputs.GetBiosBootModeResult[];
    readonly rn?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetBiosBootModeTag[];
    readonly versionContext?: outputs.GetBiosBootModeVersionContext;
}
export function getBiosBootModeOutput(args?: GetBiosBootModeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBiosBootModeResult> {
    return pulumi.output(args).apply((a: any) => getBiosBootMode(a, opts))
}

/**
 * A collection of arguments for invoking getBiosBootMode.
 */
export interface GetBiosBootModeOutputArgs {
    accountMoid?: pulumi.Input<string>;
    actualBootMode?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetBiosBootModeAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    computeBlade?: pulumi.Input<inputs.GetBiosBootModeComputeBladeArgs>;
    computeRackUnit?: pulumi.Input<inputs.GetBiosBootModeComputeRackUnitArgs>;
    createTime?: pulumi.Input<string>;
    deviceMoId?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventoryDeviceInfo?: pulumi.Input<inputs.GetBiosBootModeInventoryDeviceInfoArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetBiosBootModeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetBiosBootModePermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetBiosBootModeRegisteredDeviceArgs>;
    rn?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetBiosBootModeTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetBiosBootModeVersionContextArgs>;
}
