// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryMsoEpgDetails(args?: GetNiatelemetryMsoEpgDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryMsoEpgDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryMsoEpgDetails:getNiatelemetryMsoEpgDetails", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "deployedSites": args.deployedSites,
        "domainGroupMoid": args.domainGroupMoid,
        "epgName": args.epgName,
        "id": args.id,
        "isLocal": args.isLocal,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "reference": args.reference,
        "registeredDevice": args.registeredDevice,
        "schemaId": args.schemaId,
        "schemaName": args.schemaName,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "templateName": args.templateName,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryMsoEpgDetails.
 */
export interface GetNiatelemetryMsoEpgDetailsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiatelemetryMsoEpgDetailsAncestor[];
    classId?: string;
    createTime?: string;
    deployedSites?: string;
    domainGroupMoid?: string;
    epgName?: string;
    id?: string;
    isLocal?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryMsoEpgDetailsParent;
    permissionResources?: inputs.GetNiatelemetryMsoEpgDetailsPermissionResource[];
    reference?: string;
    registeredDevice?: inputs.GetNiatelemetryMsoEpgDetailsRegisteredDevice;
    schemaId?: string;
    schemaName?: string;
    sharedScope?: string;
    tags?: inputs.GetNiatelemetryMsoEpgDetailsTag[];
    templateName?: string;
    versionContext?: inputs.GetNiatelemetryMsoEpgDetailsVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryMsoEpgDetails.
 */
export interface GetNiatelemetryMsoEpgDetailsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiatelemetryMsoEpgDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly deployedSites?: string;
    readonly domainGroupMoid?: string;
    readonly epgName?: string;
    readonly id: string;
    readonly isLocal?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryMsoEpgDetailsParent;
    readonly permissionResources?: outputs.GetNiatelemetryMsoEpgDetailsPermissionResource[];
    readonly reference?: string;
    readonly registeredDevice?: outputs.GetNiatelemetryMsoEpgDetailsRegisteredDevice;
    readonly results: outputs.GetNiatelemetryMsoEpgDetailsResult[];
    readonly schemaId?: string;
    readonly schemaName?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetNiatelemetryMsoEpgDetailsTag[];
    readonly templateName?: string;
    readonly versionContext?: outputs.GetNiatelemetryMsoEpgDetailsVersionContext;
}
export function getNiatelemetryMsoEpgDetailsOutput(args?: GetNiatelemetryMsoEpgDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryMsoEpgDetailsResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryMsoEpgDetails(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryMsoEpgDetails.
 */
export interface GetNiatelemetryMsoEpgDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryMsoEpgDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deployedSites?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    epgName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isLocal?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryMsoEpgDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryMsoEpgDetailsPermissionResourceArgs>[]>;
    reference?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetryMsoEpgDetailsRegisteredDeviceArgs>;
    schemaId?: pulumi.Input<string>;
    schemaName?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryMsoEpgDetailsTagArgs>[]>;
    templateName?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryMsoEpgDetailsVersionContextArgs>;
}
