// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHclHyperflexSoftwareCompatibilityInfo(args?: GetHclHyperflexSoftwareCompatibilityInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetHclHyperflexSoftwareCompatibilityInfoResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHclHyperflexSoftwareCompatibilityInfo:getHclHyperflexSoftwareCompatibilityInfo", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "appCatalog": args.appCatalog,
        "classId": args.classId,
        "constraints": args.constraints,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "hxdpVersion": args.hxdpVersion,
        "hypervisorType": args.hypervisorType,
        "hypervisorVersion": args.hypervisorVersion,
        "id": args.id,
        "isMgmtBuild": args.isMgmtBuild,
        "maxMgmtVersion": args.maxMgmtVersion,
        "minMgmtVersion": args.minMgmtVersion,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "serverFwVersion": args.serverFwVersion,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHclHyperflexSoftwareCompatibilityInfo.
 */
export interface GetHclHyperflexSoftwareCompatibilityInfoArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHclHyperflexSoftwareCompatibilityInfoAncestor[];
    appCatalog?: inputs.GetHclHyperflexSoftwareCompatibilityInfoAppCatalog;
    classId?: string;
    constraints?: inputs.GetHclHyperflexSoftwareCompatibilityInfoConstraint[];
    createTime?: string;
    domainGroupMoid?: string;
    hxdpVersion?: string;
    hypervisorType?: string;
    hypervisorVersion?: string;
    id?: string;
    isMgmtBuild?: string;
    maxMgmtVersion?: string;
    minMgmtVersion?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHclHyperflexSoftwareCompatibilityInfoParent;
    permissionResources?: inputs.GetHclHyperflexSoftwareCompatibilityInfoPermissionResource[];
    serverFwVersion?: string;
    sharedScope?: string;
    tags?: inputs.GetHclHyperflexSoftwareCompatibilityInfoTag[];
    versionContext?: inputs.GetHclHyperflexSoftwareCompatibilityInfoVersionContext;
}

/**
 * A collection of values returned by getHclHyperflexSoftwareCompatibilityInfo.
 */
export interface GetHclHyperflexSoftwareCompatibilityInfoResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHclHyperflexSoftwareCompatibilityInfoAncestor[];
    readonly appCatalog?: outputs.GetHclHyperflexSoftwareCompatibilityInfoAppCatalog;
    readonly classId?: string;
    readonly constraints?: outputs.GetHclHyperflexSoftwareCompatibilityInfoConstraint[];
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly hxdpVersion?: string;
    readonly hypervisorType?: string;
    readonly hypervisorVersion?: string;
    readonly id: string;
    readonly isMgmtBuild?: string;
    readonly maxMgmtVersion?: string;
    readonly minMgmtVersion?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHclHyperflexSoftwareCompatibilityInfoParent;
    readonly permissionResources?: outputs.GetHclHyperflexSoftwareCompatibilityInfoPermissionResource[];
    readonly results: outputs.GetHclHyperflexSoftwareCompatibilityInfoResult[];
    readonly serverFwVersion?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHclHyperflexSoftwareCompatibilityInfoTag[];
    readonly versionContext?: outputs.GetHclHyperflexSoftwareCompatibilityInfoVersionContext;
}
export function getHclHyperflexSoftwareCompatibilityInfoOutput(args?: GetHclHyperflexSoftwareCompatibilityInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHclHyperflexSoftwareCompatibilityInfoResult> {
    return pulumi.output(args).apply((a: any) => getHclHyperflexSoftwareCompatibilityInfo(a, opts))
}

/**
 * A collection of arguments for invoking getHclHyperflexSoftwareCompatibilityInfo.
 */
export interface GetHclHyperflexSoftwareCompatibilityInfoOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoAncestorArgs>[]>;
    appCatalog?: pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoAppCatalogArgs>;
    classId?: pulumi.Input<string>;
    constraints?: pulumi.Input<pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoConstraintArgs>[]>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    hxdpVersion?: pulumi.Input<string>;
    hypervisorType?: pulumi.Input<string>;
    hypervisorVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isMgmtBuild?: pulumi.Input<string>;
    maxMgmtVersion?: pulumi.Input<string>;
    minMgmtVersion?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoPermissionResourceArgs>[]>;
    serverFwVersion?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetHclHyperflexSoftwareCompatibilityInfoVersionContextArgs>;
}
