// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkflowErrorResponseHandler(args?: GetWorkflowErrorResponseHandlerArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowErrorResponseHandlerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getWorkflowErrorResponseHandler:getWorkflowErrorResponseHandler", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parameters": args.parameters,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platformType": args.platformType,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "types": args.types,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkflowErrorResponseHandler.
 */
export interface GetWorkflowErrorResponseHandlerArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetWorkflowErrorResponseHandlerAncestor[];
    catalog?: inputs.GetWorkflowErrorResponseHandlerCatalog;
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parameters?: inputs.GetWorkflowErrorResponseHandlerParameter[];
    parent?: inputs.GetWorkflowErrorResponseHandlerParent;
    permissionResources?: inputs.GetWorkflowErrorResponseHandlerPermissionResource[];
    platformType?: string;
    sharedScope?: string;
    tags?: inputs.GetWorkflowErrorResponseHandlerTag[];
    types?: inputs.GetWorkflowErrorResponseHandlerType[];
    versionContext?: inputs.GetWorkflowErrorResponseHandlerVersionContext;
}

/**
 * A collection of values returned by getWorkflowErrorResponseHandler.
 */
export interface GetWorkflowErrorResponseHandlerResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetWorkflowErrorResponseHandlerAncestor[];
    readonly catalog?: outputs.GetWorkflowErrorResponseHandlerCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parameters?: outputs.GetWorkflowErrorResponseHandlerParameter[];
    readonly parent?: outputs.GetWorkflowErrorResponseHandlerParent;
    readonly permissionResources?: outputs.GetWorkflowErrorResponseHandlerPermissionResource[];
    readonly platformType?: string;
    readonly results: outputs.GetWorkflowErrorResponseHandlerResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetWorkflowErrorResponseHandlerTag[];
    readonly types?: outputs.GetWorkflowErrorResponseHandlerType[];
    readonly versionContext?: outputs.GetWorkflowErrorResponseHandlerVersionContext;
}
export function getWorkflowErrorResponseHandlerOutput(args?: GetWorkflowErrorResponseHandlerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowErrorResponseHandlerResult> {
    return pulumi.output(args).apply((a: any) => getWorkflowErrorResponseHandler(a, opts))
}

/**
 * A collection of arguments for invoking getWorkflowErrorResponseHandler.
 */
export interface GetWorkflowErrorResponseHandlerOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetWorkflowErrorResponseHandlerAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetWorkflowErrorResponseHandlerCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parameters?: pulumi.Input<pulumi.Input<inputs.GetWorkflowErrorResponseHandlerParameterArgs>[]>;
    parent?: pulumi.Input<inputs.GetWorkflowErrorResponseHandlerParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetWorkflowErrorResponseHandlerPermissionResourceArgs>[]>;
    platformType?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetWorkflowErrorResponseHandlerTagArgs>[]>;
    types?: pulumi.Input<pulumi.Input<inputs.GetWorkflowErrorResponseHandlerTypeArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetWorkflowErrorResponseHandlerVersionContextArgs>;
}
