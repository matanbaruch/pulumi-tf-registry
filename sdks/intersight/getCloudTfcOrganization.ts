// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudTfcOrganization(args?: GetCloudTfcOrganizationArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudTfcOrganizationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudTfcOrganization:getCloudTfcOrganization", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "agentCeiling": args.agentCeiling,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "email": args.email,
        "id": args.id,
        "identity": args.identity,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "numTeams": args.numTeams,
        "numUsers": args.numUsers,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "runCeiling": args.runCeiling,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "target": args.target,
        "vcsProviders": args.vcsProviders,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudTfcOrganization.
 */
export interface GetCloudTfcOrganizationArgs {
    accountMoid?: string;
    additionalProperties?: string;
    agentCeiling?: number;
    ancestors?: inputs.GetCloudTfcOrganizationAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    email?: string;
    id?: string;
    identity?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    numTeams?: number;
    numUsers?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudTfcOrganizationParent;
    permissionResources?: inputs.GetCloudTfcOrganizationPermissionResource[];
    runCeiling?: number;
    sharedScope?: string;
    tags?: inputs.GetCloudTfcOrganizationTag[];
    target?: inputs.GetCloudTfcOrganizationTarget;
    vcsProviders?: number;
    versionContext?: inputs.GetCloudTfcOrganizationVersionContext;
}

/**
 * A collection of values returned by getCloudTfcOrganization.
 */
export interface GetCloudTfcOrganizationResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly agentCeiling?: number;
    readonly ancestors?: outputs.GetCloudTfcOrganizationAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly email?: string;
    readonly id: string;
    readonly identity?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly numTeams?: number;
    readonly numUsers?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudTfcOrganizationParent;
    readonly permissionResources?: outputs.GetCloudTfcOrganizationPermissionResource[];
    readonly results: outputs.GetCloudTfcOrganizationResult[];
    readonly runCeiling?: number;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetCloudTfcOrganizationTag[];
    readonly target?: outputs.GetCloudTfcOrganizationTarget;
    readonly vcsProviders?: number;
    readonly versionContext?: outputs.GetCloudTfcOrganizationVersionContext;
}
export function getCloudTfcOrganizationOutput(args?: GetCloudTfcOrganizationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudTfcOrganizationResult> {
    return pulumi.output(args).apply((a: any) => getCloudTfcOrganization(a, opts))
}

/**
 * A collection of arguments for invoking getCloudTfcOrganization.
 */
export interface GetCloudTfcOrganizationOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    agentCeiling?: pulumi.Input<number>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudTfcOrganizationAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    numTeams?: pulumi.Input<number>;
    numUsers?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudTfcOrganizationParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudTfcOrganizationPermissionResourceArgs>[]>;
    runCeiling?: pulumi.Input<number>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudTfcOrganizationTagArgs>[]>;
    target?: pulumi.Input<inputs.GetCloudTfcOrganizationTargetArgs>;
    vcsProviders?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetCloudTfcOrganizationVersionContextArgs>;
}
