// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageNetAppInitiatorGroup(args?: GetStorageNetAppInitiatorGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageNetAppInitiatorGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageNetAppInitiatorGroup:getStorageNetAppInitiatorGroup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "initiators": args.initiators,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "osType": args.osType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "protocol": args.protocol,
        "sharedScope": args.sharedScope,
        "storageUtilization": args.storageUtilization,
        "svmName": args.svmName,
        "tags": args.tags,
        "tenant": args.tenant,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageNetAppInitiatorGroup.
 */
export interface GetStorageNetAppInitiatorGroupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageNetAppInitiatorGroupAncestor[];
    classId?: string;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    initiators?: inputs.GetStorageNetAppInitiatorGroupInitiator[];
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    osType?: string;
    owners?: string[];
    parent?: inputs.GetStorageNetAppInitiatorGroupParent;
    permissionResources?: inputs.GetStorageNetAppInitiatorGroupPermissionResource[];
    protocol?: string;
    sharedScope?: string;
    storageUtilization?: inputs.GetStorageNetAppInitiatorGroupStorageUtilization;
    svmName?: string;
    tags?: inputs.GetStorageNetAppInitiatorGroupTag[];
    tenant?: inputs.GetStorageNetAppInitiatorGroupTenant;
    uuid?: string;
    versionContext?: inputs.GetStorageNetAppInitiatorGroupVersionContext;
}

/**
 * A collection of values returned by getStorageNetAppInitiatorGroup.
 */
export interface GetStorageNetAppInitiatorGroupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageNetAppInitiatorGroupAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly initiators?: outputs.GetStorageNetAppInitiatorGroupInitiator[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly osType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageNetAppInitiatorGroupParent;
    readonly permissionResources?: outputs.GetStorageNetAppInitiatorGroupPermissionResource[];
    readonly protocol?: string;
    readonly results: outputs.GetStorageNetAppInitiatorGroupResult[];
    readonly sharedScope?: string;
    readonly storageUtilization?: outputs.GetStorageNetAppInitiatorGroupStorageUtilization;
    readonly svmName?: string;
    readonly tags?: outputs.GetStorageNetAppInitiatorGroupTag[];
    readonly tenant?: outputs.GetStorageNetAppInitiatorGroupTenant;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetStorageNetAppInitiatorGroupVersionContext;
}
export function getStorageNetAppInitiatorGroupOutput(args?: GetStorageNetAppInitiatorGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageNetAppInitiatorGroupResult> {
    return pulumi.output(args).apply((a: any) => getStorageNetAppInitiatorGroup(a, opts))
}

/**
 * A collection of arguments for invoking getStorageNetAppInitiatorGroup.
 */
export interface GetStorageNetAppInitiatorGroupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppInitiatorGroupAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    initiators?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppInitiatorGroupInitiatorArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    osType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageNetAppInitiatorGroupParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppInitiatorGroupPermissionResourceArgs>[]>;
    protocol?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    storageUtilization?: pulumi.Input<inputs.GetStorageNetAppInitiatorGroupStorageUtilizationArgs>;
    svmName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppInitiatorGroupTagArgs>[]>;
    tenant?: pulumi.Input<inputs.GetStorageNetAppInitiatorGroupTenantArgs>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetStorageNetAppInitiatorGroupVersionContextArgs>;
}
