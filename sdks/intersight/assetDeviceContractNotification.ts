// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AssetDeviceContractNotification extends pulumi.CustomResource {
    /**
     * Get an existing AssetDeviceContractNotification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssetDeviceContractNotificationState, opts?: pulumi.CustomResourceOptions): AssetDeviceContractNotification {
        return new AssetDeviceContractNotification(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/assetDeviceContractNotification:AssetDeviceContractNotification';

    /**
     * Returns true if the given object is an instance of AssetDeviceContractNotification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AssetDeviceContractNotification {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AssetDeviceContractNotification.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.AssetDeviceContractNotificationAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * Calculated contract status that is derived based on the service line status and contract end date. It is different from
     * serviceLineStatus property. serviceLineStatus gives us ACTIVE, OVERDUE, EXPIRED. These are transformed into Active,
     * Expiring Soon and Not Covered. * `Unknown` - The device's contract status cannot be determined. * `Not Covered` - The
     * Cisco device does not have a valid support contract. * `Active` - The Cisco device is covered under a active support
     * contract. * `Expiring Soon` - The contract for this Cisco device is going to expire in the next 30 days.
     */
    public readonly contractStatus!: pulumi.Output<string | undefined>;
    /**
     * Reason for contract status. In case of Not Covered, reason is either Terminated or Expired. * `` - There is no reason
     * for the specified contract status. * `Line Item Expired` - The Cisco device does not have a valid support contract, it
     * has expired. * `Line Item Terminated` - The Cisco device does not have a valid support contract, it has been terminated.
     */
    public readonly contractStatusReason!: pulumi.Output<string | undefined>;
    /**
     * Date and time indicating when the contract data is last refreshed.
     */
    public readonly contractUpdatedTime!: pulumi.Output<string | undefined>;
    /**
     * Contract information for the Cisco support contract purchased for the Cisco device.
     */
    public readonly contracts!: pulumi.Output<outputs.AssetDeviceContractNotificationContract[]>;
    /**
     * End date of the covered product line. The coverage end date is fetched from Cisco SN2INFO API.
     */
    public readonly coveredProductLineEndDate!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Unique identifier of the Cisco device.
     */
    public readonly deviceId!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * End customer information for the Cisco support contract purchased for the Cisco device.
     */
    public readonly endCustomers!: pulumi.Output<outputs.AssetDeviceContractNotificationEndCustomer[]>;
    /**
     * EndUserGlobalUltimate information listed in the contract.
     */
    public readonly endUserGlobalUltimates!: pulumi.Output<outputs.AssetDeviceContractNotificationEndUserGlobalUltimate[]>;
    /**
     * Validates if the device is a genuine Cisco device. Validated is done using the Cisco SN2INFO APIs.
     */
    public readonly isValid!: pulumi.Output<boolean | undefined>;
    /**
     * Item type of this specific Cisco device. example "Chassis".
     */
    public readonly itemType!: pulumi.Output<string | undefined>;
    /**
     * The last date of hardware support for this device.
     */
    public readonly lastDateOfSupport!: pulumi.Output<string | undefined>;
    /**
     * Maintenance purchase order number for the Cisco device.
     */
    public readonly maintenancePurchaseOrderNumber!: pulumi.Output<string | undefined>;
    /**
     * Maintenance sales order number for the Cisco device.
     */
    public readonly maintenanceSalesOrderNumber!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.AssetDeviceContractNotificationParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.AssetDeviceContractNotificationPermissionResource[]>;
    /**
     * Product information of the offering under a contract.
     */
    public readonly products!: pulumi.Output<outputs.AssetDeviceContractNotificationProduct[]>;
    /**
     * Purchase order number for the Cisco device. It is a unique number assigned for every purchase.
     */
    public readonly purchaseOrderNumber!: pulumi.Output<string | undefined>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly registeredDevices!: pulumi.Output<outputs.AssetDeviceContractNotificationRegisteredDevice[]>;
    /**
     * ResellerGlobalUltimate information listed in the contract.
     */
    public readonly resellerGlobalUltimates!: pulumi.Output<outputs.AssetDeviceContractNotificationResellerGlobalUltimate[]>;
    /**
     * Sales order number for the Cisco device. It is a unique number assigned for every sale.
     */
    public readonly salesOrderNumber!: pulumi.Output<string | undefined>;
    /**
     * The type of service contract that covers the Cisco device.
     */
    public readonly serviceDescription!: pulumi.Output<string | undefined>;
    /**
     * End date for the Cisco service contract that covers this Cisco device.
     */
    public readonly serviceEndDate!: pulumi.Output<string | undefined>;
    /**
     * The type of service contract that covers the Cisco device.
     */
    public readonly serviceLevel!: pulumi.Output<string | undefined>;
    /**
     * The SKU of the service contract that covers the Cisco device.
     */
    public readonly serviceSku!: pulumi.Output<string | undefined>;
    /**
     * Start date for the Cisco service contract that covers this Cisco device.
     */
    public readonly serviceStartDate!: pulumi.Output<string | undefined>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Internal property used for triggering and tracking actions for contract information. * `Update` - Sn2Info/Contract
     * information needs to be updated. * `OK` - Sn2Info/Contract information was fetched succcessfuly and updated. * `Failed`
     * - Sn2Info/Contract information was not available or failed while fetching. * `Retry` - Sn2Info/Contract information
     * update failed and will be retried later.
     */
    public readonly stateContract!: pulumi.Output<string | undefined>;
    /**
     * Internal property used for triggering and tracking actions for sn2info information. * `Update` - Sn2Info/Contract
     * information needs to be updated. * `OK` - Sn2Info/Contract information was fetched succcessfuly and updated. * `Failed`
     * - Sn2Info/Contract information was not available or failed while fetching. * `Retry` - Sn2Info/Contract information
     * update failed and will be retried later.
     */
    public readonly stateSn2Info!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.AssetDeviceContractNotificationTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.AssetDeviceContractNotificationVersionContext[]>;
    /**
     * End date for the warranty that covers the Cisco device.
     */
    public readonly warrantyEndDate!: pulumi.Output<string | undefined>;
    /**
     * Type of warranty that covers the Cisco device.
     */
    public readonly warrantyType!: pulumi.Output<string | undefined>;

    /**
     * Create a AssetDeviceContractNotification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssetDeviceContractNotificationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssetDeviceContractNotificationArgs | AssetDeviceContractNotificationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AssetDeviceContractNotificationState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["contractStatus"] = state ? state.contractStatus : undefined;
            resourceInputs["contractStatusReason"] = state ? state.contractStatusReason : undefined;
            resourceInputs["contractUpdatedTime"] = state ? state.contractUpdatedTime : undefined;
            resourceInputs["contracts"] = state ? state.contracts : undefined;
            resourceInputs["coveredProductLineEndDate"] = state ? state.coveredProductLineEndDate : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["endCustomers"] = state ? state.endCustomers : undefined;
            resourceInputs["endUserGlobalUltimates"] = state ? state.endUserGlobalUltimates : undefined;
            resourceInputs["isValid"] = state ? state.isValid : undefined;
            resourceInputs["itemType"] = state ? state.itemType : undefined;
            resourceInputs["lastDateOfSupport"] = state ? state.lastDateOfSupport : undefined;
            resourceInputs["maintenancePurchaseOrderNumber"] = state ? state.maintenancePurchaseOrderNumber : undefined;
            resourceInputs["maintenanceSalesOrderNumber"] = state ? state.maintenanceSalesOrderNumber : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["products"] = state ? state.products : undefined;
            resourceInputs["purchaseOrderNumber"] = state ? state.purchaseOrderNumber : undefined;
            resourceInputs["registeredDevices"] = state ? state.registeredDevices : undefined;
            resourceInputs["resellerGlobalUltimates"] = state ? state.resellerGlobalUltimates : undefined;
            resourceInputs["salesOrderNumber"] = state ? state.salesOrderNumber : undefined;
            resourceInputs["serviceDescription"] = state ? state.serviceDescription : undefined;
            resourceInputs["serviceEndDate"] = state ? state.serviceEndDate : undefined;
            resourceInputs["serviceLevel"] = state ? state.serviceLevel : undefined;
            resourceInputs["serviceSku"] = state ? state.serviceSku : undefined;
            resourceInputs["serviceStartDate"] = state ? state.serviceStartDate : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["stateContract"] = state ? state.stateContract : undefined;
            resourceInputs["stateSn2Info"] = state ? state.stateSn2Info : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["warrantyEndDate"] = state ? state.warrantyEndDate : undefined;
            resourceInputs["warrantyType"] = state ? state.warrantyType : undefined;
        } else {
            const args = argsOrState as AssetDeviceContractNotificationArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["contractStatus"] = args ? args.contractStatus : undefined;
            resourceInputs["contractStatusReason"] = args ? args.contractStatusReason : undefined;
            resourceInputs["contractUpdatedTime"] = args ? args.contractUpdatedTime : undefined;
            resourceInputs["contracts"] = args ? args.contracts : undefined;
            resourceInputs["coveredProductLineEndDate"] = args ? args.coveredProductLineEndDate : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["endCustomers"] = args ? args.endCustomers : undefined;
            resourceInputs["endUserGlobalUltimates"] = args ? args.endUserGlobalUltimates : undefined;
            resourceInputs["isValid"] = args ? args.isValid : undefined;
            resourceInputs["itemType"] = args ? args.itemType : undefined;
            resourceInputs["lastDateOfSupport"] = args ? args.lastDateOfSupport : undefined;
            resourceInputs["maintenancePurchaseOrderNumber"] = args ? args.maintenancePurchaseOrderNumber : undefined;
            resourceInputs["maintenanceSalesOrderNumber"] = args ? args.maintenanceSalesOrderNumber : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["products"] = args ? args.products : undefined;
            resourceInputs["purchaseOrderNumber"] = args ? args.purchaseOrderNumber : undefined;
            resourceInputs["registeredDevices"] = args ? args.registeredDevices : undefined;
            resourceInputs["resellerGlobalUltimates"] = args ? args.resellerGlobalUltimates : undefined;
            resourceInputs["salesOrderNumber"] = args ? args.salesOrderNumber : undefined;
            resourceInputs["serviceDescription"] = args ? args.serviceDescription : undefined;
            resourceInputs["serviceEndDate"] = args ? args.serviceEndDate : undefined;
            resourceInputs["serviceLevel"] = args ? args.serviceLevel : undefined;
            resourceInputs["serviceSku"] = args ? args.serviceSku : undefined;
            resourceInputs["serviceStartDate"] = args ? args.serviceStartDate : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["stateContract"] = args ? args.stateContract : undefined;
            resourceInputs["stateSn2Info"] = args ? args.stateSn2Info : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["warrantyEndDate"] = args ? args.warrantyEndDate : undefined;
            resourceInputs["warrantyType"] = args ? args.warrantyType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AssetDeviceContractNotification.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AssetDeviceContractNotification resources.
 */
export interface AssetDeviceContractNotificationState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Calculated contract status that is derived based on the service line status and contract end date. It is different from
     * serviceLineStatus property. serviceLineStatus gives us ACTIVE, OVERDUE, EXPIRED. These are transformed into Active,
     * Expiring Soon and Not Covered. * `Unknown` - The device's contract status cannot be determined. * `Not Covered` - The
     * Cisco device does not have a valid support contract. * `Active` - The Cisco device is covered under a active support
     * contract. * `Expiring Soon` - The contract for this Cisco device is going to expire in the next 30 days.
     */
    contractStatus?: pulumi.Input<string>;
    /**
     * Reason for contract status. In case of Not Covered, reason is either Terminated or Expired. * `` - There is no reason
     * for the specified contract status. * `Line Item Expired` - The Cisco device does not have a valid support contract, it
     * has expired. * `Line Item Terminated` - The Cisco device does not have a valid support contract, it has been terminated.
     */
    contractStatusReason?: pulumi.Input<string>;
    /**
     * Date and time indicating when the contract data is last refreshed.
     */
    contractUpdatedTime?: pulumi.Input<string>;
    /**
     * Contract information for the Cisco support contract purchased for the Cisco device.
     */
    contracts?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationContract>[]>;
    /**
     * End date of the covered product line. The coverage end date is fetched from Cisco SN2INFO API.
     */
    coveredProductLineEndDate?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Unique identifier of the Cisco device.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * End customer information for the Cisco support contract purchased for the Cisco device.
     */
    endCustomers?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationEndCustomer>[]>;
    /**
     * EndUserGlobalUltimate information listed in the contract.
     */
    endUserGlobalUltimates?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationEndUserGlobalUltimate>[]>;
    /**
     * Validates if the device is a genuine Cisco device. Validated is done using the Cisco SN2INFO APIs.
     */
    isValid?: pulumi.Input<boolean>;
    /**
     * Item type of this specific Cisco device. example "Chassis".
     */
    itemType?: pulumi.Input<string>;
    /**
     * The last date of hardware support for this device.
     */
    lastDateOfSupport?: pulumi.Input<string>;
    /**
     * Maintenance purchase order number for the Cisco device.
     */
    maintenancePurchaseOrderNumber?: pulumi.Input<string>;
    /**
     * Maintenance sales order number for the Cisco device.
     */
    maintenanceSalesOrderNumber?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationPermissionResource>[]>;
    /**
     * Product information of the offering under a contract.
     */
    products?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationProduct>[]>;
    /**
     * Purchase order number for the Cisco device. It is a unique number assigned for every purchase.
     */
    purchaseOrderNumber?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    registeredDevices?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationRegisteredDevice>[]>;
    /**
     * ResellerGlobalUltimate information listed in the contract.
     */
    resellerGlobalUltimates?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationResellerGlobalUltimate>[]>;
    /**
     * Sales order number for the Cisco device. It is a unique number assigned for every sale.
     */
    salesOrderNumber?: pulumi.Input<string>;
    /**
     * The type of service contract that covers the Cisco device.
     */
    serviceDescription?: pulumi.Input<string>;
    /**
     * End date for the Cisco service contract that covers this Cisco device.
     */
    serviceEndDate?: pulumi.Input<string>;
    /**
     * The type of service contract that covers the Cisco device.
     */
    serviceLevel?: pulumi.Input<string>;
    /**
     * The SKU of the service contract that covers the Cisco device.
     */
    serviceSku?: pulumi.Input<string>;
    /**
     * Start date for the Cisco service contract that covers this Cisco device.
     */
    serviceStartDate?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Internal property used for triggering and tracking actions for contract information. * `Update` - Sn2Info/Contract
     * information needs to be updated. * `OK` - Sn2Info/Contract information was fetched succcessfuly and updated. * `Failed`
     * - Sn2Info/Contract information was not available or failed while fetching. * `Retry` - Sn2Info/Contract information
     * update failed and will be retried later.
     */
    stateContract?: pulumi.Input<string>;
    /**
     * Internal property used for triggering and tracking actions for sn2info information. * `Update` - Sn2Info/Contract
     * information needs to be updated. * `OK` - Sn2Info/Contract information was fetched succcessfuly and updated. * `Failed`
     * - Sn2Info/Contract information was not available or failed while fetching. * `Retry` - Sn2Info/Contract information
     * update failed and will be retried later.
     */
    stateSn2Info?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationVersionContext>[]>;
    /**
     * End date for the warranty that covers the Cisco device.
     */
    warrantyEndDate?: pulumi.Input<string>;
    /**
     * Type of warranty that covers the Cisco device.
     */
    warrantyType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AssetDeviceContractNotification resource.
 */
export interface AssetDeviceContractNotificationArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Calculated contract status that is derived based on the service line status and contract end date. It is different from
     * serviceLineStatus property. serviceLineStatus gives us ACTIVE, OVERDUE, EXPIRED. These are transformed into Active,
     * Expiring Soon and Not Covered. * `Unknown` - The device's contract status cannot be determined. * `Not Covered` - The
     * Cisco device does not have a valid support contract. * `Active` - The Cisco device is covered under a active support
     * contract. * `Expiring Soon` - The contract for this Cisco device is going to expire in the next 30 days.
     */
    contractStatus?: pulumi.Input<string>;
    /**
     * Reason for contract status. In case of Not Covered, reason is either Terminated or Expired. * `` - There is no reason
     * for the specified contract status. * `Line Item Expired` - The Cisco device does not have a valid support contract, it
     * has expired. * `Line Item Terminated` - The Cisco device does not have a valid support contract, it has been terminated.
     */
    contractStatusReason?: pulumi.Input<string>;
    /**
     * Date and time indicating when the contract data is last refreshed.
     */
    contractUpdatedTime?: pulumi.Input<string>;
    /**
     * Contract information for the Cisco support contract purchased for the Cisco device.
     */
    contracts?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationContract>[]>;
    /**
     * End date of the covered product line. The coverage end date is fetched from Cisco SN2INFO API.
     */
    coveredProductLineEndDate?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Unique identifier of the Cisco device.
     */
    deviceId?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * End customer information for the Cisco support contract purchased for the Cisco device.
     */
    endCustomers?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationEndCustomer>[]>;
    /**
     * EndUserGlobalUltimate information listed in the contract.
     */
    endUserGlobalUltimates?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationEndUserGlobalUltimate>[]>;
    /**
     * Validates if the device is a genuine Cisco device. Validated is done using the Cisco SN2INFO APIs.
     */
    isValid?: pulumi.Input<boolean>;
    /**
     * Item type of this specific Cisco device. example "Chassis".
     */
    itemType?: pulumi.Input<string>;
    /**
     * The last date of hardware support for this device.
     */
    lastDateOfSupport?: pulumi.Input<string>;
    /**
     * Maintenance purchase order number for the Cisco device.
     */
    maintenancePurchaseOrderNumber?: pulumi.Input<string>;
    /**
     * Maintenance sales order number for the Cisco device.
     */
    maintenanceSalesOrderNumber?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationPermissionResource>[]>;
    /**
     * Product information of the offering under a contract.
     */
    products?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationProduct>[]>;
    /**
     * Purchase order number for the Cisco device. It is a unique number assigned for every purchase.
     */
    purchaseOrderNumber?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    registeredDevices?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationRegisteredDevice>[]>;
    /**
     * ResellerGlobalUltimate information listed in the contract.
     */
    resellerGlobalUltimates?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationResellerGlobalUltimate>[]>;
    /**
     * Sales order number for the Cisco device. It is a unique number assigned for every sale.
     */
    salesOrderNumber?: pulumi.Input<string>;
    /**
     * The type of service contract that covers the Cisco device.
     */
    serviceDescription?: pulumi.Input<string>;
    /**
     * End date for the Cisco service contract that covers this Cisco device.
     */
    serviceEndDate?: pulumi.Input<string>;
    /**
     * The type of service contract that covers the Cisco device.
     */
    serviceLevel?: pulumi.Input<string>;
    /**
     * The SKU of the service contract that covers the Cisco device.
     */
    serviceSku?: pulumi.Input<string>;
    /**
     * Start date for the Cisco service contract that covers this Cisco device.
     */
    serviceStartDate?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Internal property used for triggering and tracking actions for contract information. * `Update` - Sn2Info/Contract
     * information needs to be updated. * `OK` - Sn2Info/Contract information was fetched succcessfuly and updated. * `Failed`
     * - Sn2Info/Contract information was not available or failed while fetching. * `Retry` - Sn2Info/Contract information
     * update failed and will be retried later.
     */
    stateContract?: pulumi.Input<string>;
    /**
     * Internal property used for triggering and tracking actions for sn2info information. * `Update` - Sn2Info/Contract
     * information needs to be updated. * `OK` - Sn2Info/Contract information was fetched succcessfuly and updated. * `Failed`
     * - Sn2Info/Contract information was not available or failed while fetching. * `Retry` - Sn2Info/Contract information
     * update failed and will be retried later.
     */
    stateSn2Info?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.AssetDeviceContractNotificationVersionContext>[]>;
    /**
     * End date for the warranty that covers the Cisco device.
     */
    warrantyEndDate?: pulumi.Input<string>;
    /**
     * Type of warranty that covers the Cisco device.
     */
    warrantyType?: pulumi.Input<string>;
}
