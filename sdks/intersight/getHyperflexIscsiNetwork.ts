// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexIscsiNetwork(args?: GetHyperflexIscsiNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexIscsiNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexIscsiNetwork:getHyperflexIscsiNetwork", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "gateway": args.gateway,
        "id": args.id,
        "inventorySource": args.inventorySource,
        "ipRanges": args.ipRanges,
        "iscsiCip": args.iscsiCip,
        "modTime": args.modTime,
        "moid": args.moid,
        "mtu": args.mtu,
        "name": args.name,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "subnet": args.subnet,
        "tags": args.tags,
        "ucsHost": args.ucsHost,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "vlanName": args.vlanName,
        "vlanid": args.vlanid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexIscsiNetwork.
 */
export interface GetHyperflexIscsiNetworkArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexIscsiNetworkAncestor[];
    classId?: string;
    cluster?: inputs.GetHyperflexIscsiNetworkCluster;
    createTime?: string;
    domainGroupMoid?: string;
    gateway?: string;
    id?: string;
    inventorySource?: string;
    ipRanges?: inputs.GetHyperflexIscsiNetworkIpRange[];
    iscsiCip?: string;
    modTime?: string;
    moid?: string;
    mtu?: string;
    name?: string;
    nrVersion?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexIscsiNetworkParent;
    permissionResources?: inputs.GetHyperflexIscsiNetworkPermissionResource[];
    sharedScope?: string;
    subnet?: string;
    tags?: inputs.GetHyperflexIscsiNetworkTag[];
    ucsHost?: string;
    uuid?: string;
    versionContext?: inputs.GetHyperflexIscsiNetworkVersionContext;
    vlanName?: string;
    vlanid?: number;
}

/**
 * A collection of values returned by getHyperflexIscsiNetwork.
 */
export interface GetHyperflexIscsiNetworkResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexIscsiNetworkAncestor[];
    readonly classId?: string;
    readonly cluster?: outputs.GetHyperflexIscsiNetworkCluster;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly gateway?: string;
    readonly id: string;
    readonly inventorySource?: string;
    readonly ipRanges?: outputs.GetHyperflexIscsiNetworkIpRange[];
    readonly iscsiCip?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly mtu?: string;
    readonly name?: string;
    readonly nrVersion?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexIscsiNetworkParent;
    readonly permissionResources?: outputs.GetHyperflexIscsiNetworkPermissionResource[];
    readonly results: outputs.GetHyperflexIscsiNetworkResult[];
    readonly sharedScope?: string;
    readonly subnet?: string;
    readonly tags?: outputs.GetHyperflexIscsiNetworkTag[];
    readonly ucsHost?: string;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetHyperflexIscsiNetworkVersionContext;
    readonly vlanName?: string;
    readonly vlanid?: number;
}
export function getHyperflexIscsiNetworkOutput(args?: GetHyperflexIscsiNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexIscsiNetworkResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexIscsiNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexIscsiNetwork.
 */
export interface GetHyperflexIscsiNetworkOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexIscsiNetworkAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexIscsiNetworkClusterArgs>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    gateway?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inventorySource?: pulumi.Input<string>;
    ipRanges?: pulumi.Input<pulumi.Input<inputs.GetHyperflexIscsiNetworkIpRangeArgs>[]>;
    iscsiCip?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    mtu?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexIscsiNetworkParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexIscsiNetworkPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    subnet?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexIscsiNetworkTagArgs>[]>;
    ucsHost?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetHyperflexIscsiNetworkVersionContextArgs>;
    vlanName?: pulumi.Input<string>;
    vlanid?: pulumi.Input<number>;
}
