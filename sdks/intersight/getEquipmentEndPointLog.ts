// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEquipmentEndPointLog(args?: GetEquipmentEndPointLogArgs, opts?: pulumi.InvokeOptions): Promise<GetEquipmentEndPointLogResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getEquipmentEndPointLog:getEquipmentEndPointLog", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "collectionTime": args.collectionTime,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "downloadUrl": args.downloadUrl,
        "fileName": args.fileName,
        "id": args.id,
        "logType": args.logType,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "server": args.server,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEquipmentEndPointLog.
 */
export interface GetEquipmentEndPointLogArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetEquipmentEndPointLogAncestor[];
    classId?: string;
    collectionTime?: string;
    createTime?: string;
    domainGroupMoid?: string;
    downloadUrl?: string;
    fileName?: string;
    id?: string;
    logType?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetEquipmentEndPointLogParent;
    permissionResources?: inputs.GetEquipmentEndPointLogPermissionResource[];
    registeredDevice?: inputs.GetEquipmentEndPointLogRegisteredDevice;
    server?: inputs.GetEquipmentEndPointLogServer;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetEquipmentEndPointLogTag[];
    versionContext?: inputs.GetEquipmentEndPointLogVersionContext;
}

/**
 * A collection of values returned by getEquipmentEndPointLog.
 */
export interface GetEquipmentEndPointLogResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetEquipmentEndPointLogAncestor[];
    readonly classId?: string;
    readonly collectionTime?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly downloadUrl?: string;
    readonly fileName?: string;
    readonly id: string;
    readonly logType?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetEquipmentEndPointLogParent;
    readonly permissionResources?: outputs.GetEquipmentEndPointLogPermissionResource[];
    readonly registeredDevice?: outputs.GetEquipmentEndPointLogRegisteredDevice;
    readonly results: outputs.GetEquipmentEndPointLogResult[];
    readonly server?: outputs.GetEquipmentEndPointLogServer;
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetEquipmentEndPointLogTag[];
    readonly versionContext?: outputs.GetEquipmentEndPointLogVersionContext;
}
export function getEquipmentEndPointLogOutput(args?: GetEquipmentEndPointLogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEquipmentEndPointLogResult> {
    return pulumi.output(args).apply((a: any) => getEquipmentEndPointLog(a, opts))
}

/**
 * A collection of arguments for invoking getEquipmentEndPointLog.
 */
export interface GetEquipmentEndPointLogOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetEquipmentEndPointLogAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    collectionTime?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    downloadUrl?: pulumi.Input<string>;
    fileName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    logType?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetEquipmentEndPointLogParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetEquipmentEndPointLogPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetEquipmentEndPointLogRegisteredDeviceArgs>;
    server?: pulumi.Input<inputs.GetEquipmentEndPointLogServerArgs>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetEquipmentEndPointLogTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetEquipmentEndPointLogVersionContextArgs>;
}
