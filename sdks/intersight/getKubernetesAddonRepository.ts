// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesAddonRepository(args?: GetKubernetesAddonRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesAddonRepositoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKubernetesAddonRepository:getKubernetesAddonRepository", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "caCert": args.caCert,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "insecureSkipVerification": args.insecureSkipVerification,
        "isPasswordSet": args.isPasswordSet,
        "isTokenSet": args.isTokenSet,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "registeredDevice": args.registeredDevice,
        "repositoryUrl": args.repositoryUrl,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "username": args.username,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesAddonRepository.
 */
export interface GetKubernetesAddonRepositoryArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetKubernetesAddonRepositoryAncestor[];
    caCert?: inputs.GetKubernetesAddonRepositoryCaCert;
    catalog?: inputs.GetKubernetesAddonRepositoryCatalog;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    insecureSkipVerification?: boolean;
    isPasswordSet?: boolean;
    isTokenSet?: boolean;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetKubernetesAddonRepositoryParent;
    permissionResources?: inputs.GetKubernetesAddonRepositoryPermissionResource[];
    registeredDevice?: inputs.GetKubernetesAddonRepositoryRegisteredDevice;
    repositoryUrl?: string;
    sharedScope?: string;
    tags?: inputs.GetKubernetesAddonRepositoryTag[];
    username?: string;
    versionContext?: inputs.GetKubernetesAddonRepositoryVersionContext;
}

/**
 * A collection of values returned by getKubernetesAddonRepository.
 */
export interface GetKubernetesAddonRepositoryResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKubernetesAddonRepositoryAncestor[];
    readonly caCert?: outputs.GetKubernetesAddonRepositoryCaCert;
    readonly catalog?: outputs.GetKubernetesAddonRepositoryCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly insecureSkipVerification?: boolean;
    readonly isPasswordSet?: boolean;
    readonly isTokenSet?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetKubernetesAddonRepositoryParent;
    readonly permissionResources?: outputs.GetKubernetesAddonRepositoryPermissionResource[];
    readonly registeredDevice?: outputs.GetKubernetesAddonRepositoryRegisteredDevice;
    readonly repositoryUrl?: string;
    readonly results: outputs.GetKubernetesAddonRepositoryResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetKubernetesAddonRepositoryTag[];
    readonly username?: string;
    readonly versionContext?: outputs.GetKubernetesAddonRepositoryVersionContext;
}
export function getKubernetesAddonRepositoryOutput(args?: GetKubernetesAddonRepositoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesAddonRepositoryResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesAddonRepository(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesAddonRepository.
 */
export interface GetKubernetesAddonRepositoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAddonRepositoryAncestorArgs>[]>;
    caCert?: pulumi.Input<inputs.GetKubernetesAddonRepositoryCaCertArgs>;
    catalog?: pulumi.Input<inputs.GetKubernetesAddonRepositoryCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    insecureSkipVerification?: pulumi.Input<boolean>;
    isPasswordSet?: pulumi.Input<boolean>;
    isTokenSet?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKubernetesAddonRepositoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAddonRepositoryPermissionResourceArgs>[]>;
    registeredDevice?: pulumi.Input<inputs.GetKubernetesAddonRepositoryRegisteredDeviceArgs>;
    repositoryUrl?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAddonRepositoryTagArgs>[]>;
    username?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetKubernetesAddonRepositoryVersionContextArgs>;
}
