// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexClusterBackupPolicyInventory(args?: GetHyperflexClusterBackupPolicyInventoryArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexClusterBackupPolicyInventoryResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexClusterBackupPolicyInventory:getHyperflexClusterBackupPolicyInventory", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "cleanup": args.cleanup,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "isSource": args.isSource,
        "jobDetails": args.jobDetails,
        "jobExceptionMessage": args.jobExceptionMessage,
        "jobId": args.jobId,
        "jobState": args.jobState,
        "modTime": args.modTime,
        "moid": args.moid,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyMoid": args.policyMoid,
        "requestId": args.requestId,
        "settings": args.settings,
        "sharedScope": args.sharedScope,
        "sourceUuid": args.sourceUuid,
        "srcCluster": args.srcCluster,
        "tags": args.tags,
        "targetUuid": args.targetUuid,
        "tgtCluster": args.tgtCluster,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexClusterBackupPolicyInventory.
 */
export interface GetHyperflexClusterBackupPolicyInventoryArgs {
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexClusterBackupPolicyInventoryAncestor[];
    classId?: string;
    cleanup?: boolean;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    isSource?: boolean;
    jobDetails?: string;
    jobExceptionMessage?: string;
    jobId?: string;
    jobState?: string;
    modTime?: string;
    moid?: string;
    nrVersion?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetHyperflexClusterBackupPolicyInventoryParent;
    permissionResources?: inputs.GetHyperflexClusterBackupPolicyInventoryPermissionResource[];
    policyMoid?: string;
    requestId?: string;
    settings?: inputs.GetHyperflexClusterBackupPolicyInventorySettings;
    sharedScope?: string;
    sourceUuid?: string;
    srcCluster?: inputs.GetHyperflexClusterBackupPolicyInventorySrcCluster;
    tags?: inputs.GetHyperflexClusterBackupPolicyInventoryTag[];
    targetUuid?: string;
    tgtCluster?: inputs.GetHyperflexClusterBackupPolicyInventoryTgtCluster;
    versionContext?: inputs.GetHyperflexClusterBackupPolicyInventoryVersionContext;
}

/**
 * A collection of values returned by getHyperflexClusterBackupPolicyInventory.
 */
export interface GetHyperflexClusterBackupPolicyInventoryResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexClusterBackupPolicyInventoryAncestor[];
    readonly classId?: string;
    readonly cleanup?: boolean;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly isSource?: boolean;
    readonly jobDetails?: string;
    readonly jobExceptionMessage?: string;
    readonly jobId?: string;
    readonly jobState?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nrVersion?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexClusterBackupPolicyInventoryParent;
    readonly permissionResources?: outputs.GetHyperflexClusterBackupPolicyInventoryPermissionResource[];
    readonly policyMoid?: string;
    readonly requestId?: string;
    readonly results: outputs.GetHyperflexClusterBackupPolicyInventoryResult[];
    readonly settings?: outputs.GetHyperflexClusterBackupPolicyInventorySettings;
    readonly sharedScope?: string;
    readonly sourceUuid?: string;
    readonly srcCluster?: outputs.GetHyperflexClusterBackupPolicyInventorySrcCluster;
    readonly tags?: outputs.GetHyperflexClusterBackupPolicyInventoryTag[];
    readonly targetUuid?: string;
    readonly tgtCluster?: outputs.GetHyperflexClusterBackupPolicyInventoryTgtCluster;
    readonly versionContext?: outputs.GetHyperflexClusterBackupPolicyInventoryVersionContext;
}
export function getHyperflexClusterBackupPolicyInventoryOutput(args?: GetHyperflexClusterBackupPolicyInventoryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexClusterBackupPolicyInventoryResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexClusterBackupPolicyInventory(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexClusterBackupPolicyInventory.
 */
export interface GetHyperflexClusterBackupPolicyInventoryOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventoryAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    cleanup?: pulumi.Input<boolean>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isSource?: pulumi.Input<boolean>;
    jobDetails?: pulumi.Input<string>;
    jobExceptionMessage?: pulumi.Input<string>;
    jobId?: pulumi.Input<string>;
    jobState?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventoryParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventoryPermissionResourceArgs>[]>;
    policyMoid?: pulumi.Input<string>;
    requestId?: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventorySettingsArgs>;
    sharedScope?: pulumi.Input<string>;
    sourceUuid?: pulumi.Input<string>;
    srcCluster?: pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventorySrcClusterArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventoryTagArgs>[]>;
    targetUuid?: pulumi.Input<string>;
    tgtCluster?: pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventoryTgtClusterArgs>;
    versionContext?: pulumi.Input<inputs.GetHyperflexClusterBackupPolicyInventoryVersionContextArgs>;
}
