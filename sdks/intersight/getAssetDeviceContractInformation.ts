// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAssetDeviceContractInformation(args?: GetAssetDeviceContractInformationArgs, opts?: pulumi.InvokeOptions): Promise<GetAssetDeviceContractInformationResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getAssetDeviceContractInformation:getAssetDeviceContractInformation", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "contract": args.contract,
        "contractStatus": args.contractStatus,
        "contractStatusReason": args.contractStatusReason,
        "contractUnavailableRetryCount": args.contractUnavailableRetryCount,
        "contractUpdatedTime": args.contractUpdatedTime,
        "coveredProductLineEndDate": args.coveredProductLineEndDate,
        "createTime": args.createTime,
        "deviceId": args.deviceId,
        "deviceType": args.deviceType,
        "domainGroupMoid": args.domainGroupMoid,
        "endCustomer": args.endCustomer,
        "endUserGlobalUltimate": args.endUserGlobalUltimate,
        "id": args.id,
        "isValid": args.isValid,
        "itemType": args.itemType,
        "lastDateOfSupport": args.lastDateOfSupport,
        "maintenancePurchaseOrderNumber": args.maintenancePurchaseOrderNumber,
        "maintenanceSalesOrderNumber": args.maintenanceSalesOrderNumber,
        "modTime": args.modTime,
        "moid": args.moid,
        "nrSource": args.nrSource,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platformType": args.platformType,
        "product": args.product,
        "purchaseOrderNumber": args.purchaseOrderNumber,
        "registeredDevice": args.registeredDevice,
        "resellerGlobalUltimate": args.resellerGlobalUltimate,
        "salesOrderNumber": args.salesOrderNumber,
        "serviceDescription": args.serviceDescription,
        "serviceEndDate": args.serviceEndDate,
        "serviceLevel": args.serviceLevel,
        "serviceSku": args.serviceSku,
        "serviceStartDate": args.serviceStartDate,
        "sharedScope": args.sharedScope,
        "stateContract": args.stateContract,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "warrantyEndDate": args.warrantyEndDate,
        "warrantyType": args.warrantyType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAssetDeviceContractInformation.
 */
export interface GetAssetDeviceContractInformationArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetAssetDeviceContractInformationAncestor[];
    classId?: string;
    contract?: inputs.GetAssetDeviceContractInformationContract;
    contractStatus?: string;
    contractStatusReason?: string;
    contractUnavailableRetryCount?: number;
    contractUpdatedTime?: string;
    coveredProductLineEndDate?: string;
    createTime?: string;
    deviceId?: string;
    deviceType?: string;
    domainGroupMoid?: string;
    endCustomer?: inputs.GetAssetDeviceContractInformationEndCustomer;
    endUserGlobalUltimate?: inputs.GetAssetDeviceContractInformationEndUserGlobalUltimate;
    id?: string;
    isValid?: boolean;
    itemType?: string;
    lastDateOfSupport?: string;
    maintenancePurchaseOrderNumber?: string;
    maintenanceSalesOrderNumber?: string;
    modTime?: string;
    moid?: string;
    nrSource?: inputs.GetAssetDeviceContractInformationNrSource;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetAssetDeviceContractInformationParent;
    permissionResources?: inputs.GetAssetDeviceContractInformationPermissionResource[];
    platformType?: string;
    product?: inputs.GetAssetDeviceContractInformationProduct;
    purchaseOrderNumber?: string;
    registeredDevice?: inputs.GetAssetDeviceContractInformationRegisteredDevice;
    resellerGlobalUltimate?: inputs.GetAssetDeviceContractInformationResellerGlobalUltimate;
    salesOrderNumber?: string;
    serviceDescription?: string;
    serviceEndDate?: string;
    serviceLevel?: string;
    serviceSku?: string;
    serviceStartDate?: string;
    sharedScope?: string;
    stateContract?: string;
    tags?: inputs.GetAssetDeviceContractInformationTag[];
    versionContext?: inputs.GetAssetDeviceContractInformationVersionContext;
    warrantyEndDate?: string;
    warrantyType?: string;
}

/**
 * A collection of values returned by getAssetDeviceContractInformation.
 */
export interface GetAssetDeviceContractInformationResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetAssetDeviceContractInformationAncestor[];
    readonly classId?: string;
    readonly contract?: outputs.GetAssetDeviceContractInformationContract;
    readonly contractStatus?: string;
    readonly contractStatusReason?: string;
    readonly contractUnavailableRetryCount?: number;
    readonly contractUpdatedTime?: string;
    readonly coveredProductLineEndDate?: string;
    readonly createTime?: string;
    readonly deviceId?: string;
    readonly deviceType?: string;
    readonly domainGroupMoid?: string;
    readonly endCustomer?: outputs.GetAssetDeviceContractInformationEndCustomer;
    readonly endUserGlobalUltimate?: outputs.GetAssetDeviceContractInformationEndUserGlobalUltimate;
    readonly id: string;
    readonly isValid?: boolean;
    readonly itemType?: string;
    readonly lastDateOfSupport?: string;
    readonly maintenancePurchaseOrderNumber?: string;
    readonly maintenanceSalesOrderNumber?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nrSource?: outputs.GetAssetDeviceContractInformationNrSource;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetAssetDeviceContractInformationParent;
    readonly permissionResources?: outputs.GetAssetDeviceContractInformationPermissionResource[];
    readonly platformType?: string;
    readonly product?: outputs.GetAssetDeviceContractInformationProduct;
    readonly purchaseOrderNumber?: string;
    readonly registeredDevice?: outputs.GetAssetDeviceContractInformationRegisteredDevice;
    readonly resellerGlobalUltimate?: outputs.GetAssetDeviceContractInformationResellerGlobalUltimate;
    readonly results: outputs.GetAssetDeviceContractInformationResult[];
    readonly salesOrderNumber?: string;
    readonly serviceDescription?: string;
    readonly serviceEndDate?: string;
    readonly serviceLevel?: string;
    readonly serviceSku?: string;
    readonly serviceStartDate?: string;
    readonly sharedScope?: string;
    readonly stateContract?: string;
    readonly tags?: outputs.GetAssetDeviceContractInformationTag[];
    readonly versionContext?: outputs.GetAssetDeviceContractInformationVersionContext;
    readonly warrantyEndDate?: string;
    readonly warrantyType?: string;
}
export function getAssetDeviceContractInformationOutput(args?: GetAssetDeviceContractInformationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAssetDeviceContractInformationResult> {
    return pulumi.output(args).apply((a: any) => getAssetDeviceContractInformation(a, opts))
}

/**
 * A collection of arguments for invoking getAssetDeviceContractInformation.
 */
export interface GetAssetDeviceContractInformationOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetAssetDeviceContractInformationAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    contract?: pulumi.Input<inputs.GetAssetDeviceContractInformationContractArgs>;
    contractStatus?: pulumi.Input<string>;
    contractStatusReason?: pulumi.Input<string>;
    contractUnavailableRetryCount?: pulumi.Input<number>;
    contractUpdatedTime?: pulumi.Input<string>;
    coveredProductLineEndDate?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deviceId?: pulumi.Input<string>;
    deviceType?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    endCustomer?: pulumi.Input<inputs.GetAssetDeviceContractInformationEndCustomerArgs>;
    endUserGlobalUltimate?: pulumi.Input<inputs.GetAssetDeviceContractInformationEndUserGlobalUltimateArgs>;
    id?: pulumi.Input<string>;
    isValid?: pulumi.Input<boolean>;
    itemType?: pulumi.Input<string>;
    lastDateOfSupport?: pulumi.Input<string>;
    maintenancePurchaseOrderNumber?: pulumi.Input<string>;
    maintenanceSalesOrderNumber?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nrSource?: pulumi.Input<inputs.GetAssetDeviceContractInformationNrSourceArgs>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetAssetDeviceContractInformationParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetAssetDeviceContractInformationPermissionResourceArgs>[]>;
    platformType?: pulumi.Input<string>;
    product?: pulumi.Input<inputs.GetAssetDeviceContractInformationProductArgs>;
    purchaseOrderNumber?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetAssetDeviceContractInformationRegisteredDeviceArgs>;
    resellerGlobalUltimate?: pulumi.Input<inputs.GetAssetDeviceContractInformationResellerGlobalUltimateArgs>;
    salesOrderNumber?: pulumi.Input<string>;
    serviceDescription?: pulumi.Input<string>;
    serviceEndDate?: pulumi.Input<string>;
    serviceLevel?: pulumi.Input<string>;
    serviceSku?: pulumi.Input<string>;
    serviceStartDate?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    stateContract?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetAssetDeviceContractInformationTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetAssetDeviceContractInformationVersionContextArgs>;
    warrantyEndDate?: pulumi.Input<string>;
    warrantyType?: pulumi.Input<string>;
}
