// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class WorkflowServiceItemActionDefinition extends pulumi.CustomResource {
    /**
     * Get an existing WorkflowServiceItemActionDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkflowServiceItemActionDefinitionState, opts?: pulumi.CustomResourceOptions): WorkflowServiceItemActionDefinition {
        return new WorkflowServiceItemActionDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/workflowServiceItemActionDefinition:WorkflowServiceItemActionDefinition';

    /**
     * Returns true if the given object is an instance of WorkflowServiceItemActionDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkflowServiceItemActionDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkflowServiceItemActionDefinition.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * Action properties for the service item.
     */
    public readonly actionProperties!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionActionProperty[]>;
    /**
     * Type of actionDefinition which decides on how to trigger the action. * `External` - External actions definition can be
     * triggered by enduser to perform actions on the service item. Once action is completed successfully (eg. create/deploy),
     * user cannot re-trigger that action again. * `Internal` - Internal action definition is used to trigger periodic actions
     * on the service item instance. * `Repetitive` - Repetitive action definition is an external action that can be triggered
     * by enduser to perform repetitive actions (eg. Edit/Update/Perform health check) on the created service item.
     */
    public readonly actionType!: pulumi.Output<string | undefined>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    public readonly allowedInstanceStates!: pulumi.Output<string[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionAncestor[]>;
    /**
     * An array of relationships to iamRole resources.
     */
    public readonly associatedRoles!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionAssociatedRole[]>;
    /**
     * The mappings from workflows in the action definition to the service item attribute definition. Any output from core or
     * post-core workflow can be mapped to service item attribute definition. The attribute can be referred using the name of
     * the workflow definition and the attribute name in the following format
     * '${<ServiceItemActionWorkflowDefinition.Name>.output.<outputName>'.
     */
    public readonly attributeParameters!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    public readonly coreWorkflows!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionCoreWorkflow[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The description for this action which provides information on what are the pre-requisites to use this action on the
     * service item and what features are supported by this action.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    public readonly inputDefinitions!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionInputDefinition[]>;
    /**
     * A user friendly short name to identify the action. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-),
     * period (.), colon (:), space ( ) or an underscore (_).
     */
    public readonly label!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The name for this action definition. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.),
     * colon (:) or an underscore (_). Name of the action must be unique within a service item definition.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionParent[]>;
    /**
     * Value in seconds to specify the periodicity of the workflows. A zero value indicate the workflow will not execute
     * periodically. A non-zero value indicate, the workflow will be executed periodically with this periodicity.
     */
    public readonly periodicity!: pulumi.Output<number | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionPermissionResource[]>;
    public readonly postCoreWorkflows!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionPostCoreWorkflow[]>;
    public readonly preCoreWorkflows!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionPreCoreWorkflow[]>;
    /**
     * The flag to indicate that action is restricted on a Private Virtual Appliance.
     */
    public readonly restrictOnPrivateAppliance!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a workflowServiceItemDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly serviceItemDefinitions!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionServiceItemDefinition[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly stopWorkflows!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionStopWorkflow[]>;
    public readonly tags!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionTag[]>;
    /**
     * The user identifier who created or updated the service item action definition.
     */
    public readonly userIdOrEmail!: pulumi.Output<string>;
    /**
     * The current validation state and associated validation errors when state is invalid.
     */
    public readonly validationInformations!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionValidationInformation[]>;
    public readonly validationWorkflows!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionValidationWorkflow[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionVersionContext[]>;
    /**
     * A reference to a workflowWorkflowDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly workflowDefinitions!: pulumi.Output<outputs.WorkflowServiceItemActionDefinitionWorkflowDefinition[]>;

    /**
     * Create a WorkflowServiceItemActionDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkflowServiceItemActionDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkflowServiceItemActionDefinitionArgs | WorkflowServiceItemActionDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkflowServiceItemActionDefinitionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["actionProperties"] = state ? state.actionProperties : undefined;
            resourceInputs["actionType"] = state ? state.actionType : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["allowedInstanceStates"] = state ? state.allowedInstanceStates : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["associatedRoles"] = state ? state.associatedRoles : undefined;
            resourceInputs["attributeParameters"] = state ? state.attributeParameters : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["coreWorkflows"] = state ? state.coreWorkflows : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["inputDefinitions"] = state ? state.inputDefinitions : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["periodicity"] = state ? state.periodicity : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["postCoreWorkflows"] = state ? state.postCoreWorkflows : undefined;
            resourceInputs["preCoreWorkflows"] = state ? state.preCoreWorkflows : undefined;
            resourceInputs["restrictOnPrivateAppliance"] = state ? state.restrictOnPrivateAppliance : undefined;
            resourceInputs["serviceItemDefinitions"] = state ? state.serviceItemDefinitions : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["stopWorkflows"] = state ? state.stopWorkflows : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userIdOrEmail"] = state ? state.userIdOrEmail : undefined;
            resourceInputs["validationInformations"] = state ? state.validationInformations : undefined;
            resourceInputs["validationWorkflows"] = state ? state.validationWorkflows : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["workflowDefinitions"] = state ? state.workflowDefinitions : undefined;
        } else {
            const args = argsOrState as WorkflowServiceItemActionDefinitionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["actionProperties"] = args ? args.actionProperties : undefined;
            resourceInputs["actionType"] = args ? args.actionType : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["allowedInstanceStates"] = args ? args.allowedInstanceStates : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["associatedRoles"] = args ? args.associatedRoles : undefined;
            resourceInputs["attributeParameters"] = args ? args.attributeParameters : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["coreWorkflows"] = args ? args.coreWorkflows : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["inputDefinitions"] = args ? args.inputDefinitions : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["periodicity"] = args ? args.periodicity : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["postCoreWorkflows"] = args ? args.postCoreWorkflows : undefined;
            resourceInputs["preCoreWorkflows"] = args ? args.preCoreWorkflows : undefined;
            resourceInputs["restrictOnPrivateAppliance"] = args ? args.restrictOnPrivateAppliance : undefined;
            resourceInputs["serviceItemDefinitions"] = args ? args.serviceItemDefinitions : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["stopWorkflows"] = args ? args.stopWorkflows : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userIdOrEmail"] = args ? args.userIdOrEmail : undefined;
            resourceInputs["validationInformations"] = args ? args.validationInformations : undefined;
            resourceInputs["validationWorkflows"] = args ? args.validationWorkflows : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["workflowDefinitions"] = args ? args.workflowDefinitions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkflowServiceItemActionDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WorkflowServiceItemActionDefinition resources.
 */
export interface WorkflowServiceItemActionDefinitionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * Action properties for the service item.
     */
    actionProperties?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionActionProperty>[]>;
    /**
     * Type of actionDefinition which decides on how to trigger the action. * `External` - External actions definition can be
     * triggered by enduser to perform actions on the service item. Once action is completed successfully (eg. create/deploy),
     * user cannot re-trigger that action again. * `Internal` - Internal action definition is used to trigger periodic actions
     * on the service item instance. * `Repetitive` - Repetitive action definition is an external action that can be triggered
     * by enduser to perform repetitive actions (eg. Edit/Update/Perform health check) on the created service item.
     */
    actionType?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    allowedInstanceStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionAncestor>[]>;
    /**
     * An array of relationships to iamRole resources.
     */
    associatedRoles?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionAssociatedRole>[]>;
    /**
     * The mappings from workflows in the action definition to the service item attribute definition. Any output from core or
     * post-core workflow can be mapped to service item attribute definition. The attribute can be referred using the name of
     * the workflow definition and the attribute name in the following format
     * '${<ServiceItemActionWorkflowDefinition.Name>.output.<outputName>'.
     */
    attributeParameters?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    coreWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionCoreWorkflow>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description for this action which provides information on what are the pre-requisites to use this action on the
     * service item and what features are supported by this action.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    inputDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionInputDefinition>[]>;
    /**
     * A user friendly short name to identify the action. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-),
     * period (.), colon (:), space ( ) or an underscore (_).
     */
    label?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name for this action definition. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.),
     * colon (:) or an underscore (_). Name of the action must be unique within a service item definition.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionParent>[]>;
    /**
     * Value in seconds to specify the periodicity of the workflows. A zero value indicate the workflow will not execute
     * periodically. A non-zero value indicate, the workflow will be executed periodically with this periodicity.
     */
    periodicity?: pulumi.Input<number>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionPermissionResource>[]>;
    postCoreWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionPostCoreWorkflow>[]>;
    preCoreWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionPreCoreWorkflow>[]>;
    /**
     * The flag to indicate that action is restricted on a Private Virtual Appliance.
     */
    restrictOnPrivateAppliance?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowServiceItemDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    serviceItemDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionServiceItemDefinition>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    stopWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionStopWorkflow>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionTag>[]>;
    /**
     * The user identifier who created or updated the service item action definition.
     */
    userIdOrEmail?: pulumi.Input<string>;
    /**
     * The current validation state and associated validation errors when state is invalid.
     */
    validationInformations?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionValidationInformation>[]>;
    validationWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionValidationWorkflow>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionVersionContext>[]>;
    /**
     * A reference to a workflowWorkflowDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    workflowDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionWorkflowDefinition>[]>;
}

/**
 * The set of arguments for constructing a WorkflowServiceItemActionDefinition resource.
 */
export interface WorkflowServiceItemActionDefinitionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * Action properties for the service item.
     */
    actionProperties?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionActionProperty>[]>;
    /**
     * Type of actionDefinition which decides on how to trigger the action. * `External` - External actions definition can be
     * triggered by enduser to perform actions on the service item. Once action is completed successfully (eg. create/deploy),
     * user cannot re-trigger that action again. * `Internal` - Internal action definition is used to trigger periodic actions
     * on the service item instance. * `Repetitive` - Repetitive action definition is an external action that can be triggered
     * by enduser to perform repetitive actions (eg. Edit/Update/Perform health check) on the created service item.
     */
    actionType?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    allowedInstanceStates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionAncestor>[]>;
    /**
     * An array of relationships to iamRole resources.
     */
    associatedRoles?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionAssociatedRole>[]>;
    /**
     * The mappings from workflows in the action definition to the service item attribute definition. Any output from core or
     * post-core workflow can be mapped to service item attribute definition. The attribute can be referred using the name of
     * the workflow definition and the attribute name in the following format
     * '${<ServiceItemActionWorkflowDefinition.Name>.output.<outputName>'.
     */
    attributeParameters?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    coreWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionCoreWorkflow>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description for this action which provides information on what are the pre-requisites to use this action on the
     * service item and what features are supported by this action.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    inputDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionInputDefinition>[]>;
    /**
     * A user friendly short name to identify the action. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-),
     * period (.), colon (:), space ( ) or an underscore (_).
     */
    label?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name for this action definition. Name can only contain letters (a-z, A-Z), numbers (0-9), hyphen (-), period (.),
     * colon (:) or an underscore (_). Name of the action must be unique within a service item definition.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionParent>[]>;
    /**
     * Value in seconds to specify the periodicity of the workflows. A zero value indicate the workflow will not execute
     * periodically. A non-zero value indicate, the workflow will be executed periodically with this periodicity.
     */
    periodicity?: pulumi.Input<number>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionPermissionResource>[]>;
    postCoreWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionPostCoreWorkflow>[]>;
    preCoreWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionPreCoreWorkflow>[]>;
    /**
     * The flag to indicate that action is restricted on a Private Virtual Appliance.
     */
    restrictOnPrivateAppliance?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowServiceItemDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    serviceItemDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionServiceItemDefinition>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    stopWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionStopWorkflow>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionTag>[]>;
    /**
     * The user identifier who created or updated the service item action definition.
     */
    userIdOrEmail?: pulumi.Input<string>;
    /**
     * The current validation state and associated validation errors when state is invalid.
     */
    validationInformations?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionValidationInformation>[]>;
    validationWorkflows?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionValidationWorkflow>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionVersionContext>[]>;
    /**
     * A reference to a workflowWorkflowDefinition resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    workflowDefinitions?: pulumi.Input<pulumi.Input<inputs.WorkflowServiceItemActionDefinitionWorkflowDefinition>[]>;
}
