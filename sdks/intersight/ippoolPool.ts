// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IppoolPool extends pulumi.CustomResource {
    /**
     * Get an existing IppoolPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IppoolPoolState, opts?: pulumi.CustomResourceOptions): IppoolPool {
        return new IppoolPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/ippoolPool:IppoolPool';

    /**
     * Returns true if the given object is an instance of IppoolPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IppoolPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IppoolPool.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.IppoolPoolAncestor[]>;
    /**
     * Number of IDs that are currently assigned (in use).
     */
    public readonly assigned!: pulumi.Output<number>;
    /**
     * Assignment order decides the order in which the next identifier is allocated. * `sequential` - Identifiers are assigned
     * in a sequential order. * `default` - Assignment order is decided by the system.
     */
    public readonly assignmentOrder!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Enables subnet configuration at the block level.
     */
    public readonly enableBlockLevelSubnetConfig!: pulumi.Output<boolean | undefined>;
    public readonly ipV4Blocks!: pulumi.Output<outputs.IppoolPoolIpV4Block[]>;
    /**
     * Netmask, Gateway and DNS settings for IPv4 addresses.
     */
    public readonly ipV4Configs!: pulumi.Output<outputs.IppoolPoolIpV4Config[]>;
    public readonly ipV6Blocks!: pulumi.Output<outputs.IppoolPoolIpV6Block[]>;
    /**
     * Netmask, Gateway and DNS settings for IPv6 addresses.
     */
    public readonly ipV6Configs!: pulumi.Output<outputs.IppoolPoolIpV6Config[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.IppoolPoolOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.IppoolPoolParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.IppoolPoolPermissionResource[]>;
    /**
     * An array of relationships to ippoolReservation resources.
     */
    public readonly reservations!: pulumi.Output<outputs.IppoolPoolReservation[]>;
    /**
     * Number of IDs that are currently reserved (and not in use).
     */
    public readonly reserved!: pulumi.Output<number>;
    /**
     * An array of relationships to ippoolShadowPool resources.
     */
    public readonly shadowPools!: pulumi.Output<outputs.IppoolPoolShadowPool[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Total number of identifiers in this pool.
     */
    public readonly size!: pulumi.Output<number>;
    public readonly tags!: pulumi.Output<outputs.IppoolPoolTag[]>;
    /**
     * Number of IPv4 addresses currently in use.
     */
    public readonly v4Assigned!: pulumi.Output<number>;
    /**
     * Number of IPv4 addresses in this pool.
     */
    public readonly v4Size!: pulumi.Output<number>;
    /**
     * Number of IPv6 addresses currently in use.
     */
    public readonly v6Assigned!: pulumi.Output<number>;
    /**
     * Number of IPv6 addresses in this pool.
     */
    public readonly v6Size!: pulumi.Output<number>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.IppoolPoolVersionContext[]>;

    /**
     * Create a IppoolPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IppoolPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IppoolPoolArgs | IppoolPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IppoolPoolState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["assigned"] = state ? state.assigned : undefined;
            resourceInputs["assignmentOrder"] = state ? state.assignmentOrder : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["enableBlockLevelSubnetConfig"] = state ? state.enableBlockLevelSubnetConfig : undefined;
            resourceInputs["ipV4Blocks"] = state ? state.ipV4Blocks : undefined;
            resourceInputs["ipV4Configs"] = state ? state.ipV4Configs : undefined;
            resourceInputs["ipV6Blocks"] = state ? state.ipV6Blocks : undefined;
            resourceInputs["ipV6Configs"] = state ? state.ipV6Configs : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["reservations"] = state ? state.reservations : undefined;
            resourceInputs["reserved"] = state ? state.reserved : undefined;
            resourceInputs["shadowPools"] = state ? state.shadowPools : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["v4Assigned"] = state ? state.v4Assigned : undefined;
            resourceInputs["v4Size"] = state ? state.v4Size : undefined;
            resourceInputs["v6Assigned"] = state ? state.v6Assigned : undefined;
            resourceInputs["v6Size"] = state ? state.v6Size : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as IppoolPoolArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["assigned"] = args ? args.assigned : undefined;
            resourceInputs["assignmentOrder"] = args ? args.assignmentOrder : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["enableBlockLevelSubnetConfig"] = args ? args.enableBlockLevelSubnetConfig : undefined;
            resourceInputs["ipV4Blocks"] = args ? args.ipV4Blocks : undefined;
            resourceInputs["ipV4Configs"] = args ? args.ipV4Configs : undefined;
            resourceInputs["ipV6Blocks"] = args ? args.ipV6Blocks : undefined;
            resourceInputs["ipV6Configs"] = args ? args.ipV6Configs : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["reservations"] = args ? args.reservations : undefined;
            resourceInputs["reserved"] = args ? args.reserved : undefined;
            resourceInputs["shadowPools"] = args ? args.shadowPools : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["v4Assigned"] = args ? args.v4Assigned : undefined;
            resourceInputs["v4Size"] = args ? args.v4Size : undefined;
            resourceInputs["v6Assigned"] = args ? args.v6Assigned : undefined;
            resourceInputs["v6Size"] = args ? args.v6Size : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IppoolPool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IppoolPool resources.
 */
export interface IppoolPoolState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.IppoolPoolAncestor>[]>;
    /**
     * Number of IDs that are currently assigned (in use).
     */
    assigned?: pulumi.Input<number>;
    /**
     * Assignment order decides the order in which the next identifier is allocated. * `sequential` - Identifiers are assigned
     * in a sequential order. * `default` - Assignment order is decided by the system.
     */
    assignmentOrder?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Enables subnet configuration at the block level.
     */
    enableBlockLevelSubnetConfig?: pulumi.Input<boolean>;
    ipV4Blocks?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV4Block>[]>;
    /**
     * Netmask, Gateway and DNS settings for IPv4 addresses.
     */
    ipV4Configs?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV4Config>[]>;
    ipV6Blocks?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV6Block>[]>;
    /**
     * Netmask, Gateway and DNS settings for IPv6 addresses.
     */
    ipV6Configs?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV6Config>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.IppoolPoolOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.IppoolPoolParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.IppoolPoolPermissionResource>[]>;
    /**
     * An array of relationships to ippoolReservation resources.
     */
    reservations?: pulumi.Input<pulumi.Input<inputs.IppoolPoolReservation>[]>;
    /**
     * Number of IDs that are currently reserved (and not in use).
     */
    reserved?: pulumi.Input<number>;
    /**
     * An array of relationships to ippoolShadowPool resources.
     */
    shadowPools?: pulumi.Input<pulumi.Input<inputs.IppoolPoolShadowPool>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Total number of identifiers in this pool.
     */
    size?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.IppoolPoolTag>[]>;
    /**
     * Number of IPv4 addresses currently in use.
     */
    v4Assigned?: pulumi.Input<number>;
    /**
     * Number of IPv4 addresses in this pool.
     */
    v4Size?: pulumi.Input<number>;
    /**
     * Number of IPv6 addresses currently in use.
     */
    v6Assigned?: pulumi.Input<number>;
    /**
     * Number of IPv6 addresses in this pool.
     */
    v6Size?: pulumi.Input<number>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.IppoolPoolVersionContext>[]>;
}

/**
 * The set of arguments for constructing a IppoolPool resource.
 */
export interface IppoolPoolArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.IppoolPoolAncestor>[]>;
    /**
     * Number of IDs that are currently assigned (in use).
     */
    assigned?: pulumi.Input<number>;
    /**
     * Assignment order decides the order in which the next identifier is allocated. * `sequential` - Identifiers are assigned
     * in a sequential order. * `default` - Assignment order is decided by the system.
     */
    assignmentOrder?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Enables subnet configuration at the block level.
     */
    enableBlockLevelSubnetConfig?: pulumi.Input<boolean>;
    ipV4Blocks?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV4Block>[]>;
    /**
     * Netmask, Gateway and DNS settings for IPv4 addresses.
     */
    ipV4Configs?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV4Config>[]>;
    ipV6Blocks?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV6Block>[]>;
    /**
     * Netmask, Gateway and DNS settings for IPv6 addresses.
     */
    ipV6Configs?: pulumi.Input<pulumi.Input<inputs.IppoolPoolIpV6Config>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.IppoolPoolOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.IppoolPoolParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.IppoolPoolPermissionResource>[]>;
    /**
     * An array of relationships to ippoolReservation resources.
     */
    reservations?: pulumi.Input<pulumi.Input<inputs.IppoolPoolReservation>[]>;
    /**
     * Number of IDs that are currently reserved (and not in use).
     */
    reserved?: pulumi.Input<number>;
    /**
     * An array of relationships to ippoolShadowPool resources.
     */
    shadowPools?: pulumi.Input<pulumi.Input<inputs.IppoolPoolShadowPool>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Total number of identifiers in this pool.
     */
    size?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.IppoolPoolTag>[]>;
    /**
     * Number of IPv4 addresses currently in use.
     */
    v4Assigned?: pulumi.Input<number>;
    /**
     * Number of IPv4 addresses in this pool.
     */
    v4Size?: pulumi.Input<number>;
    /**
     * Number of IPv6 addresses currently in use.
     */
    v6Assigned?: pulumi.Input<number>;
    /**
     * Number of IPv6 addresses in this pool.
     */
    v6Size?: pulumi.Input<number>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.IppoolPoolVersionContext>[]>;
}
