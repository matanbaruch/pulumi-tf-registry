// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetrySyslogRemoteDest(args?: GetNiatelemetrySyslogRemoteDestArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetrySyslogRemoteDestResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetrySyslogRemoteDest:getNiatelemetrySyslogRemoteDest", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "adminState": args.adminState,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "commonPolicy": args.commonPolicy,
        "createTime": args.createTime,
        "dn": args.dn,
        "domainGroupMoid": args.domainGroupMoid,
        "host": args.host,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "recordType": args.recordType,
        "recordVersion": args.recordVersion,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "siteName": args.siteName,
        "syslogRsDestGrp": args.syslogRsDestGrp,
        "syslogSrc": args.syslogSrc,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetrySyslogRemoteDest.
 */
export interface GetNiatelemetrySyslogRemoteDestArgs {
    accountMoid?: string;
    additionalProperties?: string;
    adminState?: string;
    ancestors?: inputs.GetNiatelemetrySyslogRemoteDestAncestor[];
    classId?: string;
    commonPolicy?: string;
    createTime?: string;
    dn?: string;
    domainGroupMoid?: string;
    host?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetrySyslogRemoteDestParent;
    permissionResources?: inputs.GetNiatelemetrySyslogRemoteDestPermissionResource[];
    recordType?: string;
    recordVersion?: string;
    registeredDevice?: inputs.GetNiatelemetrySyslogRemoteDestRegisteredDevice;
    sharedScope?: string;
    siteName?: string;
    syslogRsDestGrp?: string;
    syslogSrc?: string;
    tags?: inputs.GetNiatelemetrySyslogRemoteDestTag[];
    versionContext?: inputs.GetNiatelemetrySyslogRemoteDestVersionContext;
}

/**
 * A collection of values returned by getNiatelemetrySyslogRemoteDest.
 */
export interface GetNiatelemetrySyslogRemoteDestResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly adminState?: string;
    readonly ancestors?: outputs.GetNiatelemetrySyslogRemoteDestAncestor[];
    readonly classId?: string;
    readonly commonPolicy?: string;
    readonly createTime?: string;
    readonly dn?: string;
    readonly domainGroupMoid?: string;
    readonly host?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetrySyslogRemoteDestParent;
    readonly permissionResources?: outputs.GetNiatelemetrySyslogRemoteDestPermissionResource[];
    readonly recordType?: string;
    readonly recordVersion?: string;
    readonly registeredDevice?: outputs.GetNiatelemetrySyslogRemoteDestRegisteredDevice;
    readonly results: outputs.GetNiatelemetrySyslogRemoteDestResult[];
    readonly sharedScope?: string;
    readonly siteName?: string;
    readonly syslogRsDestGrp?: string;
    readonly syslogSrc?: string;
    readonly tags?: outputs.GetNiatelemetrySyslogRemoteDestTag[];
    readonly versionContext?: outputs.GetNiatelemetrySyslogRemoteDestVersionContext;
}
export function getNiatelemetrySyslogRemoteDestOutput(args?: GetNiatelemetrySyslogRemoteDestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetrySyslogRemoteDestResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetrySyslogRemoteDest(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetrySyslogRemoteDest.
 */
export interface GetNiatelemetrySyslogRemoteDestOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    adminState?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetrySyslogRemoteDestAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    commonPolicy?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dn?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetrySyslogRemoteDestParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetrySyslogRemoteDestPermissionResourceArgs>[]>;
    recordType?: pulumi.Input<string>;
    recordVersion?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetrySyslogRemoteDestRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    siteName?: pulumi.Input<string>;
    syslogRsDestGrp?: pulumi.Input<string>;
    syslogSrc?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetrySyslogRemoteDestTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetrySyslogRemoteDestVersionContextArgs>;
}
