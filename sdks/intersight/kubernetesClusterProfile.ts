// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class KubernetesClusterProfile extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesClusterProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesClusterProfileState, opts?: pulumi.CustomResourceOptions): KubernetesClusterProfile {
        return new KubernetesClusterProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/kubernetesClusterProfile:KubernetesClusterProfile';

    /**
     * Returns true if the given object is an instance of KubernetesClusterProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesClusterProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesClusterProfile.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * A reference to a kubernetesAciCniProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly aciCniProfiles!: pulumi.Output<outputs.KubernetesClusterProfileAciCniProfile[]>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * No longer updated, to see action details such as name of the action performed, status, failure reason, etc. look at the
     * ConfigContext and at details of the related workflowInfo.
     */
    public readonly actionInfos!: pulumi.Output<outputs.KubernetesClusterProfileActionInfo[]>;
    public readonly actionParams!: pulumi.Output<outputs.KubernetesClusterProfileActionParam[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.KubernetesClusterProfileAncestor[]>;
    /**
     * A reference to a kubernetesCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly associatedClusters!: pulumi.Output<outputs.KubernetesClusterProfileAssociatedCluster[]>;
    /**
     * Certificates and keys that are used to configure a Kubernetes cluster. If user does not specify any Certificates or
     * Keys, system generated certificates will be used to configure the cluster.
     */
    public readonly certConfigs!: pulumi.Output<outputs.KubernetesClusterProfileCertConfig[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to ippoolPool resources.
     */
    public readonly clusterIpPools!: pulumi.Output<outputs.KubernetesClusterProfileClusterIpPool[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    public readonly configContexts!: pulumi.Output<outputs.KubernetesClusterProfileConfigContext[]>;
    /**
     * A reference to a kubernetesContainerRuntimePolicy resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    public readonly containerRuntimeConfigs!: pulumi.Output<outputs.KubernetesClusterProfileContainerRuntimeConfig[]>;
    /**
     * A reference to a kubernetesHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly containerRuntimeProxyPolicies!: pulumi.Output<outputs.KubernetesClusterProfileContainerRuntimeProxyPolicy[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A reference to a kubernetesHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly deviceConnectorProxyPolicies!: pulumi.Output<outputs.KubernetesClusterProfileDeviceConnectorProxyPolicy[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    public readonly essentialAddons!: pulumi.Output<outputs.KubernetesClusterProfileEssentialAddon[]>;
    /**
     * Certificates and keys that are used to access a Kubernetes cluster.
     */
    public readonly kubeConfigs!: pulumi.Output<outputs.KubernetesClusterProfileKubeConfig[]>;
    /**
     * An array of relationships to ippoolBlockLease resources.
     */
    public readonly loadbalancerBlockIpLeases!: pulumi.Output<outputs.KubernetesClusterProfileLoadbalancerBlockIpLease[]>;
    /**
     * An array of relationships to ippoolIpLease resources.
     */
    public readonly loadbalancerIpLeases!: pulumi.Output<outputs.KubernetesClusterProfileLoadbalancerIpLease[]>;
    /**
     * Management mode for the cluster. In some cases Intersight kubernetes service is not required to provision and manage the
     * management entities and endpoints (for e.g. EKS). In most other cases it will be required to provision and manage these
     * entities and endpoints. * `Provided` - Cluster management entities and endpoints are provided by the infrastructure
     * platform. * `Managed` - Cluster management entities and endpoints are provisioned and managed by Intersight kubernetes
     * service.
     */
    public readonly managedMode!: pulumi.Output<string | undefined>;
    /**
     * Configuration required for provisioning and management of cluster management entities. Required if 'managedMode' is set
     * to 'Managed'.
     */
    public readonly managementConfigs!: pulumi.Output<outputs.KubernetesClusterProfileManagementConfig[]>;
    /**
     * A reference to a ippoolIpLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly masterVipLeases!: pulumi.Output<outputs.KubernetesClusterProfileMasterVipLease[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the profile instance or profile template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A reference to a kubernetesNetworkPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly netConfigs!: pulumi.Output<outputs.KubernetesClusterProfileNetConfig[]>;
    /**
     * An array of relationships to kubernetesNodeGroupProfile resources.
     */
    public readonly nodeGroups!: pulumi.Output<outputs.KubernetesClusterProfileNodeGroup[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.KubernetesClusterProfileOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parentSolutionProfiles!: pulumi.Output<outputs.KubernetesClusterProfileParentSolutionProfile[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.KubernetesClusterProfileParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.KubernetesClusterProfilePermissionResource[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    public readonly policyBuckets!: pulumi.Output<outputs.KubernetesClusterProfilePolicyBucket[]>;
    public readonly scheduledActions!: pulumi.Output<outputs.KubernetesClusterProfileScheduledAction[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly srcTemplates!: pulumi.Output<outputs.KubernetesClusterProfileSrcTemplate[]>;
    /**
     * Status of the Kubernetes cluster and its nodes. * `Undeployed` - The cluster is undeployed. * `Configuring` - The
     * cluster is being configured. * `Deploying` - The cluster is being deployed. * `Undeploying` - The cluster is being
     * undeployed. * `DeployFailedTerminal` - The Cluster Deploy failed creation and can not be recovered, only Delete or
     * Undeploy operations are available for this Cluster. * `DeployFailed` - The cluster deployment failed. * `Upgrading` -
     * The cluster is being upgraded. * `Deleting` - The cluster is being deleted. * `DeleteFailed` - The Cluster Delete failed
     * and the Cluster can not be recovered, only Delete or Undeploy operations are available for this Cluster. * `Ready` - The
     * cluster is ready for use. * `Active` - The cluster is being active. * `Shutdown` - All the nodes in the cluster are
     * powered off. * `Terminated` - The cluster is terminated. * `Deployed` - The cluster is deployed. The cluster may not yet
     * be ready for use. * `UndeployFailed` - The cluster undeploy action failed. * `NotReady` - The cluster is created and
     * some nodes are not ready.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * A reference to a kubernetesSysConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly sysConfigs!: pulumi.Output<outputs.KubernetesClusterProfileSysConfig[]>;
    public readonly tags!: pulumi.Output<outputs.KubernetesClusterProfileTag[]>;
    /**
     * A reference to a kubernetesTrustedRegistriesPolicy resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    public readonly trustedRegistries!: pulumi.Output<outputs.KubernetesClusterProfileTrustedRegistry[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.KubernetesClusterProfileVersionContext[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    public readonly waitForCompletion!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly workflowInfos!: pulumi.Output<outputs.KubernetesClusterProfileWorkflowInfo[]>;

    /**
     * Create a KubernetesClusterProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KubernetesClusterProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesClusterProfileArgs | KubernetesClusterProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesClusterProfileState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["aciCniProfiles"] = state ? state.aciCniProfiles : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["actionInfos"] = state ? state.actionInfos : undefined;
            resourceInputs["actionParams"] = state ? state.actionParams : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["associatedClusters"] = state ? state.associatedClusters : undefined;
            resourceInputs["certConfigs"] = state ? state.certConfigs : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clusterIpPools"] = state ? state.clusterIpPools : undefined;
            resourceInputs["configContexts"] = state ? state.configContexts : undefined;
            resourceInputs["containerRuntimeConfigs"] = state ? state.containerRuntimeConfigs : undefined;
            resourceInputs["containerRuntimeProxyPolicies"] = state ? state.containerRuntimeProxyPolicies : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceConnectorProxyPolicies"] = state ? state.deviceConnectorProxyPolicies : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["essentialAddons"] = state ? state.essentialAddons : undefined;
            resourceInputs["kubeConfigs"] = state ? state.kubeConfigs : undefined;
            resourceInputs["loadbalancerBlockIpLeases"] = state ? state.loadbalancerBlockIpLeases : undefined;
            resourceInputs["loadbalancerIpLeases"] = state ? state.loadbalancerIpLeases : undefined;
            resourceInputs["managedMode"] = state ? state.managedMode : undefined;
            resourceInputs["managementConfigs"] = state ? state.managementConfigs : undefined;
            resourceInputs["masterVipLeases"] = state ? state.masterVipLeases : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netConfigs"] = state ? state.netConfigs : undefined;
            resourceInputs["nodeGroups"] = state ? state.nodeGroups : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parentSolutionProfiles"] = state ? state.parentSolutionProfiles : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["policyBuckets"] = state ? state.policyBuckets : undefined;
            resourceInputs["scheduledActions"] = state ? state.scheduledActions : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["srcTemplates"] = state ? state.srcTemplates : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["sysConfigs"] = state ? state.sysConfigs : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trustedRegistries"] = state ? state.trustedRegistries : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = state ? state.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = state ? state.workflowInfos : undefined;
        } else {
            const args = argsOrState as KubernetesClusterProfileArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["aciCniProfiles"] = args ? args.aciCniProfiles : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["actionInfos"] = args ? args.actionInfos : undefined;
            resourceInputs["actionParams"] = args ? args.actionParams : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["associatedClusters"] = args ? args.associatedClusters : undefined;
            resourceInputs["certConfigs"] = args ? args.certConfigs : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clusterIpPools"] = args ? args.clusterIpPools : undefined;
            resourceInputs["configContexts"] = args ? args.configContexts : undefined;
            resourceInputs["containerRuntimeConfigs"] = args ? args.containerRuntimeConfigs : undefined;
            resourceInputs["containerRuntimeProxyPolicies"] = args ? args.containerRuntimeProxyPolicies : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceConnectorProxyPolicies"] = args ? args.deviceConnectorProxyPolicies : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["essentialAddons"] = args ? args.essentialAddons : undefined;
            resourceInputs["kubeConfigs"] = args ? args.kubeConfigs : undefined;
            resourceInputs["loadbalancerBlockIpLeases"] = args ? args.loadbalancerBlockIpLeases : undefined;
            resourceInputs["loadbalancerIpLeases"] = args ? args.loadbalancerIpLeases : undefined;
            resourceInputs["managedMode"] = args ? args.managedMode : undefined;
            resourceInputs["managementConfigs"] = args ? args.managementConfigs : undefined;
            resourceInputs["masterVipLeases"] = args ? args.masterVipLeases : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["netConfigs"] = args ? args.netConfigs : undefined;
            resourceInputs["nodeGroups"] = args ? args.nodeGroups : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parentSolutionProfiles"] = args ? args.parentSolutionProfiles : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["policyBuckets"] = args ? args.policyBuckets : undefined;
            resourceInputs["scheduledActions"] = args ? args.scheduledActions : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["srcTemplates"] = args ? args.srcTemplates : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["sysConfigs"] = args ? args.sysConfigs : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trustedRegistries"] = args ? args.trustedRegistries : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = args ? args.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = args ? args.workflowInfos : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesClusterProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering KubernetesClusterProfile resources.
 */
export interface KubernetesClusterProfileState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesAciCniProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    aciCniProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileAciCniProfile>[]>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    action?: pulumi.Input<string>;
    /**
     * No longer updated, to see action details such as name of the action performed, status, failure reason, etc. look at the
     * ConfigContext and at details of the related workflowInfo.
     */
    actionInfos?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileActionInfo>[]>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileActionParam>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileAncestor>[]>;
    /**
     * A reference to a kubernetesCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    associatedClusters?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileAssociatedCluster>[]>;
    /**
     * Certificates and keys that are used to configure a Kubernetes cluster. If user does not specify any Certificates or
     * Keys, system generated certificates will be used to configure the cluster.
     */
    certConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileCertConfig>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to ippoolPool resources.
     */
    clusterIpPools?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileClusterIpPool>[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    configContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileConfigContext>[]>;
    /**
     * A reference to a kubernetesContainerRuntimePolicy resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    containerRuntimeConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileContainerRuntimeConfig>[]>;
    /**
     * A reference to a kubernetesHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    containerRuntimeProxyPolicies?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileContainerRuntimeProxyPolicy>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    deviceConnectorProxyPolicies?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileDeviceConnectorProxyPolicy>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    essentialAddons?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileEssentialAddon>[]>;
    /**
     * Certificates and keys that are used to access a Kubernetes cluster.
     */
    kubeConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileKubeConfig>[]>;
    /**
     * An array of relationships to ippoolBlockLease resources.
     */
    loadbalancerBlockIpLeases?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileLoadbalancerBlockIpLease>[]>;
    /**
     * An array of relationships to ippoolIpLease resources.
     */
    loadbalancerIpLeases?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileLoadbalancerIpLease>[]>;
    /**
     * Management mode for the cluster. In some cases Intersight kubernetes service is not required to provision and manage the
     * management entities and endpoints (for e.g. EKS). In most other cases it will be required to provision and manage these
     * entities and endpoints. * `Provided` - Cluster management entities and endpoints are provided by the infrastructure
     * platform. * `Managed` - Cluster management entities and endpoints are provisioned and managed by Intersight kubernetes
     * service.
     */
    managedMode?: pulumi.Input<string>;
    /**
     * Configuration required for provisioning and management of cluster management entities. Required if 'managedMode' is set
     * to 'Managed'.
     */
    managementConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileManagementConfig>[]>;
    /**
     * A reference to a ippoolIpLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    masterVipLeases?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileMasterVipLease>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the profile instance or profile template.
     */
    name?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesNetworkPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    netConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileNetConfig>[]>;
    /**
     * An array of relationships to kubernetesNodeGroupProfile resources.
     */
    nodeGroups?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileNodeGroup>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parentSolutionProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileParentSolutionProfile>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfilePermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfilePolicyBucket>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileScheduledAction>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileSrcTemplate>[]>;
    /**
     * Status of the Kubernetes cluster and its nodes. * `Undeployed` - The cluster is undeployed. * `Configuring` - The
     * cluster is being configured. * `Deploying` - The cluster is being deployed. * `Undeploying` - The cluster is being
     * undeployed. * `DeployFailedTerminal` - The Cluster Deploy failed creation and can not be recovered, only Delete or
     * Undeploy operations are available for this Cluster. * `DeployFailed` - The cluster deployment failed. * `Upgrading` -
     * The cluster is being upgraded. * `Deleting` - The cluster is being deleted. * `DeleteFailed` - The Cluster Delete failed
     * and the Cluster can not be recovered, only Delete or Undeploy operations are available for this Cluster. * `Ready` - The
     * cluster is ready for use. * `Active` - The cluster is being active. * `Shutdown` - All the nodes in the cluster are
     * powered off. * `Terminated` - The cluster is terminated. * `Deployed` - The cluster is deployed. The cluster may not yet
     * be ready for use. * `UndeployFailed` - The cluster undeploy action failed. * `NotReady` - The cluster is created and
     * some nodes are not ready.
     */
    status?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesSysConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    sysConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileSysConfig>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileTag>[]>;
    /**
     * A reference to a kubernetesTrustedRegistriesPolicy resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    trustedRegistries?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileTrustedRegistry>[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    type?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileWorkflowInfo>[]>;
}

/**
 * The set of arguments for constructing a KubernetesClusterProfile resource.
 */
export interface KubernetesClusterProfileArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesAciCniProfile resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    aciCniProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileAciCniProfile>[]>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    action?: pulumi.Input<string>;
    /**
     * No longer updated, to see action details such as name of the action performed, status, failure reason, etc. look at the
     * ConfigContext and at details of the related workflowInfo.
     */
    actionInfos?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileActionInfo>[]>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileActionParam>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileAncestor>[]>;
    /**
     * A reference to a kubernetesCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    associatedClusters?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileAssociatedCluster>[]>;
    /**
     * Certificates and keys that are used to configure a Kubernetes cluster. If user does not specify any Certificates or
     * Keys, system generated certificates will be used to configure the cluster.
     */
    certConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileCertConfig>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to ippoolPool resources.
     */
    clusterIpPools?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileClusterIpPool>[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    configContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileConfigContext>[]>;
    /**
     * A reference to a kubernetesContainerRuntimePolicy resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    containerRuntimeConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileContainerRuntimeConfig>[]>;
    /**
     * A reference to a kubernetesHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    containerRuntimeProxyPolicies?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileContainerRuntimeProxyPolicy>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    deviceConnectorProxyPolicies?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileDeviceConnectorProxyPolicy>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    essentialAddons?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileEssentialAddon>[]>;
    /**
     * Certificates and keys that are used to access a Kubernetes cluster.
     */
    kubeConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileKubeConfig>[]>;
    /**
     * An array of relationships to ippoolBlockLease resources.
     */
    loadbalancerBlockIpLeases?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileLoadbalancerBlockIpLease>[]>;
    /**
     * An array of relationships to ippoolIpLease resources.
     */
    loadbalancerIpLeases?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileLoadbalancerIpLease>[]>;
    /**
     * Management mode for the cluster. In some cases Intersight kubernetes service is not required to provision and manage the
     * management entities and endpoints (for e.g. EKS). In most other cases it will be required to provision and manage these
     * entities and endpoints. * `Provided` - Cluster management entities and endpoints are provided by the infrastructure
     * platform. * `Managed` - Cluster management entities and endpoints are provisioned and managed by Intersight kubernetes
     * service.
     */
    managedMode?: pulumi.Input<string>;
    /**
     * Configuration required for provisioning and management of cluster management entities. Required if 'managedMode' is set
     * to 'Managed'.
     */
    managementConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileManagementConfig>[]>;
    /**
     * A reference to a ippoolIpLease resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    masterVipLeases?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileMasterVipLease>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the profile instance or profile template.
     */
    name?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesNetworkPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    netConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileNetConfig>[]>;
    /**
     * An array of relationships to kubernetesNodeGroupProfile resources.
     */
    nodeGroups?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileNodeGroup>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parentSolutionProfiles?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileParentSolutionProfile>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfilePermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfilePolicyBucket>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileScheduledAction>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileSrcTemplate>[]>;
    /**
     * Status of the Kubernetes cluster and its nodes. * `Undeployed` - The cluster is undeployed. * `Configuring` - The
     * cluster is being configured. * `Deploying` - The cluster is being deployed. * `Undeploying` - The cluster is being
     * undeployed. * `DeployFailedTerminal` - The Cluster Deploy failed creation and can not be recovered, only Delete or
     * Undeploy operations are available for this Cluster. * `DeployFailed` - The cluster deployment failed. * `Upgrading` -
     * The cluster is being upgraded. * `Deleting` - The cluster is being deleted. * `DeleteFailed` - The Cluster Delete failed
     * and the Cluster can not be recovered, only Delete or Undeploy operations are available for this Cluster. * `Ready` - The
     * cluster is ready for use. * `Active` - The cluster is being active. * `Shutdown` - All the nodes in the cluster are
     * powered off. * `Terminated` - The cluster is terminated. * `Deployed` - The cluster is deployed. The cluster may not yet
     * be ready for use. * `UndeployFailed` - The cluster undeploy action failed. * `NotReady` - The cluster is created and
     * some nodes are not ready.
     */
    status?: pulumi.Input<string>;
    /**
     * A reference to a kubernetesSysConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    sysConfigs?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileSysConfig>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileTag>[]>;
    /**
     * A reference to a kubernetesTrustedRegistriesPolicy resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    trustedRegistries?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileTrustedRegistry>[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    type?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterProfileWorkflowInfo>[]>;
}
