// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamEndPointUserRole(args?: GetIamEndPointUserRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetIamEndPointUserRoleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamEndPointUserRole:getIamEndPointUserRole", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "changePassword": args.changePassword,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "enabled": args.enabled,
        "endPointRoles": args.endPointRoles,
        "endPointUser": args.endPointUser,
        "endPointUserPolicy": args.endPointUserPolicy,
        "id": args.id,
        "isPasswordSet": args.isPasswordSet,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "password": args.password,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamEndPointUserRole.
 */
export interface GetIamEndPointUserRoleArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamEndPointUserRoleAncestor[];
    changePassword?: boolean;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    enabled?: boolean;
    endPointRoles?: inputs.GetIamEndPointUserRoleEndPointRole[];
    endPointUser?: inputs.GetIamEndPointUserRoleEndPointUser;
    endPointUserPolicy?: inputs.GetIamEndPointUserRoleEndPointUserPolicy;
    id?: string;
    isPasswordSet?: boolean;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamEndPointUserRoleParent;
    password?: string;
    permissionResources?: inputs.GetIamEndPointUserRolePermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetIamEndPointUserRoleTag[];
    versionContext?: inputs.GetIamEndPointUserRoleVersionContext;
}

/**
 * A collection of values returned by getIamEndPointUserRole.
 */
export interface GetIamEndPointUserRoleResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamEndPointUserRoleAncestor[];
    readonly changePassword?: boolean;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly enabled?: boolean;
    readonly endPointRoles?: outputs.GetIamEndPointUserRoleEndPointRole[];
    readonly endPointUser?: outputs.GetIamEndPointUserRoleEndPointUser;
    readonly endPointUserPolicy?: outputs.GetIamEndPointUserRoleEndPointUserPolicy;
    readonly id: string;
    readonly isPasswordSet?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamEndPointUserRoleParent;
    readonly password?: string;
    readonly permissionResources?: outputs.GetIamEndPointUserRolePermissionResource[];
    readonly results: outputs.GetIamEndPointUserRoleResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetIamEndPointUserRoleTag[];
    readonly versionContext?: outputs.GetIamEndPointUserRoleVersionContext;
}
export function getIamEndPointUserRoleOutput(args?: GetIamEndPointUserRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamEndPointUserRoleResult> {
    return pulumi.output(args).apply((a: any) => getIamEndPointUserRole(a, opts))
}

/**
 * A collection of arguments for invoking getIamEndPointUserRole.
 */
export interface GetIamEndPointUserRoleOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamEndPointUserRoleAncestorArgs>[]>;
    changePassword?: pulumi.Input<boolean>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    endPointRoles?: pulumi.Input<pulumi.Input<inputs.GetIamEndPointUserRoleEndPointRoleArgs>[]>;
    endPointUser?: pulumi.Input<inputs.GetIamEndPointUserRoleEndPointUserArgs>;
    endPointUserPolicy?: pulumi.Input<inputs.GetIamEndPointUserRoleEndPointUserPolicyArgs>;
    id?: pulumi.Input<string>;
    isPasswordSet?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamEndPointUserRoleParentArgs>;
    password?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamEndPointUserRolePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamEndPointUserRoleTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetIamEndPointUserRoleVersionContextArgs>;
}
