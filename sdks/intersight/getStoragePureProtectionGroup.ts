// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStoragePureProtectionGroup(args?: GetStoragePureProtectionGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetStoragePureProtectionGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStoragePureProtectionGroup:getStoragePureProtectionGroup", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "array": args.array,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "hostGroups": args.hostGroups,
        "hosts": args.hosts,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrSource": args.nrSource,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "prefix": args.prefix,
        "registeredDevice": args.registeredDevice,
        "replicationEnabled": args.replicationEnabled,
        "sharedScope": args.sharedScope,
        "size": args.size,
        "snapshotEnabled": args.snapshotEnabled,
        "tags": args.tags,
        "targets": args.targets,
        "versionContext": args.versionContext,
        "volumes": args.volumes,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStoragePureProtectionGroup.
 */
export interface GetStoragePureProtectionGroupArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStoragePureProtectionGroupAncestor[];
    array?: inputs.GetStoragePureProtectionGroupArray;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    hostGroups?: inputs.GetStoragePureProtectionGroupHostGroup[];
    hosts?: inputs.GetStoragePureProtectionGroupHost[];
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nrSource?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStoragePureProtectionGroupParent;
    permissionResources?: inputs.GetStoragePureProtectionGroupPermissionResource[];
    prefix?: string;
    registeredDevice?: inputs.GetStoragePureProtectionGroupRegisteredDevice;
    replicationEnabled?: boolean;
    sharedScope?: string;
    size?: number;
    snapshotEnabled?: boolean;
    tags?: inputs.GetStoragePureProtectionGroupTag[];
    targets?: string[];
    versionContext?: inputs.GetStoragePureProtectionGroupVersionContext;
    volumes?: inputs.GetStoragePureProtectionGroupVolume[];
}

/**
 * A collection of values returned by getStoragePureProtectionGroup.
 */
export interface GetStoragePureProtectionGroupResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStoragePureProtectionGroupAncestor[];
    readonly array?: outputs.GetStoragePureProtectionGroupArray;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly hostGroups?: outputs.GetStoragePureProtectionGroupHostGroup[];
    readonly hosts?: outputs.GetStoragePureProtectionGroupHost[];
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrSource?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStoragePureProtectionGroupParent;
    readonly permissionResources?: outputs.GetStoragePureProtectionGroupPermissionResource[];
    readonly prefix?: string;
    readonly registeredDevice?: outputs.GetStoragePureProtectionGroupRegisteredDevice;
    readonly replicationEnabled?: boolean;
    readonly results: outputs.GetStoragePureProtectionGroupResult[];
    readonly sharedScope?: string;
    readonly size?: number;
    readonly snapshotEnabled?: boolean;
    readonly tags?: outputs.GetStoragePureProtectionGroupTag[];
    readonly targets?: string[];
    readonly versionContext?: outputs.GetStoragePureProtectionGroupVersionContext;
    readonly volumes?: outputs.GetStoragePureProtectionGroupVolume[];
}
export function getStoragePureProtectionGroupOutput(args?: GetStoragePureProtectionGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStoragePureProtectionGroupResult> {
    return pulumi.output(args).apply((a: any) => getStoragePureProtectionGroup(a, opts))
}

/**
 * A collection of arguments for invoking getStoragePureProtectionGroup.
 */
export interface GetStoragePureProtectionGroupOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupAncestorArgs>[]>;
    array?: pulumi.Input<inputs.GetStoragePureProtectionGroupArrayArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    hostGroups?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupHostGroupArgs>[]>;
    hosts?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupHostArgs>[]>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrSource?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStoragePureProtectionGroupParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupPermissionResourceArgs>[]>;
    prefix?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetStoragePureProtectionGroupRegisteredDeviceArgs>;
    replicationEnabled?: pulumi.Input<boolean>;
    sharedScope?: pulumi.Input<string>;
    size?: pulumi.Input<number>;
    snapshotEnabled?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupTagArgs>[]>;
    targets?: pulumi.Input<pulumi.Input<string>[]>;
    versionContext?: pulumi.Input<inputs.GetStoragePureProtectionGroupVersionContextArgs>;
    volumes?: pulumi.Input<pulumi.Input<inputs.GetStoragePureProtectionGroupVolumeArgs>[]>;
}
