// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceCertificateSetting(args?: GetApplianceCertificateSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceCertificateSettingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceCertificateSetting:getApplianceCertificateSetting", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "certificate": args.certificate,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceCertificateSetting.
 */
export interface GetApplianceCertificateSettingArgs {
    account?: inputs.GetApplianceCertificateSettingAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceCertificateSettingAncestor[];
    certificate?: inputs.GetApplianceCertificateSettingCertificate;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApplianceCertificateSettingParent;
    permissionResources?: inputs.GetApplianceCertificateSettingPermissionResource[];
    sharedScope?: string;
    tags?: inputs.GetApplianceCertificateSettingTag[];
    versionContext?: inputs.GetApplianceCertificateSettingVersionContext;
}

/**
 * A collection of values returned by getApplianceCertificateSetting.
 */
export interface GetApplianceCertificateSettingResult {
    readonly account?: outputs.GetApplianceCertificateSettingAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceCertificateSettingAncestor[];
    readonly certificate?: outputs.GetApplianceCertificateSettingCertificate;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceCertificateSettingParent;
    readonly permissionResources?: outputs.GetApplianceCertificateSettingPermissionResource[];
    readonly results: outputs.GetApplianceCertificateSettingResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetApplianceCertificateSettingTag[];
    readonly versionContext?: outputs.GetApplianceCertificateSettingVersionContext;
}
export function getApplianceCertificateSettingOutput(args?: GetApplianceCertificateSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceCertificateSettingResult> {
    return pulumi.output(args).apply((a: any) => getApplianceCertificateSetting(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceCertificateSetting.
 */
export interface GetApplianceCertificateSettingOutputArgs {
    account?: pulumi.Input<inputs.GetApplianceCertificateSettingAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceCertificateSettingAncestorArgs>[]>;
    certificate?: pulumi.Input<inputs.GetApplianceCertificateSettingCertificateArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceCertificateSettingParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceCertificateSettingPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceCertificateSettingTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetApplianceCertificateSettingVersionContextArgs>;
}
