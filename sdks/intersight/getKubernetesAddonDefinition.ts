// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesAddonDefinition(args?: GetKubernetesAddonDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesAddonDefinitionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKubernetesAddonDefinition:getKubernetesAddonDefinition", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "catalog": args.catalog,
        "chartUrl": args.chartUrl,
        "classId": args.classId,
        "createTime": args.createTime,
        "defaultInstallStrategy": args.defaultInstallStrategy,
        "defaultNamespace": args.defaultNamespace,
        "defaultUpgradeStrategy": args.defaultUpgradeStrategy,
        "description": args.description,
        "digest": args.digest,
        "domainGroupMoid": args.domainGroupMoid,
        "iconUrl": args.iconUrl,
        "id": args.id,
        "labels": args.labels,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "organization": args.organization,
        "overrides": args.overrides,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platforms": args.platforms,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesAddonDefinition.
 */
export interface GetKubernetesAddonDefinitionArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetKubernetesAddonDefinitionAncestor[];
    catalog?: inputs.GetKubernetesAddonDefinitionCatalog;
    chartUrl?: string;
    classId?: string;
    createTime?: string;
    defaultInstallStrategy?: string;
    defaultNamespace?: string;
    defaultUpgradeStrategy?: string;
    description?: string;
    digest?: string;
    domainGroupMoid?: string;
    iconUrl?: string;
    id?: string;
    labels?: string[];
    modTime?: string;
    moid?: string;
    name?: string;
    nrVersion?: string;
    objectType?: string;
    organization?: inputs.GetKubernetesAddonDefinitionOrganization;
    overrides?: string;
    owners?: string[];
    parent?: inputs.GetKubernetesAddonDefinitionParent;
    permissionResources?: inputs.GetKubernetesAddonDefinitionPermissionResource[];
    platforms?: string[];
    sharedScope?: string;
    tags?: inputs.GetKubernetesAddonDefinitionTag[];
    versionContext?: inputs.GetKubernetesAddonDefinitionVersionContext;
}

/**
 * A collection of values returned by getKubernetesAddonDefinition.
 */
export interface GetKubernetesAddonDefinitionResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKubernetesAddonDefinitionAncestor[];
    readonly catalog?: outputs.GetKubernetesAddonDefinitionCatalog;
    readonly chartUrl?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly defaultInstallStrategy?: string;
    readonly defaultNamespace?: string;
    readonly defaultUpgradeStrategy?: string;
    readonly description?: string;
    readonly digest?: string;
    readonly domainGroupMoid?: string;
    readonly iconUrl?: string;
    readonly id: string;
    readonly labels?: string[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nrVersion?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetKubernetesAddonDefinitionOrganization;
    readonly overrides?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetKubernetesAddonDefinitionParent;
    readonly permissionResources?: outputs.GetKubernetesAddonDefinitionPermissionResource[];
    readonly platforms?: string[];
    readonly results: outputs.GetKubernetesAddonDefinitionResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetKubernetesAddonDefinitionTag[];
    readonly versionContext?: outputs.GetKubernetesAddonDefinitionVersionContext;
}
export function getKubernetesAddonDefinitionOutput(args?: GetKubernetesAddonDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesAddonDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesAddonDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesAddonDefinition.
 */
export interface GetKubernetesAddonDefinitionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAddonDefinitionAncestorArgs>[]>;
    catalog?: pulumi.Input<inputs.GetKubernetesAddonDefinitionCatalogArgs>;
    chartUrl?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    defaultInstallStrategy?: pulumi.Input<string>;
    defaultNamespace?: pulumi.Input<string>;
    defaultUpgradeStrategy?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    digest?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    iconUrl?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetKubernetesAddonDefinitionOrganizationArgs>;
    overrides?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKubernetesAddonDefinitionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAddonDefinitionPermissionResourceArgs>[]>;
    platforms?: pulumi.Input<pulumi.Input<string>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKubernetesAddonDefinitionTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetKubernetesAddonDefinitionVersionContextArgs>;
}
