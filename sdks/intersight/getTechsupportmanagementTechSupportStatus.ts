// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTechsupportmanagementTechSupportStatus(args?: GetTechsupportmanagementTechSupportStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetTechsupportmanagementTechSupportStatusResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getTechsupportmanagementTechSupportStatus:getTechsupportmanagementTechSupportStatus", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clusterMember": args.clusterMember,
        "createTime": args.createTime,
        "deviceRegistration": args.deviceRegistration,
        "domainGroupMoid": args.domainGroupMoid,
        "fileName": args.fileName,
        "fileSize": args.fileSize,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "originResource": args.originResource,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "reason": args.reason,
        "relayReason": args.relayReason,
        "relayStatus": args.relayStatus,
        "requestTs": args.requestTs,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "techSupportRequest": args.techSupportRequest,
        "techsupportDownloadUrl": args.techsupportDownloadUrl,
        "techsupportFiles": args.techsupportFiles,
        "userRole": args.userRole,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTechsupportmanagementTechSupportStatus.
 */
export interface GetTechsupportmanagementTechSupportStatusArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetTechsupportmanagementTechSupportStatusAncestor[];
    classId?: string;
    clusterMember?: inputs.GetTechsupportmanagementTechSupportStatusClusterMember;
    createTime?: string;
    deviceRegistration?: inputs.GetTechsupportmanagementTechSupportStatusDeviceRegistration;
    domainGroupMoid?: string;
    fileName?: string;
    fileSize?: number;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    originResource?: inputs.GetTechsupportmanagementTechSupportStatusOriginResource;
    owners?: string[];
    parent?: inputs.GetTechsupportmanagementTechSupportStatusParent;
    permissionResources?: inputs.GetTechsupportmanagementTechSupportStatusPermissionResource[];
    reason?: string;
    relayReason?: string;
    relayStatus?: string;
    requestTs?: string;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetTechsupportmanagementTechSupportStatusTag[];
    techSupportRequest?: inputs.GetTechsupportmanagementTechSupportStatusTechSupportRequest;
    techsupportDownloadUrl?: string;
    techsupportFiles?: inputs.GetTechsupportmanagementTechSupportStatusTechsupportFile[];
    userRole?: string;
    versionContext?: inputs.GetTechsupportmanagementTechSupportStatusVersionContext;
}

/**
 * A collection of values returned by getTechsupportmanagementTechSupportStatus.
 */
export interface GetTechsupportmanagementTechSupportStatusResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetTechsupportmanagementTechSupportStatusAncestor[];
    readonly classId?: string;
    readonly clusterMember?: outputs.GetTechsupportmanagementTechSupportStatusClusterMember;
    readonly createTime?: string;
    readonly deviceRegistration?: outputs.GetTechsupportmanagementTechSupportStatusDeviceRegistration;
    readonly domainGroupMoid?: string;
    readonly fileName?: string;
    readonly fileSize?: number;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly originResource?: outputs.GetTechsupportmanagementTechSupportStatusOriginResource;
    readonly owners?: string[];
    readonly parent?: outputs.GetTechsupportmanagementTechSupportStatusParent;
    readonly permissionResources?: outputs.GetTechsupportmanagementTechSupportStatusPermissionResource[];
    readonly reason?: string;
    readonly relayReason?: string;
    readonly relayStatus?: string;
    readonly requestTs?: string;
    readonly results: outputs.GetTechsupportmanagementTechSupportStatusResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetTechsupportmanagementTechSupportStatusTag[];
    readonly techSupportRequest?: outputs.GetTechsupportmanagementTechSupportStatusTechSupportRequest;
    readonly techsupportDownloadUrl?: string;
    readonly techsupportFiles?: outputs.GetTechsupportmanagementTechSupportStatusTechsupportFile[];
    readonly userRole?: string;
    readonly versionContext?: outputs.GetTechsupportmanagementTechSupportStatusVersionContext;
}
export function getTechsupportmanagementTechSupportStatusOutput(args?: GetTechsupportmanagementTechSupportStatusOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTechsupportmanagementTechSupportStatusResult> {
    return pulumi.output(args).apply((a: any) => getTechsupportmanagementTechSupportStatus(a, opts))
}

/**
 * A collection of arguments for invoking getTechsupportmanagementTechSupportStatus.
 */
export interface GetTechsupportmanagementTechSupportStatusOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clusterMember?: pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusClusterMemberArgs>;
    createTime?: pulumi.Input<string>;
    deviceRegistration?: pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusDeviceRegistrationArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    fileName?: pulumi.Input<string>;
    fileSize?: pulumi.Input<number>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    originResource?: pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusOriginResourceArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusPermissionResourceArgs>[]>;
    reason?: pulumi.Input<string>;
    relayReason?: pulumi.Input<string>;
    relayStatus?: pulumi.Input<string>;
    requestTs?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusTagArgs>[]>;
    techSupportRequest?: pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusTechSupportRequestArgs>;
    techsupportDownloadUrl?: pulumi.Input<string>;
    techsupportFiles?: pulumi.Input<pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusTechsupportFileArgs>[]>;
    userRole?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetTechsupportmanagementTechSupportStatusVersionContextArgs>;
}
