// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSdaaciConnection(args?: GetSdaaciConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetSdaaciConnectionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getSdaaciConnection:getSdaaciConnection", {
        "accountMoid": args.accountMoid,
        "aciL3Out": args.aciL3Out,
        "aciMatchRuleName": args.aciMatchRuleName,
        "aciTenant": args.aciTenant,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "apicTarget": args.apicTarget,
        "campusFabricSite": args.campusFabricSite,
        "classId": args.classId,
        "createTime": args.createTime,
        "dnacTarget": args.dnacTarget,
        "domainGroupMoid": args.domainGroupMoid,
        "epg": args.epg,
        "epgSubnet": args.epgSubnet,
        "firewallDevice": args.firewallDevice,
        "firewallDomain": args.firewallDomain,
        "fmcTarget": args.fmcTarget,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "nodeProfile": args.nodeProfile,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "transit": args.transit,
        "versionContext": args.versionContext,
        "virtualNetwork": args.virtualNetwork,
        "vnEpg": args.vnEpg,
        "vrf": args.vrf,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSdaaciConnection.
 */
export interface GetSdaaciConnectionArgs {
    accountMoid?: string;
    aciL3Out?: string;
    aciMatchRuleName?: string;
    aciTenant?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetSdaaciConnectionAncestor[];
    apicTarget?: inputs.GetSdaaciConnectionApicTarget;
    campusFabricSite?: string;
    classId?: string;
    createTime?: string;
    dnacTarget?: inputs.GetSdaaciConnectionDnacTarget;
    domainGroupMoid?: string;
    epg?: string;
    epgSubnet?: string;
    firewallDevice?: string;
    firewallDomain?: string;
    fmcTarget?: inputs.GetSdaaciConnectionFmcTarget;
    id?: string;
    modTime?: string;
    moid?: string;
    nodeProfile?: string;
    objectType?: string;
    organization?: inputs.GetSdaaciConnectionOrganization;
    owners?: string[];
    parent?: inputs.GetSdaaciConnectionParent;
    permissionResources?: inputs.GetSdaaciConnectionPermissionResource[];
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetSdaaciConnectionTag[];
    transit?: string;
    versionContext?: inputs.GetSdaaciConnectionVersionContext;
    virtualNetwork?: string;
    vnEpg?: string;
    vrf?: string;
}

/**
 * A collection of values returned by getSdaaciConnection.
 */
export interface GetSdaaciConnectionResult {
    readonly accountMoid?: string;
    readonly aciL3Out?: string;
    readonly aciMatchRuleName?: string;
    readonly aciTenant?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetSdaaciConnectionAncestor[];
    readonly apicTarget?: outputs.GetSdaaciConnectionApicTarget;
    readonly campusFabricSite?: string;
    readonly classId?: string;
    readonly createTime?: string;
    readonly dnacTarget?: outputs.GetSdaaciConnectionDnacTarget;
    readonly domainGroupMoid?: string;
    readonly epg?: string;
    readonly epgSubnet?: string;
    readonly firewallDevice?: string;
    readonly firewallDomain?: string;
    readonly fmcTarget?: outputs.GetSdaaciConnectionFmcTarget;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly nodeProfile?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetSdaaciConnectionOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetSdaaciConnectionParent;
    readonly permissionResources?: outputs.GetSdaaciConnectionPermissionResource[];
    readonly results: outputs.GetSdaaciConnectionResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetSdaaciConnectionTag[];
    readonly transit?: string;
    readonly versionContext?: outputs.GetSdaaciConnectionVersionContext;
    readonly virtualNetwork?: string;
    readonly vnEpg?: string;
    readonly vrf?: string;
}
export function getSdaaciConnectionOutput(args?: GetSdaaciConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSdaaciConnectionResult> {
    return pulumi.output(args).apply((a: any) => getSdaaciConnection(a, opts))
}

/**
 * A collection of arguments for invoking getSdaaciConnection.
 */
export interface GetSdaaciConnectionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    aciL3Out?: pulumi.Input<string>;
    aciMatchRuleName?: pulumi.Input<string>;
    aciTenant?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetSdaaciConnectionAncestorArgs>[]>;
    apicTarget?: pulumi.Input<inputs.GetSdaaciConnectionApicTargetArgs>;
    campusFabricSite?: pulumi.Input<string>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dnacTarget?: pulumi.Input<inputs.GetSdaaciConnectionDnacTargetArgs>;
    domainGroupMoid?: pulumi.Input<string>;
    epg?: pulumi.Input<string>;
    epgSubnet?: pulumi.Input<string>;
    firewallDevice?: pulumi.Input<string>;
    firewallDomain?: pulumi.Input<string>;
    fmcTarget?: pulumi.Input<inputs.GetSdaaciConnectionFmcTargetArgs>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    nodeProfile?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetSdaaciConnectionOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetSdaaciConnectionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetSdaaciConnectionPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSdaaciConnectionTagArgs>[]>;
    transit?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetSdaaciConnectionVersionContextArgs>;
    virtualNetwork?: pulumi.Input<string>;
    vnEpg?: pulumi.Input<string>;
    vrf?: pulumi.Input<string>;
}
