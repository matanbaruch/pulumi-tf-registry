// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HyperflexClusterProfile extends pulumi.CustomResource {
    /**
     * Get an existing HyperflexClusterProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperflexClusterProfileState, opts?: pulumi.CustomResourceOptions): HyperflexClusterProfile {
        return new HyperflexClusterProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/hyperflexClusterProfile:HyperflexClusterProfile';

    /**
     * Returns true if the given object is an instance of HyperflexClusterProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HyperflexClusterProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HyperflexClusterProfile.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    public readonly actionParams!: pulumi.Output<outputs.HyperflexClusterProfileActionParam[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.HyperflexClusterProfileAncestor[]>;
    /**
     * A reference to a hyperflexCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly associatedClusters!: pulumi.Output<outputs.HyperflexClusterProfileAssociatedCluster[]>;
    /**
     * A reference to a hyperflexAutoSupportPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly autoSupports!: pulumi.Output<outputs.HyperflexClusterProfileAutoSupport[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * A CIDR subnet for the cluster internal network. This applies to Intersight Workload Engine clusters only.
     */
    public readonly clusterInternalSubnets!: pulumi.Output<outputs.HyperflexClusterProfileClusterInternalSubnet[]>;
    /**
     * A reference to a hyperflexClusterNetworkPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly clusterNetworks!: pulumi.Output<outputs.HyperflexClusterProfileClusterNetwork[]>;
    /**
     * A reference to a hyperflexClusterStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly clusterStorages!: pulumi.Output<outputs.HyperflexClusterProfileClusterStorage[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    public readonly configContexts!: pulumi.Output<outputs.HyperflexClusterProfileConfigContext[]>;
    /**
     * A reference to a hyperflexConfigResult resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly configResults!: pulumi.Output<outputs.HyperflexClusterProfileConfigResult[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The storage data IP address for the HyperFlex cluster.
     */
    public readonly dataIpAddress!: pulumi.Output<string | undefined>;
    /**
     * Description of the profile.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * A reference to a hyperflexExtFcStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly extFcStorages!: pulumi.Output<outputs.HyperflexClusterProfileExtFcStorage[]>;
    /**
     * A reference to a hyperflexExtIscsiStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly extIscsiStorages!: pulumi.Output<outputs.HyperflexClusterProfileExtIscsiStorage[]>;
    /**
     * The node name prefix that is used to automatically generate the default hostname for each server. A dash (-) will be
     * appended to the prefix followed by the node number to form a hostname. This default naming scheme can be manually
     * overridden in the node configuration. The maximum length of a prefix is 60, must only contain alphanumeric characters or
     * dash (-), and must start with an alphanumeric character.
     */
    public readonly hostNamePrefix!: pulumi.Output<string | undefined>;
    /**
     * A reference to a commHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly httpproxypolicies!: pulumi.Output<outputs.HyperflexClusterProfileHttpproxypolicy[]>;
    /**
     * The hypervisor control virtual IP address for the HyperFlex compute cluster that is used for node/pod management.
     */
    public readonly hypervisorControlIpAddress!: pulumi.Output<string | undefined>;
    /**
     * The hypervisor type for the HyperFlex cluster. * `ESXi` - The hypervisor running on the HyperFlex cluster is a Vmware
     * ESXi hypervisor of any version. * `Hyper-V` - The hypervisor running on the HyperFlex cluster is Microsoft Hyper-V. *
     * `Unknown` - The hypervisor running on the HyperFlex cluster is not known.
     */
    public readonly hypervisorType!: pulumi.Output<string | undefined>;
    /**
     * The NIC based setup being set/unset determined by inventory.
     */
    public readonly isNicBased!: pulumi.Output<boolean>;
    /**
     * A reference to a hyperflexLocalCredentialPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly localCredentials!: pulumi.Output<outputs.HyperflexClusterProfileLocalCredential[]>;
    /**
     * The MAC address prefix in the form of 00:25:B5:XX.
     */
    public readonly macAddressPrefix!: pulumi.Output<string | undefined>;
    /**
     * The management IP address for the HyperFlex cluster.
     */
    public readonly mgmtIpAddress!: pulumi.Output<string | undefined>;
    /**
     * The management platform for the HyperFlex cluster. * `FI` - The host servers used in the cluster deployment are managed
     * by a UCS Fabric Interconnect. * `EDGE` - The host servers used in the cluster deployment are standalone severs. *
     * `DC-No-FI` - The host servers used in the cluster deployment are standalone servers with the DC Advantage license.
     */
    public readonly mgmtPlatform!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the profile instance or profile template.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A reference to a hyperflexNodeConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly nodeConfigs!: pulumi.Output<outputs.HyperflexClusterProfileNodeConfig[]>;
    /**
     * An array of relationships to hyperflexNodeProfile resources.
     */
    public readonly nodeProfileConfigs!: pulumi.Output<outputs.HyperflexClusterProfileNodeProfileConfig[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.HyperflexClusterProfileOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.HyperflexClusterProfileParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.HyperflexClusterProfilePermissionResource[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    public readonly policyBuckets!: pulumi.Output<outputs.HyperflexClusterProfilePolicyBucket[]>;
    /**
     * A reference to a hyperflexProxySettingPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly proxySettings!: pulumi.Output<outputs.HyperflexClusterProfileProxySetting[]>;
    /**
     * The number of copies of each data block written.
     */
    public readonly replication!: pulumi.Output<number | undefined>;
    /**
     * An array of relationships to workflowWorkflowInfo resources.
     */
    public readonly runningWorkflows!: pulumi.Output<outputs.HyperflexClusterProfileRunningWorkflow[]>;
    public readonly scheduledActions!: pulumi.Output<outputs.HyperflexClusterProfileScheduledAction[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * A reference to a hyperflexSoftwareVersionPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly softwareVersions!: pulumi.Output<outputs.HyperflexClusterProfileSoftwareVersion[]>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly srcTemplates!: pulumi.Output<outputs.HyperflexClusterProfileSrcTemplate[]>;
    /**
     * The storage data IP address for the HyperFlex cluster.
     */
    public readonly storageClientIpAddress!: pulumi.Output<string | undefined>;
    /**
     * The netmask for the Storage client network IP address.
     */
    public readonly storageClientNetmask!: pulumi.Output<string | undefined>;
    /**
     * The named VLAN associated with this cluster's storage client network. This applies to Intersight Workload Engine
     * clusters only.
     */
    public readonly storageClientVlans!: pulumi.Output<outputs.HyperflexClusterProfileStorageClientVlan[]>;
    /**
     * The auxiliary storage IP address for the HyperFlex cluster. For two node clusters, this is the IP address of the
     * auxiliary ZK controller.
     */
    public readonly storageClusterAuxiliaryIp!: pulumi.Output<string | undefined>;
    /**
     * The VLAN for the HyperFlex storage data traffic.
     */
    public readonly storageDataVlans!: pulumi.Output<outputs.HyperflexClusterProfileStorageDataVlan[]>;
    /**
     * The storage type used for the HyperFlex cluster (HyperFlex Storage or 3rd party). * `HyperFlexDp` - The type of storage
     * is HyperFlex Data Platform. * `ThirdParty` - The type of storage is 3rd Party Storage (PureStorage, etc..).
     */
    public readonly storageType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a hyperflexSysConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly sysConfigs!: pulumi.Output<outputs.HyperflexClusterProfileSysConfig[]>;
    public readonly tags!: pulumi.Output<outputs.HyperflexClusterProfileTag[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * A reference to a hyperflexUcsmConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly ucsmConfigs!: pulumi.Output<outputs.HyperflexClusterProfileUcsmConfig[]>;
    /**
     * A reference to a hyperflexVcenterConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly vcenterConfigs!: pulumi.Output<outputs.HyperflexClusterProfileVcenterConfig[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.HyperflexClusterProfileVersionContext[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    public readonly waitForCompletion!: pulumi.Output<boolean | undefined>;
    /**
     * The WWxN prefix in the form of 20:00:00:25:B5:XX.
     */
    public readonly wwxnPrefix!: pulumi.Output<string | undefined>;

    /**
     * Create a HyperflexClusterProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HyperflexClusterProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HyperflexClusterProfileArgs | HyperflexClusterProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HyperflexClusterProfileState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["actionParams"] = state ? state.actionParams : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["associatedClusters"] = state ? state.associatedClusters : undefined;
            resourceInputs["autoSupports"] = state ? state.autoSupports : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clusterInternalSubnets"] = state ? state.clusterInternalSubnets : undefined;
            resourceInputs["clusterNetworks"] = state ? state.clusterNetworks : undefined;
            resourceInputs["clusterStorages"] = state ? state.clusterStorages : undefined;
            resourceInputs["configContexts"] = state ? state.configContexts : undefined;
            resourceInputs["configResults"] = state ? state.configResults : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataIpAddress"] = state ? state.dataIpAddress : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["extFcStorages"] = state ? state.extFcStorages : undefined;
            resourceInputs["extIscsiStorages"] = state ? state.extIscsiStorages : undefined;
            resourceInputs["hostNamePrefix"] = state ? state.hostNamePrefix : undefined;
            resourceInputs["httpproxypolicies"] = state ? state.httpproxypolicies : undefined;
            resourceInputs["hypervisorControlIpAddress"] = state ? state.hypervisorControlIpAddress : undefined;
            resourceInputs["hypervisorType"] = state ? state.hypervisorType : undefined;
            resourceInputs["isNicBased"] = state ? state.isNicBased : undefined;
            resourceInputs["localCredentials"] = state ? state.localCredentials : undefined;
            resourceInputs["macAddressPrefix"] = state ? state.macAddressPrefix : undefined;
            resourceInputs["mgmtIpAddress"] = state ? state.mgmtIpAddress : undefined;
            resourceInputs["mgmtPlatform"] = state ? state.mgmtPlatform : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeConfigs"] = state ? state.nodeConfigs : undefined;
            resourceInputs["nodeProfileConfigs"] = state ? state.nodeProfileConfigs : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["policyBuckets"] = state ? state.policyBuckets : undefined;
            resourceInputs["proxySettings"] = state ? state.proxySettings : undefined;
            resourceInputs["replication"] = state ? state.replication : undefined;
            resourceInputs["runningWorkflows"] = state ? state.runningWorkflows : undefined;
            resourceInputs["scheduledActions"] = state ? state.scheduledActions : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["softwareVersions"] = state ? state.softwareVersions : undefined;
            resourceInputs["srcTemplates"] = state ? state.srcTemplates : undefined;
            resourceInputs["storageClientIpAddress"] = state ? state.storageClientIpAddress : undefined;
            resourceInputs["storageClientNetmask"] = state ? state.storageClientNetmask : undefined;
            resourceInputs["storageClientVlans"] = state ? state.storageClientVlans : undefined;
            resourceInputs["storageClusterAuxiliaryIp"] = state ? state.storageClusterAuxiliaryIp : undefined;
            resourceInputs["storageDataVlans"] = state ? state.storageDataVlans : undefined;
            resourceInputs["storageType"] = state ? state.storageType : undefined;
            resourceInputs["sysConfigs"] = state ? state.sysConfigs : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["ucsmConfigs"] = state ? state.ucsmConfigs : undefined;
            resourceInputs["vcenterConfigs"] = state ? state.vcenterConfigs : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = state ? state.waitForCompletion : undefined;
            resourceInputs["wwxnPrefix"] = state ? state.wwxnPrefix : undefined;
        } else {
            const args = argsOrState as HyperflexClusterProfileArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["actionParams"] = args ? args.actionParams : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["associatedClusters"] = args ? args.associatedClusters : undefined;
            resourceInputs["autoSupports"] = args ? args.autoSupports : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clusterInternalSubnets"] = args ? args.clusterInternalSubnets : undefined;
            resourceInputs["clusterNetworks"] = args ? args.clusterNetworks : undefined;
            resourceInputs["clusterStorages"] = args ? args.clusterStorages : undefined;
            resourceInputs["configContexts"] = args ? args.configContexts : undefined;
            resourceInputs["configResults"] = args ? args.configResults : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["dataIpAddress"] = args ? args.dataIpAddress : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["extFcStorages"] = args ? args.extFcStorages : undefined;
            resourceInputs["extIscsiStorages"] = args ? args.extIscsiStorages : undefined;
            resourceInputs["hostNamePrefix"] = args ? args.hostNamePrefix : undefined;
            resourceInputs["httpproxypolicies"] = args ? args.httpproxypolicies : undefined;
            resourceInputs["hypervisorControlIpAddress"] = args ? args.hypervisorControlIpAddress : undefined;
            resourceInputs["hypervisorType"] = args ? args.hypervisorType : undefined;
            resourceInputs["isNicBased"] = args ? args.isNicBased : undefined;
            resourceInputs["localCredentials"] = args ? args.localCredentials : undefined;
            resourceInputs["macAddressPrefix"] = args ? args.macAddressPrefix : undefined;
            resourceInputs["mgmtIpAddress"] = args ? args.mgmtIpAddress : undefined;
            resourceInputs["mgmtPlatform"] = args ? args.mgmtPlatform : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeConfigs"] = args ? args.nodeConfigs : undefined;
            resourceInputs["nodeProfileConfigs"] = args ? args.nodeProfileConfigs : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["policyBuckets"] = args ? args.policyBuckets : undefined;
            resourceInputs["proxySettings"] = args ? args.proxySettings : undefined;
            resourceInputs["replication"] = args ? args.replication : undefined;
            resourceInputs["runningWorkflows"] = args ? args.runningWorkflows : undefined;
            resourceInputs["scheduledActions"] = args ? args.scheduledActions : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["softwareVersions"] = args ? args.softwareVersions : undefined;
            resourceInputs["srcTemplates"] = args ? args.srcTemplates : undefined;
            resourceInputs["storageClientIpAddress"] = args ? args.storageClientIpAddress : undefined;
            resourceInputs["storageClientNetmask"] = args ? args.storageClientNetmask : undefined;
            resourceInputs["storageClientVlans"] = args ? args.storageClientVlans : undefined;
            resourceInputs["storageClusterAuxiliaryIp"] = args ? args.storageClusterAuxiliaryIp : undefined;
            resourceInputs["storageDataVlans"] = args ? args.storageDataVlans : undefined;
            resourceInputs["storageType"] = args ? args.storageType : undefined;
            resourceInputs["sysConfigs"] = args ? args.sysConfigs : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["ucsmConfigs"] = args ? args.ucsmConfigs : undefined;
            resourceInputs["vcenterConfigs"] = args ? args.vcenterConfigs : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = args ? args.waitForCompletion : undefined;
            resourceInputs["wwxnPrefix"] = args ? args.wwxnPrefix : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HyperflexClusterProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HyperflexClusterProfile resources.
 */
export interface HyperflexClusterProfileState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileActionParam>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileAncestor>[]>;
    /**
     * A reference to a hyperflexCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    associatedClusters?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileAssociatedCluster>[]>;
    /**
     * A reference to a hyperflexAutoSupportPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    autoSupports?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileAutoSupport>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A CIDR subnet for the cluster internal network. This applies to Intersight Workload Engine clusters only.
     */
    clusterInternalSubnets?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileClusterInternalSubnet>[]>;
    /**
     * A reference to a hyperflexClusterNetworkPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    clusterNetworks?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileClusterNetwork>[]>;
    /**
     * A reference to a hyperflexClusterStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    clusterStorages?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileClusterStorage>[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    configContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileConfigContext>[]>;
    /**
     * A reference to a hyperflexConfigResult resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    configResults?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileConfigResult>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The storage data IP address for the HyperFlex cluster.
     */
    dataIpAddress?: pulumi.Input<string>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexExtFcStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    extFcStorages?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileExtFcStorage>[]>;
    /**
     * A reference to a hyperflexExtIscsiStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    extIscsiStorages?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileExtIscsiStorage>[]>;
    /**
     * The node name prefix that is used to automatically generate the default hostname for each server. A dash (-) will be
     * appended to the prefix followed by the node number to form a hostname. This default naming scheme can be manually
     * overridden in the node configuration. The maximum length of a prefix is 60, must only contain alphanumeric characters or
     * dash (-), and must start with an alphanumeric character.
     */
    hostNamePrefix?: pulumi.Input<string>;
    /**
     * A reference to a commHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    httpproxypolicies?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileHttpproxypolicy>[]>;
    /**
     * The hypervisor control virtual IP address for the HyperFlex compute cluster that is used for node/pod management.
     */
    hypervisorControlIpAddress?: pulumi.Input<string>;
    /**
     * The hypervisor type for the HyperFlex cluster. * `ESXi` - The hypervisor running on the HyperFlex cluster is a Vmware
     * ESXi hypervisor of any version. * `Hyper-V` - The hypervisor running on the HyperFlex cluster is Microsoft Hyper-V. *
     * `Unknown` - The hypervisor running on the HyperFlex cluster is not known.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * The NIC based setup being set/unset determined by inventory.
     */
    isNicBased?: pulumi.Input<boolean>;
    /**
     * A reference to a hyperflexLocalCredentialPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    localCredentials?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileLocalCredential>[]>;
    /**
     * The MAC address prefix in the form of 00:25:B5:XX.
     */
    macAddressPrefix?: pulumi.Input<string>;
    /**
     * The management IP address for the HyperFlex cluster.
     */
    mgmtIpAddress?: pulumi.Input<string>;
    /**
     * The management platform for the HyperFlex cluster. * `FI` - The host servers used in the cluster deployment are managed
     * by a UCS Fabric Interconnect. * `EDGE` - The host servers used in the cluster deployment are standalone severs. *
     * `DC-No-FI` - The host servers used in the cluster deployment are standalone servers with the DC Advantage license.
     */
    mgmtPlatform?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the profile instance or profile template.
     */
    name?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexNodeConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    nodeConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileNodeConfig>[]>;
    /**
     * An array of relationships to hyperflexNodeProfile resources.
     */
    nodeProfileConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileNodeProfileConfig>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfilePermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfilePolicyBucket>[]>;
    /**
     * A reference to a hyperflexProxySettingPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    proxySettings?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileProxySetting>[]>;
    /**
     * The number of copies of each data block written.
     */
    replication?: pulumi.Input<number>;
    /**
     * An array of relationships to workflowWorkflowInfo resources.
     */
    runningWorkflows?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileRunningWorkflow>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileScheduledAction>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexSoftwareVersionPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    softwareVersions?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileSoftwareVersion>[]>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileSrcTemplate>[]>;
    /**
     * The storage data IP address for the HyperFlex cluster.
     */
    storageClientIpAddress?: pulumi.Input<string>;
    /**
     * The netmask for the Storage client network IP address.
     */
    storageClientNetmask?: pulumi.Input<string>;
    /**
     * The named VLAN associated with this cluster's storage client network. This applies to Intersight Workload Engine
     * clusters only.
     */
    storageClientVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileStorageClientVlan>[]>;
    /**
     * The auxiliary storage IP address for the HyperFlex cluster. For two node clusters, this is the IP address of the
     * auxiliary ZK controller.
     */
    storageClusterAuxiliaryIp?: pulumi.Input<string>;
    /**
     * The VLAN for the HyperFlex storage data traffic.
     */
    storageDataVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileStorageDataVlan>[]>;
    /**
     * The storage type used for the HyperFlex cluster (HyperFlex Storage or 3rd party). * `HyperFlexDp` - The type of storage
     * is HyperFlex Data Platform. * `ThirdParty` - The type of storage is 3rd Party Storage (PureStorage, etc..).
     */
    storageType?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexSysConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    sysConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileSysConfig>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileTag>[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    type?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexUcsmConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    ucsmConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileUcsmConfig>[]>;
    /**
     * A reference to a hyperflexVcenterConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    vcenterConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileVcenterConfig>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * The WWxN prefix in the form of 20:00:00:25:B5:XX.
     */
    wwxnPrefix?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HyperflexClusterProfile resource.
 */
export interface HyperflexClusterProfileArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * User initiated action. Each profile type has its own supported actions. For HyperFlex cluster profile, the supported
     * actions are -- Validate, Deploy, Continue, Retry, Abort, Unassign For server profile, the support actions are -- Deploy,
     * Unassign.
     */
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileActionParam>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileAncestor>[]>;
    /**
     * A reference to a hyperflexCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    associatedClusters?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileAssociatedCluster>[]>;
    /**
     * A reference to a hyperflexAutoSupportPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    autoSupports?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileAutoSupport>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A CIDR subnet for the cluster internal network. This applies to Intersight Workload Engine clusters only.
     */
    clusterInternalSubnets?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileClusterInternalSubnet>[]>;
    /**
     * A reference to a hyperflexClusterNetworkPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    clusterNetworks?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileClusterNetwork>[]>;
    /**
     * A reference to a hyperflexClusterStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    clusterStorages?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileClusterStorage>[]>;
    /**
     * The configuration state and results of the last configuration operation.
     */
    configContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileConfigContext>[]>;
    /**
     * A reference to a hyperflexConfigResult resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    configResults?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileConfigResult>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The storage data IP address for the HyperFlex cluster.
     */
    dataIpAddress?: pulumi.Input<string>;
    /**
     * Description of the profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexExtFcStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    extFcStorages?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileExtFcStorage>[]>;
    /**
     * A reference to a hyperflexExtIscsiStoragePolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    extIscsiStorages?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileExtIscsiStorage>[]>;
    /**
     * The node name prefix that is used to automatically generate the default hostname for each server. A dash (-) will be
     * appended to the prefix followed by the node number to form a hostname. This default naming scheme can be manually
     * overridden in the node configuration. The maximum length of a prefix is 60, must only contain alphanumeric characters or
     * dash (-), and must start with an alphanumeric character.
     */
    hostNamePrefix?: pulumi.Input<string>;
    /**
     * A reference to a commHttpProxyPolicy resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    httpproxypolicies?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileHttpproxypolicy>[]>;
    /**
     * The hypervisor control virtual IP address for the HyperFlex compute cluster that is used for node/pod management.
     */
    hypervisorControlIpAddress?: pulumi.Input<string>;
    /**
     * The hypervisor type for the HyperFlex cluster. * `ESXi` - The hypervisor running on the HyperFlex cluster is a Vmware
     * ESXi hypervisor of any version. * `Hyper-V` - The hypervisor running on the HyperFlex cluster is Microsoft Hyper-V. *
     * `Unknown` - The hypervisor running on the HyperFlex cluster is not known.
     */
    hypervisorType?: pulumi.Input<string>;
    /**
     * The NIC based setup being set/unset determined by inventory.
     */
    isNicBased?: pulumi.Input<boolean>;
    /**
     * A reference to a hyperflexLocalCredentialPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    localCredentials?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileLocalCredential>[]>;
    /**
     * The MAC address prefix in the form of 00:25:B5:XX.
     */
    macAddressPrefix?: pulumi.Input<string>;
    /**
     * The management IP address for the HyperFlex cluster.
     */
    mgmtIpAddress?: pulumi.Input<string>;
    /**
     * The management platform for the HyperFlex cluster. * `FI` - The host servers used in the cluster deployment are managed
     * by a UCS Fabric Interconnect. * `EDGE` - The host servers used in the cluster deployment are standalone severs. *
     * `DC-No-FI` - The host servers used in the cluster deployment are standalone servers with the DC Advantage license.
     */
    mgmtPlatform?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the profile instance or profile template.
     */
    name?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexNodeConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    nodeConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileNodeConfig>[]>;
    /**
     * An array of relationships to hyperflexNodeProfile resources.
     */
    nodeProfileConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileNodeProfileConfig>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfilePermissionResource>[]>;
    /**
     * An array of relationships to policyAbstractPolicy resources.
     */
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfilePolicyBucket>[]>;
    /**
     * A reference to a hyperflexProxySettingPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    proxySettings?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileProxySetting>[]>;
    /**
     * The number of copies of each data block written.
     */
    replication?: pulumi.Input<number>;
    /**
     * An array of relationships to workflowWorkflowInfo resources.
     */
    runningWorkflows?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileRunningWorkflow>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileScheduledAction>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexSoftwareVersionPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    softwareVersions?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileSoftwareVersion>[]>;
    /**
     * A reference to a policyAbstractProfile resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    srcTemplates?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileSrcTemplate>[]>;
    /**
     * The storage data IP address for the HyperFlex cluster.
     */
    storageClientIpAddress?: pulumi.Input<string>;
    /**
     * The netmask for the Storage client network IP address.
     */
    storageClientNetmask?: pulumi.Input<string>;
    /**
     * The named VLAN associated with this cluster's storage client network. This applies to Intersight Workload Engine
     * clusters only.
     */
    storageClientVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileStorageClientVlan>[]>;
    /**
     * The auxiliary storage IP address for the HyperFlex cluster. For two node clusters, this is the IP address of the
     * auxiliary ZK controller.
     */
    storageClusterAuxiliaryIp?: pulumi.Input<string>;
    /**
     * The VLAN for the HyperFlex storage data traffic.
     */
    storageDataVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileStorageDataVlan>[]>;
    /**
     * The storage type used for the HyperFlex cluster (HyperFlex Storage or 3rd party). * `HyperFlexDp` - The type of storage
     * is HyperFlex Data Platform. * `ThirdParty` - The type of storage is 3rd Party Storage (PureStorage, etc..).
     */
    storageType?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexSysConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    sysConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileSysConfig>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileTag>[]>;
    /**
     * Defines the type of the profile. Accepted values are instance or template. * `instance` - The profile defines the
     * configuration for a specific instance of a target.
     */
    type?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexUcsmConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    ucsmConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileUcsmConfig>[]>;
    /**
     * A reference to a hyperflexVcenterConfigPolicy resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    vcenterConfigs?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileVcenterConfig>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterProfileVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * The WWxN prefix in the form of 20:00:00:25:B5:XX.
     */
    wwxnPrefix?: pulumi.Input<string>;
}
