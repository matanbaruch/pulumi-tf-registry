// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SdaaciConnection extends pulumi.CustomResource {
    /**
     * Get an existing SdaaciConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SdaaciConnectionState, opts?: pulumi.CustomResourceOptions): SdaaciConnection {
        return new SdaaciConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/sdaaciConnection:SdaaciConnection';

    /**
     * Returns true if the given object is an instance of SdaaciConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SdaaciConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SdaaciConnection.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    /**
     * ACI L3Out Name User Input.
     */
    public readonly aciL3Out!: pulumi.Output<string | undefined>;
    /**
     * Name of the Match Rule in Cisco APIC.
     */
    public readonly aciMatchRuleName!: pulumi.Output<string | undefined>;
    /**
     * ACI tenant Name for Selected APIC Target.
     */
    public readonly aciTenant!: pulumi.Output<string | undefined>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.SdaaciConnectionAncestor[]>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly apicTargets!: pulumi.Output<outputs.SdaaciConnectionApicTarget[]>;
    /**
     * Campus fabric site id in which the border node has configured.
     */
    public readonly campusFabricSite!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly dnacTargets!: pulumi.Output<outputs.SdaaciConnectionDnacTarget[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Application EPG Name of this connection.
     */
    public readonly epg!: pulumi.Output<string | undefined>;
    /**
     * EPG Subnet Ipv4Cidr which is configured on APIC.
     */
    public readonly epgSubnet!: pulumi.Output<string | undefined>;
    /**
     * Device within the selected domain used to configure Firewall.
     */
    public readonly firewallDevice!: pulumi.Output<string | undefined>;
    /**
     * Domain used to configure Firewall.
     */
    public readonly firewallDomain!: pulumi.Output<string | undefined>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly fmcTargets!: pulumi.Output<outputs.SdaaciConnectionFmcTarget[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * L3Out Node Profile in Cisco APIC.
     */
    public readonly nodeProfile!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.SdaaciConnectionOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.SdaaciConnectionParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.SdaaciConnectionPermissionResource[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Connection status between SDA and ACI. * `NotConnected` - Connection Status NotConnected. * `Connected` - Connection
     * Status Connected.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.SdaaciConnectionTag[]>;
    /**
     * Transit id for given border node.
     */
    public readonly transit!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.SdaaciConnectionVersionContext[]>;
    /**
     * Virtual Network of this connection.
     */
    public readonly virtualNetwork!: pulumi.Output<string | undefined>;
    /**
     * Contains both VN and EPG of this connection.
     */
    public readonly vnEpg!: pulumi.Output<string | undefined>;
    /**
     * APIC Tenant VRF from APIC.
     */
    public readonly vrf!: pulumi.Output<string | undefined>;

    /**
     * Create a SdaaciConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SdaaciConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SdaaciConnectionArgs | SdaaciConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SdaaciConnectionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["aciL3Out"] = state ? state.aciL3Out : undefined;
            resourceInputs["aciMatchRuleName"] = state ? state.aciMatchRuleName : undefined;
            resourceInputs["aciTenant"] = state ? state.aciTenant : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["apicTargets"] = state ? state.apicTargets : undefined;
            resourceInputs["campusFabricSite"] = state ? state.campusFabricSite : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dnacTargets"] = state ? state.dnacTargets : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["epg"] = state ? state.epg : undefined;
            resourceInputs["epgSubnet"] = state ? state.epgSubnet : undefined;
            resourceInputs["firewallDevice"] = state ? state.firewallDevice : undefined;
            resourceInputs["firewallDomain"] = state ? state.firewallDomain : undefined;
            resourceInputs["fmcTargets"] = state ? state.fmcTargets : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["nodeProfile"] = state ? state.nodeProfile : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transit"] = state ? state.transit : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["virtualNetwork"] = state ? state.virtualNetwork : undefined;
            resourceInputs["vnEpg"] = state ? state.vnEpg : undefined;
            resourceInputs["vrf"] = state ? state.vrf : undefined;
        } else {
            const args = argsOrState as SdaaciConnectionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["aciL3Out"] = args ? args.aciL3Out : undefined;
            resourceInputs["aciMatchRuleName"] = args ? args.aciMatchRuleName : undefined;
            resourceInputs["aciTenant"] = args ? args.aciTenant : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["apicTargets"] = args ? args.apicTargets : undefined;
            resourceInputs["campusFabricSite"] = args ? args.campusFabricSite : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["dnacTargets"] = args ? args.dnacTargets : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["epg"] = args ? args.epg : undefined;
            resourceInputs["epgSubnet"] = args ? args.epgSubnet : undefined;
            resourceInputs["firewallDevice"] = args ? args.firewallDevice : undefined;
            resourceInputs["firewallDomain"] = args ? args.firewallDomain : undefined;
            resourceInputs["fmcTargets"] = args ? args.fmcTargets : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["nodeProfile"] = args ? args.nodeProfile : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transit"] = args ? args.transit : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["virtualNetwork"] = args ? args.virtualNetwork : undefined;
            resourceInputs["vnEpg"] = args ? args.vnEpg : undefined;
            resourceInputs["vrf"] = args ? args.vrf : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SdaaciConnection.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SdaaciConnection resources.
 */
export interface SdaaciConnectionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * ACI L3Out Name User Input.
     */
    aciL3Out?: pulumi.Input<string>;
    /**
     * Name of the Match Rule in Cisco APIC.
     */
    aciMatchRuleName?: pulumi.Input<string>;
    /**
     * ACI tenant Name for Selected APIC Target.
     */
    aciTenant?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionAncestor>[]>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    apicTargets?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionApicTarget>[]>;
    /**
     * Campus fabric site id in which the border node has configured.
     */
    campusFabricSite?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    dnacTargets?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDnacTarget>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Application EPG Name of this connection.
     */
    epg?: pulumi.Input<string>;
    /**
     * EPG Subnet Ipv4Cidr which is configured on APIC.
     */
    epgSubnet?: pulumi.Input<string>;
    /**
     * Device within the selected domain used to configure Firewall.
     */
    firewallDevice?: pulumi.Input<string>;
    /**
     * Domain used to configure Firewall.
     */
    firewallDomain?: pulumi.Input<string>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fmcTargets?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionFmcTarget>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * L3Out Node Profile in Cisco APIC.
     */
    nodeProfile?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Connection status between SDA and ACI. * `NotConnected` - Connection Status NotConnected. * `Connected` - Connection
     * Status Connected.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionTag>[]>;
    /**
     * Transit id for given border node.
     */
    transit?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionVersionContext>[]>;
    /**
     * Virtual Network of this connection.
     */
    virtualNetwork?: pulumi.Input<string>;
    /**
     * Contains both VN and EPG of this connection.
     */
    vnEpg?: pulumi.Input<string>;
    /**
     * APIC Tenant VRF from APIC.
     */
    vrf?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SdaaciConnection resource.
 */
export interface SdaaciConnectionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    /**
     * ACI L3Out Name User Input.
     */
    aciL3Out?: pulumi.Input<string>;
    /**
     * Name of the Match Rule in Cisco APIC.
     */
    aciMatchRuleName?: pulumi.Input<string>;
    /**
     * ACI tenant Name for Selected APIC Target.
     */
    aciTenant?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionAncestor>[]>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    apicTargets?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionApicTarget>[]>;
    /**
     * Campus fabric site id in which the border node has configured.
     */
    campusFabricSite?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    dnacTargets?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionDnacTarget>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Application EPG Name of this connection.
     */
    epg?: pulumi.Input<string>;
    /**
     * EPG Subnet Ipv4Cidr which is configured on APIC.
     */
    epgSubnet?: pulumi.Input<string>;
    /**
     * Device within the selected domain used to configure Firewall.
     */
    firewallDevice?: pulumi.Input<string>;
    /**
     * Domain used to configure Firewall.
     */
    firewallDomain?: pulumi.Input<string>;
    /**
     * A reference to a assetTarget resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    fmcTargets?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionFmcTarget>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * L3Out Node Profile in Cisco APIC.
     */
    nodeProfile?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Connection status between SDA and ACI. * `NotConnected` - Connection Status NotConnected. * `Connected` - Connection
     * Status Connected.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionTag>[]>;
    /**
     * Transit id for given border node.
     */
    transit?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.SdaaciConnectionVersionContext>[]>;
    /**
     * Virtual Network of this connection.
     */
    virtualNetwork?: pulumi.Input<string>;
    /**
     * Contains both VN and EPG of this connection.
     */
    vnEpg?: pulumi.Input<string>;
    /**
     * APIC Tenant VRF from APIC.
     */
    vrf?: pulumi.Input<string>;
}
