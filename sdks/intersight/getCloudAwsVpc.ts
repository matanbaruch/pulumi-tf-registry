// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudAwsVpc(args?: GetCloudAwsVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudAwsVpcResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudAwsVpc:getCloudAwsVpc", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "awsBillingUnit": args.awsBillingUnit,
        "billingUnit": args.billingUnit,
        "classId": args.classId,
        "createTime": args.createTime,
        "dnsHostName": args.dnsHostName,
        "dnsResolution": args.dnsResolution,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "identity": args.identity,
        "ipv4Cidrs": args.ipv4Cidrs,
        "ipv6Cidrs": args.ipv6Cidrs,
        "isDefault": args.isDefault,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "regionInfo": args.regionInfo,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "state": args.state,
        "tags": args.tags,
        "tenancy": args.tenancy,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "vpcTags": args.vpcTags,
        "zoneInfo": args.zoneInfo,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudAwsVpc.
 */
export interface GetCloudAwsVpcArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCloudAwsVpcAncestor[];
    awsBillingUnit?: inputs.GetCloudAwsVpcAwsBillingUnit;
    billingUnit?: inputs.GetCloudAwsVpcBillingUnit;
    classId?: string;
    createTime?: string;
    dnsHostName?: boolean;
    dnsResolution?: boolean;
    domainGroupMoid?: string;
    id?: string;
    identity?: string;
    ipv4Cidrs?: string[];
    ipv6Cidrs?: string[];
    isDefault?: boolean;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudAwsVpcParent;
    permissionResources?: inputs.GetCloudAwsVpcPermissionResource[];
    regionInfo?: inputs.GetCloudAwsVpcRegionInfo;
    registeredDevice?: inputs.GetCloudAwsVpcRegisteredDevice;
    sharedScope?: string;
    state?: string;
    tags?: inputs.GetCloudAwsVpcTag[];
    tenancy?: string;
    uuid?: string;
    versionContext?: inputs.GetCloudAwsVpcVersionContext;
    vpcTags?: inputs.GetCloudAwsVpcVpcTag[];
    zoneInfo?: inputs.GetCloudAwsVpcZoneInfo;
}

/**
 * A collection of values returned by getCloudAwsVpc.
 */
export interface GetCloudAwsVpcResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCloudAwsVpcAncestor[];
    readonly awsBillingUnit?: outputs.GetCloudAwsVpcAwsBillingUnit;
    readonly billingUnit?: outputs.GetCloudAwsVpcBillingUnit;
    readonly classId?: string;
    readonly createTime?: string;
    readonly dnsHostName?: boolean;
    readonly dnsResolution?: boolean;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly identity?: string;
    readonly ipv4Cidrs?: string[];
    readonly ipv6Cidrs?: string[];
    readonly isDefault?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudAwsVpcParent;
    readonly permissionResources?: outputs.GetCloudAwsVpcPermissionResource[];
    readonly regionInfo?: outputs.GetCloudAwsVpcRegionInfo;
    readonly registeredDevice?: outputs.GetCloudAwsVpcRegisteredDevice;
    readonly results: outputs.GetCloudAwsVpcResult[];
    readonly sharedScope?: string;
    readonly state?: string;
    readonly tags?: outputs.GetCloudAwsVpcTag[];
    readonly tenancy?: string;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetCloudAwsVpcVersionContext;
    readonly vpcTags?: outputs.GetCloudAwsVpcVpcTag[];
    readonly zoneInfo?: outputs.GetCloudAwsVpcZoneInfo;
}
export function getCloudAwsVpcOutput(args?: GetCloudAwsVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudAwsVpcResult> {
    return pulumi.output(args).apply((a: any) => getCloudAwsVpc(a, opts))
}

/**
 * A collection of arguments for invoking getCloudAwsVpc.
 */
export interface GetCloudAwsVpcOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsVpcAncestorArgs>[]>;
    awsBillingUnit?: pulumi.Input<inputs.GetCloudAwsVpcAwsBillingUnitArgs>;
    billingUnit?: pulumi.Input<inputs.GetCloudAwsVpcBillingUnitArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dnsHostName?: pulumi.Input<boolean>;
    dnsResolution?: pulumi.Input<boolean>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    identity?: pulumi.Input<string>;
    ipv4Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    isDefault?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudAwsVpcParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsVpcPermissionResourceArgs>[]>;
    regionInfo?: pulumi.Input<inputs.GetCloudAwsVpcRegionInfoArgs>;
    registeredDevice?: pulumi.Input<inputs.GetCloudAwsVpcRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsVpcTagArgs>[]>;
    tenancy?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetCloudAwsVpcVersionContextArgs>;
    vpcTags?: pulumi.Input<pulumi.Input<inputs.GetCloudAwsVpcVpcTagArgs>[]>;
    zoneInfo?: pulumi.Input<inputs.GetCloudAwsVpcZoneInfoArgs>;
}
