// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class IamAccount extends pulumi.CustomResource {
    /**
     * Get an existing IamAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamAccountState, opts?: pulumi.CustomResourceOptions): IamAccount {
        return new IamAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/iamAccount:IamAccount';

    /**
     * Returns true if the given object is an instance of IamAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamAccount.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.IamAccountAncestor[]>;
    /**
     * An array of relationships to iamAppRegistration resources.
     */
    public readonly appRegistrations!: pulumi.Output<outputs.IamAccountAppRegistration[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * An array of relationships to iamDomainGroup resources.
     */
    public readonly domainGroups!: pulumi.Output<outputs.IamAccountDomainGroup[]>;
    /**
     * An array of relationships to iamEndPointRole resources.
     */
    public readonly endPointRoles!: pulumi.Output<outputs.IamAccountEndPointRole[]>;
    /**
     * An array of relationships to iamIdpReference resources.
     */
    public readonly idpreferences!: pulumi.Output<outputs.IamAccountIdpreference[]>;
    /**
     * An array of relationships to iamIdp resources.
     */
    public readonly idps!: pulumi.Output<outputs.IamAccountIdp[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the Intersight account. By default, name is same as the MoID of the account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.IamAccountParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.IamAccountPermissionResource[]>;
    /**
     * An array of relationships to iamPermission resources.
     */
    public readonly permissions!: pulumi.Output<outputs.IamAccountPermission[]>;
    /**
     * An array of relationships to iamPrivilegeSet resources.
     */
    public readonly privilegeSets!: pulumi.Output<outputs.IamAccountPrivilegeSet[]>;
    /**
     * An array of relationships to iamPrivilege resources.
     */
    public readonly privileges!: pulumi.Output<outputs.IamAccountPrivilege[]>;
    public readonly regions!: pulumi.Output<string[]>;
    /**
     * A reference to a iamResourceLimits resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly resourceLimits!: pulumi.Output<outputs.IamAccountResourceLimit[]>;
    /**
     * An array of relationships to iamRole resources.
     */
    public readonly roles!: pulumi.Output<outputs.IamAccountRole[]>;
    /**
     * A reference to a iamSecurityHolder resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly securityHolders!: pulumi.Output<outputs.IamAccountSecurityHolder[]>;
    /**
     * A reference to a iamSessionLimits resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly sessionLimits!: pulumi.Output<outputs.IamAccountSessionLimit[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Indicates if the account is prone to lockout as it has only a single Account Administrator. An account is prone to
     * lockout if it has only one configured Account Administrator and no user groups configured that can grant Account
     * Administrator role to dynamic users.
     */
    public readonly singleAdminLockout!: pulumi.Output<boolean>;
    /**
     * Status of the account. To activate the Intersight account, claim a device to the account.
     */
    public readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.IamAccountTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.IamAccountVersionContext[]>;

    /**
     * Create a IamAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IamAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamAccountArgs | IamAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IamAccountState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["appRegistrations"] = state ? state.appRegistrations : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["domainGroups"] = state ? state.domainGroups : undefined;
            resourceInputs["endPointRoles"] = state ? state.endPointRoles : undefined;
            resourceInputs["idpreferences"] = state ? state.idpreferences : undefined;
            resourceInputs["idps"] = state ? state.idps : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["privilegeSets"] = state ? state.privilegeSets : undefined;
            resourceInputs["privileges"] = state ? state.privileges : undefined;
            resourceInputs["regions"] = state ? state.regions : undefined;
            resourceInputs["resourceLimits"] = state ? state.resourceLimits : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
            resourceInputs["securityHolders"] = state ? state.securityHolders : undefined;
            resourceInputs["sessionLimits"] = state ? state.sessionLimits : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["singleAdminLockout"] = state ? state.singleAdminLockout : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as IamAccountArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["appRegistrations"] = args ? args.appRegistrations : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["domainGroups"] = args ? args.domainGroups : undefined;
            resourceInputs["endPointRoles"] = args ? args.endPointRoles : undefined;
            resourceInputs["idpreferences"] = args ? args.idpreferences : undefined;
            resourceInputs["idps"] = args ? args.idps : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["privilegeSets"] = args ? args.privilegeSets : undefined;
            resourceInputs["privileges"] = args ? args.privileges : undefined;
            resourceInputs["regions"] = args ? args.regions : undefined;
            resourceInputs["resourceLimits"] = args ? args.resourceLimits : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["securityHolders"] = args ? args.securityHolders : undefined;
            resourceInputs["sessionLimits"] = args ? args.sessionLimits : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["singleAdminLockout"] = args ? args.singleAdminLockout : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamAccount.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IamAccount resources.
 */
export interface IamAccountState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.IamAccountAncestor>[]>;
    /**
     * An array of relationships to iamAppRegistration resources.
     */
    appRegistrations?: pulumi.Input<pulumi.Input<inputs.IamAccountAppRegistration>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * An array of relationships to iamDomainGroup resources.
     */
    domainGroups?: pulumi.Input<pulumi.Input<inputs.IamAccountDomainGroup>[]>;
    /**
     * An array of relationships to iamEndPointRole resources.
     */
    endPointRoles?: pulumi.Input<pulumi.Input<inputs.IamAccountEndPointRole>[]>;
    /**
     * An array of relationships to iamIdpReference resources.
     */
    idpreferences?: pulumi.Input<pulumi.Input<inputs.IamAccountIdpreference>[]>;
    /**
     * An array of relationships to iamIdp resources.
     */
    idps?: pulumi.Input<pulumi.Input<inputs.IamAccountIdp>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the Intersight account. By default, name is same as the MoID of the account.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.IamAccountParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.IamAccountPermissionResource>[]>;
    /**
     * An array of relationships to iamPermission resources.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.IamAccountPermission>[]>;
    /**
     * An array of relationships to iamPrivilegeSet resources.
     */
    privilegeSets?: pulumi.Input<pulumi.Input<inputs.IamAccountPrivilegeSet>[]>;
    /**
     * An array of relationships to iamPrivilege resources.
     */
    privileges?: pulumi.Input<pulumi.Input<inputs.IamAccountPrivilege>[]>;
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a iamResourceLimits resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    resourceLimits?: pulumi.Input<pulumi.Input<inputs.IamAccountResourceLimit>[]>;
    /**
     * An array of relationships to iamRole resources.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.IamAccountRole>[]>;
    /**
     * A reference to a iamSecurityHolder resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    securityHolders?: pulumi.Input<pulumi.Input<inputs.IamAccountSecurityHolder>[]>;
    /**
     * A reference to a iamSessionLimits resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    sessionLimits?: pulumi.Input<pulumi.Input<inputs.IamAccountSessionLimit>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Indicates if the account is prone to lockout as it has only a single Account Administrator. An account is prone to
     * lockout if it has only one configured Account Administrator and no user groups configured that can grant Account
     * Administrator role to dynamic users.
     */
    singleAdminLockout?: pulumi.Input<boolean>;
    /**
     * Status of the account. To activate the Intersight account, claim a device to the account.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.IamAccountTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.IamAccountVersionContext>[]>;
}

/**
 * The set of arguments for constructing a IamAccount resource.
 */
export interface IamAccountArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.IamAccountAncestor>[]>;
    /**
     * An array of relationships to iamAppRegistration resources.
     */
    appRegistrations?: pulumi.Input<pulumi.Input<inputs.IamAccountAppRegistration>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * An array of relationships to iamDomainGroup resources.
     */
    domainGroups?: pulumi.Input<pulumi.Input<inputs.IamAccountDomainGroup>[]>;
    /**
     * An array of relationships to iamEndPointRole resources.
     */
    endPointRoles?: pulumi.Input<pulumi.Input<inputs.IamAccountEndPointRole>[]>;
    /**
     * An array of relationships to iamIdpReference resources.
     */
    idpreferences?: pulumi.Input<pulumi.Input<inputs.IamAccountIdpreference>[]>;
    /**
     * An array of relationships to iamIdp resources.
     */
    idps?: pulumi.Input<pulumi.Input<inputs.IamAccountIdp>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the Intersight account. By default, name is same as the MoID of the account.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.IamAccountParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.IamAccountPermissionResource>[]>;
    /**
     * An array of relationships to iamPermission resources.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.IamAccountPermission>[]>;
    /**
     * An array of relationships to iamPrivilegeSet resources.
     */
    privilegeSets?: pulumi.Input<pulumi.Input<inputs.IamAccountPrivilegeSet>[]>;
    /**
     * An array of relationships to iamPrivilege resources.
     */
    privileges?: pulumi.Input<pulumi.Input<inputs.IamAccountPrivilege>[]>;
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a iamResourceLimits resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    resourceLimits?: pulumi.Input<pulumi.Input<inputs.IamAccountResourceLimit>[]>;
    /**
     * An array of relationships to iamRole resources.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.IamAccountRole>[]>;
    /**
     * A reference to a iamSecurityHolder resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    securityHolders?: pulumi.Input<pulumi.Input<inputs.IamAccountSecurityHolder>[]>;
    /**
     * A reference to a iamSessionLimits resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    sessionLimits?: pulumi.Input<pulumi.Input<inputs.IamAccountSessionLimit>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Indicates if the account is prone to lockout as it has only a single Account Administrator. An account is prone to
     * lockout if it has only one configured Account Administrator and no user groups configured that can grant Account
     * Administrator role to dynamic users.
     */
    singleAdminLockout?: pulumi.Input<boolean>;
    /**
     * Status of the account. To activate the Intersight account, claim a device to the account.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.IamAccountTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.IamAccountVersionContext>[]>;
}
