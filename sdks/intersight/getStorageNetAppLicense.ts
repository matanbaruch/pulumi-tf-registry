// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageNetAppLicense(args?: GetStorageNetAppLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageNetAppLicenseResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageNetAppLicense:getStorageNetAppLicense", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "array": args.array,
        "classId": args.classId,
        "clusterUuid": args.clusterUuid,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "state": args.state,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageNetAppLicense.
 */
export interface GetStorageNetAppLicenseArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageNetAppLicenseAncestor[];
    array?: inputs.GetStorageNetAppLicenseArray;
    classId?: string;
    clusterUuid?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStorageNetAppLicenseParent;
    permissionResources?: inputs.GetStorageNetAppLicensePermissionResource[];
    sharedScope?: string;
    state?: string;
    tags?: inputs.GetStorageNetAppLicenseTag[];
    versionContext?: inputs.GetStorageNetAppLicenseVersionContext;
}

/**
 * A collection of values returned by getStorageNetAppLicense.
 */
export interface GetStorageNetAppLicenseResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageNetAppLicenseAncestor[];
    readonly array?: outputs.GetStorageNetAppLicenseArray;
    readonly classId?: string;
    readonly clusterUuid?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageNetAppLicenseParent;
    readonly permissionResources?: outputs.GetStorageNetAppLicensePermissionResource[];
    readonly results: outputs.GetStorageNetAppLicenseResult[];
    readonly sharedScope?: string;
    readonly state?: string;
    readonly tags?: outputs.GetStorageNetAppLicenseTag[];
    readonly versionContext?: outputs.GetStorageNetAppLicenseVersionContext;
}
export function getStorageNetAppLicenseOutput(args?: GetStorageNetAppLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageNetAppLicenseResult> {
    return pulumi.output(args).apply((a: any) => getStorageNetAppLicense(a, opts))
}

/**
 * A collection of arguments for invoking getStorageNetAppLicense.
 */
export interface GetStorageNetAppLicenseOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppLicenseAncestorArgs>[]>;
    array?: pulumi.Input<inputs.GetStorageNetAppLicenseArrayArgs>;
    classId?: pulumi.Input<string>;
    clusterUuid?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageNetAppLicenseParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppLicensePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    state?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageNetAppLicenseTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetStorageNetAppLicenseVersionContextArgs>;
}
