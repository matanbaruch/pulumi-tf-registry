// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIamPrivilege(args?: GetIamPrivilegeArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPrivilegeResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getIamPrivilege:getIamPrivilege", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "hostnamePrefix": args.hostnamePrefix,
        "id": args.id,
        "method": args.method,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "restPath": args.restPath,
        "sharedScope": args.sharedScope,
        "system": args.system,
        "tags": args.tags,
        "urlPrefix": args.urlPrefix,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIamPrivilege.
 */
export interface GetIamPrivilegeArgs {
    account?: inputs.GetIamPrivilegeAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetIamPrivilegeAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    hostnamePrefix?: string;
    id?: string;
    method?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetIamPrivilegeParent;
    permissionResources?: inputs.GetIamPrivilegePermissionResource[];
    restPath?: string;
    sharedScope?: string;
    system?: inputs.GetIamPrivilegeSystem;
    tags?: inputs.GetIamPrivilegeTag[];
    urlPrefix?: string;
    versionContext?: inputs.GetIamPrivilegeVersionContext;
}

/**
 * A collection of values returned by getIamPrivilege.
 */
export interface GetIamPrivilegeResult {
    readonly account?: outputs.GetIamPrivilegeAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetIamPrivilegeAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly hostnamePrefix?: string;
    readonly id: string;
    readonly method?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetIamPrivilegeParent;
    readonly permissionResources?: outputs.GetIamPrivilegePermissionResource[];
    readonly restPath?: string;
    readonly results: outputs.GetIamPrivilegeResult[];
    readonly sharedScope?: string;
    readonly system?: outputs.GetIamPrivilegeSystem;
    readonly tags?: outputs.GetIamPrivilegeTag[];
    readonly urlPrefix?: string;
    readonly versionContext?: outputs.GetIamPrivilegeVersionContext;
}
export function getIamPrivilegeOutput(args?: GetIamPrivilegeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPrivilegeResult> {
    return pulumi.output(args).apply((a: any) => getIamPrivilege(a, opts))
}

/**
 * A collection of arguments for invoking getIamPrivilege.
 */
export interface GetIamPrivilegeOutputArgs {
    account?: pulumi.Input<inputs.GetIamPrivilegeAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetIamPrivilegeAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    hostnamePrefix?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    method?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetIamPrivilegeParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetIamPrivilegePermissionResourceArgs>[]>;
    restPath?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    system?: pulumi.Input<inputs.GetIamPrivilegeSystemArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetIamPrivilegeTagArgs>[]>;
    urlPrefix?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetIamPrivilegeVersionContextArgs>;
}
