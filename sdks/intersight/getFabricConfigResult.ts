// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getFabricConfigResult(args?: GetFabricConfigResultArgs, opts?: pulumi.InvokeOptions): Promise<GetFabricConfigResultResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getFabricConfigResult:getFabricConfigResult", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "appliedPolicies": args.appliedPolicies,
        "classId": args.classId,
        "configStage": args.configStage,
        "configState": args.configState,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "profile": args.profile,
        "resultEntries": args.resultEntries,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "validationState": args.validationState,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getFabricConfigResult.
 */
export interface GetFabricConfigResultArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetFabricConfigResultAncestor[];
    appliedPolicies?: inputs.GetFabricConfigResultAppliedPolicy[];
    classId?: string;
    configStage?: string;
    configState?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetFabricConfigResultParent;
    permissionResources?: inputs.GetFabricConfigResultPermissionResource[];
    profile?: inputs.GetFabricConfigResultProfile;
    resultEntries?: inputs.GetFabricConfigResultResultEntry[];
    sharedScope?: string;
    tags?: inputs.GetFabricConfigResultTag[];
    validationState?: string;
    versionContext?: inputs.GetFabricConfigResultVersionContext;
}

/**
 * A collection of values returned by getFabricConfigResult.
 */
export interface GetFabricConfigResultResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetFabricConfigResultAncestor[];
    readonly appliedPolicies?: outputs.GetFabricConfigResultAppliedPolicy[];
    readonly classId?: string;
    readonly configStage?: string;
    readonly configState?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetFabricConfigResultParent;
    readonly permissionResources?: outputs.GetFabricConfigResultPermissionResource[];
    readonly profile?: outputs.GetFabricConfigResultProfile;
    readonly resultEntries?: outputs.GetFabricConfigResultResultEntry[];
    readonly results: outputs.GetFabricConfigResultResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetFabricConfigResultTag[];
    readonly validationState?: string;
    readonly versionContext?: outputs.GetFabricConfigResultVersionContext;
}
export function getFabricConfigResultOutput(args?: GetFabricConfigResultOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFabricConfigResultResult> {
    return pulumi.output(args).apply((a: any) => getFabricConfigResult(a, opts))
}

/**
 * A collection of arguments for invoking getFabricConfigResult.
 */
export interface GetFabricConfigResultOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetFabricConfigResultAncestorArgs>[]>;
    appliedPolicies?: pulumi.Input<pulumi.Input<inputs.GetFabricConfigResultAppliedPolicyArgs>[]>;
    classId?: pulumi.Input<string>;
    configStage?: pulumi.Input<string>;
    configState?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetFabricConfigResultParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetFabricConfigResultPermissionResourceArgs>[]>;
    profile?: pulumi.Input<inputs.GetFabricConfigResultProfileArgs>;
    resultEntries?: pulumi.Input<pulumi.Input<inputs.GetFabricConfigResultResultEntryArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetFabricConfigResultTagArgs>[]>;
    validationState?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetFabricConfigResultVersionContextArgs>;
}
