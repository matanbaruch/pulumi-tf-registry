// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceImageBundle(args?: GetApplianceImageBundleArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceImageBundleResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceImageBundle:getApplianceImageBundle", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "ansiblePackages": args.ansiblePackages,
        "autoUpgrade": args.autoUpgrade,
        "classId": args.classId,
        "createTime": args.createTime,
        "dcPackages": args.dcPackages,
        "debugPackages": args.debugPackages,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "endpointPackages": args.endpointPackages,
        "fingerprint": args.fingerprint,
        "hasError": args.hasError,
        "id": args.id,
        "infraPackages": args.infraPackages,
        "initPackages": args.initPackages,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "notes": args.notes,
        "nrVersion": args.nrVersion,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "priority": args.priority,
        "releaseTime": args.releaseTime,
        "requires": args.requires,
        "servicePackages": args.servicePackages,
        "sharedScope": args.sharedScope,
        "statusMessage": args.statusMessage,
        "systemPackages": args.systemPackages,
        "tags": args.tags,
        "uiPackages": args.uiPackages,
        "upgradeEndTime": args.upgradeEndTime,
        "upgradeGracePeriod": args.upgradeGracePeriod,
        "upgradeImpactDuration": args.upgradeImpactDuration,
        "upgradeImpactEnum": args.upgradeImpactEnum,
        "upgradeStartTime": args.upgradeStartTime,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceImageBundle.
 */
export interface GetApplianceImageBundleArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceImageBundleAncestor[];
    ansiblePackages?: inputs.GetApplianceImageBundleAnsiblePackage[];
    autoUpgrade?: boolean;
    classId?: string;
    createTime?: string;
    dcPackages?: inputs.GetApplianceImageBundleDcPackage[];
    debugPackages?: inputs.GetApplianceImageBundleDebugPackage[];
    description?: string;
    domainGroupMoid?: string;
    endpointPackages?: inputs.GetApplianceImageBundleEndpointPackage[];
    fingerprint?: string;
    hasError?: boolean;
    id?: string;
    infraPackages?: inputs.GetApplianceImageBundleInfraPackage[];
    initPackages?: inputs.GetApplianceImageBundleInitPackage[];
    modTime?: string;
    moid?: string;
    name?: string;
    notes?: string;
    nrVersion?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApplianceImageBundleParent;
    permissionResources?: inputs.GetApplianceImageBundlePermissionResource[];
    priority?: string;
    releaseTime?: string;
    requires?: inputs.GetApplianceImageBundleRequires;
    servicePackages?: inputs.GetApplianceImageBundleServicePackage[];
    sharedScope?: string;
    statusMessage?: string;
    systemPackages?: inputs.GetApplianceImageBundleSystemPackage[];
    tags?: inputs.GetApplianceImageBundleTag[];
    uiPackages?: inputs.GetApplianceImageBundleUiPackage[];
    upgradeEndTime?: string;
    upgradeGracePeriod?: number;
    upgradeImpactDuration?: number;
    upgradeImpactEnum?: string;
    upgradeStartTime?: string;
    versionContext?: inputs.GetApplianceImageBundleVersionContext;
}

/**
 * A collection of values returned by getApplianceImageBundle.
 */
export interface GetApplianceImageBundleResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceImageBundleAncestor[];
    readonly ansiblePackages?: outputs.GetApplianceImageBundleAnsiblePackage[];
    readonly autoUpgrade?: boolean;
    readonly classId?: string;
    readonly createTime?: string;
    readonly dcPackages?: outputs.GetApplianceImageBundleDcPackage[];
    readonly debugPackages?: outputs.GetApplianceImageBundleDebugPackage[];
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly endpointPackages?: outputs.GetApplianceImageBundleEndpointPackage[];
    readonly fingerprint?: string;
    readonly hasError?: boolean;
    readonly id: string;
    readonly infraPackages?: outputs.GetApplianceImageBundleInfraPackage[];
    readonly initPackages?: outputs.GetApplianceImageBundleInitPackage[];
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly notes?: string;
    readonly nrVersion?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceImageBundleParent;
    readonly permissionResources?: outputs.GetApplianceImageBundlePermissionResource[];
    readonly priority?: string;
    readonly releaseTime?: string;
    readonly requires?: outputs.GetApplianceImageBundleRequires;
    readonly results: outputs.GetApplianceImageBundleResult[];
    readonly servicePackages?: outputs.GetApplianceImageBundleServicePackage[];
    readonly sharedScope?: string;
    readonly statusMessage?: string;
    readonly systemPackages?: outputs.GetApplianceImageBundleSystemPackage[];
    readonly tags?: outputs.GetApplianceImageBundleTag[];
    readonly uiPackages?: outputs.GetApplianceImageBundleUiPackage[];
    readonly upgradeEndTime?: string;
    readonly upgradeGracePeriod?: number;
    readonly upgradeImpactDuration?: number;
    readonly upgradeImpactEnum?: string;
    readonly upgradeStartTime?: string;
    readonly versionContext?: outputs.GetApplianceImageBundleVersionContext;
}
export function getApplianceImageBundleOutput(args?: GetApplianceImageBundleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceImageBundleResult> {
    return pulumi.output(args).apply((a: any) => getApplianceImageBundle(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceImageBundle.
 */
export interface GetApplianceImageBundleOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleAncestorArgs>[]>;
    ansiblePackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleAnsiblePackageArgs>[]>;
    autoUpgrade?: pulumi.Input<boolean>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    dcPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleDcPackageArgs>[]>;
    debugPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleDebugPackageArgs>[]>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    endpointPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleEndpointPackageArgs>[]>;
    fingerprint?: pulumi.Input<string>;
    hasError?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    infraPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleInfraPackageArgs>[]>;
    initPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleInitPackageArgs>[]>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    nrVersion?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceImageBundleParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundlePermissionResourceArgs>[]>;
    priority?: pulumi.Input<string>;
    releaseTime?: pulumi.Input<string>;
    requires?: pulumi.Input<inputs.GetApplianceImageBundleRequiresArgs>;
    servicePackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleServicePackageArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    systemPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleSystemPackageArgs>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleTagArgs>[]>;
    uiPackages?: pulumi.Input<pulumi.Input<inputs.GetApplianceImageBundleUiPackageArgs>[]>;
    upgradeEndTime?: pulumi.Input<string>;
    upgradeGracePeriod?: pulumi.Input<number>;
    upgradeImpactDuration?: pulumi.Input<number>;
    upgradeImpactEnum?: pulumi.Input<string>;
    upgradeStartTime?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetApplianceImageBundleVersionContextArgs>;
}
