// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServerProfileTemplate(args?: GetServerProfileTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetServerProfileTemplateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getServerProfileTemplate:getServerProfileTemplate", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "actionParams": args.actionParams,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "configContext": args.configContext,
        "configResult": args.configResult,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "policyBuckets": args.policyBuckets,
        "scheduledActions": args.scheduledActions,
        "sharedScope": args.sharedScope,
        "srcTemplate": args.srcTemplate,
        "tags": args.tags,
        "targetPlatform": args.targetPlatform,
        "type": args.type,
        "usage": args.usage,
        "uuidAddressType": args.uuidAddressType,
        "uuidPool": args.uuidPool,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getServerProfileTemplate.
 */
export interface GetServerProfileTemplateArgs {
    accountMoid?: string;
    action?: string;
    actionParams?: inputs.GetServerProfileTemplateActionParam[];
    additionalProperties?: string;
    ancestors?: inputs.GetServerProfileTemplateAncestor[];
    classId?: string;
    configContext?: inputs.GetServerProfileTemplateConfigContext;
    configResult?: inputs.GetServerProfileTemplateConfigResult;
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetServerProfileTemplateOrganization;
    owners?: string[];
    parent?: inputs.GetServerProfileTemplateParent;
    permissionResources?: inputs.GetServerProfileTemplatePermissionResource[];
    policyBuckets?: inputs.GetServerProfileTemplatePolicyBucket[];
    scheduledActions?: inputs.GetServerProfileTemplateScheduledAction[];
    sharedScope?: string;
    srcTemplate?: inputs.GetServerProfileTemplateSrcTemplate;
    tags?: inputs.GetServerProfileTemplateTag[];
    targetPlatform?: string;
    type?: string;
    usage?: number;
    uuidAddressType?: string;
    uuidPool?: inputs.GetServerProfileTemplateUuidPool;
    versionContext?: inputs.GetServerProfileTemplateVersionContext;
}

/**
 * A collection of values returned by getServerProfileTemplate.
 */
export interface GetServerProfileTemplateResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly actionParams?: outputs.GetServerProfileTemplateActionParam[];
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetServerProfileTemplateAncestor[];
    readonly classId?: string;
    readonly configContext?: outputs.GetServerProfileTemplateConfigContext;
    readonly configResult?: outputs.GetServerProfileTemplateConfigResult;
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetServerProfileTemplateOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetServerProfileTemplateParent;
    readonly permissionResources?: outputs.GetServerProfileTemplatePermissionResource[];
    readonly policyBuckets?: outputs.GetServerProfileTemplatePolicyBucket[];
    readonly results: outputs.GetServerProfileTemplateResult[];
    readonly scheduledActions?: outputs.GetServerProfileTemplateScheduledAction[];
    readonly sharedScope?: string;
    readonly srcTemplate?: outputs.GetServerProfileTemplateSrcTemplate;
    readonly tags?: outputs.GetServerProfileTemplateTag[];
    readonly targetPlatform?: string;
    readonly type?: string;
    readonly usage?: number;
    readonly uuidAddressType?: string;
    readonly uuidPool?: outputs.GetServerProfileTemplateUuidPool;
    readonly versionContext?: outputs.GetServerProfileTemplateVersionContext;
}
export function getServerProfileTemplateOutput(args?: GetServerProfileTemplateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerProfileTemplateResult> {
    return pulumi.output(args).apply((a: any) => getServerProfileTemplate(a, opts))
}

/**
 * A collection of arguments for invoking getServerProfileTemplate.
 */
export interface GetServerProfileTemplateOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    actionParams?: pulumi.Input<pulumi.Input<inputs.GetServerProfileTemplateActionParamArgs>[]>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetServerProfileTemplateAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    configContext?: pulumi.Input<inputs.GetServerProfileTemplateConfigContextArgs>;
    configResult?: pulumi.Input<inputs.GetServerProfileTemplateConfigResultArgs>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetServerProfileTemplateOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetServerProfileTemplateParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetServerProfileTemplatePermissionResourceArgs>[]>;
    policyBuckets?: pulumi.Input<pulumi.Input<inputs.GetServerProfileTemplatePolicyBucketArgs>[]>;
    scheduledActions?: pulumi.Input<pulumi.Input<inputs.GetServerProfileTemplateScheduledActionArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    srcTemplate?: pulumi.Input<inputs.GetServerProfileTemplateSrcTemplateArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetServerProfileTemplateTagArgs>[]>;
    targetPlatform?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    usage?: pulumi.Input<number>;
    uuidAddressType?: pulumi.Input<string>;
    uuidPool?: pulumi.Input<inputs.GetServerProfileTemplateUuidPoolArgs>;
    versionContext?: pulumi.Input<inputs.GetServerProfileTemplateVersionContextArgs>;
}
