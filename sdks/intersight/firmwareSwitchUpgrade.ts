// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class FirmwareSwitchUpgrade extends pulumi.CustomResource {
    /**
     * Get an existing FirmwareSwitchUpgrade resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirmwareSwitchUpgradeState, opts?: pulumi.CustomResourceOptions): FirmwareSwitchUpgrade {
        return new FirmwareSwitchUpgrade(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/firmwareSwitchUpgrade:FirmwareSwitchUpgrade';

    /**
     * Returns true if the given object is an instance of FirmwareSwitchUpgrade.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirmwareSwitchUpgrade {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirmwareSwitchUpgrade.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.FirmwareSwitchUpgradeAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly devices!: pulumi.Output<outputs.FirmwareSwitchUpgradeDevice[]>;
    /**
     * Direct download options in case the upgradeType is direct download based upgrade.
     */
    public readonly directDownloads!: pulumi.Output<outputs.FirmwareSwitchUpgradeDirectDownload[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly distributables!: pulumi.Output<outputs.FirmwareSwitchUpgradeDistributable[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The flag to enable or disable fabric evacuation during the switch firmware upgrade. In case of IMM, it is mandatory to
     * have the Fabric Interconnects associated with domain profile for fabric evacuation to happen.
     */
    public readonly enableFabricEvacuation!: pulumi.Output<boolean | undefined>;
    /**
     * Location of the image in user software repository.
     */
    public readonly fileServers!: pulumi.Output<outputs.FirmwareSwitchUpgradeFileServer[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * An array of relationships to networkElement resources.
     */
    public readonly networkElements!: pulumi.Output<outputs.FirmwareSwitchUpgradeNetworkElement[]>;
    /**
     * Deprecated (Use 'fileServer' property). Network share options in case of the upgradeType is network share based upgrade.
     */
    public readonly networkShares!: pulumi.Output<outputs.FirmwareSwitchUpgradeNetworkShare[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.FirmwareSwitchUpgradeParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.FirmwareSwitchUpgradePermissionResource[]>;
    /**
     * A reference to a softwarerepositoryRelease resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly releases!: pulumi.Output<outputs.FirmwareSwitchUpgradeRelease[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * User has the option to skip the estimate impact calculation.
     */
    public readonly skipEstimateImpact!: pulumi.Output<boolean | undefined>;
    /**
     * The flag to enable or disable the option to wait for IO paths connectivity during the switch firmware upgrade.
     */
    public readonly skipWaitForIoPathConnectivity!: pulumi.Output<boolean | undefined>;
    /**
     * Status of the upgrade operation. * `NONE` - Upgrade status is not populated. * `IN_PROGRESS` - The upgrade is in
     * progress. * `SUCCESSFUL` - The upgrade successfully completed. * `FAILED` - The upgrade shows failed status. *
     * `TERMINATED` - The upgrade has been terminated.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<outputs.FirmwareSwitchUpgradeTag[]>;
    /**
     * A reference to a firmwareUpgradeImpactStatus resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly upgradeImpacts!: pulumi.Output<outputs.FirmwareSwitchUpgradeUpgradeImpact[]>;
    /**
     * A reference to a firmwareUpgradeStatus resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly upgradeStatuses!: pulumi.Output<outputs.FirmwareSwitchUpgradeUpgradeStatus[]>;
    /**
     * Desired upgrade mode to choose either direct download based upgrade or network share upgrade. * `direct_upgrade` -
     * Upgrade mode is direct download. * `network_upgrade` - Upgrade mode is network upgrade.
     */
    public readonly upgradeType!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.FirmwareSwitchUpgradeVersionContext[]>;

    /**
     * Create a FirmwareSwitchUpgrade resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirmwareSwitchUpgradeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirmwareSwitchUpgradeArgs | FirmwareSwitchUpgradeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirmwareSwitchUpgradeState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["devices"] = state ? state.devices : undefined;
            resourceInputs["directDownloads"] = state ? state.directDownloads : undefined;
            resourceInputs["distributables"] = state ? state.distributables : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["enableFabricEvacuation"] = state ? state.enableFabricEvacuation : undefined;
            resourceInputs["fileServers"] = state ? state.fileServers : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["networkElements"] = state ? state.networkElements : undefined;
            resourceInputs["networkShares"] = state ? state.networkShares : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["releases"] = state ? state.releases : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["skipEstimateImpact"] = state ? state.skipEstimateImpact : undefined;
            resourceInputs["skipWaitForIoPathConnectivity"] = state ? state.skipWaitForIoPathConnectivity : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["upgradeImpacts"] = state ? state.upgradeImpacts : undefined;
            resourceInputs["upgradeStatuses"] = state ? state.upgradeStatuses : undefined;
            resourceInputs["upgradeType"] = state ? state.upgradeType : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as FirmwareSwitchUpgradeArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["devices"] = args ? args.devices : undefined;
            resourceInputs["directDownloads"] = args ? args.directDownloads : undefined;
            resourceInputs["distributables"] = args ? args.distributables : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["enableFabricEvacuation"] = args ? args.enableFabricEvacuation : undefined;
            resourceInputs["fileServers"] = args ? args.fileServers : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["networkElements"] = args ? args.networkElements : undefined;
            resourceInputs["networkShares"] = args ? args.networkShares : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["releases"] = args ? args.releases : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["skipEstimateImpact"] = args ? args.skipEstimateImpact : undefined;
            resourceInputs["skipWaitForIoPathConnectivity"] = args ? args.skipWaitForIoPathConnectivity : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["upgradeImpacts"] = args ? args.upgradeImpacts : undefined;
            resourceInputs["upgradeStatuses"] = args ? args.upgradeStatuses : undefined;
            resourceInputs["upgradeType"] = args ? args.upgradeType : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirmwareSwitchUpgrade.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering FirmwareSwitchUpgrade resources.
 */
export interface FirmwareSwitchUpgradeState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeDevice>[]>;
    /**
     * Direct download options in case the upgradeType is direct download based upgrade.
     */
    directDownloads?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeDirectDownload>[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    distributables?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeDistributable>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The flag to enable or disable fabric evacuation during the switch firmware upgrade. In case of IMM, it is mandatory to
     * have the Fabric Interconnects associated with domain profile for fabric evacuation to happen.
     */
    enableFabricEvacuation?: pulumi.Input<boolean>;
    /**
     * Location of the image in user software repository.
     */
    fileServers?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeFileServer>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * An array of relationships to networkElement resources.
     */
    networkElements?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeNetworkElement>[]>;
    /**
     * Deprecated (Use 'fileServer' property). Network share options in case of the upgradeType is network share based upgrade.
     */
    networkShares?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeNetworkShare>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradePermissionResource>[]>;
    /**
     * A reference to a softwarerepositoryRelease resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    releases?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeRelease>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * User has the option to skip the estimate impact calculation.
     */
    skipEstimateImpact?: pulumi.Input<boolean>;
    /**
     * The flag to enable or disable the option to wait for IO paths connectivity during the switch firmware upgrade.
     */
    skipWaitForIoPathConnectivity?: pulumi.Input<boolean>;
    /**
     * Status of the upgrade operation. * `NONE` - Upgrade status is not populated. * `IN_PROGRESS` - The upgrade is in
     * progress. * `SUCCESSFUL` - The upgrade successfully completed. * `FAILED` - The upgrade shows failed status. *
     * `TERMINATED` - The upgrade has been terminated.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeTag>[]>;
    /**
     * A reference to a firmwareUpgradeImpactStatus resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    upgradeImpacts?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeUpgradeImpact>[]>;
    /**
     * A reference to a firmwareUpgradeStatus resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    upgradeStatuses?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeUpgradeStatus>[]>;
    /**
     * Desired upgrade mode to choose either direct download based upgrade or network share upgrade. * `direct_upgrade` -
     * Upgrade mode is direct download. * `network_upgrade` - Upgrade mode is network upgrade.
     */
    upgradeType?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeVersionContext>[]>;
}

/**
 * The set of arguments for constructing a FirmwareSwitchUpgrade resource.
 */
export interface FirmwareSwitchUpgradeArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A reference to a assetDeviceRegistration resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    devices?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeDevice>[]>;
    /**
     * Direct download options in case the upgradeType is direct download based upgrade.
     */
    directDownloads?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeDirectDownload>[]>;
    /**
     * A reference to a firmwareDistributable resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    distributables?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeDistributable>[]>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The flag to enable or disable fabric evacuation during the switch firmware upgrade. In case of IMM, it is mandatory to
     * have the Fabric Interconnects associated with domain profile for fabric evacuation to happen.
     */
    enableFabricEvacuation?: pulumi.Input<boolean>;
    /**
     * Location of the image in user software repository.
     */
    fileServers?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeFileServer>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * An array of relationships to networkElement resources.
     */
    networkElements?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeNetworkElement>[]>;
    /**
     * Deprecated (Use 'fileServer' property). Network share options in case of the upgradeType is network share based upgrade.
     */
    networkShares?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeNetworkShare>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradePermissionResource>[]>;
    /**
     * A reference to a softwarerepositoryRelease resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    releases?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeRelease>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * User has the option to skip the estimate impact calculation.
     */
    skipEstimateImpact?: pulumi.Input<boolean>;
    /**
     * The flag to enable or disable the option to wait for IO paths connectivity during the switch firmware upgrade.
     */
    skipWaitForIoPathConnectivity?: pulumi.Input<boolean>;
    /**
     * Status of the upgrade operation. * `NONE` - Upgrade status is not populated. * `IN_PROGRESS` - The upgrade is in
     * progress. * `SUCCESSFUL` - The upgrade successfully completed. * `FAILED` - The upgrade shows failed status. *
     * `TERMINATED` - The upgrade has been terminated.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeTag>[]>;
    /**
     * A reference to a firmwareUpgradeImpactStatus resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    upgradeImpacts?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeUpgradeImpact>[]>;
    /**
     * A reference to a firmwareUpgradeStatus resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    upgradeStatuses?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeUpgradeStatus>[]>;
    /**
     * Desired upgrade mode to choose either direct download based upgrade or network share upgrade. * `direct_upgrade` -
     * Upgrade mode is direct download. * `network_upgrade` - Upgrade mode is network upgrade.
     */
    upgradeType?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.FirmwareSwitchUpgradeVersionContext>[]>;
}
