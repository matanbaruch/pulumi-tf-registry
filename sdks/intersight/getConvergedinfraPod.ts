// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConvergedinfraPod(args?: GetConvergedinfraPodArgs, opts?: pulumi.InvokeOptions): Promise<GetConvergedinfraPodResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getConvergedinfraPod:getConvergedinfraPod", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "deploymentType": args.deploymentType,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "interopStatus": args.interopStatus,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "podCompliance": args.podCompliance,
        "podResourceGroup": args.podResourceGroup,
        "serviceItemInstance": args.serviceItemInstance,
        "sharedScope": args.sharedScope,
        "summary": args.summary,
        "tags": args.tags,
        "type": args.type,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConvergedinfraPod.
 */
export interface GetConvergedinfraPodArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetConvergedinfraPodAncestor[];
    classId?: string;
    createTime?: string;
    deploymentType?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    interopStatus?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetConvergedinfraPodOrganization;
    owners?: string[];
    parent?: inputs.GetConvergedinfraPodParent;
    permissionResources?: inputs.GetConvergedinfraPodPermissionResource[];
    podCompliance?: inputs.GetConvergedinfraPodPodCompliance;
    podResourceGroup?: inputs.GetConvergedinfraPodPodResourceGroup;
    serviceItemInstance?: inputs.GetConvergedinfraPodServiceItemInstance;
    sharedScope?: string;
    summary?: inputs.GetConvergedinfraPodSummary;
    tags?: inputs.GetConvergedinfraPodTag[];
    type?: string;
    versionContext?: inputs.GetConvergedinfraPodVersionContext;
}

/**
 * A collection of values returned by getConvergedinfraPod.
 */
export interface GetConvergedinfraPodResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetConvergedinfraPodAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly deploymentType?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly interopStatus?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetConvergedinfraPodOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetConvergedinfraPodParent;
    readonly permissionResources?: outputs.GetConvergedinfraPodPermissionResource[];
    readonly podCompliance?: outputs.GetConvergedinfraPodPodCompliance;
    readonly podResourceGroup?: outputs.GetConvergedinfraPodPodResourceGroup;
    readonly results: outputs.GetConvergedinfraPodResult[];
    readonly serviceItemInstance?: outputs.GetConvergedinfraPodServiceItemInstance;
    readonly sharedScope?: string;
    readonly summary?: outputs.GetConvergedinfraPodSummary;
    readonly tags?: outputs.GetConvergedinfraPodTag[];
    readonly type?: string;
    readonly versionContext?: outputs.GetConvergedinfraPodVersionContext;
}
export function getConvergedinfraPodOutput(args?: GetConvergedinfraPodOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConvergedinfraPodResult> {
    return pulumi.output(args).apply((a: any) => getConvergedinfraPod(a, opts))
}

/**
 * A collection of arguments for invoking getConvergedinfraPod.
 */
export interface GetConvergedinfraPodOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraPodAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    deploymentType?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    interopStatus?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetConvergedinfraPodOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetConvergedinfraPodParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraPodPermissionResourceArgs>[]>;
    podCompliance?: pulumi.Input<inputs.GetConvergedinfraPodPodComplianceArgs>;
    podResourceGroup?: pulumi.Input<inputs.GetConvergedinfraPodPodResourceGroupArgs>;
    serviceItemInstance?: pulumi.Input<inputs.GetConvergedinfraPodServiceItemInstanceArgs>;
    sharedScope?: pulumi.Input<string>;
    summary?: pulumi.Input<inputs.GetConvergedinfraPodSummaryArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraPodTagArgs>[]>;
    type?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetConvergedinfraPodVersionContextArgs>;
}
