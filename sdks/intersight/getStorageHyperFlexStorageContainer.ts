// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getStorageHyperFlexStorageContainer(args?: GetStorageHyperFlexStorageContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageHyperFlexStorageContainerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getStorageHyperFlexStorageContainer:getStorageHyperFlexStorageContainer", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "createdTime": args.createdTime,
        "dataBlockSize": args.dataBlockSize,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "inUse": args.inUse,
        "lastAccessTime": args.lastAccessTime,
        "lastModifiedTime": args.lastModifiedTime,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "provisionedCapacity": args.provisionedCapacity,
        "provisionedVolumeCapacityUtilization": args.provisionedVolumeCapacityUtilization,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "storageUtilization": args.storageUtilization,
        "tags": args.tags,
        "type": args.type,
        "unCompressedUsedBytes": args.unCompressedUsedBytes,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
        "volumeCount": args.volumeCount,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getStorageHyperFlexStorageContainer.
 */
export interface GetStorageHyperFlexStorageContainerArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetStorageHyperFlexStorageContainerAncestor[];
    classId?: string;
    cluster?: inputs.GetStorageHyperFlexStorageContainerCluster;
    createTime?: string;
    createdTime?: string;
    dataBlockSize?: number;
    domainGroupMoid?: string;
    id?: string;
    inUse?: boolean;
    lastAccessTime?: string;
    lastModifiedTime?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetStorageHyperFlexStorageContainerParent;
    permissionResources?: inputs.GetStorageHyperFlexStorageContainerPermissionResource[];
    provisionedCapacity?: number;
    provisionedVolumeCapacityUtilization?: number;
    registeredDevice?: inputs.GetStorageHyperFlexStorageContainerRegisteredDevice;
    sharedScope?: string;
    storageUtilization?: inputs.GetStorageHyperFlexStorageContainerStorageUtilization;
    tags?: inputs.GetStorageHyperFlexStorageContainerTag[];
    type?: string;
    unCompressedUsedBytes?: number;
    uuid?: string;
    versionContext?: inputs.GetStorageHyperFlexStorageContainerVersionContext;
    volumeCount?: number;
}

/**
 * A collection of values returned by getStorageHyperFlexStorageContainer.
 */
export interface GetStorageHyperFlexStorageContainerResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetStorageHyperFlexStorageContainerAncestor[];
    readonly classId?: string;
    readonly cluster?: outputs.GetStorageHyperFlexStorageContainerCluster;
    readonly createTime?: string;
    readonly createdTime?: string;
    readonly dataBlockSize?: number;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly inUse?: boolean;
    readonly lastAccessTime?: string;
    readonly lastModifiedTime?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetStorageHyperFlexStorageContainerParent;
    readonly permissionResources?: outputs.GetStorageHyperFlexStorageContainerPermissionResource[];
    readonly provisionedCapacity?: number;
    readonly provisionedVolumeCapacityUtilization?: number;
    readonly registeredDevice?: outputs.GetStorageHyperFlexStorageContainerRegisteredDevice;
    readonly results: outputs.GetStorageHyperFlexStorageContainerResult[];
    readonly sharedScope?: string;
    readonly storageUtilization?: outputs.GetStorageHyperFlexStorageContainerStorageUtilization;
    readonly tags?: outputs.GetStorageHyperFlexStorageContainerTag[];
    readonly type?: string;
    readonly unCompressedUsedBytes?: number;
    readonly uuid?: string;
    readonly versionContext?: outputs.GetStorageHyperFlexStorageContainerVersionContext;
    readonly volumeCount?: number;
}
export function getStorageHyperFlexStorageContainerOutput(args?: GetStorageHyperFlexStorageContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageHyperFlexStorageContainerResult> {
    return pulumi.output(args).apply((a: any) => getStorageHyperFlexStorageContainer(a, opts))
}

/**
 * A collection of arguments for invoking getStorageHyperFlexStorageContainer.
 */
export interface GetStorageHyperFlexStorageContainerOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetStorageHyperFlexStorageContainerAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetStorageHyperFlexStorageContainerClusterArgs>;
    createTime?: pulumi.Input<string>;
    createdTime?: pulumi.Input<string>;
    dataBlockSize?: pulumi.Input<number>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    inUse?: pulumi.Input<boolean>;
    lastAccessTime?: pulumi.Input<string>;
    lastModifiedTime?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetStorageHyperFlexStorageContainerParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetStorageHyperFlexStorageContainerPermissionResourceArgs>[]>;
    provisionedCapacity?: pulumi.Input<number>;
    provisionedVolumeCapacityUtilization?: pulumi.Input<number>;
    registeredDevice?: pulumi.Input<inputs.GetStorageHyperFlexStorageContainerRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    storageUtilization?: pulumi.Input<inputs.GetStorageHyperFlexStorageContainerStorageUtilizationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetStorageHyperFlexStorageContainerTagArgs>[]>;
    type?: pulumi.Input<string>;
    unCompressedUsedBytes?: pulumi.Input<number>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetStorageHyperFlexStorageContainerVersionContextArgs>;
    volumeCount?: pulumi.Input<number>;
}
