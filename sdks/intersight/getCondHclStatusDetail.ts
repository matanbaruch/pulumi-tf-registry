// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCondHclStatusDetail(args?: GetCondHclStatusDetailArgs, opts?: pulumi.InvokeOptions): Promise<GetCondHclStatusDetailResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCondHclStatusDetail:getCondHclStatusDetail", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "component": args.component,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "hardwareStatus": args.hardwareStatus,
        "hclCimcVersion": args.hclCimcVersion,
        "hclDriverName": args.hclDriverName,
        "hclDriverVersion": args.hclDriverVersion,
        "hclFirmwareVersion": args.hclFirmwareVersion,
        "hclModel": args.hclModel,
        "hclStatus": args.hclStatus,
        "id": args.id,
        "invCimcVersion": args.invCimcVersion,
        "invDriverName": args.invDriverName,
        "invDriverVersion": args.invDriverVersion,
        "invFirmwareVersion": args.invFirmwareVersion,
        "invModel": args.invModel,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "reason": args.reason,
        "sharedScope": args.sharedScope,
        "softwareStatus": args.softwareStatus,
        "status": args.status,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCondHclStatusDetail.
 */
export interface GetCondHclStatusDetailArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCondHclStatusDetailAncestor[];
    classId?: string;
    component?: inputs.GetCondHclStatusDetailComponent;
    createTime?: string;
    domainGroupMoid?: string;
    hardwareStatus?: string;
    hclCimcVersion?: string;
    hclDriverName?: string;
    hclDriverVersion?: string;
    hclFirmwareVersion?: string;
    hclModel?: string;
    hclStatus?: inputs.GetCondHclStatusDetailHclStatus;
    id?: string;
    invCimcVersion?: string;
    invDriverName?: string;
    invDriverVersion?: string;
    invFirmwareVersion?: string;
    invModel?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCondHclStatusDetailParent;
    permissionResources?: inputs.GetCondHclStatusDetailPermissionResource[];
    reason?: string;
    sharedScope?: string;
    softwareStatus?: string;
    status?: string;
    tags?: inputs.GetCondHclStatusDetailTag[];
    versionContext?: inputs.GetCondHclStatusDetailVersionContext;
}

/**
 * A collection of values returned by getCondHclStatusDetail.
 */
export interface GetCondHclStatusDetailResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCondHclStatusDetailAncestor[];
    readonly classId?: string;
    readonly component?: outputs.GetCondHclStatusDetailComponent;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly hardwareStatus?: string;
    readonly hclCimcVersion?: string;
    readonly hclDriverName?: string;
    readonly hclDriverVersion?: string;
    readonly hclFirmwareVersion?: string;
    readonly hclModel?: string;
    readonly hclStatus?: outputs.GetCondHclStatusDetailHclStatus;
    readonly id: string;
    readonly invCimcVersion?: string;
    readonly invDriverName?: string;
    readonly invDriverVersion?: string;
    readonly invFirmwareVersion?: string;
    readonly invModel?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCondHclStatusDetailParent;
    readonly permissionResources?: outputs.GetCondHclStatusDetailPermissionResource[];
    readonly reason?: string;
    readonly results: outputs.GetCondHclStatusDetailResult[];
    readonly sharedScope?: string;
    readonly softwareStatus?: string;
    readonly status?: string;
    readonly tags?: outputs.GetCondHclStatusDetailTag[];
    readonly versionContext?: outputs.GetCondHclStatusDetailVersionContext;
}
export function getCondHclStatusDetailOutput(args?: GetCondHclStatusDetailOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCondHclStatusDetailResult> {
    return pulumi.output(args).apply((a: any) => getCondHclStatusDetail(a, opts))
}

/**
 * A collection of arguments for invoking getCondHclStatusDetail.
 */
export interface GetCondHclStatusDetailOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCondHclStatusDetailAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    component?: pulumi.Input<inputs.GetCondHclStatusDetailComponentArgs>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    hardwareStatus?: pulumi.Input<string>;
    hclCimcVersion?: pulumi.Input<string>;
    hclDriverName?: pulumi.Input<string>;
    hclDriverVersion?: pulumi.Input<string>;
    hclFirmwareVersion?: pulumi.Input<string>;
    hclModel?: pulumi.Input<string>;
    hclStatus?: pulumi.Input<inputs.GetCondHclStatusDetailHclStatusArgs>;
    id?: pulumi.Input<string>;
    invCimcVersion?: pulumi.Input<string>;
    invDriverName?: pulumi.Input<string>;
    invDriverVersion?: pulumi.Input<string>;
    invFirmwareVersion?: pulumi.Input<string>;
    invModel?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCondHclStatusDetailParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCondHclStatusDetailPermissionResourceArgs>[]>;
    reason?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    softwareStatus?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCondHclStatusDetailTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetCondHclStatusDetailVersionContextArgs>;
}
