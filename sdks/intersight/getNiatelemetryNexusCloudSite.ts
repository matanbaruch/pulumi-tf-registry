// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryNexusCloudSite(args?: GetNiatelemetryNexusCloudSiteArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryNexusCloudSiteResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryNexusCloudSite:getNiatelemetryNexusCloudSite", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "advisories": args.advisories,
        "ancestors": args.ancestors,
        "anomalies": args.anomalies,
        "capacityUtilization": args.capacityUtilization,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "licenseType": args.licenseType,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "nexusCloudAccount": args.nexusCloudAccount,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "siteType": args.siteType,
        "softwareManagement": args.softwareManagement,
        "tags": args.tags,
        "uuid": args.uuid,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryNexusCloudSite.
 */
export interface GetNiatelemetryNexusCloudSiteArgs {
    accountMoid?: string;
    additionalProperties?: string;
    advisories?: boolean;
    ancestors?: inputs.GetNiatelemetryNexusCloudSiteAncestor[];
    anomalies?: boolean;
    capacityUtilization?: boolean;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    licenseType?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    nexusCloudAccount?: inputs.GetNiatelemetryNexusCloudSiteNexusCloudAccount;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryNexusCloudSiteParent;
    permissionResources?: inputs.GetNiatelemetryNexusCloudSitePermissionResource[];
    sharedScope?: string;
    siteType?: string;
    softwareManagement?: boolean;
    tags?: inputs.GetNiatelemetryNexusCloudSiteTag[];
    uuid?: string;
    versionContext?: inputs.GetNiatelemetryNexusCloudSiteVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryNexusCloudSite.
 */
export interface GetNiatelemetryNexusCloudSiteResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly advisories?: boolean;
    readonly ancestors?: outputs.GetNiatelemetryNexusCloudSiteAncestor[];
    readonly anomalies?: boolean;
    readonly capacityUtilization?: boolean;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly licenseType?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly nexusCloudAccount?: outputs.GetNiatelemetryNexusCloudSiteNexusCloudAccount;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryNexusCloudSiteParent;
    readonly permissionResources?: outputs.GetNiatelemetryNexusCloudSitePermissionResource[];
    readonly results: outputs.GetNiatelemetryNexusCloudSiteResult[];
    readonly sharedScope?: string;
    readonly siteType?: string;
    readonly softwareManagement?: boolean;
    readonly tags?: outputs.GetNiatelemetryNexusCloudSiteTag[];
    readonly uuid?: string;
    readonly versionContext?: outputs.GetNiatelemetryNexusCloudSiteVersionContext;
}
export function getNiatelemetryNexusCloudSiteOutput(args?: GetNiatelemetryNexusCloudSiteOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryNexusCloudSiteResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryNexusCloudSite(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryNexusCloudSite.
 */
export interface GetNiatelemetryNexusCloudSiteOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    advisories?: pulumi.Input<boolean>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryNexusCloudSiteAncestorArgs>[]>;
    anomalies?: pulumi.Input<boolean>;
    capacityUtilization?: pulumi.Input<boolean>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    licenseType?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    nexusCloudAccount?: pulumi.Input<inputs.GetNiatelemetryNexusCloudSiteNexusCloudAccountArgs>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryNexusCloudSiteParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryNexusCloudSitePermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    siteType?: pulumi.Input<string>;
    softwareManagement?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryNexusCloudSiteTagArgs>[]>;
    uuid?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryNexusCloudSiteVersionContextArgs>;
}
