// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HyperflexHealthCheckDefinition extends pulumi.CustomResource {
    /**
     * Get an existing HyperflexHealthCheckDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperflexHealthCheckDefinitionState, opts?: pulumi.CustomResourceOptions): HyperflexHealthCheckDefinition {
        return new HyperflexHealthCheckDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/hyperflexHealthCheckDefinition:HyperflexHealthCheckDefinition';

    /**
     * Returns true if the given object is an instance of HyperflexHealthCheckDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HyperflexHealthCheckDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HyperflexHealthCheckDefinition.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionAncestor[]>;
    /**
     * Category that the health check belongs to.
     */
    public readonly category!: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * Static information detailing the common causes for the health check failure.
     */
    public readonly commonCauses!: pulumi.Output<string | undefined>;
    /**
     * Execution configuration fo the health check script.
     */
    public readonly configuration!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Default version Script info.
     */
    public readonly defaultHealthCheckScriptInfos!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionDefaultHealthCheckScriptInfo[]>;
    /**
     * Description of the health check definition.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    public readonly healthCheckScriptInfos!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionHealthCheckScriptInfo[]>;
    /**
     * Static information detailing the health impact of the health check failure.
     */
    public readonly healthImpact!: pulumi.Output<string | undefined>;
    /**
     * Internal name of the health check definition.
     */
    public readonly internalName!: pulumi.Output<string | undefined>;
    /**
     * Minimum HyperFlex version that the check is supported on. Defaults to version 3.0.1.
     */
    public readonly minimumHyperFlexVersion!: pulumi.Output<string | undefined>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the health check definition.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionPermissionResource[]>;
    /**
     * Static information containing additional reference for the health check.
     */
    public readonly reference!: pulumi.Output<string | undefined>;
    /**
     * Static information detailing the possible remediation actions that can be taken to remedy the health check failure.
     */
    public readonly resolution!: pulumi.Output<string | undefined>;
    /**
     * Execution mode of the health script on the HyperFlex cluster. * `ON_DEMAND` - Execute the health check on-demand. *
     * `SCHEDULED` - Execute the health check on a scheduled interval.
     */
    public readonly scriptExecutionMode!: pulumi.Output<string | undefined>;
    /**
     * Indicates if the script needs to be executed on HyperFlex compute nodes. | Typically, scripts are only executed on the
     * storage Nodes.
     */
    public readonly scriptExecutionOnComputeNodes!: pulumi.Output<boolean | undefined>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Hypervisor type that the Health Check is supported on (All, if it is hypervisor agnostic). * `All` - The Health Check is
     * hypervisor-agnostic. * `ESXi` - The Health Check is supported only on Vmware ESXi hypervisor of any version. * `HyperV`
     * - The Health Check is supported only on Microsoft HyperV hypervisor.
     */
    public readonly supportedHypervisorType!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionTag[]>;
    /**
     * Indicates whether the health check is executed only on the leader node, or on all nodes in the HyperFlex cluster. *
     * `EXECUTE_ON_LEADER_NODE` - Execute the health check script only on the HyperFlex cluster's leader node. *
     * `EXECUTE_ON_ALL_NODES` - Execute health check on all nodes and aggregate the results. *
     * `EXECUTE_ON_ALL_NODES_AND_AGGREGATE` - Execute the health check on all Nodes and perform custom aggregation. *
     * `EXECUTE_ON_CURRENT_NODE` - The HyperFlex health check is executed on the node which receives the request.
     */
    public readonly targetExecutionType!: pulumi.Output<string | undefined>;
    /**
     * Health check script execution timeout.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    public readonly unsupportedHyperFlexVersions!: pulumi.Output<string[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.HyperflexHealthCheckDefinitionVersionContext[]>;

    /**
     * Create a HyperflexHealthCheckDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HyperflexHealthCheckDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HyperflexHealthCheckDefinitionArgs | HyperflexHealthCheckDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HyperflexHealthCheckDefinitionState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["commonCauses"] = state ? state.commonCauses : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["defaultHealthCheckScriptInfos"] = state ? state.defaultHealthCheckScriptInfos : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["healthCheckScriptInfos"] = state ? state.healthCheckScriptInfos : undefined;
            resourceInputs["healthImpact"] = state ? state.healthImpact : undefined;
            resourceInputs["internalName"] = state ? state.internalName : undefined;
            resourceInputs["minimumHyperFlexVersion"] = state ? state.minimumHyperFlexVersion : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["reference"] = state ? state.reference : undefined;
            resourceInputs["resolution"] = state ? state.resolution : undefined;
            resourceInputs["scriptExecutionMode"] = state ? state.scriptExecutionMode : undefined;
            resourceInputs["scriptExecutionOnComputeNodes"] = state ? state.scriptExecutionOnComputeNodes : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["supportedHypervisorType"] = state ? state.supportedHypervisorType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetExecutionType"] = state ? state.targetExecutionType : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["unsupportedHyperFlexVersions"] = state ? state.unsupportedHyperFlexVersions : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as HyperflexHealthCheckDefinitionArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["commonCauses"] = args ? args.commonCauses : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["defaultHealthCheckScriptInfos"] = args ? args.defaultHealthCheckScriptInfos : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["healthCheckScriptInfos"] = args ? args.healthCheckScriptInfos : undefined;
            resourceInputs["healthImpact"] = args ? args.healthImpact : undefined;
            resourceInputs["internalName"] = args ? args.internalName : undefined;
            resourceInputs["minimumHyperFlexVersion"] = args ? args.minimumHyperFlexVersion : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["reference"] = args ? args.reference : undefined;
            resourceInputs["resolution"] = args ? args.resolution : undefined;
            resourceInputs["scriptExecutionMode"] = args ? args.scriptExecutionMode : undefined;
            resourceInputs["scriptExecutionOnComputeNodes"] = args ? args.scriptExecutionOnComputeNodes : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["supportedHypervisorType"] = args ? args.supportedHypervisorType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetExecutionType"] = args ? args.targetExecutionType : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["unsupportedHyperFlexVersions"] = args ? args.unsupportedHyperFlexVersions : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HyperflexHealthCheckDefinition.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HyperflexHealthCheckDefinition resources.
 */
export interface HyperflexHealthCheckDefinitionState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionAncestor>[]>;
    /**
     * Category that the health check belongs to.
     */
    category?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Static information detailing the common causes for the health check failure.
     */
    commonCauses?: pulumi.Input<string>;
    /**
     * Execution configuration fo the health check script.
     */
    configuration?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Default version Script info.
     */
    defaultHealthCheckScriptInfos?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionDefaultHealthCheckScriptInfo>[]>;
    /**
     * Description of the health check definition.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    healthCheckScriptInfos?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionHealthCheckScriptInfo>[]>;
    /**
     * Static information detailing the health impact of the health check failure.
     */
    healthImpact?: pulumi.Input<string>;
    /**
     * Internal name of the health check definition.
     */
    internalName?: pulumi.Input<string>;
    /**
     * Minimum HyperFlex version that the check is supported on. Defaults to version 3.0.1.
     */
    minimumHyperFlexVersion?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the health check definition.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionPermissionResource>[]>;
    /**
     * Static information containing additional reference for the health check.
     */
    reference?: pulumi.Input<string>;
    /**
     * Static information detailing the possible remediation actions that can be taken to remedy the health check failure.
     */
    resolution?: pulumi.Input<string>;
    /**
     * Execution mode of the health script on the HyperFlex cluster. * `ON_DEMAND` - Execute the health check on-demand. *
     * `SCHEDULED` - Execute the health check on a scheduled interval.
     */
    scriptExecutionMode?: pulumi.Input<string>;
    /**
     * Indicates if the script needs to be executed on HyperFlex compute nodes. | Typically, scripts are only executed on the
     * storage Nodes.
     */
    scriptExecutionOnComputeNodes?: pulumi.Input<boolean>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Hypervisor type that the Health Check is supported on (All, if it is hypervisor agnostic). * `All` - The Health Check is
     * hypervisor-agnostic. * `ESXi` - The Health Check is supported only on Vmware ESXi hypervisor of any version. * `HyperV`
     * - The Health Check is supported only on Microsoft HyperV hypervisor.
     */
    supportedHypervisorType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionTag>[]>;
    /**
     * Indicates whether the health check is executed only on the leader node, or on all nodes in the HyperFlex cluster. *
     * `EXECUTE_ON_LEADER_NODE` - Execute the health check script only on the HyperFlex cluster's leader node. *
     * `EXECUTE_ON_ALL_NODES` - Execute health check on all nodes and aggregate the results. *
     * `EXECUTE_ON_ALL_NODES_AND_AGGREGATE` - Execute the health check on all Nodes and perform custom aggregation. *
     * `EXECUTE_ON_CURRENT_NODE` - The HyperFlex health check is executed on the node which receives the request.
     */
    targetExecutionType?: pulumi.Input<string>;
    /**
     * Health check script execution timeout.
     */
    timeout?: pulumi.Input<number>;
    unsupportedHyperFlexVersions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionVersionContext>[]>;
}

/**
 * The set of arguments for constructing a HyperflexHealthCheckDefinition resource.
 */
export interface HyperflexHealthCheckDefinitionArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionAncestor>[]>;
    /**
     * Category that the health check belongs to.
     */
    category?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Static information detailing the common causes for the health check failure.
     */
    commonCauses?: pulumi.Input<string>;
    /**
     * Execution configuration fo the health check script.
     */
    configuration?: pulumi.Input<string>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Default version Script info.
     */
    defaultHealthCheckScriptInfos?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionDefaultHealthCheckScriptInfo>[]>;
    /**
     * Description of the health check definition.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    healthCheckScriptInfos?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionHealthCheckScriptInfo>[]>;
    /**
     * Static information detailing the health impact of the health check failure.
     */
    healthImpact?: pulumi.Input<string>;
    /**
     * Internal name of the health check definition.
     */
    internalName?: pulumi.Input<string>;
    /**
     * Minimum HyperFlex version that the check is supported on. Defaults to version 3.0.1.
     */
    minimumHyperFlexVersion?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the health check definition.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionPermissionResource>[]>;
    /**
     * Static information containing additional reference for the health check.
     */
    reference?: pulumi.Input<string>;
    /**
     * Static information detailing the possible remediation actions that can be taken to remedy the health check failure.
     */
    resolution?: pulumi.Input<string>;
    /**
     * Execution mode of the health script on the HyperFlex cluster. * `ON_DEMAND` - Execute the health check on-demand. *
     * `SCHEDULED` - Execute the health check on a scheduled interval.
     */
    scriptExecutionMode?: pulumi.Input<string>;
    /**
     * Indicates if the script needs to be executed on HyperFlex compute nodes. | Typically, scripts are only executed on the
     * storage Nodes.
     */
    scriptExecutionOnComputeNodes?: pulumi.Input<boolean>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Hypervisor type that the Health Check is supported on (All, if it is hypervisor agnostic). * `All` - The Health Check is
     * hypervisor-agnostic. * `ESXi` - The Health Check is supported only on Vmware ESXi hypervisor of any version. * `HyperV`
     * - The Health Check is supported only on Microsoft HyperV hypervisor.
     */
    supportedHypervisorType?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionTag>[]>;
    /**
     * Indicates whether the health check is executed only on the leader node, or on all nodes in the HyperFlex cluster. *
     * `EXECUTE_ON_LEADER_NODE` - Execute the health check script only on the HyperFlex cluster's leader node. *
     * `EXECUTE_ON_ALL_NODES` - Execute health check on all nodes and aggregate the results. *
     * `EXECUTE_ON_ALL_NODES_AND_AGGREGATE` - Execute the health check on all Nodes and perform custom aggregation. *
     * `EXECUTE_ON_CURRENT_NODE` - The HyperFlex health check is executed on the node which receives the request.
     */
    targetExecutionType?: pulumi.Input<string>;
    /**
     * Health check script execution timeout.
     */
    timeout?: pulumi.Input<number>;
    unsupportedHyperFlexVersions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexHealthCheckDefinitionVersionContext>[]>;
}
