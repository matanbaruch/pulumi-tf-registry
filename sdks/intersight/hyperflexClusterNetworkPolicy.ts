// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HyperflexClusterNetworkPolicy extends pulumi.CustomResource {
    /**
     * Get an existing HyperflexClusterNetworkPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperflexClusterNetworkPolicyState, opts?: pulumi.CustomResourceOptions): HyperflexClusterNetworkPolicy {
        return new HyperflexClusterNetworkPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/hyperflexClusterNetworkPolicy:HyperflexClusterNetworkPolicy';

    /**
     * Returns true if the given object is an instance of HyperflexClusterNetworkPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HyperflexClusterNetworkPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HyperflexClusterNetworkPolicy.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyAncestor[]>;
    /**
     * The mode configured on the CIMC management interface. * `OutOfBand` - The server uses out-of-band management, i.e.
     * management traffic traverses through the management interfaces on the UCS Fabric Interconnects. * `InBand` - The server
     * uses in-band management, i.e. management traffic traverses through the data uplink ports on the UCS Fabric
     * Interconnects.
     */
    public readonly cimcManagementMode!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to hyperflexClusterProfile resources.
     */
    public readonly clusterProfiles!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyClusterProfile[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the policy.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * Enable or disable Jumbo Frames (MTU=9000). Jumbo Frames are used by Storage Network, VM Migration Network.
     */
    public readonly jumboFrame!: pulumi.Output<boolean | undefined>;
    /**
     * The Out-of-band KVM IP range. Configures the service profiles to use IP addresses within this range for setting the KVM
     * IP of a server.
     */
    public readonly kvmIpRanges!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyKvmIpRange[]>;
    /**
     * The MAC address prefix range for configuring vNICs. Configures the service profiles to use MAC address prefixes within
     * this range for setting the MAC address of server vNICs.
     */
    public readonly macPrefixRanges!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyMacPrefixRange[]>;
    /**
     * The VLAN for the management network.
     */
    public readonly mgmtVlans!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyMgmtVlan[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * Name of the concrete policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyPermissionResource[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyTag[]>;
    /**
     * Link speed of the server adapter port to the upstream switch. When the policy is attached to a cluster profile with EDGE
     * management platform, the uplink speed can be '1G' or '10G+'. Use '10G+' for link speeds of 10G or above. When the policy
     * is attached to a cluster profile with Fabric Interconnect management platform, the uplink speed can be 'default' only. *
     * `default` - Current default value set on the hardware platform. * `1G` - A link speed of 1 gigabit per second. * `10G` -
     * A link speed of 10 gigabits per second or above.
     */
    public readonly uplinkSpeed!: pulumi.Output<string | undefined>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyVersionContext[]>;
    /**
     * The VM migration VLAN. This VLAN is used for transfering VMs from one host to another during operations such a cluster
     * upgrade. For HyperFlex Application Platform clusters, this VLAN is also used for hypervisor control traffic such as node
     * to node communication, pod-to-pod communication, etc.
     */
    public readonly vmMigrationVlans!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyVmMigrationVlan[]>;
    public readonly vmNetworkVlans!: pulumi.Output<outputs.HyperflexClusterNetworkPolicyVmNetworkVlan[]>;

    /**
     * Create a HyperflexClusterNetworkPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HyperflexClusterNetworkPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HyperflexClusterNetworkPolicyArgs | HyperflexClusterNetworkPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HyperflexClusterNetworkPolicyState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["cimcManagementMode"] = state ? state.cimcManagementMode : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clusterProfiles"] = state ? state.clusterProfiles : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["jumboFrame"] = state ? state.jumboFrame : undefined;
            resourceInputs["kvmIpRanges"] = state ? state.kvmIpRanges : undefined;
            resourceInputs["macPrefixRanges"] = state ? state.macPrefixRanges : undefined;
            resourceInputs["mgmtVlans"] = state ? state.mgmtVlans : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["uplinkSpeed"] = state ? state.uplinkSpeed : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["vmMigrationVlans"] = state ? state.vmMigrationVlans : undefined;
            resourceInputs["vmNetworkVlans"] = state ? state.vmNetworkVlans : undefined;
        } else {
            const args = argsOrState as HyperflexClusterNetworkPolicyArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["cimcManagementMode"] = args ? args.cimcManagementMode : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clusterProfiles"] = args ? args.clusterProfiles : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["jumboFrame"] = args ? args.jumboFrame : undefined;
            resourceInputs["kvmIpRanges"] = args ? args.kvmIpRanges : undefined;
            resourceInputs["macPrefixRanges"] = args ? args.macPrefixRanges : undefined;
            resourceInputs["mgmtVlans"] = args ? args.mgmtVlans : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["uplinkSpeed"] = args ? args.uplinkSpeed : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["vmMigrationVlans"] = args ? args.vmMigrationVlans : undefined;
            resourceInputs["vmNetworkVlans"] = args ? args.vmNetworkVlans : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HyperflexClusterNetworkPolicy.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HyperflexClusterNetworkPolicy resources.
 */
export interface HyperflexClusterNetworkPolicyState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyAncestor>[]>;
    /**
     * The mode configured on the CIMC management interface. * `OutOfBand` - The server uses out-of-band management, i.e.
     * management traffic traverses through the management interfaces on the UCS Fabric Interconnects. * `InBand` - The server
     * uses in-band management, i.e. management traffic traverses through the data uplink ports on the UCS Fabric
     * Interconnects.
     */
    cimcManagementMode?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to hyperflexClusterProfile resources.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyClusterProfile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Enable or disable Jumbo Frames (MTU=9000). Jumbo Frames are used by Storage Network, VM Migration Network.
     */
    jumboFrame?: pulumi.Input<boolean>;
    /**
     * The Out-of-band KVM IP range. Configures the service profiles to use IP addresses within this range for setting the KVM
     * IP of a server.
     */
    kvmIpRanges?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyKvmIpRange>[]>;
    /**
     * The MAC address prefix range for configuring vNICs. Configures the service profiles to use MAC address prefixes within
     * this range for setting the MAC address of server vNICs.
     */
    macPrefixRanges?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyMacPrefixRange>[]>;
    /**
     * The VLAN for the management network.
     */
    mgmtVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyMgmtVlan>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyTag>[]>;
    /**
     * Link speed of the server adapter port to the upstream switch. When the policy is attached to a cluster profile with EDGE
     * management platform, the uplink speed can be '1G' or '10G+'. Use '10G+' for link speeds of 10G or above. When the policy
     * is attached to a cluster profile with Fabric Interconnect management platform, the uplink speed can be 'default' only. *
     * `default` - Current default value set on the hardware platform. * `1G` - A link speed of 1 gigabit per second. * `10G` -
     * A link speed of 10 gigabits per second or above.
     */
    uplinkSpeed?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyVersionContext>[]>;
    /**
     * The VM migration VLAN. This VLAN is used for transfering VMs from one host to another during operations such a cluster
     * upgrade. For HyperFlex Application Platform clusters, this VLAN is also used for hypervisor control traffic such as node
     * to node communication, pod-to-pod communication, etc.
     */
    vmMigrationVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyVmMigrationVlan>[]>;
    vmNetworkVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyVmNetworkVlan>[]>;
}

/**
 * The set of arguments for constructing a HyperflexClusterNetworkPolicy resource.
 */
export interface HyperflexClusterNetworkPolicyArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyAncestor>[]>;
    /**
     * The mode configured on the CIMC management interface. * `OutOfBand` - The server uses out-of-band management, i.e.
     * management traffic traverses through the management interfaces on the UCS Fabric Interconnects. * `InBand` - The server
     * uses in-band management, i.e. management traffic traverses through the data uplink ports on the UCS Fabric
     * Interconnects.
     */
    cimcManagementMode?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * An array of relationships to hyperflexClusterProfile resources.
     */
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyClusterProfile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * Enable or disable Jumbo Frames (MTU=9000). Jumbo Frames are used by Storage Network, VM Migration Network.
     */
    jumboFrame?: pulumi.Input<boolean>;
    /**
     * The Out-of-band KVM IP range. Configures the service profiles to use IP addresses within this range for setting the KVM
     * IP of a server.
     */
    kvmIpRanges?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyKvmIpRange>[]>;
    /**
     * The MAC address prefix range for configuring vNICs. Configures the service profiles to use MAC address prefixes within
     * this range for setting the MAC address of server vNICs.
     */
    macPrefixRanges?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyMacPrefixRange>[]>;
    /**
     * The VLAN for the management network.
     */
    mgmtVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyMgmtVlan>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * Name of the concrete policy.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyPermissionResource>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyTag>[]>;
    /**
     * Link speed of the server adapter port to the upstream switch. When the policy is attached to a cluster profile with EDGE
     * management platform, the uplink speed can be '1G' or '10G+'. Use '10G+' for link speeds of 10G or above. When the policy
     * is attached to a cluster profile with Fabric Interconnect management platform, the uplink speed can be 'default' only. *
     * `default` - Current default value set on the hardware platform. * `1G` - A link speed of 1 gigabit per second. * `10G` -
     * A link speed of 10 gigabits per second or above.
     */
    uplinkSpeed?: pulumi.Input<string>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyVersionContext>[]>;
    /**
     * The VM migration VLAN. This VLAN is used for transfering VMs from one host to another during operations such a cluster
     * upgrade. For HyperFlex Application Platform clusters, this VLAN is also used for hypervisor control traffic such as node
     * to node communication, pod-to-pod communication, etc.
     */
    vmMigrationVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyVmMigrationVlan>[]>;
    vmNetworkVlans?: pulumi.Input<pulumi.Input<inputs.HyperflexClusterNetworkPolicyVmNetworkVlan>[]>;
}
