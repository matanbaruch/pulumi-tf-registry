// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getApplianceExternalSyslogSetting(args?: GetApplianceExternalSyslogSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetApplianceExternalSyslogSettingResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getApplianceExternalSyslogSetting:getApplianceExternalSyslogSetting", {
        "account": args.account,
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "enabled": args.enabled,
        "exportAlarms": args.exportAlarms,
        "exportAudit": args.exportAudit,
        "exportNginx": args.exportNginx,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "port": args.port,
        "protocol": args.protocol,
        "server": args.server,
        "severity": args.severity,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getApplianceExternalSyslogSetting.
 */
export interface GetApplianceExternalSyslogSettingArgs {
    account?: inputs.GetApplianceExternalSyslogSettingAccount;
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetApplianceExternalSyslogSettingAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    enabled?: boolean;
    exportAlarms?: boolean;
    exportAudit?: boolean;
    exportNginx?: boolean;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetApplianceExternalSyslogSettingParent;
    permissionResources?: inputs.GetApplianceExternalSyslogSettingPermissionResource[];
    port?: number;
    protocol?: string;
    server?: string;
    severity?: string;
    sharedScope?: string;
    tags?: inputs.GetApplianceExternalSyslogSettingTag[];
    versionContext?: inputs.GetApplianceExternalSyslogSettingVersionContext;
}

/**
 * A collection of values returned by getApplianceExternalSyslogSetting.
 */
export interface GetApplianceExternalSyslogSettingResult {
    readonly account?: outputs.GetApplianceExternalSyslogSettingAccount;
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetApplianceExternalSyslogSettingAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly enabled?: boolean;
    readonly exportAlarms?: boolean;
    readonly exportAudit?: boolean;
    readonly exportNginx?: boolean;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetApplianceExternalSyslogSettingParent;
    readonly permissionResources?: outputs.GetApplianceExternalSyslogSettingPermissionResource[];
    readonly port?: number;
    readonly protocol?: string;
    readonly results: outputs.GetApplianceExternalSyslogSettingResult[];
    readonly server?: string;
    readonly severity?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetApplianceExternalSyslogSettingTag[];
    readonly versionContext?: outputs.GetApplianceExternalSyslogSettingVersionContext;
}
export function getApplianceExternalSyslogSettingOutput(args?: GetApplianceExternalSyslogSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplianceExternalSyslogSettingResult> {
    return pulumi.output(args).apply((a: any) => getApplianceExternalSyslogSetting(a, opts))
}

/**
 * A collection of arguments for invoking getApplianceExternalSyslogSetting.
 */
export interface GetApplianceExternalSyslogSettingOutputArgs {
    account?: pulumi.Input<inputs.GetApplianceExternalSyslogSettingAccountArgs>;
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetApplianceExternalSyslogSettingAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    exportAlarms?: pulumi.Input<boolean>;
    exportAudit?: pulumi.Input<boolean>;
    exportNginx?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetApplianceExternalSyslogSettingParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetApplianceExternalSyslogSettingPermissionResourceArgs>[]>;
    port?: pulumi.Input<number>;
    protocol?: pulumi.Input<string>;
    server?: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetApplianceExternalSyslogSettingTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetApplianceExternalSyslogSettingVersionContextArgs>;
}
