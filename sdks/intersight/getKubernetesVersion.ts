// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getKubernetesVersion(args?: GetKubernetesVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesVersionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getKubernetesVersion:getKubernetesVersion", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "bootIso": args.bootIso,
        "catalog": args.catalog,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "essentialAddons": args.essentialAddons,
        "helmOperatorVersion": args.helmOperatorVersion,
        "id": args.id,
        "iksUtilityContainer": args.iksUtilityContainer,
        "kubernetesVersion": args.kubernetesVersion,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "ovaImageTemplate": args.ovaImageTemplate,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "qcow2NodeTemplate": args.qcow2NodeTemplate,
        "qcow2VirtualMachineTemplate": args.qcow2VirtualMachineTemplate,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesVersion.
 */
export interface GetKubernetesVersionArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetKubernetesVersionAncestor[];
    bootIso?: inputs.GetKubernetesVersionBootIso;
    catalog?: inputs.GetKubernetesVersionCatalog;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    essentialAddons?: inputs.GetKubernetesVersionEssentialAddon[];
    helmOperatorVersion?: string;
    id?: string;
    iksUtilityContainer?: string;
    kubernetesVersion?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    ovaImageTemplate?: inputs.GetKubernetesVersionOvaImageTemplate;
    owners?: string[];
    parent?: inputs.GetKubernetesVersionParent;
    permissionResources?: inputs.GetKubernetesVersionPermissionResource[];
    qcow2NodeTemplate?: inputs.GetKubernetesVersionQcow2NodeTemplate;
    qcow2VirtualMachineTemplate?: inputs.GetKubernetesVersionQcow2VirtualMachineTemplate;
    sharedScope?: string;
    tags?: inputs.GetKubernetesVersionTag[];
    versionContext?: inputs.GetKubernetesVersionVersionContext;
}

/**
 * A collection of values returned by getKubernetesVersion.
 */
export interface GetKubernetesVersionResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetKubernetesVersionAncestor[];
    readonly bootIso?: outputs.GetKubernetesVersionBootIso;
    readonly catalog?: outputs.GetKubernetesVersionCatalog;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly essentialAddons?: outputs.GetKubernetesVersionEssentialAddon[];
    readonly helmOperatorVersion?: string;
    readonly id: string;
    readonly iksUtilityContainer?: string;
    readonly kubernetesVersion?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly ovaImageTemplate?: outputs.GetKubernetesVersionOvaImageTemplate;
    readonly owners?: string[];
    readonly parent?: outputs.GetKubernetesVersionParent;
    readonly permissionResources?: outputs.GetKubernetesVersionPermissionResource[];
    readonly qcow2NodeTemplate?: outputs.GetKubernetesVersionQcow2NodeTemplate;
    readonly qcow2VirtualMachineTemplate?: outputs.GetKubernetesVersionQcow2VirtualMachineTemplate;
    readonly results: outputs.GetKubernetesVersionResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetKubernetesVersionTag[];
    readonly versionContext?: outputs.GetKubernetesVersionVersionContext;
}
export function getKubernetesVersionOutput(args?: GetKubernetesVersionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesVersionResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesVersion(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesVersion.
 */
export interface GetKubernetesVersionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVersionAncestorArgs>[]>;
    bootIso?: pulumi.Input<inputs.GetKubernetesVersionBootIsoArgs>;
    catalog?: pulumi.Input<inputs.GetKubernetesVersionCatalogArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    essentialAddons?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVersionEssentialAddonArgs>[]>;
    helmOperatorVersion?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    iksUtilityContainer?: pulumi.Input<string>;
    kubernetesVersion?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    ovaImageTemplate?: pulumi.Input<inputs.GetKubernetesVersionOvaImageTemplateArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetKubernetesVersionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVersionPermissionResourceArgs>[]>;
    qcow2NodeTemplate?: pulumi.Input<inputs.GetKubernetesVersionQcow2NodeTemplateArgs>;
    qcow2VirtualMachineTemplate?: pulumi.Input<inputs.GetKubernetesVersionQcow2VirtualMachineTemplateArgs>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetKubernetesVersionTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetKubernetesVersionVersionContextArgs>;
}
