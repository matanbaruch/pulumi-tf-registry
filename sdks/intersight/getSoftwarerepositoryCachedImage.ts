// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSoftwarerepositoryCachedImage(args?: GetSoftwarerepositoryCachedImageArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwarerepositoryCachedImageResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getSoftwarerepositoryCachedImage:getSoftwarerepositoryCachedImage", {
        "accountMoid": args.accountMoid,
        "action": args.action,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "cacheState": args.cacheState,
        "cachedTime": args.cachedTime,
        "checksum": args.checksum,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "downloadError": args.downloadError,
        "downloadProgress": args.downloadProgress,
        "downloadRetries": args.downloadRetries,
        "file": args.file,
        "id": args.id,
        "lastAccessTime": args.lastAccessTime,
        "md5sum": args.md5sum,
        "modTime": args.modTime,
        "moid": args.moid,
        "networkElement": args.networkElement,
        "objectType": args.objectType,
        "originalSha512sum": args.originalSha512sum,
        "owners": args.owners,
        "parent": args.parent,
        "path": args.path,
        "permissionResources": args.permissionResources,
        "registeredWorkflows": args.registeredWorkflows,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "usedCount": args.usedCount,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSoftwarerepositoryCachedImage.
 */
export interface GetSoftwarerepositoryCachedImageArgs {
    accountMoid?: string;
    action?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetSoftwarerepositoryCachedImageAncestor[];
    cacheState?: string;
    cachedTime?: string;
    checksum?: inputs.GetSoftwarerepositoryCachedImageChecksum;
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    downloadError?: string;
    downloadProgress?: number;
    downloadRetries?: number;
    file?: inputs.GetSoftwarerepositoryCachedImageFile;
    id?: string;
    lastAccessTime?: string;
    md5sum?: string;
    modTime?: string;
    moid?: string;
    networkElement?: inputs.GetSoftwarerepositoryCachedImageNetworkElement;
    objectType?: string;
    originalSha512sum?: string;
    owners?: string[];
    parent?: inputs.GetSoftwarerepositoryCachedImageParent;
    path?: string;
    permissionResources?: inputs.GetSoftwarerepositoryCachedImagePermissionResource[];
    registeredWorkflows?: string[];
    sharedScope?: string;
    tags?: inputs.GetSoftwarerepositoryCachedImageTag[];
    usedCount?: number;
    versionContext?: inputs.GetSoftwarerepositoryCachedImageVersionContext;
}

/**
 * A collection of values returned by getSoftwarerepositoryCachedImage.
 */
export interface GetSoftwarerepositoryCachedImageResult {
    readonly accountMoid?: string;
    readonly action?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetSoftwarerepositoryCachedImageAncestor[];
    readonly cacheState?: string;
    readonly cachedTime?: string;
    readonly checksum?: outputs.GetSoftwarerepositoryCachedImageChecksum;
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly downloadError?: string;
    readonly downloadProgress?: number;
    readonly downloadRetries?: number;
    readonly file?: outputs.GetSoftwarerepositoryCachedImageFile;
    readonly id: string;
    readonly lastAccessTime?: string;
    readonly md5sum?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly networkElement?: outputs.GetSoftwarerepositoryCachedImageNetworkElement;
    readonly objectType?: string;
    readonly originalSha512sum?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetSoftwarerepositoryCachedImageParent;
    readonly path?: string;
    readonly permissionResources?: outputs.GetSoftwarerepositoryCachedImagePermissionResource[];
    readonly registeredWorkflows?: string[];
    readonly results: outputs.GetSoftwarerepositoryCachedImageResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetSoftwarerepositoryCachedImageTag[];
    readonly usedCount?: number;
    readonly versionContext?: outputs.GetSoftwarerepositoryCachedImageVersionContext;
}
export function getSoftwarerepositoryCachedImageOutput(args?: GetSoftwarerepositoryCachedImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwarerepositoryCachedImageResult> {
    return pulumi.output(args).apply((a: any) => getSoftwarerepositoryCachedImage(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwarerepositoryCachedImage.
 */
export interface GetSoftwarerepositoryCachedImageOutputArgs {
    accountMoid?: pulumi.Input<string>;
    action?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetSoftwarerepositoryCachedImageAncestorArgs>[]>;
    cacheState?: pulumi.Input<string>;
    cachedTime?: pulumi.Input<string>;
    checksum?: pulumi.Input<inputs.GetSoftwarerepositoryCachedImageChecksumArgs>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    downloadError?: pulumi.Input<string>;
    downloadProgress?: pulumi.Input<number>;
    downloadRetries?: pulumi.Input<number>;
    file?: pulumi.Input<inputs.GetSoftwarerepositoryCachedImageFileArgs>;
    id?: pulumi.Input<string>;
    lastAccessTime?: pulumi.Input<string>;
    md5sum?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    networkElement?: pulumi.Input<inputs.GetSoftwarerepositoryCachedImageNetworkElementArgs>;
    objectType?: pulumi.Input<string>;
    originalSha512sum?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetSoftwarerepositoryCachedImageParentArgs>;
    path?: pulumi.Input<string>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetSoftwarerepositoryCachedImagePermissionResourceArgs>[]>;
    registeredWorkflows?: pulumi.Input<pulumi.Input<string>[]>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetSoftwarerepositoryCachedImageTagArgs>[]>;
    usedCount?: pulumi.Input<number>;
    versionContext?: pulumi.Input<inputs.GetSoftwarerepositoryCachedImageVersionContextArgs>;
}
