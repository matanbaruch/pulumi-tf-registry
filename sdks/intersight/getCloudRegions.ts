// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCloudRegions(args?: GetCloudRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudRegionsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCloudRegions:getCloudRegions", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "alternateNames": args.alternateNames,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "defaultZone": args.defaultZone,
        "domainGroupMoid": args.domainGroupMoid,
        "group": args.group,
        "id": args.id,
        "isActive": args.isActive,
        "isBillingOnly": args.isBillingOnly,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platformType": args.platformType,
        "regionEndPoint": args.regionEndPoint,
        "regionId": args.regionId,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "target": args.target,
        "versionContext": args.versionContext,
        "zones": args.zones,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCloudRegions.
 */
export interface GetCloudRegionsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    alternateNames?: string[];
    ancestors?: inputs.GetCloudRegionsAncestor[];
    classId?: string;
    createTime?: string;
    defaultZone?: string;
    domainGroupMoid?: string;
    group?: string;
    id?: string;
    isActive?: boolean;
    isBillingOnly?: boolean;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCloudRegionsParent;
    permissionResources?: inputs.GetCloudRegionsPermissionResource[];
    platformType?: string;
    regionEndPoint?: string;
    regionId?: string;
    sharedScope?: string;
    tags?: inputs.GetCloudRegionsTag[];
    target?: inputs.GetCloudRegionsTarget;
    versionContext?: inputs.GetCloudRegionsVersionContext;
    zones?: string[];
}

/**
 * A collection of values returned by getCloudRegions.
 */
export interface GetCloudRegionsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly alternateNames?: string[];
    readonly ancestors?: outputs.GetCloudRegionsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly defaultZone?: string;
    readonly domainGroupMoid?: string;
    readonly group?: string;
    readonly id: string;
    readonly isActive?: boolean;
    readonly isBillingOnly?: boolean;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCloudRegionsParent;
    readonly permissionResources?: outputs.GetCloudRegionsPermissionResource[];
    readonly platformType?: string;
    readonly regionEndPoint?: string;
    readonly regionId?: string;
    readonly results: outputs.GetCloudRegionsResult[];
    readonly sharedScope?: string;
    readonly tags?: outputs.GetCloudRegionsTag[];
    readonly target?: outputs.GetCloudRegionsTarget;
    readonly versionContext?: outputs.GetCloudRegionsVersionContext;
    readonly zones?: string[];
}
export function getCloudRegionsOutput(args?: GetCloudRegionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudRegionsResult> {
    return pulumi.output(args).apply((a: any) => getCloudRegions(a, opts))
}

/**
 * A collection of arguments for invoking getCloudRegions.
 */
export interface GetCloudRegionsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    alternateNames?: pulumi.Input<pulumi.Input<string>[]>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCloudRegionsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    defaultZone?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    group?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isActive?: pulumi.Input<boolean>;
    isBillingOnly?: pulumi.Input<boolean>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCloudRegionsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCloudRegionsPermissionResourceArgs>[]>;
    platformType?: pulumi.Input<string>;
    regionEndPoint?: pulumi.Input<string>;
    regionId?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCloudRegionsTagArgs>[]>;
    target?: pulumi.Input<inputs.GetCloudRegionsTargetArgs>;
    versionContext?: pulumi.Input<inputs.GetCloudRegionsVersionContextArgs>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
