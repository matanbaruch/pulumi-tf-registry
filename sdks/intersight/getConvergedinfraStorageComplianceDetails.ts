// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConvergedinfraStorageComplianceDetails(args?: GetConvergedinfraStorageComplianceDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetConvergedinfraStorageComplianceDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getConvergedinfraStorageComplianceDetails:getConvergedinfraStorageComplianceDetails", {
        "accountMoid": args.accountMoid,
        "adapterCompliance": args.adapterCompliance,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "os": args.os,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "podCompliance": args.podCompliance,
        "protocol": args.protocol,
        "reason": args.reason,
        "refDevice": args.refDevice,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "storageArray": args.storageArray,
        "switchCompliance": args.switchCompliance,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConvergedinfraStorageComplianceDetails.
 */
export interface GetConvergedinfraStorageComplianceDetailsArgs {
    accountMoid?: string;
    adapterCompliance?: inputs.GetConvergedinfraStorageComplianceDetailsAdapterCompliance;
    additionalProperties?: string;
    ancestors?: inputs.GetConvergedinfraStorageComplianceDetailsAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    os?: string;
    owners?: string[];
    parent?: inputs.GetConvergedinfraStorageComplianceDetailsParent;
    permissionResources?: inputs.GetConvergedinfraStorageComplianceDetailsPermissionResource[];
    podCompliance?: inputs.GetConvergedinfraStorageComplianceDetailsPodCompliance;
    protocol?: string;
    reason?: string;
    refDevice?: string;
    sharedScope?: string;
    status?: string;
    storageArray?: inputs.GetConvergedinfraStorageComplianceDetailsStorageArray;
    switchCompliance?: inputs.GetConvergedinfraStorageComplianceDetailsSwitchCompliance;
    tags?: inputs.GetConvergedinfraStorageComplianceDetailsTag[];
    versionContext?: inputs.GetConvergedinfraStorageComplianceDetailsVersionContext;
}

/**
 * A collection of values returned by getConvergedinfraStorageComplianceDetails.
 */
export interface GetConvergedinfraStorageComplianceDetailsResult {
    readonly accountMoid?: string;
    readonly adapterCompliance?: outputs.GetConvergedinfraStorageComplianceDetailsAdapterCompliance;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetConvergedinfraStorageComplianceDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly os?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetConvergedinfraStorageComplianceDetailsParent;
    readonly permissionResources?: outputs.GetConvergedinfraStorageComplianceDetailsPermissionResource[];
    readonly podCompliance?: outputs.GetConvergedinfraStorageComplianceDetailsPodCompliance;
    readonly protocol?: string;
    readonly reason?: string;
    readonly refDevice?: string;
    readonly results: outputs.GetConvergedinfraStorageComplianceDetailsResult[];
    readonly sharedScope?: string;
    readonly status?: string;
    readonly storageArray?: outputs.GetConvergedinfraStorageComplianceDetailsStorageArray;
    readonly switchCompliance?: outputs.GetConvergedinfraStorageComplianceDetailsSwitchCompliance;
    readonly tags?: outputs.GetConvergedinfraStorageComplianceDetailsTag[];
    readonly versionContext?: outputs.GetConvergedinfraStorageComplianceDetailsVersionContext;
}
export function getConvergedinfraStorageComplianceDetailsOutput(args?: GetConvergedinfraStorageComplianceDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConvergedinfraStorageComplianceDetailsResult> {
    return pulumi.output(args).apply((a: any) => getConvergedinfraStorageComplianceDetails(a, opts))
}

/**
 * A collection of arguments for invoking getConvergedinfraStorageComplianceDetails.
 */
export interface GetConvergedinfraStorageComplianceDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    adapterCompliance?: pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsAdapterComplianceArgs>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsPermissionResourceArgs>[]>;
    podCompliance?: pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsPodComplianceArgs>;
    protocol?: pulumi.Input<string>;
    reason?: pulumi.Input<string>;
    refDevice?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    storageArray?: pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsStorageArrayArgs>;
    switchCompliance?: pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsSwitchComplianceArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetConvergedinfraStorageComplianceDetailsVersionContextArgs>;
}
