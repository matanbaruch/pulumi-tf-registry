// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OsInstall extends pulumi.CustomResource {
    /**
     * Get an existing OsInstall resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OsInstallState, opts?: pulumi.CustomResourceOptions): OsInstall {
        return new OsInstall(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/osInstall:OsInstall';

    /**
     * Returns true if the given object is an instance of OsInstall.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OsInstall {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OsInstall.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalParameters!: pulumi.Output<outputs.OsInstallAdditionalParameter[]>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.OsInstallAncestor[]>;
    /**
     * Answers provided by user for the unattended OS installation.
     */
    public readonly answers!: pulumi.Output<outputs.OsInstallAnswer[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * A reference to a osConfigurationFile resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly configurationFiles!: pulumi.Output<outputs.OsInstallConfigurationFile[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * User provided description about the OS install configuration.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The failure message of the API.
     */
    public readonly errorMsg!: pulumi.Output<string>;
    /**
     * A reference to a softwarerepositoryOperatingSystemFile resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    public readonly images!: pulumi.Output<outputs.OsInstallImage[]>;
    /**
     * The install method to be used for OS installation - vMedia, iPXE. Only vMedia is supported as of now. * `vMedia` - OS
     * image is mounted as vMedia in target server for OS installation.
     */
    public readonly installMethod!: pulumi.Output<string | undefined>;
    /**
     * Install Target on which Operating system is installed.
     */
    public readonly installTargets!: pulumi.Output<outputs.OsInstallInstallTarget[]>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The name of the OS install configuration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * Denotes API operating status as pending, in_progress, completed_ok, completed_error based on the execution status. *
     * `Pending` - The initial value of the OperStatus. * `InProgress` - The OperStatus value will be InProgress during
     * execution. * `CompletedOk` - The API is successful with operation then OperStatus will be marked as CompletedOk. *
     * `CompletedError` - The API is failed with operation then OperStatus will be marked as CompletedError. *
     * `CompletedWarning` - The API is completed with some warning then OperStatus will be CompletedWarning.
     */
    public readonly operState!: pulumi.Output<string>;
    /**
     * Parameters specific to selected OS.
     */
    public readonly operatingSystemParameters!: pulumi.Output<outputs.OsInstallOperatingSystemParameter[]>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.OsInstallOrganization[]>;
    /**
     * A reference to a firmwareServerConfigurationUtilityDistributable resource. When the $expand query parameter is
     * specified, the referenced resource is returned inline.
     */
    public readonly osduImages!: pulumi.Output<outputs.OsInstallOsduImage[]>;
    /**
     * ESXi Secure Boot installation is currently not supported. As a workaround, Secure Boot will be disabled before
     * installation and restored after installation is complete. Enable to Override Secure Boot Configuration.
     */
    public readonly overrideSecureBoot!: pulumi.Output<boolean | undefined>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.OsInstallParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.OsInstallPermissionResource[]>;
    /**
     * A reference to a computePhysical resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly servers!: pulumi.Output<outputs.OsInstallServer[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.OsInstallTag[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.OsInstallVersionContext[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    public readonly waitForCompletion!: pulumi.Output<boolean | undefined>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    public readonly workflowInfos!: pulumi.Output<outputs.OsInstallWorkflowInfo[]>;

    /**
     * Create a OsInstall resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OsInstallArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OsInstallArgs | OsInstallState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OsInstallState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalParameters"] = state ? state.additionalParameters : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["answers"] = state ? state.answers : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["configurationFiles"] = state ? state.configurationFiles : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["errorMsg"] = state ? state.errorMsg : undefined;
            resourceInputs["images"] = state ? state.images : undefined;
            resourceInputs["installMethod"] = state ? state.installMethod : undefined;
            resourceInputs["installTargets"] = state ? state.installTargets : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["operState"] = state ? state.operState : undefined;
            resourceInputs["operatingSystemParameters"] = state ? state.operatingSystemParameters : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["osduImages"] = state ? state.osduImages : undefined;
            resourceInputs["overrideSecureBoot"] = state ? state.overrideSecureBoot : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = state ? state.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = state ? state.workflowInfos : undefined;
        } else {
            const args = argsOrState as OsInstallArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalParameters"] = args ? args.additionalParameters : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["answers"] = args ? args.answers : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["configurationFiles"] = args ? args.configurationFiles : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["errorMsg"] = args ? args.errorMsg : undefined;
            resourceInputs["images"] = args ? args.images : undefined;
            resourceInputs["installMethod"] = args ? args.installMethod : undefined;
            resourceInputs["installTargets"] = args ? args.installTargets : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["operState"] = args ? args.operState : undefined;
            resourceInputs["operatingSystemParameters"] = args ? args.operatingSystemParameters : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["osduImages"] = args ? args.osduImages : undefined;
            resourceInputs["overrideSecureBoot"] = args ? args.overrideSecureBoot : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
            resourceInputs["waitForCompletion"] = args ? args.waitForCompletion : undefined;
            resourceInputs["workflowInfos"] = args ? args.workflowInfos : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OsInstall.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering OsInstall resources.
 */
export interface OsInstallState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalParameters?: pulumi.Input<pulumi.Input<inputs.OsInstallAdditionalParameter>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.OsInstallAncestor>[]>;
    /**
     * Answers provided by user for the unattended OS installation.
     */
    answers?: pulumi.Input<pulumi.Input<inputs.OsInstallAnswer>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a osConfigurationFile resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    configurationFiles?: pulumi.Input<pulumi.Input<inputs.OsInstallConfigurationFile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * User provided description about the OS install configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The failure message of the API.
     */
    errorMsg?: pulumi.Input<string>;
    /**
     * A reference to a softwarerepositoryOperatingSystemFile resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    images?: pulumi.Input<pulumi.Input<inputs.OsInstallImage>[]>;
    /**
     * The install method to be used for OS installation - vMedia, iPXE. Only vMedia is supported as of now. * `vMedia` - OS
     * image is mounted as vMedia in target server for OS installation.
     */
    installMethod?: pulumi.Input<string>;
    /**
     * Install Target on which Operating system is installed.
     */
    installTargets?: pulumi.Input<pulumi.Input<inputs.OsInstallInstallTarget>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the OS install configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Denotes API operating status as pending, in_progress, completed_ok, completed_error based on the execution status. *
     * `Pending` - The initial value of the OperStatus. * `InProgress` - The OperStatus value will be InProgress during
     * execution. * `CompletedOk` - The API is successful with operation then OperStatus will be marked as CompletedOk. *
     * `CompletedError` - The API is failed with operation then OperStatus will be marked as CompletedError. *
     * `CompletedWarning` - The API is completed with some warning then OperStatus will be CompletedWarning.
     */
    operState?: pulumi.Input<string>;
    /**
     * Parameters specific to selected OS.
     */
    operatingSystemParameters?: pulumi.Input<pulumi.Input<inputs.OsInstallOperatingSystemParameter>[]>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.OsInstallOrganization>[]>;
    /**
     * A reference to a firmwareServerConfigurationUtilityDistributable resource. When the $expand query parameter is
     * specified, the referenced resource is returned inline.
     */
    osduImages?: pulumi.Input<pulumi.Input<inputs.OsInstallOsduImage>[]>;
    /**
     * ESXi Secure Boot installation is currently not supported. As a workaround, Secure Boot will be disabled before
     * installation and restored after installation is complete. Enable to Override Secure Boot Configuration.
     */
    overrideSecureBoot?: pulumi.Input<boolean>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.OsInstallParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.OsInstallPermissionResource>[]>;
    /**
     * A reference to a computePhysical resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.OsInstallServer>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.OsInstallTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.OsInstallVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.OsInstallWorkflowInfo>[]>;
}

/**
 * The set of arguments for constructing a OsInstall resource.
 */
export interface OsInstallArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalParameters?: pulumi.Input<pulumi.Input<inputs.OsInstallAdditionalParameter>[]>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.OsInstallAncestor>[]>;
    /**
     * Answers provided by user for the unattended OS installation.
     */
    answers?: pulumi.Input<pulumi.Input<inputs.OsInstallAnswer>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * A reference to a osConfigurationFile resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    configurationFiles?: pulumi.Input<pulumi.Input<inputs.OsInstallConfigurationFile>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * User provided description about the OS install configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The failure message of the API.
     */
    errorMsg?: pulumi.Input<string>;
    /**
     * A reference to a softwarerepositoryOperatingSystemFile resource. When the $expand query parameter is specified, the
     * referenced resource is returned inline.
     */
    images?: pulumi.Input<pulumi.Input<inputs.OsInstallImage>[]>;
    /**
     * The install method to be used for OS installation - vMedia, iPXE. Only vMedia is supported as of now. * `vMedia` - OS
     * image is mounted as vMedia in target server for OS installation.
     */
    installMethod?: pulumi.Input<string>;
    /**
     * Install Target on which Operating system is installed.
     */
    installTargets?: pulumi.Input<pulumi.Input<inputs.OsInstallInstallTarget>[]>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The name of the OS install configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * Denotes API operating status as pending, in_progress, completed_ok, completed_error based on the execution status. *
     * `Pending` - The initial value of the OperStatus. * `InProgress` - The OperStatus value will be InProgress during
     * execution. * `CompletedOk` - The API is successful with operation then OperStatus will be marked as CompletedOk. *
     * `CompletedError` - The API is failed with operation then OperStatus will be marked as CompletedError. *
     * `CompletedWarning` - The API is completed with some warning then OperStatus will be CompletedWarning.
     */
    operState?: pulumi.Input<string>;
    /**
     * Parameters specific to selected OS.
     */
    operatingSystemParameters?: pulumi.Input<pulumi.Input<inputs.OsInstallOperatingSystemParameter>[]>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.OsInstallOrganization>[]>;
    /**
     * A reference to a firmwareServerConfigurationUtilityDistributable resource. When the $expand query parameter is
     * specified, the referenced resource is returned inline.
     */
    osduImages?: pulumi.Input<pulumi.Input<inputs.OsInstallOsduImage>[]>;
    /**
     * ESXi Secure Boot installation is currently not supported. As a workaround, Secure Boot will be disabled before
     * installation and restored after installation is complete. Enable to Override Secure Boot Configuration.
     */
    overrideSecureBoot?: pulumi.Input<boolean>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.OsInstallParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.OsInstallPermissionResource>[]>;
    /**
     * A reference to a computePhysical resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.OsInstallServer>[]>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.OsInstallTag>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.OsInstallVersionContext>[]>;
    /**
     * This model object can trigger workflows. Use this option to wait for all running workflows to reach a complete state.
     */
    waitForCompletion?: pulumi.Input<boolean>;
    /**
     * A reference to a workflowWorkflowInfo resource. When the $expand query parameter is specified, the referenced resource
     * is returned inline.
     */
    workflowInfos?: pulumi.Input<pulumi.Input<inputs.OsInstallWorkflowInfo>[]>;
}
