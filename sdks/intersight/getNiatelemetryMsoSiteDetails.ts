// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getNiatelemetryMsoSiteDetails(args?: GetNiatelemetryMsoSiteDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetNiatelemetryMsoSiteDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getNiatelemetryMsoSiteDetails:getNiatelemetryMsoSiteDetails", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "isCloudSecEnabled": args.isCloudSecEnabled,
        "modTime": args.modTime,
        "moid": args.moid,
        "numberOfLeafsPerSiteInMso": args.numberOfLeafsPerSiteInMso,
        "numberOfPodsPerSiteInMso": args.numberOfPodsPerSiteInMso,
        "numberOfSpinesPerSiteInMso": args.numberOfSpinesPerSiteInMso,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "recordType": args.recordType,
        "registeredDevice": args.registeredDevice,
        "sharedScope": args.sharedScope,
        "siteId": args.siteId,
        "siteName": args.siteName,
        "siteVersion": args.siteVersion,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNiatelemetryMsoSiteDetails.
 */
export interface GetNiatelemetryMsoSiteDetailsArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetNiatelemetryMsoSiteDetailsAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    isCloudSecEnabled?: string;
    modTime?: string;
    moid?: string;
    numberOfLeafsPerSiteInMso?: number;
    numberOfPodsPerSiteInMso?: number;
    numberOfSpinesPerSiteInMso?: number;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetNiatelemetryMsoSiteDetailsParent;
    permissionResources?: inputs.GetNiatelemetryMsoSiteDetailsPermissionResource[];
    recordType?: string;
    registeredDevice?: inputs.GetNiatelemetryMsoSiteDetailsRegisteredDevice;
    sharedScope?: string;
    siteId?: string;
    siteName?: string;
    siteVersion?: string;
    tags?: inputs.GetNiatelemetryMsoSiteDetailsTag[];
    versionContext?: inputs.GetNiatelemetryMsoSiteDetailsVersionContext;
}

/**
 * A collection of values returned by getNiatelemetryMsoSiteDetails.
 */
export interface GetNiatelemetryMsoSiteDetailsResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetNiatelemetryMsoSiteDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly isCloudSecEnabled?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly numberOfLeafsPerSiteInMso?: number;
    readonly numberOfPodsPerSiteInMso?: number;
    readonly numberOfSpinesPerSiteInMso?: number;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetNiatelemetryMsoSiteDetailsParent;
    readonly permissionResources?: outputs.GetNiatelemetryMsoSiteDetailsPermissionResource[];
    readonly recordType?: string;
    readonly registeredDevice?: outputs.GetNiatelemetryMsoSiteDetailsRegisteredDevice;
    readonly results: outputs.GetNiatelemetryMsoSiteDetailsResult[];
    readonly sharedScope?: string;
    readonly siteId?: string;
    readonly siteName?: string;
    readonly siteVersion?: string;
    readonly tags?: outputs.GetNiatelemetryMsoSiteDetailsTag[];
    readonly versionContext?: outputs.GetNiatelemetryMsoSiteDetailsVersionContext;
}
export function getNiatelemetryMsoSiteDetailsOutput(args?: GetNiatelemetryMsoSiteDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNiatelemetryMsoSiteDetailsResult> {
    return pulumi.output(args).apply((a: any) => getNiatelemetryMsoSiteDetails(a, opts))
}

/**
 * A collection of arguments for invoking getNiatelemetryMsoSiteDetails.
 */
export interface GetNiatelemetryMsoSiteDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryMsoSiteDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    isCloudSecEnabled?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    numberOfLeafsPerSiteInMso?: pulumi.Input<number>;
    numberOfPodsPerSiteInMso?: pulumi.Input<number>;
    numberOfSpinesPerSiteInMso?: pulumi.Input<number>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetNiatelemetryMsoSiteDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryMsoSiteDetailsPermissionResourceArgs>[]>;
    recordType?: pulumi.Input<string>;
    registeredDevice?: pulumi.Input<inputs.GetNiatelemetryMsoSiteDetailsRegisteredDeviceArgs>;
    sharedScope?: pulumi.Input<string>;
    siteId?: pulumi.Input<string>;
    siteName?: pulumi.Input<string>;
    siteVersion?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetNiatelemetryMsoSiteDetailsTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetNiatelemetryMsoSiteDetailsVersionContextArgs>;
}
