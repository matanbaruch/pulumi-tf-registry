// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getConvergedinfraServerComplianceDetails(args?: GetConvergedinfraServerComplianceDetailsArgs, opts?: pulumi.InvokeOptions): Promise<GetConvergedinfraServerComplianceDetailsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getConvergedinfraServerComplianceDetails:getConvergedinfraServerComplianceDetails", {
        "accountMoid": args.accountMoid,
        "adapterCount": args.adapterCount,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "firmware": args.firmware,
        "hclStatus": args.hclStatus,
        "hclStatusReason": args.hclStatusReason,
        "id": args.id,
        "modTime": args.modTime,
        "model": args.model,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "os": args.os,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "platform": args.platform,
        "podCompliance": args.podCompliance,
        "processor": args.processor,
        "reason": args.reason,
        "server": args.server,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getConvergedinfraServerComplianceDetails.
 */
export interface GetConvergedinfraServerComplianceDetailsArgs {
    accountMoid?: string;
    adapterCount?: number;
    additionalProperties?: string;
    ancestors?: inputs.GetConvergedinfraServerComplianceDetailsAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    firmware?: string;
    hclStatus?: string;
    hclStatusReason?: string;
    id?: string;
    modTime?: string;
    model?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    os?: string;
    owners?: string[];
    parent?: inputs.GetConvergedinfraServerComplianceDetailsParent;
    permissionResources?: inputs.GetConvergedinfraServerComplianceDetailsPermissionResource[];
    platform?: string;
    podCompliance?: inputs.GetConvergedinfraServerComplianceDetailsPodCompliance;
    processor?: string;
    reason?: string;
    server?: inputs.GetConvergedinfraServerComplianceDetailsServer;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetConvergedinfraServerComplianceDetailsTag[];
    versionContext?: inputs.GetConvergedinfraServerComplianceDetailsVersionContext;
}

/**
 * A collection of values returned by getConvergedinfraServerComplianceDetails.
 */
export interface GetConvergedinfraServerComplianceDetailsResult {
    readonly accountMoid?: string;
    readonly adapterCount?: number;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetConvergedinfraServerComplianceDetailsAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly firmware?: string;
    readonly hclStatus?: string;
    readonly hclStatusReason?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly model?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly os?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetConvergedinfraServerComplianceDetailsParent;
    readonly permissionResources?: outputs.GetConvergedinfraServerComplianceDetailsPermissionResource[];
    readonly platform?: string;
    readonly podCompliance?: outputs.GetConvergedinfraServerComplianceDetailsPodCompliance;
    readonly processor?: string;
    readonly reason?: string;
    readonly results: outputs.GetConvergedinfraServerComplianceDetailsResult[];
    readonly server?: outputs.GetConvergedinfraServerComplianceDetailsServer;
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetConvergedinfraServerComplianceDetailsTag[];
    readonly versionContext?: outputs.GetConvergedinfraServerComplianceDetailsVersionContext;
}
export function getConvergedinfraServerComplianceDetailsOutput(args?: GetConvergedinfraServerComplianceDetailsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConvergedinfraServerComplianceDetailsResult> {
    return pulumi.output(args).apply((a: any) => getConvergedinfraServerComplianceDetails(a, opts))
}

/**
 * A collection of arguments for invoking getConvergedinfraServerComplianceDetails.
 */
export interface GetConvergedinfraServerComplianceDetailsOutputArgs {
    accountMoid?: pulumi.Input<string>;
    adapterCount?: pulumi.Input<number>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    firmware?: pulumi.Input<string>;
    hclStatus?: pulumi.Input<string>;
    hclStatusReason?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    os?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsPermissionResourceArgs>[]>;
    platform?: pulumi.Input<string>;
    podCompliance?: pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsPodComplianceArgs>;
    processor?: pulumi.Input<string>;
    reason?: pulumi.Input<string>;
    server?: pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsServerArgs>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetConvergedinfraServerComplianceDetailsVersionContextArgs>;
}
