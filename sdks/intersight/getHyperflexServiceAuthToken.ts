// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexServiceAuthToken(args?: GetHyperflexServiceAuthTokenArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexServiceAuthTokenResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexServiceAuthToken:getHyperflexServiceAuthToken", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clientId": args.clientId,
        "cluster": args.cluster,
        "createTime": args.createTime,
        "csiVersion": args.csiVersion,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "serviceAuthToken": args.serviceAuthToken,
        "sharedScope": args.sharedScope,
        "status": args.status,
        "tags": args.tags,
        "tokenOwner": args.tokenOwner,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexServiceAuthToken.
 */
export interface GetHyperflexServiceAuthTokenArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexServiceAuthTokenAncestor[];
    classId?: string;
    clientId?: string;
    cluster?: inputs.GetHyperflexServiceAuthTokenCluster;
    createTime?: string;
    csiVersion?: string;
    domainGroupMoid?: string;
    id?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    organization?: inputs.GetHyperflexServiceAuthTokenOrganization;
    owners?: string[];
    parent?: inputs.GetHyperflexServiceAuthTokenParent;
    permissionResources?: inputs.GetHyperflexServiceAuthTokenPermissionResource[];
    serviceAuthToken?: string;
    sharedScope?: string;
    status?: string;
    tags?: inputs.GetHyperflexServiceAuthTokenTag[];
    tokenOwner?: inputs.GetHyperflexServiceAuthTokenTokenOwner;
    versionContext?: inputs.GetHyperflexServiceAuthTokenVersionContext;
}

/**
 * A collection of values returned by getHyperflexServiceAuthToken.
 */
export interface GetHyperflexServiceAuthTokenResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexServiceAuthTokenAncestor[];
    readonly classId?: string;
    readonly clientId?: string;
    readonly cluster?: outputs.GetHyperflexServiceAuthTokenCluster;
    readonly createTime?: string;
    readonly csiVersion?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetHyperflexServiceAuthTokenOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexServiceAuthTokenParent;
    readonly permissionResources?: outputs.GetHyperflexServiceAuthTokenPermissionResource[];
    readonly results: outputs.GetHyperflexServiceAuthTokenResult[];
    readonly serviceAuthToken?: string;
    readonly sharedScope?: string;
    readonly status?: string;
    readonly tags?: outputs.GetHyperflexServiceAuthTokenTag[];
    readonly tokenOwner?: outputs.GetHyperflexServiceAuthTokenTokenOwner;
    readonly versionContext?: outputs.GetHyperflexServiceAuthTokenVersionContext;
}
export function getHyperflexServiceAuthTokenOutput(args?: GetHyperflexServiceAuthTokenOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexServiceAuthTokenResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexServiceAuthToken(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexServiceAuthToken.
 */
export interface GetHyperflexServiceAuthTokenOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexServiceAuthTokenAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    cluster?: pulumi.Input<inputs.GetHyperflexServiceAuthTokenClusterArgs>;
    createTime?: pulumi.Input<string>;
    csiVersion?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetHyperflexServiceAuthTokenOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexServiceAuthTokenParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexServiceAuthTokenPermissionResourceArgs>[]>;
    serviceAuthToken?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexServiceAuthTokenTagArgs>[]>;
    tokenOwner?: pulumi.Input<inputs.GetHyperflexServiceAuthTokenTokenOwnerArgs>;
    versionContext?: pulumi.Input<inputs.GetHyperflexServiceAuthTokenVersionContextArgs>;
}
