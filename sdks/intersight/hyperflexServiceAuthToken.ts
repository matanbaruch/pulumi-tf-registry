// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HyperflexServiceAuthToken extends pulumi.CustomResource {
    /**
     * Get an existing HyperflexServiceAuthToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperflexServiceAuthTokenState, opts?: pulumi.CustomResourceOptions): HyperflexServiceAuthToken {
        return new HyperflexServiceAuthToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'intersight:index/hyperflexServiceAuthToken:HyperflexServiceAuthToken';

    /**
     * Returns true if the given object is an instance of HyperflexServiceAuthToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HyperflexServiceAuthToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HyperflexServiceAuthToken.__pulumiType;
    }

    /**
     * The Account ID for this managed object.
     */
    public readonly accountMoid!: pulumi.Output<string>;
    public readonly additionalProperties!: pulumi.Output<string | undefined>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly ancestors!: pulumi.Output<outputs.HyperflexServiceAuthTokenAncestor[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    public readonly classId!: pulumi.Output<string | undefined>;
    /**
     * Client Id or tenant Id of the entity that uses the service auth token.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * A reference to a hyperflexCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    public readonly clusters!: pulumi.Output<outputs.HyperflexServiceAuthTokenCluster[]>;
    /**
     * The time when this managed object was created.
     */
    public readonly createTime!: pulumi.Output<string>;
    /**
     * Version of Container Storage Interface (CSI) that the tokenOwner is associated with.
     */
    public readonly csiVersion!: pulumi.Output<string | undefined>;
    /**
     * The DomainGroup ID for this managed object.
     */
    public readonly domainGroupMoid!: pulumi.Output<string>;
    /**
     * The time when this managed object was last modified.
     */
    public readonly modTime!: pulumi.Output<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    public readonly moid!: pulumi.Output<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    public readonly organizations!: pulumi.Output<outputs.HyperflexServiceAuthTokenOrganization[]>;
    public readonly owners!: pulumi.Output<string[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly parents!: pulumi.Output<outputs.HyperflexServiceAuthTokenParent[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    public readonly permissionResources!: pulumi.Output<outputs.HyperflexServiceAuthTokenPermissionResource[]>;
    /**
     * Service auth token that has been created by HyperFlex cluster.
     */
    public readonly serviceAuthToken!: pulumi.Output<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    public readonly sharedScope!: pulumi.Output<string>;
    /**
     * Represents status of ervice auth claim or revocation. * `Unknown` - Unknown claim state of the service auth token. *
     * `Claiming` - The service auth token claim is in progress. * `Claimed` - The service auth token has been successfully
     * claimed. * `FailedToClaim` - Cannot claim the service auth token on the underlying HyperFlex cluster. * `Revoking` - The
     * service auth token revocation is in progress. * `Revoked` - The service auth token revocation has been successfully
     * revoked. * `FailedToRevoke` - Cannot revoke the service auth token on the underlying HyperFlex cluster.
     */
    public readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.HyperflexServiceAuthTokenTag[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    public readonly tokenOwners!: pulumi.Output<outputs.HyperflexServiceAuthTokenTokenOwner[]>;
    /**
     * The versioning info for this managed object.
     */
    public readonly versionContexts!: pulumi.Output<outputs.HyperflexServiceAuthTokenVersionContext[]>;

    /**
     * Create a HyperflexServiceAuthToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HyperflexServiceAuthTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HyperflexServiceAuthTokenArgs | HyperflexServiceAuthTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HyperflexServiceAuthTokenState | undefined;
            resourceInputs["accountMoid"] = state ? state.accountMoid : undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["ancestors"] = state ? state.ancestors : undefined;
            resourceInputs["classId"] = state ? state.classId : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clusters"] = state ? state.clusters : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["csiVersion"] = state ? state.csiVersion : undefined;
            resourceInputs["domainGroupMoid"] = state ? state.domainGroupMoid : undefined;
            resourceInputs["modTime"] = state ? state.modTime : undefined;
            resourceInputs["moid"] = state ? state.moid : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["parents"] = state ? state.parents : undefined;
            resourceInputs["permissionResources"] = state ? state.permissionResources : undefined;
            resourceInputs["serviceAuthToken"] = state ? state.serviceAuthToken : undefined;
            resourceInputs["sharedScope"] = state ? state.sharedScope : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tokenOwners"] = state ? state.tokenOwners : undefined;
            resourceInputs["versionContexts"] = state ? state.versionContexts : undefined;
        } else {
            const args = argsOrState as HyperflexServiceAuthTokenArgs | undefined;
            resourceInputs["accountMoid"] = args ? args.accountMoid : undefined;
            resourceInputs["additionalProperties"] = args ? args.additionalProperties : undefined;
            resourceInputs["ancestors"] = args ? args.ancestors : undefined;
            resourceInputs["classId"] = args ? args.classId : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clusters"] = args ? args.clusters : undefined;
            resourceInputs["createTime"] = args ? args.createTime : undefined;
            resourceInputs["csiVersion"] = args ? args.csiVersion : undefined;
            resourceInputs["domainGroupMoid"] = args ? args.domainGroupMoid : undefined;
            resourceInputs["modTime"] = args ? args.modTime : undefined;
            resourceInputs["moid"] = args ? args.moid : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["organizations"] = args ? args.organizations : undefined;
            resourceInputs["owners"] = args ? args.owners : undefined;
            resourceInputs["parents"] = args ? args.parents : undefined;
            resourceInputs["permissionResources"] = args ? args.permissionResources : undefined;
            resourceInputs["serviceAuthToken"] = args ? args.serviceAuthToken : undefined;
            resourceInputs["sharedScope"] = args ? args.sharedScope : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tokenOwners"] = args ? args.tokenOwners : undefined;
            resourceInputs["versionContexts"] = args ? args.versionContexts : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HyperflexServiceAuthToken.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering HyperflexServiceAuthToken resources.
 */
export interface HyperflexServiceAuthTokenState {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Client Id or tenant Id of the entity that uses the service auth token.
     */
    clientId?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    clusters?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenCluster>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Version of Container Storage Interface (CSI) that the tokenOwner is associated with.
     */
    csiVersion?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenPermissionResource>[]>;
    /**
     * Service auth token that has been created by HyperFlex cluster.
     */
    serviceAuthToken?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Represents status of ervice auth claim or revocation. * `Unknown` - Unknown claim state of the service auth token. *
     * `Claiming` - The service auth token claim is in progress. * `Claimed` - The service auth token has been successfully
     * claimed. * `FailedToClaim` - Cannot claim the service auth token on the underlying HyperFlex cluster. * `Revoking` - The
     * service auth token revocation is in progress. * `Revoked` - The service auth token revocation has been successfully
     * revoked. * `FailedToRevoke` - Cannot revoke the service auth token on the underlying HyperFlex cluster.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenTag>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    tokenOwners?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenTokenOwner>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenVersionContext>[]>;
}

/**
 * The set of arguments for constructing a HyperflexServiceAuthToken resource.
 */
export interface HyperflexServiceAuthTokenArgs {
    /**
     * The Account ID for this managed object.
     */
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    ancestors?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenAncestor>[]>;
    /**
     * The fully-qualified name of the instantiated, concrete type. This property is used as a discriminator to identify the
     * type of the payload when marshaling and unmarshaling data.
     */
    classId?: pulumi.Input<string>;
    /**
     * Client Id or tenant Id of the entity that uses the service auth token.
     */
    clientId?: pulumi.Input<string>;
    /**
     * A reference to a hyperflexCluster resource. When the $expand query parameter is specified, the referenced resource is
     * returned inline.
     */
    clusters?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenCluster>[]>;
    /**
     * The time when this managed object was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Version of Container Storage Interface (CSI) that the tokenOwner is associated with.
     */
    csiVersion?: pulumi.Input<string>;
    /**
     * The DomainGroup ID for this managed object.
     */
    domainGroupMoid?: pulumi.Input<string>;
    /**
     * The time when this managed object was last modified.
     */
    modTime?: pulumi.Input<string>;
    /**
     * The unique identifier of this Managed Object instance.
     */
    moid?: pulumi.Input<string>;
    /**
     * The fully-qualified name of the instantiated, concrete type. The value should be the same as the 'ClassId' property.
     */
    objectType?: pulumi.Input<string>;
    /**
     * A reference to a organizationOrganization resource. When the $expand query parameter is specified, the referenced
     * resource is returned inline.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenOrganization>[]>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    parents?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenParent>[]>;
    /**
     * An array of relationships to moBaseMo resources.
     */
    permissionResources?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenPermissionResource>[]>;
    /**
     * Service auth token that has been created by HyperFlex cluster.
     */
    serviceAuthToken?: pulumi.Input<string>;
    /**
     * Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made
     * available through global catalogs are said to have a 'shared' ownership. Shared objects are either made globally
     * available to all end users or restricted to end users based on their license entitlement. Users can use this property to
     * differentiate the scope (global or a specific license tier) to which a shared MO belongs.
     */
    sharedScope?: pulumi.Input<string>;
    /**
     * Represents status of ervice auth claim or revocation. * `Unknown` - Unknown claim state of the service auth token. *
     * `Claiming` - The service auth token claim is in progress. * `Claimed` - The service auth token has been successfully
     * claimed. * `FailedToClaim` - Cannot claim the service auth token on the underlying HyperFlex cluster. * `Revoking` - The
     * service auth token revocation is in progress. * `Revoked` - The service auth token revocation has been successfully
     * revoked. * `FailedToRevoke` - Cannot revoke the service auth token on the underlying HyperFlex cluster.
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenTag>[]>;
    /**
     * A reference to a moBaseMo resource. When the $expand query parameter is specified, the referenced resource is returned
     * inline.
     */
    tokenOwners?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenTokenOwner>[]>;
    /**
     * The versioning info for this managed object.
     */
    versionContexts?: pulumi.Input<pulumi.Input<inputs.HyperflexServiceAuthTokenVersionContext>[]>;
}
