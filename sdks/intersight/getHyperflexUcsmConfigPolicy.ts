// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHyperflexUcsmConfigPolicy(args?: GetHyperflexUcsmConfigPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetHyperflexUcsmConfigPolicyResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getHyperflexUcsmConfigPolicy:getHyperflexUcsmConfigPolicy", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "clusterProfiles": args.clusterProfiles,
        "createTime": args.createTime,
        "description": args.description,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "kvmIpRange": args.kvmIpRange,
        "macPrefixRange": args.macPrefixRange,
        "modTime": args.modTime,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "organization": args.organization,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "serverFirmwareVersion": args.serverFirmwareVersion,
        "sharedScope": args.sharedScope,
        "tags": args.tags,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getHyperflexUcsmConfigPolicy.
 */
export interface GetHyperflexUcsmConfigPolicyArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetHyperflexUcsmConfigPolicyAncestor[];
    classId?: string;
    clusterProfiles?: inputs.GetHyperflexUcsmConfigPolicyClusterProfile[];
    createTime?: string;
    description?: string;
    domainGroupMoid?: string;
    id?: string;
    kvmIpRange?: inputs.GetHyperflexUcsmConfigPolicyKvmIpRange;
    macPrefixRange?: inputs.GetHyperflexUcsmConfigPolicyMacPrefixRange;
    modTime?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    organization?: inputs.GetHyperflexUcsmConfigPolicyOrganization;
    owners?: string[];
    parent?: inputs.GetHyperflexUcsmConfigPolicyParent;
    permissionResources?: inputs.GetHyperflexUcsmConfigPolicyPermissionResource[];
    serverFirmwareVersion?: string;
    sharedScope?: string;
    tags?: inputs.GetHyperflexUcsmConfigPolicyTag[];
    versionContext?: inputs.GetHyperflexUcsmConfigPolicyVersionContext;
}

/**
 * A collection of values returned by getHyperflexUcsmConfigPolicy.
 */
export interface GetHyperflexUcsmConfigPolicyResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetHyperflexUcsmConfigPolicyAncestor[];
    readonly classId?: string;
    readonly clusterProfiles?: outputs.GetHyperflexUcsmConfigPolicyClusterProfile[];
    readonly createTime?: string;
    readonly description?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly kvmIpRange?: outputs.GetHyperflexUcsmConfigPolicyKvmIpRange;
    readonly macPrefixRange?: outputs.GetHyperflexUcsmConfigPolicyMacPrefixRange;
    readonly modTime?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly organization?: outputs.GetHyperflexUcsmConfigPolicyOrganization;
    readonly owners?: string[];
    readonly parent?: outputs.GetHyperflexUcsmConfigPolicyParent;
    readonly permissionResources?: outputs.GetHyperflexUcsmConfigPolicyPermissionResource[];
    readonly results: outputs.GetHyperflexUcsmConfigPolicyResult[];
    readonly serverFirmwareVersion?: string;
    readonly sharedScope?: string;
    readonly tags?: outputs.GetHyperflexUcsmConfigPolicyTag[];
    readonly versionContext?: outputs.GetHyperflexUcsmConfigPolicyVersionContext;
}
export function getHyperflexUcsmConfigPolicyOutput(args?: GetHyperflexUcsmConfigPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHyperflexUcsmConfigPolicyResult> {
    return pulumi.output(args).apply((a: any) => getHyperflexUcsmConfigPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getHyperflexUcsmConfigPolicy.
 */
export interface GetHyperflexUcsmConfigPolicyOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    clusterProfiles?: pulumi.Input<pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyClusterProfileArgs>[]>;
    createTime?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    kvmIpRange?: pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyKvmIpRangeArgs>;
    macPrefixRange?: pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyMacPrefixRangeArgs>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    organization?: pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyOrganizationArgs>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyPermissionResourceArgs>[]>;
    serverFirmwareVersion?: pulumi.Input<string>;
    sharedScope?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetHyperflexUcsmConfigPolicyVersionContextArgs>;
}
