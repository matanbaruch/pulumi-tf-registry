// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCapabilityActionsMetaData(args?: GetCapabilityActionsMetaDataArgs, opts?: pulumi.InvokeOptions): Promise<GetCapabilityActionsMetaDataResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getCapabilityActionsMetaData:getCapabilityActionsMetaData", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "id": args.id,
        "maxFwVersion": args.maxFwVersion,
        "minFwVersion": args.minFwVersion,
        "modTime": args.modTime,
        "model": args.model,
        "moid": args.moid,
        "name": args.name,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "sharedScope": args.sharedScope,
        "supportedActions": args.supportedActions,
        "tags": args.tags,
        "targetType": args.targetType,
        "vendor": args.vendor,
        "versionContext": args.versionContext,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getCapabilityActionsMetaData.
 */
export interface GetCapabilityActionsMetaDataArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetCapabilityActionsMetaDataAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    id?: string;
    maxFwVersion?: string;
    minFwVersion?: string;
    modTime?: string;
    model?: string;
    moid?: string;
    name?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetCapabilityActionsMetaDataParent;
    permissionResources?: inputs.GetCapabilityActionsMetaDataPermissionResource[];
    sharedScope?: string;
    supportedActions?: string[];
    tags?: inputs.GetCapabilityActionsMetaDataTag[];
    targetType?: string;
    vendor?: string;
    versionContext?: inputs.GetCapabilityActionsMetaDataVersionContext;
}

/**
 * A collection of values returned by getCapabilityActionsMetaData.
 */
export interface GetCapabilityActionsMetaDataResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetCapabilityActionsMetaDataAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly id: string;
    readonly maxFwVersion?: string;
    readonly minFwVersion?: string;
    readonly modTime?: string;
    readonly model?: string;
    readonly moid?: string;
    readonly name?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetCapabilityActionsMetaDataParent;
    readonly permissionResources?: outputs.GetCapabilityActionsMetaDataPermissionResource[];
    readonly results: outputs.GetCapabilityActionsMetaDataResult[];
    readonly sharedScope?: string;
    readonly supportedActions?: string[];
    readonly tags?: outputs.GetCapabilityActionsMetaDataTag[];
    readonly targetType?: string;
    readonly vendor?: string;
    readonly versionContext?: outputs.GetCapabilityActionsMetaDataVersionContext;
}
export function getCapabilityActionsMetaDataOutput(args?: GetCapabilityActionsMetaDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCapabilityActionsMetaDataResult> {
    return pulumi.output(args).apply((a: any) => getCapabilityActionsMetaData(a, opts))
}

/**
 * A collection of arguments for invoking getCapabilityActionsMetaData.
 */
export interface GetCapabilityActionsMetaDataOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetCapabilityActionsMetaDataAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    maxFwVersion?: pulumi.Input<string>;
    minFwVersion?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    model?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetCapabilityActionsMetaDataParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetCapabilityActionsMetaDataPermissionResourceArgs>[]>;
    sharedScope?: pulumi.Input<string>;
    supportedActions?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetCapabilityActionsMetaDataTagArgs>[]>;
    targetType?: pulumi.Input<string>;
    vendor?: pulumi.Input<string>;
    versionContext?: pulumi.Input<inputs.GetCapabilityActionsMetaDataVersionContextArgs>;
}
