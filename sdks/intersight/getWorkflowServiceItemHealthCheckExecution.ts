// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getWorkflowServiceItemHealthCheckExecution(args?: GetWorkflowServiceItemHealthCheckExecutionArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkflowServiceItemHealthCheckExecutionResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("intersight:index/getWorkflowServiceItemHealthCheckExecution:getWorkflowServiceItemHealthCheckExecution", {
        "accountMoid": args.accountMoid,
        "additionalProperties": args.additionalProperties,
        "ancestors": args.ancestors,
        "classId": args.classId,
        "createTime": args.createTime,
        "domainGroupMoid": args.domainGroupMoid,
        "errorElements": args.errorElements,
        "errorSummary": args.errorSummary,
        "healthCheckDefinition": args.healthCheckDefinition,
        "id": args.id,
        "lastPassedTimestamp": args.lastPassedTimestamp,
        "modTime": args.modTime,
        "moid": args.moid,
        "objectType": args.objectType,
        "owners": args.owners,
        "parent": args.parent,
        "permissionResources": args.permissionResources,
        "result": args.result,
        "serviceItemInstance": args.serviceItemInstance,
        "sharedScope": args.sharedScope,
        "summary": args.summary,
        "tags": args.tags,
        "versionContext": args.versionContext,
        "workflowInfo": args.workflowInfo,
        "workflowStatus": args.workflowStatus,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getWorkflowServiceItemHealthCheckExecution.
 */
export interface GetWorkflowServiceItemHealthCheckExecutionArgs {
    accountMoid?: string;
    additionalProperties?: string;
    ancestors?: inputs.GetWorkflowServiceItemHealthCheckExecutionAncestor[];
    classId?: string;
    createTime?: string;
    domainGroupMoid?: string;
    errorElements?: inputs.GetWorkflowServiceItemHealthCheckExecutionErrorElement[];
    errorSummary?: string;
    healthCheckDefinition?: inputs.GetWorkflowServiceItemHealthCheckExecutionHealthCheckDefinition;
    id?: string;
    lastPassedTimestamp?: string;
    modTime?: string;
    moid?: string;
    objectType?: string;
    owners?: string[];
    parent?: inputs.GetWorkflowServiceItemHealthCheckExecutionParent;
    permissionResources?: inputs.GetWorkflowServiceItemHealthCheckExecutionPermissionResource[];
    result?: string;
    serviceItemInstance?: inputs.GetWorkflowServiceItemHealthCheckExecutionServiceItemInstance;
    sharedScope?: string;
    summary?: string;
    tags?: inputs.GetWorkflowServiceItemHealthCheckExecutionTag[];
    versionContext?: inputs.GetWorkflowServiceItemHealthCheckExecutionVersionContext;
    workflowInfo?: inputs.GetWorkflowServiceItemHealthCheckExecutionWorkflowInfo;
    workflowStatus?: string;
}

/**
 * A collection of values returned by getWorkflowServiceItemHealthCheckExecution.
 */
export interface GetWorkflowServiceItemHealthCheckExecutionResult {
    readonly accountMoid?: string;
    readonly additionalProperties?: string;
    readonly ancestors?: outputs.GetWorkflowServiceItemHealthCheckExecutionAncestor[];
    readonly classId?: string;
    readonly createTime?: string;
    readonly domainGroupMoid?: string;
    readonly errorElements?: outputs.GetWorkflowServiceItemHealthCheckExecutionErrorElement[];
    readonly errorSummary?: string;
    readonly healthCheckDefinition?: outputs.GetWorkflowServiceItemHealthCheckExecutionHealthCheckDefinition;
    readonly id: string;
    readonly lastPassedTimestamp?: string;
    readonly modTime?: string;
    readonly moid?: string;
    readonly objectType?: string;
    readonly owners?: string[];
    readonly parent?: outputs.GetWorkflowServiceItemHealthCheckExecutionParent;
    readonly permissionResources?: outputs.GetWorkflowServiceItemHealthCheckExecutionPermissionResource[];
    readonly result?: string;
    readonly results: outputs.GetWorkflowServiceItemHealthCheckExecutionResult[];
    readonly serviceItemInstance?: outputs.GetWorkflowServiceItemHealthCheckExecutionServiceItemInstance;
    readonly sharedScope?: string;
    readonly summary?: string;
    readonly tags?: outputs.GetWorkflowServiceItemHealthCheckExecutionTag[];
    readonly versionContext?: outputs.GetWorkflowServiceItemHealthCheckExecutionVersionContext;
    readonly workflowInfo?: outputs.GetWorkflowServiceItemHealthCheckExecutionWorkflowInfo;
    readonly workflowStatus?: string;
}
export function getWorkflowServiceItemHealthCheckExecutionOutput(args?: GetWorkflowServiceItemHealthCheckExecutionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkflowServiceItemHealthCheckExecutionResult> {
    return pulumi.output(args).apply((a: any) => getWorkflowServiceItemHealthCheckExecution(a, opts))
}

/**
 * A collection of arguments for invoking getWorkflowServiceItemHealthCheckExecution.
 */
export interface GetWorkflowServiceItemHealthCheckExecutionOutputArgs {
    accountMoid?: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    ancestors?: pulumi.Input<pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionAncestorArgs>[]>;
    classId?: pulumi.Input<string>;
    createTime?: pulumi.Input<string>;
    domainGroupMoid?: pulumi.Input<string>;
    errorElements?: pulumi.Input<pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionErrorElementArgs>[]>;
    errorSummary?: pulumi.Input<string>;
    healthCheckDefinition?: pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionHealthCheckDefinitionArgs>;
    id?: pulumi.Input<string>;
    lastPassedTimestamp?: pulumi.Input<string>;
    modTime?: pulumi.Input<string>;
    moid?: pulumi.Input<string>;
    objectType?: pulumi.Input<string>;
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    parent?: pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionParentArgs>;
    permissionResources?: pulumi.Input<pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionPermissionResourceArgs>[]>;
    result?: pulumi.Input<string>;
    serviceItemInstance?: pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionServiceItemInstanceArgs>;
    sharedScope?: pulumi.Input<string>;
    summary?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionTagArgs>[]>;
    versionContext?: pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionVersionContextArgs>;
    workflowInfo?: pulumi.Input<inputs.GetWorkflowServiceItemHealthCheckExecutionWorkflowInfoArgs>;
    workflowStatus?: pulumi.Input<string>;
}
