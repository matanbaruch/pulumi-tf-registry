// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAddresses(args: GetAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetAddressesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("versadirector:index/getAddresses:getAddresses", {
        "addresses": args.addresses,
        "deviceName": args.deviceName,
        "organizationName": args.organizationName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAddresses.
 */
export interface GetAddressesArgs {
    addresses?: inputs.GetAddressesAddress[];
    deviceName: string;
    organizationName: string;
}

/**
 * A collection of values returned by getAddresses.
 */
export interface GetAddressesResult {
    readonly addresses?: outputs.GetAddressesAddress[];
    readonly deviceName: string;
    readonly id: string;
    readonly lastUpdated: string;
    readonly organizationName: string;
}
export function getAddressesOutput(args: GetAddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAddressesResult> {
    return pulumi.output(args).apply((a: any) => getAddresses(a, opts))
}

/**
 * A collection of arguments for invoking getAddresses.
 */
export interface GetAddressesOutputArgs {
    addresses?: pulumi.Input<pulumi.Input<inputs.GetAddressesAddressArgs>[]>;
    deviceName: pulumi.Input<string>;
    organizationName: pulumi.Input<string>;
}
