// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ClusterAutoscalerResourceLimits {
    /**
     * Minimum and maximum number of cores in cluster, in the format <min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers.
     */
    cores?: pulumi.Input<inputs.ClusterAutoscalerResourceLimitsCores>;
    /**
     * Minimum and maximum number of different GPUs in cluster, in the format <gpu_type>:<min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers. Can be passed multiple times.
     */
    gpuses?: pulumi.Input<pulumi.Input<inputs.ClusterAutoscalerResourceLimitsGpus>[]>;
    /**
     * Maximum number of nodes in all node groups. Cluster autoscaler will not grow the cluster beyond this number.
     */
    maxNodesTotal?: pulumi.Input<number>;
    /**
     * Minimum and maximum number of gigabytes of memory in cluster, in the format <min>:<max>. Cluster autoscaler will not scale the cluster beyond these numbers.
     */
    memory?: pulumi.Input<inputs.ClusterAutoscalerResourceLimitsMemory>;
}

export interface ClusterAutoscalerResourceLimitsCores {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface ClusterAutoscalerResourceLimitsGpus {
    /**
     * limit number of GPU type
     */
    range: pulumi.Input<inputs.ClusterAutoscalerResourceLimitsGpusRange>;
    type: pulumi.Input<string>;
}

export interface ClusterAutoscalerResourceLimitsGpusRange {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface ClusterAutoscalerResourceLimitsMemory {
    max: pulumi.Input<number>;
    min: pulumi.Input<number>;
}

export interface ClusterAutoscalerScaleDown {
    /**
     * How long after scale up that scale down evaluation resumes.
     */
    delayAfterAdd?: pulumi.Input<string>;
    /**
     * How long after node deletion that scale down evaluation resumes.
     */
    delayAfterDelete?: pulumi.Input<string>;
    /**
     * How long after scale down failure that scale down evaluation resumes.
     */
    delayAfterFailure?: pulumi.Input<string>;
    /**
     * Should cluster-autoscaler scale down the cluster.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * How long a node should be unneeded before it is eligible for scale down.
     */
    unneededTime?: pulumi.Input<string>;
    /**
     * Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.
     */
    utilizationThreshold?: pulumi.Input<string>;
}

export interface ClusterProxy {
    /**
     * A string containing a PEM-encoded X.509 certificate bundle that will be added to the nodes' trusted certificate store. To reset please provide '' (empty string)
     */
    additionalTrustBundle?: pulumi.Input<string>;
    /**
     * HTTP proxy. To reset please provide '' (empty string)
     */
    httpProxy?: pulumi.Input<string>;
    /**
     * HTTPS proxy. To reset please provide '' (empty string)
     */
    httpsProxy?: pulumi.Input<string>;
    /**
     * No proxy. To reset please provide '' (empty string)
     */
    noProxy?: pulumi.Input<string>;
}

export interface ClusterRosaClassicAdminCredentials {
    /**
     * Admin password that will be created with the cluster.
     */
    password?: pulumi.Input<string>;
    /**
     * Admin username that will be created with the cluster.
     */
    username?: pulumi.Input<string>;
}

export interface ClusterRosaClassicPrivateHostedZone {
    /**
     * ID assigned by AWS to private Route 53 hosted zone associated with intended shared VPC, e.g. 'Z05646003S02O1ENCDCSN'.
     */
    id: pulumi.Input<string>;
    /**
     * AWS IAM role ARN with a policy attached, granting permissions necessary to create and manage Route 53 DNS records in private Route 53 hosted zone associated with intended shared VPC.
     */
    roleArn: pulumi.Input<string>;
}

export interface ClusterRosaClassicProxy {
    /**
     * A string containing a PEM-encoded X.509 certificate bundle that will be added to the nodes' trusted certificate store. To reset please provide '' (empty string)
     */
    additionalTrustBundle?: pulumi.Input<string>;
    /**
     * HTTP proxy. To reset please provide '' (empty string)
     */
    httpProxy?: pulumi.Input<string>;
    /**
     * HTTPS proxy. To reset please provide '' (empty string)
     */
    httpsProxy?: pulumi.Input<string>;
    /**
     * No proxy. To reset please provide '' (empty string)
     */
    noProxy?: pulumi.Input<string>;
}

export interface ClusterRosaClassicSts {
    /**
     * Instance IAM Roles
     */
    instanceIamRoles: pulumi.Input<inputs.ClusterRosaClassicStsInstanceIamRoles>;
    /**
     * OIDC Configuration ID
     */
    oidcConfigId?: pulumi.Input<string>;
    /**
     * OIDC Endpoint URL
     */
    oidcEndpointUrl?: pulumi.Input<string>;
    /**
     * Operator IAM Role prefix
     */
    operatorRolePrefix: pulumi.Input<string>;
    /**
     * Installer Role
     */
    roleArn: pulumi.Input<string>;
    /**
     * Support Role
     */
    supportRoleArn: pulumi.Input<string>;
    /**
     * SHA1-hash value of the root CA of the issuer URL
     */
    thumbprint?: pulumi.Input<string>;
}

export interface ClusterRosaClassicStsInstanceIamRoles {
    /**
     * Master/Control Plane Node Role ARN
     */
    masterRoleArn: pulumi.Input<string>;
    /**
     * Worker/Compute Node Role ARN
     */
    workerRoleArn: pulumi.Input<string>;
}

export interface ClusterRosaHcpAdminCredentials {
    /**
     * Admin password that will be created with the cluster.
     */
    password?: pulumi.Input<string>;
    /**
     * Admin username that will be created with the cluster.
     */
    username?: pulumi.Input<string>;
}

export interface ClusterRosaHcpProxy {
    /**
     * A string containing a PEM-encoded X.509 certificate bundle that will be added to the nodes' trusted certificate store. To reset please provide '' (empty string)
     */
    additionalTrustBundle?: pulumi.Input<string>;
    /**
     * HTTP proxy. To reset please provide '' (empty string)
     */
    httpProxy?: pulumi.Input<string>;
    /**
     * HTTPS proxy. To reset please provide '' (empty string)
     */
    httpsProxy?: pulumi.Input<string>;
    /**
     * No proxy. To reset please provide '' (empty string)
     */
    noProxy?: pulumi.Input<string>;
}

export interface ClusterRosaHcpSts {
    /**
     * Instance IAM Roles
     */
    instanceIamRoles: pulumi.Input<inputs.ClusterRosaHcpStsInstanceIamRoles>;
    /**
     * OIDC Configuration ID
     */
    oidcConfigId?: pulumi.Input<string>;
    /**
     * OIDC Endpoint URL
     */
    oidcEndpointUrl?: pulumi.Input<string>;
    /**
     * Operator IAM Role prefix
     */
    operatorRolePrefix: pulumi.Input<string>;
    /**
     * Installer Role
     */
    roleArn: pulumi.Input<string>;
    /**
     * Support Role
     */
    supportRoleArn: pulumi.Input<string>;
    /**
     * SHA1-hash value of the root CA of the issuer URL
     */
    thumbprint?: pulumi.Input<string>;
}

export interface ClusterRosaHcpStsInstanceIamRoles {
    /**
     * Worker/Compute Node Role ARN
     */
    workerRoleArn: pulumi.Input<string>;
}

export interface DefaultIngressComponentRoutes {
    hostname: pulumi.Input<string>;
    tlsSecretRef: pulumi.Input<string>;
}

export interface HcpClusterAutoscalerResourceLimits {
    /**
     * Maximum number of nodes in all node groups. Cluster autoscaler will not grow the cluster beyond this number.
     */
    maxNodesTotal?: pulumi.Input<number>;
}

export interface HcpMachinePoolAutoscaling {
    /**
     * Enables autoscaling. If `true`, this variable requires you to set a maximum and minimum replicas range using the `max_replicas` and `min_replicas` variables.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The maximum number of replicas for autoscaling functionality.
     */
    maxReplicas?: pulumi.Input<number>;
    /**
     * The minimum number of replicas for autoscaling functionality.
     */
    minReplicas?: pulumi.Input<number>;
}

export interface HcpMachinePoolAwsNodePool {
    /**
     * Additional security group ids. After the creation of the resource, it is not possible to update the attribute value.
     */
    additionalSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This value determines which EC2 Instance Metadata Service mode to use for EC2 instances in the nodes.This can be set as `optional` (IMDS v1 or v2) or `required` (IMDSv2 only). This feature is available from After the creation of the resource, it is not possible to update the attribute value.
     */
    ec2MetadataHttpTokens?: pulumi.Input<string>;
    /**
     * Instance profile attached to the replica
     */
    instanceProfile?: pulumi.Input<string>;
    /**
     * Identifier of the machine type used by the nodes, for example `m5.xlarge`. Use the `rhcs.getMachineTypes` data source to find the possible values. After the creation of the resource, it is not possible to update the attribute value.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Apply user defined tags to all machine pool resources created in AWS.After the creation of the resource, it is not possible to update the attribute value.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface HcpMachinePoolStatus {
    /**
     * The current number of replicas.
     */
    currentReplicas?: pulumi.Input<number>;
    /**
     * Message regarding status of the replica
     */
    message?: pulumi.Input<string>;
}

export interface HcpMachinePoolTaint {
    /**
     * Taints key
     */
    key: pulumi.Input<string>;
    /**
     * Taints schedule type
     */
    scheduleType: pulumi.Input<string>;
    /**
     * Taints value
     */
    value: pulumi.Input<string>;
}

export interface IdentityProviderGithub {
    /**
     * Path to PEM-encoded certificate file to use when making requests to the server.
     */
    ca?: pulumi.Input<string>;
    /**
     * Client identifier of a registered Github OAuth application.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret issued by Github.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Optional domain to use with a hosted instance of GitHub Enterprise.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Only users that are members of at least one of the listed organizations will be allowed to log in.
     */
    organizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only users that are members of at least one of the listed teams will be allowed to log in. The format is `<org>`/`<team>`.
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityProviderGitlab {
    /**
     * Optional trusted certificate authority bundle.
     */
    ca?: pulumi.Input<string>;
    /**
     * Client identifier of a registered Gitlab OAuth application.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret issued by Gitlab.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * URL of the Gitlab instance.
     */
    url: pulumi.Input<string>;
}

export interface IdentityProviderGoogle {
    /**
     * Client identifier of a registered Google OAuth application.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret issued by Google.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Restrict users to a Google Apps domain.
     */
    hostedDomain?: pulumi.Input<string>;
}

export interface IdentityProviderHtpasswd {
    /**
     * A list of htpasswd user credentials
     */
    users: pulumi.Input<pulumi.Input<inputs.IdentityProviderHtpasswdUser>[]>;
}

export interface IdentityProviderHtpasswdUser {
    /**
     * User password.
     */
    password: pulumi.Input<string>;
    /**
     * User username.
     */
    username: pulumi.Input<string>;
}

export interface IdentityProviderLdap {
    attributes: pulumi.Input<inputs.IdentityProviderLdapAttributes>;
    /**
     * DN to bind with during the search phase.
     */
    bindDn?: pulumi.Input<string>;
    /**
     * Password to bind with during the search phase.
     */
    bindPassword?: pulumi.Input<string>;
    /**
     * Optional trusted certificate authority bundle.
     */
    ca?: pulumi.Input<string>;
    /**
     * Do not make TLS connections to the server.
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * An RFC 2255 URL which specifies the LDAP search parameters to use.
     */
    url: pulumi.Input<string>;
}

export interface IdentityProviderLdapAttributes {
    /**
     * The list of attributes whose values should be used as the email address.
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of attributes whose values should be used as the user ID. (default ['dn'])
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of attributes whose values should be used as the display name. (default ['cn'])
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of attributes whose values should be used as the preferred username. (default ['uid'])
     */
    preferredUsernames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface IdentityProviderOpenid {
    /**
     * Optional trusted certificate authority bundle.
     */
    ca?: pulumi.Input<string>;
    /**
     * OpenID Claims config.
     */
    claims: pulumi.Input<inputs.IdentityProviderOpenidClaims>;
    /**
     * Client ID from the registered application.
     */
    clientId: pulumi.Input<string>;
    /**
     * Client Secret from the registered application.
     */
    clientSecret: pulumi.Input<string>;
    extraAuthorizeParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of scopes to request, in addition to the 'openid' scope, during the authorization token request.
     */
    extraScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL that the OpenID Provider asserts as the Issuer Identifier. It must use the https scheme with no URL query parameters or fragment.
     */
    issuer: pulumi.Input<string>;
}

export interface IdentityProviderOpenidClaims {
    /**
     * List of claims to use as the email address.
     */
    emails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of claims to use as the groups names.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of claims to use as the display name.
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of claims to use as the preferred username when provisioning a user.
     */
    preferredUsernames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MachinePoolTaint {
    /**
     * Taints key
     */
    key: pulumi.Input<string>;
    /**
     * Taints schedule type
     */
    scheduleType: pulumi.Input<string>;
    /**
     * Taints value
     */
    value: pulumi.Input<string>;
}
