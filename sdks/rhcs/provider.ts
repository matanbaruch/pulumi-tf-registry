// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the rhcs package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'rhcs';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * OpenID client identifier. The default value is 'cloud-services'.
     */
    public readonly clientId!: pulumi.Output<string | undefined>;
    /**
     * OpenID client secret.
     */
    public readonly clientSecret!: pulumi.Output<string | undefined>;
    /**
     * Access or refresh token that is generated from https://console.redhat.com/openshift/token/rosa.
     */
    public readonly token!: pulumi.Output<string | undefined>;
    /**
     * TokenURL returns the URL that the connection is using request OpenID access tokens. The default value is
     * 'https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token'
     */
    public readonly tokenUrl!: pulumi.Output<string | undefined>;
    /**
     * PEM encoded certificates of authorities that will be trusted. If this is not explicitly specified, then the provider
     * will trust the certificate authorities trusted by default by the system.
     */
    public readonly trustedCas!: pulumi.Output<string | undefined>;
    /**
     * URL sets the base URL of the API gateway. The default is `https://api.openshift.com`
     */
    public readonly url!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["insecure"] = pulumi.output(args ? args.insecure : undefined).apply(JSON.stringify);
            resourceInputs["token"] = args?.token ? pulumi.secret(args.token) : undefined;
            resourceInputs["tokenUrl"] = args ? args.tokenUrl : undefined;
            resourceInputs["trustedCas"] = args ? args.trustedCas : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret", "token"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * OpenID client identifier. The default value is 'cloud-services'.
     */
    clientId?: pulumi.Input<string>;
    /**
     * OpenID client secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * When set to 'true' enables insecure communication with the server. This disables verification of TLS certificates and
     * host names, and it is not recommended for production environments.
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * Access or refresh token that is generated from https://console.redhat.com/openshift/token/rosa.
     */
    token?: pulumi.Input<string>;
    /**
     * TokenURL returns the URL that the connection is using request OpenID access tokens. The default value is
     * 'https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token'
     */
    tokenUrl?: pulumi.Input<string>;
    /**
     * PEM encoded certificates of authorities that will be trusted. If this is not explicitly specified, then the provider
     * will trust the certificate authorities trusted by default by the system.
     */
    trustedCas?: pulumi.Input<string>;
    /**
     * URL sets the base URL of the API gateway. The default is `https://api.openshift.com`
     */
    url?: pulumi.Input<string>;
}
