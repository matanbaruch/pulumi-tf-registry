// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class MachinePool extends pulumi.CustomResource {
    /**
     * Get an existing MachinePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachinePoolState, opts?: pulumi.CustomResourceOptions): MachinePool {
        return new MachinePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rhcs:index/machinePool:MachinePool';

    /**
     * Returns true if the given object is an instance of MachinePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachinePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachinePool.__pulumiType;
    }

    /**
     * Enables autoscaling. If `true`, this variable requires you to set a maximum and minimum replicas range using the
     * `max_replicas` and `min_replicas` variables.
     */
    public readonly autoscalingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Select the availability zone in which to create a single AZ machine pool for a multi-AZ cluster. After the creation of
     * the resource, it is not possible to update the attribute value.
     */
    public readonly availabilityZone!: pulumi.Output<string>;
    /**
     * A list of Availability Zones. Relevant only for multiple availability zones machine pool. For single availability zone
     * check "availability_zone" attribute.
     */
    public /*out*/ readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * AWS additional security group ids. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly awsAdditionalSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Apply user defined tags to all machine pool resources created in AWS. After the creation of the resource, it is not
     * possible to update the attribute value.
     */
    public readonly awsTags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Identifier of the cluster. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly cluster!: pulumi.Output<string>;
    /**
     * Root disk size, in GiB. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly diskSize!: pulumi.Output<number>;
    /**
     * Labels for the machine pool. Format should be a comma-separated list of 'key = value'. This list will overwrite any
     * modifications made to node labels on an ongoing basis.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Identifier of the machine type used by the nodes, for example `m5.xlarge`. Use the `rhcs.getMachineTypes` data source to
     * find the possible values. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly machineType!: pulumi.Output<string>;
    /**
     * The maximum number of replicas for autoscaling functionality.
     */
    public readonly maxReplicas!: pulumi.Output<number | undefined>;
    /**
     * Max Spot price. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly maxSpotPrice!: pulumi.Output<number | undefined>;
    /**
     * The minimum number of replicas for autoscaling functionality.
     */
    public readonly minReplicas!: pulumi.Output<number | undefined>;
    /**
     * Create a multi-AZ machine pool for a multi-AZ cluster (default is `true`). After the creation of the resource, it is not
     * possible to update the attribute value.
     */
    public readonly multiAvailabilityZone!: pulumi.Output<boolean>;
    /**
     * Name of the machine pool. Must consist of lower-case alphanumeric characters or '-', start and end with an alphanumeric
     * character. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The number of machines of the pool
     */
    public readonly replicas!: pulumi.Output<number | undefined>;
    /**
     * Select the subnet in which to create a single AZ machine pool for BYO-VPC cluster. After the creation of the resource,
     * it is not possible to update the attribute value.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * A list of IDs of subnets in which the machines of this machine pool are created. Relevant only for a machine pool with
     * multiple subnets. For machine pool with single subnet check "subnet_id" attribute
     */
    public /*out*/ readonly subnetIds!: pulumi.Output<string[]>;
    /**
     * Taints for a machine pool. Format should be a comma-separated list of 'key=value'. This list will overwrite any
     * modifications made to node taints on an ongoing basis.
     */
    public readonly taints!: pulumi.Output<outputs.MachinePoolTaint[] | undefined>;
    /**
     * Use Amazon EC2 Spot Instances. After the creation of the resource, it is not possible to update the attribute value.
     */
    public readonly useSpotInstances!: pulumi.Output<boolean | undefined>;

    /**
     * Create a MachinePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachinePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachinePoolArgs | MachinePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachinePoolState | undefined;
            resourceInputs["autoscalingEnabled"] = state ? state.autoscalingEnabled : undefined;
            resourceInputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["awsAdditionalSecurityGroupIds"] = state ? state.awsAdditionalSecurityGroupIds : undefined;
            resourceInputs["awsTags"] = state ? state.awsTags : undefined;
            resourceInputs["cluster"] = state ? state.cluster : undefined;
            resourceInputs["diskSize"] = state ? state.diskSize : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["machineType"] = state ? state.machineType : undefined;
            resourceInputs["maxReplicas"] = state ? state.maxReplicas : undefined;
            resourceInputs["maxSpotPrice"] = state ? state.maxSpotPrice : undefined;
            resourceInputs["minReplicas"] = state ? state.minReplicas : undefined;
            resourceInputs["multiAvailabilityZone"] = state ? state.multiAvailabilityZone : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["replicas"] = state ? state.replicas : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["taints"] = state ? state.taints : undefined;
            resourceInputs["useSpotInstances"] = state ? state.useSpotInstances : undefined;
        } else {
            const args = argsOrState as MachinePoolArgs | undefined;
            if ((!args || args.cluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cluster'");
            }
            if ((!args || args.machineType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machineType'");
            }
            resourceInputs["autoscalingEnabled"] = args ? args.autoscalingEnabled : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["awsAdditionalSecurityGroupIds"] = args ? args.awsAdditionalSecurityGroupIds : undefined;
            resourceInputs["awsTags"] = args ? args.awsTags : undefined;
            resourceInputs["cluster"] = args ? args.cluster : undefined;
            resourceInputs["diskSize"] = args ? args.diskSize : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["machineType"] = args ? args.machineType : undefined;
            resourceInputs["maxReplicas"] = args ? args.maxReplicas : undefined;
            resourceInputs["maxSpotPrice"] = args ? args.maxSpotPrice : undefined;
            resourceInputs["minReplicas"] = args ? args.minReplicas : undefined;
            resourceInputs["multiAvailabilityZone"] = args ? args.multiAvailabilityZone : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replicas"] = args ? args.replicas : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["taints"] = args ? args.taints : undefined;
            resourceInputs["useSpotInstances"] = args ? args.useSpotInstances : undefined;
            resourceInputs["availabilityZones"] = undefined /*out*/;
            resourceInputs["subnetIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MachinePool.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MachinePool resources.
 */
export interface MachinePoolState {
    /**
     * Enables autoscaling. If `true`, this variable requires you to set a maximum and minimum replicas range using the
     * `max_replicas` and `min_replicas` variables.
     */
    autoscalingEnabled?: pulumi.Input<boolean>;
    /**
     * Select the availability zone in which to create a single AZ machine pool for a multi-AZ cluster. After the creation of
     * the resource, it is not possible to update the attribute value.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * A list of Availability Zones. Relevant only for multiple availability zones machine pool. For single availability zone
     * check "availability_zone" attribute.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS additional security group ids. After the creation of the resource, it is not possible to update the attribute value.
     */
    awsAdditionalSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apply user defined tags to all machine pool resources created in AWS. After the creation of the resource, it is not
     * possible to update the attribute value.
     */
    awsTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identifier of the cluster. After the creation of the resource, it is not possible to update the attribute value.
     */
    cluster?: pulumi.Input<string>;
    /**
     * Root disk size, in GiB. After the creation of the resource, it is not possible to update the attribute value.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Labels for the machine pool. Format should be a comma-separated list of 'key = value'. This list will overwrite any
     * modifications made to node labels on an ongoing basis.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identifier of the machine type used by the nodes, for example `m5.xlarge`. Use the `rhcs.getMachineTypes` data source to
     * find the possible values. After the creation of the resource, it is not possible to update the attribute value.
     */
    machineType?: pulumi.Input<string>;
    /**
     * The maximum number of replicas for autoscaling functionality.
     */
    maxReplicas?: pulumi.Input<number>;
    /**
     * Max Spot price. After the creation of the resource, it is not possible to update the attribute value.
     */
    maxSpotPrice?: pulumi.Input<number>;
    /**
     * The minimum number of replicas for autoscaling functionality.
     */
    minReplicas?: pulumi.Input<number>;
    /**
     * Create a multi-AZ machine pool for a multi-AZ cluster (default is `true`). After the creation of the resource, it is not
     * possible to update the attribute value.
     */
    multiAvailabilityZone?: pulumi.Input<boolean>;
    /**
     * Name of the machine pool. Must consist of lower-case alphanumeric characters or '-', start and end with an alphanumeric
     * character. After the creation of the resource, it is not possible to update the attribute value.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of machines of the pool
     */
    replicas?: pulumi.Input<number>;
    /**
     * Select the subnet in which to create a single AZ machine pool for BYO-VPC cluster. After the creation of the resource,
     * it is not possible to update the attribute value.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A list of IDs of subnets in which the machines of this machine pool are created. Relevant only for a machine pool with
     * multiple subnets. For machine pool with single subnet check "subnet_id" attribute
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Taints for a machine pool. Format should be a comma-separated list of 'key=value'. This list will overwrite any
     * modifications made to node taints on an ongoing basis.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.MachinePoolTaint>[]>;
    /**
     * Use Amazon EC2 Spot Instances. After the creation of the resource, it is not possible to update the attribute value.
     */
    useSpotInstances?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a MachinePool resource.
 */
export interface MachinePoolArgs {
    /**
     * Enables autoscaling. If `true`, this variable requires you to set a maximum and minimum replicas range using the
     * `max_replicas` and `min_replicas` variables.
     */
    autoscalingEnabled?: pulumi.Input<boolean>;
    /**
     * Select the availability zone in which to create a single AZ machine pool for a multi-AZ cluster. After the creation of
     * the resource, it is not possible to update the attribute value.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * AWS additional security group ids. After the creation of the resource, it is not possible to update the attribute value.
     */
    awsAdditionalSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Apply user defined tags to all machine pool resources created in AWS. After the creation of the resource, it is not
     * possible to update the attribute value.
     */
    awsTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identifier of the cluster. After the creation of the resource, it is not possible to update the attribute value.
     */
    cluster: pulumi.Input<string>;
    /**
     * Root disk size, in GiB. After the creation of the resource, it is not possible to update the attribute value.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Labels for the machine pool. Format should be a comma-separated list of 'key = value'. This list will overwrite any
     * modifications made to node labels on an ongoing basis.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identifier of the machine type used by the nodes, for example `m5.xlarge`. Use the `rhcs.getMachineTypes` data source to
     * find the possible values. After the creation of the resource, it is not possible to update the attribute value.
     */
    machineType: pulumi.Input<string>;
    /**
     * The maximum number of replicas for autoscaling functionality.
     */
    maxReplicas?: pulumi.Input<number>;
    /**
     * Max Spot price. After the creation of the resource, it is not possible to update the attribute value.
     */
    maxSpotPrice?: pulumi.Input<number>;
    /**
     * The minimum number of replicas for autoscaling functionality.
     */
    minReplicas?: pulumi.Input<number>;
    /**
     * Create a multi-AZ machine pool for a multi-AZ cluster (default is `true`). After the creation of the resource, it is not
     * possible to update the attribute value.
     */
    multiAvailabilityZone?: pulumi.Input<boolean>;
    /**
     * Name of the machine pool. Must consist of lower-case alphanumeric characters or '-', start and end with an alphanumeric
     * character. After the creation of the resource, it is not possible to update the attribute value.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of machines of the pool
     */
    replicas?: pulumi.Input<number>;
    /**
     * Select the subnet in which to create a single AZ machine pool for BYO-VPC cluster. After the creation of the resource,
     * it is not possible to update the attribute value.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Taints for a machine pool. Format should be a comma-separated list of 'key=value'. This list will overwrite any
     * modifications made to node taints on an ongoing basis.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.MachinePoolTaint>[]>;
    /**
     * Use Amazon EC2 Spot Instances. After the creation of the resource, it is not possible to update the attribute value.
     */
    useSpotInstances?: pulumi.Input<boolean>;
}
