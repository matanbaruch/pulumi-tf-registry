// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRosaHcpOperatorRoles(args: GetRosaHcpOperatorRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetRosaHcpOperatorRolesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rhcs:index/getRosaHcpOperatorRoles:getRosaHcpOperatorRoles", {
        "accountRolePrefix": args.accountRolePrefix,
        "operatorRolePrefix": args.operatorRolePrefix,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRosaHcpOperatorRoles.
 */
export interface GetRosaHcpOperatorRolesArgs {
    accountRolePrefix?: string;
    operatorRolePrefix: string;
}

/**
 * A collection of values returned by getRosaHcpOperatorRoles.
 */
export interface GetRosaHcpOperatorRolesResult {
    readonly accountRolePrefix?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly operatorIamRoles: outputs.GetRosaHcpOperatorRolesOperatorIamRole[];
    readonly operatorRolePrefix: string;
}
export function getRosaHcpOperatorRolesOutput(args: GetRosaHcpOperatorRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRosaHcpOperatorRolesResult> {
    return pulumi.output(args).apply((a: any) => getRosaHcpOperatorRoles(a, opts))
}

/**
 * A collection of arguments for invoking getRosaHcpOperatorRoles.
 */
export interface GetRosaHcpOperatorRolesOutputArgs {
    accountRolePrefix?: pulumi.Input<string>;
    operatorRolePrefix: pulumi.Input<string>;
}
