// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getClusterRosaHcp(args: GetClusterRosaHcpArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterRosaHcpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rhcs:index/getClusterRosaHcp:getClusterRosaHcp", {
        "domainPrefix": args.domainPrefix,
        "id": args.id,
        "kmsKeyArn": args.kmsKeyArn,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getClusterRosaHcp.
 */
export interface GetClusterRosaHcpArgs {
    domainPrefix?: string;
    id: string;
    kmsKeyArn?: string;
}

/**
 * A collection of values returned by getClusterRosaHcp.
 */
export interface GetClusterRosaHcpResult {
    readonly adminCredentials: outputs.GetClusterRosaHcpAdminCredentials;
    readonly apiUrl: string;
    readonly availabilityZones: string[];
    readonly awsAccountId: string;
    readonly awsBillingAccountId: string;
    readonly awsSubnetIds: string[];
    readonly channelGroup: string;
    readonly cloudRegion: string;
    readonly computeMachineType: string;
    readonly consoleUrl: string;
    readonly createAdminUser: boolean;
    readonly currentVersion: string;
    readonly destroyTimeout: number;
    readonly disableWaitingInDestroy: boolean;
    readonly domain: string;
    readonly domainPrefix: string;
    readonly ec2MetadataHttpTokens: string;
    readonly etcdEncryption: boolean;
    readonly etcdKmsKeyArn: string;
    readonly externalId: string;
    readonly hostPrefix: number;
    readonly id: string;
    readonly kmsKeyArn?: string;
    readonly machineCidr: string;
    readonly name: string;
    readonly ocmProperties: {[key: string]: string};
    readonly podCidr: string;
    readonly private: boolean;
    readonly properties: {[key: string]: string};
    readonly proxy: outputs.GetClusterRosaHcpProxy;
    readonly replicas: number;
    readonly serviceCidr: string;
    readonly state: string;
    readonly sts: outputs.GetClusterRosaHcpSts;
    readonly tags: {[key: string]: string};
    readonly upgradeAcknowledgementsFor: string;
    readonly version: string;
    readonly waitForCreateComplete: boolean;
    readonly waitForStdComputeNodesComplete: boolean;
}
export function getClusterRosaHcpOutput(args: GetClusterRosaHcpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterRosaHcpResult> {
    return pulumi.output(args).apply((a: any) => getClusterRosaHcp(a, opts))
}

/**
 * A collection of arguments for invoking getClusterRosaHcp.
 */
export interface GetClusterRosaHcpOutputArgs {
    domainPrefix?: pulumi.Input<string>;
    id: pulumi.Input<string>;
    kmsKeyArn?: pulumi.Input<string>;
}
