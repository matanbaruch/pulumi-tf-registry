// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMachinePool(args: GetMachinePoolArgs, opts?: pulumi.InvokeOptions): Promise<GetMachinePoolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rhcs:index/getMachinePool:getMachinePool", {
        "cluster": args.cluster,
        "id": args.id,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getMachinePool.
 */
export interface GetMachinePoolArgs {
    cluster: string;
    id: string;
}

/**
 * A collection of values returned by getMachinePool.
 */
export interface GetMachinePoolResult {
    readonly autoscalingEnabled: boolean;
    readonly availabilityZone: string;
    readonly availabilityZones: string[];
    readonly awsAdditionalSecurityGroupIds: string[];
    readonly cluster: string;
    readonly diskSize: number;
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly machineType: string;
    readonly maxReplicas: number;
    readonly maxSpotPrice: number;
    readonly minReplicas: number;
    readonly multiAvailabilityZone: boolean;
    readonly name: string;
    readonly replicas: number;
    readonly subnetId: string;
    readonly subnetIds: string[];
    readonly taints: outputs.GetMachinePoolTaint[];
    readonly useSpotInstances: boolean;
}
export function getMachinePoolOutput(args: GetMachinePoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMachinePoolResult> {
    return pulumi.output(args).apply((a: any) => getMachinePool(a, opts))
}

/**
 * A collection of arguments for invoking getMachinePool.
 */
export interface GetMachinePoolOutputArgs {
    cluster: pulumi.Input<string>;
    id: pulumi.Input<string>;
}
