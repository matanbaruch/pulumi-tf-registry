// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rhcs:index/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * URL of the API server.
     */
    public /*out*/ readonly apiUrl!: pulumi.Output<string>;
    /**
     * Availability zones.
     */
    public readonly availabilityZones!: pulumi.Output<string[]>;
    /**
     * Identifier of the AWS access key.
     */
    public readonly awsAccessKeyId!: pulumi.Output<string | undefined>;
    /**
     * Identifier of the AWS account.
     */
    public readonly awsAccountId!: pulumi.Output<string | undefined>;
    /**
     * AWS additional compute security group ids.
     */
    public readonly awsAdditionalComputeSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * AWS additional control plane security group ids.
     */
    public readonly awsAdditionalControlPlaneSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * AWS additional infra security group ids.
     */
    public readonly awsAdditionalInfraSecurityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Provides private connectivity between VPCs, AWS services, and your on-premises networks, without exposing your traffic
     * to the public internet.
     */
    public readonly awsPrivateLink!: pulumi.Output<boolean>;
    /**
     * AWS access key.
     */
    public readonly awsSecretAccessKey!: pulumi.Output<string | undefined>;
    /**
     * AWS subnet IDs.
     */
    public readonly awsSubnetIds!: pulumi.Output<string[] | undefined>;
    /**
     * Enables customer cloud subscription.
     */
    public readonly ccsEnabled!: pulumi.Output<boolean>;
    /**
     * Cloud provider identifier, for example 'aws'.
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    /**
     * Cloud region identifier, for example 'us-east-1'.
     */
    public readonly cloudRegion!: pulumi.Output<string>;
    /**
     * Identifier of the machine type used by the compute nodes, for example `r5.xlarge`. Use the `ocm_machine_types` data
     * source to find the possible values.
     */
    public readonly computeMachineType!: pulumi.Output<string>;
    /**
     * Number of compute nodes of the cluster.
     */
    public readonly computeNodes!: pulumi.Output<number>;
    /**
     * URL of the console.
     */
    public /*out*/ readonly consoleUrl!: pulumi.Output<string>;
    /**
     * The domain prefix is optionally assigned by the user.It will appear in the Cluster's domain when the cluster is
     * provisioned. If not supplied, it will be auto generated
     */
    public readonly domainPrefix!: pulumi.Output<string>;
    /**
     * Length of the prefix of the subnet assigned to each node.
     */
    public readonly hostPrefix!: pulumi.Output<number>;
    /**
     * Block of IP addresses for nodes.
     */
    public readonly machineCidr!: pulumi.Output<string>;
    /**
     * Indicates if the cluster should be deployed to multiple availability zones. Default value is 'false'.
     */
    public readonly multiAz!: pulumi.Output<boolean>;
    /**
     * Name of the cluster.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Block of IP addresses for pods.
     */
    public readonly podCidr!: pulumi.Output<string>;
    /**
     * Product ID OSD or Rosa
     */
    public readonly product!: pulumi.Output<string>;
    /**
     * User defined properties.
     */
    public readonly properties!: pulumi.Output<{[key: string]: string}>;
    /**
     * proxy
     */
    public readonly proxy!: pulumi.Output<outputs.ClusterProxy | undefined>;
    /**
     * Block of IP addresses for services.
     */
    public readonly serviceCidr!: pulumi.Output<string>;
    /**
     * State of the cluster.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Identifier of the version of OpenShift, for example 'openshift-v4.1.0'.
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * Wait till the cluster is ready.
     */
    public readonly wait!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["availabilityZones"] = state ? state.availabilityZones : undefined;
            resourceInputs["awsAccessKeyId"] = state ? state.awsAccessKeyId : undefined;
            resourceInputs["awsAccountId"] = state ? state.awsAccountId : undefined;
            resourceInputs["awsAdditionalComputeSecurityGroupIds"] = state ? state.awsAdditionalComputeSecurityGroupIds : undefined;
            resourceInputs["awsAdditionalControlPlaneSecurityGroupIds"] = state ? state.awsAdditionalControlPlaneSecurityGroupIds : undefined;
            resourceInputs["awsAdditionalInfraSecurityGroupIds"] = state ? state.awsAdditionalInfraSecurityGroupIds : undefined;
            resourceInputs["awsPrivateLink"] = state ? state.awsPrivateLink : undefined;
            resourceInputs["awsSecretAccessKey"] = state ? state.awsSecretAccessKey : undefined;
            resourceInputs["awsSubnetIds"] = state ? state.awsSubnetIds : undefined;
            resourceInputs["ccsEnabled"] = state ? state.ccsEnabled : undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["cloudRegion"] = state ? state.cloudRegion : undefined;
            resourceInputs["computeMachineType"] = state ? state.computeMachineType : undefined;
            resourceInputs["computeNodes"] = state ? state.computeNodes : undefined;
            resourceInputs["consoleUrl"] = state ? state.consoleUrl : undefined;
            resourceInputs["domainPrefix"] = state ? state.domainPrefix : undefined;
            resourceInputs["hostPrefix"] = state ? state.hostPrefix : undefined;
            resourceInputs["machineCidr"] = state ? state.machineCidr : undefined;
            resourceInputs["multiAz"] = state ? state.multiAz : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["podCidr"] = state ? state.podCidr : undefined;
            resourceInputs["product"] = state ? state.product : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["proxy"] = state ? state.proxy : undefined;
            resourceInputs["serviceCidr"] = state ? state.serviceCidr : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["wait"] = state ? state.wait : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.cloudProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            if ((!args || args.cloudRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudRegion'");
            }
            if ((!args || args.product === undefined) && !opts.urn) {
                throw new Error("Missing required property 'product'");
            }
            resourceInputs["availabilityZones"] = args ? args.availabilityZones : undefined;
            resourceInputs["awsAccessKeyId"] = args?.awsAccessKeyId ? pulumi.secret(args.awsAccessKeyId) : undefined;
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["awsAdditionalComputeSecurityGroupIds"] = args ? args.awsAdditionalComputeSecurityGroupIds : undefined;
            resourceInputs["awsAdditionalControlPlaneSecurityGroupIds"] = args ? args.awsAdditionalControlPlaneSecurityGroupIds : undefined;
            resourceInputs["awsAdditionalInfraSecurityGroupIds"] = args ? args.awsAdditionalInfraSecurityGroupIds : undefined;
            resourceInputs["awsPrivateLink"] = args ? args.awsPrivateLink : undefined;
            resourceInputs["awsSecretAccessKey"] = args?.awsSecretAccessKey ? pulumi.secret(args.awsSecretAccessKey) : undefined;
            resourceInputs["awsSubnetIds"] = args ? args.awsSubnetIds : undefined;
            resourceInputs["ccsEnabled"] = args ? args.ccsEnabled : undefined;
            resourceInputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            resourceInputs["cloudRegion"] = args ? args.cloudRegion : undefined;
            resourceInputs["computeMachineType"] = args ? args.computeMachineType : undefined;
            resourceInputs["computeNodes"] = args ? args.computeNodes : undefined;
            resourceInputs["domainPrefix"] = args ? args.domainPrefix : undefined;
            resourceInputs["hostPrefix"] = args ? args.hostPrefix : undefined;
            resourceInputs["machineCidr"] = args ? args.machineCidr : undefined;
            resourceInputs["multiAz"] = args ? args.multiAz : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["podCidr"] = args ? args.podCidr : undefined;
            resourceInputs["product"] = args ? args.product : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["proxy"] = args ? args.proxy : undefined;
            resourceInputs["serviceCidr"] = args ? args.serviceCidr : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["wait"] = args ? args.wait : undefined;
            resourceInputs["apiUrl"] = undefined /*out*/;
            resourceInputs["consoleUrl"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["awsAccessKeyId", "awsSecretAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * URL of the API server.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Availability zones.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the AWS access key.
     */
    awsAccessKeyId?: pulumi.Input<string>;
    /**
     * Identifier of the AWS account.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * AWS additional compute security group ids.
     */
    awsAdditionalComputeSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS additional control plane security group ids.
     */
    awsAdditionalControlPlaneSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS additional infra security group ids.
     */
    awsAdditionalInfraSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Provides private connectivity between VPCs, AWS services, and your on-premises networks, without exposing your traffic
     * to the public internet.
     */
    awsPrivateLink?: pulumi.Input<boolean>;
    /**
     * AWS access key.
     */
    awsSecretAccessKey?: pulumi.Input<string>;
    /**
     * AWS subnet IDs.
     */
    awsSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables customer cloud subscription.
     */
    ccsEnabled?: pulumi.Input<boolean>;
    /**
     * Cloud provider identifier, for example 'aws'.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * Cloud region identifier, for example 'us-east-1'.
     */
    cloudRegion?: pulumi.Input<string>;
    /**
     * Identifier of the machine type used by the compute nodes, for example `r5.xlarge`. Use the `ocm_machine_types` data
     * source to find the possible values.
     */
    computeMachineType?: pulumi.Input<string>;
    /**
     * Number of compute nodes of the cluster.
     */
    computeNodes?: pulumi.Input<number>;
    /**
     * URL of the console.
     */
    consoleUrl?: pulumi.Input<string>;
    /**
     * The domain prefix is optionally assigned by the user.It will appear in the Cluster's domain when the cluster is
     * provisioned. If not supplied, it will be auto generated
     */
    domainPrefix?: pulumi.Input<string>;
    /**
     * Length of the prefix of the subnet assigned to each node.
     */
    hostPrefix?: pulumi.Input<number>;
    /**
     * Block of IP addresses for nodes.
     */
    machineCidr?: pulumi.Input<string>;
    /**
     * Indicates if the cluster should be deployed to multiple availability zones. Default value is 'false'.
     */
    multiAz?: pulumi.Input<boolean>;
    /**
     * Name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Block of IP addresses for pods.
     */
    podCidr?: pulumi.Input<string>;
    /**
     * Product ID OSD or Rosa
     */
    product?: pulumi.Input<string>;
    /**
     * User defined properties.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * proxy
     */
    proxy?: pulumi.Input<inputs.ClusterProxy>;
    /**
     * Block of IP addresses for services.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * State of the cluster.
     */
    state?: pulumi.Input<string>;
    /**
     * Identifier of the version of OpenShift, for example 'openshift-v4.1.0'.
     */
    version?: pulumi.Input<string>;
    /**
     * Wait till the cluster is ready.
     */
    wait?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Availability zones.
     */
    availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the AWS access key.
     */
    awsAccessKeyId?: pulumi.Input<string>;
    /**
     * Identifier of the AWS account.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * AWS additional compute security group ids.
     */
    awsAdditionalComputeSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS additional control plane security group ids.
     */
    awsAdditionalControlPlaneSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS additional infra security group ids.
     */
    awsAdditionalInfraSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Provides private connectivity between VPCs, AWS services, and your on-premises networks, without exposing your traffic
     * to the public internet.
     */
    awsPrivateLink?: pulumi.Input<boolean>;
    /**
     * AWS access key.
     */
    awsSecretAccessKey?: pulumi.Input<string>;
    /**
     * AWS subnet IDs.
     */
    awsSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables customer cloud subscription.
     */
    ccsEnabled?: pulumi.Input<boolean>;
    /**
     * Cloud provider identifier, for example 'aws'.
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Cloud region identifier, for example 'us-east-1'.
     */
    cloudRegion: pulumi.Input<string>;
    /**
     * Identifier of the machine type used by the compute nodes, for example `r5.xlarge`. Use the `ocm_machine_types` data
     * source to find the possible values.
     */
    computeMachineType?: pulumi.Input<string>;
    /**
     * Number of compute nodes of the cluster.
     */
    computeNodes?: pulumi.Input<number>;
    /**
     * The domain prefix is optionally assigned by the user.It will appear in the Cluster's domain when the cluster is
     * provisioned. If not supplied, it will be auto generated
     */
    domainPrefix?: pulumi.Input<string>;
    /**
     * Length of the prefix of the subnet assigned to each node.
     */
    hostPrefix?: pulumi.Input<number>;
    /**
     * Block of IP addresses for nodes.
     */
    machineCidr?: pulumi.Input<string>;
    /**
     * Indicates if the cluster should be deployed to multiple availability zones. Default value is 'false'.
     */
    multiAz?: pulumi.Input<boolean>;
    /**
     * Name of the cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * Block of IP addresses for pods.
     */
    podCidr?: pulumi.Input<string>;
    /**
     * Product ID OSD or Rosa
     */
    product: pulumi.Input<string>;
    /**
     * User defined properties.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * proxy
     */
    proxy?: pulumi.Input<inputs.ClusterProxy>;
    /**
     * Block of IP addresses for services.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * Identifier of the version of OpenShift, for example 'openshift-v4.1.0'.
     */
    version?: pulumi.Input<string>;
    /**
     * Wait till the cluster is ready.
     */
    wait?: pulumi.Input<boolean>;
}
