// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getArea(args: GetAreaArgs, opts?: pulumi.InvokeOptions): Promise<GetAreaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuredevops:index/getArea:getArea", {
        "fetchChildren": args.fetchChildren,
        "id": args.id,
        "path": args.path,
        "projectId": args.projectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getArea.
 */
export interface GetAreaArgs {
    fetchChildren?: boolean;
    id?: string;
    path?: string;
    projectId: string;
    timeouts?: inputs.GetAreaTimeouts;
}

/**
 * A collection of values returned by getArea.
 */
export interface GetAreaResult {
    readonly childrens: outputs.GetAreaChildren[];
    readonly fetchChildren?: boolean;
    readonly hasChildren: boolean;
    readonly id: string;
    readonly name: string;
    readonly path: string;
    readonly projectId: string;
    readonly timeouts?: outputs.GetAreaTimeouts;
}
export function getAreaOutput(args: GetAreaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAreaResult> {
    return pulumi.output(args).apply((a: any) => getArea(a, opts))
}

/**
 * A collection of arguments for invoking getArea.
 */
export interface GetAreaOutputArgs {
    fetchChildren?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetAreaTimeoutsArgs>;
}
