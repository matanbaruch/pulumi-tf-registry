// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AgentPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface AgentQueueTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface AreaPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyAutoReviewersSettings {
    autoReviewerIds: pulumi.Input<pulumi.Input<string>[]>;
    message?: pulumi.Input<string>;
    minimumNumberOfReviewers?: pulumi.Input<number>;
    pathFilters?: pulumi.Input<pulumi.Input<string>[]>;
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyAutoReviewersSettingsScope>[]>;
    submitterCanVote?: pulumi.Input<boolean>;
}

export interface BranchPolicyAutoReviewersSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyAutoReviewersTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyBuildValidationSettings {
    buildDefinitionId: pulumi.Input<number>;
    displayName: pulumi.Input<string>;
    filenamePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    manualQueueOnly?: pulumi.Input<boolean>;
    queueOnSourceUpdateOnly?: pulumi.Input<boolean>;
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyBuildValidationSettingsScope>[]>;
    validDuration?: pulumi.Input<number>;
}

export interface BranchPolicyBuildValidationSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyBuildValidationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyCommentResolutionSettings {
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyCommentResolutionSettingsScope>[]>;
}

export interface BranchPolicyCommentResolutionSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyCommentResolutionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyMergeTypesSettings {
    allowBasicNoFastForward?: pulumi.Input<boolean>;
    allowRebaseAndFastForward?: pulumi.Input<boolean>;
    allowRebaseWithMerge?: pulumi.Input<boolean>;
    allowSquash?: pulumi.Input<boolean>;
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyMergeTypesSettingsScope>[]>;
}

export interface BranchPolicyMergeTypesSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyMergeTypesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyMinReviewersSettings {
    allowCompletionWithRejectsOrWaits?: pulumi.Input<boolean>;
    lastPusherCannotApprove?: pulumi.Input<boolean>;
    onLastIterationRequireVote?: pulumi.Input<boolean>;
    onPushResetAllVotes?: pulumi.Input<boolean>;
    onPushResetApprovedVotes?: pulumi.Input<boolean>;
    reviewerCount?: pulumi.Input<number>;
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyMinReviewersSettingsScope>[]>;
    submitterCanVote?: pulumi.Input<boolean>;
}

export interface BranchPolicyMinReviewersSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyMinReviewersTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyStatusCheckSettings {
    applicability?: pulumi.Input<string>;
    authorId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    filenamePatterns?: pulumi.Input<pulumi.Input<string>[]>;
    genre?: pulumi.Input<string>;
    invalidateOnUpdate?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyStatusCheckSettingsScope>[]>;
}

export interface BranchPolicyStatusCheckSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyStatusCheckTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BranchPolicyWorkItemLinkingSettings {
    scopes: pulumi.Input<pulumi.Input<inputs.BranchPolicyWorkItemLinkingSettingsScope>[]>;
}

export interface BranchPolicyWorkItemLinkingSettingsScope {
    matchType?: pulumi.Input<string>;
    repositoryId?: pulumi.Input<string>;
    repositoryRef?: pulumi.Input<string>;
}

export interface BranchPolicyWorkItemLinkingTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BuildDefinitionCiTrigger {
    override?: pulumi.Input<inputs.BuildDefinitionCiTriggerOverride>;
    useYaml?: pulumi.Input<boolean>;
}

export interface BuildDefinitionCiTriggerOverride {
    batch?: pulumi.Input<boolean>;
    branchFilters?: pulumi.Input<pulumi.Input<inputs.BuildDefinitionCiTriggerOverrideBranchFilter>[]>;
    maxConcurrentBuildsPerBranch?: pulumi.Input<number>;
    pathFilters?: pulumi.Input<pulumi.Input<inputs.BuildDefinitionCiTriggerOverridePathFilter>[]>;
    pollingInterval?: pulumi.Input<number>;
    pollingJobId?: pulumi.Input<string>;
}

export interface BuildDefinitionCiTriggerOverrideBranchFilter {
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    includes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildDefinitionCiTriggerOverridePathFilter {
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    includes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildDefinitionFeature {
    skipFirstRun?: pulumi.Input<boolean>;
}

export interface BuildDefinitionPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BuildDefinitionPullRequestTrigger {
    commentRequired?: pulumi.Input<string>;
    forks: pulumi.Input<inputs.BuildDefinitionPullRequestTriggerForks>;
    initialBranch?: pulumi.Input<string>;
    override?: pulumi.Input<inputs.BuildDefinitionPullRequestTriggerOverride>;
    useYaml?: pulumi.Input<boolean>;
}

export interface BuildDefinitionPullRequestTriggerForks {
    enabled: pulumi.Input<boolean>;
    shareSecrets: pulumi.Input<boolean>;
}

export interface BuildDefinitionPullRequestTriggerOverride {
    autoCancel?: pulumi.Input<boolean>;
    branchFilters?: pulumi.Input<pulumi.Input<inputs.BuildDefinitionPullRequestTriggerOverrideBranchFilter>[]>;
    pathFilters?: pulumi.Input<pulumi.Input<inputs.BuildDefinitionPullRequestTriggerOverridePathFilter>[]>;
}

export interface BuildDefinitionPullRequestTriggerOverrideBranchFilter {
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    includes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildDefinitionPullRequestTriggerOverridePathFilter {
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    includes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildDefinitionRepository {
    branchName?: pulumi.Input<string>;
    githubEnterpriseUrl?: pulumi.Input<string>;
    repoId: pulumi.Input<string>;
    repoType: pulumi.Input<string>;
    reportBuildStatus?: pulumi.Input<boolean>;
    serviceConnectionId?: pulumi.Input<string>;
    ymlPath: pulumi.Input<string>;
}

export interface BuildDefinitionSchedule {
    branchFilters?: pulumi.Input<pulumi.Input<inputs.BuildDefinitionScheduleBranchFilter>[]>;
    daysToBuilds: pulumi.Input<pulumi.Input<string>[]>;
    scheduleJobId?: pulumi.Input<string>;
    scheduleOnlyWithChanges?: pulumi.Input<boolean>;
    startHours?: pulumi.Input<number>;
    startMinutes?: pulumi.Input<number>;
    timeZone?: pulumi.Input<string>;
}

export interface BuildDefinitionScheduleBranchFilter {
    excludes?: pulumi.Input<pulumi.Input<string>[]>;
    includes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BuildDefinitionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BuildDefinitionVariable {
    allowOverride?: pulumi.Input<boolean>;
    isSecret?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    secretValue?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface BuildFolderPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface BuildFolderTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CheckApprovalTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CheckBranchControlTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CheckBusinessHoursTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CheckExclusiveLockTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface CheckRequiredTemplateRequiredTemplate {
    repositoryName: pulumi.Input<string>;
    repositoryRef: pulumi.Input<string>;
    repositoryType?: pulumi.Input<string>;
    templatePath: pulumi.Input<string>;
}

export interface CheckRequiredTemplateTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ElasticPoolTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface EnvironmentResourceKubernetesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface EnvironmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FeedFeature {
    permanentDelete?: pulumi.Input<boolean>;
    restore?: pulumi.Input<boolean>;
}

export interface FeedPermissionTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface FeedTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GetAgentPoolTimeouts {
    read?: string;
}

export interface GetAgentPoolTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAgentPoolsTimeouts {
    read?: string;
}

export interface GetAgentPoolsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAgentQueueTimeouts {
    read?: string;
}

export interface GetAgentQueueTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetAreaTimeouts {
    read?: string;
}

export interface GetAreaTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetBuildDefinitionTimeouts {
    read?: string;
}

export interface GetBuildDefinitionTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetEnvironmentTimeouts {
    read?: string;
}

export interface GetEnvironmentTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetFeedTimeouts {
    read?: string;
}

export interface GetFeedTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGitRepositoriesTimeouts {
    read?: string;
}

export interface GetGitRepositoriesTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGitRepositoryTimeouts {
    read?: string;
}

export interface GetGitRepositoryTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGroupTimeouts {
    read?: string;
}

export interface GetGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetGroupsTimeouts {
    read?: string;
}

export interface GetGroupsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIdentityGroupTimeouts {
    read?: string;
}

export interface GetIdentityGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIdentityGroupsTimeouts {
    read?: string;
}

export interface GetIdentityGroupsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIdentityUserTimeouts {
    read?: string;
}

export interface GetIdentityUserTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetIterationTimeouts {
    read?: string;
}

export interface GetIterationTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetProjectTimeouts {
    read?: string;
}

export interface GetProjectTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetProjectsTimeouts {
    read?: string;
}

export interface GetProjectsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetSecurityroleDefinitionsTimeouts {
    read?: string;
}

export interface GetSecurityroleDefinitionsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServiceendpointAzurecrTimeouts {
    read?: string;
}

export interface GetServiceendpointAzurecrTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServiceendpointAzurermTimeouts {
    read?: string;
}

export interface GetServiceendpointAzurermTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServiceendpointGithubTimeouts {
    read?: string;
}

export interface GetServiceendpointGithubTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServiceendpointNpmTimeouts {
    read?: string;
}

export interface GetServiceendpointNpmTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetServiceendpointSonarcloudTimeouts {
    read?: string;
}

export interface GetServiceendpointSonarcloudTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetTeamTimeouts {
    read?: string;
}

export interface GetTeamTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetTeamsTimeouts {
    read?: string;
}

export interface GetTeamsTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetUsersFeatures {
    concurrentWorkers?: number;
}

export interface GetUsersFeaturesArgs {
    concurrentWorkers?: pulumi.Input<number>;
}

export interface GetUsersTimeouts {
    read?: string;
}

export interface GetUsersTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GetVariableGroupTimeouts {
    read?: string;
}

export interface GetVariableGroupTimeoutsArgs {
    read?: pulumi.Input<string>;
}

export interface GitPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GitRepositoryBranchTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
}

export interface GitRepositoryFileTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GitRepositoryInitialization {
    initType: pulumi.Input<string>;
    serviceConnectionId?: pulumi.Input<string>;
    sourceType?: pulumi.Input<string>;
    sourceUrl?: pulumi.Input<string>;
}

export interface GitRepositoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GroupEntitlementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GroupMembershipTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface GroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface IterationPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface LibraryPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface PipelineAuthorizationTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProjectFeaturesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProjectPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProjectPipelineSettingsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ProjectTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyAuthorEmailPatternTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyCaseEnforcementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyCheckCredentialsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyFilePathPatternTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyMaxFileSizeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyMaxPathLengthTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface RepositoryPolicyReservedNamesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface SecurityroleAssignmentTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointArgocdAuthenticationBasic {
    /**
     * The ArgoCD password.
     */
    password: pulumi.Input<string>;
    /**
     * The ArgoCD user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointArgocdAuthenticationToken {
    /**
     * The ArgoCD access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointArgocdTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointArtifactoryAuthenticationBasic {
    /**
     * The Artifactory password.
     */
    password: pulumi.Input<string>;
    /**
     * The Artifactory user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointArtifactoryAuthenticationToken {
    /**
     * The Artifactory access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointArtifactoryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointAwsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointAzurecrCredentials {
    /**
     * The service principal id which should be used.
     */
    serviceprincipalid: pulumi.Input<string>;
}

export interface ServiceendpointAzurecrTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointAzuredevopsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointAzurermCredentials {
    /**
     * The service principal id which should be used.
     */
    serviceprincipalid: pulumi.Input<string>;
    /**
     * The service principal secret which should be used.
     */
    serviceprincipalkey?: pulumi.Input<string>;
}

export interface ServiceendpointAzurermFeatures {
    /**
     * Whether or not to validate connection with azure after create or update operations
     */
    validate?: pulumi.Input<boolean>;
}

export interface ServiceendpointAzurermTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointBitbucketTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointDockerregistryTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointExternaltfsAuthPersonal {
    /**
     * Personal access tokens are applicable only for connections targeting Azure DevOps organization or TFS 2017 (and higher)
     */
    personalAccessToken: pulumi.Input<string>;
}

export interface ServiceendpointExternaltfsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointGcpTerraformTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointGenericGitTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointGenericTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointGithubAuthOauth {
    oauthConfigurationId: pulumi.Input<string>;
}

export interface ServiceendpointGithubAuthPersonal {
    /**
     * The GitHub personal access token which should be used.
     */
    personalAccessToken: pulumi.Input<string>;
}

export interface ServiceendpointGithubEnterpriseAuthPersonal {
    /**
     * The GitHub personal access token which should be used.
     */
    personalAccessToken: pulumi.Input<string>;
}

export interface ServiceendpointGithubEnterpriseTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointGithubTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointIncomingwebhookTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointJenkinsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointJfrogArtifactoryV2AuthenticationBasic {
    /**
     * The JFrog Artifactory password.
     */
    password: pulumi.Input<string>;
    /**
     * The JFrog Artifactory user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointJfrogArtifactoryV2AuthenticationToken {
    /**
     * The JFrog Artifactory access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointJfrogArtifactoryV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointJfrogDistributionV2AuthenticationBasic {
    /**
     * The JFrog Artifactory password.
     */
    password: pulumi.Input<string>;
    /**
     * The JFrog Artifactory user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointJfrogDistributionV2AuthenticationToken {
    /**
     * The JFrog Artifactory access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointJfrogDistributionV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointJfrogPlatformV2AuthenticationBasic {
    /**
     * The JFrog Artifactory password.
     */
    password: pulumi.Input<string>;
    /**
     * The JFrog Artifactory user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointJfrogPlatformV2AuthenticationToken {
    /**
     * The JFrog Artifactory access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointJfrogPlatformV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointJfrogXrayV2AuthenticationBasic {
    /**
     * The JFrog Artifactory password.
     */
    password: pulumi.Input<string>;
    /**
     * The JFrog Artifactory user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointJfrogXrayV2AuthenticationToken {
    /**
     * The JFrog Artifactory access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointJfrogXrayV2Timeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointKubernetesAzureSubscription {
    /**
     * type of azure cloud: AzureCloud
     */
    azureEnvironment?: pulumi.Input<string>;
    /**
     * Enable Cluster Admin
     */
    clusterAdmin?: pulumi.Input<boolean>;
    /**
     * name of aks-resource
     */
    clusterName: pulumi.Input<string>;
    /**
     * accessed namespace
     */
    namespace?: pulumi.Input<string>;
    /**
     * id of resourcegroup
     */
    resourcegroupId: pulumi.Input<string>;
    /**
     * id of azure subscription
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * name of azure subscription
     */
    subscriptionName: pulumi.Input<string>;
    /**
     * id of aad-tenant
     */
    tenantId: pulumi.Input<string>;
}

export interface ServiceendpointKubernetesKubeconfig {
    /**
     * Enable this if your authentication uses untrusted certificates
     */
    acceptUntrustedCerts?: pulumi.Input<boolean>;
    /**
     * Context of your cluster
     */
    clusterContext?: pulumi.Input<string>;
    /**
     * Content of the kubeconfig file. The configuration information in your kubeconfig file allows Kubernetes clients to talk to your Kubernetes API servers. This file is used by kubectl and all supported Kubernetes clients.
     */
    kubeConfig: pulumi.Input<string>;
}

export interface ServiceendpointKubernetesServiceAccount {
    /**
     * Secret cert
     */
    caCert: pulumi.Input<string>;
    /**
     * Secret token
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointKubernetesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointMavenAuthenticationBasic {
    /**
     * The Maven password.
     */
    password: pulumi.Input<string>;
    /**
     * The Maven user name.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointMavenAuthenticationToken {
    /**
     * The Maven access token.
     */
    token: pulumi.Input<string>;
}

export interface ServiceendpointMavenTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointNexusTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointNpmTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointNugetTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointOctopusdeployTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointRunpipelineAuthPersonal {
    /**
     * The Azure DevOps personal access token which should be used.
     */
    personalAccessToken: pulumi.Input<string>;
}

export interface ServiceendpointRunpipelineTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointServicefabricAzureActiveDirectory {
    /**
     * Password for the Azure Active Directory account.
     */
    password: pulumi.Input<string>;
    /**
     * The common name(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple common names with a comma (',')
     */
    serverCertificateCommonName?: pulumi.Input<string>;
    serverCertificateLookup: pulumi.Input<string>;
    /**
     * The thumbprint(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple thumbprints with a comma (',')
     */
    serverCertificateThumbprint?: pulumi.Input<string>;
    /**
     * Specify an Azure Active Directory account.
     */
    username: pulumi.Input<string>;
}

export interface ServiceendpointServicefabricCertificate {
    /**
     * Base64 encoding of the cluster's client certificate file.
     */
    clientCertificate: pulumi.Input<string>;
    /**
     * Password for the certificate.
     */
    clientCertificatePassword?: pulumi.Input<string>;
    /**
     * The common name(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple common names with a comma (',')
     */
    serverCertificateCommonName?: pulumi.Input<string>;
    serverCertificateLookup: pulumi.Input<string>;
    /**
     * The thumbprint(s) of the cluster's certificate(s). This is used to verify the identity of the cluster. This value overrides the publish profile. Separate multiple thumbprints with a comma (',')
     */
    serverCertificateThumbprint?: pulumi.Input<string>;
}

export interface ServiceendpointServicefabricNone {
    /**
     * Fully qualified domain SPN for gMSA account. This is applicable only if `unsecured` option is disabled.
     */
    clusterSpn?: pulumi.Input<string>;
    /**
     * Skip using windows security for authentication.
     */
    unsecured?: pulumi.Input<boolean>;
}

export interface ServiceendpointServicefabricTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointSonarcloudTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointSonarqubeTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServiceendpointSshTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicehookPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface ServicehookStorageQueuePipelinesRunStateChangedEvent {
    /**
     * The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
     */
    pipelineId?: pulumi.Input<string>;
    /**
     * Which run result should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all results will trigger the event
     */
    runResultFilter?: pulumi.Input<string>;
    /**
     * Which run state should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all states will trigger the event
     */
    runStateFilter?: pulumi.Input<string>;
}

export interface ServicehookStorageQueuePipelinesStageStateChangedEvent {
    /**
     * The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
     */
    pipelineId?: pulumi.Input<string>;
    /**
     * Which stage should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all stages will trigger the event
     */
    stageName?: pulumi.Input<string>;
    /**
     * Which stage result should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all results will trigger the event
     */
    stageResultFilter?: pulumi.Input<string>;
    /**
     * Which stage state should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all states will trigger the event
     */
    stageStateFilter?: pulumi.Input<string>;
}

export interface ServicehookStorageQueuePipelinesTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TaggingPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TeamAdministratorsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TeamMembersTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface TeamTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface UserEntitlementTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VariableGroupKeyVault {
    name: pulumi.Input<string>;
    searchDepth?: pulumi.Input<number>;
    serviceEndpointId: pulumi.Input<string>;
}

export interface VariableGroupPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VariableGroupTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface VariableGroupVariable {
    contentType?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    expires?: pulumi.Input<string>;
    isSecret?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    secretValue?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface WikiTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WorkitemTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}

export interface WorkitemqueryPermissionsTimeouts {
    create?: pulumi.Input<string>;
    delete?: pulumi.Input<string>;
    read?: pulumi.Input<string>;
    update?: pulumi.Input<string>;
}
