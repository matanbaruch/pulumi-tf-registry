// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getGitRepositories(args?: GetGitRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetGitRepositoriesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuredevops:index/getGitRepositories:getGitRepositories", {
        "id": args.id,
        "includeHidden": args.includeHidden,
        "name": args.name,
        "projectId": args.projectId,
        "timeouts": args.timeouts,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getGitRepositories.
 */
export interface GetGitRepositoriesArgs {
    id?: string;
    includeHidden?: boolean;
    name?: string;
    projectId?: string;
    timeouts?: inputs.GetGitRepositoriesTimeouts;
}

/**
 * A collection of values returned by getGitRepositories.
 */
export interface GetGitRepositoriesResult {
    readonly id: string;
    readonly includeHidden?: boolean;
    readonly name?: string;
    readonly projectId?: string;
    readonly repositories: outputs.GetGitRepositoriesRepository[];
    readonly timeouts?: outputs.GetGitRepositoriesTimeouts;
}
export function getGitRepositoriesOutput(args?: GetGitRepositoriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGitRepositoriesResult> {
    return pulumi.output(args).apply((a: any) => getGitRepositories(a, opts))
}

/**
 * A collection of arguments for invoking getGitRepositories.
 */
export interface GetGitRepositoriesOutputArgs {
    id?: pulumi.Input<string>;
    includeHidden?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetGitRepositoriesTimeoutsArgs>;
}
