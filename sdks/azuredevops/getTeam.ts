// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getTeam(args: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuredevops:index/getTeam:getTeam", {
        "id": args.id,
        "name": args.name,
        "projectId": args.projectId,
        "timeouts": args.timeouts,
        "top": args.top,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    id?: string;
    name: string;
    projectId: string;
    timeouts?: inputs.GetTeamTimeouts;
    top?: number;
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    readonly administrators: string[];
    readonly description: string;
    readonly descriptor: string;
    readonly id: string;
    readonly members: string[];
    readonly name: string;
    readonly projectId: string;
    readonly timeouts?: outputs.GetTeamTimeouts;
    readonly top?: number;
}
export function getTeamOutput(args: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply((a: any) => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.GetTeamTimeoutsArgs>;
    top?: pulumi.Input<number>;
}
