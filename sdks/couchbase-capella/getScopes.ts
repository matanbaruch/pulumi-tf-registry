// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getScopes(args: GetScopesArgs, opts?: pulumi.InvokeOptions): Promise<GetScopesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("couchbase-capella:index/getScopes:getScopes", {
        "bucketId": args.bucketId,
        "clusterId": args.clusterId,
        "organizationId": args.organizationId,
        "projectId": args.projectId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getScopes.
 */
export interface GetScopesArgs {
    bucketId: string;
    clusterId: string;
    organizationId: string;
    projectId: string;
}

/**
 * A collection of values returned by getScopes.
 */
export interface GetScopesResult {
    readonly bucketId: string;
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly scopes: outputs.GetScopesScope[];
}
export function getScopesOutput(args: GetScopesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScopesResult> {
    return pulumi.output(args).apply((a: any) => getScopes(a, opts))
}

/**
 * A collection of arguments for invoking getScopes.
 */
export interface GetScopesOutputArgs {
    bucketId: pulumi.Input<string>;
    clusterId: pulumi.Input<string>;
    organizationId: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
}
