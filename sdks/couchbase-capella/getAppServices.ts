// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getAppServices(args: GetAppServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetAppServicesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("couchbase-capella:index/getAppServices:getAppServices", {
        "organizationId": args.organizationId,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAppServices.
 */
export interface GetAppServicesArgs {
    organizationId: string;
}

/**
 * A collection of values returned by getAppServices.
 */
export interface GetAppServicesResult {
    readonly datas: outputs.GetAppServicesData[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly organizationId: string;
}
export function getAppServicesOutput(args: GetAppServicesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppServicesResult> {
    return pulumi.output(args).apply((a: any) => getAppServices(a, opts))
}

/**
 * A collection of arguments for invoking getAppServices.
 */
export interface GetAppServicesOutputArgs {
    organizationId: pulumi.Input<string>;
}
