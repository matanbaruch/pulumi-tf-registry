// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRaftAutopilotState(args?: GetRaftAutopilotStateArgs, opts?: pulumi.InvokeOptions): Promise<GetRaftAutopilotStateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getRaftAutopilotState:getRaftAutopilotState", {
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getRaftAutopilotState.
 */
export interface GetRaftAutopilotStateArgs {
    id?: string;
    namespace?: string;
}

/**
 * A collection of values returned by getRaftAutopilotState.
 */
export interface GetRaftAutopilotStateResult {
    readonly failureTolerance: number;
    readonly healthy: boolean;
    readonly id: string;
    readonly leader: string;
    readonly namespace?: string;
    readonly optimisticFailureTolerance: number;
    readonly redundancyZones: {[key: string]: string};
    readonly redundancyZonesJson: string;
    readonly servers: {[key: string]: string};
    readonly serversJson: string;
    readonly upgradeInfo: {[key: string]: string};
    readonly upgradeInfoJson: string;
    readonly voters: string[];
}
export function getRaftAutopilotStateOutput(args?: GetRaftAutopilotStateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRaftAutopilotStateResult> {
    return pulumi.output(args).apply((a: any) => getRaftAutopilotState(a, opts))
}

/**
 * A collection of arguments for invoking getRaftAutopilotState.
 */
export interface GetRaftAutopilotStateOutputArgs {
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
