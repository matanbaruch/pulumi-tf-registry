// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getLdapDynamicCredentials(args: GetLdapDynamicCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetLdapDynamicCredentialsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getLdapDynamicCredentials:getLdapDynamicCredentials", {
        "id": args.id,
        "mount": args.mount,
        "namespace": args.namespace,
        "roleName": args.roleName,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getLdapDynamicCredentials.
 */
export interface GetLdapDynamicCredentialsArgs {
    id?: string;
    mount: string;
    namespace?: string;
    roleName: string;
}

/**
 * A collection of values returned by getLdapDynamicCredentials.
 */
export interface GetLdapDynamicCredentialsResult {
    readonly distinguishedNames: string[];
    readonly id: string;
    readonly leaseDuration: number;
    readonly leaseId: string;
    readonly leaseRenewable: boolean;
    readonly mount: string;
    readonly namespace?: string;
    readonly password: string;
    readonly roleName: string;
    readonly username: string;
}
export function getLdapDynamicCredentialsOutput(args: GetLdapDynamicCredentialsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLdapDynamicCredentialsResult> {
    return pulumi.output(args).apply((a: any) => getLdapDynamicCredentials(a, opts))
}

/**
 * A collection of arguments for invoking getLdapDynamicCredentials.
 */
export interface GetLdapDynamicCredentialsOutputArgs {
    id?: pulumi.Input<string>;
    mount: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
}
