// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PkiSecretBackendCrlConfig extends pulumi.CustomResource {
    /**
     * Get an existing PkiSecretBackendCrlConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PkiSecretBackendCrlConfigState, opts?: pulumi.CustomResourceOptions): PkiSecretBackendCrlConfig {
        return new PkiSecretBackendCrlConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/pkiSecretBackendCrlConfig:PkiSecretBackendCrlConfig';

    /**
     * Returns true if the given object is an instance of PkiSecretBackendCrlConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PkiSecretBackendCrlConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PkiSecretBackendCrlConfig.__pulumiType;
    }

    /**
     * Enables or disables periodic rebuilding of the CRL upon expiry.
     */
    public readonly autoRebuild!: pulumi.Output<boolean | undefined>;
    /**
     * Grace period before CRL expiry to attempt rebuild of CRL.
     */
    public readonly autoRebuildGracePeriod!: pulumi.Output<string>;
    /**
     * The path of the PKI secret backend the resource belongs to.
     */
    public readonly backend!: pulumi.Output<string>;
    /**
     * Enable cross-cluster revocation request queues.
     */
    public readonly crossClusterRevocation!: pulumi.Output<boolean>;
    /**
     * Interval to check for new revocations on, to regenerate the delta CRL.
     */
    public readonly deltaRebuildInterval!: pulumi.Output<string>;
    /**
     * Disables or enables CRL building
     */
    public readonly disable!: pulumi.Output<boolean | undefined>;
    /**
     * Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.
     */
    public readonly enableDelta!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the time until expiration.
     */
    public readonly expiry!: pulumi.Output<string | undefined>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Disables or enables the OCSP responder in Vault.
     */
    public readonly ocspDisable!: pulumi.Output<boolean | undefined>;
    /**
     * The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.
     */
    public readonly ocspExpiry!: pulumi.Output<string>;
    /**
     * Enables unified CRL and OCSP building.
     */
    public readonly unifiedCrl!: pulumi.Output<boolean>;
    /**
     * Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.
     */
    public readonly unifiedCrlOnExistingPaths!: pulumi.Output<boolean>;

    /**
     * Create a PkiSecretBackendCrlConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PkiSecretBackendCrlConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PkiSecretBackendCrlConfigArgs | PkiSecretBackendCrlConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PkiSecretBackendCrlConfigState | undefined;
            resourceInputs["autoRebuild"] = state ? state.autoRebuild : undefined;
            resourceInputs["autoRebuildGracePeriod"] = state ? state.autoRebuildGracePeriod : undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["crossClusterRevocation"] = state ? state.crossClusterRevocation : undefined;
            resourceInputs["deltaRebuildInterval"] = state ? state.deltaRebuildInterval : undefined;
            resourceInputs["disable"] = state ? state.disable : undefined;
            resourceInputs["enableDelta"] = state ? state.enableDelta : undefined;
            resourceInputs["expiry"] = state ? state.expiry : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["ocspDisable"] = state ? state.ocspDisable : undefined;
            resourceInputs["ocspExpiry"] = state ? state.ocspExpiry : undefined;
            resourceInputs["unifiedCrl"] = state ? state.unifiedCrl : undefined;
            resourceInputs["unifiedCrlOnExistingPaths"] = state ? state.unifiedCrlOnExistingPaths : undefined;
        } else {
            const args = argsOrState as PkiSecretBackendCrlConfigArgs | undefined;
            if ((!args || args.backend === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backend'");
            }
            resourceInputs["autoRebuild"] = args ? args.autoRebuild : undefined;
            resourceInputs["autoRebuildGracePeriod"] = args ? args.autoRebuildGracePeriod : undefined;
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["crossClusterRevocation"] = args ? args.crossClusterRevocation : undefined;
            resourceInputs["deltaRebuildInterval"] = args ? args.deltaRebuildInterval : undefined;
            resourceInputs["disable"] = args ? args.disable : undefined;
            resourceInputs["enableDelta"] = args ? args.enableDelta : undefined;
            resourceInputs["expiry"] = args ? args.expiry : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["ocspDisable"] = args ? args.ocspDisable : undefined;
            resourceInputs["ocspExpiry"] = args ? args.ocspExpiry : undefined;
            resourceInputs["unifiedCrl"] = args ? args.unifiedCrl : undefined;
            resourceInputs["unifiedCrlOnExistingPaths"] = args ? args.unifiedCrlOnExistingPaths : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PkiSecretBackendCrlConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PkiSecretBackendCrlConfig resources.
 */
export interface PkiSecretBackendCrlConfigState {
    /**
     * Enables or disables periodic rebuilding of the CRL upon expiry.
     */
    autoRebuild?: pulumi.Input<boolean>;
    /**
     * Grace period before CRL expiry to attempt rebuild of CRL.
     */
    autoRebuildGracePeriod?: pulumi.Input<string>;
    /**
     * The path of the PKI secret backend the resource belongs to.
     */
    backend?: pulumi.Input<string>;
    /**
     * Enable cross-cluster revocation request queues.
     */
    crossClusterRevocation?: pulumi.Input<boolean>;
    /**
     * Interval to check for new revocations on, to regenerate the delta CRL.
     */
    deltaRebuildInterval?: pulumi.Input<string>;
    /**
     * Disables or enables CRL building
     */
    disable?: pulumi.Input<boolean>;
    /**
     * Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.
     */
    enableDelta?: pulumi.Input<boolean>;
    /**
     * Specifies the time until expiration.
     */
    expiry?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Disables or enables the OCSP responder in Vault.
     */
    ocspDisable?: pulumi.Input<boolean>;
    /**
     * The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.
     */
    ocspExpiry?: pulumi.Input<string>;
    /**
     * Enables unified CRL and OCSP building.
     */
    unifiedCrl?: pulumi.Input<boolean>;
    /**
     * Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.
     */
    unifiedCrlOnExistingPaths?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a PkiSecretBackendCrlConfig resource.
 */
export interface PkiSecretBackendCrlConfigArgs {
    /**
     * Enables or disables periodic rebuilding of the CRL upon expiry.
     */
    autoRebuild?: pulumi.Input<boolean>;
    /**
     * Grace period before CRL expiry to attempt rebuild of CRL.
     */
    autoRebuildGracePeriod?: pulumi.Input<string>;
    /**
     * The path of the PKI secret backend the resource belongs to.
     */
    backend: pulumi.Input<string>;
    /**
     * Enable cross-cluster revocation request queues.
     */
    crossClusterRevocation?: pulumi.Input<boolean>;
    /**
     * Interval to check for new revocations on, to regenerate the delta CRL.
     */
    deltaRebuildInterval?: pulumi.Input<string>;
    /**
     * Disables or enables CRL building
     */
    disable?: pulumi.Input<boolean>;
    /**
     * Enables or disables building of delta CRLs with up-to-date revocation information, augmenting the last complete CRL.
     */
    enableDelta?: pulumi.Input<boolean>;
    /**
     * Specifies the time until expiration.
     */
    expiry?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Disables or enables the OCSP responder in Vault.
     */
    ocspDisable?: pulumi.Input<boolean>;
    /**
     * The amount of time an OCSP response can be cached for, useful for OCSP stapling refresh durations.
     */
    ocspExpiry?: pulumi.Input<string>;
    /**
     * Enables unified CRL and OCSP building.
     */
    unifiedCrl?: pulumi.Input<boolean>;
    /**
     * Enables serving the unified CRL and OCSP on the existing, previously cluster-local paths.
     */
    unifiedCrlOnExistingPaths?: pulumi.Input<boolean>;
}
