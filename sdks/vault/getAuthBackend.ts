// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAuthBackend(args: GetAuthBackendArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthBackendResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getAuthBackend:getAuthBackend", {
        "id": args.id,
        "namespace": args.namespace,
        "path": args.path,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getAuthBackend.
 */
export interface GetAuthBackendArgs {
    id?: string;
    namespace?: string;
    path: string;
}

/**
 * A collection of values returned by getAuthBackend.
 */
export interface GetAuthBackendResult {
    readonly accessor: string;
    readonly defaultLeaseTtlSeconds: number;
    readonly description: string;
    readonly id: string;
    readonly listingVisibility: string;
    readonly local: boolean;
    readonly maxLeaseTtlSeconds: number;
    readonly namespace?: string;
    readonly path: string;
    readonly type: string;
}
export function getAuthBackendOutput(args: GetAuthBackendOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthBackendResult> {
    return pulumi.output(args).apply((a: any) => getAuthBackend(a, opts))
}

/**
 * A collection of arguments for invoking getAuthBackend.
 */
export interface GetAuthBackendOutputArgs {
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    path: pulumi.Input<string>;
}
