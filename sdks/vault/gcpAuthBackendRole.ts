// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class GcpAuthBackendRole extends pulumi.CustomResource {
    /**
     * Get an existing GcpAuthBackendRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpAuthBackendRoleState, opts?: pulumi.CustomResourceOptions): GcpAuthBackendRole {
        return new GcpAuthBackendRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/gcpAuthBackendRole:GcpAuthBackendRole';

    /**
     * Returns true if the given object is an instance of GcpAuthBackendRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpAuthBackendRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpAuthBackendRole.__pulumiType;
    }

    public readonly addGroupAliases!: pulumi.Output<boolean>;
    public readonly allowGceInference!: pulumi.Output<boolean>;
    public readonly backend!: pulumi.Output<string | undefined>;
    public readonly boundInstanceGroups!: pulumi.Output<string[]>;
    public readonly boundLabels!: pulumi.Output<string[]>;
    public readonly boundProjects!: pulumi.Output<string[] | undefined>;
    public readonly boundRegions!: pulumi.Output<string[]>;
    public readonly boundServiceAccounts!: pulumi.Output<string[]>;
    public readonly boundZones!: pulumi.Output<string[]>;
    public readonly maxJwtExp!: pulumi.Output<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    public readonly role!: pulumi.Output<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    public readonly tokenBoundCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    public readonly tokenExplicitMaxTtl!: pulumi.Output<number | undefined>;
    /**
     * The maximum lifetime of the generated token
     */
    public readonly tokenMaxTtl!: pulumi.Output<number | undefined>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    public readonly tokenNoDefaultPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    public readonly tokenNumUses!: pulumi.Output<number | undefined>;
    /**
     * Generated Token's Period
     */
    public readonly tokenPeriod!: pulumi.Output<number | undefined>;
    /**
     * Generated Token's Policies
     */
    public readonly tokenPolicies!: pulumi.Output<string[] | undefined>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    public readonly tokenTtl!: pulumi.Output<number | undefined>;
    /**
     * The type of token to generate, service or batch
     */
    public readonly tokenType!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a GcpAuthBackendRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpAuthBackendRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpAuthBackendRoleArgs | GcpAuthBackendRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpAuthBackendRoleState | undefined;
            resourceInputs["addGroupAliases"] = state ? state.addGroupAliases : undefined;
            resourceInputs["allowGceInference"] = state ? state.allowGceInference : undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["boundInstanceGroups"] = state ? state.boundInstanceGroups : undefined;
            resourceInputs["boundLabels"] = state ? state.boundLabels : undefined;
            resourceInputs["boundProjects"] = state ? state.boundProjects : undefined;
            resourceInputs["boundRegions"] = state ? state.boundRegions : undefined;
            resourceInputs["boundServiceAccounts"] = state ? state.boundServiceAccounts : undefined;
            resourceInputs["boundZones"] = state ? state.boundZones : undefined;
            resourceInputs["maxJwtExp"] = state ? state.maxJwtExp : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["tokenBoundCidrs"] = state ? state.tokenBoundCidrs : undefined;
            resourceInputs["tokenExplicitMaxTtl"] = state ? state.tokenExplicitMaxTtl : undefined;
            resourceInputs["tokenMaxTtl"] = state ? state.tokenMaxTtl : undefined;
            resourceInputs["tokenNoDefaultPolicy"] = state ? state.tokenNoDefaultPolicy : undefined;
            resourceInputs["tokenNumUses"] = state ? state.tokenNumUses : undefined;
            resourceInputs["tokenPeriod"] = state ? state.tokenPeriod : undefined;
            resourceInputs["tokenPolicies"] = state ? state.tokenPolicies : undefined;
            resourceInputs["tokenTtl"] = state ? state.tokenTtl : undefined;
            resourceInputs["tokenType"] = state ? state.tokenType : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as GcpAuthBackendRoleArgs | undefined;
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["addGroupAliases"] = args ? args.addGroupAliases : undefined;
            resourceInputs["allowGceInference"] = args ? args.allowGceInference : undefined;
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["boundInstanceGroups"] = args ? args.boundInstanceGroups : undefined;
            resourceInputs["boundLabels"] = args ? args.boundLabels : undefined;
            resourceInputs["boundProjects"] = args ? args.boundProjects : undefined;
            resourceInputs["boundRegions"] = args ? args.boundRegions : undefined;
            resourceInputs["boundServiceAccounts"] = args ? args.boundServiceAccounts : undefined;
            resourceInputs["boundZones"] = args ? args.boundZones : undefined;
            resourceInputs["maxJwtExp"] = args ? args.maxJwtExp : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["tokenBoundCidrs"] = args ? args.tokenBoundCidrs : undefined;
            resourceInputs["tokenExplicitMaxTtl"] = args ? args.tokenExplicitMaxTtl : undefined;
            resourceInputs["tokenMaxTtl"] = args ? args.tokenMaxTtl : undefined;
            resourceInputs["tokenNoDefaultPolicy"] = args ? args.tokenNoDefaultPolicy : undefined;
            resourceInputs["tokenNumUses"] = args ? args.tokenNumUses : undefined;
            resourceInputs["tokenPeriod"] = args ? args.tokenPeriod : undefined;
            resourceInputs["tokenPolicies"] = args ? args.tokenPolicies : undefined;
            resourceInputs["tokenTtl"] = args ? args.tokenTtl : undefined;
            resourceInputs["tokenType"] = args ? args.tokenType : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpAuthBackendRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering GcpAuthBackendRole resources.
 */
export interface GcpAuthBackendRoleState {
    addGroupAliases?: pulumi.Input<boolean>;
    allowGceInference?: pulumi.Input<boolean>;
    backend?: pulumi.Input<string>;
    boundInstanceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    boundLabels?: pulumi.Input<pulumi.Input<string>[]>;
    boundProjects?: pulumi.Input<pulumi.Input<string>[]>;
    boundRegions?: pulumi.Input<pulumi.Input<string>[]>;
    boundServiceAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    boundZones?: pulumi.Input<pulumi.Input<string>[]>;
    maxJwtExp?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    /**
     * The maximum lifetime of the generated token
     */
    tokenMaxTtl?: pulumi.Input<number>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    tokenNumUses?: pulumi.Input<number>;
    /**
     * Generated Token's Period
     */
    tokenPeriod?: pulumi.Input<number>;
    /**
     * Generated Token's Policies
     */
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    tokenTtl?: pulumi.Input<number>;
    /**
     * The type of token to generate, service or batch
     */
    tokenType?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpAuthBackendRole resource.
 */
export interface GcpAuthBackendRoleArgs {
    addGroupAliases?: pulumi.Input<boolean>;
    allowGceInference?: pulumi.Input<boolean>;
    backend?: pulumi.Input<string>;
    boundInstanceGroups?: pulumi.Input<pulumi.Input<string>[]>;
    boundLabels?: pulumi.Input<pulumi.Input<string>[]>;
    boundProjects?: pulumi.Input<pulumi.Input<string>[]>;
    boundRegions?: pulumi.Input<pulumi.Input<string>[]>;
    boundServiceAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    boundZones?: pulumi.Input<pulumi.Input<string>[]>;
    maxJwtExp?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    role: pulumi.Input<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    /**
     * The maximum lifetime of the generated token
     */
    tokenMaxTtl?: pulumi.Input<number>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    tokenNumUses?: pulumi.Input<number>;
    /**
     * Generated Token's Period
     */
    tokenPeriod?: pulumi.Input<number>;
    /**
     * Generated Token's Policies
     */
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    tokenTtl?: pulumi.Input<number>;
    /**
     * The type of token to generate, service or batch
     */
    tokenType?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}
