// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentityEntity(args?: GetIdentityEntityArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityEntityResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getIdentityEntity:getIdentityEntity", {
        "aliasId": args.aliasId,
        "aliasMountAccessor": args.aliasMountAccessor,
        "aliasName": args.aliasName,
        "entityId": args.entityId,
        "entityName": args.entityName,
        "id": args.id,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getIdentityEntity.
 */
export interface GetIdentityEntityArgs {
    aliasId?: string;
    aliasMountAccessor?: string;
    aliasName?: string;
    entityId?: string;
    entityName?: string;
    id?: string;
    namespace?: string;
}

/**
 * A collection of values returned by getIdentityEntity.
 */
export interface GetIdentityEntityResult {
    readonly aliasId: string;
    readonly aliasMountAccessor: string;
    readonly aliasName: string;
    readonly aliases: outputs.GetIdentityEntityAlias[];
    readonly creationTime: string;
    readonly dataJson: string;
    readonly directGroupIds: string[];
    readonly disabled: boolean;
    readonly entityId: string;
    readonly entityName: string;
    readonly groupIds: string[];
    readonly id: string;
    readonly inheritedGroupIds: string[];
    readonly lastUpdateTime: string;
    readonly mergedEntityIds: string[];
    readonly metadata: {[key: string]: string};
    readonly namespace?: string;
    readonly namespaceId: string;
    readonly policies: string[];
}
export function getIdentityEntityOutput(args?: GetIdentityEntityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityEntityResult> {
    return pulumi.output(args).apply((a: any) => getIdentityEntity(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityEntity.
 */
export interface GetIdentityEntityOutputArgs {
    aliasId?: pulumi.Input<string>;
    aliasMountAccessor?: pulumi.Input<string>;
    aliasName?: pulumi.Input<string>;
    entityId?: pulumi.Input<string>;
    entityName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
