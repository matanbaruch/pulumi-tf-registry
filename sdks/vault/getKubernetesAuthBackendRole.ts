// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKubernetesAuthBackendRole(args: GetKubernetesAuthBackendRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesAuthBackendRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getKubernetesAuthBackendRole:getKubernetesAuthBackendRole", {
        "audience": args.audience,
        "backend": args.backend,
        "id": args.id,
        "namespace": args.namespace,
        "roleName": args.roleName,
        "tokenBoundCidrs": args.tokenBoundCidrs,
        "tokenExplicitMaxTtl": args.tokenExplicitMaxTtl,
        "tokenMaxTtl": args.tokenMaxTtl,
        "tokenNoDefaultPolicy": args.tokenNoDefaultPolicy,
        "tokenNumUses": args.tokenNumUses,
        "tokenPeriod": args.tokenPeriod,
        "tokenPolicies": args.tokenPolicies,
        "tokenTtl": args.tokenTtl,
        "tokenType": args.tokenType,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKubernetesAuthBackendRole.
 */
export interface GetKubernetesAuthBackendRoleArgs {
    audience?: string;
    backend?: string;
    id?: string;
    namespace?: string;
    roleName: string;
    tokenBoundCidrs?: string[];
    tokenExplicitMaxTtl?: number;
    tokenMaxTtl?: number;
    tokenNoDefaultPolicy?: boolean;
    tokenNumUses?: number;
    tokenPeriod?: number;
    tokenPolicies?: string[];
    tokenTtl?: number;
    tokenType?: string;
}

/**
 * A collection of values returned by getKubernetesAuthBackendRole.
 */
export interface GetKubernetesAuthBackendRoleResult {
    readonly aliasNameSource: string;
    readonly audience?: string;
    readonly backend?: string;
    readonly boundServiceAccountNames: string[];
    readonly boundServiceAccountNamespaces: string[];
    readonly id: string;
    readonly namespace?: string;
    readonly roleName: string;
    readonly tokenBoundCidrs?: string[];
    readonly tokenExplicitMaxTtl?: number;
    readonly tokenMaxTtl?: number;
    readonly tokenNoDefaultPolicy?: boolean;
    readonly tokenNumUses?: number;
    readonly tokenPeriod?: number;
    readonly tokenPolicies?: string[];
    readonly tokenTtl?: number;
    readonly tokenType?: string;
}
export function getKubernetesAuthBackendRoleOutput(args: GetKubernetesAuthBackendRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesAuthBackendRoleResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesAuthBackendRole(a, opts))
}

/**
 * A collection of arguments for invoking getKubernetesAuthBackendRole.
 */
export interface GetKubernetesAuthBackendRoleOutputArgs {
    audience?: pulumi.Input<string>;
    backend?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    tokenMaxTtl?: pulumi.Input<number>;
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    tokenNumUses?: pulumi.Input<number>;
    tokenPeriod?: pulumi.Input<number>;
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    tokenTtl?: pulumi.Input<number>;
    tokenType?: pulumi.Input<string>;
}
