// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsAuthBackendIdentityWhitelist extends pulumi.CustomResource {
    /**
     * Get an existing AwsAuthBackendIdentityWhitelist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsAuthBackendIdentityWhitelistState, opts?: pulumi.CustomResourceOptions): AwsAuthBackendIdentityWhitelist {
        return new AwsAuthBackendIdentityWhitelist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/awsAuthBackendIdentityWhitelist:AwsAuthBackendIdentityWhitelist';

    /**
     * Returns true if the given object is an instance of AwsAuthBackendIdentityWhitelist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsAuthBackendIdentityWhitelist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsAuthBackendIdentityWhitelist.__pulumiType;
    }

    /**
     * Unique name of the auth backend to configure.
     */
    public readonly backend!: pulumi.Output<string | undefined>;
    /**
     * If true, disables the periodic tidying of the identiy whitelist entries.
     */
    public readonly disablePeriodicTidy!: pulumi.Output<boolean | undefined>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage.
     */
    public readonly safetyBuffer!: pulumi.Output<number | undefined>;

    /**
     * Create a AwsAuthBackendIdentityWhitelist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AwsAuthBackendIdentityWhitelistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsAuthBackendIdentityWhitelistArgs | AwsAuthBackendIdentityWhitelistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsAuthBackendIdentityWhitelistState | undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["disablePeriodicTidy"] = state ? state.disablePeriodicTidy : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["safetyBuffer"] = state ? state.safetyBuffer : undefined;
        } else {
            const args = argsOrState as AwsAuthBackendIdentityWhitelistArgs | undefined;
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["disablePeriodicTidy"] = args ? args.disablePeriodicTidy : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["safetyBuffer"] = args ? args.safetyBuffer : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsAuthBackendIdentityWhitelist.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsAuthBackendIdentityWhitelist resources.
 */
export interface AwsAuthBackendIdentityWhitelistState {
    /**
     * Unique name of the auth backend to configure.
     */
    backend?: pulumi.Input<string>;
    /**
     * If true, disables the periodic tidying of the identiy whitelist entries.
     */
    disablePeriodicTidy?: pulumi.Input<boolean>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage.
     */
    safetyBuffer?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AwsAuthBackendIdentityWhitelist resource.
 */
export interface AwsAuthBackendIdentityWhitelistArgs {
    /**
     * Unique name of the auth backend to configure.
     */
    backend?: pulumi.Input<string>;
    /**
     * If true, disables the periodic tidying of the identiy whitelist entries.
     */
    disablePeriodicTidy?: pulumi.Input<boolean>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * The amount of extra time that must have passed beyond the roletag expiration, before it's removed from backend storage.
     */
    safetyBuffer?: pulumi.Input<number>;
}
