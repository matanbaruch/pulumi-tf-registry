// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class SamlAuthBackendRole extends pulumi.CustomResource {
    /**
     * Get an existing SamlAuthBackendRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SamlAuthBackendRoleState, opts?: pulumi.CustomResourceOptions): SamlAuthBackendRole {
        return new SamlAuthBackendRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/samlAuthBackendRole:SamlAuthBackendRole';

    /**
     * Returns true if the given object is an instance of SamlAuthBackendRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SamlAuthBackendRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SamlAuthBackendRole.__pulumiType;
    }

    /**
     * Mapping of attribute names to values that are expected to exist in the SAML assertion.
     */
    public readonly boundAttributes!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The type of matching assertion to perform on bound_attributes.
     */
    public readonly boundAttributesType!: pulumi.Output<string>;
    /**
     * The subject being asserted for SAML authentication.
     */
    public readonly boundSubjects!: pulumi.Output<string[] | undefined>;
    /**
     * The type of matching assertion to perform on bound_subjects.
     */
    public readonly boundSubjectsType!: pulumi.Output<string>;
    /**
     * The attribute to use to identify the set of groups to which the user belongs.
     */
    public readonly groupsAttribute!: pulumi.Output<string | undefined>;
    /**
     * Unique name of the role.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Path where SAML Auth engine is mounted.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    public readonly tokenBoundCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    public readonly tokenExplicitMaxTtl!: pulumi.Output<number | undefined>;
    /**
     * The maximum lifetime of the generated token
     */
    public readonly tokenMaxTtl!: pulumi.Output<number | undefined>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    public readonly tokenNoDefaultPolicy!: pulumi.Output<boolean | undefined>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    public readonly tokenNumUses!: pulumi.Output<number | undefined>;
    /**
     * Generated Token's Period
     */
    public readonly tokenPeriod!: pulumi.Output<number | undefined>;
    /**
     * Generated Token's Policies
     */
    public readonly tokenPolicies!: pulumi.Output<string[] | undefined>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    public readonly tokenTtl!: pulumi.Output<number | undefined>;
    /**
     * The type of token to generate, service or batch
     */
    public readonly tokenType!: pulumi.Output<string | undefined>;

    /**
     * Create a SamlAuthBackendRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SamlAuthBackendRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SamlAuthBackendRoleArgs | SamlAuthBackendRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SamlAuthBackendRoleState | undefined;
            resourceInputs["boundAttributes"] = state ? state.boundAttributes : undefined;
            resourceInputs["boundAttributesType"] = state ? state.boundAttributesType : undefined;
            resourceInputs["boundSubjects"] = state ? state.boundSubjects : undefined;
            resourceInputs["boundSubjectsType"] = state ? state.boundSubjectsType : undefined;
            resourceInputs["groupsAttribute"] = state ? state.groupsAttribute : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["tokenBoundCidrs"] = state ? state.tokenBoundCidrs : undefined;
            resourceInputs["tokenExplicitMaxTtl"] = state ? state.tokenExplicitMaxTtl : undefined;
            resourceInputs["tokenMaxTtl"] = state ? state.tokenMaxTtl : undefined;
            resourceInputs["tokenNoDefaultPolicy"] = state ? state.tokenNoDefaultPolicy : undefined;
            resourceInputs["tokenNumUses"] = state ? state.tokenNumUses : undefined;
            resourceInputs["tokenPeriod"] = state ? state.tokenPeriod : undefined;
            resourceInputs["tokenPolicies"] = state ? state.tokenPolicies : undefined;
            resourceInputs["tokenTtl"] = state ? state.tokenTtl : undefined;
            resourceInputs["tokenType"] = state ? state.tokenType : undefined;
        } else {
            const args = argsOrState as SamlAuthBackendRoleArgs | undefined;
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["boundAttributes"] = args ? args.boundAttributes : undefined;
            resourceInputs["boundAttributesType"] = args ? args.boundAttributesType : undefined;
            resourceInputs["boundSubjects"] = args ? args.boundSubjects : undefined;
            resourceInputs["boundSubjectsType"] = args ? args.boundSubjectsType : undefined;
            resourceInputs["groupsAttribute"] = args ? args.groupsAttribute : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["tokenBoundCidrs"] = args ? args.tokenBoundCidrs : undefined;
            resourceInputs["tokenExplicitMaxTtl"] = args ? args.tokenExplicitMaxTtl : undefined;
            resourceInputs["tokenMaxTtl"] = args ? args.tokenMaxTtl : undefined;
            resourceInputs["tokenNoDefaultPolicy"] = args ? args.tokenNoDefaultPolicy : undefined;
            resourceInputs["tokenNumUses"] = args ? args.tokenNumUses : undefined;
            resourceInputs["tokenPeriod"] = args ? args.tokenPeriod : undefined;
            resourceInputs["tokenPolicies"] = args ? args.tokenPolicies : undefined;
            resourceInputs["tokenTtl"] = args ? args.tokenTtl : undefined;
            resourceInputs["tokenType"] = args ? args.tokenType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SamlAuthBackendRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering SamlAuthBackendRole resources.
 */
export interface SamlAuthBackendRoleState {
    /**
     * Mapping of attribute names to values that are expected to exist in the SAML assertion.
     */
    boundAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of matching assertion to perform on bound_attributes.
     */
    boundAttributesType?: pulumi.Input<string>;
    /**
     * The subject being asserted for SAML authentication.
     */
    boundSubjects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of matching assertion to perform on bound_subjects.
     */
    boundSubjectsType?: pulumi.Input<string>;
    /**
     * The attribute to use to identify the set of groups to which the user belongs.
     */
    groupsAttribute?: pulumi.Input<string>;
    /**
     * Unique name of the role.
     */
    name?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path where SAML Auth engine is mounted.
     */
    path?: pulumi.Input<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    /**
     * The maximum lifetime of the generated token
     */
    tokenMaxTtl?: pulumi.Input<number>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    tokenNumUses?: pulumi.Input<number>;
    /**
     * Generated Token's Period
     */
    tokenPeriod?: pulumi.Input<number>;
    /**
     * Generated Token's Policies
     */
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    tokenTtl?: pulumi.Input<number>;
    /**
     * The type of token to generate, service or batch
     */
    tokenType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SamlAuthBackendRole resource.
 */
export interface SamlAuthBackendRoleArgs {
    /**
     * Mapping of attribute names to values that are expected to exist in the SAML assertion.
     */
    boundAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The type of matching assertion to perform on bound_attributes.
     */
    boundAttributesType?: pulumi.Input<string>;
    /**
     * The subject being asserted for SAML authentication.
     */
    boundSubjects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of matching assertion to perform on bound_subjects.
     */
    boundSubjectsType?: pulumi.Input<string>;
    /**
     * The attribute to use to identify the set of groups to which the user belongs.
     */
    groupsAttribute?: pulumi.Input<string>;
    /**
     * Unique name of the role.
     */
    name?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path where SAML Auth engine is mounted.
     */
    path: pulumi.Input<string>;
    /**
     * Specifies the blocks of IP addresses which are allowed to use the generated token
     */
    tokenBoundCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Generated Token's Explicit Maximum TTL in seconds
     */
    tokenExplicitMaxTtl?: pulumi.Input<number>;
    /**
     * The maximum lifetime of the generated token
     */
    tokenMaxTtl?: pulumi.Input<number>;
    /**
     * If true, the 'default' policy will not automatically be added to generated tokens
     */
    tokenNoDefaultPolicy?: pulumi.Input<boolean>;
    /**
     * The maximum number of times a token may be used, a value of zero means unlimited
     */
    tokenNumUses?: pulumi.Input<number>;
    /**
     * Generated Token's Period
     */
    tokenPeriod?: pulumi.Input<number>;
    /**
     * Generated Token's Policies
     */
    tokenPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The initial ttl of the token to generate in seconds
     */
    tokenTtl?: pulumi.Input<number>;
    /**
     * The type of token to generate, service or batch
     */
    tokenType?: pulumi.Input<string>;
}
