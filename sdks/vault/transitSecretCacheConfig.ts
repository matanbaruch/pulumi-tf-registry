// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TransitSecretCacheConfig extends pulumi.CustomResource {
    /**
     * Get an existing TransitSecretCacheConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitSecretCacheConfigState, opts?: pulumi.CustomResourceOptions): TransitSecretCacheConfig {
        return new TransitSecretCacheConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/transitSecretCacheConfig:TransitSecretCacheConfig';

    /**
     * Returns true if the given object is an instance of TransitSecretCacheConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitSecretCacheConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitSecretCacheConfig.__pulumiType;
    }

    /**
     * The Transit secret backend the resource belongs to.
     */
    public readonly backend!: pulumi.Output<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Number of cache entries. A size of 0 mean unlimited.
     */
    public readonly size!: pulumi.Output<number>;

    /**
     * Create a TransitSecretCacheConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitSecretCacheConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitSecretCacheConfigArgs | TransitSecretCacheConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitSecretCacheConfigState | undefined;
            resourceInputs["backend"] = state ? state.backend : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
        } else {
            const args = argsOrState as TransitSecretCacheConfigArgs | undefined;
            if ((!args || args.backend === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backend'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            resourceInputs["backend"] = args ? args.backend : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitSecretCacheConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TransitSecretCacheConfig resources.
 */
export interface TransitSecretCacheConfigState {
    /**
     * The Transit secret backend the resource belongs to.
     */
    backend?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Number of cache entries. A size of 0 mean unlimited.
     */
    size?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a TransitSecretCacheConfig resource.
 */
export interface TransitSecretCacheConfigArgs {
    /**
     * The Transit secret backend the resource belongs to.
     */
    backend: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Number of cache entries. A size of 0 mean unlimited.
     */
    size: pulumi.Input<number>;
}
