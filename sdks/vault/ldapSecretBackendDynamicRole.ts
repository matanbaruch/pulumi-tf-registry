// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class LdapSecretBackendDynamicRole extends pulumi.CustomResource {
    /**
     * Get an existing LdapSecretBackendDynamicRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LdapSecretBackendDynamicRoleState, opts?: pulumi.CustomResourceOptions): LdapSecretBackendDynamicRole {
        return new LdapSecretBackendDynamicRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/ldapSecretBackendDynamicRole:LdapSecretBackendDynamicRole';

    /**
     * Returns true if the given object is an instance of LdapSecretBackendDynamicRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LdapSecretBackendDynamicRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LdapSecretBackendDynamicRole.__pulumiType;
    }

    /**
     * A templatized LDIF string used to create a user account. May contain multiple entries.
     */
    public readonly creationLdif!: pulumi.Output<string>;
    /**
     * Specifies the TTL for the leases associated with this role.
     */
    public readonly defaultTtl!: pulumi.Output<number | undefined>;
    /**
     * A templatized LDIF string used to delete the user account once its TTL has expired. This may contain multiple LDIF
     * entries.
     */
    public readonly deletionLdif!: pulumi.Output<string>;
    /**
     * Specifies the maximum TTL for the leases associated with this role.
     */
    public readonly maxTtl!: pulumi.Output<number | undefined>;
    /**
     * The path where the LDAP secrets backend is mounted.
     */
    public readonly mount!: pulumi.Output<string | undefined>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Name of the role.
     */
    public readonly roleName!: pulumi.Output<string>;
    /**
     * A templatized LDIF string used to attempt to rollback any changes in the event that execution of the creation_ldif
     * results in an error. This may contain multiple LDIF entries.
     */
    public readonly rollbackLdif!: pulumi.Output<string | undefined>;
    /**
     * A template used to generate a dynamic username. This will be used to fill in the .Username field within the
     * creation_ldif string.
     */
    public readonly usernameTemplate!: pulumi.Output<string | undefined>;

    /**
     * Create a LdapSecretBackendDynamicRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LdapSecretBackendDynamicRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LdapSecretBackendDynamicRoleArgs | LdapSecretBackendDynamicRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LdapSecretBackendDynamicRoleState | undefined;
            resourceInputs["creationLdif"] = state ? state.creationLdif : undefined;
            resourceInputs["defaultTtl"] = state ? state.defaultTtl : undefined;
            resourceInputs["deletionLdif"] = state ? state.deletionLdif : undefined;
            resourceInputs["maxTtl"] = state ? state.maxTtl : undefined;
            resourceInputs["mount"] = state ? state.mount : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["rollbackLdif"] = state ? state.rollbackLdif : undefined;
            resourceInputs["usernameTemplate"] = state ? state.usernameTemplate : undefined;
        } else {
            const args = argsOrState as LdapSecretBackendDynamicRoleArgs | undefined;
            if ((!args || args.creationLdif === undefined) && !opts.urn) {
                throw new Error("Missing required property 'creationLdif'");
            }
            if ((!args || args.deletionLdif === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deletionLdif'");
            }
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            resourceInputs["creationLdif"] = args ? args.creationLdif : undefined;
            resourceInputs["defaultTtl"] = args ? args.defaultTtl : undefined;
            resourceInputs["deletionLdif"] = args ? args.deletionLdif : undefined;
            resourceInputs["maxTtl"] = args ? args.maxTtl : undefined;
            resourceInputs["mount"] = args ? args.mount : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["rollbackLdif"] = args ? args.rollbackLdif : undefined;
            resourceInputs["usernameTemplate"] = args ? args.usernameTemplate : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LdapSecretBackendDynamicRole.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering LdapSecretBackendDynamicRole resources.
 */
export interface LdapSecretBackendDynamicRoleState {
    /**
     * A templatized LDIF string used to create a user account. May contain multiple entries.
     */
    creationLdif?: pulumi.Input<string>;
    /**
     * Specifies the TTL for the leases associated with this role.
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * A templatized LDIF string used to delete the user account once its TTL has expired. This may contain multiple LDIF
     * entries.
     */
    deletionLdif?: pulumi.Input<string>;
    /**
     * Specifies the maximum TTL for the leases associated with this role.
     */
    maxTtl?: pulumi.Input<number>;
    /**
     * The path where the LDAP secrets backend is mounted.
     */
    mount?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Name of the role.
     */
    roleName?: pulumi.Input<string>;
    /**
     * A templatized LDIF string used to attempt to rollback any changes in the event that execution of the creation_ldif
     * results in an error. This may contain multiple LDIF entries.
     */
    rollbackLdif?: pulumi.Input<string>;
    /**
     * A template used to generate a dynamic username. This will be used to fill in the .Username field within the
     * creation_ldif string.
     */
    usernameTemplate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LdapSecretBackendDynamicRole resource.
 */
export interface LdapSecretBackendDynamicRoleArgs {
    /**
     * A templatized LDIF string used to create a user account. May contain multiple entries.
     */
    creationLdif: pulumi.Input<string>;
    /**
     * Specifies the TTL for the leases associated with this role.
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * A templatized LDIF string used to delete the user account once its TTL has expired. This may contain multiple LDIF
     * entries.
     */
    deletionLdif: pulumi.Input<string>;
    /**
     * Specifies the maximum TTL for the leases associated with this role.
     */
    maxTtl?: pulumi.Input<number>;
    /**
     * The path where the LDAP secrets backend is mounted.
     */
    mount?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Name of the role.
     */
    roleName: pulumi.Input<string>;
    /**
     * A templatized LDIF string used to attempt to rollback any changes in the event that execution of the creation_ldif
     * results in an error. This may contain multiple LDIF entries.
     */
    rollbackLdif?: pulumi.Input<string>;
    /**
     * A template used to generate a dynamic username. This will be used to fill in the .Username field within the
     * creation_ldif string.
     */
    usernameTemplate?: pulumi.Input<string>;
}
