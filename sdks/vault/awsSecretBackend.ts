// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AwsSecretBackend extends pulumi.CustomResource {
    /**
     * Get an existing AwsSecretBackend resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsSecretBackendState, opts?: pulumi.CustomResourceOptions): AwsSecretBackend {
        return new AwsSecretBackend(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/awsSecretBackend:AwsSecretBackend';

    /**
     * Returns true if the given object is an instance of AwsSecretBackend.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsSecretBackend {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsSecretBackend.__pulumiType;
    }

    /**
     * The AWS Access Key ID to use when generating new credentials.
     */
    public readonly accessKey!: pulumi.Output<string | undefined>;
    /**
     * Default lease duration for secrets in seconds
     */
    public readonly defaultLeaseTtlSeconds!: pulumi.Output<number>;
    /**
     * Human-friendly description of the mount for the backend.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * If set, opts out of mount migration on path updates.
     */
    public readonly disableRemount!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies a custom HTTP IAM endpoint to use.
     */
    public readonly iamEndpoint!: pulumi.Output<string | undefined>;
    /**
     * The audience claim value.
     */
    public readonly identityTokenAudience!: pulumi.Output<string | undefined>;
    /**
     * The key to use for signing identity tokens.
     */
    public readonly identityTokenKey!: pulumi.Output<string | undefined>;
    /**
     * The TTL of generated identity tokens in seconds.
     */
    public readonly identityTokenTtl!: pulumi.Output<number>;
    /**
     * Specifies if the secret backend is local only
     */
    public readonly local!: pulumi.Output<boolean | undefined>;
    /**
     * Maximum possible lease duration for secrets in seconds
     */
    public readonly maxLeaseTtlSeconds!: pulumi.Output<number>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * Path to mount the backend at.
     */
    public readonly path!: pulumi.Output<string | undefined>;
    /**
     * The AWS region to make API calls against. Defaults to us-east-1.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Role ARN to assume for plugin identity token federation.
     */
    public readonly roleArn!: pulumi.Output<string | undefined>;
    /**
     * The AWS Secret Access Key to use when generating new credentials.
     */
    public readonly secretKey!: pulumi.Output<string | undefined>;
    /**
     * Specifies a custom HTTP STS endpoint to use.
     */
    public readonly stsEndpoint!: pulumi.Output<string | undefined>;
    /**
     * Template describing how dynamic usernames are generated.
     */
    public readonly usernameTemplate!: pulumi.Output<string>;

    /**
     * Create a AwsSecretBackend resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AwsSecretBackendArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsSecretBackendArgs | AwsSecretBackendState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsSecretBackendState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["defaultLeaseTtlSeconds"] = state ? state.defaultLeaseTtlSeconds : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableRemount"] = state ? state.disableRemount : undefined;
            resourceInputs["iamEndpoint"] = state ? state.iamEndpoint : undefined;
            resourceInputs["identityTokenAudience"] = state ? state.identityTokenAudience : undefined;
            resourceInputs["identityTokenKey"] = state ? state.identityTokenKey : undefined;
            resourceInputs["identityTokenTtl"] = state ? state.identityTokenTtl : undefined;
            resourceInputs["local"] = state ? state.local : undefined;
            resourceInputs["maxLeaseTtlSeconds"] = state ? state.maxLeaseTtlSeconds : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["roleArn"] = state ? state.roleArn : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
            resourceInputs["stsEndpoint"] = state ? state.stsEndpoint : undefined;
            resourceInputs["usernameTemplate"] = state ? state.usernameTemplate : undefined;
        } else {
            const args = argsOrState as AwsSecretBackendArgs | undefined;
            resourceInputs["accessKey"] = args?.accessKey ? pulumi.secret(args.accessKey) : undefined;
            resourceInputs["defaultLeaseTtlSeconds"] = args ? args.defaultLeaseTtlSeconds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableRemount"] = args ? args.disableRemount : undefined;
            resourceInputs["iamEndpoint"] = args ? args.iamEndpoint : undefined;
            resourceInputs["identityTokenAudience"] = args ? args.identityTokenAudience : undefined;
            resourceInputs["identityTokenKey"] = args ? args.identityTokenKey : undefined;
            resourceInputs["identityTokenTtl"] = args ? args.identityTokenTtl : undefined;
            resourceInputs["local"] = args ? args.local : undefined;
            resourceInputs["maxLeaseTtlSeconds"] = args ? args.maxLeaseTtlSeconds : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["secretKey"] = args?.secretKey ? pulumi.secret(args.secretKey) : undefined;
            resourceInputs["stsEndpoint"] = args ? args.stsEndpoint : undefined;
            resourceInputs["usernameTemplate"] = args ? args.usernameTemplate : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["accessKey", "secretKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AwsSecretBackend.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering AwsSecretBackend resources.
 */
export interface AwsSecretBackendState {
    /**
     * The AWS Access Key ID to use when generating new credentials.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Default lease duration for secrets in seconds
     */
    defaultLeaseTtlSeconds?: pulumi.Input<number>;
    /**
     * Human-friendly description of the mount for the backend.
     */
    description?: pulumi.Input<string>;
    /**
     * If set, opts out of mount migration on path updates.
     */
    disableRemount?: pulumi.Input<boolean>;
    /**
     * Specifies a custom HTTP IAM endpoint to use.
     */
    iamEndpoint?: pulumi.Input<string>;
    /**
     * The audience claim value.
     */
    identityTokenAudience?: pulumi.Input<string>;
    /**
     * The key to use for signing identity tokens.
     */
    identityTokenKey?: pulumi.Input<string>;
    /**
     * The TTL of generated identity tokens in seconds.
     */
    identityTokenTtl?: pulumi.Input<number>;
    /**
     * Specifies if the secret backend is local only
     */
    local?: pulumi.Input<boolean>;
    /**
     * Maximum possible lease duration for secrets in seconds
     */
    maxLeaseTtlSeconds?: pulumi.Input<number>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path to mount the backend at.
     */
    path?: pulumi.Input<string>;
    /**
     * The AWS region to make API calls against. Defaults to us-east-1.
     */
    region?: pulumi.Input<string>;
    /**
     * Role ARN to assume for plugin identity token federation.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The AWS Secret Access Key to use when generating new credentials.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Specifies a custom HTTP STS endpoint to use.
     */
    stsEndpoint?: pulumi.Input<string>;
    /**
     * Template describing how dynamic usernames are generated.
     */
    usernameTemplate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsSecretBackend resource.
 */
export interface AwsSecretBackendArgs {
    /**
     * The AWS Access Key ID to use when generating new credentials.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Default lease duration for secrets in seconds
     */
    defaultLeaseTtlSeconds?: pulumi.Input<number>;
    /**
     * Human-friendly description of the mount for the backend.
     */
    description?: pulumi.Input<string>;
    /**
     * If set, opts out of mount migration on path updates.
     */
    disableRemount?: pulumi.Input<boolean>;
    /**
     * Specifies a custom HTTP IAM endpoint to use.
     */
    iamEndpoint?: pulumi.Input<string>;
    /**
     * The audience claim value.
     */
    identityTokenAudience?: pulumi.Input<string>;
    /**
     * The key to use for signing identity tokens.
     */
    identityTokenKey?: pulumi.Input<string>;
    /**
     * The TTL of generated identity tokens in seconds.
     */
    identityTokenTtl?: pulumi.Input<number>;
    /**
     * Specifies if the secret backend is local only
     */
    local?: pulumi.Input<boolean>;
    /**
     * Maximum possible lease duration for secrets in seconds
     */
    maxLeaseTtlSeconds?: pulumi.Input<number>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * Path to mount the backend at.
     */
    path?: pulumi.Input<string>;
    /**
     * The AWS region to make API calls against. Defaults to us-east-1.
     */
    region?: pulumi.Input<string>;
    /**
     * Role ARN to assume for plugin identity token federation.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * The AWS Secret Access Key to use when generating new credentials.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Specifies a custom HTTP STS endpoint to use.
     */
    stsEndpoint?: pulumi.Input<string>;
    /**
     * Template describing how dynamic usernames are generated.
     */
    usernameTemplate?: pulumi.Input<string>;
}
