// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTransitDecrypt(args: GetTransitDecryptArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitDecryptResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getTransitDecrypt:getTransitDecrypt", {
        "backend": args.backend,
        "ciphertext": args.ciphertext,
        "context": args.context,
        "id": args.id,
        "key": args.key,
        "namespace": args.namespace,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransitDecrypt.
 */
export interface GetTransitDecryptArgs {
    backend: string;
    ciphertext: string;
    context?: string;
    id?: string;
    key: string;
    namespace?: string;
}

/**
 * A collection of values returned by getTransitDecrypt.
 */
export interface GetTransitDecryptResult {
    readonly backend: string;
    readonly ciphertext: string;
    readonly context?: string;
    readonly id: string;
    readonly key: string;
    readonly namespace?: string;
    readonly plaintext: string;
}
export function getTransitDecryptOutput(args: GetTransitDecryptOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransitDecryptResult> {
    return pulumi.output(args).apply((a: any) => getTransitDecrypt(a, opts))
}

/**
 * A collection of arguments for invoking getTransitDecrypt.
 */
export interface GetTransitDecryptOutputArgs {
    backend: pulumi.Input<string>;
    ciphertext: pulumi.Input<string>;
    context?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    key: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}
