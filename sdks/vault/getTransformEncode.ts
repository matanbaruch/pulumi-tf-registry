// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getTransformEncode(args: GetTransformEncodeArgs, opts?: pulumi.InvokeOptions): Promise<GetTransformEncodeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getTransformEncode:getTransformEncode", {
        "batchInputs": args.batchInputs,
        "batchResults": args.batchResults,
        "encodedValue": args.encodedValue,
        "id": args.id,
        "namespace": args.namespace,
        "path": args.path,
        "roleName": args.roleName,
        "transformation": args.transformation,
        "tweak": args.tweak,
        "value": args.value,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getTransformEncode.
 */
export interface GetTransformEncodeArgs {
    batchInputs?: {[key: string]: string}[];
    batchResults?: {[key: string]: string}[];
    encodedValue?: string;
    id?: string;
    namespace?: string;
    path: string;
    roleName: string;
    transformation?: string;
    tweak?: string;
    value?: string;
}

/**
 * A collection of values returned by getTransformEncode.
 */
export interface GetTransformEncodeResult {
    readonly batchInputs?: {[key: string]: string}[];
    readonly batchResults: {[key: string]: string}[];
    readonly encodedValue: string;
    readonly id: string;
    readonly namespace?: string;
    readonly path: string;
    readonly roleName: string;
    readonly transformation?: string;
    readonly tweak?: string;
    readonly value?: string;
}
export function getTransformEncodeOutput(args: GetTransformEncodeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransformEncodeResult> {
    return pulumi.output(args).apply((a: any) => getTransformEncode(a, opts))
}

/**
 * A collection of arguments for invoking getTransformEncode.
 */
export interface GetTransformEncodeOutputArgs {
    batchInputs?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    batchResults?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
    encodedValue?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    path: pulumi.Input<string>;
    roleName: pulumi.Input<string>;
    transformation?: pulumi.Input<string>;
    tweak?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}
