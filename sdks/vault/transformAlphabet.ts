// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TransformAlphabet extends pulumi.CustomResource {
    /**
     * Get an existing TransformAlphabet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransformAlphabetState, opts?: pulumi.CustomResourceOptions): TransformAlphabet {
        return new TransformAlphabet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vault:index/transformAlphabet:TransformAlphabet';

    /**
     * Returns true if the given object is an instance of TransformAlphabet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransformAlphabet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransformAlphabet.__pulumiType;
    }

    /**
     * A string of characters that contains the alphabet set.
     */
    public readonly alphabet!: pulumi.Output<string | undefined>;
    /**
     * The name of the alphabet.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    public readonly namespace!: pulumi.Output<string | undefined>;
    /**
     * The mount path for a back-end, for example, the path given in "$ vault auth enable -path=my-aws aws".
     */
    public readonly path!: pulumi.Output<string>;

    /**
     * Create a TransformAlphabet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransformAlphabetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransformAlphabetArgs | TransformAlphabetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransformAlphabetState | undefined;
            resourceInputs["alphabet"] = state ? state.alphabet : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
        } else {
            const args = argsOrState as TransformAlphabetArgs | undefined;
            if ((!args || args.path === undefined) && !opts.urn) {
                throw new Error("Missing required property 'path'");
            }
            resourceInputs["alphabet"] = args ? args.alphabet : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransformAlphabet.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering TransformAlphabet resources.
 */
export interface TransformAlphabetState {
    /**
     * A string of characters that contains the alphabet set.
     */
    alphabet?: pulumi.Input<string>;
    /**
     * The name of the alphabet.
     */
    name?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * The mount path for a back-end, for example, the path given in "$ vault auth enable -path=my-aws aws".
     */
    path?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TransformAlphabet resource.
 */
export interface TransformAlphabetArgs {
    /**
     * A string of characters that contains the alphabet set.
     */
    alphabet?: pulumi.Input<string>;
    /**
     * The name of the alphabet.
     */
    name?: pulumi.Input<string>;
    /**
     * Target namespace. (requires Enterprise)
     */
    namespace?: pulumi.Input<string>;
    /**
     * The mount path for a back-end, for example, the path given in "$ vault auth enable -path=my-aws aws".
     */
    path: pulumi.Input<string>;
}
