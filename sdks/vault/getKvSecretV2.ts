// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getKvSecretV2(args: GetKvSecretV2Args, opts?: pulumi.InvokeOptions): Promise<GetKvSecretV2Result> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vault:index/getKvSecretV2:getKvSecretV2", {
        "id": args.id,
        "mount": args.mount,
        "name": args.name,
        "namespace": args.namespace,
        "version": args.version,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getKvSecretV2.
 */
export interface GetKvSecretV2Args {
    id?: string;
    mount: string;
    name: string;
    namespace?: string;
    version?: number;
}

/**
 * A collection of values returned by getKvSecretV2.
 */
export interface GetKvSecretV2Result {
    readonly createdTime: string;
    readonly customMetadata: {[key: string]: string};
    readonly data: {[key: string]: string};
    readonly dataJson: string;
    readonly deletionTime: string;
    readonly destroyed: boolean;
    readonly id: string;
    readonly mount: string;
    readonly name: string;
    readonly namespace?: string;
    readonly path: string;
    readonly version?: number;
}
export function getKvSecretV2Output(args: GetKvSecretV2OutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKvSecretV2Result> {
    return pulumi.output(args).apply((a: any) => getKvSecretV2(a, opts))
}

/**
 * A collection of arguments for invoking getKvSecretV2.
 */
export interface GetKvSecretV2OutputArgs {
    id?: pulumi.Input<string>;
    mount: pulumi.Input<string>;
    name: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
