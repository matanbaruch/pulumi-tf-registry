// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opsgenie:index/getUser:getUser", {
        "fullName": args.fullName,
        "id": args.id,
        "locale": args.locale,
        "role": args.role,
        "timezone": args.timezone,
        "username": args.username,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    fullName?: string;
    id?: string;
    locale?: string;
    role?: string;
    timezone?: string;
    username: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly fullName?: string;
    readonly id: string;
    readonly locale?: string;
    readonly role?: string;
    readonly timezone?: string;
    readonly username: string;
}
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    fullName?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    locale?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
