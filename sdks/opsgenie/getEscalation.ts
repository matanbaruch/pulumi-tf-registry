// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getEscalation(args: GetEscalationArgs, opts?: pulumi.InvokeOptions): Promise<GetEscalationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("opsgenie:index/getEscalation:getEscalation", {
        "description": args.description,
        "id": args.id,
        "name": args.name,
        "ownerTeamId": args.ownerTeamId,
        "repeats": args.repeats,
        "rules": args.rules,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getEscalation.
 */
export interface GetEscalationArgs {
    description?: string;
    id?: string;
    name: string;
    ownerTeamId?: string;
    repeats?: inputs.GetEscalationRepeat[];
    rules?: inputs.GetEscalationRule[];
}

/**
 * A collection of values returned by getEscalation.
 */
export interface GetEscalationResult {
    readonly description?: string;
    readonly id: string;
    readonly name: string;
    readonly ownerTeamId?: string;
    readonly repeats?: outputs.GetEscalationRepeat[];
    readonly rules?: outputs.GetEscalationRule[];
}
export function getEscalationOutput(args: GetEscalationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEscalationResult> {
    return pulumi.output(args).apply((a: any) => getEscalation(a, opts))
}

/**
 * A collection of arguments for invoking getEscalation.
 */
export interface GetEscalationOutputArgs {
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    ownerTeamId?: pulumi.Input<string>;
    repeats?: pulumi.Input<pulumi.Input<inputs.GetEscalationRepeatArgs>[]>;
    rules?: pulumi.Input<pulumi.Input<inputs.GetEscalationRuleArgs>[]>;
}
